<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_191_collectd-4.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">us_handle_client<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">arg<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">fd<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">fh<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">buffer<pos:position pos:line="5" pos:column="20"/></name><index pos:line="5" pos:column="20">[<expr><literal type="number" pos:line="5" pos:column="21">1024<pos:position pos:line="5" pos:column="25"/></literal></expr>]<pos:position pos:line="5" pos:column="26"/></index></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name><name pos:line="6" pos:column="15">fields<pos:position pos:line="6" pos:column="21"/></name><index pos:line="6" pos:column="21">[<expr><literal type="number" pos:line="6" pos:column="22">128<pos:position pos:line="6" pos:column="25"/></literal></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type>   <name pos:line="7" pos:column="15">fields_num<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">fd<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <operator pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></operator><operator pos:line="9" pos:column="15">(<pos:position pos:line="9" pos:column="16"/></operator><operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></operator><operator pos:line="9" pos:column="22">)<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="24">arg<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">free<pos:position pos:line="10" pos:column="13"/></name> <argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">arg<pos:position pos:line="10" pos:column="18"/></name></expr></argument>)<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">arg<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">NULL<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">DEBUG<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="string" pos:line="13" pos:column="16">"Reading from fd #%i"<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">fd<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">fh<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">fdopen<pos:position pos:line="15" pos:column="20"/></name> <argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">fd<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="26">"r+"<pos:position pos:line="15" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">fh<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">==<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">NULL<pos:position pos:line="16" pos:column="23"/></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24">
	<block pos:line="17" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">char<pos:position pos:line="18" pos:column="21"/></name></type> <name><name pos:line="18" pos:column="22">errbuf<pos:position pos:line="18" pos:column="28"/></name><index pos:line="18" pos:column="28">[<expr><literal type="number" pos:line="18" pos:column="29">1024<pos:position pos:line="18" pos:column="33"/></literal></expr>]<pos:position pos:line="18" pos:column="34"/></index></name></decl>;<pos:position pos:line="18" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">ERROR<pos:position pos:line="19" pos:column="22"/></name> <argument_list pos:line="19" pos:column="23">(<argument><expr><literal type="string" pos:line="19" pos:column="24">"unixsock plugin: fdopen failed: %s"<pos:position pos:line="19" pos:column="60"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="20" pos:column="33">sstrerror<pos:position pos:line="20" pos:column="42"/></name> <argument_list pos:line="20" pos:column="43">(<argument><expr><name pos:line="20" pos:column="44">errno<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">errbuf<pos:position pos:line="20" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="59">sizeof <argument_list pos:line="20" pos:column="66">(<argument><expr><name pos:line="20" pos:column="67">errbuf<pos:position pos:line="20" pos:column="73"/></name></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">close<pos:position pos:line="21" pos:column="22"/></name> <argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">fd<pos:position pos:line="21" pos:column="26"/></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">pthread_exit<pos:position pos:line="22" pos:column="29"/></name> <argument_list pos:line="22" pos:column="30">(<argument><expr><operator pos:line="22" pos:column="31">(<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="32">void<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">*<pos:position pos:line="22" pos:column="38"/></operator><operator pos:line="22" pos:column="38">)<pos:position pos:line="22" pos:column="39"/></operator> <literal type="number" pos:line="22" pos:column="40">1<pos:position pos:line="22" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<while pos:line="25" pos:column="9">while <condition pos:line="25" pos:column="15">(<expr><call><name pos:line="25" pos:column="16">fgets<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">buffer<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="31">sizeof <argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">buffer<pos:position pos:line="25" pos:column="45"/></name></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">fh<pos:position pos:line="25" pos:column="50"/></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call> <operator pos:line="25" pos:column="52">!=<pos:position pos:line="25" pos:column="54"/></operator> <name pos:line="25" pos:column="55">NULL<pos:position pos:line="25" pos:column="59"/></name></expr>)<pos:position pos:line="25" pos:column="60"/></condition>
	<block pos:line="26" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="27" pos:column="17">int<pos:position pos:line="27" pos:column="20"/></name></type> <name pos:line="27" pos:column="21">len<pos:position pos:line="27" pos:column="24"/></name></decl>;<pos:position pos:line="27" pos:column="25"/></decl_stmt>

		<expr_stmt><expr><name pos:line="29" pos:column="17">len<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">strlen<pos:position pos:line="29" pos:column="29"/></name> <argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">buffer<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
		<while pos:line="30" pos:column="17">while <condition pos:line="30" pos:column="23">(<expr><operator pos:line="30" pos:column="24">(<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">len<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">&gt;<pos:position pos:line="30" pos:column="33"/></operator> <literal type="number" pos:line="30" pos:column="31">0<pos:position pos:line="30" pos:column="32"/></literal><operator pos:line="30" pos:column="32">)<pos:position pos:line="30" pos:column="33"/></operator>
				<operator pos:line="31" pos:column="33">&amp;&amp;<pos:position pos:line="31" pos:column="43"/></operator> <operator pos:line="31" pos:column="36">(<pos:position pos:line="31" pos:column="37"/></operator><operator pos:line="31" pos:column="37">(<pos:position pos:line="31" pos:column="38"/></operator><name><name pos:line="31" pos:column="38">buffer<pos:position pos:line="31" pos:column="44"/></name><index pos:line="31" pos:column="44">[<expr><name pos:line="31" pos:column="45">len<pos:position pos:line="31" pos:column="48"/></name> <operator pos:line="31" pos:column="49">-<pos:position pos:line="31" pos:column="50"/></operator> <literal type="number" pos:line="31" pos:column="51">1<pos:position pos:line="31" pos:column="52"/></literal></expr>]<pos:position pos:line="31" pos:column="53"/></index></name> <operator pos:line="31" pos:column="54">==<pos:position pos:line="31" pos:column="56"/></operator> <literal type="char" pos:line="31" pos:column="57">'\n'<pos:position pos:line="31" pos:column="61"/></literal><operator pos:line="31" pos:column="61">)<pos:position pos:line="31" pos:column="62"/></operator> <operator pos:line="31" pos:column="63">||<pos:position pos:line="31" pos:column="65"/></operator> <operator pos:line="31" pos:column="66">(<pos:position pos:line="31" pos:column="67"/></operator><name><name pos:line="31" pos:column="67">buffer<pos:position pos:line="31" pos:column="73"/></name><index pos:line="31" pos:column="73">[<expr><name pos:line="31" pos:column="74">len<pos:position pos:line="31" pos:column="77"/></name> <operator pos:line="31" pos:column="78">-<pos:position pos:line="31" pos:column="79"/></operator> <literal type="number" pos:line="31" pos:column="80">1<pos:position pos:line="31" pos:column="81"/></literal></expr>]<pos:position pos:line="31" pos:column="82"/></index></name> <operator pos:line="31" pos:column="83">==<pos:position pos:line="31" pos:column="85"/></operator> <literal type="char" pos:line="31" pos:column="86">'\r'<pos:position pos:line="31" pos:column="90"/></literal><operator pos:line="31" pos:column="90">)<pos:position pos:line="31" pos:column="91"/></operator><operator pos:line="31" pos:column="91">)<pos:position pos:line="31" pos:column="92"/></operator></expr>)<pos:position pos:line="31" pos:column="93"/></condition>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="25">buffer<pos:position pos:line="32" pos:column="31"/></name><index pos:line="32" pos:column="31">[<expr><operator pos:line="32" pos:column="32">--<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">len<pos:position pos:line="32" pos:column="37"/></name></expr>]<pos:position pos:line="32" pos:column="38"/></index></name> <operator pos:line="32" pos:column="39">=<pos:position pos:line="32" pos:column="40"/></operator> <literal type="char" pos:line="32" pos:column="41">'\0'<pos:position pos:line="32" pos:column="45"/></literal></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt></block></while>

		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">len<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">==<pos:position pos:line="34" pos:column="27"/></operator> <literal type="number" pos:line="34" pos:column="28">0<pos:position pos:line="34" pos:column="29"/></literal></expr>)<pos:position pos:line="34" pos:column="30"/></condition><then pos:line="34" pos:column="30">
			<block type="pseudo"><continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="37" pos:column="17">DEBUG<pos:position pos:line="37" pos:column="22"/></name> <argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="string" pos:line="37" pos:column="24">"fgets -&gt; buffer = %s; len = %i;"<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="59">buffer<pos:position pos:line="37" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="67">len<pos:position pos:line="37" pos:column="70"/></name></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="72"/></expr_stmt>

		<expr_stmt><expr><name pos:line="39" pos:column="17">fields_num<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <call><name pos:line="39" pos:column="30">strsplit<pos:position pos:line="39" pos:column="38"/></name> <argument_list pos:line="39" pos:column="39">(<argument><expr><name pos:line="39" pos:column="40">buffer<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="48">fields<pos:position pos:line="39" pos:column="54"/></name></expr></argument>,
				<argument><expr><sizeof pos:line="40" pos:column="33">sizeof <argument_list pos:line="40" pos:column="40">(<argument><expr><name pos:line="40" pos:column="41">fields<pos:position pos:line="40" pos:column="47"/></name></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></sizeof> <operator pos:line="40" pos:column="49">/<pos:position pos:line="40" pos:column="50"/></operator> <sizeof pos:line="40" pos:column="51">sizeof <argument_list pos:line="40" pos:column="58">(<argument><expr><name><name pos:line="40" pos:column="59">fields<pos:position pos:line="40" pos:column="65"/></name><index pos:line="40" pos:column="65">[<expr><literal type="number" pos:line="40" pos:column="66">0<pos:position pos:line="40" pos:column="67"/></literal></expr>]<pos:position pos:line="40" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="71"/></expr_stmt>

		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">fields_num<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">&lt;<pos:position pos:line="42" pos:column="36"/></operator> <literal type="number" pos:line="42" pos:column="34">1<pos:position pos:line="42" pos:column="35"/></literal></expr>)<pos:position pos:line="42" pos:column="36"/></condition><then pos:line="42" pos:column="36">
		<block pos:line="43" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">close<pos:position pos:line="44" pos:column="30"/></name> <argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">fd<pos:position pos:line="44" pos:column="34"/></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
			<break pos:line="45" pos:column="25">break;<pos:position pos:line="45" pos:column="31"/></break>
		}<pos:position pos:line="46" pos:column="18"/></block></then></if>

		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><call><name pos:line="48" pos:column="21">strcasecmp<pos:position pos:line="48" pos:column="31"/></name> <argument_list pos:line="48" pos:column="32">(<argument><expr><name><name pos:line="48" pos:column="33">fields<pos:position pos:line="48" pos:column="39"/></name><index pos:line="48" pos:column="39">[<expr><literal type="number" pos:line="48" pos:column="40">0<pos:position pos:line="48" pos:column="41"/></literal></expr>]<pos:position pos:line="48" pos:column="42"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="44">"getval"<pos:position pos:line="48" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call> <operator pos:line="48" pos:column="54">==<pos:position pos:line="48" pos:column="56"/></operator> <literal type="number" pos:line="48" pos:column="57">0<pos:position pos:line="48" pos:column="58"/></literal></expr>)<pos:position pos:line="48" pos:column="59"/></condition><then pos:line="48" pos:column="59">
		<block pos:line="49" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">us_handle_getval<pos:position pos:line="50" pos:column="41"/></name> <argument_list pos:line="50" pos:column="42">(<argument><expr><name pos:line="50" pos:column="43">fh<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">fields<pos:position pos:line="50" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="55">fields_num<pos:position pos:line="50" pos:column="65"/></name></expr></argument>)<pos:position pos:line="50" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></then>
		<elseif pos:line="52" pos:column="17">else <if pos:line="52" pos:column="22">if <condition pos:line="52" pos:column="25">(<expr><call><name pos:line="52" pos:column="26">strcasecmp<pos:position pos:line="52" pos:column="36"/></name> <argument_list pos:line="52" pos:column="37">(<argument><expr><name><name pos:line="52" pos:column="38">fields<pos:position pos:line="52" pos:column="44"/></name><index pos:line="52" pos:column="44">[<expr><literal type="number" pos:line="52" pos:column="45">0<pos:position pos:line="52" pos:column="46"/></literal></expr>]<pos:position pos:line="52" pos:column="47"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="49">"putval"<pos:position pos:line="52" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call> <operator pos:line="52" pos:column="59">==<pos:position pos:line="52" pos:column="61"/></operator> <literal type="number" pos:line="52" pos:column="62">0<pos:position pos:line="52" pos:column="63"/></literal></expr>)<pos:position pos:line="52" pos:column="64"/></condition><then pos:line="52" pos:column="64">
		<block pos:line="53" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="54" pos:column="25">handle_putval<pos:position pos:line="54" pos:column="38"/></name> <argument_list pos:line="54" pos:column="39">(<argument><expr><name pos:line="54" pos:column="40">fh<pos:position pos:line="54" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="44">fields<pos:position pos:line="54" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="52">fields_num<pos:position pos:line="54" pos:column="62"/></name></expr></argument>)<pos:position pos:line="54" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="56" pos:column="17">else <if pos:line="56" pos:column="22">if <condition pos:line="56" pos:column="25">(<expr><call><name pos:line="56" pos:column="26">strcasecmp<pos:position pos:line="56" pos:column="36"/></name> <argument_list pos:line="56" pos:column="37">(<argument><expr><name><name pos:line="56" pos:column="38">fields<pos:position pos:line="56" pos:column="44"/></name><index pos:line="56" pos:column="44">[<expr><literal type="number" pos:line="56" pos:column="45">0<pos:position pos:line="56" pos:column="46"/></literal></expr>]<pos:position pos:line="56" pos:column="47"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="49">"listval"<pos:position pos:line="56" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="59"/></argument_list></call> <operator pos:line="56" pos:column="60">==<pos:position pos:line="56" pos:column="62"/></operator> <literal type="number" pos:line="56" pos:column="63">0<pos:position pos:line="56" pos:column="64"/></literal></expr>)<pos:position pos:line="56" pos:column="65"/></condition><then pos:line="56" pos:column="65">
		<block pos:line="57" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">us_handle_listval<pos:position pos:line="58" pos:column="42"/></name> <argument_list pos:line="58" pos:column="43">(<argument><expr><name pos:line="58" pos:column="44">fh<pos:position pos:line="58" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="48">fields<pos:position pos:line="58" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="56">fields_num<pos:position pos:line="58" pos:column="66"/></name></expr></argument>)<pos:position pos:line="58" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if></elseif>
		<else pos:line="60" pos:column="17">else
		<block pos:line="61" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="62" pos:column="25">fprintf<pos:position pos:line="62" pos:column="32"/></name> <argument_list pos:line="62" pos:column="33">(<argument><expr><name pos:line="62" pos:column="34">fh<pos:position pos:line="62" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="38">"-1 Unknown command: %s\n"<pos:position pos:line="62" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="66">fields<pos:position pos:line="62" pos:column="72"/></name><index pos:line="62" pos:column="72">[<expr><literal type="number" pos:line="62" pos:column="73">0<pos:position pos:line="62" pos:column="74"/></literal></expr>]<pos:position pos:line="62" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="62" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="63" pos:column="25">fflush<pos:position pos:line="63" pos:column="31"/></name> <argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">fh<pos:position pos:line="63" pos:column="35"/></name></expr></argument>)<pos:position pos:line="63" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></else></if>
	}<pos:position pos:line="65" pos:column="10"/></block></while> <comment type="block" pos:line="65" pos:column="11">/* while (fgets) */</comment>

	<expr_stmt><expr><call><name pos:line="67" pos:column="9">DEBUG<pos:position pos:line="67" pos:column="14"/></name> <argument_list pos:line="67" pos:column="15">(<argument><expr><literal type="string" pos:line="67" pos:column="16">"Exiting.."<pos:position pos:line="67" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">close<pos:position pos:line="68" pos:column="14"/></name> <argument_list pos:line="68" pos:column="15">(<argument><expr><name pos:line="68" pos:column="16">fd<pos:position pos:line="68" pos:column="18"/></name></expr></argument>)<pos:position pos:line="68" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="20"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="70" pos:column="9">pthread_exit<pos:position pos:line="70" pos:column="21"/></name> <argument_list pos:line="70" pos:column="22">(<argument><expr><operator pos:line="70" pos:column="23">(<pos:position pos:line="70" pos:column="24"/></operator><name pos:line="70" pos:column="24">void<pos:position pos:line="70" pos:column="28"/></name> <operator pos:line="70" pos:column="29">*<pos:position pos:line="70" pos:column="30"/></operator><operator pos:line="70" pos:column="30">)<pos:position pos:line="70" pos:column="31"/></operator> <literal type="number" pos:line="70" pos:column="32">0<pos:position pos:line="70" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

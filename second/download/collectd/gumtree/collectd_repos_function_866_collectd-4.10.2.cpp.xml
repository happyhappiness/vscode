<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_866_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_submit_volume_usage_data<pos:position pos:line="1" pos:column="40"/></name> <parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">hostname<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="64">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">cfg_volume_usage_t<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">cfg_volume<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">interval<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">data_volume_usage_t<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">v<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">v<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <name><name pos:line="6" pos:column="18">cfg_volume<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">volumes<pos:position pos:line="6" pos:column="37"/></name></name></expr>;<pos:position pos:line="6" pos:column="38"/></init> <condition><expr><name pos:line="6" pos:column="39">v<pos:position pos:line="6" pos:column="40"/></name> <operator pos:line="6" pos:column="41">!=<pos:position pos:line="6" pos:column="43"/></operator> <name pos:line="6" pos:column="44">NULL<pos:position pos:line="6" pos:column="48"/></name></expr>;<pos:position pos:line="6" pos:column="49"/></condition> <incr><expr><name pos:line="6" pos:column="50">v<pos:position pos:line="6" pos:column="51"/></name> <operator pos:line="6" pos:column="52">=<pos:position pos:line="6" pos:column="53"/></operator> <name><name pos:line="6" pos:column="54">v<pos:position pos:line="6" pos:column="55"/></name><operator pos:line="6" pos:column="55">-&gt;<pos:position pos:line="6" pos:column="60"/></operator><name pos:line="6" pos:column="57">next<pos:position pos:line="6" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="62"/></control>
	<block pos:line="7" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name></type> <name><name pos:line="8" pos:column="22">plugin_instance<pos:position pos:line="8" pos:column="37"/></name><index pos:line="8" pos:column="37">[<expr><name pos:line="8" pos:column="38">DATA_MAX_NAME_LEN<pos:position pos:line="8" pos:column="55"/></name></expr>]<pos:position pos:line="8" pos:column="56"/></index></name></decl>;<pos:position pos:line="8" pos:column="57"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="10" pos:column="17">uint64_t<pos:position pos:line="10" pos:column="25"/></name></type> <name pos:line="10" pos:column="26">norm_used<pos:position pos:line="10" pos:column="35"/></name> <init pos:line="10" pos:column="36">= <expr><name><name pos:line="10" pos:column="38">v<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">norm_used<pos:position pos:line="10" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">uint64_t<pos:position pos:line="11" pos:column="25"/></name></type> <name pos:line="11" pos:column="26">norm_free<pos:position pos:line="11" pos:column="35"/></name> <init pos:line="11" pos:column="36">= <expr><name><name pos:line="11" pos:column="38">v<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">norm_free<pos:position pos:line="11" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">uint64_t<pos:position pos:line="12" pos:column="25"/></name></type> <name pos:line="12" pos:column="26">sis_saved<pos:position pos:line="12" pos:column="35"/></name> <init pos:line="12" pos:column="36">= <expr><name><name pos:line="12" pos:column="38">v<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">sis_saved<pos:position pos:line="12" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">uint64_t<pos:position pos:line="13" pos:column="25"/></name></type> <name pos:line="13" pos:column="26">snap_reserve_used<pos:position pos:line="13" pos:column="43"/></name> <init pos:line="13" pos:column="44">= <expr><literal type="number" pos:line="13" pos:column="46">0<pos:position pos:line="13" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">uint64_t<pos:position pos:line="14" pos:column="25"/></name></type> <name pos:line="14" pos:column="26">snap_reserve_free<pos:position pos:line="14" pos:column="43"/></name> <init pos:line="14" pos:column="44">= <expr><name><name pos:line="14" pos:column="46">v<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">-&gt;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="49">snap_reserved<pos:position pos:line="14" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="63"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">uint64_t<pos:position pos:line="15" pos:column="25"/></name></type> <name pos:line="15" pos:column="26">snap_norm_used<pos:position pos:line="15" pos:column="40"/></name> <init pos:line="15" pos:column="41">= <expr><name><name pos:line="15" pos:column="43">v<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">snap_used<pos:position pos:line="15" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="56"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="17" pos:column="17">ssnprintf<pos:position pos:line="17" pos:column="26"/></name> <argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">plugin_instance<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="45">sizeof <argument_list pos:line="17" pos:column="52">(<argument><expr><name pos:line="17" pos:column="53">plugin_instance<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></sizeof></expr></argument>,
				<argument><expr><literal type="string" pos:line="18" pos:column="33">"volume-%s"<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="46">v<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">name<pos:position pos:line="18" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">HAS_ALL_FLAGS<pos:position pos:line="20" pos:column="34"/></name> <argument_list pos:line="20" pos:column="35">(<argument><expr><name><name pos:line="20" pos:column="36">v<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">flags<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">HAVE_VOLUME_USAGE_SNAP_USED<pos:position pos:line="20" pos:column="73"/></name> <operator pos:line="20" pos:column="74">|<pos:position pos:line="20" pos:column="75"/></operator> <name pos:line="20" pos:column="76">HAVE_VOLUME_USAGE_SNAP_RSVD<pos:position pos:line="20" pos:column="103"/></name></expr></argument>)<pos:position pos:line="20" pos:column="104"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="105"/></condition><then pos:line="20" pos:column="105"> <block pos:line="20" pos:column="106">{
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name><name pos:line="21" pos:column="29">v<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">snap_reserved<pos:position pos:line="21" pos:column="45"/></name></name> <operator pos:line="21" pos:column="46">&gt;<pos:position pos:line="21" pos:column="50"/></operator> <name><name pos:line="21" pos:column="48">v<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">-&gt;<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="51">snap_used<pos:position pos:line="21" pos:column="60"/></name></name></expr>)<pos:position pos:line="21" pos:column="61"/></condition><then pos:line="21" pos:column="61"> <block pos:line="21" pos:column="62">{
				<expr_stmt><expr><name pos:line="22" pos:column="33">snap_reserve_free<pos:position pos:line="22" pos:column="50"/></name> <operator pos:line="22" pos:column="51">=<pos:position pos:line="22" pos:column="52"/></operator> <name><name pos:line="22" pos:column="53">v<pos:position pos:line="22" pos:column="54"/></name><operator pos:line="22" pos:column="54">-&gt;<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="56">snap_reserved<pos:position pos:line="22" pos:column="69"/></name></name> <operator pos:line="22" pos:column="70">-<pos:position pos:line="22" pos:column="71"/></operator> <name><name pos:line="22" pos:column="72">v<pos:position pos:line="22" pos:column="73"/></name><operator pos:line="22" pos:column="73">-&gt;<pos:position pos:line="22" pos:column="78"/></operator><name pos:line="22" pos:column="75">snap_used<pos:position pos:line="22" pos:column="84"/></name></name></expr>;<pos:position pos:line="22" pos:column="85"/></expr_stmt>
				<expr_stmt><expr><name pos:line="23" pos:column="33">snap_reserve_used<pos:position pos:line="23" pos:column="50"/></name> <operator pos:line="23" pos:column="51">=<pos:position pos:line="23" pos:column="52"/></operator> <name><name pos:line="23" pos:column="53">v<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">-&gt;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="56">snap_used<pos:position pos:line="23" pos:column="65"/></name></name></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>
				<expr_stmt><expr><name pos:line="24" pos:column="33">snap_norm_used<pos:position pos:line="24" pos:column="47"/></name> <operator pos:line="24" pos:column="48">=<pos:position pos:line="24" pos:column="49"/></operator> <literal type="number" pos:line="24" pos:column="50">0<pos:position pos:line="24" pos:column="51"/></literal></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="25" pos:column="26"/></block></then> <else pos:line="25" pos:column="27">else <block pos:line="25" pos:column="32">{
				<expr_stmt><expr><name pos:line="26" pos:column="33">snap_reserve_free<pos:position pos:line="26" pos:column="50"/></name> <operator pos:line="26" pos:column="51">=<pos:position pos:line="26" pos:column="52"/></operator> <literal type="number" pos:line="26" pos:column="53">0<pos:position pos:line="26" pos:column="54"/></literal></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><name pos:line="27" pos:column="33">snap_reserve_used<pos:position pos:line="27" pos:column="50"/></name> <operator pos:line="27" pos:column="51">=<pos:position pos:line="27" pos:column="52"/></operator> <name><name pos:line="27" pos:column="53">v<pos:position pos:line="27" pos:column="54"/></name><operator pos:line="27" pos:column="54">-&gt;<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="56">snap_reserved<pos:position pos:line="27" pos:column="69"/></name></name></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><name pos:line="28" pos:column="33">snap_norm_used<pos:position pos:line="28" pos:column="47"/></name> <operator pos:line="28" pos:column="48">=<pos:position pos:line="28" pos:column="49"/></operator> <name><name pos:line="28" pos:column="50">v<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">-&gt;<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="53">snap_used<pos:position pos:line="28" pos:column="62"/></name></name> <operator pos:line="28" pos:column="63">-<pos:position pos:line="28" pos:column="64"/></operator> <name><name pos:line="28" pos:column="65">v<pos:position pos:line="28" pos:column="66"/></name><operator pos:line="28" pos:column="66">-&gt;<pos:position pos:line="28" pos:column="71"/></operator><name pos:line="28" pos:column="68">snap_reserved<pos:position pos:line="28" pos:column="81"/></name></name></expr>;<pos:position pos:line="28" pos:column="82"/></expr_stmt>
			}<pos:position pos:line="29" pos:column="26"/></block></else></if>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="32" pos:column="17">/* The space used by snapshots but not reserved for them is included in
		 * both, norm_used and snap_norm_used. If possible, subtract this here. */</comment>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">HAS_ALL_FLAGS<pos:position pos:line="34" pos:column="34"/></name> <argument_list pos:line="34" pos:column="35">(<argument><expr><name><name pos:line="34" pos:column="36">v<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">flags<pos:position pos:line="34" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">HAVE_VOLUME_USAGE_NORM_USED<pos:position pos:line="34" pos:column="73"/></name> <operator pos:line="34" pos:column="74">|<pos:position pos:line="34" pos:column="75"/></operator> <name pos:line="34" pos:column="76">HAVE_VOLUME_USAGE_SNAP_USED<pos:position pos:line="34" pos:column="103"/></name></expr></argument>)<pos:position pos:line="34" pos:column="104"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="105"/></condition><then pos:line="34" pos:column="105">
		<block pos:line="35" pos:column="17">{
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><name pos:line="36" pos:column="29">norm_used<pos:position pos:line="36" pos:column="38"/></name> <operator pos:line="36" pos:column="39">&gt;=<pos:position pos:line="36" pos:column="44"/></operator> <name pos:line="36" pos:column="42">snap_norm_used<pos:position pos:line="36" pos:column="56"/></name></expr>)<pos:position pos:line="36" pos:column="57"/></condition><then pos:line="36" pos:column="57">
				<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="33">norm_used<pos:position pos:line="37" pos:column="42"/></name> <operator pos:line="37" pos:column="43">-=<pos:position pos:line="37" pos:column="45"/></operator> <name pos:line="37" pos:column="46">snap_norm_used<pos:position pos:line="37" pos:column="60"/></name></expr>;<pos:position pos:line="37" pos:column="61"/></expr_stmt></block></then>
			<else pos:line="38" pos:column="25">else
			<block pos:line="39" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="40" pos:column="33">ERROR<pos:position pos:line="40" pos:column="38"/></name> <argument_list pos:line="40" pos:column="39">(<argument><expr><literal type="string" pos:line="40" pos:column="40">"netapp plugin: (norm_used = %"<pos:position pos:line="40" pos:column="71"/></literal><name pos:line="40" pos:column="71">PRIu64<pos:position pos:line="40" pos:column="77"/></name><literal type="string" pos:line="40" pos:column="77">") &lt; (snap_norm_used = "<pos:position pos:line="40" pos:column="104"/></literal>
						<literal type="string" pos:line="41" pos:column="49">"%"<pos:position pos:line="41" pos:column="52"/></literal><name pos:line="41" pos:column="52">PRIu64<pos:position pos:line="41" pos:column="58"/></name><literal type="string" pos:line="41" pos:column="58">") for host %s. Invalidating both."<pos:position pos:line="41" pos:column="93"/></literal></expr></argument>,
						<argument><expr><name pos:line="42" pos:column="49">norm_used<pos:position pos:line="42" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="60">snap_norm_used<pos:position pos:line="42" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="76">hostname<pos:position pos:line="42" pos:column="84"/></name></expr></argument>)<pos:position pos:line="42" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="86"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="43" pos:column="33">v<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">-&gt;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="36">flags<pos:position pos:line="43" pos:column="41"/></name></name> <operator pos:line="43" pos:column="42">&amp;=<pos:position pos:line="43" pos:column="48"/></operator> <operator pos:line="43" pos:column="45">~<pos:position pos:line="43" pos:column="46"/></operator><operator pos:line="43" pos:column="46">(<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="47">HAVE_VOLUME_USAGE_NORM_USED<pos:position pos:line="43" pos:column="74"/></name> <operator pos:line="43" pos:column="75">|<pos:position pos:line="43" pos:column="76"/></operator> <name pos:line="43" pos:column="77">HAVE_VOLUME_USAGE_SNAP_USED<pos:position pos:line="43" pos:column="104"/></name><operator pos:line="43" pos:column="104">)<pos:position pos:line="43" pos:column="105"/></operator></expr>;<pos:position pos:line="43" pos:column="106"/></expr_stmt>
			}<pos:position pos:line="44" pos:column="26"/></block></else></if>
		}<pos:position pos:line="45" pos:column="18"/></block></then></if>

		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><call><name pos:line="47" pos:column="21">HAS_ALL_FLAGS<pos:position pos:line="47" pos:column="34"/></name> <argument_list pos:line="47" pos:column="35">(<argument><expr><name><name pos:line="47" pos:column="36">v<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">-&gt;<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="39">flags<pos:position pos:line="47" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="46">HAVE_VOLUME_USAGE_NORM_FREE<pos:position pos:line="47" pos:column="73"/></name></expr></argument>)<pos:position pos:line="47" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="75"/></condition><then pos:line="47" pos:column="75">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">submit_double<pos:position pos:line="48" pos:column="38"/></name> <argument_list pos:line="48" pos:column="39">(<argument><expr><name pos:line="48" pos:column="40">hostname<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <comment type="block" pos:line="48" pos:column="50">/* plugin instance = */</comment> <argument><expr><name pos:line="48" pos:column="74">plugin_instance<pos:position pos:line="48" pos:column="89"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="49" pos:column="41">"df_complex"<pos:position pos:line="49" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="55">"free"<pos:position pos:line="49" pos:column="61"/></literal></expr></argument>,
					<argument><expr><operator pos:line="50" pos:column="41">(<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="42">double<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">)<pos:position pos:line="50" pos:column="49"/></operator> <name pos:line="50" pos:column="50">norm_free<pos:position pos:line="50" pos:column="59"/></name></expr></argument>, <comment type="block" pos:line="50" pos:column="61">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="50" pos:column="79">0<pos:position pos:line="50" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="82">interval<pos:position pos:line="50" pos:column="90"/></name></expr></argument>)<pos:position pos:line="50" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="92"/></expr_stmt></block></then></if>

		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><call><name pos:line="52" pos:column="21">HAS_ALL_FLAGS<pos:position pos:line="52" pos:column="34"/></name> <argument_list pos:line="52" pos:column="35">(<argument><expr><name><name pos:line="52" pos:column="36">v<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">-&gt;<pos:position pos:line="52" pos:column="42"/></operator><name pos:line="52" pos:column="39">flags<pos:position pos:line="52" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="46">HAVE_VOLUME_USAGE_SIS_SAVED<pos:position pos:line="52" pos:column="73"/></name></expr></argument>)<pos:position pos:line="52" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="75"/></condition><then pos:line="52" pos:column="75">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="25">submit_double<pos:position pos:line="53" pos:column="38"/></name> <argument_list pos:line="53" pos:column="39">(<argument><expr><name pos:line="53" pos:column="40">hostname<pos:position pos:line="53" pos:column="48"/></name></expr></argument>, <comment type="block" pos:line="53" pos:column="50">/* plugin instance = */</comment> <argument><expr><name pos:line="53" pos:column="74">plugin_instance<pos:position pos:line="53" pos:column="89"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="54" pos:column="41">"df_complex"<pos:position pos:line="54" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="55">"sis_saved"<pos:position pos:line="54" pos:column="66"/></literal></expr></argument>,
					<argument><expr><operator pos:line="55" pos:column="41">(<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="42">double<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">)<pos:position pos:line="55" pos:column="49"/></operator> <name pos:line="55" pos:column="50">sis_saved<pos:position pos:line="55" pos:column="59"/></name></expr></argument>, <comment type="block" pos:line="55" pos:column="61">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="55" pos:column="79">0<pos:position pos:line="55" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="82">interval<pos:position pos:line="55" pos:column="90"/></name></expr></argument>)<pos:position pos:line="55" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="92"/></expr_stmt></block></then></if>

		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><call><name pos:line="57" pos:column="21">HAS_ALL_FLAGS<pos:position pos:line="57" pos:column="34"/></name> <argument_list pos:line="57" pos:column="35">(<argument><expr><name><name pos:line="57" pos:column="36">v<pos:position pos:line="57" pos:column="37"/></name><operator pos:line="57" pos:column="37">-&gt;<pos:position pos:line="57" pos:column="42"/></operator><name pos:line="57" pos:column="39">flags<pos:position pos:line="57" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="46">HAVE_VOLUME_USAGE_NORM_USED<pos:position pos:line="57" pos:column="73"/></name></expr></argument>)<pos:position pos:line="57" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="75"/></condition><then pos:line="57" pos:column="75">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="25">submit_double<pos:position pos:line="58" pos:column="38"/></name> <argument_list pos:line="58" pos:column="39">(<argument><expr><name pos:line="58" pos:column="40">hostname<pos:position pos:line="58" pos:column="48"/></name></expr></argument>, <comment type="block" pos:line="58" pos:column="50">/* plugin instance = */</comment> <argument><expr><name pos:line="58" pos:column="74">plugin_instance<pos:position pos:line="58" pos:column="89"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="59" pos:column="41">"df_complex"<pos:position pos:line="59" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="55">"used"<pos:position pos:line="59" pos:column="61"/></literal></expr></argument>,
					<argument><expr><operator pos:line="60" pos:column="41">(<pos:position pos:line="60" pos:column="42"/></operator><name pos:line="60" pos:column="42">double<pos:position pos:line="60" pos:column="48"/></name><operator pos:line="60" pos:column="48">)<pos:position pos:line="60" pos:column="49"/></operator> <name pos:line="60" pos:column="50">norm_used<pos:position pos:line="60" pos:column="59"/></name></expr></argument>, <comment type="block" pos:line="60" pos:column="61">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="60" pos:column="79">0<pos:position pos:line="60" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="82">interval<pos:position pos:line="60" pos:column="90"/></name></expr></argument>)<pos:position pos:line="60" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="92"/></expr_stmt></block></then></if>

		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><call><name pos:line="62" pos:column="21">HAS_ALL_FLAGS<pos:position pos:line="62" pos:column="34"/></name> <argument_list pos:line="62" pos:column="35">(<argument><expr><name><name pos:line="62" pos:column="36">v<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">-&gt;<pos:position pos:line="62" pos:column="42"/></operator><name pos:line="62" pos:column="39">flags<pos:position pos:line="62" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="46">HAVE_VOLUME_USAGE_SNAP_RSVD<pos:position pos:line="62" pos:column="73"/></name></expr></argument>)<pos:position pos:line="62" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="75"/></condition><then pos:line="62" pos:column="75">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="25">submit_double<pos:position pos:line="63" pos:column="38"/></name> <argument_list pos:line="63" pos:column="39">(<argument><expr><name pos:line="63" pos:column="40">hostname<pos:position pos:line="63" pos:column="48"/></name></expr></argument>, <comment type="block" pos:line="63" pos:column="50">/* plugin instance = */</comment> <argument><expr><name pos:line="63" pos:column="74">plugin_instance<pos:position pos:line="63" pos:column="89"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="64" pos:column="41">"df_complex"<pos:position pos:line="64" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="55">"snap_reserved"<pos:position pos:line="64" pos:column="70"/></literal></expr></argument>,
					<argument><expr><operator pos:line="65" pos:column="41">(<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="42">double<pos:position pos:line="65" pos:column="48"/></name><operator pos:line="65" pos:column="48">)<pos:position pos:line="65" pos:column="49"/></operator> <name pos:line="65" pos:column="50">snap_reserve_free<pos:position pos:line="65" pos:column="67"/></name></expr></argument>, <comment type="block" pos:line="65" pos:column="69">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="65" pos:column="87">0<pos:position pos:line="65" pos:column="88"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="90">interval<pos:position pos:line="65" pos:column="98"/></name></expr></argument>)<pos:position pos:line="65" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="100"/></expr_stmt></block></then></if>

		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><call><name pos:line="67" pos:column="21">HAS_ALL_FLAGS<pos:position pos:line="67" pos:column="34"/></name> <argument_list pos:line="67" pos:column="35">(<argument><expr><name><name pos:line="67" pos:column="36">v<pos:position pos:line="67" pos:column="37"/></name><operator pos:line="67" pos:column="37">-&gt;<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="39">flags<pos:position pos:line="67" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="46">HAVE_VOLUME_USAGE_SNAP_USED<pos:position pos:line="67" pos:column="73"/></name> <operator pos:line="67" pos:column="74">|<pos:position pos:line="67" pos:column="75"/></operator> <name pos:line="67" pos:column="76">HAVE_VOLUME_USAGE_SNAP_RSVD<pos:position pos:line="67" pos:column="103"/></name></expr></argument>)<pos:position pos:line="67" pos:column="104"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="105"/></condition><then pos:line="67" pos:column="105">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="25">submit_double<pos:position pos:line="68" pos:column="38"/></name> <argument_list pos:line="68" pos:column="39">(<argument><expr><name pos:line="68" pos:column="40">hostname<pos:position pos:line="68" pos:column="48"/></name></expr></argument>, <comment type="block" pos:line="68" pos:column="50">/* plugin instance = */</comment> <argument><expr><name pos:line="68" pos:column="74">plugin_instance<pos:position pos:line="68" pos:column="89"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="69" pos:column="41">"df_complex"<pos:position pos:line="69" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="55">"snap_reserve_used"<pos:position pos:line="69" pos:column="74"/></literal></expr></argument>,
					<argument><expr><operator pos:line="70" pos:column="41">(<pos:position pos:line="70" pos:column="42"/></operator><name pos:line="70" pos:column="42">double<pos:position pos:line="70" pos:column="48"/></name><operator pos:line="70" pos:column="48">)<pos:position pos:line="70" pos:column="49"/></operator> <name pos:line="70" pos:column="50">snap_reserve_used<pos:position pos:line="70" pos:column="67"/></name></expr></argument>, <comment type="block" pos:line="70" pos:column="69">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="70" pos:column="87">0<pos:position pos:line="70" pos:column="88"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="90">interval<pos:position pos:line="70" pos:column="98"/></name></expr></argument>)<pos:position pos:line="70" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="100"/></expr_stmt></block></then></if>

		<if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><call><name pos:line="72" pos:column="21">HAS_ALL_FLAGS<pos:position pos:line="72" pos:column="34"/></name> <argument_list pos:line="72" pos:column="35">(<argument><expr><name><name pos:line="72" pos:column="36">v<pos:position pos:line="72" pos:column="37"/></name><operator pos:line="72" pos:column="37">-&gt;<pos:position pos:line="72" pos:column="42"/></operator><name pos:line="72" pos:column="39">flags<pos:position pos:line="72" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="46">HAVE_VOLUME_USAGE_SNAP_USED<pos:position pos:line="72" pos:column="73"/></name></expr></argument>)<pos:position pos:line="72" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="75"/></condition><then pos:line="72" pos:column="75">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="25">submit_double<pos:position pos:line="73" pos:column="38"/></name> <argument_list pos:line="73" pos:column="39">(<argument><expr><name pos:line="73" pos:column="40">hostname<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <comment type="block" pos:line="73" pos:column="50">/* plugin instance = */</comment> <argument><expr><name pos:line="73" pos:column="74">plugin_instance<pos:position pos:line="73" pos:column="89"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="74" pos:column="41">"df_complex"<pos:position pos:line="74" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="55">"snap_normal_used"<pos:position pos:line="74" pos:column="73"/></literal></expr></argument>,
					<argument><expr><operator pos:line="75" pos:column="41">(<pos:position pos:line="75" pos:column="42"/></operator><name pos:line="75" pos:column="42">double<pos:position pos:line="75" pos:column="48"/></name><operator pos:line="75" pos:column="48">)<pos:position pos:line="75" pos:column="49"/></operator> <name pos:line="75" pos:column="50">snap_norm_used<pos:position pos:line="75" pos:column="64"/></name></expr></argument>, <comment type="block" pos:line="75" pos:column="66">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="75" pos:column="84">0<pos:position pos:line="75" pos:column="85"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="87">interval<pos:position pos:line="75" pos:column="95"/></name></expr></argument>)<pos:position pos:line="75" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="97"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="77" pos:column="17">/* Clear all the HAVE_* flags */</comment>
		<expr_stmt><expr><name><name pos:line="78" pos:column="17">v<pos:position pos:line="78" pos:column="18"/></name><operator pos:line="78" pos:column="18">-&gt;<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="20">flags<pos:position pos:line="78" pos:column="25"/></name></name> <operator pos:line="78" pos:column="26">&amp;=<pos:position pos:line="78" pos:column="32"/></operator> <operator pos:line="78" pos:column="29">~<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="30">HAVE_VOLUME_USAGE_ALL<pos:position pos:line="78" pos:column="51"/></name></expr>;<pos:position pos:line="78" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="79" pos:column="10"/></block></for> <comment type="block" pos:line="79" pos:column="11">/* for (v = cfg_volume-&gt;volumes) */</comment>

	<return pos:line="81" pos:column="9">return <expr><operator pos:line="81" pos:column="16">(<pos:position pos:line="81" pos:column="17"/></operator><literal type="number" pos:line="81" pos:column="17">0<pos:position pos:line="81" pos:column="18"/></literal><operator pos:line="81" pos:column="18">)<pos:position pos:line="81" pos:column="19"/></operator></expr>;<pos:position pos:line="81" pos:column="20"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_102_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">lt_module<pos:position pos:line="1" pos:column="17"/></name></type>
<name pos:line="2" pos:column="1">vm_open<pos:position pos:line="2" pos:column="8"/></name> <parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">lt_user_data<pos:position pos:line="2" pos:column="22"/></name> <name pos:line="2" pos:column="23">LT__UNUSED<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">loader_data<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">filename<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
         <parameter><decl><type><name pos:line="3" pos:column="10">lt_dladvise<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">LT__UNUSED<pos:position pos:line="3" pos:column="32"/></name></type> <name pos:line="3" pos:column="33">advise<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="40"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">lt_module<pos:position pos:line="5" pos:column="12"/></name></type>	<name pos:line="5" pos:column="17">module<pos:position pos:line="5" pos:column="23"/></name>	   <init pos:line="5" pos:column="28">= <expr><literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name>		<modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">ext<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type>		<name><name pos:line="7" pos:column="17">wpath<pos:position pos:line="7" pos:column="22"/></name><index pos:line="7" pos:column="22">[<expr><name pos:line="7" pos:column="23">MAX_PATH<pos:position pos:line="7" pos:column="31"/></name></expr>]<pos:position pos:line="7" pos:column="32"/></index></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type>	<name pos:line="8" pos:column="17">len<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">filename<pos:position pos:line="10" pos:column="16"/></name></expr>)<pos:position pos:line="10" pos:column="17"/></condition><then pos:line="10" pos:column="17">
    <block pos:line="11" pos:column="5">{
      <comment type="block" pos:line="12" pos:column="7">/* Get the name of main module */</comment>
      <expr_stmt><expr><operator pos:line="13" pos:column="7">*<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">wpath<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">GetModuleFileName<pos:position pos:line="14" pos:column="24"/></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">NULL<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="32">wpath<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="39">sizeof <argument_list pos:line="14" pos:column="46">(<argument><expr><name pos:line="14" pos:column="47">wpath<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="15" pos:column="7">filename<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">wpath<pos:position pos:line="15" pos:column="23"/></name></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
  <else pos:line="17" pos:column="3">else
    <block pos:line="18" pos:column="5">{
      <expr_stmt><expr><name pos:line="19" pos:column="7">len<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">LT_STRLEN<pos:position pos:line="19" pos:column="22"/></name> <argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">filename<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>

      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name pos:line="21" pos:column="11">len<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">&gt;=<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="18">MAX_PATH<pos:position pos:line="21" pos:column="26"/></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27">
        <block pos:line="22" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="23" pos:column="11">LT__SETERROR<pos:position pos:line="23" pos:column="23"/></name> <argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">CANNOT_OPEN<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
	  <return pos:line="24" pos:column="11">return <expr><literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr>;<pos:position pos:line="24" pos:column="20"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><name pos:line="27" pos:column="5">HAVE_DECL_CYGWIN_CONV_PATH<pos:position pos:line="27" pos:column="31"/></name></expr></cpp:if>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><call><name pos:line="28" pos:column="11">cygwin_conv_path<pos:position pos:line="28" pos:column="27"/></name> <argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">CCP_POSIX_TO_WIN_A<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="49">filename<pos:position pos:line="28" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="59">wpath<pos:position pos:line="28" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="66">MAX_PATH<pos:position pos:line="28" pos:column="74"/></name></expr></argument>)<pos:position pos:line="28" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="76"/></condition><then pos:line="28" pos:column="76">
	<block pos:line="29" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="30" pos:column="11">LT__SETERROR<pos:position pos:line="30" pos:column="23"/></name> <argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">CANNOT_OPEN<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
	  <return pos:line="31" pos:column="11">return <expr><literal type="number" pos:line="31" pos:column="18">0<pos:position pos:line="31" pos:column="19"/></literal></expr>;<pos:position pos:line="31" pos:column="20"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>
      <expr_stmt><expr><name pos:line="33" pos:column="7">len<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <literal type="number" pos:line="33" pos:column="13">0<pos:position pos:line="33" pos:column="14"/></literal></expr>;<pos:position pos:line="33" pos:column="15"/></expr_stmt>
<cpp:elif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">elif<pos:position pos:line="34" pos:column="6"/></cpp:directive> <expr><call><name pos:line="34" pos:column="7">defined<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">__CYGWIN__<pos:position pos:line="34" pos:column="25"/></name></expr></argument>)<pos:position pos:line="34" pos:column="26"/></argument_list></call></expr></cpp:elif>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">cygwin_conv_to_full_win32_path<pos:position pos:line="35" pos:column="37"/></name> <argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">filename<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">wpath<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">len<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <literal type="number" pos:line="36" pos:column="13">0<pos:position pos:line="36" pos:column="14"/></literal></expr>;<pos:position pos:line="36" pos:column="15"/></expr_stmt>
<cpp:else pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">else<pos:position pos:line="37" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">strcpy<pos:position pos:line="38" pos:column="13"/></name><argument_list pos:line="38" pos:column="13">(<argument><expr><name pos:line="38" pos:column="14">wpath<pos:position pos:line="38" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="21">filename<pos:position pos:line="38" pos:column="29"/></name></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

      <expr_stmt><expr><name pos:line="41" pos:column="7">ext<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">=<pos:position pos:line="41" pos:column="12"/></operator> <call><name pos:line="41" pos:column="13">strrchr<pos:position pos:line="41" pos:column="20"/></name> <argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">wpath<pos:position pos:line="41" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="41" pos:column="29">'.'<pos:position pos:line="41" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><operator pos:line="42" pos:column="11">!<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">ext<pos:position pos:line="42" pos:column="15"/></name></expr>)<pos:position pos:line="42" pos:column="16"/></condition><then pos:line="42" pos:column="16">
	<block pos:line="43" pos:column="9">{
	  <comment type="block" pos:line="44" pos:column="11">/* Append a `.' to stop Windows from adding an
	     implicit `.dll' extension. */</comment>
	  <if pos:line="46" pos:column="11">if <condition pos:line="46" pos:column="14">(<expr><operator pos:line="46" pos:column="15">!<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">len<pos:position pos:line="46" pos:column="19"/></name></expr>)<pos:position pos:line="46" pos:column="20"/></condition><then pos:line="46" pos:column="20">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="13">len<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <call><name pos:line="47" pos:column="19">LT_STRLEN<pos:position pos:line="47" pos:column="28"/></name> <argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">wpath<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt></block></then></if>

	  <if pos:line="49" pos:column="11">if <condition pos:line="49" pos:column="14">(<expr><name pos:line="49" pos:column="15">len<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">+<pos:position pos:line="49" pos:column="20"/></operator> <literal type="number" pos:line="49" pos:column="21">1<pos:position pos:line="49" pos:column="22"/></literal> <operator pos:line="49" pos:column="23">&gt;=<pos:position pos:line="49" pos:column="28"/></operator> <name pos:line="49" pos:column="26">MAX_PATH<pos:position pos:line="49" pos:column="34"/></name></expr>)<pos:position pos:line="49" pos:column="35"/></condition><then pos:line="49" pos:column="35">
	    <block pos:line="50" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="51" pos:column="15">LT__SETERROR<pos:position pos:line="51" pos:column="27"/></name> <argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">CANNOT_OPEN<pos:position pos:line="51" pos:column="40"/></name></expr></argument>)<pos:position pos:line="51" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="42"/></expr_stmt>
	      <return pos:line="52" pos:column="15">return <expr><literal type="number" pos:line="52" pos:column="22">0<pos:position pos:line="52" pos:column="23"/></literal></expr>;<pos:position pos:line="52" pos:column="24"/></return>
	    }<pos:position pos:line="53" pos:column="14"/></block></then></if>

	  <expr_stmt><expr><name><name pos:line="55" pos:column="11">wpath<pos:position pos:line="55" pos:column="16"/></name><index pos:line="55" pos:column="16">[<expr><name pos:line="55" pos:column="17">len<pos:position pos:line="55" pos:column="20"/></name></expr>]<pos:position pos:line="55" pos:column="21"/></index></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <literal type="char" pos:line="55" pos:column="24">'.'<pos:position pos:line="55" pos:column="27"/></literal></expr>;<pos:position pos:line="55" pos:column="28"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="56" pos:column="11">wpath<pos:position pos:line="56" pos:column="16"/></name><index pos:line="56" pos:column="16">[<expr><name pos:line="56" pos:column="17">len<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">+<pos:position pos:line="56" pos:column="21"/></operator><literal type="number" pos:line="56" pos:column="21">1<pos:position pos:line="56" pos:column="22"/></literal></expr>]<pos:position pos:line="56" pos:column="23"/></index></name> <operator pos:line="56" pos:column="24">=<pos:position pos:line="56" pos:column="25"/></operator> <literal type="char" pos:line="56" pos:column="26">'\0'<pos:position pos:line="56" pos:column="30"/></literal></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="57" pos:column="10"/></block></then></if>
    }<pos:position pos:line="58" pos:column="6"/></block></else></if>

  <block pos:line="60" pos:column="3">{
    <comment type="block" pos:line="61" pos:column="5">/* Silence dialog from LoadLibrary on some failures.
       No way to get the error mode, but to set it,
       so set it twice to preserve any previous flags. */</comment>
    <decl_stmt><decl><type><name pos:line="64" pos:column="5">UINT<pos:position pos:line="64" pos:column="9"/></name></type> <name pos:line="64" pos:column="10">errormode<pos:position pos:line="64" pos:column="19"/></name> <init pos:line="64" pos:column="20">= <expr><call><name pos:line="64" pos:column="22">SetErrorMode<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">(<argument><expr><name pos:line="64" pos:column="35">SEM_FAILCRITICALERRORS<pos:position pos:line="64" pos:column="57"/></name></expr></argument>)<pos:position pos:line="64" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="59"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">SetErrorMode<pos:position pos:line="65" pos:column="17"/></name><argument_list pos:line="65" pos:column="17">(<argument><expr><name pos:line="65" pos:column="18">errormode<pos:position pos:line="65" pos:column="27"/></name> <operator pos:line="65" pos:column="28">|<pos:position pos:line="65" pos:column="29"/></operator> <name pos:line="65" pos:column="30">SEM_FAILCRITICALERRORS<pos:position pos:line="65" pos:column="52"/></name></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><name pos:line="67" pos:column="5">module<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">=<pos:position pos:line="67" pos:column="13"/></operator> <call><name pos:line="67" pos:column="14">LoadLibrary<pos:position pos:line="67" pos:column="25"/></name> <argument_list pos:line="67" pos:column="26">(<argument><expr><name pos:line="67" pos:column="27">wpath<pos:position pos:line="67" pos:column="32"/></name></expr></argument>)<pos:position pos:line="67" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="69" pos:column="5">/* Restore the error mode. */</comment>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">SetErrorMode<pos:position pos:line="70" pos:column="17"/></name><argument_list pos:line="70" pos:column="17">(<argument><expr><name pos:line="70" pos:column="18">errormode<pos:position pos:line="70" pos:column="27"/></name></expr></argument>)<pos:position pos:line="70" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="71" pos:column="4"/></block>

  <comment type="block" pos:line="73" pos:column="3">/* libltdl expects this function to fail if it is unable
     to physically load the library.  Sadly, LoadLibrary
     will search the loaded libraries for a match and return
     one of them if the path search load fails.

     We check whether LoadLibrary is returning a handle to
     an already loaded module, and simulate failure if we
     find one. */</comment>
  <block pos:line="81" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="82" pos:column="5">lt_dlhandle<pos:position pos:line="82" pos:column="16"/></name></type> <name pos:line="82" pos:column="17">cur<pos:position pos:line="82" pos:column="20"/></name> <init pos:line="82" pos:column="21">= <expr><literal type="number" pos:line="82" pos:column="23">0<pos:position pos:line="82" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="82" pos:column="25"/></decl_stmt>

    <while pos:line="84" pos:column="5">while <condition pos:line="84" pos:column="11">(<expr><operator pos:line="84" pos:column="12">(<pos:position pos:line="84" pos:column="13"/></operator><name pos:line="84" pos:column="13">cur<pos:position pos:line="84" pos:column="16"/></name> <operator pos:line="84" pos:column="17">=<pos:position pos:line="84" pos:column="18"/></operator> <call><name pos:line="84" pos:column="19">lt_dlhandle_iterate<pos:position pos:line="84" pos:column="38"/></name> <argument_list pos:line="84" pos:column="39">(<argument><expr><name pos:line="84" pos:column="40">iface_id<pos:position pos:line="84" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="50">cur<pos:position pos:line="84" pos:column="53"/></name></expr></argument>)<pos:position pos:line="84" pos:column="54"/></argument_list></call><operator pos:line="84" pos:column="54">)<pos:position pos:line="84" pos:column="55"/></operator></expr>)<pos:position pos:line="84" pos:column="56"/></condition>
      <block pos:line="85" pos:column="7">{
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><operator pos:line="86" pos:column="13">!<pos:position pos:line="86" pos:column="14"/></operator><name><name pos:line="86" pos:column="14">cur<pos:position pos:line="86" pos:column="17"/></name><operator pos:line="86" pos:column="17">-&gt;<pos:position pos:line="86" pos:column="22"/></operator><name pos:line="86" pos:column="19">module<pos:position pos:line="86" pos:column="25"/></name></name></expr>)<pos:position pos:line="86" pos:column="26"/></condition><then pos:line="86" pos:column="26">
          <block pos:line="87" pos:column="11">{
            <expr_stmt><expr><name pos:line="88" pos:column="13">cur<pos:position pos:line="88" pos:column="16"/></name> <operator pos:line="88" pos:column="17">=<pos:position pos:line="88" pos:column="18"/></operator> <literal type="number" pos:line="88" pos:column="19">0<pos:position pos:line="88" pos:column="20"/></literal></expr>;<pos:position pos:line="88" pos:column="21"/></expr_stmt>
            <break pos:line="89" pos:column="13">break;<pos:position pos:line="89" pos:column="19"/></break>
          }<pos:position pos:line="90" pos:column="12"/></block></then></if>

        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name><name pos:line="92" pos:column="13">cur<pos:position pos:line="92" pos:column="16"/></name><operator pos:line="92" pos:column="16">-&gt;<pos:position pos:line="92" pos:column="21"/></operator><name pos:line="92" pos:column="18">module<pos:position pos:line="92" pos:column="24"/></name></name> <operator pos:line="92" pos:column="25">==<pos:position pos:line="92" pos:column="27"/></operator> <name pos:line="92" pos:column="28">module<pos:position pos:line="92" pos:column="34"/></name></expr>)<pos:position pos:line="92" pos:column="35"/></condition><then pos:line="92" pos:column="35">
          <block pos:line="93" pos:column="11">{
            <break pos:line="94" pos:column="13">break;<pos:position pos:line="94" pos:column="19"/></break>
          }<pos:position pos:line="95" pos:column="12"/></block></then></if>
      }<pos:position pos:line="96" pos:column="8"/></block></while>

    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name pos:line="98" pos:column="9">cur<pos:position pos:line="98" pos:column="12"/></name> <operator pos:line="98" pos:column="13">||<pos:position pos:line="98" pos:column="15"/></operator> <operator pos:line="98" pos:column="16">!<pos:position pos:line="98" pos:column="17"/></operator><name pos:line="98" pos:column="17">module<pos:position pos:line="98" pos:column="23"/></name></expr>)<pos:position pos:line="98" pos:column="24"/></condition><then pos:line="98" pos:column="24">
      <block pos:line="99" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">LT__SETERROR<pos:position pos:line="100" pos:column="21"/></name> <argument_list pos:line="100" pos:column="22">(<argument><expr><name pos:line="100" pos:column="23">CANNOT_OPEN<pos:position pos:line="100" pos:column="34"/></name></expr></argument>)<pos:position pos:line="100" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="101" pos:column="9">module<pos:position pos:line="101" pos:column="15"/></name> <operator pos:line="101" pos:column="16">=<pos:position pos:line="101" pos:column="17"/></operator> <literal type="number" pos:line="101" pos:column="18">0<pos:position pos:line="101" pos:column="19"/></literal></expr>;<pos:position pos:line="101" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="102" pos:column="8"/></block></then></if>
  }<pos:position pos:line="103" pos:column="4"/></block>

  <return pos:line="105" pos:column="3">return <expr><name pos:line="105" pos:column="10">module<pos:position pos:line="105" pos:column="16"/></name></expr>;<pos:position pos:line="105" pos:column="17"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

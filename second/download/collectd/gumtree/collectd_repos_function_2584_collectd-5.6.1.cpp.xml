<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2584_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">value_list_t<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">plugin_value_list_clone<pos:position pos:line="1" pos:column="45"/></name> <parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">value_list_t<pos:position pos:line="1" pos:column="59"/></name> <specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">vl_orig<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list> <comment type="block" pos:line="1" pos:column="76">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">value_list_t<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">vl<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">vl_orig<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">==<pos:position pos:line="5" pos:column="23"/></operator> <name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr>)<pos:position pos:line="5" pos:column="29"/></condition><then pos:line="5" pos:column="29">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">NULL<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">)<pos:position pos:line="6" pos:column="30"/></operator></expr>;<pos:position pos:line="6" pos:column="31"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="8" pos:column="9">vl<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">malloc<pos:position pos:line="8" pos:column="20"/></name> <argument_list pos:line="8" pos:column="21">(<argument><expr><sizeof pos:line="8" pos:column="22">sizeof <argument_list pos:line="8" pos:column="29">(<argument><expr><operator pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">vl<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">vl<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator></expr>;<pos:position pos:line="10" pos:column="31"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">memcpy<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">vl<pos:position pos:line="11" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="21">vl_orig<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="30">sizeof <argument_list pos:line="11" pos:column="37">(<argument><expr><operator pos:line="11" pos:column="38">*<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">vl<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="13" pos:column="9">vl<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">values<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <call><name pos:line="13" pos:column="22">calloc<pos:position pos:line="13" pos:column="28"/></name> <argument_list pos:line="13" pos:column="29">(<argument><expr><name><name pos:line="13" pos:column="30">vl_orig<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">-&gt;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="39">values_len<pos:position pos:line="13" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="51">sizeof <argument_list pos:line="13" pos:column="58">(<argument><expr><operator pos:line="13" pos:column="59">*<pos:position pos:line="13" pos:column="60"/></operator><name><name pos:line="13" pos:column="60">vl<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">-&gt;<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="64">values<pos:position pos:line="13" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="73"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">vl<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">values<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">==<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">NULL<pos:position pos:line="14" pos:column="31"/></name></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32">
	<block pos:line="15" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">plugin_value_list_free<pos:position pos:line="16" pos:column="39"/></name> <argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">vl<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">NULL<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">)<pos:position pos:line="17" pos:column="30"/></operator></expr>;<pos:position pos:line="17" pos:column="31"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">memcpy<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><name><name pos:line="19" pos:column="17">vl<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">values<pos:position pos:line="19" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="29">vl_orig<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">values<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="20" pos:column="25">vl_orig<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">values_len<pos:position pos:line="20" pos:column="44"/></name></name> <operator pos:line="20" pos:column="45">*<pos:position pos:line="20" pos:column="46"/></operator> <sizeof pos:line="20" pos:column="47">sizeof <argument_list pos:line="20" pos:column="54">(<argument><expr><operator pos:line="20" pos:column="55">*<pos:position pos:line="20" pos:column="56"/></operator><name><name pos:line="20" pos:column="56">vl<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">-&gt;<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="60">values<pos:position pos:line="20" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="69"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="22" pos:column="9">vl<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">meta<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <call><name pos:line="22" pos:column="20">meta_data_clone<pos:position pos:line="22" pos:column="35"/></name> <argument_list pos:line="22" pos:column="36">(<argument><expr><name><name pos:line="22" pos:column="37">vl<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">meta<pos:position pos:line="22" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name><name pos:line="23" pos:column="14">vl_orig<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">meta<pos:position pos:line="23" pos:column="27"/></name></name> <operator pos:line="23" pos:column="28">!=<pos:position pos:line="23" pos:column="30"/></operator> <name pos:line="23" pos:column="31">NULL<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">)<pos:position pos:line="23" pos:column="36"/></operator> <operator pos:line="23" pos:column="37">&amp;&amp;<pos:position pos:line="23" pos:column="47"/></operator> <operator pos:line="23" pos:column="40">(<pos:position pos:line="23" pos:column="41"/></operator><name><name pos:line="23" pos:column="41">vl<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">meta<pos:position pos:line="23" pos:column="49"/></name></name> <operator pos:line="23" pos:column="50">==<pos:position pos:line="23" pos:column="52"/></operator> <name pos:line="23" pos:column="53">NULL<pos:position pos:line="23" pos:column="57"/></name><operator pos:line="23" pos:column="57">)<pos:position pos:line="23" pos:column="58"/></operator></expr>)<pos:position pos:line="23" pos:column="59"/></condition><then pos:line="23" pos:column="59">
	<block pos:line="24" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">plugin_value_list_free<pos:position pos:line="25" pos:column="39"/></name> <argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">vl<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">NULL<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">)<pos:position pos:line="26" pos:column="30"/></operator></expr>;<pos:position pos:line="26" pos:column="31"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name><name pos:line="29" pos:column="13">vl<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">time<pos:position pos:line="29" pos:column="21"/></name></name> <operator pos:line="29" pos:column="22">==<pos:position pos:line="29" pos:column="24"/></operator> <literal type="number" pos:line="29" pos:column="25">0<pos:position pos:line="29" pos:column="26"/></literal></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="17">vl<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">time<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <call><name pos:line="30" pos:column="28">cdtime<pos:position pos:line="30" pos:column="34"/></name> <argument_list pos:line="30" pos:column="35">()<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="32" pos:column="9">/* Fill in the interval from the thread context, if it is zero. */</comment>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">vl<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">interval<pos:position pos:line="33" pos:column="25"/></name></name> <operator pos:line="33" pos:column="26">==<pos:position pos:line="33" pos:column="28"/></operator> <literal type="number" pos:line="33" pos:column="29">0<pos:position pos:line="33" pos:column="30"/></literal></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31">
	<block pos:line="34" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">plugin_ctx_t<pos:position pos:line="35" pos:column="29"/></name></type> <name pos:line="35" pos:column="30">ctx<pos:position pos:line="35" pos:column="33"/></name> <init pos:line="35" pos:column="34">= <expr><call><name pos:line="35" pos:column="36">plugin_get_ctx<pos:position pos:line="35" pos:column="50"/></name> <argument_list pos:line="35" pos:column="51">()<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="54"/></decl_stmt>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name><name pos:line="37" pos:column="21">ctx<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">.<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="25">interval<pos:position pos:line="37" pos:column="33"/></name></name> <operator pos:line="37" pos:column="34">!=<pos:position pos:line="37" pos:column="36"/></operator> <literal type="number" pos:line="37" pos:column="37">0<pos:position pos:line="37" pos:column="38"/></literal></expr>)<pos:position pos:line="37" pos:column="39"/></condition><then pos:line="37" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="25">vl<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">-&gt;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="29">interval<pos:position pos:line="38" pos:column="37"/></name></name> <operator pos:line="38" pos:column="38">=<pos:position pos:line="38" pos:column="39"/></operator> <name><name pos:line="38" pos:column="40">ctx<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">.<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="44">interval<pos:position pos:line="38" pos:column="52"/></name></name></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt></block></then>
		<else pos:line="39" pos:column="17">else
		<block pos:line="40" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="41" pos:column="25">char<pos:position pos:line="41" pos:column="29"/></name></type> <name><name pos:line="41" pos:column="30">name<pos:position pos:line="41" pos:column="34"/></name><index pos:line="41" pos:column="34">[<expr><literal type="number" pos:line="41" pos:column="35">6<pos:position pos:line="41" pos:column="36"/></literal> <operator pos:line="41" pos:column="37">*<pos:position pos:line="41" pos:column="38"/></operator> <name pos:line="41" pos:column="39">DATA_MAX_NAME_LEN<pos:position pos:line="41" pos:column="56"/></name></expr>]<pos:position pos:line="41" pos:column="57"/></index></name></decl>;<pos:position pos:line="41" pos:column="58"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">FORMAT_VL<pos:position pos:line="42" pos:column="34"/></name> <argument_list pos:line="42" pos:column="35">(<argument><expr><name pos:line="42" pos:column="36">name<pos:position pos:line="42" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="42">sizeof <argument_list pos:line="42" pos:column="49">(<argument><expr><name pos:line="42" pos:column="50">name<pos:position pos:line="42" pos:column="54"/></name></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="42" pos:column="57">vl<pos:position pos:line="42" pos:column="59"/></name></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">ERROR<pos:position pos:line="43" pos:column="30"/></name> <argument_list pos:line="43" pos:column="31">(<argument><expr><literal type="string" pos:line="43" pos:column="32">"plugin_value_list_clone: Unable to determine "<pos:position pos:line="43" pos:column="79"/></literal>
					<literal type="string" pos:line="44" pos:column="41">"interval from context for "<pos:position pos:line="44" pos:column="69"/></literal>
					<literal type="string" pos:line="45" pos:column="41">"value list \"%s\". "<pos:position pos:line="45" pos:column="62"/></literal>
					<literal type="string" pos:line="46" pos:column="41">"This indicates a broken plugin. "<pos:position pos:line="46" pos:column="75"/></literal>
					<literal type="string" pos:line="47" pos:column="41">"Please report this problem to the "<pos:position pos:line="47" pos:column="77"/></literal>
					<literal type="string" pos:line="48" pos:column="41">"collectd mailing list or at "<pos:position pos:line="48" pos:column="71"/></literal>
					<literal type="string" pos:line="49" pos:column="41">"&lt;http://collectd.org/bugs/&gt;."<pos:position pos:line="49" pos:column="77"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="73">name<pos:position pos:line="49" pos:column="77"/></name></expr></argument>)<pos:position pos:line="49" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="79"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="50" pos:column="25">vl<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">-&gt;<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="29">interval<pos:position pos:line="50" pos:column="37"/></name></name> <operator pos:line="50" pos:column="38">=<pos:position pos:line="50" pos:column="39"/></operator> <call><name pos:line="50" pos:column="40">cf_get_default_interval<pos:position pos:line="50" pos:column="63"/></name> <argument_list pos:line="50" pos:column="64">()<pos:position pos:line="50" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></else></if>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>

	<return pos:line="54" pos:column="9">return <expr><operator pos:line="54" pos:column="16">(<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="17">vl<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">)<pos:position pos:line="54" pos:column="20"/></operator></expr>;<pos:position pos:line="54" pos:column="21"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1247_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tcsv_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">user_data_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">ud<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list> <block pos:line="1" pos:column="40">{
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">instance_definition_t<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">id<pos:position pos:line="2" pos:column="30"/></name></decl>;<pos:position pos:line="2" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><name pos:line="3" pos:column="5">id<pos:position pos:line="3" pos:column="7"/></name> <operator pos:line="3" pos:column="8">=<pos:position pos:line="3" pos:column="9"/></operator> <name><name pos:line="3" pos:column="10">ud<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">-&gt;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="14">data<pos:position pos:line="3" pos:column="18"/></name></name></expr>;<pos:position pos:line="3" pos:column="19"/></expr_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">id<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">tail<pos:position pos:line="5" pos:column="17"/></name></name> <operator pos:line="5" pos:column="18">==<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
    <block pos:line="6" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">id<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">tail<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <call><name pos:line="7" pos:column="20">cu_tail_create<pos:position pos:line="7" pos:column="34"/></name> <argument_list pos:line="7" pos:column="35">(<argument><expr><name><name pos:line="7" pos:column="36">id<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="40">path<pos:position pos:line="7" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">id<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">tail<pos:position pos:line="8" pos:column="21"/></name></name> <operator pos:line="8" pos:column="22">==<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30">
        <block pos:line="9" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">ERROR<pos:position pos:line="10" pos:column="18"/></name> <argument_list pos:line="10" pos:column="19">(<argument><expr><literal type="string" pos:line="10" pos:column="20">"tail_csv plugin: cu_tail_create (\"%s\") failed."<pos:position pos:line="10" pos:column="70"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="11" pos:column="21">id<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">path<pos:position pos:line="11" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
            <return pos:line="12" pos:column="13">return <expr><operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><operator pos:line="12" pos:column="21">-<pos:position pos:line="12" pos:column="22"/></operator><literal type="number" pos:line="12" pos:column="22">1<pos:position pos:line="12" pos:column="23"/></literal><operator pos:line="12" pos:column="23">)<pos:position pos:line="12" pos:column="24"/></operator></expr>;<pos:position pos:line="12" pos:column="25"/></return>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><literal type="number" pos:line="16" pos:column="12">42<pos:position pos:line="16" pos:column="14"/></literal></expr>)<pos:position pos:line="16" pos:column="15"/></condition>
    <block pos:line="17" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">char<pos:position pos:line="18" pos:column="13"/></name></type> <name><name pos:line="18" pos:column="14">buffer<pos:position pos:line="18" pos:column="20"/></name><index pos:line="18" pos:column="20">[<expr><literal type="number" pos:line="18" pos:column="21">1024<pos:position pos:line="18" pos:column="25"/></literal></expr>]<pos:position pos:line="18" pos:column="26"/></index></name></decl>;<pos:position pos:line="18" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">size_t<pos:position pos:line="19" pos:column="15"/></name></type> <name pos:line="19" pos:column="16">buffer_len<pos:position pos:line="19" pos:column="26"/></name></decl>;<pos:position pos:line="19" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">status<pos:position pos:line="20" pos:column="19"/></name></decl>;<pos:position pos:line="20" pos:column="20"/></decl_stmt>

        <expr_stmt><expr><name pos:line="22" pos:column="9">status<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">cu_tail_readline<pos:position pos:line="22" pos:column="34"/></name> <argument_list pos:line="22" pos:column="35">(<argument><expr><name><name pos:line="22" pos:column="36">id<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">tail<pos:position pos:line="22" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="46">buffer<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="54">(<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="55">int<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">)<pos:position pos:line="22" pos:column="59"/></operator> <sizeof pos:line="22" pos:column="60">sizeof <argument_list pos:line="22" pos:column="67">(<argument><expr><name pos:line="22" pos:column="68">buffer<pos:position pos:line="22" pos:column="74"/></name></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="77"/></expr_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">status<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">!=<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="23">0<pos:position pos:line="23" pos:column="24"/></literal></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25">
        <block pos:line="24" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">ERROR<pos:position pos:line="25" pos:column="18"/></name> <argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="string" pos:line="25" pos:column="20">"tail_csv plugin: File \"%s\": cu_tail_readline failed "<pos:position pos:line="25" pos:column="76"/></literal>
                    <literal type="string" pos:line="26" pos:column="21">"with status %i."<pos:position pos:line="26" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="40">id<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">path<pos:position pos:line="26" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="50">status<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
            <return pos:line="27" pos:column="13">return <expr><operator pos:line="27" pos:column="20">(<pos:position pos:line="27" pos:column="21"/></operator><operator pos:line="27" pos:column="21">-<pos:position pos:line="27" pos:column="22"/></operator><literal type="number" pos:line="27" pos:column="22">1<pos:position pos:line="27" pos:column="23"/></literal><operator pos:line="27" pos:column="23">)<pos:position pos:line="27" pos:column="24"/></operator></expr>;<pos:position pos:line="27" pos:column="25"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="30" pos:column="9">buffer_len<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <call><name pos:line="30" pos:column="22">strlen<pos:position pos:line="30" pos:column="28"/></name> <argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">buffer<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">buffer_len<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">==<pos:position pos:line="31" pos:column="26"/></operator> <literal type="number" pos:line="31" pos:column="27">0<pos:position pos:line="31" pos:column="28"/></literal></expr>)<pos:position pos:line="31" pos:column="29"/></condition><then pos:line="31" pos:column="29">
            <block type="pseudo"><break pos:line="32" pos:column="13">break;<pos:position pos:line="32" pos:column="19"/></break></block></then></if>

        <expr_stmt><expr><call><name pos:line="34" pos:column="9">tcsv_read_buffer<pos:position pos:line="34" pos:column="25"/></name> <argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">id<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="31">buffer<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">buffer_len<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></while>

    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><literal type="number" pos:line="37" pos:column="13">0<pos:position pos:line="37" pos:column="14"/></literal><operator pos:line="37" pos:column="14">)<pos:position pos:line="37" pos:column="15"/></operator></expr>;<pos:position pos:line="37" pos:column="16"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

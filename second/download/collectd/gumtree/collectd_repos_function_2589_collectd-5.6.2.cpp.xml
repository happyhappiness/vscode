<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2589_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">stop_write_threads<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <comment type="block" pos:line="1" pos:column="38">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">write_queue_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">q<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">i<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">write_threads<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">==<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29">
    <block type="pseudo"><return pos:line="7" pos:column="5">return;<pos:position pos:line="7" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">INFO<pos:position pos:line="9" pos:column="7"/></name><argument_list pos:line="9" pos:column="7">(<argument><expr><literal type="string" pos:line="9" pos:column="8">"collectd: Stopping %zu write threads."<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="49">write_threads_num<pos:position pos:line="9" pos:column="66"/></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">pthread_mutex_lock<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><operator pos:line="11" pos:column="22">&amp;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="23">write_lock<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">write_loop<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">DEBUG<pos:position pos:line="13" pos:column="8"/></name><argument_list pos:line="13" pos:column="8">(<argument><expr><literal type="string" pos:line="13" pos:column="9">"plugin: stop_write_threads: Signalling `write_cond'"<pos:position pos:line="13" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">pthread_cond_broadcast<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><operator pos:line="14" pos:column="26">&amp;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="27">write_cond<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">pthread_mutex_unlock<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="25">write_lock<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>

  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><expr><name pos:line="17" pos:column="8">i<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></init> <condition><expr><name pos:line="17" pos:column="15">i<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&lt;<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="19">write_threads_num<pos:position pos:line="17" pos:column="36"/></name></expr>;<pos:position pos:line="17" pos:column="37"/></condition> <incr><expr><name pos:line="17" pos:column="38">i<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">++<pos:position pos:line="17" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="42"/></control> <block pos:line="17" pos:column="43">{
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">pthread_join<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name><name pos:line="18" pos:column="22">write_threads<pos:position pos:line="18" pos:column="35"/></name><index pos:line="18" pos:column="35">[<expr><name pos:line="18" pos:column="36">i<pos:position pos:line="18" pos:column="37"/></name></expr>]<pos:position pos:line="18" pos:column="38"/></index></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">NULL<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call> <operator pos:line="18" pos:column="46">!=<pos:position pos:line="18" pos:column="48"/></operator> <literal type="number" pos:line="18" pos:column="49">0<pos:position pos:line="18" pos:column="50"/></literal></expr>)<pos:position pos:line="18" pos:column="51"/></condition><then pos:line="18" pos:column="51"> <block pos:line="18" pos:column="52">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">ERROR<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><literal type="string" pos:line="19" pos:column="13">"plugin: stop_write_threads: pthread_join failed."<pos:position pos:line="19" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">write_threads<pos:position pos:line="21" pos:column="18"/></name><index pos:line="21" pos:column="18">[<expr><name pos:line="21" pos:column="19">i<pos:position pos:line="21" pos:column="20"/></name></expr>]<pos:position pos:line="21" pos:column="21"/></index></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">pthread_t<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">)<pos:position pos:line="21" pos:column="35"/></operator><literal type="number" pos:line="21" pos:column="35">0<pos:position pos:line="21" pos:column="36"/></literal></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">sfree<pos:position pos:line="23" pos:column="8"/></name><argument_list pos:line="23" pos:column="8">(<argument><expr><name pos:line="23" pos:column="9">write_threads<pos:position pos:line="23" pos:column="22"/></name></expr></argument>)<pos:position pos:line="23" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="24" pos:column="3">write_threads_num<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <literal type="number" pos:line="24" pos:column="23">0<pos:position pos:line="24" pos:column="24"/></literal></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">pthread_mutex_lock<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><operator pos:line="26" pos:column="22">&amp;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="23">write_lock<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="27" pos:column="3">i<pos:position pos:line="27" pos:column="4"/></name> <operator pos:line="27" pos:column="5">=<pos:position pos:line="27" pos:column="6"/></operator> <literal type="number" pos:line="27" pos:column="7">0<pos:position pos:line="27" pos:column="8"/></literal></expr>;<pos:position pos:line="27" pos:column="9"/></expr_stmt>
  <for pos:line="28" pos:column="3">for <control pos:line="28" pos:column="7">(<init><expr><name pos:line="28" pos:column="8">q<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <name pos:line="28" pos:column="12">write_queue_head<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></init> <condition><expr><name pos:line="28" pos:column="30">q<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">!=<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">NULL<pos:position pos:line="28" pos:column="39"/></name></expr>;<pos:position pos:line="28" pos:column="40"/></condition><incr/>)<pos:position pos:line="28" pos:column="41"/></control> <block pos:line="28" pos:column="42">{
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">write_queue_t<pos:position pos:line="29" pos:column="18"/></name> <modifier pos:line="29" pos:column="19">*<pos:position pos:line="29" pos:column="20"/></modifier></type><name pos:line="29" pos:column="20">q1<pos:position pos:line="29" pos:column="22"/></name> <init pos:line="29" pos:column="23">= <expr><name pos:line="29" pos:column="25">q<pos:position pos:line="29" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">plugin_value_list_free<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name><name pos:line="30" pos:column="28">q<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">vl<pos:position pos:line="30" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">q<pos:position pos:line="31" pos:column="6"/></name> <operator pos:line="31" pos:column="7">=<pos:position pos:line="31" pos:column="8"/></operator> <name><name pos:line="31" pos:column="9">q<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">next<pos:position pos:line="31" pos:column="16"/></name></name></expr>;<pos:position pos:line="31" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">sfree<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><name pos:line="32" pos:column="11">q1<pos:position pos:line="32" pos:column="13"/></name></expr></argument>)<pos:position pos:line="32" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">i<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">++<pos:position pos:line="33" pos:column="8"/></operator></expr>;<pos:position pos:line="33" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></for>
  <expr_stmt><expr><name pos:line="35" pos:column="3">write_queue_head<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <name pos:line="35" pos:column="22">NULL<pos:position pos:line="35" pos:column="26"/></name></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="36" pos:column="3">write_queue_tail<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">NULL<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="37" pos:column="3">write_queue_length<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <literal type="number" pos:line="37" pos:column="24">0<pos:position pos:line="37" pos:column="25"/></literal></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">pthread_mutex_unlock<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><operator pos:line="38" pos:column="24">&amp;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="25">write_lock<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">i<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">&gt;<pos:position pos:line="40" pos:column="13"/></operator> <literal type="number" pos:line="40" pos:column="11">0<pos:position pos:line="40" pos:column="12"/></literal></expr>)<pos:position pos:line="40" pos:column="13"/></condition><then pos:line="40" pos:column="13"> <block pos:line="40" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">WARNING<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><literal type="string" pos:line="41" pos:column="13">"plugin: %zu value list%s left after shutting down "<pos:position pos:line="41" pos:column="65"/></literal>
            <literal type="string" pos:line="42" pos:column="13">"the write threads."<pos:position pos:line="42" pos:column="33"/></literal></expr></argument>,
            <argument><expr><name pos:line="43" pos:column="13">i<pos:position pos:line="43" pos:column="14"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">i<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">==<pos:position pos:line="43" pos:column="21"/></operator> <literal type="number" pos:line="43" pos:column="22">1<pos:position pos:line="43" pos:column="23"/></literal><operator pos:line="43" pos:column="23">)<pos:position pos:line="43" pos:column="24"/></operator></expr> ?<pos:position pos:line="43" pos:column="26"/></condition><then pos:line="43" pos:column="26"> <expr><literal type="string" pos:line="43" pos:column="27">" was"<pos:position pos:line="43" pos:column="33"/></literal></expr> <pos:position pos:line="43" pos:column="34"/></then><else pos:line="43" pos:column="34">: <expr><literal type="string" pos:line="43" pos:column="36">"s were"<pos:position pos:line="43" pos:column="44"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_241_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fork_child<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">program_list_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">pl<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">int<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">fd_in<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">fd_out<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">fd_err<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list> <comment type="block" pos:line="2" pos:column="36">/* {{{ */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name><name pos:line="4" pos:column="7">fd_pipe_in<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">2<pos:position pos:line="4" pos:column="19"/></literal></expr>]<pos:position pos:line="4" pos:column="20"/></index></name> <init pos:line="4" pos:column="21">= <expr><block pos:line="4" pos:column="23">{<expr><operator pos:line="4" pos:column="24">-<pos:position pos:line="4" pos:column="25"/></operator><literal type="number" pos:line="4" pos:column="25">1<pos:position pos:line="4" pos:column="26"/></literal></expr>, <expr><operator pos:line="4" pos:column="28">-<pos:position pos:line="4" pos:column="29"/></operator><literal type="number" pos:line="4" pos:column="29">1<pos:position pos:line="4" pos:column="30"/></literal></expr>}<pos:position pos:line="4" pos:column="31"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name><name pos:line="5" pos:column="7">fd_pipe_out<pos:position pos:line="5" pos:column="18"/></name><index pos:line="5" pos:column="18">[<expr><literal type="number" pos:line="5" pos:column="19">2<pos:position pos:line="5" pos:column="20"/></literal></expr>]<pos:position pos:line="5" pos:column="21"/></index></name> <init pos:line="5" pos:column="22">= <expr><block pos:line="5" pos:column="24">{<expr><operator pos:line="5" pos:column="25">-<pos:position pos:line="5" pos:column="26"/></operator><literal type="number" pos:line="5" pos:column="26">1<pos:position pos:line="5" pos:column="27"/></literal></expr>, <expr><operator pos:line="5" pos:column="29">-<pos:position pos:line="5" pos:column="30"/></operator><literal type="number" pos:line="5" pos:column="30">1<pos:position pos:line="5" pos:column="31"/></literal></expr>}<pos:position pos:line="5" pos:column="32"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name><name pos:line="6" pos:column="7">fd_pipe_err<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><literal type="number" pos:line="6" pos:column="19">2<pos:position pos:line="6" pos:column="20"/></literal></expr>]<pos:position pos:line="6" pos:column="21"/></index></name> <init pos:line="6" pos:column="22">= <expr><block pos:line="6" pos:column="24">{<expr><operator pos:line="6" pos:column="25">-<pos:position pos:line="6" pos:column="26"/></operator><literal type="number" pos:line="6" pos:column="26">1<pos:position pos:line="6" pos:column="27"/></literal></expr>, <expr><operator pos:line="6" pos:column="29">-<pos:position pos:line="6" pos:column="30"/></operator><literal type="number" pos:line="6" pos:column="30">1<pos:position pos:line="6" pos:column="31"/></literal></expr>}<pos:position pos:line="6" pos:column="32"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">errbuf<pos:position pos:line="7" pos:column="14"/></name><index pos:line="7" pos:column="14">[<expr><literal type="number" pos:line="7" pos:column="15">1024<pos:position pos:line="7" pos:column="19"/></literal></expr>]<pos:position pos:line="7" pos:column="20"/></index></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">pid<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">uid<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">gid<pos:position pos:line="12" pos:column="10"/></name></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">egid<pos:position pos:line="13" pos:column="11"/></name></decl>;<pos:position pos:line="13" pos:column="12"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="15" pos:column="3">struct<pos:position pos:line="15" pos:column="9"/></name> <name pos:line="15" pos:column="10">passwd<pos:position pos:line="15" pos:column="16"/></name></name> <modifier pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></modifier></type><name pos:line="15" pos:column="18">sp_ptr<pos:position pos:line="15" pos:column="24"/></name></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="16" pos:column="3">struct<pos:position pos:line="16" pos:column="9"/></name> <name pos:line="16" pos:column="10">passwd<pos:position pos:line="16" pos:column="16"/></name></name></type> <name pos:line="16" pos:column="17">sp<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name></type> <name><name pos:line="17" pos:column="8">nambuf<pos:position pos:line="17" pos:column="14"/></name><index pos:line="17" pos:column="14">[<expr><literal type="number" pos:line="17" pos:column="15">2048<pos:position pos:line="17" pos:column="19"/></literal></expr>]<pos:position pos:line="17" pos:column="20"/></index></name></decl>;<pos:position pos:line="17" pos:column="21"/></decl_stmt>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name><name pos:line="19" pos:column="7">pl<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">pid<pos:position pos:line="19" pos:column="14"/></name></name> <operator pos:line="19" pos:column="15">!=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">-<pos:position pos:line="20" pos:column="14"/></operator><literal type="number" pos:line="20" pos:column="14">1<pos:position pos:line="20" pos:column="15"/></literal><operator pos:line="20" pos:column="15">)<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></return></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">(<pos:position pos:line="22" pos:column="8"/></operator><call><name pos:line="22" pos:column="8">create_pipe<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">fd_pipe_in<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call> <operator pos:line="22" pos:column="32">==<pos:position pos:line="22" pos:column="34"/></operator> <operator pos:line="22" pos:column="35">-<pos:position pos:line="22" pos:column="36"/></operator><literal type="number" pos:line="22" pos:column="36">1<pos:position pos:line="22" pos:column="37"/></literal><operator pos:line="22" pos:column="37">)<pos:position pos:line="22" pos:column="38"/></operator> <operator pos:line="22" pos:column="39">||<pos:position pos:line="22" pos:column="41"/></operator> <operator pos:line="22" pos:column="42">(<pos:position pos:line="22" pos:column="43"/></operator><call><name pos:line="22" pos:column="43">create_pipe<pos:position pos:line="22" pos:column="54"/></name><argument_list pos:line="22" pos:column="54">(<argument><expr><name pos:line="22" pos:column="55">fd_pipe_out<pos:position pos:line="22" pos:column="66"/></name></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call> <operator pos:line="22" pos:column="68">==<pos:position pos:line="22" pos:column="70"/></operator> <operator pos:line="22" pos:column="71">-<pos:position pos:line="22" pos:column="72"/></operator><literal type="number" pos:line="22" pos:column="72">1<pos:position pos:line="22" pos:column="73"/></literal><operator pos:line="22" pos:column="73">)<pos:position pos:line="22" pos:column="74"/></operator> <operator pos:line="22" pos:column="75">||<pos:position pos:line="22" pos:column="77"/></operator>
      <operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><call><name pos:line="23" pos:column="8">create_pipe<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">fd_pipe_err<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call> <operator pos:line="23" pos:column="33">==<pos:position pos:line="23" pos:column="35"/></operator> <operator pos:line="23" pos:column="36">-<pos:position pos:line="23" pos:column="37"/></operator><literal type="number" pos:line="23" pos:column="37">1<pos:position pos:line="23" pos:column="38"/></literal><operator pos:line="23" pos:column="38">)<pos:position pos:line="23" pos:column="39"/></operator></expr>)<pos:position pos:line="23" pos:column="40"/></condition><then pos:line="23" pos:column="40">
    <block type="pseudo"><goto pos:line="24" pos:column="5">goto <name pos:line="24" pos:column="10">failed<pos:position pos:line="24" pos:column="16"/></name>;<pos:position pos:line="24" pos:column="17"/></goto></block></then></if>

  <expr_stmt><expr><name pos:line="26" pos:column="3">sp_ptr<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <name pos:line="26" pos:column="12">NULL<pos:position pos:line="26" pos:column="16"/></name></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="27" pos:column="3">status<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <call><name pos:line="27" pos:column="12">getpwnam_r<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name><name pos:line="27" pos:column="23">pl<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">user<pos:position pos:line="27" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="33">&amp;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="34">sp<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="38">nambuf<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="46">sizeof<argument_list pos:line="27" pos:column="52">(<argument><expr><name pos:line="27" pos:column="53">nambuf<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="27" pos:column="62">&amp;<pos:position pos:line="27" pos:column="67"/></operator><name pos:line="27" pos:column="63">sp_ptr<pos:position pos:line="27" pos:column="69"/></name></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">status<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">!=<pos:position pos:line="28" pos:column="16"/></operator> <literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19"> <block pos:line="28" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">ERROR<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><literal type="string" pos:line="29" pos:column="11">"exec plugin: Failed to get user information for user ``%s'': %s"<pos:position pos:line="29" pos:column="76"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="30" pos:column="11">pl<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">user<pos:position pos:line="30" pos:column="19"/></name></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="21">sstrerror<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">errno<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">errbuf<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="46">sizeof<argument_list pos:line="30" pos:column="52">(<argument><expr><name pos:line="30" pos:column="53">errbuf<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt>
    <goto pos:line="31" pos:column="5">goto <name pos:line="31" pos:column="10">failed<pos:position pos:line="31" pos:column="16"/></name>;<pos:position pos:line="31" pos:column="17"/></goto>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">sp_ptr<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">==<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">NULL<pos:position pos:line="34" pos:column="21"/></name></expr>)<pos:position pos:line="34" pos:column="22"/></condition><then pos:line="34" pos:column="22"> <block pos:line="34" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">ERROR<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><literal type="string" pos:line="35" pos:column="11">"exec plugin: No such user: `%s'"<pos:position pos:line="35" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="46">pl<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">-&gt;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="50">user<pos:position pos:line="35" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
    <goto pos:line="36" pos:column="5">goto <name pos:line="36" pos:column="10">failed<pos:position pos:line="36" pos:column="16"/></name>;<pos:position pos:line="36" pos:column="17"/></goto>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="39" pos:column="3">uid<pos:position pos:line="39" pos:column="6"/></name> <operator pos:line="39" pos:column="7">=<pos:position pos:line="39" pos:column="8"/></operator> <name><name pos:line="39" pos:column="9">sp<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">.<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">pw_uid<pos:position pos:line="39" pos:column="18"/></name></name></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="40" pos:column="3">gid<pos:position pos:line="40" pos:column="6"/></name> <operator pos:line="40" pos:column="7">=<pos:position pos:line="40" pos:column="8"/></operator> <name><name pos:line="40" pos:column="9">sp<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">.<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="12">pw_gid<pos:position pos:line="40" pos:column="18"/></name></name></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name pos:line="41" pos:column="7">uid<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">==<pos:position pos:line="41" pos:column="13"/></operator> <literal type="number" pos:line="41" pos:column="14">0<pos:position pos:line="41" pos:column="15"/></literal></expr>)<pos:position pos:line="41" pos:column="16"/></condition><then pos:line="41" pos:column="16"> <block pos:line="41" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">ERROR<pos:position pos:line="42" pos:column="10"/></name><argument_list pos:line="42" pos:column="10">(<argument><expr><literal type="string" pos:line="42" pos:column="11">"exec plugin: Cowardly refusing to exec program as root."<pos:position pos:line="42" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="70"/></expr_stmt>
    <goto pos:line="43" pos:column="5">goto <name pos:line="43" pos:column="10">failed<pos:position pos:line="43" pos:column="16"/></name>;<pos:position pos:line="43" pos:column="17"/></goto>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="46" pos:column="3">/* The group configured in the configfile is set as effective group, because
   * this way the forked process can (re-)gain the user's primary group. */</comment>
  <expr_stmt><expr><name pos:line="48" pos:column="3">egid<pos:position pos:line="48" pos:column="7"/></name> <operator pos:line="48" pos:column="8">=<pos:position pos:line="48" pos:column="9"/></operator> <operator pos:line="48" pos:column="10">-<pos:position pos:line="48" pos:column="11"/></operator><literal type="number" pos:line="48" pos:column="11">1<pos:position pos:line="48" pos:column="12"/></literal></expr>;<pos:position pos:line="48" pos:column="13"/></expr_stmt>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">NULL<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">!=<pos:position pos:line="49" pos:column="14"/></operator> <name><name pos:line="49" pos:column="15">pl<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">-&gt;<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="19">group<pos:position pos:line="49" pos:column="24"/></name></name></expr>)<pos:position pos:line="49" pos:column="25"/></condition><then pos:line="49" pos:column="25"> <block pos:line="49" pos:column="26">{
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><literal type="char" pos:line="50" pos:column="9">'\0'<pos:position pos:line="50" pos:column="13"/></literal> <operator pos:line="50" pos:column="14">!=<pos:position pos:line="50" pos:column="16"/></operator> <operator pos:line="50" pos:column="17">*<pos:position pos:line="50" pos:column="18"/></operator><name><name pos:line="50" pos:column="18">pl<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">-&gt;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="22">group<pos:position pos:line="50" pos:column="27"/></name></name></expr>)<pos:position pos:line="50" pos:column="28"/></condition><then pos:line="50" pos:column="28"> <block pos:line="50" pos:column="29">{
      <decl_stmt><decl><type><name><name pos:line="51" pos:column="7">struct<pos:position pos:line="51" pos:column="13"/></name> <name pos:line="51" pos:column="14">group<pos:position pos:line="51" pos:column="19"/></name></name> <modifier pos:line="51" pos:column="20">*<pos:position pos:line="51" pos:column="21"/></modifier></type><name pos:line="51" pos:column="21">gr_ptr<pos:position pos:line="51" pos:column="27"/></name> <init pos:line="51" pos:column="28">= <expr><name pos:line="51" pos:column="30">NULL<pos:position pos:line="51" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="51" pos:column="35"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="52" pos:column="7">struct<pos:position pos:line="52" pos:column="13"/></name> <name pos:line="52" pos:column="14">group<pos:position pos:line="52" pos:column="19"/></name></name></type> <name pos:line="52" pos:column="20">gr<pos:position pos:line="52" pos:column="22"/></name></decl>;<pos:position pos:line="52" pos:column="23"/></decl_stmt>

      <expr_stmt><expr><name pos:line="54" pos:column="7">status<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">=<pos:position pos:line="54" pos:column="15"/></operator> <call><name pos:line="54" pos:column="16">getgrnam_r<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><name><name pos:line="54" pos:column="27">pl<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">-&gt;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="31">group<pos:position pos:line="54" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="38">&amp;<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="39">gr<pos:position pos:line="54" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="43">nambuf<pos:position pos:line="54" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="51">sizeof<argument_list pos:line="54" pos:column="57">(<argument><expr><name pos:line="54" pos:column="58">nambuf<pos:position pos:line="54" pos:column="64"/></name></expr></argument>)<pos:position pos:line="54" pos:column="65"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="54" pos:column="67">&amp;<pos:position pos:line="54" pos:column="72"/></operator><name pos:line="54" pos:column="68">gr_ptr<pos:position pos:line="54" pos:column="74"/></name></expr></argument>)<pos:position pos:line="54" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="76"/></expr_stmt>
      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><literal type="number" pos:line="55" pos:column="11">0<pos:position pos:line="55" pos:column="12"/></literal> <operator pos:line="55" pos:column="13">!=<pos:position pos:line="55" pos:column="15"/></operator> <name pos:line="55" pos:column="16">status<pos:position pos:line="55" pos:column="22"/></name></expr>)<pos:position pos:line="55" pos:column="23"/></condition><then pos:line="55" pos:column="23"> <block pos:line="55" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">ERROR<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><literal type="string" pos:line="56" pos:column="15">"exec plugin: Failed to get group information "<pos:position pos:line="56" pos:column="62"/></literal>
              <literal type="string" pos:line="57" pos:column="15">"for group ``%s'': %s"<pos:position pos:line="57" pos:column="37"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="58" pos:column="15">pl<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">-&gt;<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="19">group<pos:position pos:line="58" pos:column="24"/></name></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="26">sstrerror<pos:position pos:line="58" pos:column="35"/></name><argument_list pos:line="58" pos:column="35">(<argument><expr><name pos:line="58" pos:column="36">errno<pos:position pos:line="58" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="43">errbuf<pos:position pos:line="58" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="51">sizeof<argument_list pos:line="58" pos:column="57">(<argument><expr><name pos:line="58" pos:column="58">errbuf<pos:position pos:line="58" pos:column="64"/></name></expr></argument>)<pos:position pos:line="58" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="58" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="68"/></expr_stmt>
        <goto pos:line="59" pos:column="9">goto <name pos:line="59" pos:column="14">failed<pos:position pos:line="59" pos:column="20"/></name>;<pos:position pos:line="59" pos:column="21"/></goto>
      }<pos:position pos:line="60" pos:column="8"/></block></then></if>
      <if pos:line="61" pos:column="7">if <condition pos:line="61" pos:column="10">(<expr><name pos:line="61" pos:column="11">NULL<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">==<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">gr_ptr<pos:position pos:line="61" pos:column="25"/></name></expr>)<pos:position pos:line="61" pos:column="26"/></condition><then pos:line="61" pos:column="26"> <block pos:line="61" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">ERROR<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><literal type="string" pos:line="62" pos:column="15">"exec plugin: No such group: `%s'"<pos:position pos:line="62" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="51">pl<pos:position pos:line="62" pos:column="53"/></name><operator pos:line="62" pos:column="53">-&gt;<pos:position pos:line="62" pos:column="58"/></operator><name pos:line="62" pos:column="55">group<pos:position pos:line="62" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="62"/></expr_stmt>
        <goto pos:line="63" pos:column="9">goto <name pos:line="63" pos:column="14">failed<pos:position pos:line="63" pos:column="20"/></name>;<pos:position pos:line="63" pos:column="21"/></goto>
      }<pos:position pos:line="64" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="66" pos:column="7">egid<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">=<pos:position pos:line="66" pos:column="13"/></operator> <name><name pos:line="66" pos:column="14">gr<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">.<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="17">gr_gid<pos:position pos:line="66" pos:column="23"/></name></name></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then> <else pos:line="67" pos:column="7">else <block pos:line="67" pos:column="12">{
      <expr_stmt><expr><name pos:line="68" pos:column="7">egid<pos:position pos:line="68" pos:column="11"/></name> <operator pos:line="68" pos:column="12">=<pos:position pos:line="68" pos:column="13"/></operator> <name pos:line="68" pos:column="14">gid<pos:position pos:line="68" pos:column="17"/></name></expr>;<pos:position pos:line="68" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></else></if>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if> <comment type="block" pos:line="70" pos:column="5">/* if (pl-&gt;group == NULL) */</comment>

  <expr_stmt><expr><name pos:line="72" pos:column="3">pid<pos:position pos:line="72" pos:column="6"/></name> <operator pos:line="72" pos:column="7">=<pos:position pos:line="72" pos:column="8"/></operator> <call><name pos:line="72" pos:column="9">fork<pos:position pos:line="72" pos:column="13"/></name><argument_list pos:line="72" pos:column="13">()<pos:position pos:line="72" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="16"/></expr_stmt>
  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><name pos:line="73" pos:column="7">pid<pos:position pos:line="73" pos:column="10"/></name> <operator pos:line="73" pos:column="11">&lt;<pos:position pos:line="73" pos:column="15"/></operator> <literal type="number" pos:line="73" pos:column="13">0<pos:position pos:line="73" pos:column="14"/></literal></expr>)<pos:position pos:line="73" pos:column="15"/></condition><then pos:line="73" pos:column="15"> <block pos:line="73" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">ERROR<pos:position pos:line="74" pos:column="10"/></name><argument_list pos:line="74" pos:column="10">(<argument><expr><literal type="string" pos:line="74" pos:column="11">"exec plugin: fork failed: %s"<pos:position pos:line="74" pos:column="41"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="75" pos:column="11">sstrerror<pos:position pos:line="75" pos:column="20"/></name><argument_list pos:line="75" pos:column="20">(<argument><expr><name pos:line="75" pos:column="21">errno<pos:position pos:line="75" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="28">errbuf<pos:position pos:line="75" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="36">sizeof<argument_list pos:line="75" pos:column="42">(<argument><expr><name pos:line="75" pos:column="43">errbuf<pos:position pos:line="75" pos:column="49"/></name></expr></argument>)<pos:position pos:line="75" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="75" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="53"/></expr_stmt>
    <goto pos:line="76" pos:column="5">goto <name pos:line="76" pos:column="10">failed<pos:position pos:line="76" pos:column="16"/></name>;<pos:position pos:line="76" pos:column="17"/></goto>
  }<pos:position pos:line="77" pos:column="4"/></block></then> <elseif pos:line="77" pos:column="5">else <if pos:line="77" pos:column="10">if <condition pos:line="77" pos:column="13">(<expr><name pos:line="77" pos:column="14">pid<pos:position pos:line="77" pos:column="17"/></name> <operator pos:line="77" pos:column="18">==<pos:position pos:line="77" pos:column="20"/></operator> <literal type="number" pos:line="77" pos:column="21">0<pos:position pos:line="77" pos:column="22"/></literal></expr>)<pos:position pos:line="77" pos:column="23"/></condition><then pos:line="77" pos:column="23"> <block pos:line="77" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="78" pos:column="5">int<pos:position pos:line="78" pos:column="8"/></name></type> <name pos:line="78" pos:column="9">fd_num<pos:position pos:line="78" pos:column="15"/></name></decl>;<pos:position pos:line="78" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="80" pos:column="5">/* Close all file descriptors but the pipe end we need. */</comment>
    <expr_stmt><expr><name pos:line="81" pos:column="5">fd_num<pos:position pos:line="81" pos:column="11"/></name> <operator pos:line="81" pos:column="12">=<pos:position pos:line="81" pos:column="13"/></operator> <call><name pos:line="81" pos:column="14">getdtablesize<pos:position pos:line="81" pos:column="27"/></name><argument_list pos:line="81" pos:column="27">()<pos:position pos:line="81" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="30"/></expr_stmt>
    <for pos:line="82" pos:column="5">for <control pos:line="82" pos:column="9">(<init><decl><type><name pos:line="82" pos:column="10">int<pos:position pos:line="82" pos:column="13"/></name></type> <name pos:line="82" pos:column="14">fd<pos:position pos:line="82" pos:column="16"/></name> <init pos:line="82" pos:column="17">= <expr><literal type="number" pos:line="82" pos:column="19">0<pos:position pos:line="82" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="82" pos:column="21"/></init> <condition><expr><name pos:line="82" pos:column="22">fd<pos:position pos:line="82" pos:column="24"/></name> <operator pos:line="82" pos:column="25">&lt;<pos:position pos:line="82" pos:column="29"/></operator> <name pos:line="82" pos:column="27">fd_num<pos:position pos:line="82" pos:column="33"/></name></expr>;<pos:position pos:line="82" pos:column="34"/></condition> <incr><expr><name pos:line="82" pos:column="35">fd<pos:position pos:line="82" pos:column="37"/></name><operator pos:line="82" pos:column="37">++<pos:position pos:line="82" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="82" pos:column="40"/></control> <block pos:line="82" pos:column="41">{
      <if pos:line="83" pos:column="7">if <condition pos:line="83" pos:column="10">(<expr><operator pos:line="83" pos:column="11">(<pos:position pos:line="83" pos:column="12"/></operator><name pos:line="83" pos:column="12">fd<pos:position pos:line="83" pos:column="14"/></name> <operator pos:line="83" pos:column="15">==<pos:position pos:line="83" pos:column="17"/></operator> <name><name pos:line="83" pos:column="18">fd_pipe_in<pos:position pos:line="83" pos:column="28"/></name><index pos:line="83" pos:column="28">[<expr><literal type="number" pos:line="83" pos:column="29">0<pos:position pos:line="83" pos:column="30"/></literal></expr>]<pos:position pos:line="83" pos:column="31"/></index></name><operator pos:line="83" pos:column="31">)<pos:position pos:line="83" pos:column="32"/></operator> <operator pos:line="83" pos:column="33">||<pos:position pos:line="83" pos:column="35"/></operator> <operator pos:line="83" pos:column="36">(<pos:position pos:line="83" pos:column="37"/></operator><name pos:line="83" pos:column="37">fd<pos:position pos:line="83" pos:column="39"/></name> <operator pos:line="83" pos:column="40">==<pos:position pos:line="83" pos:column="42"/></operator> <name><name pos:line="83" pos:column="43">fd_pipe_out<pos:position pos:line="83" pos:column="54"/></name><index pos:line="83" pos:column="54">[<expr><literal type="number" pos:line="83" pos:column="55">1<pos:position pos:line="83" pos:column="56"/></literal></expr>]<pos:position pos:line="83" pos:column="57"/></index></name><operator pos:line="83" pos:column="57">)<pos:position pos:line="83" pos:column="58"/></operator> <operator pos:line="83" pos:column="59">||<pos:position pos:line="83" pos:column="61"/></operator>
          <operator pos:line="84" pos:column="11">(<pos:position pos:line="84" pos:column="12"/></operator><name pos:line="84" pos:column="12">fd<pos:position pos:line="84" pos:column="14"/></name> <operator pos:line="84" pos:column="15">==<pos:position pos:line="84" pos:column="17"/></operator> <name><name pos:line="84" pos:column="18">fd_pipe_err<pos:position pos:line="84" pos:column="29"/></name><index pos:line="84" pos:column="29">[<expr><literal type="number" pos:line="84" pos:column="30">1<pos:position pos:line="84" pos:column="31"/></literal></expr>]<pos:position pos:line="84" pos:column="32"/></index></name><operator pos:line="84" pos:column="32">)<pos:position pos:line="84" pos:column="33"/></operator></expr>)<pos:position pos:line="84" pos:column="34"/></condition><then pos:line="84" pos:column="34">
        <block type="pseudo"><continue pos:line="85" pos:column="9">continue;<pos:position pos:line="85" pos:column="18"/></continue></block></then></if>
      <expr_stmt><expr><call><name pos:line="86" pos:column="7">close<pos:position pos:line="86" pos:column="12"/></name><argument_list pos:line="86" pos:column="12">(<argument><expr><name pos:line="86" pos:column="13">fd<pos:position pos:line="86" pos:column="15"/></name></expr></argument>)<pos:position pos:line="86" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></for>

    <comment type="block" pos:line="89" pos:column="5">/* Connect the `in' pipe to STDIN */</comment>
    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><name><name pos:line="90" pos:column="9">fd_pipe_in<pos:position pos:line="90" pos:column="19"/></name><index pos:line="90" pos:column="19">[<expr><literal type="number" pos:line="90" pos:column="20">0<pos:position pos:line="90" pos:column="21"/></literal></expr>]<pos:position pos:line="90" pos:column="22"/></index></name> <operator pos:line="90" pos:column="23">!=<pos:position pos:line="90" pos:column="25"/></operator> <name pos:line="90" pos:column="26">STDIN_FILENO<pos:position pos:line="90" pos:column="38"/></name></expr>)<pos:position pos:line="90" pos:column="39"/></condition><then pos:line="90" pos:column="39"> <block pos:line="90" pos:column="40">{
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">dup2<pos:position pos:line="91" pos:column="11"/></name><argument_list pos:line="91" pos:column="11">(<argument><expr><name><name pos:line="91" pos:column="12">fd_pipe_in<pos:position pos:line="91" pos:column="22"/></name><index pos:line="91" pos:column="22">[<expr><literal type="number" pos:line="91" pos:column="23">0<pos:position pos:line="91" pos:column="24"/></literal></expr>]<pos:position pos:line="91" pos:column="25"/></index></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="27">STDIN_FILENO<pos:position pos:line="91" pos:column="39"/></name></expr></argument>)<pos:position pos:line="91" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="92" pos:column="7">close<pos:position pos:line="92" pos:column="12"/></name><argument_list pos:line="92" pos:column="12">(<argument><expr><name><name pos:line="92" pos:column="13">fd_pipe_in<pos:position pos:line="92" pos:column="23"/></name><index pos:line="92" pos:column="23">[<expr><literal type="number" pos:line="92" pos:column="24">0<pos:position pos:line="92" pos:column="25"/></literal></expr>]<pos:position pos:line="92" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="92" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="95" pos:column="5">/* Now connect the `out' pipe to STDOUT */</comment>
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name><name pos:line="96" pos:column="9">fd_pipe_out<pos:position pos:line="96" pos:column="20"/></name><index pos:line="96" pos:column="20">[<expr><literal type="number" pos:line="96" pos:column="21">1<pos:position pos:line="96" pos:column="22"/></literal></expr>]<pos:position pos:line="96" pos:column="23"/></index></name> <operator pos:line="96" pos:column="24">!=<pos:position pos:line="96" pos:column="26"/></operator> <name pos:line="96" pos:column="27">STDOUT_FILENO<pos:position pos:line="96" pos:column="40"/></name></expr>)<pos:position pos:line="96" pos:column="41"/></condition><then pos:line="96" pos:column="41"> <block pos:line="96" pos:column="42">{
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">dup2<pos:position pos:line="97" pos:column="11"/></name><argument_list pos:line="97" pos:column="11">(<argument><expr><name><name pos:line="97" pos:column="12">fd_pipe_out<pos:position pos:line="97" pos:column="23"/></name><index pos:line="97" pos:column="23">[<expr><literal type="number" pos:line="97" pos:column="24">1<pos:position pos:line="97" pos:column="25"/></literal></expr>]<pos:position pos:line="97" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="28">STDOUT_FILENO<pos:position pos:line="97" pos:column="41"/></name></expr></argument>)<pos:position pos:line="97" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">close<pos:position pos:line="98" pos:column="12"/></name><argument_list pos:line="98" pos:column="12">(<argument><expr><name><name pos:line="98" pos:column="13">fd_pipe_out<pos:position pos:line="98" pos:column="24"/></name><index pos:line="98" pos:column="24">[<expr><literal type="number" pos:line="98" pos:column="25">1<pos:position pos:line="98" pos:column="26"/></literal></expr>]<pos:position pos:line="98" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="98" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="101" pos:column="5">/* Now connect the `err' pipe to STDERR */</comment>
    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><name><name pos:line="102" pos:column="9">fd_pipe_err<pos:position pos:line="102" pos:column="20"/></name><index pos:line="102" pos:column="20">[<expr><literal type="number" pos:line="102" pos:column="21">1<pos:position pos:line="102" pos:column="22"/></literal></expr>]<pos:position pos:line="102" pos:column="23"/></index></name> <operator pos:line="102" pos:column="24">!=<pos:position pos:line="102" pos:column="26"/></operator> <name pos:line="102" pos:column="27">STDERR_FILENO<pos:position pos:line="102" pos:column="40"/></name></expr>)<pos:position pos:line="102" pos:column="41"/></condition><then pos:line="102" pos:column="41"> <block pos:line="102" pos:column="42">{
      <expr_stmt><expr><call><name pos:line="103" pos:column="7">dup2<pos:position pos:line="103" pos:column="11"/></name><argument_list pos:line="103" pos:column="11">(<argument><expr><name><name pos:line="103" pos:column="12">fd_pipe_err<pos:position pos:line="103" pos:column="23"/></name><index pos:line="103" pos:column="23">[<expr><literal type="number" pos:line="103" pos:column="24">1<pos:position pos:line="103" pos:column="25"/></literal></expr>]<pos:position pos:line="103" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="28">STDERR_FILENO<pos:position pos:line="103" pos:column="41"/></name></expr></argument>)<pos:position pos:line="103" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="104" pos:column="7">close<pos:position pos:line="104" pos:column="12"/></name><argument_list pos:line="104" pos:column="12">(<argument><expr><name><name pos:line="104" pos:column="13">fd_pipe_err<pos:position pos:line="104" pos:column="24"/></name><index pos:line="104" pos:column="24">[<expr><literal type="number" pos:line="104" pos:column="25">1<pos:position pos:line="104" pos:column="26"/></literal></expr>]<pos:position pos:line="104" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="104" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="107" pos:column="5">set_environment<pos:position pos:line="107" pos:column="20"/></name><argument_list pos:line="107" pos:column="20">()<pos:position pos:line="107" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="109" pos:column="5">/* Unblock all signals */</comment>
    <expr_stmt><expr><call><name pos:line="110" pos:column="5">reset_signal_mask<pos:position pos:line="110" pos:column="22"/></name><argument_list pos:line="110" pos:column="22">()<pos:position pos:line="110" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="112" pos:column="5">exec_child<pos:position pos:line="112" pos:column="15"/></name><argument_list pos:line="112" pos:column="15">(<argument><expr><name pos:line="112" pos:column="16">pl<pos:position pos:line="112" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="20">uid<pos:position pos:line="112" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="25">gid<pos:position pos:line="112" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="30">egid<pos:position pos:line="112" pos:column="34"/></name></expr></argument>)<pos:position pos:line="112" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="36"/></expr_stmt>
    <comment type="block" pos:line="113" pos:column="5">/* does not return */</comment>
  }<pos:position pos:line="114" pos:column="4"/></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="116" pos:column="3">close<pos:position pos:line="116" pos:column="8"/></name><argument_list pos:line="116" pos:column="8">(<argument><expr><name><name pos:line="116" pos:column="9">fd_pipe_in<pos:position pos:line="116" pos:column="19"/></name><index pos:line="116" pos:column="19">[<expr><literal type="number" pos:line="116" pos:column="20">0<pos:position pos:line="116" pos:column="21"/></literal></expr>]<pos:position pos:line="116" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="116" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="117" pos:column="3">close<pos:position pos:line="117" pos:column="8"/></name><argument_list pos:line="117" pos:column="8">(<argument><expr><name><name pos:line="117" pos:column="9">fd_pipe_out<pos:position pos:line="117" pos:column="20"/></name><index pos:line="117" pos:column="20">[<expr><literal type="number" pos:line="117" pos:column="21">1<pos:position pos:line="117" pos:column="22"/></literal></expr>]<pos:position pos:line="117" pos:column="23"/></index></name></expr></argument>)<pos:position pos:line="117" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="118" pos:column="3">close<pos:position pos:line="118" pos:column="8"/></name><argument_list pos:line="118" pos:column="8">(<argument><expr><name><name pos:line="118" pos:column="9">fd_pipe_err<pos:position pos:line="118" pos:column="20"/></name><index pos:line="118" pos:column="20">[<expr><literal type="number" pos:line="118" pos:column="21">1<pos:position pos:line="118" pos:column="22"/></literal></expr>]<pos:position pos:line="118" pos:column="23"/></index></name></expr></argument>)<pos:position pos:line="118" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="25"/></expr_stmt>

  <if pos:line="120" pos:column="3">if <condition pos:line="120" pos:column="6">(<expr><name pos:line="120" pos:column="7">fd_in<pos:position pos:line="120" pos:column="12"/></name> <operator pos:line="120" pos:column="13">!=<pos:position pos:line="120" pos:column="15"/></operator> <name pos:line="120" pos:column="16">NULL<pos:position pos:line="120" pos:column="20"/></name></expr>)<pos:position pos:line="120" pos:column="21"/></condition><then pos:line="120" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="121" pos:column="5">*<pos:position pos:line="121" pos:column="6"/></operator><name pos:line="121" pos:column="6">fd_in<pos:position pos:line="121" pos:column="11"/></name> <operator pos:line="121" pos:column="12">=<pos:position pos:line="121" pos:column="13"/></operator> <name><name pos:line="121" pos:column="14">fd_pipe_in<pos:position pos:line="121" pos:column="24"/></name><index pos:line="121" pos:column="24">[<expr><literal type="number" pos:line="121" pos:column="25">1<pos:position pos:line="121" pos:column="26"/></literal></expr>]<pos:position pos:line="121" pos:column="27"/></index></name></expr>;<pos:position pos:line="121" pos:column="28"/></expr_stmt></block></then>
  <else pos:line="122" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="5">close<pos:position pos:line="123" pos:column="10"/></name><argument_list pos:line="123" pos:column="10">(<argument><expr><name><name pos:line="123" pos:column="11">fd_pipe_in<pos:position pos:line="123" pos:column="21"/></name><index pos:line="123" pos:column="21">[<expr><literal type="number" pos:line="123" pos:column="22">1<pos:position pos:line="123" pos:column="23"/></literal></expr>]<pos:position pos:line="123" pos:column="24"/></index></name></expr></argument>)<pos:position pos:line="123" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="26"/></expr_stmt></block></else></if>

  <if pos:line="125" pos:column="3">if <condition pos:line="125" pos:column="6">(<expr><name pos:line="125" pos:column="7">fd_out<pos:position pos:line="125" pos:column="13"/></name> <operator pos:line="125" pos:column="14">!=<pos:position pos:line="125" pos:column="16"/></operator> <name pos:line="125" pos:column="17">NULL<pos:position pos:line="125" pos:column="21"/></name></expr>)<pos:position pos:line="125" pos:column="22"/></condition><then pos:line="125" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="126" pos:column="5">*<pos:position pos:line="126" pos:column="6"/></operator><name pos:line="126" pos:column="6">fd_out<pos:position pos:line="126" pos:column="12"/></name> <operator pos:line="126" pos:column="13">=<pos:position pos:line="126" pos:column="14"/></operator> <name><name pos:line="126" pos:column="15">fd_pipe_out<pos:position pos:line="126" pos:column="26"/></name><index pos:line="126" pos:column="26">[<expr><literal type="number" pos:line="126" pos:column="27">0<pos:position pos:line="126" pos:column="28"/></literal></expr>]<pos:position pos:line="126" pos:column="29"/></index></name></expr>;<pos:position pos:line="126" pos:column="30"/></expr_stmt></block></then>
  <else pos:line="127" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="5">close<pos:position pos:line="128" pos:column="10"/></name><argument_list pos:line="128" pos:column="10">(<argument><expr><name><name pos:line="128" pos:column="11">fd_pipe_out<pos:position pos:line="128" pos:column="22"/></name><index pos:line="128" pos:column="22">[<expr><literal type="number" pos:line="128" pos:column="23">0<pos:position pos:line="128" pos:column="24"/></literal></expr>]<pos:position pos:line="128" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="128" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="27"/></expr_stmt></block></else></if>

  <if pos:line="130" pos:column="3">if <condition pos:line="130" pos:column="6">(<expr><name pos:line="130" pos:column="7">fd_err<pos:position pos:line="130" pos:column="13"/></name> <operator pos:line="130" pos:column="14">!=<pos:position pos:line="130" pos:column="16"/></operator> <name pos:line="130" pos:column="17">NULL<pos:position pos:line="130" pos:column="21"/></name></expr>)<pos:position pos:line="130" pos:column="22"/></condition><then pos:line="130" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="131" pos:column="5">*<pos:position pos:line="131" pos:column="6"/></operator><name pos:line="131" pos:column="6">fd_err<pos:position pos:line="131" pos:column="12"/></name> <operator pos:line="131" pos:column="13">=<pos:position pos:line="131" pos:column="14"/></operator> <name><name pos:line="131" pos:column="15">fd_pipe_err<pos:position pos:line="131" pos:column="26"/></name><index pos:line="131" pos:column="26">[<expr><literal type="number" pos:line="131" pos:column="27">0<pos:position pos:line="131" pos:column="28"/></literal></expr>]<pos:position pos:line="131" pos:column="29"/></index></name></expr>;<pos:position pos:line="131" pos:column="30"/></expr_stmt></block></then>
  <else pos:line="132" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="133" pos:column="5">close<pos:position pos:line="133" pos:column="10"/></name><argument_list pos:line="133" pos:column="10">(<argument><expr><name><name pos:line="133" pos:column="11">fd_pipe_err<pos:position pos:line="133" pos:column="22"/></name><index pos:line="133" pos:column="22">[<expr><literal type="number" pos:line="133" pos:column="23">0<pos:position pos:line="133" pos:column="24"/></literal></expr>]<pos:position pos:line="133" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="133" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="27"/></expr_stmt></block></else></if>

  <return pos:line="135" pos:column="3">return <expr><operator pos:line="135" pos:column="10">(<pos:position pos:line="135" pos:column="11"/></operator><name pos:line="135" pos:column="11">pid<pos:position pos:line="135" pos:column="14"/></name><operator pos:line="135" pos:column="14">)<pos:position pos:line="135" pos:column="15"/></operator></expr>;<pos:position pos:line="135" pos:column="16"/></return>

<label><name pos:line="137" pos:column="1">failed<pos:position pos:line="137" pos:column="7"/></name>:<pos:position pos:line="137" pos:column="8"/></label>
  <expr_stmt><expr><call><name pos:line="138" pos:column="3">close_pipe<pos:position pos:line="138" pos:column="13"/></name><argument_list pos:line="138" pos:column="13">(<argument><expr><name pos:line="138" pos:column="14">fd_pipe_in<pos:position pos:line="138" pos:column="24"/></name></expr></argument>)<pos:position pos:line="138" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="139" pos:column="3">close_pipe<pos:position pos:line="139" pos:column="13"/></name><argument_list pos:line="139" pos:column="13">(<argument><expr><name pos:line="139" pos:column="14">fd_pipe_out<pos:position pos:line="139" pos:column="25"/></name></expr></argument>)<pos:position pos:line="139" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="140" pos:column="3">close_pipe<pos:position pos:line="140" pos:column="13"/></name><argument_list pos:line="140" pos:column="13">(<argument><expr><name pos:line="140" pos:column="14">fd_pipe_err<pos:position pos:line="140" pos:column="25"/></name></expr></argument>)<pos:position pos:line="140" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="27"/></expr_stmt>

  <return pos:line="142" pos:column="3">return <expr><operator pos:line="142" pos:column="10">(<pos:position pos:line="142" pos:column="11"/></operator><operator pos:line="142" pos:column="11">-<pos:position pos:line="142" pos:column="12"/></operator><literal type="number" pos:line="142" pos:column="12">1<pos:position pos:line="142" pos:column="13"/></literal><operator pos:line="142" pos:column="13">)<pos:position pos:line="142" pos:column="14"/></operator></expr>;<pos:position pos:line="142" pos:column="15"/></return>
}<pos:position pos:line="143" pos:column="2"/></block></function></unit>

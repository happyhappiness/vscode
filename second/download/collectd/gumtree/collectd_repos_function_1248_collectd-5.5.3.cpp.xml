<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1248_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">swap_read_combined<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <comment type="block" pos:line="1" pos:column="38">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fh<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buffer<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">1024<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">gauge_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">swap_used<pos:position pos:line="6" pos:column="26"/></name>   <init pos:line="6" pos:column="29">= <expr><name pos:line="6" pos:column="31">NAN<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">gauge_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">swap_cached<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name pos:line="7" pos:column="31">NAN<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">gauge_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">swap_free<pos:position pos:line="8" pos:column="26"/></name>   <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">NAN<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">gauge_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">swap_total<pos:position pos:line="9" pos:column="27"/></name>  <init pos:line="9" pos:column="29">= <expr><name pos:line="9" pos:column="31">NAN<pos:position pos:line="9" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">fh<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">fopen<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><literal type="string" pos:line="11" pos:column="21">"/proc/meminfo"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="38">"r"<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">fh<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">==<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">NULL<pos:position pos:line="12" pos:column="23"/></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24">
	<block pos:line="13" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name></type> <name><name pos:line="14" pos:column="22">errbuf<pos:position pos:line="14" pos:column="28"/></name><index pos:line="14" pos:column="28">[<expr><literal type="number" pos:line="14" pos:column="29">1024<pos:position pos:line="14" pos:column="33"/></literal></expr>]<pos:position pos:line="14" pos:column="34"/></index></name></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">WARNING<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><literal type="string" pos:line="15" pos:column="26">"swap plugin: fopen (/proc/meminfo) failed: %s"<pos:position pos:line="15" pos:column="73"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="16" pos:column="33">sstrerror<pos:position pos:line="16" pos:column="42"/></name> <argument_list pos:line="16" pos:column="43">(<argument><expr><name pos:line="16" pos:column="44">errno<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">errbuf<pos:position pos:line="16" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="59">sizeof <argument_list pos:line="16" pos:column="66">(<argument><expr><name pos:line="16" pos:column="67">errbuf<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="77"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="25">-<pos:position pos:line="17" pos:column="26"/></operator><literal type="number" pos:line="17" pos:column="26">1<pos:position pos:line="17" pos:column="27"/></literal><operator pos:line="17" pos:column="27">)<pos:position pos:line="17" pos:column="28"/></operator></expr>;<pos:position pos:line="17" pos:column="29"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><call><name pos:line="20" pos:column="16">fgets<pos:position pos:line="20" pos:column="21"/></name> <argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">buffer<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="31">sizeof <argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">buffer<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="20" pos:column="48">fh<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call> <operator pos:line="20" pos:column="52">!=<pos:position pos:line="20" pos:column="54"/></operator> <name pos:line="20" pos:column="55">NULL<pos:position pos:line="20" pos:column="59"/></name></expr>)<pos:position pos:line="20" pos:column="60"/></condition>
	<block pos:line="21" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">char<pos:position pos:line="22" pos:column="21"/></name> <modifier pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></modifier></type><name><name pos:line="22" pos:column="23">fields<pos:position pos:line="22" pos:column="29"/></name><index pos:line="22" pos:column="29">[<expr><literal type="number" pos:line="22" pos:column="30">8<pos:position pos:line="22" pos:column="31"/></literal></expr>]<pos:position pos:line="22" pos:column="32"/></index></name></decl>;<pos:position pos:line="22" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">int<pos:position pos:line="23" pos:column="20"/></name></type> <name pos:line="23" pos:column="21">numfields<pos:position pos:line="23" pos:column="30"/></name></decl>;<pos:position pos:line="23" pos:column="31"/></decl_stmt>

		<expr_stmt><expr><name pos:line="25" pos:column="17">numfields<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <call><name pos:line="25" pos:column="29">strsplit<pos:position pos:line="25" pos:column="37"/></name> <argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">buffer<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">fields<pos:position pos:line="25" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="55">STATIC_ARRAY_SIZE<pos:position pos:line="25" pos:column="72"/></name> <argument_list pos:line="25" pos:column="73">(<argument><expr><name pos:line="25" pos:column="74">fields<pos:position pos:line="25" pos:column="80"/></name></expr></argument>)<pos:position pos:line="25" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="83"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">numfields<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">&lt;<pos:position pos:line="26" pos:column="35"/></operator> <literal type="number" pos:line="26" pos:column="33">2<pos:position pos:line="26" pos:column="34"/></literal></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35">
			<block type="pseudo"><continue pos:line="27" pos:column="25">continue;<pos:position pos:line="27" pos:column="34"/></continue></block></then></if>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">strcasecmp<pos:position pos:line="29" pos:column="31"/></name> <argument_list pos:line="29" pos:column="32">(<argument><expr><name><name pos:line="29" pos:column="33">fields<pos:position pos:line="29" pos:column="39"/></name><index pos:line="29" pos:column="39">[<expr><literal type="number" pos:line="29" pos:column="40">0<pos:position pos:line="29" pos:column="41"/></literal></expr>]<pos:position pos:line="29" pos:column="42"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="44">"SwapTotal:"<pos:position pos:line="29" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call> <operator pos:line="29" pos:column="58">==<pos:position pos:line="29" pos:column="60"/></operator> <literal type="number" pos:line="29" pos:column="61">0<pos:position pos:line="29" pos:column="62"/></literal></expr>)<pos:position pos:line="29" pos:column="63"/></condition><then pos:line="29" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">strtogauge<pos:position pos:line="30" pos:column="35"/></name> <argument_list pos:line="30" pos:column="36">(<argument><expr><name><name pos:line="30" pos:column="37">fields<pos:position pos:line="30" pos:column="43"/></name><index pos:line="30" pos:column="43">[<expr><literal type="number" pos:line="30" pos:column="44">1<pos:position pos:line="30" pos:column="45"/></literal></expr>]<pos:position pos:line="30" pos:column="46"/></index></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="48">&amp;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="49">swap_total<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt></block></then>
		<elseif pos:line="31" pos:column="17">else <if pos:line="31" pos:column="22">if <condition pos:line="31" pos:column="25">(<expr><call><name pos:line="31" pos:column="26">strcasecmp<pos:position pos:line="31" pos:column="36"/></name> <argument_list pos:line="31" pos:column="37">(<argument><expr><name><name pos:line="31" pos:column="38">fields<pos:position pos:line="31" pos:column="44"/></name><index pos:line="31" pos:column="44">[<expr><literal type="number" pos:line="31" pos:column="45">0<pos:position pos:line="31" pos:column="46"/></literal></expr>]<pos:position pos:line="31" pos:column="47"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="49">"SwapFree:"<pos:position pos:line="31" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call> <operator pos:line="31" pos:column="62">==<pos:position pos:line="31" pos:column="64"/></operator> <literal type="number" pos:line="31" pos:column="65">0<pos:position pos:line="31" pos:column="66"/></literal></expr>)<pos:position pos:line="31" pos:column="67"/></condition><then pos:line="31" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">strtogauge<pos:position pos:line="32" pos:column="35"/></name> <argument_list pos:line="32" pos:column="36">(<argument><expr><name><name pos:line="32" pos:column="37">fields<pos:position pos:line="32" pos:column="43"/></name><index pos:line="32" pos:column="43">[<expr><literal type="number" pos:line="32" pos:column="44">1<pos:position pos:line="32" pos:column="45"/></literal></expr>]<pos:position pos:line="32" pos:column="46"/></index></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="48">&amp;<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="49">swap_free<pos:position pos:line="32" pos:column="58"/></name></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="33" pos:column="17">else <if pos:line="33" pos:column="22">if <condition pos:line="33" pos:column="25">(<expr><call><name pos:line="33" pos:column="26">strcasecmp<pos:position pos:line="33" pos:column="36"/></name> <argument_list pos:line="33" pos:column="37">(<argument><expr><name><name pos:line="33" pos:column="38">fields<pos:position pos:line="33" pos:column="44"/></name><index pos:line="33" pos:column="44">[<expr><literal type="number" pos:line="33" pos:column="45">0<pos:position pos:line="33" pos:column="46"/></literal></expr>]<pos:position pos:line="33" pos:column="47"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="49">"SwapCached:"<pos:position pos:line="33" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call> <operator pos:line="33" pos:column="64">==<pos:position pos:line="33" pos:column="66"/></operator> <literal type="number" pos:line="33" pos:column="67">0<pos:position pos:line="33" pos:column="68"/></literal></expr>)<pos:position pos:line="33" pos:column="69"/></condition><then pos:line="33" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="25">strtogauge<pos:position pos:line="34" pos:column="35"/></name> <argument_list pos:line="34" pos:column="36">(<argument><expr><name><name pos:line="34" pos:column="37">fields<pos:position pos:line="34" pos:column="43"/></name><index pos:line="34" pos:column="43">[<expr><literal type="number" pos:line="34" pos:column="44">1<pos:position pos:line="34" pos:column="45"/></literal></expr>]<pos:position pos:line="34" pos:column="46"/></index></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="48">&amp;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="49">swap_cached<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="62"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="35" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="37" pos:column="9">fclose<pos:position pos:line="37" pos:column="15"/></name> <argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">fh<pos:position pos:line="37" pos:column="19"/></name></expr></argument>)<pos:position pos:line="37" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">isnan<pos:position pos:line="39" pos:column="18"/></name> <argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">swap_total<pos:position pos:line="39" pos:column="30"/></name></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call> <operator pos:line="39" pos:column="32">||<pos:position pos:line="39" pos:column="34"/></operator> <call><name pos:line="39" pos:column="35">isnan<pos:position pos:line="39" pos:column="40"/></name> <argument_list pos:line="39" pos:column="41">(<argument><expr><name pos:line="39" pos:column="42">swap_free<pos:position pos:line="39" pos:column="51"/></name></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="53"/></condition><then pos:line="39" pos:column="53">
		<block type="pseudo"><return pos:line="40" pos:column="17">return <expr><operator pos:line="40" pos:column="24">(<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">ENOENT<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">)<pos:position pos:line="40" pos:column="32"/></operator></expr>;<pos:position pos:line="40" pos:column="33"/></return></block></then></if>

	<comment type="block" pos:line="42" pos:column="9">/* Some systems, OpenVZ for example, don't provide SwapCached. */</comment>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">isnan<pos:position pos:line="43" pos:column="18"/></name> <argument_list pos:line="43" pos:column="19">(<argument><expr><name pos:line="43" pos:column="20">swap_cached<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="33"/></condition><then pos:line="43" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="17">swap_used<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <name pos:line="44" pos:column="29">swap_total<pos:position pos:line="44" pos:column="39"/></name> <operator pos:line="44" pos:column="40">-<pos:position pos:line="44" pos:column="41"/></operator> <name pos:line="44" pos:column="42">swap_free<pos:position pos:line="44" pos:column="51"/></name></expr>;<pos:position pos:line="44" pos:column="52"/></expr_stmt></block></then>
	<else pos:line="45" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="17">swap_used<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="29">swap_total<pos:position pos:line="46" pos:column="39"/></name> <operator pos:line="46" pos:column="40">-<pos:position pos:line="46" pos:column="41"/></operator> <operator pos:line="46" pos:column="42">(<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="43">swap_free<pos:position pos:line="46" pos:column="52"/></name> <operator pos:line="46" pos:column="53">+<pos:position pos:line="46" pos:column="54"/></operator> <name pos:line="46" pos:column="55">swap_cached<pos:position pos:line="46" pos:column="66"/></name><operator pos:line="46" pos:column="66">)<pos:position pos:line="46" pos:column="67"/></operator></expr>;<pos:position pos:line="46" pos:column="68"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">assert<pos:position pos:line="47" pos:column="15"/></name> <argument_list pos:line="47" pos:column="16">(<argument><expr><operator pos:line="47" pos:column="17">!<pos:position pos:line="47" pos:column="18"/></operator><call><name pos:line="47" pos:column="18">isnan<pos:position pos:line="47" pos:column="23"/></name> <argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">swap_used<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">swap_used<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">&lt;<pos:position pos:line="49" pos:column="27"/></operator> <literal type="number" pos:line="49" pos:column="25">0.0<pos:position pos:line="49" pos:column="28"/></literal></expr>)<pos:position pos:line="49" pos:column="29"/></condition><then pos:line="49" pos:column="29">
		<block type="pseudo"><return pos:line="50" pos:column="17">return <expr><operator pos:line="50" pos:column="24">(<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="25">EINVAL<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">)<pos:position pos:line="50" pos:column="32"/></operator></expr>;<pos:position pos:line="50" pos:column="33"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">swap_submit_usage<pos:position pos:line="52" pos:column="26"/></name> <argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">NULL<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">swap_used<pos:position pos:line="52" pos:column="43"/></name> <operator pos:line="52" pos:column="44">*<pos:position pos:line="52" pos:column="45"/></operator> <literal type="number" pos:line="52" pos:column="46">1024.0<pos:position pos:line="52" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="54">swap_free<pos:position pos:line="52" pos:column="63"/></name> <operator pos:line="52" pos:column="64">*<pos:position pos:line="52" pos:column="65"/></operator> <literal type="number" pos:line="52" pos:column="66">1024.0<pos:position pos:line="52" pos:column="72"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><call><name pos:line="53" pos:column="25">isnan<pos:position pos:line="53" pos:column="30"/></name> <argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">swap_cached<pos:position pos:line="53" pos:column="43"/></name></expr></argument>)<pos:position pos:line="53" pos:column="44"/></argument_list></call></expr> ?<pos:position pos:line="53" pos:column="46"/></condition><then pos:line="53" pos:column="46"> <expr><name pos:line="53" pos:column="47">NULL<pos:position pos:line="53" pos:column="51"/></name></expr> <pos:position pos:line="53" pos:column="52"/></then><else pos:line="53" pos:column="52">: <expr><literal type="string" pos:line="53" pos:column="54">"cached"<pos:position pos:line="53" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><call><name pos:line="54" pos:column="25">isnan<pos:position pos:line="54" pos:column="30"/></name> <argument_list pos:line="54" pos:column="31">(<argument><expr><name pos:line="54" pos:column="32">swap_cached<pos:position pos:line="54" pos:column="43"/></name></expr></argument>)<pos:position pos:line="54" pos:column="44"/></argument_list></call></expr> ?<pos:position pos:line="54" pos:column="46"/></condition><then pos:line="54" pos:column="46"> <expr><name pos:line="54" pos:column="47">NAN<pos:position pos:line="54" pos:column="50"/></name></expr> <pos:position pos:line="54" pos:column="51"/></then><else pos:line="54" pos:column="51">: <expr><name pos:line="54" pos:column="53">swap_cached<pos:position pos:line="54" pos:column="64"/></name> <operator pos:line="54" pos:column="65">*<pos:position pos:line="54" pos:column="66"/></operator> <literal type="number" pos:line="54" pos:column="67">1024.0<pos:position pos:line="54" pos:column="73"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="54" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="75"/></expr_stmt>
	<return pos:line="55" pos:column="9">return <expr><operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><literal type="number" pos:line="55" pos:column="17">0<pos:position pos:line="55" pos:column="18"/></literal><operator pos:line="55" pos:column="18">)<pos:position pos:line="55" pos:column="19"/></operator></expr>;<pos:position pos:line="55" pos:column="20"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

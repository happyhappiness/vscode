<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1783_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ut_threshold_add<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">threshold_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">th<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <block pos:line="1" pos:column="52">{ <comment type="block" pos:line="1" pos:column="54">/* {{{ */</comment>
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">name<pos:position pos:line="2" pos:column="12"/></name><index pos:line="2" pos:column="12">[<expr><literal type="number" pos:line="2" pos:column="13">6<pos:position pos:line="2" pos:column="14"/></literal> <operator pos:line="2" pos:column="15">*<pos:position pos:line="2" pos:column="16"/></operator> <name pos:line="2" pos:column="17">DATA_MAX_NAME_LEN<pos:position pos:line="2" pos:column="34"/></name></expr>]<pos:position pos:line="2" pos:column="35"/></index></name></decl>;<pos:position pos:line="2" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">name_copy<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">threshold_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">th_copy<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">threshold_t<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">th_ptr<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">format_name<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">name<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="25">sizeof<argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">name<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="39">th<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">-&gt;<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="43">host<pos:position pos:line="8" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="49">th<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">plugin<pos:position pos:line="8" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="61">th<pos:position pos:line="8" pos:column="63"/></name><operator pos:line="8" pos:column="63">-&gt;<pos:position pos:line="8" pos:column="68"/></operator><name pos:line="8" pos:column="65">plugin_instance<pos:position pos:line="8" pos:column="80"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="9" pos:column="19">th<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">type<pos:position pos:line="9" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="29">th<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">type_instance<pos:position pos:line="9" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call> <operator pos:line="9" pos:column="48">!=<pos:position pos:line="9" pos:column="50"/></operator> <literal type="number" pos:line="9" pos:column="51">0<pos:position pos:line="9" pos:column="52"/></literal></expr>)<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53"> <block pos:line="9" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"ut_threshold_add: format_name failed."<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">name_copy<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">strdup<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">name<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">name_copy<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">==<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">NULL<pos:position pos:line="15" pos:column="24"/></name></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25"> <block pos:line="15" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ERROR<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="string" pos:line="16" pos:column="11">"ut_threshold_add: strdup failed."<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">th_copy<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <call><name pos:line="20" pos:column="13">malloc<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><sizeof pos:line="20" pos:column="20">sizeof<argument_list pos:line="20" pos:column="26">(<argument><expr><operator pos:line="20" pos:column="27">*<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">th_copy<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">th_copy<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">==<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">NULL<pos:position pos:line="21" pos:column="22"/></name></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">sfree<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><name pos:line="22" pos:column="11">name_copy<pos:position pos:line="22" pos:column="20"/></name></expr></argument>)<pos:position pos:line="22" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"ut_threshold_add: malloc failed."<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">-<pos:position pos:line="24" pos:column="14"/></operator><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal><operator pos:line="24" pos:column="15">)<pos:position pos:line="24" pos:column="16"/></operator></expr>;<pos:position pos:line="24" pos:column="17"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">memcpy<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">(<argument><expr><name pos:line="26" pos:column="10">th_copy<pos:position pos:line="26" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="19">th<pos:position pos:line="26" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="23">sizeof<argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">threshold_t<pos:position pos:line="26" pos:column="41"/></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">DEBUG<pos:position pos:line="28" pos:column="8"/></name><argument_list pos:line="28" pos:column="8">(<argument><expr><literal type="string" pos:line="28" pos:column="9">"ut_threshold_add: Adding entry `%s'"<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="48">name<pos:position pos:line="28" pos:column="52"/></name></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">pthread_mutex_lock<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><operator pos:line="30" pos:column="22">&amp;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="23">threshold_lock<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><name pos:line="32" pos:column="3">th_ptr<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <call><name pos:line="32" pos:column="12">threshold_get<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name><name pos:line="32" pos:column="26">th<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">host<pos:position pos:line="32" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="36">th<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-&gt;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="40">plugin<pos:position pos:line="32" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="48">th<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">-&gt;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="52">plugin_instance<pos:position pos:line="32" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="69">th<pos:position pos:line="32" pos:column="71"/></name><operator pos:line="32" pos:column="71">-&gt;<pos:position pos:line="32" pos:column="76"/></operator><name pos:line="32" pos:column="73">type<pos:position pos:line="32" pos:column="77"/></name></name></expr></argument>,
                         <argument><expr><name><name pos:line="33" pos:column="26">th<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">-&gt;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="30">type_instance<pos:position pos:line="33" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>

  <while pos:line="35" pos:column="3">while <condition pos:line="35" pos:column="9">(<expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">th_ptr<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">!=<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="21">NULL<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">)<pos:position pos:line="35" pos:column="26"/></operator> <operator pos:line="35" pos:column="27">&amp;&amp;<pos:position pos:line="35" pos:column="37"/></operator> <operator pos:line="35" pos:column="30">(<pos:position pos:line="35" pos:column="31"/></operator><name><name pos:line="35" pos:column="31">th_ptr<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">next<pos:position pos:line="35" pos:column="43"/></name></name> <operator pos:line="35" pos:column="44">!=<pos:position pos:line="35" pos:column="46"/></operator> <name pos:line="35" pos:column="47">NULL<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">)<pos:position pos:line="35" pos:column="52"/></operator></expr>)<pos:position pos:line="35" pos:column="53"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="5">th_ptr<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <name><name pos:line="36" pos:column="14">th_ptr<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">-&gt;<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="22">next<pos:position pos:line="36" pos:column="26"/></name></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt></block></while>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">th_ptr<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">==<pos:position pos:line="38" pos:column="16"/></operator> <name pos:line="38" pos:column="17">NULL<pos:position pos:line="38" pos:column="21"/></name></expr>)<pos:position pos:line="38" pos:column="22"/></condition><then pos:line="38" pos:column="22"> <comment type="block" pos:line="38" pos:column="23">/* no such threshold yet */</comment>
  <block pos:line="39" pos:column="3">{
    <expr_stmt><expr><name pos:line="40" pos:column="5">status<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <call><name pos:line="40" pos:column="14">c_avl_insert<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">threshold_tree<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">name_copy<pos:position pos:line="40" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="54">th_copy<pos:position pos:line="40" pos:column="61"/></name></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></then> <else pos:line="41" pos:column="5">else <comment type="block" pos:line="41" pos:column="10">/* th_ptr points to the last threshold in the list */</comment>
  <block pos:line="42" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">th_ptr<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">-&gt;<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="13">next<pos:position pos:line="43" pos:column="17"/></name></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <name pos:line="43" pos:column="20">th_copy<pos:position pos:line="43" pos:column="27"/></name></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
    <comment type="block" pos:line="44" pos:column="5">/* name_copy isn't needed */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">sfree<pos:position pos:line="45" pos:column="10"/></name><argument_list pos:line="45" pos:column="10">(<argument><expr><name pos:line="45" pos:column="11">name_copy<pos:position pos:line="45" pos:column="20"/></name></expr></argument>)<pos:position pos:line="45" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="48" pos:column="3">pthread_mutex_unlock<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><operator pos:line="48" pos:column="24">&amp;<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="25">threshold_lock<pos:position pos:line="48" pos:column="39"/></name></expr></argument>)<pos:position pos:line="48" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="41"/></expr_stmt>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">status<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">!=<pos:position pos:line="50" pos:column="16"/></operator> <literal type="number" pos:line="50" pos:column="17">0<pos:position pos:line="50" pos:column="18"/></literal></expr>)<pos:position pos:line="50" pos:column="19"/></condition><then pos:line="50" pos:column="19"> <block pos:line="50" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">ERROR<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><literal type="string" pos:line="51" pos:column="11">"ut_threshold_add: c_avl_insert (%s) failed."<pos:position pos:line="51" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="58">name<pos:position pos:line="51" pos:column="62"/></name></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">sfree<pos:position pos:line="52" pos:column="10"/></name><argument_list pos:line="52" pos:column="10">(<argument><expr><name pos:line="52" pos:column="11">name_copy<pos:position pos:line="52" pos:column="20"/></name></expr></argument>)<pos:position pos:line="52" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">sfree<pos:position pos:line="53" pos:column="10"/></name><argument_list pos:line="53" pos:column="10">(<argument><expr><name pos:line="53" pos:column="11">th_copy<pos:position pos:line="53" pos:column="18"/></name></expr></argument>)<pos:position pos:line="53" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>

  <return pos:line="56" pos:column="3">return <expr><operator pos:line="56" pos:column="10">(<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="11">status<pos:position pos:line="56" pos:column="17"/></name><operator pos:line="56" pos:column="17">)<pos:position pos:line="56" pos:column="18"/></operator></expr>;<pos:position pos:line="56" pos:column="19"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

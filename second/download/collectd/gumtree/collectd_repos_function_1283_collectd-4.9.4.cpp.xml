<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1283_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">process_stat_struct<pos:position pos:line="2" pos:column="20"/></name> <parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">int<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">which<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">void<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">ptr<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">dev<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="67">const<pos:position pos:line="2" pos:column="72"/></specifier> <name pos:line="2" pos:column="73">char<pos:position pos:line="2" pos:column="77"/></name> <modifier pos:line="2" pos:column="78">*<pos:position pos:line="2" pos:column="79"/></modifier></type><name pos:line="2" pos:column="79">mac<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <name pos:line="3" pos:column="32">char<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">type_name<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="49">const<pos:position pos:line="3" pos:column="54"/></specifier> <name pos:line="3" pos:column="55">char<pos:position pos:line="3" pos:column="59"/></name> <modifier pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></modifier></type><name pos:line="3" pos:column="61">misc_name<pos:position pos:line="3" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="71"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uint32_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">misc<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">assert<pos:position pos:line="8" pos:column="15"/></name> <argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">which<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&gt;=<pos:position pos:line="8" pos:column="28"/></operator> <literal type="number" pos:line="8" pos:column="26">1<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">which<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <call><name pos:line="9" pos:column="25">STATIC_ARRAY_SIZE<pos:position pos:line="9" pos:column="42"/></name> <argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">bounds<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name><name pos:line="11" pos:column="18">bounds<pos:position pos:line="11" pos:column="24"/></name><index pos:line="11" pos:column="24">[<expr><name pos:line="11" pos:column="25">which<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">-<pos:position pos:line="11" pos:column="32"/></operator> <literal type="number" pos:line="11" pos:column="33">1<pos:position pos:line="11" pos:column="34"/></literal></expr>]<pos:position pos:line="11" pos:column="35"/></index></name></expr>;<pos:position pos:line="11" pos:column="36"/></init> <condition><expr><name pos:line="11" pos:column="37">i<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">&lt;<pos:position pos:line="11" pos:column="43"/></operator> <name><name pos:line="11" pos:column="41">bounds<pos:position pos:line="11" pos:column="47"/></name><index pos:line="11" pos:column="47">[<expr><name pos:line="11" pos:column="48">which<pos:position pos:line="11" pos:column="53"/></name></expr>]<pos:position pos:line="11" pos:column="54"/></index></name></expr>;<pos:position pos:line="11" pos:column="55"/></condition> <incr><expr><name pos:line="11" pos:column="56">i<pos:position pos:line="11" pos:column="57"/></name><operator pos:line="11" pos:column="57">++<pos:position pos:line="11" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="60"/></control>
	<block pos:line="12" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">uint32_t<pos:position pos:line="13" pos:column="25"/></name></type> <name pos:line="13" pos:column="26">val<pos:position pos:line="13" pos:column="29"/></name> <init pos:line="13" pos:column="30">= <expr><operator pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></operator><operator pos:line="13" pos:column="33">(<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">uint32_t<pos:position pos:line="13" pos:column="42"/></name> <operator pos:line="13" pos:column="43">*<pos:position pos:line="13" pos:column="44"/></operator><operator pos:line="13" pos:column="44">)<pos:position pos:line="13" pos:column="45"/></operator><operator pos:line="13" pos:column="45">(<pos:position pos:line="13" pos:column="46"/></operator><operator pos:line="13" pos:column="46">(<pos:position pos:line="13" pos:column="47"/></operator><operator pos:line="13" pos:column="47">(<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">char<pos:position pos:line="13" pos:column="52"/></name> <operator pos:line="13" pos:column="53">*<pos:position pos:line="13" pos:column="54"/></operator><operator pos:line="13" pos:column="54">)<pos:position pos:line="13" pos:column="55"/></operator> <name pos:line="13" pos:column="56">ptr<pos:position pos:line="13" pos:column="59"/></name><operator pos:line="13" pos:column="59">)<pos:position pos:line="13" pos:column="60"/></operator> <operator pos:line="13" pos:column="61">+<pos:position pos:line="13" pos:column="62"/></operator> <name><name pos:line="13" pos:column="63">specs<pos:position pos:line="13" pos:column="68"/></name><index pos:line="13" pos:column="68">[<expr><name pos:line="13" pos:column="69">i<pos:position pos:line="13" pos:column="70"/></name></expr>]<pos:position pos:line="13" pos:column="71"/></index></name><operator pos:line="13" pos:column="71">.<pos:position pos:line="13" pos:column="72"/></operator><name pos:line="13" pos:column="72">offset<pos:position pos:line="13" pos:column="78"/></name><operator pos:line="13" pos:column="78">)<pos:position pos:line="13" pos:column="79"/></operator></expr></init></decl> ;<pos:position pos:line="13" pos:column="81"/></decl_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><call><name pos:line="15" pos:column="21">item_watched<pos:position pos:line="15" pos:column="33"/></name> <argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">i<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call> <operator pos:line="15" pos:column="38">&amp;&amp;<pos:position pos:line="15" pos:column="48"/></operator> <operator pos:line="15" pos:column="41">(<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="42">val<pos:position pos:line="15" pos:column="45"/></name> <operator pos:line="15" pos:column="46">!=<pos:position pos:line="15" pos:column="48"/></operator> <literal type="number" pos:line="15" pos:column="49">0<pos:position pos:line="15" pos:column="50"/></literal><operator pos:line="15" pos:column="50">)<pos:position pos:line="15" pos:column="51"/></operator></expr>)<pos:position pos:line="15" pos:column="52"/></condition><then pos:line="15" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">submit_counter<pos:position pos:line="16" pos:column="39"/></name> <argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">dev<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">type_name<pos:position pos:line="16" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="57">specs<pos:position pos:line="16" pos:column="62"/></name><index pos:line="16" pos:column="62">[<expr><name pos:line="16" pos:column="63">i<pos:position pos:line="16" pos:column="64"/></name></expr>]<pos:position pos:line="16" pos:column="65"/></index></name><operator pos:line="16" pos:column="65">.<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="66">name<pos:position pos:line="16" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="72">mac<pos:position pos:line="16" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="77">val<pos:position pos:line="16" pos:column="80"/></name></expr></argument>)<pos:position pos:line="16" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="82"/></expr_stmt></block></then></if>

		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">item_summed<pos:position pos:line="18" pos:column="32"/></name> <argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">i<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">misc<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">+=<pos:position pos:line="19" pos:column="32"/></operator> <name pos:line="19" pos:column="33">val<pos:position pos:line="19" pos:column="36"/></name></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></for>
	
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">misc<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">!=<pos:position pos:line="22" pos:column="20"/></operator> <literal type="number" pos:line="22" pos:column="21">0<pos:position pos:line="22" pos:column="22"/></literal></expr>)<pos:position pos:line="22" pos:column="23"/></condition><then pos:line="22" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">submit_counter<pos:position pos:line="23" pos:column="31"/></name> <argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">dev<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">type_name<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">misc_name<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="60">mac<pos:position pos:line="23" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="65">misc<pos:position pos:line="23" pos:column="69"/></name></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="71"/></expr_stmt></block></then></if>

}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

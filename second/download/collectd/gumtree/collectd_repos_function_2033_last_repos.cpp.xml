<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2033_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">value_list_to_string<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">buffer<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">buffer_len<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">data_set_t<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">ds<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">value_list_t<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">vl<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list> <block pos:line="2" pos:column="79">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">offset<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">gauge_t<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">rates<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><literal type="number" pos:line="7" pos:column="10">0<pos:position pos:line="7" pos:column="11"/></literal> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">strcmp<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name><name pos:line="7" pos:column="22">ds<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">type<pos:position pos:line="7" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="32">vl<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">type<pos:position pos:line="7" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">memset<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><name pos:line="9" pos:column="10">buffer<pos:position pos:line="9" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="18">'\0'<pos:position pos:line="9" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="24">buffer_len<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">status<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <call><name pos:line="11" pos:column="12">snprintf<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">buffer<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="29">buffer_len<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="41">"%.3f"<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="49">CDTIME_T_TO_DOUBLE<pos:position pos:line="11" pos:column="67"/></name><argument_list pos:line="11" pos:column="67">(<argument><expr><name><name pos:line="11" pos:column="68">vl<pos:position pos:line="11" pos:column="70"/></name><operator pos:line="11" pos:column="70">-&gt;<pos:position pos:line="11" pos:column="75"/></operator><name pos:line="11" pos:column="72">time<pos:position pos:line="11" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="79"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">status<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">&lt;<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="17">1<pos:position pos:line="12" pos:column="18"/></literal><operator pos:line="12" pos:column="18">)<pos:position pos:line="12" pos:column="19"/></operator> <operator pos:line="12" pos:column="20">||<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="23">(<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">status<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">&gt;=<pos:position pos:line="12" pos:column="36"/></operator> <name pos:line="12" pos:column="34">buffer_len<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">)<pos:position pos:line="12" pos:column="45"/></operator></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="14" pos:column="3">offset<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">status<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>

  <for pos:line="16" pos:column="3">for <control pos:line="16" pos:column="7">(<init><decl><type><name pos:line="16" pos:column="8">size_t<pos:position pos:line="16" pos:column="14"/></name></type> <name pos:line="16" pos:column="15">i<pos:position pos:line="16" pos:column="16"/></name> <init pos:line="16" pos:column="17">= <expr><literal type="number" pos:line="16" pos:column="19">0<pos:position pos:line="16" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="21"/></init> <condition><expr><name pos:line="16" pos:column="22">i<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">&lt;<pos:position pos:line="16" pos:column="28"/></operator> <name><name pos:line="16" pos:column="26">ds<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">ds_num<pos:position pos:line="16" pos:column="36"/></name></name></expr>;<pos:position pos:line="16" pos:column="37"/></condition> <incr><expr><name pos:line="16" pos:column="38">i<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">++<pos:position pos:line="16" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="42"/></control> <block pos:line="16" pos:column="43">{
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name><name pos:line="17" pos:column="10">ds<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">ds<pos:position pos:line="17" pos:column="16"/></name><index pos:line="17" pos:column="16">[<expr><name pos:line="17" pos:column="17">i<pos:position pos:line="17" pos:column="18"/></name></expr>]<pos:position pos:line="17" pos:column="19"/></index></name><operator pos:line="17" pos:column="19">.<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">type<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">!=<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="28">DS_TYPE_COUNTER<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">)<pos:position pos:line="17" pos:column="44"/></operator> <operator pos:line="17" pos:column="45">&amp;&amp;<pos:position pos:line="17" pos:column="55"/></operator>
        <operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name><name pos:line="18" pos:column="10">ds<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">ds<pos:position pos:line="18" pos:column="16"/></name><index pos:line="18" pos:column="16">[<expr><name pos:line="18" pos:column="17">i<pos:position pos:line="18" pos:column="18"/></name></expr>]<pos:position pos:line="18" pos:column="19"/></index></name><operator pos:line="18" pos:column="19">.<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">type<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">!=<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">DS_TYPE_GAUGE<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">)<pos:position pos:line="18" pos:column="42"/></operator> <operator pos:line="18" pos:column="43">&amp;&amp;<pos:position pos:line="18" pos:column="53"/></operator>
        <operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name><name pos:line="19" pos:column="10">ds<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">ds<pos:position pos:line="19" pos:column="16"/></name><index pos:line="19" pos:column="16">[<expr><name pos:line="19" pos:column="17">i<pos:position pos:line="19" pos:column="18"/></name></expr>]<pos:position pos:line="19" pos:column="19"/></index></name><operator pos:line="19" pos:column="19">.<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">type<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">!=<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">DS_TYPE_DERIVE<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">)<pos:position pos:line="19" pos:column="43"/></operator> <operator pos:line="19" pos:column="44">&amp;&amp;<pos:position pos:line="19" pos:column="54"/></operator>
        <operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><name><name pos:line="20" pos:column="10">ds<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">ds<pos:position pos:line="20" pos:column="16"/></name><index pos:line="20" pos:column="16">[<expr><name pos:line="20" pos:column="17">i<pos:position pos:line="20" pos:column="18"/></name></expr>]<pos:position pos:line="20" pos:column="19"/></index></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">type<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">!=<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="28">DS_TYPE_ABSOLUTE<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">)<pos:position pos:line="20" pos:column="45"/></operator></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46"> <block pos:line="20" pos:column="47">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">sfree<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">rates<pos:position pos:line="21" pos:column="18"/></name></expr></argument>)<pos:position pos:line="21" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
      <return pos:line="22" pos:column="7">return <expr><operator pos:line="22" pos:column="14">-<pos:position pos:line="22" pos:column="15"/></operator><literal type="number" pos:line="22" pos:column="15">1<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">ds<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">ds<pos:position pos:line="25" pos:column="15"/></name><index pos:line="25" pos:column="15">[<expr><name pos:line="25" pos:column="16">i<pos:position pos:line="25" pos:column="17"/></name></expr>]<pos:position pos:line="25" pos:column="18"/></index></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">type<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">==<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">DS_TYPE_GAUGE<pos:position pos:line="25" pos:column="40"/></name></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41"> <block pos:line="25" pos:column="42">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">status<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">snprintf<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">buffer<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">+<pos:position pos:line="26" pos:column="33"/></operator> <name pos:line="26" pos:column="34">offset<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">buffer_len<pos:position pos:line="26" pos:column="52"/></name> <operator pos:line="26" pos:column="53">-<pos:position pos:line="26" pos:column="54"/></operator> <name pos:line="26" pos:column="55">offset<pos:position pos:line="26" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="63">",%lf"<pos:position pos:line="26" pos:column="69"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="27" pos:column="25">vl<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">values<pos:position pos:line="27" pos:column="35"/></name><index pos:line="27" pos:column="35">[<expr><name pos:line="27" pos:column="36">i<pos:position pos:line="27" pos:column="37"/></name></expr>]<pos:position pos:line="27" pos:column="38"/></index></name><operator pos:line="27" pos:column="38">.<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="39">gauge<pos:position pos:line="27" pos:column="44"/></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then> <elseif pos:line="28" pos:column="7">else <if pos:line="28" pos:column="12">if <condition pos:line="28" pos:column="15">(<expr><name pos:line="28" pos:column="16">store_rates<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">!=<pos:position pos:line="28" pos:column="30"/></operator> <literal type="number" pos:line="28" pos:column="31">0<pos:position pos:line="28" pos:column="32"/></literal></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33"> <block pos:line="28" pos:column="34">{
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name pos:line="29" pos:column="11">rates<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">==<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">NULL<pos:position pos:line="29" pos:column="24"/></name></expr>)<pos:position pos:line="29" pos:column="25"/></condition><then pos:line="29" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="9">rates<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">uc_get_rate<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">ds<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="33">vl<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt></block></then></if>
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name pos:line="31" pos:column="11">rates<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">==<pos:position pos:line="31" pos:column="19"/></operator> <name pos:line="31" pos:column="20">NULL<pos:position pos:line="31" pos:column="24"/></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25"> <block pos:line="31" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">WARNING<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><literal type="string" pos:line="32" pos:column="17">"csv plugin: "<pos:position pos:line="32" pos:column="31"/></literal>
                <literal type="string" pos:line="33" pos:column="17">"uc_get_rate failed."<pos:position pos:line="33" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><operator pos:line="34" pos:column="16">-<pos:position pos:line="34" pos:column="17"/></operator><literal type="number" pos:line="34" pos:column="17">1<pos:position pos:line="34" pos:column="18"/></literal></expr>;<pos:position pos:line="34" pos:column="19"/></return>
      }<pos:position pos:line="35" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="36" pos:column="7">status<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">snprintf<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">buffer<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">+<pos:position pos:line="36" pos:column="33"/></operator> <name pos:line="36" pos:column="34">offset<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="42">buffer_len<pos:position pos:line="36" pos:column="52"/></name> <operator pos:line="36" pos:column="53">-<pos:position pos:line="36" pos:column="54"/></operator> <name pos:line="36" pos:column="55">offset<pos:position pos:line="36" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="63">",%lf"<pos:position pos:line="36" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="71">rates<pos:position pos:line="36" pos:column="76"/></name><index pos:line="36" pos:column="76">[<expr><name pos:line="36" pos:column="77">i<pos:position pos:line="36" pos:column="78"/></name></expr>]<pos:position pos:line="36" pos:column="79"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if></elseif> <elseif pos:line="37" pos:column="7">else <if pos:line="37" pos:column="12">if <condition pos:line="37" pos:column="15">(<expr><name><name pos:line="37" pos:column="16">ds<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">ds<pos:position pos:line="37" pos:column="22"/></name><index pos:line="37" pos:column="22">[<expr><name pos:line="37" pos:column="23">i<pos:position pos:line="37" pos:column="24"/></name></expr>]<pos:position pos:line="37" pos:column="25"/></index></name><operator pos:line="37" pos:column="25">.<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">type<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">==<pos:position pos:line="37" pos:column="33"/></operator> <name pos:line="37" pos:column="34">DS_TYPE_COUNTER<pos:position pos:line="37" pos:column="49"/></name></expr>)<pos:position pos:line="37" pos:column="50"/></condition><then pos:line="37" pos:column="50"> <block pos:line="37" pos:column="51">{
      <expr_stmt><expr><name pos:line="38" pos:column="7">status<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">snprintf<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">buffer<pos:position pos:line="38" pos:column="31"/></name> <operator pos:line="38" pos:column="32">+<pos:position pos:line="38" pos:column="33"/></operator> <name pos:line="38" pos:column="34">offset<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">buffer_len<pos:position pos:line="38" pos:column="52"/></name> <operator pos:line="38" pos:column="53">-<pos:position pos:line="38" pos:column="54"/></operator> <name pos:line="38" pos:column="55">offset<pos:position pos:line="38" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="63">",%llu"<pos:position pos:line="38" pos:column="70"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="39" pos:column="25">vl<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">values<pos:position pos:line="39" pos:column="35"/></name><index pos:line="39" pos:column="35">[<expr><name pos:line="39" pos:column="36">i<pos:position pos:line="39" pos:column="37"/></name></expr>]<pos:position pos:line="39" pos:column="38"/></index></name><operator pos:line="39" pos:column="38">.<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="39">counter<pos:position pos:line="39" pos:column="46"/></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif> <elseif pos:line="40" pos:column="7">else <if pos:line="40" pos:column="12">if <condition pos:line="40" pos:column="15">(<expr><name><name pos:line="40" pos:column="16">ds<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">ds<pos:position pos:line="40" pos:column="22"/></name><index pos:line="40" pos:column="22">[<expr><name pos:line="40" pos:column="23">i<pos:position pos:line="40" pos:column="24"/></name></expr>]<pos:position pos:line="40" pos:column="25"/></index></name><operator pos:line="40" pos:column="25">.<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">type<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">==<pos:position pos:line="40" pos:column="33"/></operator> <name pos:line="40" pos:column="34">DS_TYPE_DERIVE<pos:position pos:line="40" pos:column="48"/></name></expr>)<pos:position pos:line="40" pos:column="49"/></condition><then pos:line="40" pos:column="49"> <block pos:line="40" pos:column="50">{
      <expr_stmt><expr><name pos:line="41" pos:column="7">status<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">snprintf<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">buffer<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">+<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="34">offset<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="42">buffer_len<pos:position pos:line="41" pos:column="52"/></name> <operator pos:line="41" pos:column="53">-<pos:position pos:line="41" pos:column="54"/></operator> <name pos:line="41" pos:column="55">offset<pos:position pos:line="41" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="63">",%"<pos:position pos:line="41" pos:column="67"/></literal> <name pos:line="41" pos:column="68">PRIi64<pos:position pos:line="41" pos:column="74"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="42" pos:column="25">vl<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">values<pos:position pos:line="42" pos:column="35"/></name><index pos:line="42" pos:column="35">[<expr><name pos:line="42" pos:column="36">i<pos:position pos:line="42" pos:column="37"/></name></expr>]<pos:position pos:line="42" pos:column="38"/></index></name><operator pos:line="42" pos:column="38">.<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">derive<pos:position pos:line="42" pos:column="45"/></name></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if></elseif> <elseif pos:line="43" pos:column="7">else <if pos:line="43" pos:column="12">if <condition pos:line="43" pos:column="15">(<expr><name><name pos:line="43" pos:column="16">ds<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">ds<pos:position pos:line="43" pos:column="22"/></name><index pos:line="43" pos:column="22">[<expr><name pos:line="43" pos:column="23">i<pos:position pos:line="43" pos:column="24"/></name></expr>]<pos:position pos:line="43" pos:column="25"/></index></name><operator pos:line="43" pos:column="25">.<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="26">type<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">==<pos:position pos:line="43" pos:column="33"/></operator> <name pos:line="43" pos:column="34">DS_TYPE_ABSOLUTE<pos:position pos:line="43" pos:column="50"/></name></expr>)<pos:position pos:line="43" pos:column="51"/></condition><then pos:line="43" pos:column="51"> <block pos:line="43" pos:column="52">{
      <expr_stmt><expr><name pos:line="44" pos:column="7">status<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <call><name pos:line="44" pos:column="16">snprintf<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name pos:line="44" pos:column="25">buffer<pos:position pos:line="44" pos:column="31"/></name> <operator pos:line="44" pos:column="32">+<pos:position pos:line="44" pos:column="33"/></operator> <name pos:line="44" pos:column="34">offset<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="42">buffer_len<pos:position pos:line="44" pos:column="52"/></name> <operator pos:line="44" pos:column="53">-<pos:position pos:line="44" pos:column="54"/></operator> <name pos:line="44" pos:column="55">offset<pos:position pos:line="44" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="63">",%"<pos:position pos:line="44" pos:column="67"/></literal> <name pos:line="44" pos:column="68">PRIu64<pos:position pos:line="44" pos:column="74"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="45" pos:column="25">vl<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">-&gt;<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="29">values<pos:position pos:line="45" pos:column="35"/></name><index pos:line="45" pos:column="35">[<expr><name pos:line="45" pos:column="36">i<pos:position pos:line="45" pos:column="37"/></name></expr>]<pos:position pos:line="45" pos:column="38"/></index></name><operator pos:line="45" pos:column="38">.<pos:position pos:line="45" pos:column="39"/></operator><name pos:line="45" pos:column="39">absolute<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><operator pos:line="48" pos:column="9">(<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">status<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">&lt;<pos:position pos:line="48" pos:column="21"/></operator> <literal type="number" pos:line="48" pos:column="19">1<pos:position pos:line="48" pos:column="20"/></literal><operator pos:line="48" pos:column="20">)<pos:position pos:line="48" pos:column="21"/></operator> <operator pos:line="48" pos:column="22">||<pos:position pos:line="48" pos:column="24"/></operator> <operator pos:line="48" pos:column="25">(<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="26">status<pos:position pos:line="48" pos:column="32"/></name> <operator pos:line="48" pos:column="33">&gt;=<pos:position pos:line="48" pos:column="38"/></operator> <operator pos:line="48" pos:column="36">(<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="37">buffer_len<pos:position pos:line="48" pos:column="47"/></name> <operator pos:line="48" pos:column="48">-<pos:position pos:line="48" pos:column="49"/></operator> <name pos:line="48" pos:column="50">offset<pos:position pos:line="48" pos:column="56"/></name><operator pos:line="48" pos:column="56">)<pos:position pos:line="48" pos:column="57"/></operator><operator pos:line="48" pos:column="57">)<pos:position pos:line="48" pos:column="58"/></operator></expr>)<pos:position pos:line="48" pos:column="59"/></condition><then pos:line="48" pos:column="59"> <block pos:line="48" pos:column="60">{
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">sfree<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">rates<pos:position pos:line="49" pos:column="18"/></name></expr></argument>)<pos:position pos:line="49" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="20"/></expr_stmt>
      <return pos:line="50" pos:column="7">return <expr><operator pos:line="50" pos:column="14">-<pos:position pos:line="50" pos:column="15"/></operator><literal type="number" pos:line="50" pos:column="15">1<pos:position pos:line="50" pos:column="16"/></literal></expr>;<pos:position pos:line="50" pos:column="17"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="53" pos:column="5">offset<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">+=<pos:position pos:line="53" pos:column="14"/></operator> <name pos:line="53" pos:column="15">status<pos:position pos:line="53" pos:column="21"/></name></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block></for> <comment type="block" pos:line="54" pos:column="5">/* for ds-&gt;ds_num */</comment>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">sfree<pos:position pos:line="56" pos:column="8"/></name><argument_list pos:line="56" pos:column="8">(<argument><expr><name pos:line="56" pos:column="9">rates<pos:position pos:line="56" pos:column="14"/></name></expr></argument>)<pos:position pos:line="56" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="16"/></expr_stmt>
  <return pos:line="57" pos:column="3">return <expr><literal type="number" pos:line="57" pos:column="10">0<pos:position pos:line="57" pos:column="11"/></literal></expr>;<pos:position pos:line="57" pos:column="12"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

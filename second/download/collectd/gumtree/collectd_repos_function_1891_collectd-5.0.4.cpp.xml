<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1891_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">list_head<pos:position pos:line="1" pos:column="24"/></name></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type>
<name pos:line="2" pos:column="1">iptcc_linearly_search_chain_index<pos:position pos:line="2" pos:column="34"/></name><parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">name<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">TC_HANDLE_T<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">handle<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name><init pos:line="4" pos:column="23">=<expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">res<pos:position pos:line="5" pos:column="16"/></name><init pos:line="5" pos:column="16">=<expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">list_head<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">list_pos<pos:position pos:line="7" pos:column="35"/></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">list_pos<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <operator pos:line="8" pos:column="20">&amp;<pos:position pos:line="8" pos:column="25"/></operator><name><name pos:line="8" pos:column="21">handle<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">chains<pos:position pos:line="8" pos:column="35"/></name></name></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">handle<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">chain_index_sz<pos:position pos:line="10" pos:column="35"/></name></name></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">list_pos<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator> <operator pos:line="11" pos:column="28">&amp;<pos:position pos:line="11" pos:column="33"/></operator><name><name pos:line="11" pos:column="29">handle<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">chain_index<pos:position pos:line="11" pos:column="48"/></name><index pos:line="11" pos:column="48">[<expr><literal type="number" pos:line="11" pos:column="49">0<pos:position pos:line="11" pos:column="50"/></literal></expr>]<pos:position pos:line="11" pos:column="51"/></index></name><operator pos:line="11" pos:column="51">-&gt;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="53">list<pos:position pos:line="11" pos:column="57"/></name></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="13" pos:column="9">/* Linearly walk of chain index array */</comment>

	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></init> <condition><expr><name pos:line="15" pos:column="19">i<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">&lt;<pos:position pos:line="15" pos:column="25"/></operator> <name><name pos:line="15" pos:column="23">handle<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">chain_index_sz<pos:position pos:line="15" pos:column="45"/></name></name></expr>;<pos:position pos:line="15" pos:column="46"/></condition> <incr><expr><name pos:line="15" pos:column="47">i<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">++<pos:position pos:line="15" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="51"/></control> <block pos:line="15" pos:column="52">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">handle<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">chain_index<pos:position pos:line="16" pos:column="40"/></name><index pos:line="16" pos:column="40">[<expr><name pos:line="16" pos:column="41">i<pos:position pos:line="16" pos:column="42"/></name></expr>]<pos:position pos:line="16" pos:column="43"/></index></name></expr>)<pos:position pos:line="16" pos:column="44"/></condition><then pos:line="16" pos:column="44"> <block pos:line="16" pos:column="45">{
			<expr_stmt><expr><name pos:line="17" pos:column="25">res<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <call><name pos:line="17" pos:column="31">strcmp<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name><name pos:line="17" pos:column="38">handle<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">chain_index<pos:position pos:line="17" pos:column="57"/></name><index pos:line="17" pos:column="57">[<expr><name pos:line="17" pos:column="58">i<pos:position pos:line="17" pos:column="59"/></name></expr>]<pos:position pos:line="17" pos:column="60"/></index></name><operator pos:line="17" pos:column="60">-&gt;<pos:position pos:line="17" pos:column="65"/></operator><name pos:line="17" pos:column="62">name<pos:position pos:line="17" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="68">name<pos:position pos:line="17" pos:column="72"/></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="74"/></expr_stmt>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><name pos:line="18" pos:column="29">res<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">&gt;<pos:position pos:line="18" pos:column="37"/></operator> <literal type="number" pos:line="18" pos:column="35">0<pos:position pos:line="18" pos:column="36"/></literal></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37">
				<block type="pseudo"><break pos:line="19" pos:column="33">break;<pos:position pos:line="19" pos:column="39"/></break></block></then></if> <comment type="line" pos:line="19" pos:column="40">// One step too far</comment>
			<expr_stmt><expr><name pos:line="20" pos:column="25">list_pos<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">=<pos:position pos:line="20" pos:column="35"/></operator> <operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator><name><name pos:line="20" pos:column="37">handle<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">chain_index<pos:position pos:line="20" pos:column="56"/></name><index pos:line="20" pos:column="56">[<expr><name pos:line="20" pos:column="57">i<pos:position pos:line="20" pos:column="58"/></name></expr>]<pos:position pos:line="20" pos:column="59"/></index></name><operator pos:line="20" pos:column="59">-&gt;<pos:position pos:line="20" pos:column="64"/></operator><name pos:line="20" pos:column="61">list<pos:position pos:line="20" pos:column="65"/></name></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name pos:line="21" pos:column="29">res<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">==<pos:position pos:line="21" pos:column="35"/></operator> <literal type="number" pos:line="21" pos:column="36">0<pos:position pos:line="21" pos:column="37"/></literal></expr>)<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38">
				<block type="pseudo"><break pos:line="22" pos:column="33">break;<pos:position pos:line="22" pos:column="39"/></break></block></then></if> <comment type="line" pos:line="22" pos:column="40">// Direct hit</comment>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
	}<pos:position pos:line="24" pos:column="10"/></block></for>

	<return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">list_pos<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

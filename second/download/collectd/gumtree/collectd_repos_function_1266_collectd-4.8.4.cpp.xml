<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1266_collectd-4.8.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_to_buffer<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buffer<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">buffer_size<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="58">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">value_list_t<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">vl_def<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name pos:line="3" pos:column="23">data_set_t<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">ds<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="39">const<pos:position pos:line="3" pos:column="44"/></specifier> <name pos:line="3" pos:column="45">value_list_t<pos:position pos:line="3" pos:column="57"/></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">vl<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">buffer_orig<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">buffer<pos:position pos:line="5" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">strcmp<pos:position pos:line="7" pos:column="19"/></name> <argument_list pos:line="7" pos:column="20">(<argument><expr><name><name pos:line="7" pos:column="21">vl_def<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">host<pos:position pos:line="7" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="35">vl<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">host<pos:position pos:line="7" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call> <operator pos:line="7" pos:column="45">!=<pos:position pos:line="7" pos:column="47"/></operator> <literal type="number" pos:line="7" pos:column="48">0<pos:position pos:line="7" pos:column="49"/></literal></expr>)<pos:position pos:line="7" pos:column="50"/></condition><then pos:line="7" pos:column="50">
	<block pos:line="8" pos:column="9">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">write_part_string<pos:position pos:line="9" pos:column="38"/></name> <argument_list pos:line="9" pos:column="39">(<argument><expr><operator pos:line="9" pos:column="40">&amp;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="41">buffer<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="49">&amp;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="50">buffer_size<pos:position pos:line="9" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="63">TYPE_HOST<pos:position pos:line="9" pos:column="72"/></name></expr></argument>,
					<argument><expr><name><name pos:line="10" pos:column="41">vl<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">host<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="51">strlen<pos:position pos:line="10" pos:column="57"/></name> <argument_list pos:line="10" pos:column="58">(<argument><expr><name><name pos:line="10" pos:column="59">vl<pos:position pos:line="10" pos:column="61"/></name><operator pos:line="10" pos:column="61">-&gt;<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="63">host<pos:position pos:line="10" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call> <operator pos:line="10" pos:column="70">!=<pos:position pos:line="10" pos:column="72"/></operator> <literal type="number" pos:line="10" pos:column="73">0<pos:position pos:line="10" pos:column="74"/></literal></expr>)<pos:position pos:line="10" pos:column="75"/></condition><then pos:line="10" pos:column="75">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator><operator pos:line="11" pos:column="33">-<pos:position pos:line="11" pos:column="34"/></operator><literal type="number" pos:line="11" pos:column="34">1<pos:position pos:line="11" pos:column="35"/></literal><operator pos:line="11" pos:column="35">)<pos:position pos:line="11" pos:column="36"/></operator></expr>;<pos:position pos:line="11" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">sstrncpy<pos:position pos:line="12" pos:column="25"/></name> <argument_list pos:line="12" pos:column="26">(<argument><expr><name><name pos:line="12" pos:column="27">vl_def<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">host<pos:position pos:line="12" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="41">vl<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">host<pos:position pos:line="12" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="51">sizeof <argument_list pos:line="12" pos:column="58">(<argument><expr><name><name pos:line="12" pos:column="59">vl_def<pos:position pos:line="12" pos:column="65"/></name><operator pos:line="12" pos:column="65">-&gt;<pos:position pos:line="12" pos:column="70"/></operator><name pos:line="12" pos:column="67">host<pos:position pos:line="12" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">vl_def<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">time<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">!=<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="29">vl<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">time<pos:position pos:line="15" pos:column="37"/></name></name></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38">
	<block pos:line="16" pos:column="9">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">write_part_number<pos:position pos:line="17" pos:column="38"/></name> <argument_list pos:line="17" pos:column="39">(<argument><expr><operator pos:line="17" pos:column="40">&amp;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="41">buffer<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="49">&amp;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="50">buffer_size<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="63">TYPE_TIME<pos:position pos:line="17" pos:column="72"/></name></expr></argument>,
					<argument><expr><operator pos:line="18" pos:column="41">(<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="42">uint64_t<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">)<pos:position pos:line="18" pos:column="51"/></operator> <name><name pos:line="18" pos:column="52">vl<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">-&gt;<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="56">time<pos:position pos:line="18" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="62"/></condition><then pos:line="18" pos:column="62">
			<block type="pseudo"><return pos:line="19" pos:column="25">return <expr><operator pos:line="19" pos:column="32">(<pos:position pos:line="19" pos:column="33"/></operator><operator pos:line="19" pos:column="33">-<pos:position pos:line="19" pos:column="34"/></operator><literal type="number" pos:line="19" pos:column="34">1<pos:position pos:line="19" pos:column="35"/></literal><operator pos:line="19" pos:column="35">)<pos:position pos:line="19" pos:column="36"/></operator></expr>;<pos:position pos:line="19" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">vl_def<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">time<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">=<pos:position pos:line="20" pos:column="31"/></operator> <name><name pos:line="20" pos:column="32">vl<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">time<pos:position pos:line="20" pos:column="40"/></name></name></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">vl_def<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">interval<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">!=<pos:position pos:line="23" pos:column="32"/></operator> <name><name pos:line="23" pos:column="33">vl<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">interval<pos:position pos:line="23" pos:column="45"/></name></name></expr>)<pos:position pos:line="23" pos:column="46"/></condition><then pos:line="23" pos:column="46">
	<block pos:line="24" pos:column="9">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">write_part_number<pos:position pos:line="25" pos:column="38"/></name> <argument_list pos:line="25" pos:column="39">(<argument><expr><operator pos:line="25" pos:column="40">&amp;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="41">buffer<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="49">&amp;<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="50">buffer_size<pos:position pos:line="25" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="63">TYPE_INTERVAL<pos:position pos:line="25" pos:column="76"/></name></expr></argument>,
					<argument><expr><operator pos:line="26" pos:column="41">(<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">uint64_t<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">)<pos:position pos:line="26" pos:column="51"/></operator> <name><name pos:line="26" pos:column="52">vl<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">-&gt;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="56">interval<pos:position pos:line="26" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="66"/></condition><then pos:line="26" pos:column="66">
			<block type="pseudo"><return pos:line="27" pos:column="25">return <expr><operator pos:line="27" pos:column="32">(<pos:position pos:line="27" pos:column="33"/></operator><operator pos:line="27" pos:column="33">-<pos:position pos:line="27" pos:column="34"/></operator><literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal><operator pos:line="27" pos:column="35">)<pos:position pos:line="27" pos:column="36"/></operator></expr>;<pos:position pos:line="27" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">vl_def<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">interval<pos:position pos:line="28" pos:column="33"/></name></name> <operator pos:line="28" pos:column="34">=<pos:position pos:line="28" pos:column="35"/></operator> <name><name pos:line="28" pos:column="36">vl<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">-&gt;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="40">interval<pos:position pos:line="28" pos:column="48"/></name></name></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">strcmp<pos:position pos:line="31" pos:column="19"/></name> <argument_list pos:line="31" pos:column="20">(<argument><expr><name><name pos:line="31" pos:column="21">vl_def<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">plugin<pos:position pos:line="31" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="37">vl<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">plugin<pos:position pos:line="31" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call> <operator pos:line="31" pos:column="49">!=<pos:position pos:line="31" pos:column="51"/></operator> <literal type="number" pos:line="31" pos:column="52">0<pos:position pos:line="31" pos:column="53"/></literal></expr>)<pos:position pos:line="31" pos:column="54"/></condition><then pos:line="31" pos:column="54">
	<block pos:line="32" pos:column="9">{
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><call><name pos:line="33" pos:column="21">write_part_string<pos:position pos:line="33" pos:column="38"/></name> <argument_list pos:line="33" pos:column="39">(<argument><expr><operator pos:line="33" pos:column="40">&amp;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="41">buffer<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="49">&amp;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="50">buffer_size<pos:position pos:line="33" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="63">TYPE_PLUGIN<pos:position pos:line="33" pos:column="74"/></name></expr></argument>,
					<argument><expr><name><name pos:line="34" pos:column="41">vl<pos:position pos:line="34" pos:column="43"/></name><operator pos:line="34" pos:column="43">-&gt;<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="45">plugin<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="53">strlen<pos:position pos:line="34" pos:column="59"/></name> <argument_list pos:line="34" pos:column="60">(<argument><expr><name><name pos:line="34" pos:column="61">vl<pos:position pos:line="34" pos:column="63"/></name><operator pos:line="34" pos:column="63">-&gt;<pos:position pos:line="34" pos:column="68"/></operator><name pos:line="34" pos:column="65">plugin<pos:position pos:line="34" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call> <operator pos:line="34" pos:column="74">!=<pos:position pos:line="34" pos:column="76"/></operator> <literal type="number" pos:line="34" pos:column="77">0<pos:position pos:line="34" pos:column="78"/></literal></expr>)<pos:position pos:line="34" pos:column="79"/></condition><then pos:line="34" pos:column="79">
			<block type="pseudo"><return pos:line="35" pos:column="25">return <expr><operator pos:line="35" pos:column="32">(<pos:position pos:line="35" pos:column="33"/></operator><operator pos:line="35" pos:column="33">-<pos:position pos:line="35" pos:column="34"/></operator><literal type="number" pos:line="35" pos:column="34">1<pos:position pos:line="35" pos:column="35"/></literal><operator pos:line="35" pos:column="35">)<pos:position pos:line="35" pos:column="36"/></operator></expr>;<pos:position pos:line="35" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">sstrncpy<pos:position pos:line="36" pos:column="25"/></name> <argument_list pos:line="36" pos:column="26">(<argument><expr><name><name pos:line="36" pos:column="27">vl_def<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">-&gt;<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="35">plugin<pos:position pos:line="36" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="43">vl<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">-&gt;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="47">plugin<pos:position pos:line="36" pos:column="53"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="55">sizeof <argument_list pos:line="36" pos:column="62">(<argument><expr><name><name pos:line="36" pos:column="63">vl_def<pos:position pos:line="36" pos:column="69"/></name><operator pos:line="36" pos:column="69">-&gt;<pos:position pos:line="36" pos:column="74"/></operator><name pos:line="36" pos:column="71">plugin<pos:position pos:line="36" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="80"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">strcmp<pos:position pos:line="39" pos:column="19"/></name> <argument_list pos:line="39" pos:column="20">(<argument><expr><name><name pos:line="39" pos:column="21">vl_def<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">plugin_instance<pos:position pos:line="39" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="46">vl<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">plugin_instance<pos:position pos:line="39" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call> <operator pos:line="39" pos:column="67">!=<pos:position pos:line="39" pos:column="69"/></operator> <literal type="number" pos:line="39" pos:column="70">0<pos:position pos:line="39" pos:column="71"/></literal></expr>)<pos:position pos:line="39" pos:column="72"/></condition><then pos:line="39" pos:column="72">
	<block pos:line="40" pos:column="9">{
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><call><name pos:line="41" pos:column="21">write_part_string<pos:position pos:line="41" pos:column="38"/></name> <argument_list pos:line="41" pos:column="39">(<argument><expr><operator pos:line="41" pos:column="40">&amp;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="41">buffer<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="49">&amp;<pos:position pos:line="41" pos:column="54"/></operator><name pos:line="41" pos:column="50">buffer_size<pos:position pos:line="41" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="63">TYPE_PLUGIN_INSTANCE<pos:position pos:line="41" pos:column="83"/></name></expr></argument>,
					<argument><expr><name><name pos:line="42" pos:column="41">vl<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">-&gt;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="45">plugin_instance<pos:position pos:line="42" pos:column="60"/></name></name></expr></argument>,
					<argument><expr><call><name pos:line="43" pos:column="41">strlen<pos:position pos:line="43" pos:column="47"/></name> <argument_list pos:line="43" pos:column="48">(<argument><expr><name><name pos:line="43" pos:column="49">vl<pos:position pos:line="43" pos:column="51"/></name><operator pos:line="43" pos:column="51">-&gt;<pos:position pos:line="43" pos:column="56"/></operator><name pos:line="43" pos:column="53">plugin_instance<pos:position pos:line="43" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call> <operator pos:line="43" pos:column="71">!=<pos:position pos:line="43" pos:column="73"/></operator> <literal type="number" pos:line="43" pos:column="74">0<pos:position pos:line="43" pos:column="75"/></literal></expr>)<pos:position pos:line="43" pos:column="76"/></condition><then pos:line="43" pos:column="76">
			<block type="pseudo"><return pos:line="44" pos:column="25">return <expr><operator pos:line="44" pos:column="32">(<pos:position pos:line="44" pos:column="33"/></operator><operator pos:line="44" pos:column="33">-<pos:position pos:line="44" pos:column="34"/></operator><literal type="number" pos:line="44" pos:column="34">1<pos:position pos:line="44" pos:column="35"/></literal><operator pos:line="44" pos:column="35">)<pos:position pos:line="44" pos:column="36"/></operator></expr>;<pos:position pos:line="44" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">sstrncpy<pos:position pos:line="45" pos:column="25"/></name> <argument_list pos:line="45" pos:column="26">(<argument><expr><name><name pos:line="45" pos:column="27">vl_def<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">-&gt;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="35">plugin_instance<pos:position pos:line="45" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="52">vl<pos:position pos:line="45" pos:column="54"/></name><operator pos:line="45" pos:column="54">-&gt;<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="56">plugin_instance<pos:position pos:line="45" pos:column="71"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="73">sizeof <argument_list pos:line="45" pos:column="80">(<argument><expr><name><name pos:line="45" pos:column="81">vl_def<pos:position pos:line="45" pos:column="87"/></name><operator pos:line="45" pos:column="87">-&gt;<pos:position pos:line="45" pos:column="92"/></operator><name pos:line="45" pos:column="89">plugin_instance<pos:position pos:line="45" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="105"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="107"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><call><name pos:line="48" pos:column="13">strcmp<pos:position pos:line="48" pos:column="19"/></name> <argument_list pos:line="48" pos:column="20">(<argument><expr><name><name pos:line="48" pos:column="21">vl_def<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">-&gt;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="29">type<pos:position pos:line="48" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="35">vl<pos:position pos:line="48" pos:column="37"/></name><operator pos:line="48" pos:column="37">-&gt;<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="39">type<pos:position pos:line="48" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call> <operator pos:line="48" pos:column="45">!=<pos:position pos:line="48" pos:column="47"/></operator> <literal type="number" pos:line="48" pos:column="48">0<pos:position pos:line="48" pos:column="49"/></literal></expr>)<pos:position pos:line="48" pos:column="50"/></condition><then pos:line="48" pos:column="50">
	<block pos:line="49" pos:column="9">{
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><call><name pos:line="50" pos:column="21">write_part_string<pos:position pos:line="50" pos:column="38"/></name> <argument_list pos:line="50" pos:column="39">(<argument><expr><operator pos:line="50" pos:column="40">&amp;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="41">buffer<pos:position pos:line="50" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="49">&amp;<pos:position pos:line="50" pos:column="54"/></operator><name pos:line="50" pos:column="50">buffer_size<pos:position pos:line="50" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="63">TYPE_TYPE<pos:position pos:line="50" pos:column="72"/></name></expr></argument>,
					<argument><expr><name><name pos:line="51" pos:column="41">vl<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">type<pos:position pos:line="51" pos:column="49"/></name></name></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="51">strlen<pos:position pos:line="51" pos:column="57"/></name> <argument_list pos:line="51" pos:column="58">(<argument><expr><name><name pos:line="51" pos:column="59">vl<pos:position pos:line="51" pos:column="61"/></name><operator pos:line="51" pos:column="61">-&gt;<pos:position pos:line="51" pos:column="66"/></operator><name pos:line="51" pos:column="63">type<pos:position pos:line="51" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call> <operator pos:line="51" pos:column="70">!=<pos:position pos:line="51" pos:column="72"/></operator> <literal type="number" pos:line="51" pos:column="73">0<pos:position pos:line="51" pos:column="74"/></literal></expr>)<pos:position pos:line="51" pos:column="75"/></condition><then pos:line="51" pos:column="75">
			<block type="pseudo"><return pos:line="52" pos:column="25">return <expr><operator pos:line="52" pos:column="32">(<pos:position pos:line="52" pos:column="33"/></operator><operator pos:line="52" pos:column="33">-<pos:position pos:line="52" pos:column="34"/></operator><literal type="number" pos:line="52" pos:column="34">1<pos:position pos:line="52" pos:column="35"/></literal><operator pos:line="52" pos:column="35">)<pos:position pos:line="52" pos:column="36"/></operator></expr>;<pos:position pos:line="52" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">sstrncpy<pos:position pos:line="53" pos:column="25"/></name> <argument_list pos:line="53" pos:column="26">(<argument><expr><name><name pos:line="53" pos:column="27">vl_def<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">-&gt;<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="35">type<pos:position pos:line="53" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="41">ds<pos:position pos:line="53" pos:column="43"/></name><operator pos:line="53" pos:column="43">-&gt;<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="45">type<pos:position pos:line="53" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="51">sizeof <argument_list pos:line="53" pos:column="58">(<argument><expr><name><name pos:line="53" pos:column="59">vl_def<pos:position pos:line="53" pos:column="65"/></name><operator pos:line="53" pos:column="65">-&gt;<pos:position pos:line="53" pos:column="70"/></operator><name pos:line="53" pos:column="67">type<pos:position pos:line="53" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if>

	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">strcmp<pos:position pos:line="56" pos:column="19"/></name> <argument_list pos:line="56" pos:column="20">(<argument><expr><name><name pos:line="56" pos:column="21">vl_def<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">-&gt;<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="29">type_instance<pos:position pos:line="56" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="44">vl<pos:position pos:line="56" pos:column="46"/></name><operator pos:line="56" pos:column="46">-&gt;<pos:position pos:line="56" pos:column="51"/></operator><name pos:line="56" pos:column="48">type_instance<pos:position pos:line="56" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="62"/></argument_list></call> <operator pos:line="56" pos:column="63">!=<pos:position pos:line="56" pos:column="65"/></operator> <literal type="number" pos:line="56" pos:column="66">0<pos:position pos:line="56" pos:column="67"/></literal></expr>)<pos:position pos:line="56" pos:column="68"/></condition><then pos:line="56" pos:column="68">
	<block pos:line="57" pos:column="9">{
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><call><name pos:line="58" pos:column="21">write_part_string<pos:position pos:line="58" pos:column="38"/></name> <argument_list pos:line="58" pos:column="39">(<argument><expr><operator pos:line="58" pos:column="40">&amp;<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="41">buffer<pos:position pos:line="58" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="49">&amp;<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="50">buffer_size<pos:position pos:line="58" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="63">TYPE_TYPE_INSTANCE<pos:position pos:line="58" pos:column="81"/></name></expr></argument>,
					<argument><expr><name><name pos:line="59" pos:column="41">vl<pos:position pos:line="59" pos:column="43"/></name><operator pos:line="59" pos:column="43">-&gt;<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="45">type_instance<pos:position pos:line="59" pos:column="58"/></name></name></expr></argument>,
					<argument><expr><call><name pos:line="60" pos:column="41">strlen<pos:position pos:line="60" pos:column="47"/></name> <argument_list pos:line="60" pos:column="48">(<argument><expr><name><name pos:line="60" pos:column="49">vl<pos:position pos:line="60" pos:column="51"/></name><operator pos:line="60" pos:column="51">-&gt;<pos:position pos:line="60" pos:column="56"/></operator><name pos:line="60" pos:column="53">type_instance<pos:position pos:line="60" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="68"/></argument_list></call> <operator pos:line="60" pos:column="69">!=<pos:position pos:line="60" pos:column="71"/></operator> <literal type="number" pos:line="60" pos:column="72">0<pos:position pos:line="60" pos:column="73"/></literal></expr>)<pos:position pos:line="60" pos:column="74"/></condition><then pos:line="60" pos:column="74">
			<block type="pseudo"><return pos:line="61" pos:column="25">return <expr><operator pos:line="61" pos:column="32">(<pos:position pos:line="61" pos:column="33"/></operator><operator pos:line="61" pos:column="33">-<pos:position pos:line="61" pos:column="34"/></operator><literal type="number" pos:line="61" pos:column="34">1<pos:position pos:line="61" pos:column="35"/></literal><operator pos:line="61" pos:column="35">)<pos:position pos:line="61" pos:column="36"/></operator></expr>;<pos:position pos:line="61" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">sstrncpy<pos:position pos:line="62" pos:column="25"/></name> <argument_list pos:line="62" pos:column="26">(<argument><expr><name><name pos:line="62" pos:column="27">vl_def<pos:position pos:line="62" pos:column="33"/></name><operator pos:line="62" pos:column="33">-&gt;<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="35">type_instance<pos:position pos:line="62" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="50">vl<pos:position pos:line="62" pos:column="52"/></name><operator pos:line="62" pos:column="52">-&gt;<pos:position pos:line="62" pos:column="57"/></operator><name pos:line="62" pos:column="54">type_instance<pos:position pos:line="62" pos:column="67"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="69">sizeof <argument_list pos:line="62" pos:column="76">(<argument><expr><name><name pos:line="62" pos:column="77">vl_def<pos:position pos:line="62" pos:column="83"/></name><operator pos:line="62" pos:column="83">-&gt;<pos:position pos:line="62" pos:column="88"/></operator><name pos:line="62" pos:column="85">type_instance<pos:position pos:line="62" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="99"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="101"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if>
	
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><call><name pos:line="65" pos:column="13">write_part_values<pos:position pos:line="65" pos:column="30"/></name> <argument_list pos:line="65" pos:column="31">(<argument><expr><operator pos:line="65" pos:column="32">&amp;<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="33">buffer<pos:position pos:line="65" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="41">&amp;<pos:position pos:line="65" pos:column="46"/></operator><name pos:line="65" pos:column="42">buffer_size<pos:position pos:line="65" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="55">ds<pos:position pos:line="65" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="59">vl<pos:position pos:line="65" pos:column="61"/></name></expr></argument>)<pos:position pos:line="65" pos:column="62"/></argument_list></call> <operator pos:line="65" pos:column="63">!=<pos:position pos:line="65" pos:column="65"/></operator> <literal type="number" pos:line="65" pos:column="66">0<pos:position pos:line="65" pos:column="67"/></literal></expr>)<pos:position pos:line="65" pos:column="68"/></condition><then pos:line="65" pos:column="68">
		<block type="pseudo"><return pos:line="66" pos:column="17">return <expr><operator pos:line="66" pos:column="24">(<pos:position pos:line="66" pos:column="25"/></operator><operator pos:line="66" pos:column="25">-<pos:position pos:line="66" pos:column="26"/></operator><literal type="number" pos:line="66" pos:column="26">1<pos:position pos:line="66" pos:column="27"/></literal><operator pos:line="66" pos:column="27">)<pos:position pos:line="66" pos:column="28"/></operator></expr>;<pos:position pos:line="66" pos:column="29"/></return></block></then></if>

	<return pos:line="68" pos:column="9">return <expr><operator pos:line="68" pos:column="16">(<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="17">buffer<pos:position pos:line="68" pos:column="23"/></name> <operator pos:line="68" pos:column="24">-<pos:position pos:line="68" pos:column="25"/></operator> <name pos:line="68" pos:column="26">buffer_orig<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">)<pos:position pos:line="68" pos:column="38"/></operator></expr>;<pos:position pos:line="68" pos:column="39"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

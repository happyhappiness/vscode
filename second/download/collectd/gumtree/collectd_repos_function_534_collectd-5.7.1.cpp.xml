<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_534_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">values_name_to_sqlarray<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">data_set_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">ds<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">string<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">size_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">string_len<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list> <block pos:line="2" pos:column="57">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">str_ptr<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">str_len<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">str_ptr<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <name pos:line="6" pos:column="13">string<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">str_len<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">string_len<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><decl><type><name pos:line="9" pos:column="8">size_t<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></init> <condition><expr><name pos:line="9" pos:column="22">i<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&lt;<pos:position pos:line="9" pos:column="28"/></operator> <name><name pos:line="9" pos:column="26">ds<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">ds_num<pos:position pos:line="9" pos:column="36"/></name></name></expr>;<pos:position pos:line="9" pos:column="37"/></condition> <incr><expr><operator pos:line="9" pos:column="38">++<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="40">i<pos:position pos:line="9" pos:column="41"/></name></expr></incr>)<pos:position pos:line="9" pos:column="42"/></control> <block pos:line="9" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">status<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><call><name pos:line="10" pos:column="18">ssnprintf<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">str_ptr<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">str_len<pos:position pos:line="10" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="46">",'%s'"<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="55">ds<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">-&gt;<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="59">ds<pos:position pos:line="10" pos:column="61"/></name><index pos:line="10" pos:column="61">[<expr><name pos:line="10" pos:column="62">i<pos:position pos:line="10" pos:column="63"/></name></expr>]<pos:position pos:line="10" pos:column="64"/></index></name><operator pos:line="10" pos:column="64">.<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="65">name<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="71"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">status<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&lt;<pos:position pos:line="12" pos:column="20"/></operator> <literal type="number" pos:line="12" pos:column="18">1<pos:position pos:line="12" pos:column="19"/></literal></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
      <block type="pseudo"><return pos:line="13" pos:column="7">return <expr><name pos:line="13" pos:column="14">NULL<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></return></block></then>
    <elseif pos:line="14" pos:column="5">else <if pos:line="14" pos:column="10">if <condition pos:line="14" pos:column="13">(<expr><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">size_t<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">)<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">status<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">&gt;=<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="32">str_len<pos:position pos:line="14" pos:column="39"/></name></expr>)<pos:position pos:line="14" pos:column="40"/></condition><then pos:line="14" pos:column="40"> <block pos:line="14" pos:column="41">{
      <expr_stmt><expr><name pos:line="15" pos:column="7">str_len<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
      <break pos:line="16" pos:column="7">break;<pos:position pos:line="16" pos:column="13"/></break>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif> <else pos:line="17" pos:column="7">else <block pos:line="17" pos:column="12">{
      <expr_stmt><expr><name pos:line="18" pos:column="7">str_ptr<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">+=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">status<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="19" pos:column="7">str_len<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">-=<pos:position pos:line="19" pos:column="17"/></operator> <operator pos:line="19" pos:column="18">(<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">size_t<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">)<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">status<pos:position pos:line="19" pos:column="32"/></name></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>
  }<pos:position pos:line="21" pos:column="4"/></block></for>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">str_len<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">&lt;=<pos:position pos:line="23" pos:column="20"/></operator> <literal type="number" pos:line="23" pos:column="18">2<pos:position pos:line="23" pos:column="19"/></literal></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20"> <block pos:line="23" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">log_err<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><literal type="string" pos:line="24" pos:column="13">"c_psql_write: Failed to stringify value names"<pos:position pos:line="24" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">NULL<pos:position pos:line="25" pos:column="16"/></name></expr>;<pos:position pos:line="25" pos:column="17"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="28" pos:column="3">/* overwrite the first comma */</comment>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">string<pos:position pos:line="29" pos:column="9"/></name><index pos:line="29" pos:column="9">[<expr><literal type="number" pos:line="29" pos:column="10">0<pos:position pos:line="29" pos:column="11"/></literal></expr>]<pos:position pos:line="29" pos:column="12"/></index></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <literal type="char" pos:line="29" pos:column="15">'{'<pos:position pos:line="29" pos:column="18"/></literal></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">str_ptr<pos:position pos:line="30" pos:column="10"/></name><index pos:line="30" pos:column="10">[<expr><literal type="number" pos:line="30" pos:column="11">0<pos:position pos:line="30" pos:column="12"/></literal></expr>]<pos:position pos:line="30" pos:column="13"/></index></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <literal type="char" pos:line="30" pos:column="16">'}'<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">str_ptr<pos:position pos:line="31" pos:column="10"/></name><index pos:line="31" pos:column="10">[<expr><literal type="number" pos:line="31" pos:column="11">1<pos:position pos:line="31" pos:column="12"/></literal></expr>]<pos:position pos:line="31" pos:column="13"/></index></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <literal type="char" pos:line="31" pos:column="16">'\0'<pos:position pos:line="31" pos:column="20"/></literal></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>

  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">string<pos:position pos:line="33" pos:column="16"/></name></expr>;<pos:position pos:line="33" pos:column="17"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_676_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">procstat_t<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ps_list_register<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">name<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">regexp<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list> <block pos:line="1" pos:column="75">{
  <expr_stmt><expr><name pos:line="2" pos:column="3">procstat_t<pos:position pos:line="2" pos:column="13"/></name> <operator pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></operator><operator pos:line="2" pos:column="15">new<pos:position pos:line="2" pos:column="18"/></operator></expr>;<pos:position pos:line="2" pos:column="19"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">procstat_t<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">ptr<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="6" pos:column="3">new<pos:position pos:line="6" pos:column="6"/></operator> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <call><name pos:line="6" pos:column="9">calloc<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="19">sizeof<argument_list pos:line="6" pos:column="25">(<argument><expr><operator pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></operator><operator pos:line="6" pos:column="27">new<pos:position pos:line="6" pos:column="30"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">new<pos:position pos:line="7" pos:column="10"/></operator> <operator pos:line="7" pos:column="11">==<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">NULL<pos:position pos:line="7" pos:column="18"/></name></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19"> <block pos:line="7" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"processes plugin: ps_list_register: calloc failed."<pos:position pos:line="8" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">NULL<pos:position pos:line="9" pos:column="16"/></name></expr>;<pos:position pos:line="9" pos:column="17"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">sstrncpy<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><operator pos:line="11" pos:column="12">new<pos:position pos:line="11" pos:column="15"/></operator><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">name<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="23">name<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="29">sizeof<argument_list pos:line="11" pos:column="35">(<argument><expr><operator pos:line="11" pos:column="36">new<pos:position pos:line="11" pos:column="39"/></operator><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">name<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="13" pos:column="3">new<pos:position pos:line="13" pos:column="6"/></operator><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">io_rchar<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <operator pos:line="13" pos:column="19">-<pos:position pos:line="13" pos:column="20"/></operator><literal type="number" pos:line="13" pos:column="20">1<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="14" pos:column="3">new<pos:position pos:line="14" pos:column="6"/></operator><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">io_wchar<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <operator pos:line="14" pos:column="19">-<pos:position pos:line="14" pos:column="20"/></operator><literal type="number" pos:line="14" pos:column="20">1<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="15" pos:column="3">new<pos:position pos:line="15" pos:column="6"/></operator><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">io_syscr<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">-<pos:position pos:line="15" pos:column="20"/></operator><literal type="number" pos:line="15" pos:column="20">1<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="16" pos:column="3">new<pos:position pos:line="16" pos:column="6"/></operator><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">io_syscw<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <operator pos:line="16" pos:column="19">-<pos:position pos:line="16" pos:column="20"/></operator><literal type="number" pos:line="16" pos:column="20">1<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="17" pos:column="3">new<pos:position pos:line="17" pos:column="6"/></operator><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">io_diskr<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <operator pos:line="17" pos:column="19">-<pos:position pos:line="17" pos:column="20"/></operator><literal type="number" pos:line="17" pos:column="20">1<pos:position pos:line="17" pos:column="21"/></literal></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="18" pos:column="3">new<pos:position pos:line="18" pos:column="6"/></operator><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">io_diskw<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <operator pos:line="18" pos:column="19">-<pos:position pos:line="18" pos:column="20"/></operator><literal type="number" pos:line="18" pos:column="20">1<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="19" pos:column="3">new<pos:position pos:line="19" pos:column="6"/></operator><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">cswitch_vol<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <operator pos:line="19" pos:column="22">-<pos:position pos:line="19" pos:column="23"/></operator><literal type="number" pos:line="19" pos:column="23">1<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="20" pos:column="3">new<pos:position pos:line="20" pos:column="6"/></operator><operator pos:line="20" pos:column="6">-&gt;<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="8">cswitch_invol<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <operator pos:line="20" pos:column="24">-<pos:position pos:line="20" pos:column="25"/></operator><literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="22" pos:column="3">new<pos:position pos:line="22" pos:column="6"/></operator><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">report_fd_num<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">report_fd_num<pos:position pos:line="22" pos:column="37"/></name></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="23" pos:column="3">new<pos:position pos:line="23" pos:column="6"/></operator><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">report_maps_num<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">report_maps_num<pos:position pos:line="23" pos:column="41"/></name></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="24" pos:column="3">new<pos:position pos:line="24" pos:column="6"/></operator><operator pos:line="24" pos:column="6">-&gt;<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="8">report_ctx_switch<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="28">report_ctx_switch<pos:position pos:line="24" pos:column="45"/></name></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>

<cpp:if pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">if<pos:position pos:line="26" pos:column="4"/></cpp:directive> <expr><name pos:line="26" pos:column="5">HAVE_REGEX_H<pos:position pos:line="26" pos:column="17"/></name></expr></cpp:if>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">regexp<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">!=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">NULL<pos:position pos:line="27" pos:column="21"/></name></expr>)<pos:position pos:line="27" pos:column="22"/></condition><then pos:line="27" pos:column="22"> <block pos:line="27" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">DEBUG<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><literal type="string" pos:line="28" pos:column="11">"ProcessMatch: adding \"%s\" as criteria to process %s."<pos:position pos:line="28" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="69">regexp<pos:position pos:line="28" pos:column="75"/></name></expr></argument>,
          <argument><expr><name pos:line="29" pos:column="11">name<pos:position pos:line="29" pos:column="15"/></name></expr></argument>)<pos:position pos:line="29" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="30" pos:column="5">new<pos:position pos:line="30" pos:column="8"/></operator><operator pos:line="30" pos:column="8">-&gt;<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="10">re<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">malloc<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><sizeof pos:line="30" pos:column="22">sizeof<argument_list pos:line="30" pos:column="28">(<argument><expr><operator pos:line="30" pos:column="29">*<pos:position pos:line="30" pos:column="30"/></operator><operator pos:line="30" pos:column="30">new<pos:position pos:line="30" pos:column="33"/></operator><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">re<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">new<pos:position pos:line="31" pos:column="12"/></operator><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">re<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">==<pos:position pos:line="31" pos:column="19"/></operator> <name pos:line="31" pos:column="20">NULL<pos:position pos:line="31" pos:column="24"/></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25"> <block pos:line="31" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">ERROR<pos:position pos:line="32" pos:column="12"/></name><argument_list pos:line="32" pos:column="12">(<argument><expr><literal type="string" pos:line="32" pos:column="13">"processes plugin: ps_list_register: malloc failed."<pos:position pos:line="32" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">sfree<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><operator pos:line="33" pos:column="13">new<pos:position pos:line="33" pos:column="16"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="18"/></expr_stmt>
      <return pos:line="34" pos:column="7">return <expr><name pos:line="34" pos:column="14">NULL<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="37" pos:column="5">status<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <call><name pos:line="37" pos:column="14">regcomp<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><operator pos:line="37" pos:column="22">new<pos:position pos:line="37" pos:column="25"/></operator><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">re<pos:position pos:line="37" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="31">regexp<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">REG_EXTENDED<pos:position pos:line="37" pos:column="51"/></name> <operator pos:line="37" pos:column="52">|<pos:position pos:line="37" pos:column="53"/></operator> <name pos:line="37" pos:column="54">REG_NOSUB<pos:position pos:line="37" pos:column="63"/></name></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="65"/></expr_stmt>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">status<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">!=<pos:position pos:line="38" pos:column="18"/></operator> <literal type="number" pos:line="38" pos:column="19">0<pos:position pos:line="38" pos:column="20"/></literal></expr>)<pos:position pos:line="38" pos:column="21"/></condition><then pos:line="38" pos:column="21"> <block pos:line="38" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">DEBUG<pos:position pos:line="39" pos:column="12"/></name><argument_list pos:line="39" pos:column="12">(<argument><expr><literal type="string" pos:line="39" pos:column="13">"ProcessMatch: compiling the regular expression \"%s\" failed."<pos:position pos:line="39" pos:column="76"/></literal></expr></argument>,
            <argument><expr><name pos:line="40" pos:column="13">regexp<pos:position pos:line="40" pos:column="19"/></name></expr></argument>)<pos:position pos:line="40" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">sfree<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><operator pos:line="41" pos:column="13">new<pos:position pos:line="41" pos:column="16"/></operator><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">re<pos:position pos:line="41" pos:column="20"/></name></expr></argument>)<pos:position pos:line="41" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">sfree<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><operator pos:line="42" pos:column="13">new<pos:position pos:line="42" pos:column="16"/></operator></expr></argument>)<pos:position pos:line="42" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="18"/></expr_stmt>
      <return pos:line="43" pos:column="7">return <expr><name pos:line="43" pos:column="14">NULL<pos:position pos:line="43" pos:column="18"/></name></expr>;<pos:position pos:line="43" pos:column="19"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>
<cpp:else pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">else<pos:position pos:line="46" pos:column="6"/></cpp:directive></cpp:else>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">regexp<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">!=<pos:position pos:line="47" pos:column="16"/></operator> <name pos:line="47" pos:column="17">NULL<pos:position pos:line="47" pos:column="21"/></name></expr>)<pos:position pos:line="47" pos:column="22"/></condition><then pos:line="47" pos:column="22"> <block pos:line="47" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">ERROR<pos:position pos:line="48" pos:column="10"/></name><argument_list pos:line="48" pos:column="10">(<argument><expr><literal type="string" pos:line="48" pos:column="11">"processes plugin: ps_list_register: "<pos:position pos:line="48" pos:column="49"/></literal>
          <literal type="string" pos:line="49" pos:column="11">"Regular expression \"%s\" found in config "<pos:position pos:line="49" pos:column="55"/></literal>
          <literal type="string" pos:line="50" pos:column="11">"file, but support for regular expressions "<pos:position pos:line="50" pos:column="55"/></literal>
          <literal type="string" pos:line="51" pos:column="11">"has been disabled at compile time."<pos:position pos:line="51" pos:column="47"/></literal></expr></argument>,
          <argument><expr><name pos:line="52" pos:column="11">regexp<pos:position pos:line="52" pos:column="17"/></name></expr></argument>)<pos:position pos:line="52" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">sfree<pos:position pos:line="53" pos:column="10"/></name><argument_list pos:line="53" pos:column="10">(<argument><expr><operator pos:line="53" pos:column="11">new<pos:position pos:line="53" pos:column="14"/></operator></expr></argument>)<pos:position pos:line="53" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="16"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">NULL<pos:position pos:line="54" pos:column="16"/></name></expr>;<pos:position pos:line="54" pos:column="17"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>

  <for pos:line="58" pos:column="3">for <control pos:line="58" pos:column="7">(<init><expr><name pos:line="58" pos:column="8">ptr<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <name pos:line="58" pos:column="14">list_head_g<pos:position pos:line="58" pos:column="25"/></name></expr>;<pos:position pos:line="58" pos:column="26"/></init> <condition><expr><name pos:line="58" pos:column="27">ptr<pos:position pos:line="58" pos:column="30"/></name> <operator pos:line="58" pos:column="31">!=<pos:position pos:line="58" pos:column="33"/></operator> <name pos:line="58" pos:column="34">NULL<pos:position pos:line="58" pos:column="38"/></name></expr>;<pos:position pos:line="58" pos:column="39"/></condition> <incr><expr><name pos:line="58" pos:column="40">ptr<pos:position pos:line="58" pos:column="43"/></name> <operator pos:line="58" pos:column="44">=<pos:position pos:line="58" pos:column="45"/></operator> <name><name pos:line="58" pos:column="46">ptr<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">-&gt;<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="51">next<pos:position pos:line="58" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="58" pos:column="56"/></control> <block pos:line="58" pos:column="57">{
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><call><name pos:line="59" pos:column="9">strcmp<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><name><name pos:line="59" pos:column="16">ptr<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">-&gt;<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="21">name<pos:position pos:line="59" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="27">name<pos:position pos:line="59" pos:column="31"/></name></expr></argument>)<pos:position pos:line="59" pos:column="32"/></argument_list></call> <operator pos:line="59" pos:column="33">==<pos:position pos:line="59" pos:column="35"/></operator> <literal type="number" pos:line="59" pos:column="36">0<pos:position pos:line="59" pos:column="37"/></literal></expr>)<pos:position pos:line="59" pos:column="38"/></condition><then pos:line="59" pos:column="38"> <block pos:line="59" pos:column="39">{
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">WARNING<pos:position pos:line="60" pos:column="14"/></name><argument_list pos:line="60" pos:column="14">(<argument><expr><literal type="string" pos:line="60" pos:column="15">"processes plugin: You have configured more "<pos:position pos:line="60" pos:column="60"/></literal>
              <literal type="string" pos:line="61" pos:column="15">"than one `Process' or "<pos:position pos:line="61" pos:column="39"/></literal>
              <literal type="string" pos:line="62" pos:column="15">"`ProcessMatch' with the same name. "<pos:position pos:line="62" pos:column="52"/></literal>
              <literal type="string" pos:line="63" pos:column="15">"All but the first setting will be "<pos:position pos:line="63" pos:column="51"/></literal>
              <literal type="string" pos:line="64" pos:column="15">"ignored."<pos:position pos:line="64" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt>
<cpp:if pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">if<pos:position pos:line="65" pos:column="4"/></cpp:directive> <expr><name pos:line="65" pos:column="5">HAVE_REGEX_H<pos:position pos:line="65" pos:column="17"/></name></expr></cpp:if>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">sfree<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><operator pos:line="66" pos:column="13">new<pos:position pos:line="66" pos:column="16"/></operator><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">re<pos:position pos:line="66" pos:column="20"/></name></expr></argument>)<pos:position pos:line="66" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">sfree<pos:position pos:line="68" pos:column="12"/></name><argument_list pos:line="68" pos:column="12">(<argument><expr><operator pos:line="68" pos:column="13">new<pos:position pos:line="68" pos:column="16"/></operator></expr></argument>)<pos:position pos:line="68" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="18"/></expr_stmt>
      <return pos:line="69" pos:column="7">return <expr><name pos:line="69" pos:column="14">NULL<pos:position pos:line="69" pos:column="18"/></name></expr>;<pos:position pos:line="69" pos:column="19"/></return>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><name><name pos:line="72" pos:column="9">ptr<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">-&gt;<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="14">next<pos:position pos:line="72" pos:column="18"/></name></name> <operator pos:line="72" pos:column="19">==<pos:position pos:line="72" pos:column="21"/></operator> <name pos:line="72" pos:column="22">NULL<pos:position pos:line="72" pos:column="26"/></name></expr>)<pos:position pos:line="72" pos:column="27"/></condition><then pos:line="72" pos:column="27">
      <block type="pseudo"><break pos:line="73" pos:column="7">break;<pos:position pos:line="73" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="74" pos:column="4"/></block></for>

  <if pos:line="76" pos:column="3">if <condition pos:line="76" pos:column="6">(<expr><name pos:line="76" pos:column="7">ptr<pos:position pos:line="76" pos:column="10"/></name> <operator pos:line="76" pos:column="11">==<pos:position pos:line="76" pos:column="13"/></operator> <name pos:line="76" pos:column="14">NULL<pos:position pos:line="76" pos:column="18"/></name></expr>)<pos:position pos:line="76" pos:column="19"/></condition><then pos:line="76" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="5">list_head_g<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">=<pos:position pos:line="77" pos:column="18"/></operator> <operator pos:line="77" pos:column="19">new<pos:position pos:line="77" pos:column="22"/></operator></expr>;<pos:position pos:line="77" pos:column="23"/></expr_stmt></block></then>
  <else pos:line="78" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="79" pos:column="5">ptr<pos:position pos:line="79" pos:column="8"/></name><operator pos:line="79" pos:column="8">-&gt;<pos:position pos:line="79" pos:column="13"/></operator><name pos:line="79" pos:column="10">next<pos:position pos:line="79" pos:column="14"/></name></name> <operator pos:line="79" pos:column="15">=<pos:position pos:line="79" pos:column="16"/></operator> <operator pos:line="79" pos:column="17">new<pos:position pos:line="79" pos:column="20"/></operator></expr>;<pos:position pos:line="79" pos:column="21"/></expr_stmt></block></else></if>

  <return pos:line="81" pos:column="3">return <expr><operator pos:line="81" pos:column="10">new<pos:position pos:line="81" pos:column="13"/></operator></expr>;<pos:position pos:line="81" pos:column="14"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

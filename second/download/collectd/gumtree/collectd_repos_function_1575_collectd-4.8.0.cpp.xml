<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1575_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">counters_nomap<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">STRUCT_COUNTERS_INFO<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">newcounters<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">unsigned<pos:position pos:line="1" pos:column="71"/></name> <name pos:line="1" pos:column="72">int<pos:position pos:line="1" pos:column="75"/></name></type> <name pos:line="1" pos:column="76">idx<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name><name pos:line="3" pos:column="9">newcounters<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">-&gt;<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="22">counters<pos:position pos:line="3" pos:column="30"/></name><index pos:line="3" pos:column="30">[<expr><name pos:line="3" pos:column="31">idx<pos:position pos:line="3" pos:column="34"/></name></expr>]<pos:position pos:line="3" pos:column="35"/></index></name> <operator pos:line="3" pos:column="36">=<pos:position pos:line="3" pos:column="37"/></operator> <operator pos:line="3" pos:column="38">(<pos:position pos:line="3" pos:column="39"/></operator><operator pos:line="3" pos:column="39">(<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="40">STRUCT_COUNTERS<pos:position pos:line="3" pos:column="55"/></name><operator pos:line="3" pos:column="55">)<pos:position pos:line="3" pos:column="56"/></operator> <block pos:line="3" pos:column="57">{ <expr><literal type="number" pos:line="3" pos:column="59">0<pos:position pos:line="3" pos:column="60"/></literal></expr>, <expr><literal type="number" pos:line="3" pos:column="62">0<pos:position pos:line="3" pos:column="63"/></literal></expr>}<pos:position pos:line="3" pos:column="64"/></block><operator pos:line="3" pos:column="64">)<pos:position pos:line="3" pos:column="65"/></operator></expr>;<pos:position pos:line="3" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">DEBUGP_C<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><literal type="string" pos:line="4" pos:column="18">"NOMAP =&gt; zero\n"<pos:position pos:line="4" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="37"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_693_collectd-4.5.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">rrd_queue_thread<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">data<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
        <decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">timeval<pos:position pos:line="3" pos:column="23"/></name></name></type> <name pos:line="3" pos:column="24">tv_next_update<pos:position pos:line="3" pos:column="38"/></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">timeval<pos:position pos:line="4" pos:column="23"/></name></name></type> <name pos:line="4" pos:column="24">tv_now<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="6" pos:column="9">gettimeofday<pos:position pos:line="6" pos:column="21"/></name> <argument_list pos:line="6" pos:column="22">(<argument><expr><operator pos:line="6" pos:column="23">&amp;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="24">tv_next_update<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <comment type="block" pos:line="6" pos:column="40">/* timezone = */</comment> <argument><expr><name pos:line="6" pos:column="57">NULL<pos:position pos:line="6" pos:column="61"/></name></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="63"/></expr_stmt>

	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><literal type="number" pos:line="8" pos:column="16">42<pos:position pos:line="8" pos:column="18"/></literal></expr>)<pos:position pos:line="8" pos:column="19"/></condition>
	<block pos:line="9" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">rrd_queue_t<pos:position pos:line="10" pos:column="28"/></name> <modifier pos:line="10" pos:column="29">*<pos:position pos:line="10" pos:column="30"/></modifier></type><name pos:line="10" pos:column="30">queue_entry<pos:position pos:line="10" pos:column="41"/></name></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">rrd_cache_t<pos:position pos:line="11" pos:column="28"/></name> <modifier pos:line="11" pos:column="29">*<pos:position pos:line="11" pos:column="30"/></modifier></type><name pos:line="11" pos:column="30">cache_entry<pos:position pos:line="11" pos:column="41"/></name></decl>;<pos:position pos:line="11" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name> <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier><modifier pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></modifier></type><name pos:line="12" pos:column="24">values<pos:position pos:line="12" pos:column="30"/></name></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type>    <name pos:line="13" pos:column="24">values_num<pos:position pos:line="13" pos:column="34"/></name></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type>    <name pos:line="14" pos:column="24">i<pos:position pos:line="14" pos:column="25"/></name></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>

                <expr_stmt><expr><call><name pos:line="16" pos:column="17">pthread_mutex_lock<pos:position pos:line="16" pos:column="35"/></name> <argument_list pos:line="16" pos:column="36">(<argument><expr><operator pos:line="16" pos:column="37">&amp;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="38">queue_lock<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>
                <comment type="block" pos:line="17" pos:column="17">/* Wait for values to arrive */</comment>
                <while pos:line="18" pos:column="17">while <condition pos:line="18" pos:column="23">(<expr><literal type="boolean" pos:line="18" pos:column="24">true<pos:position pos:line="18" pos:column="28"/></literal></expr>)<pos:position pos:line="18" pos:column="29"/></condition>
                <block pos:line="19" pos:column="17">{
                  <decl_stmt><decl><type><name><name pos:line="20" pos:column="19">struct<pos:position pos:line="20" pos:column="25"/></name> <name pos:line="20" pos:column="26">timespec<pos:position pos:line="20" pos:column="34"/></name></name></type> <name pos:line="20" pos:column="35">ts_wait<pos:position pos:line="20" pos:column="42"/></name></decl>;<pos:position pos:line="20" pos:column="43"/></decl_stmt>
                  <decl_stmt><decl><type><name pos:line="21" pos:column="19">int<pos:position pos:line="21" pos:column="22"/></name></type> <name pos:line="21" pos:column="23">status<pos:position pos:line="21" pos:column="29"/></name></decl>;<pos:position pos:line="21" pos:column="30"/></decl_stmt>

                  <while pos:line="23" pos:column="19">while <condition pos:line="23" pos:column="25">(<expr><operator pos:line="23" pos:column="26">(<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">flushq_head<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">==<pos:position pos:line="23" pos:column="41"/></operator> <name pos:line="23" pos:column="42">NULL<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">)<pos:position pos:line="23" pos:column="47"/></operator> <operator pos:line="23" pos:column="48">&amp;&amp;<pos:position pos:line="23" pos:column="58"/></operator> <operator pos:line="23" pos:column="51">(<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="52">queue_head<pos:position pos:line="23" pos:column="62"/></name> <operator pos:line="23" pos:column="63">==<pos:position pos:line="23" pos:column="65"/></operator> <name pos:line="23" pos:column="66">NULL<pos:position pos:line="23" pos:column="70"/></name><operator pos:line="23" pos:column="70">)<pos:position pos:line="23" pos:column="71"/></operator>
                      <operator pos:line="24" pos:column="23">&amp;&amp;<pos:position pos:line="24" pos:column="33"/></operator> <operator pos:line="24" pos:column="26">(<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">do_shutdown<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">==<pos:position pos:line="24" pos:column="41"/></operator> <literal type="number" pos:line="24" pos:column="42">0<pos:position pos:line="24" pos:column="43"/></literal><operator pos:line="24" pos:column="43">)<pos:position pos:line="24" pos:column="44"/></operator></expr>)<pos:position pos:line="24" pos:column="45"/></condition>
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="21">pthread_cond_wait<pos:position pos:line="25" pos:column="38"/></name> <argument_list pos:line="25" pos:column="39">(<argument><expr><operator pos:line="25" pos:column="40">&amp;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="41">queue_cond<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="53">&amp;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="54">queue_lock<pos:position pos:line="25" pos:column="64"/></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="66"/></expr_stmt></block></while>

                  <if pos:line="27" pos:column="19">if <condition pos:line="27" pos:column="22">(<expr><operator pos:line="27" pos:column="23">(<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="24">flushq_head<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">==<pos:position pos:line="27" pos:column="38"/></operator> <name pos:line="27" pos:column="39">NULL<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">)<pos:position pos:line="27" pos:column="44"/></operator> <operator pos:line="27" pos:column="45">&amp;&amp;<pos:position pos:line="27" pos:column="55"/></operator> <operator pos:line="27" pos:column="48">(<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="49">queue_head<pos:position pos:line="27" pos:column="59"/></name> <operator pos:line="27" pos:column="60">==<pos:position pos:line="27" pos:column="62"/></operator> <name pos:line="27" pos:column="63">NULL<pos:position pos:line="27" pos:column="67"/></name><operator pos:line="27" pos:column="67">)<pos:position pos:line="27" pos:column="68"/></operator></expr>)<pos:position pos:line="27" pos:column="69"/></condition><then pos:line="27" pos:column="69">
                    <block type="pseudo"><break pos:line="28" pos:column="21">break;<pos:position pos:line="28" pos:column="27"/></break></block></then></if>

                  <comment type="block" pos:line="30" pos:column="19">/* Don't delay if there's something to flush */</comment>
                  <if pos:line="31" pos:column="19">if <condition pos:line="31" pos:column="22">(<expr><name pos:line="31" pos:column="23">flushq_head<pos:position pos:line="31" pos:column="34"/></name> <operator pos:line="31" pos:column="35">!=<pos:position pos:line="31" pos:column="37"/></operator> <name pos:line="31" pos:column="38">NULL<pos:position pos:line="31" pos:column="42"/></name></expr>)<pos:position pos:line="31" pos:column="43"/></condition><then pos:line="31" pos:column="43">
                    <block type="pseudo"><break pos:line="32" pos:column="21">break;<pos:position pos:line="32" pos:column="27"/></break></block></then></if>

                  <comment type="block" pos:line="34" pos:column="19">/* Don't delay if we're shutting down */</comment>
                  <if pos:line="35" pos:column="19">if <condition pos:line="35" pos:column="22">(<expr><name pos:line="35" pos:column="23">do_shutdown<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">!=<pos:position pos:line="35" pos:column="37"/></operator> <literal type="number" pos:line="35" pos:column="38">0<pos:position pos:line="35" pos:column="39"/></literal></expr>)<pos:position pos:line="35" pos:column="40"/></condition><then pos:line="35" pos:column="40">
                    <block type="pseudo"><break pos:line="36" pos:column="21">break;<pos:position pos:line="36" pos:column="27"/></break></block></then></if>

                  <comment type="block" pos:line="38" pos:column="19">/* Don't delay if no delay was configured. */</comment>
                  <if pos:line="39" pos:column="19">if <condition pos:line="39" pos:column="22">(<expr><name pos:line="39" pos:column="23">write_rate<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">&lt;=<pos:position pos:line="39" pos:column="39"/></operator> <literal type="number" pos:line="39" pos:column="37">0.0<pos:position pos:line="39" pos:column="40"/></literal></expr>)<pos:position pos:line="39" pos:column="41"/></condition><then pos:line="39" pos:column="41">
                    <block type="pseudo"><break pos:line="40" pos:column="21">break;<pos:position pos:line="40" pos:column="27"/></break></block></then></if>

                  <expr_stmt><expr><call><name pos:line="42" pos:column="19">gettimeofday<pos:position pos:line="42" pos:column="31"/></name> <argument_list pos:line="42" pos:column="32">(<argument><expr><operator pos:line="42" pos:column="33">&amp;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="34">tv_now<pos:position pos:line="42" pos:column="40"/></name></expr></argument>, <comment type="block" pos:line="42" pos:column="42">/* timezone = */</comment> <argument><expr><name pos:line="42" pos:column="59">NULL<pos:position pos:line="42" pos:column="63"/></name></expr></argument>)<pos:position pos:line="42" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="65"/></expr_stmt>
                  <expr_stmt><expr><name pos:line="43" pos:column="19">status<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">=<pos:position pos:line="43" pos:column="27"/></operator> <call><name pos:line="43" pos:column="28">timeval_sub_timespec<pos:position pos:line="43" pos:column="48"/></name> <argument_list pos:line="43" pos:column="49">(<argument><expr><operator pos:line="43" pos:column="50">&amp;<pos:position pos:line="43" pos:column="55"/></operator><name pos:line="43" pos:column="51">tv_next_update<pos:position pos:line="43" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="67">&amp;<pos:position pos:line="43" pos:column="72"/></operator><name pos:line="43" pos:column="68">tv_now<pos:position pos:line="43" pos:column="74"/></name></expr></argument>,
                      <argument><expr><operator pos:line="44" pos:column="23">&amp;<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="24">ts_wait<pos:position pos:line="44" pos:column="31"/></name></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
                  <comment type="block" pos:line="45" pos:column="19">/* We're good to go */</comment>
                  <if pos:line="46" pos:column="19">if <condition pos:line="46" pos:column="22">(<expr><name pos:line="46" pos:column="23">status<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">!=<pos:position pos:line="46" pos:column="32"/></operator> <literal type="number" pos:line="46" pos:column="33">0<pos:position pos:line="46" pos:column="34"/></literal></expr>)<pos:position pos:line="46" pos:column="35"/></condition><then pos:line="46" pos:column="35">
                    <block type="pseudo"><break pos:line="47" pos:column="21">break;<pos:position pos:line="47" pos:column="27"/></break></block></then></if>

                  <comment type="block" pos:line="49" pos:column="19">/* We're supposed to wait a bit with this update, so we'll
                   * wait for the next addition to the queue or to the end of
                   * the wait period - whichever comes first. */</comment>
                  <expr_stmt><expr><name><name pos:line="52" pos:column="19">ts_wait<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">.<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="27">tv_sec<pos:position pos:line="52" pos:column="33"/></name></name> <operator pos:line="52" pos:column="34">=<pos:position pos:line="52" pos:column="35"/></operator> <name><name pos:line="52" pos:column="36">tv_next_update<pos:position pos:line="52" pos:column="50"/></name><operator pos:line="52" pos:column="50">.<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="51">tv_sec<pos:position pos:line="52" pos:column="57"/></name></name></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt>
                  <expr_stmt><expr><name><name pos:line="53" pos:column="19">ts_wait<pos:position pos:line="53" pos:column="26"/></name><operator pos:line="53" pos:column="26">.<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="27">tv_nsec<pos:position pos:line="53" pos:column="34"/></name></name> <operator pos:line="53" pos:column="35">=<pos:position pos:line="53" pos:column="36"/></operator> <literal type="number" pos:line="53" pos:column="37">1000<pos:position pos:line="53" pos:column="41"/></literal> <operator pos:line="53" pos:column="42">*<pos:position pos:line="53" pos:column="43"/></operator> <name><name pos:line="53" pos:column="44">tv_next_update<pos:position pos:line="53" pos:column="58"/></name><operator pos:line="53" pos:column="58">.<pos:position pos:line="53" pos:column="59"/></operator><name pos:line="53" pos:column="59">tv_usec<pos:position pos:line="53" pos:column="66"/></name></name></expr>;<pos:position pos:line="53" pos:column="67"/></expr_stmt>

                  <expr_stmt><expr><name pos:line="55" pos:column="19">status<pos:position pos:line="55" pos:column="25"/></name> <operator pos:line="55" pos:column="26">=<pos:position pos:line="55" pos:column="27"/></operator> <call><name pos:line="55" pos:column="28">pthread_cond_timedwait<pos:position pos:line="55" pos:column="50"/></name> <argument_list pos:line="55" pos:column="51">(<argument><expr><operator pos:line="55" pos:column="52">&amp;<pos:position pos:line="55" pos:column="57"/></operator><name pos:line="55" pos:column="53">queue_cond<pos:position pos:line="55" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="65">&amp;<pos:position pos:line="55" pos:column="70"/></operator><name pos:line="55" pos:column="66">queue_lock<pos:position pos:line="55" pos:column="76"/></name></expr></argument>,
                      <argument><expr><operator pos:line="56" pos:column="23">&amp;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="24">ts_wait<pos:position pos:line="56" pos:column="31"/></name></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>
                  <if pos:line="57" pos:column="19">if <condition pos:line="57" pos:column="22">(<expr><name pos:line="57" pos:column="23">status<pos:position pos:line="57" pos:column="29"/></name> <operator pos:line="57" pos:column="30">==<pos:position pos:line="57" pos:column="32"/></operator> <name pos:line="57" pos:column="33">ETIMEDOUT<pos:position pos:line="57" pos:column="42"/></name></expr>)<pos:position pos:line="57" pos:column="43"/></condition><then pos:line="57" pos:column="43">
                    <block type="pseudo"><break pos:line="58" pos:column="21">break;<pos:position pos:line="58" pos:column="27"/></break></block></then></if>
                }<pos:position pos:line="59" pos:column="18"/></block></while> <comment type="block" pos:line="59" pos:column="19">/* while (true) */</comment>

                <comment type="block" pos:line="61" pos:column="17">/* XXX: If you need to lock both, cache_lock and queue_lock, at
                 * the same time, ALWAYS lock `cache_lock' first! */</comment>

                <comment type="block" pos:line="64" pos:column="17">/* We're in the shutdown phase */</comment>
                <if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><operator pos:line="65" pos:column="21">(<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="22">flushq_head<pos:position pos:line="65" pos:column="33"/></name> <operator pos:line="65" pos:column="34">==<pos:position pos:line="65" pos:column="36"/></operator> <name pos:line="65" pos:column="37">NULL<pos:position pos:line="65" pos:column="41"/></name><operator pos:line="65" pos:column="41">)<pos:position pos:line="65" pos:column="42"/></operator> <operator pos:line="65" pos:column="43">&amp;&amp;<pos:position pos:line="65" pos:column="53"/></operator> <operator pos:line="65" pos:column="46">(<pos:position pos:line="65" pos:column="47"/></operator><name pos:line="65" pos:column="47">queue_head<pos:position pos:line="65" pos:column="57"/></name> <operator pos:line="65" pos:column="58">==<pos:position pos:line="65" pos:column="60"/></operator> <name pos:line="65" pos:column="61">NULL<pos:position pos:line="65" pos:column="65"/></name><operator pos:line="65" pos:column="65">)<pos:position pos:line="65" pos:column="66"/></operator></expr>)<pos:position pos:line="65" pos:column="67"/></condition><then pos:line="65" pos:column="67">
                <block pos:line="66" pos:column="17">{
                  <expr_stmt><expr><call><name pos:line="67" pos:column="19">pthread_mutex_unlock<pos:position pos:line="67" pos:column="39"/></name> <argument_list pos:line="67" pos:column="40">(<argument><expr><operator pos:line="67" pos:column="41">&amp;<pos:position pos:line="67" pos:column="46"/></operator><name pos:line="67" pos:column="42">queue_lock<pos:position pos:line="67" pos:column="52"/></name></expr></argument>)<pos:position pos:line="67" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="54"/></expr_stmt>
                  <break pos:line="68" pos:column="19">break;<pos:position pos:line="68" pos:column="25"/></break>
                }<pos:position pos:line="69" pos:column="18"/></block></then></if>

                <if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><name pos:line="71" pos:column="21">flushq_head<pos:position pos:line="71" pos:column="32"/></name> <operator pos:line="71" pos:column="33">!=<pos:position pos:line="71" pos:column="35"/></operator> <name pos:line="71" pos:column="36">NULL<pos:position pos:line="71" pos:column="40"/></name></expr>)<pos:position pos:line="71" pos:column="41"/></condition><then pos:line="71" pos:column="41">
                <block pos:line="72" pos:column="17">{
                  <comment type="block" pos:line="73" pos:column="19">/* Dequeue the first flush entry */</comment>
                  <expr_stmt><expr><name pos:line="74" pos:column="19">queue_entry<pos:position pos:line="74" pos:column="30"/></name> <operator pos:line="74" pos:column="31">=<pos:position pos:line="74" pos:column="32"/></operator> <name pos:line="74" pos:column="33">flushq_head<pos:position pos:line="74" pos:column="44"/></name></expr>;<pos:position pos:line="74" pos:column="45"/></expr_stmt>
                  <if pos:line="75" pos:column="19">if <condition pos:line="75" pos:column="22">(<expr><name pos:line="75" pos:column="23">flushq_head<pos:position pos:line="75" pos:column="34"/></name> <operator pos:line="75" pos:column="35">==<pos:position pos:line="75" pos:column="37"/></operator> <name pos:line="75" pos:column="38">flushq_tail<pos:position pos:line="75" pos:column="49"/></name></expr>)<pos:position pos:line="75" pos:column="50"/></condition><then pos:line="75" pos:column="50">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="21">flushq_head<pos:position pos:line="76" pos:column="32"/></name> <operator pos:line="76" pos:column="33">=<pos:position pos:line="76" pos:column="34"/></operator> <name pos:line="76" pos:column="35">flushq_tail<pos:position pos:line="76" pos:column="46"/></name> <operator pos:line="76" pos:column="47">=<pos:position pos:line="76" pos:column="48"/></operator> <name pos:line="76" pos:column="49">NULL<pos:position pos:line="76" pos:column="53"/></name></expr>;<pos:position pos:line="76" pos:column="54"/></expr_stmt></block></then>
                  <else pos:line="77" pos:column="19">else
                    <block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="21">flushq_head<pos:position pos:line="78" pos:column="32"/></name> <operator pos:line="78" pos:column="33">=<pos:position pos:line="78" pos:column="34"/></operator> <name><name pos:line="78" pos:column="35">flushq_head<pos:position pos:line="78" pos:column="46"/></name><operator pos:line="78" pos:column="46">-&gt;<pos:position pos:line="78" pos:column="51"/></operator><name pos:line="78" pos:column="48">next<pos:position pos:line="78" pos:column="52"/></name></name></expr>;<pos:position pos:line="78" pos:column="53"/></expr_stmt></block></else></if>
                }<pos:position pos:line="79" pos:column="18"/></block></then>
                <else pos:line="80" pos:column="17">else <comment type="block" pos:line="80" pos:column="22">/* if (queue_head != NULL) */</comment>
                <block pos:line="81" pos:column="17">{
                  <comment type="block" pos:line="82" pos:column="19">/* Dequeue the first regular entry */</comment>
                  <expr_stmt><expr><name pos:line="83" pos:column="19">queue_entry<pos:position pos:line="83" pos:column="30"/></name> <operator pos:line="83" pos:column="31">=<pos:position pos:line="83" pos:column="32"/></operator> <name pos:line="83" pos:column="33">queue_head<pos:position pos:line="83" pos:column="43"/></name></expr>;<pos:position pos:line="83" pos:column="44"/></expr_stmt>
                  <if pos:line="84" pos:column="19">if <condition pos:line="84" pos:column="22">(<expr><name pos:line="84" pos:column="23">queue_head<pos:position pos:line="84" pos:column="33"/></name> <operator pos:line="84" pos:column="34">==<pos:position pos:line="84" pos:column="36"/></operator> <name pos:line="84" pos:column="37">queue_tail<pos:position pos:line="84" pos:column="47"/></name></expr>)<pos:position pos:line="84" pos:column="48"/></condition><then pos:line="84" pos:column="48">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="85" pos:column="21">queue_head<pos:position pos:line="85" pos:column="31"/></name> <operator pos:line="85" pos:column="32">=<pos:position pos:line="85" pos:column="33"/></operator> <name pos:line="85" pos:column="34">queue_tail<pos:position pos:line="85" pos:column="44"/></name> <operator pos:line="85" pos:column="45">=<pos:position pos:line="85" pos:column="46"/></operator> <name pos:line="85" pos:column="47">NULL<pos:position pos:line="85" pos:column="51"/></name></expr>;<pos:position pos:line="85" pos:column="52"/></expr_stmt></block></then>
                  <else pos:line="86" pos:column="19">else
                    <block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="21">queue_head<pos:position pos:line="87" pos:column="31"/></name> <operator pos:line="87" pos:column="32">=<pos:position pos:line="87" pos:column="33"/></operator> <name><name pos:line="87" pos:column="34">queue_head<pos:position pos:line="87" pos:column="44"/></name><operator pos:line="87" pos:column="44">-&gt;<pos:position pos:line="87" pos:column="49"/></operator><name pos:line="87" pos:column="46">next<pos:position pos:line="87" pos:column="50"/></name></name></expr>;<pos:position pos:line="87" pos:column="51"/></expr_stmt></block></else></if>
                }<pos:position pos:line="88" pos:column="18"/></block></else></if>

		<comment type="block" pos:line="90" pos:column="17">/* Unlock the queue again */</comment>
		<expr_stmt><expr><call><name pos:line="91" pos:column="17">pthread_mutex_unlock<pos:position pos:line="91" pos:column="37"/></name> <argument_list pos:line="91" pos:column="38">(<argument><expr><operator pos:line="91" pos:column="39">&amp;<pos:position pos:line="91" pos:column="44"/></operator><name pos:line="91" pos:column="40">queue_lock<pos:position pos:line="91" pos:column="50"/></name></expr></argument>)<pos:position pos:line="91" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="52"/></expr_stmt>

		<comment type="block" pos:line="93" pos:column="17">/* We now need the cache lock so the entry isn't updated while
		 * we make a copy of it's values */</comment>
		<expr_stmt><expr><call><name pos:line="95" pos:column="17">pthread_mutex_lock<pos:position pos:line="95" pos:column="35"/></name> <argument_list pos:line="95" pos:column="36">(<argument><expr><operator pos:line="95" pos:column="37">&amp;<pos:position pos:line="95" pos:column="42"/></operator><name pos:line="95" pos:column="38">cache_lock<pos:position pos:line="95" pos:column="48"/></name></expr></argument>)<pos:position pos:line="95" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="50"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="97" pos:column="17">c_avl_get<pos:position pos:line="97" pos:column="26"/></name> <argument_list pos:line="97" pos:column="27">(<argument><expr><name pos:line="97" pos:column="28">cache<pos:position pos:line="97" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="35">queue_entry<pos:position pos:line="97" pos:column="46"/></name><operator pos:line="97" pos:column="46">-&gt;<pos:position pos:line="97" pos:column="51"/></operator><name pos:line="97" pos:column="48">filename<pos:position pos:line="97" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="58">(<pos:position pos:line="97" pos:column="59"/></operator><name pos:line="97" pos:column="59">void<pos:position pos:line="97" pos:column="63"/></name> <operator pos:line="97" pos:column="64">*<pos:position pos:line="97" pos:column="65"/></operator><operator pos:line="97" pos:column="65">)<pos:position pos:line="97" pos:column="66"/></operator> <operator pos:line="97" pos:column="67">&amp;<pos:position pos:line="97" pos:column="72"/></operator><name pos:line="97" pos:column="68">cache_entry<pos:position pos:line="97" pos:column="79"/></name></expr></argument>)<pos:position pos:line="97" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="81"/></expr_stmt>

		<expr_stmt><expr><name pos:line="99" pos:column="17">values<pos:position pos:line="99" pos:column="23"/></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <name><name pos:line="99" pos:column="26">cache_entry<pos:position pos:line="99" pos:column="37"/></name><operator pos:line="99" pos:column="37">-&gt;<pos:position pos:line="99" pos:column="42"/></operator><name pos:line="99" pos:column="39">values<pos:position pos:line="99" pos:column="45"/></name></name></expr>;<pos:position pos:line="99" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="100" pos:column="17">values_num<pos:position pos:line="100" pos:column="27"/></name> <operator pos:line="100" pos:column="28">=<pos:position pos:line="100" pos:column="29"/></operator> <name><name pos:line="100" pos:column="30">cache_entry<pos:position pos:line="100" pos:column="41"/></name><operator pos:line="100" pos:column="41">-&gt;<pos:position pos:line="100" pos:column="46"/></operator><name pos:line="100" pos:column="43">values_num<pos:position pos:line="100" pos:column="53"/></name></name></expr>;<pos:position pos:line="100" pos:column="54"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="102" pos:column="17">cache_entry<pos:position pos:line="102" pos:column="28"/></name><operator pos:line="102" pos:column="28">-&gt;<pos:position pos:line="102" pos:column="33"/></operator><name pos:line="102" pos:column="30">values<pos:position pos:line="102" pos:column="36"/></name></name> <operator pos:line="102" pos:column="37">=<pos:position pos:line="102" pos:column="38"/></operator> <name pos:line="102" pos:column="39">NULL<pos:position pos:line="102" pos:column="43"/></name></expr>;<pos:position pos:line="102" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="103" pos:column="17">cache_entry<pos:position pos:line="103" pos:column="28"/></name><operator pos:line="103" pos:column="28">-&gt;<pos:position pos:line="103" pos:column="33"/></operator><name pos:line="103" pos:column="30">values_num<pos:position pos:line="103" pos:column="40"/></name></name> <operator pos:line="103" pos:column="41">=<pos:position pos:line="103" pos:column="42"/></operator> <literal type="number" pos:line="103" pos:column="43">0<pos:position pos:line="103" pos:column="44"/></literal></expr>;<pos:position pos:line="103" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="104" pos:column="17">cache_entry<pos:position pos:line="104" pos:column="28"/></name><operator pos:line="104" pos:column="28">-&gt;<pos:position pos:line="104" pos:column="33"/></operator><name pos:line="104" pos:column="30">flags<pos:position pos:line="104" pos:column="35"/></name></name> <operator pos:line="104" pos:column="36">=<pos:position pos:line="104" pos:column="37"/></operator> <name pos:line="104" pos:column="38">FLAG_NONE<pos:position pos:line="104" pos:column="47"/></name></expr>;<pos:position pos:line="104" pos:column="48"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="106" pos:column="17">pthread_mutex_unlock<pos:position pos:line="106" pos:column="37"/></name> <argument_list pos:line="106" pos:column="38">(<argument><expr><operator pos:line="106" pos:column="39">&amp;<pos:position pos:line="106" pos:column="44"/></operator><name pos:line="106" pos:column="40">cache_lock<pos:position pos:line="106" pos:column="50"/></name></expr></argument>)<pos:position pos:line="106" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="52"/></expr_stmt>

		<comment type="block" pos:line="108" pos:column="17">/* Update `tv_next_update' */</comment>
		<if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><name pos:line="109" pos:column="21">write_rate<pos:position pos:line="109" pos:column="31"/></name> <operator pos:line="109" pos:column="32">&gt;<pos:position pos:line="109" pos:column="36"/></operator> <literal type="number" pos:line="109" pos:column="34">0.0<pos:position pos:line="109" pos:column="37"/></literal></expr>)<pos:position pos:line="109" pos:column="38"/></condition><then pos:line="109" pos:column="38"> 
                <block pos:line="110" pos:column="17">{
                  <expr_stmt><expr><call><name pos:line="111" pos:column="19">gettimeofday<pos:position pos:line="111" pos:column="31"/></name> <argument_list pos:line="111" pos:column="32">(<argument><expr><operator pos:line="111" pos:column="33">&amp;<pos:position pos:line="111" pos:column="38"/></operator><name pos:line="111" pos:column="34">tv_now<pos:position pos:line="111" pos:column="40"/></name></expr></argument>, <comment type="block" pos:line="111" pos:column="42">/* timezone = */</comment> <argument><expr><name pos:line="111" pos:column="59">NULL<pos:position pos:line="111" pos:column="63"/></name></expr></argument>)<pos:position pos:line="111" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="65"/></expr_stmt>
                  <expr_stmt><expr><name><name pos:line="112" pos:column="19">tv_next_update<pos:position pos:line="112" pos:column="33"/></name><operator pos:line="112" pos:column="33">.<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="34">tv_sec<pos:position pos:line="112" pos:column="40"/></name></name> <operator pos:line="112" pos:column="41">=<pos:position pos:line="112" pos:column="42"/></operator> <name><name pos:line="112" pos:column="43">tv_now<pos:position pos:line="112" pos:column="49"/></name><operator pos:line="112" pos:column="49">.<pos:position pos:line="112" pos:column="50"/></operator><name pos:line="112" pos:column="50">tv_sec<pos:position pos:line="112" pos:column="56"/></name></name></expr>;<pos:position pos:line="112" pos:column="57"/></expr_stmt>
                  <expr_stmt><expr><name><name pos:line="113" pos:column="19">tv_next_update<pos:position pos:line="113" pos:column="33"/></name><operator pos:line="113" pos:column="33">.<pos:position pos:line="113" pos:column="34"/></operator><name pos:line="113" pos:column="34">tv_usec<pos:position pos:line="113" pos:column="41"/></name></name> <operator pos:line="113" pos:column="42">=<pos:position pos:line="113" pos:column="43"/></operator> <name><name pos:line="113" pos:column="44">tv_now<pos:position pos:line="113" pos:column="50"/></name><operator pos:line="113" pos:column="50">.<pos:position pos:line="113" pos:column="51"/></operator><name pos:line="113" pos:column="51">tv_usec<pos:position pos:line="113" pos:column="58"/></name></name>
                    <operator pos:line="114" pos:column="21">+<pos:position pos:line="114" pos:column="22"/></operator> <operator pos:line="114" pos:column="23">(<pos:position pos:line="114" pos:column="24"/></operator><call pos:line="114" pos:column="24">(<name pos:line="114" pos:column="25">suseconds_t<pos:position pos:line="114" pos:column="36"/></name>) <argument_list pos:line="114" pos:column="38">(<argument><expr><literal type="number" pos:line="114" pos:column="39">1000000<pos:position pos:line="114" pos:column="46"/></literal> <operator pos:line="114" pos:column="47">*<pos:position pos:line="114" pos:column="48"/></operator> <name pos:line="114" pos:column="49">write_rate<pos:position pos:line="114" pos:column="59"/></name></expr></argument>)<pos:position pos:line="114" pos:column="60"/></argument_list></call><operator pos:line="114" pos:column="60">)<pos:position pos:line="114" pos:column="61"/></operator></expr>;<pos:position pos:line="114" pos:column="62"/></expr_stmt>
                  <while pos:line="115" pos:column="19">while <condition pos:line="115" pos:column="25">(<expr><name><name pos:line="115" pos:column="26">tv_next_update<pos:position pos:line="115" pos:column="40"/></name><operator pos:line="115" pos:column="40">.<pos:position pos:line="115" pos:column="41"/></operator><name pos:line="115" pos:column="41">tv_usec<pos:position pos:line="115" pos:column="48"/></name></name> <operator pos:line="115" pos:column="49">&gt;<pos:position pos:line="115" pos:column="53"/></operator> <literal type="number" pos:line="115" pos:column="51">1000000<pos:position pos:line="115" pos:column="58"/></literal></expr>)<pos:position pos:line="115" pos:column="59"/></condition>
                  <block pos:line="116" pos:column="19">{
                    <expr_stmt><expr><name><name pos:line="117" pos:column="21">tv_next_update<pos:position pos:line="117" pos:column="35"/></name><operator pos:line="117" pos:column="35">.<pos:position pos:line="117" pos:column="36"/></operator><name pos:line="117" pos:column="36">tv_sec<pos:position pos:line="117" pos:column="42"/></name></name><operator pos:line="117" pos:column="42">++<pos:position pos:line="117" pos:column="44"/></operator></expr>;<pos:position pos:line="117" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="118" pos:column="21">tv_next_update<pos:position pos:line="118" pos:column="35"/></name><operator pos:line="118" pos:column="35">.<pos:position pos:line="118" pos:column="36"/></operator><name pos:line="118" pos:column="36">tv_usec<pos:position pos:line="118" pos:column="43"/></name></name> <operator pos:line="118" pos:column="44">-=<pos:position pos:line="118" pos:column="46"/></operator> <literal type="number" pos:line="118" pos:column="47">1000000<pos:position pos:line="118" pos:column="54"/></literal></expr>;<pos:position pos:line="118" pos:column="55"/></expr_stmt>
                  }<pos:position pos:line="119" pos:column="20"/></block></while>
                }<pos:position pos:line="120" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="122" pos:column="17">/* Write the values to the RRD-file */</comment>
		<expr_stmt><expr><call><name pos:line="123" pos:column="17">srrd_update<pos:position pos:line="123" pos:column="28"/></name> <argument_list pos:line="123" pos:column="29">(<argument><expr><name><name pos:line="123" pos:column="30">queue_entry<pos:position pos:line="123" pos:column="41"/></name><operator pos:line="123" pos:column="41">-&gt;<pos:position pos:line="123" pos:column="46"/></operator><name pos:line="123" pos:column="43">filename<pos:position pos:line="123" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="53">NULL<pos:position pos:line="123" pos:column="57"/></name></expr></argument>,
				<argument><expr><name pos:line="124" pos:column="33">values_num<pos:position pos:line="124" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="45">(<pos:position pos:line="124" pos:column="46"/></operator><specifier pos:line="124" pos:column="46">const<pos:position pos:line="124" pos:column="51"/></specifier> <name pos:line="124" pos:column="52">char<pos:position pos:line="124" pos:column="56"/></name> <operator pos:line="124" pos:column="57">*<pos:position pos:line="124" pos:column="58"/></operator><operator pos:line="124" pos:column="58">*<pos:position pos:line="124" pos:column="59"/></operator><operator pos:line="124" pos:column="59">)<pos:position pos:line="124" pos:column="60"/></operator><name pos:line="124" pos:column="60">values<pos:position pos:line="124" pos:column="66"/></name></expr></argument>)<pos:position pos:line="124" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="125" pos:column="17">DEBUG<pos:position pos:line="125" pos:column="22"/></name> <argument_list pos:line="125" pos:column="23">(<argument><expr><literal type="string" pos:line="125" pos:column="24">"rrdtool plugin: queue thread: Wrote %i values to %s"<pos:position pos:line="125" pos:column="77"/></literal></expr></argument>,
				<argument><expr><name pos:line="126" pos:column="33">values_num<pos:position pos:line="126" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="45">queue_entry<pos:position pos:line="126" pos:column="56"/></name><operator pos:line="126" pos:column="56">-&gt;<pos:position pos:line="126" pos:column="61"/></operator><name pos:line="126" pos:column="58">filename<pos:position pos:line="126" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="68"/></expr_stmt>

		<for pos:line="128" pos:column="17">for <control pos:line="128" pos:column="21">(<init><expr><name pos:line="128" pos:column="22">i<pos:position pos:line="128" pos:column="23"/></name> <operator pos:line="128" pos:column="24">=<pos:position pos:line="128" pos:column="25"/></operator> <literal type="number" pos:line="128" pos:column="26">0<pos:position pos:line="128" pos:column="27"/></literal></expr>;<pos:position pos:line="128" pos:column="28"/></init> <condition><expr><name pos:line="128" pos:column="29">i<pos:position pos:line="128" pos:column="30"/></name> <operator pos:line="128" pos:column="31">&lt;<pos:position pos:line="128" pos:column="35"/></operator> <name pos:line="128" pos:column="33">values_num<pos:position pos:line="128" pos:column="43"/></name></expr>;<pos:position pos:line="128" pos:column="44"/></condition> <incr><expr><name pos:line="128" pos:column="45">i<pos:position pos:line="128" pos:column="46"/></name><operator pos:line="128" pos:column="46">++<pos:position pos:line="128" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="128" pos:column="49"/></control>
		<block pos:line="129" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="130" pos:column="25">sfree<pos:position pos:line="130" pos:column="30"/></name> <argument_list pos:line="130" pos:column="31">(<argument><expr><name><name pos:line="130" pos:column="32">values<pos:position pos:line="130" pos:column="38"/></name><index pos:line="130" pos:column="38">[<expr><name pos:line="130" pos:column="39">i<pos:position pos:line="130" pos:column="40"/></name></expr>]<pos:position pos:line="130" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="130" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="131" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="132" pos:column="17">sfree<pos:position pos:line="132" pos:column="22"/></name> <argument_list pos:line="132" pos:column="23">(<argument><expr><name pos:line="132" pos:column="24">values<pos:position pos:line="132" pos:column="30"/></name></expr></argument>)<pos:position pos:line="132" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="133" pos:column="17">sfree<pos:position pos:line="133" pos:column="22"/></name> <argument_list pos:line="133" pos:column="23">(<argument><expr><name><name pos:line="133" pos:column="24">queue_entry<pos:position pos:line="133" pos:column="35"/></name><operator pos:line="133" pos:column="35">-&gt;<pos:position pos:line="133" pos:column="40"/></operator><name pos:line="133" pos:column="37">filename<pos:position pos:line="133" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="134" pos:column="17">sfree<pos:position pos:line="134" pos:column="22"/></name> <argument_list pos:line="134" pos:column="23">(<argument><expr><name pos:line="134" pos:column="24">queue_entry<pos:position pos:line="134" pos:column="35"/></name></expr></argument>)<pos:position pos:line="134" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="135" pos:column="10"/></block></while> <comment type="block" pos:line="135" pos:column="11">/* while (42) */</comment>

	<expr_stmt><expr><call><name pos:line="137" pos:column="9">pthread_mutex_lock<pos:position pos:line="137" pos:column="27"/></name> <argument_list pos:line="137" pos:column="28">(<argument><expr><operator pos:line="137" pos:column="29">&amp;<pos:position pos:line="137" pos:column="34"/></operator><name pos:line="137" pos:column="30">cache_lock<pos:position pos:line="137" pos:column="40"/></name></expr></argument>)<pos:position pos:line="137" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="138" pos:column="9">c_avl_destroy<pos:position pos:line="138" pos:column="22"/></name> <argument_list pos:line="138" pos:column="23">(<argument><expr><name pos:line="138" pos:column="24">cache<pos:position pos:line="138" pos:column="29"/></name></expr></argument>)<pos:position pos:line="138" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="139" pos:column="9">cache<pos:position pos:line="139" pos:column="14"/></name> <operator pos:line="139" pos:column="15">=<pos:position pos:line="139" pos:column="16"/></operator> <name pos:line="139" pos:column="17">NULL<pos:position pos:line="139" pos:column="21"/></name></expr>;<pos:position pos:line="139" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="140" pos:column="9">pthread_mutex_unlock<pos:position pos:line="140" pos:column="29"/></name> <argument_list pos:line="140" pos:column="30">(<argument><expr><operator pos:line="140" pos:column="31">&amp;<pos:position pos:line="140" pos:column="36"/></operator><name pos:line="140" pos:column="32">cache_lock<pos:position pos:line="140" pos:column="42"/></name></expr></argument>)<pos:position pos:line="140" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="142" pos:column="9">pthread_exit<pos:position pos:line="142" pos:column="21"/></name> <argument_list pos:line="142" pos:column="22">(<argument><expr><operator pos:line="142" pos:column="23">(<pos:position pos:line="142" pos:column="24"/></operator><name pos:line="142" pos:column="24">void<pos:position pos:line="142" pos:column="28"/></name> <operator pos:line="142" pos:column="29">*<pos:position pos:line="142" pos:column="30"/></operator><operator pos:line="142" pos:column="30">)<pos:position pos:line="142" pos:column="31"/></operator> <literal type="number" pos:line="142" pos:column="32">0<pos:position pos:line="142" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="35"/></expr_stmt>
	<return pos:line="143" pos:column="9">return <expr><operator pos:line="143" pos:column="16">(<pos:position pos:line="143" pos:column="17"/></operator><operator pos:line="143" pos:column="17">(<pos:position pos:line="143" pos:column="18"/></operator><name pos:line="143" pos:column="18">void<pos:position pos:line="143" pos:column="22"/></name> <operator pos:line="143" pos:column="23">*<pos:position pos:line="143" pos:column="24"/></operator><operator pos:line="143" pos:column="24">)<pos:position pos:line="143" pos:column="25"/></operator> <literal type="number" pos:line="143" pos:column="26">0<pos:position pos:line="143" pos:column="27"/></literal><operator pos:line="143" pos:column="27">)<pos:position pos:line="143" pos:column="28"/></operator></expr>;<pos:position pos:line="143" pos:column="29"/></return>
}<pos:position pos:line="144" pos:column="2"/></block></function></unit>

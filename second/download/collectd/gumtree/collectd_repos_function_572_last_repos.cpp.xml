<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_572_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensu_config<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">oconfig_item_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">ci<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list> <comment type="block" pos:line="1" pos:column="45">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">oconfig_item_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">child<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">str_list<pos:position pos:line="5" pos:column="18"/></name></name></type> <name pos:line="5" pos:column="19">sensu_tags_arr<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="7" pos:column="3">sensu_tags_arr<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">.<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">nb_strs<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">=<pos:position pos:line="7" pos:column="27"/></operator> <literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">sensu_tags_arr<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">strs<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>

  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><decl><type><name pos:line="10" pos:column="8">int<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">i<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="18"/></init> <condition><expr><name pos:line="10" pos:column="19">i<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&lt;<pos:position pos:line="10" pos:column="25"/></operator> <name><name pos:line="10" pos:column="23">ci<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">children_num<pos:position pos:line="10" pos:column="39"/></name></name></expr>;<pos:position pos:line="10" pos:column="40"/></condition> <incr><expr><name pos:line="10" pos:column="41">i<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">++<pos:position pos:line="10" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="45"/></control> <block pos:line="10" pos:column="46">{
    <expr_stmt><expr><name pos:line="11" pos:column="5">child<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <operator pos:line="11" pos:column="13">&amp;<pos:position pos:line="11" pos:column="18"/></operator><name><name pos:line="11" pos:column="14">ci<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">children<pos:position pos:line="11" pos:column="26"/></name><index pos:line="11" pos:column="26">[<expr><name pos:line="11" pos:column="27">i<pos:position pos:line="11" pos:column="28"/></name></expr>]<pos:position pos:line="11" pos:column="29"/></index></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">strcasecmp<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="string" pos:line="13" pos:column="20">"Node"<pos:position pos:line="13" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="28">child<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">key<pos:position pos:line="13" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call> <operator pos:line="13" pos:column="40">==<pos:position pos:line="13" pos:column="42"/></operator> <literal type="number" pos:line="13" pos:column="43">0<pos:position pos:line="13" pos:column="44"/></literal></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45"> <block pos:line="13" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">sensu_config_node<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">child<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <elseif pos:line="15" pos:column="7">else <if pos:line="15" pos:column="12">if <condition pos:line="15" pos:column="15">(<expr><call><name pos:line="15" pos:column="16">strcasecmp<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name><name pos:line="15" pos:column="27">child<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">key<pos:position pos:line="15" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="39">"attribute"<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call> <operator pos:line="15" pos:column="52">==<pos:position pos:line="15" pos:column="54"/></operator> <literal type="number" pos:line="15" pos:column="55">0<pos:position pos:line="15" pos:column="56"/></literal></expr>)<pos:position pos:line="15" pos:column="57"/></condition><then pos:line="15" pos:column="57"> <block pos:line="15" pos:column="58">{
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><name><name pos:line="16" pos:column="11">child<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">values_num<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">!=<pos:position pos:line="16" pos:column="31"/></operator> <literal type="number" pos:line="16" pos:column="32">2<pos:position pos:line="16" pos:column="33"/></literal></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34"> <block pos:line="16" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">WARNING<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><literal type="string" pos:line="17" pos:column="17">"sensu attributes need both a key and a value."<pos:position pos:line="17" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>
        <continue pos:line="18" pos:column="9">continue;<pos:position pos:line="18" pos:column="18"/></continue>
      }<pos:position pos:line="19" pos:column="8"/></block></then></if>
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><name><name pos:line="20" pos:column="11">child<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">values<pos:position pos:line="20" pos:column="24"/></name><index pos:line="20" pos:column="24">[<expr><literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr>]<pos:position pos:line="20" pos:column="27"/></index></name><operator pos:line="20" pos:column="27">.<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">type<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">!=<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="36">OCONFIG_TYPE_STRING<pos:position pos:line="20" pos:column="55"/></name> <operator pos:line="20" pos:column="56">||<pos:position pos:line="20" pos:column="58"/></operator>
          <name><name pos:line="21" pos:column="11">child<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">values<pos:position pos:line="21" pos:column="24"/></name><index pos:line="21" pos:column="24">[<expr><literal type="number" pos:line="21" pos:column="25">1<pos:position pos:line="21" pos:column="26"/></literal></expr>]<pos:position pos:line="21" pos:column="27"/></index></name><operator pos:line="21" pos:column="27">.<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">type<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">!=<pos:position pos:line="21" pos:column="35"/></operator> <name pos:line="21" pos:column="36">OCONFIG_TYPE_STRING<pos:position pos:line="21" pos:column="55"/></name></expr>)<pos:position pos:line="21" pos:column="56"/></condition><then pos:line="21" pos:column="56"> <block pos:line="21" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">WARNING<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><literal type="string" pos:line="22" pos:column="17">"sensu attribute needs string arguments."<pos:position pos:line="22" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt>
        <continue pos:line="23" pos:column="9">continue;<pos:position pos:line="23" pos:column="18"/></continue>
      }<pos:position pos:line="24" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="26" pos:column="7">strarray_add<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><operator pos:line="26" pos:column="20">&amp;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="21">sensu_attrs<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="34">&amp;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="35">sensu_attrs_num<pos:position pos:line="26" pos:column="50"/></name></expr></argument>,
                   <argument><expr><name><name pos:line="27" pos:column="20">child<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">values<pos:position pos:line="27" pos:column="33"/></name><index pos:line="27" pos:column="33">[<expr><literal type="number" pos:line="27" pos:column="34">0<pos:position pos:line="27" pos:column="35"/></literal></expr>]<pos:position pos:line="27" pos:column="36"/></index></name><operator pos:line="27" pos:column="36">.<pos:position pos:line="27" pos:column="37"/></operator><name><name pos:line="27" pos:column="37">value<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">.<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="43">string<pos:position pos:line="27" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">strarray_add<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><operator pos:line="28" pos:column="20">&amp;<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="21">sensu_attrs<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="34">&amp;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="35">sensu_attrs_num<pos:position pos:line="28" pos:column="50"/></name></expr></argument>,
                   <argument><expr><name><name pos:line="29" pos:column="20">child<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">values<pos:position pos:line="29" pos:column="33"/></name><index pos:line="29" pos:column="33">[<expr><literal type="number" pos:line="29" pos:column="34">1<pos:position pos:line="29" pos:column="35"/></literal></expr>]<pos:position pos:line="29" pos:column="36"/></index></name><operator pos:line="29" pos:column="36">.<pos:position pos:line="29" pos:column="37"/></operator><name><name pos:line="29" pos:column="37">value<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">.<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="43">string<pos:position pos:line="29" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="31" pos:column="7">DEBUG<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><literal type="string" pos:line="31" pos:column="13">"write_sensu plugin: New attribute: %s =&gt; %s"<pos:position pos:line="31" pos:column="61"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="32" pos:column="13">child<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">values<pos:position pos:line="32" pos:column="26"/></name><index pos:line="32" pos:column="26">[<expr><literal type="number" pos:line="32" pos:column="27">0<pos:position pos:line="32" pos:column="28"/></literal></expr>]<pos:position pos:line="32" pos:column="29"/></index></name><operator pos:line="32" pos:column="29">.<pos:position pos:line="32" pos:column="30"/></operator><name><name pos:line="32" pos:column="30">value<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">.<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="36">string<pos:position pos:line="32" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="44">child<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">-&gt;<pos:position pos:line="32" pos:column="54"/></operator><name pos:line="32" pos:column="51">values<pos:position pos:line="32" pos:column="57"/></name><index pos:line="32" pos:column="57">[<expr><literal type="number" pos:line="32" pos:column="58">1<pos:position pos:line="32" pos:column="59"/></literal></expr>]<pos:position pos:line="32" pos:column="60"/></index></name><operator pos:line="32" pos:column="60">.<pos:position pos:line="32" pos:column="61"/></operator><name><name pos:line="32" pos:column="61">value<pos:position pos:line="32" pos:column="66"/></name><operator pos:line="32" pos:column="66">.<pos:position pos:line="32" pos:column="67"/></operator><name pos:line="32" pos:column="67">string<pos:position pos:line="32" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if></elseif> <elseif pos:line="33" pos:column="7">else <if pos:line="33" pos:column="12">if <condition pos:line="33" pos:column="15">(<expr><call><name pos:line="33" pos:column="16">strcasecmp<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name><name pos:line="33" pos:column="27">child<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">-&gt;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="34">key<pos:position pos:line="33" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="39">"tag"<pos:position pos:line="33" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call> <operator pos:line="33" pos:column="46">==<pos:position pos:line="33" pos:column="48"/></operator> <literal type="number" pos:line="33" pos:column="49">0<pos:position pos:line="33" pos:column="50"/></literal></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51"> <block pos:line="33" pos:column="52">{
      <decl_stmt><decl><type><name pos:line="34" pos:column="7">char<pos:position pos:line="34" pos:column="11"/></name> <modifier pos:line="34" pos:column="12">*<pos:position pos:line="34" pos:column="13"/></modifier></type><name pos:line="34" pos:column="13">tmp<pos:position pos:line="34" pos:column="16"/></name> <init pos:line="34" pos:column="17">= <expr><name pos:line="34" pos:column="19">NULL<pos:position pos:line="34" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="24"/></decl_stmt>
      <expr_stmt><expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">cf_util_get_string<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">child<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="42">&amp;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="43">tmp<pos:position pos:line="35" pos:column="46"/></name></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>
      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><name pos:line="36" pos:column="11">status<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">!=<pos:position pos:line="36" pos:column="20"/></operator> <literal type="number" pos:line="36" pos:column="21">0<pos:position pos:line="36" pos:column="22"/></literal></expr>)<pos:position pos:line="36" pos:column="23"/></condition><then pos:line="36" pos:column="23">
        <block type="pseudo"><continue pos:line="37" pos:column="9">continue;<pos:position pos:line="37" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><name pos:line="39" pos:column="7">status<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">add_str_to_list<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><operator pos:line="39" pos:column="32">&amp;<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="33">sensu_tags_arr<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="49">tmp<pos:position pos:line="39" pos:column="52"/></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">sfree<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><name pos:line="40" pos:column="13">tmp<pos:position pos:line="40" pos:column="16"/></name></expr></argument>)<pos:position pos:line="40" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="18"/></expr_stmt>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><name pos:line="41" pos:column="11">status<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">!=<pos:position pos:line="41" pos:column="20"/></operator> <literal type="number" pos:line="41" pos:column="21">0<pos:position pos:line="41" pos:column="22"/></literal></expr>)<pos:position pos:line="41" pos:column="23"/></condition><then pos:line="41" pos:column="23">
        <block type="pseudo"><continue pos:line="42" pos:column="9">continue;<pos:position pos:line="42" pos:column="18"/></continue></block></then></if>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">DEBUG<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><literal type="string" pos:line="43" pos:column="13">"write_sensu plugin: Got tag: %s"<pos:position pos:line="43" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="48">tmp<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif> <else pos:line="44" pos:column="7">else <block pos:line="44" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">WARNING<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><literal type="string" pos:line="45" pos:column="15">"write_sensu plugin: Ignoring unknown "<pos:position pos:line="45" pos:column="54"/></literal>
              <literal type="string" pos:line="46" pos:column="15">"configuration option \"%s\" at top level."<pos:position pos:line="46" pos:column="58"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="47" pos:column="15">child<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">key<pos:position pos:line="47" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></else></if>
  }<pos:position pos:line="49" pos:column="4"/></block></for>
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name><name pos:line="50" pos:column="7">sensu_tags_arr<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">.<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">nb_strs<pos:position pos:line="50" pos:column="29"/></name></name> <operator pos:line="50" pos:column="30">&gt;<pos:position pos:line="50" pos:column="34"/></operator> <literal type="number" pos:line="50" pos:column="32">0<pos:position pos:line="50" pos:column="33"/></literal></expr>)<pos:position pos:line="50" pos:column="34"/></condition><then pos:line="50" pos:column="34"> <block pos:line="50" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">sfree<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><name pos:line="51" pos:column="11">sensu_tags<pos:position pos:line="51" pos:column="21"/></name></expr></argument>)<pos:position pos:line="51" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="52" pos:column="5">sensu_tags<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">build_json_str_list<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><literal type="string" pos:line="52" pos:column="38">"tags"<pos:position pos:line="52" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="46">&amp;<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="47">sensu_tags_arr<pos:position pos:line="52" pos:column="61"/></name></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">free_str_list<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><operator pos:line="53" pos:column="19">&amp;<pos:position pos:line="53" pos:column="24"/></operator><name pos:line="53" pos:column="20">sensu_tags_arr<pos:position pos:line="53" pos:column="34"/></name></expr></argument>)<pos:position pos:line="53" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">sensu_tags<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">==<pos:position pos:line="54" pos:column="22"/></operator> <name pos:line="54" pos:column="23">NULL<pos:position pos:line="54" pos:column="27"/></name></expr>)<pos:position pos:line="54" pos:column="28"/></condition><then pos:line="54" pos:column="28"> <block pos:line="54" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">ERROR<pos:position pos:line="55" pos:column="12"/></name><argument_list pos:line="55" pos:column="12">(<argument><expr><literal type="string" pos:line="55" pos:column="13">"write_sensu plugin: Unable to alloc memory"<pos:position pos:line="55" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="59"/></expr_stmt>
      <return pos:line="56" pos:column="7">return <expr><operator pos:line="56" pos:column="14">-<pos:position pos:line="56" pos:column="15"/></operator><literal type="number" pos:line="56" pos:column="15">1<pos:position pos:line="56" pos:column="16"/></literal></expr>;<pos:position pos:line="56" pos:column="17"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>
  <return pos:line="59" pos:column="3">return <expr><literal type="number" pos:line="59" pos:column="10">0<pos:position pos:line="59" pos:column="11"/></literal></expr>;<pos:position pos:line="59" pos:column="12"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

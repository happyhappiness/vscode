<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1537_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prom_shutdown<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">()<pos:position pos:line="1" pos:column="27"/></parameter_list> <block pos:line="1" pos:column="28">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">httpd<pos:position pos:line="2" pos:column="12"/></name> <operator pos:line="2" pos:column="13">!=<pos:position pos:line="2" pos:column="15"/></operator> <name pos:line="2" pos:column="16">NULL<pos:position pos:line="2" pos:column="20"/></name></expr>)<pos:position pos:line="2" pos:column="21"/></condition><then pos:line="2" pos:column="21"> <block pos:line="2" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">MHD_stop_daemon<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">httpd<pos:position pos:line="3" pos:column="26"/></name></expr></argument>)<pos:position pos:line="3" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="4" pos:column="5">httpd<pos:position pos:line="4" pos:column="10"/></name> <operator pos:line="4" pos:column="11">=<pos:position pos:line="4" pos:column="12"/></operator> <name pos:line="4" pos:column="13">NULL<pos:position pos:line="4" pos:column="17"/></name></expr>;<pos:position pos:line="4" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="5" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">pthread_mutex_lock<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><operator pos:line="7" pos:column="22">&amp;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="23">metrics_lock<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">metrics<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">!=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <block pos:line="8" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">name<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">Io__Prometheus__Client__MetricFamily<pos:position pos:line="10" pos:column="41"/></name> <modifier pos:line="10" pos:column="42">*<pos:position pos:line="10" pos:column="43"/></modifier></type><name pos:line="10" pos:column="43">fam<pos:position pos:line="10" pos:column="46"/></name></decl>;<pos:position pos:line="10" pos:column="47"/></decl_stmt>
    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><call><name pos:line="11" pos:column="12">c_avl_pick<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">metrics<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">void<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">*<pos:position pos:line="11" pos:column="39"/></operator><operator pos:line="11" pos:column="39">)<pos:position pos:line="11" pos:column="40"/></operator><operator pos:line="11" pos:column="40">&amp;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="41">name<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="47">(<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">void<pos:position pos:line="11" pos:column="52"/></name> <operator pos:line="11" pos:column="53">*<pos:position pos:line="11" pos:column="54"/></operator><operator pos:line="11" pos:column="54">)<pos:position pos:line="11" pos:column="55"/></operator><operator pos:line="11" pos:column="55">&amp;<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="56">fam<pos:position pos:line="11" pos:column="59"/></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call> <operator pos:line="11" pos:column="61">==<pos:position pos:line="11" pos:column="63"/></operator> <literal type="number" pos:line="11" pos:column="64">0<pos:position pos:line="11" pos:column="65"/></literal></expr>)<pos:position pos:line="11" pos:column="66"/></condition> <block pos:line="11" pos:column="67">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">assert<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">name<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">==<pos:position pos:line="12" pos:column="21"/></operator> <name><name pos:line="12" pos:column="22">fam<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">name<pos:position pos:line="12" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="13" pos:column="7">name<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <name pos:line="13" pos:column="14">NULL<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="15" pos:column="7">metric_family_destroy<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">fam<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">c_avl_destroy<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">metrics<pos:position pos:line="17" pos:column="26"/></name></expr></argument>)<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">metrics<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">NULL<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">pthread_mutex_unlock<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">metrics_lock<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>

  <return pos:line="22" pos:column="3">return <expr><literal type="number" pos:line="22" pos:column="10">0<pos:position pos:line="22" pos:column="11"/></literal></expr>;<pos:position pos:line="22" pos:column="12"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1858_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">lcc_strescape<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">dest<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">src<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">size_t<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">dest_size<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list> <comment type="block" pos:line="1" pos:column="76">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">dest_pos<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">src_pos<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">dest<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">)<pos:position pos:line="6" pos:column="21"/></operator> <operator pos:line="6" pos:column="22">||<pos:position pos:line="6" pos:column="24"/></operator> <operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">src<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">==<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="33">NULL<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">)<pos:position pos:line="6" pos:column="38"/></operator></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">)<pos:position pos:line="7" pos:column="18"/></operator></expr>;<pos:position pos:line="7" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="9" pos:column="3">dest_pos<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">src_pos<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <literal type="number" pos:line="10" pos:column="13">0<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">assert<pos:position pos:line="12" pos:column="9"/></name> <argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">dest_size<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">&gt;=<pos:position pos:line="12" pos:column="26"/></operator> <literal type="number" pos:line="12" pos:column="24">3<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">dest<pos:position pos:line="14" pos:column="7"/></name><index pos:line="14" pos:column="7">[<expr><name pos:line="14" pos:column="8">dest_pos<pos:position pos:line="14" pos:column="16"/></name></expr>]<pos:position pos:line="14" pos:column="17"/></index></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <literal type="char" pos:line="14" pos:column="20">'"'<pos:position pos:line="14" pos:column="23"/></literal></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">dest_pos<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">++<pos:position pos:line="15" pos:column="13"/></operator></expr>;<pos:position pos:line="15" pos:column="14"/></expr_stmt>

  <while pos:line="17" pos:column="3">while <condition pos:line="17" pos:column="9">(<expr><literal type="number" pos:line="17" pos:column="10">42<pos:position pos:line="17" pos:column="12"/></literal></expr>)<pos:position pos:line="17" pos:column="13"/></condition>
  <block pos:line="18" pos:column="3">{
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">dest_pos<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">==<pos:position pos:line="19" pos:column="21"/></operator> <operator pos:line="19" pos:column="22">(<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">dest_size<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">-<pos:position pos:line="19" pos:column="34"/></operator> <literal type="number" pos:line="19" pos:column="35">2<pos:position pos:line="19" pos:column="36"/></literal><operator pos:line="19" pos:column="36">)<pos:position pos:line="19" pos:column="37"/></operator><operator pos:line="19" pos:column="37">)<pos:position pos:line="19" pos:column="38"/></operator>
        <operator pos:line="20" pos:column="9">||<pos:position pos:line="20" pos:column="11"/></operator> <operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name><name pos:line="20" pos:column="13">src<pos:position pos:line="20" pos:column="16"/></name><index pos:line="20" pos:column="16">[<expr><name pos:line="20" pos:column="17">src_pos<pos:position pos:line="20" pos:column="24"/></name></expr>]<pos:position pos:line="20" pos:column="25"/></index></name> <operator pos:line="20" pos:column="26">==<pos:position pos:line="20" pos:column="28"/></operator> <literal type="number" pos:line="20" pos:column="29">0<pos:position pos:line="20" pos:column="30"/></literal><operator pos:line="20" pos:column="30">)<pos:position pos:line="20" pos:column="31"/></operator></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32">
      <block type="pseudo"><break pos:line="21" pos:column="7">break;<pos:position pos:line="21" pos:column="13"/></break></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name><name pos:line="23" pos:column="10">src<pos:position pos:line="23" pos:column="13"/></name><index pos:line="23" pos:column="13">[<expr><name pos:line="23" pos:column="14">src_pos<pos:position pos:line="23" pos:column="21"/></name></expr>]<pos:position pos:line="23" pos:column="22"/></index></name> <operator pos:line="23" pos:column="23">==<pos:position pos:line="23" pos:column="25"/></operator> <literal type="char" pos:line="23" pos:column="26">'"'<pos:position pos:line="23" pos:column="29"/></literal><operator pos:line="23" pos:column="29">)<pos:position pos:line="23" pos:column="30"/></operator> <operator pos:line="23" pos:column="31">||<pos:position pos:line="23" pos:column="33"/></operator> <operator pos:line="23" pos:column="34">(<pos:position pos:line="23" pos:column="35"/></operator><name><name pos:line="23" pos:column="35">src<pos:position pos:line="23" pos:column="38"/></name><index pos:line="23" pos:column="38">[<expr><name pos:line="23" pos:column="39">src_pos<pos:position pos:line="23" pos:column="46"/></name></expr>]<pos:position pos:line="23" pos:column="47"/></index></name> <operator pos:line="23" pos:column="48">==<pos:position pos:line="23" pos:column="50"/></operator> <literal type="char" pos:line="23" pos:column="51">'\\'<pos:position pos:line="23" pos:column="55"/></literal><operator pos:line="23" pos:column="55">)<pos:position pos:line="23" pos:column="56"/></operator></expr>)<pos:position pos:line="23" pos:column="57"/></condition><then pos:line="23" pos:column="57">
    <block pos:line="24" pos:column="5">{
      <comment type="block" pos:line="25" pos:column="7">/* Check if there is enough space for both characters.. */</comment>
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">dest_pos<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">==<pos:position pos:line="26" pos:column="22"/></operator> <operator pos:line="26" pos:column="23">(<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">dest_size<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">-<pos:position pos:line="26" pos:column="35"/></operator> <literal type="number" pos:line="26" pos:column="36">3<pos:position pos:line="26" pos:column="37"/></literal><operator pos:line="26" pos:column="37">)<pos:position pos:line="26" pos:column="38"/></operator></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39">
        <block type="pseudo"><break pos:line="27" pos:column="9">break;<pos:position pos:line="27" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><name><name pos:line="29" pos:column="7">dest<pos:position pos:line="29" pos:column="11"/></name><index pos:line="29" pos:column="11">[<expr><name pos:line="29" pos:column="12">dest_pos<pos:position pos:line="29" pos:column="20"/></name></expr>]<pos:position pos:line="29" pos:column="21"/></index></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <literal type="char" pos:line="29" pos:column="24">'\\'<pos:position pos:line="29" pos:column="28"/></literal></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="30" pos:column="7">dest_pos<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">++<pos:position pos:line="30" pos:column="17"/></operator></expr>;<pos:position pos:line="30" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="33" pos:column="5">dest<pos:position pos:line="33" pos:column="9"/></name><index pos:line="33" pos:column="9">[<expr><name pos:line="33" pos:column="10">dest_pos<pos:position pos:line="33" pos:column="18"/></name></expr>]<pos:position pos:line="33" pos:column="19"/></index></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <name><name pos:line="33" pos:column="22">src<pos:position pos:line="33" pos:column="25"/></name><index pos:line="33" pos:column="25">[<expr><name pos:line="33" pos:column="26">src_pos<pos:position pos:line="33" pos:column="33"/></name></expr>]<pos:position pos:line="33" pos:column="34"/></index></name></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">dest_pos<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">++<pos:position pos:line="34" pos:column="15"/></operator></expr>;<pos:position pos:line="34" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">src_pos<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">++<pos:position pos:line="35" pos:column="14"/></operator></expr>;<pos:position pos:line="35" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">assert<pos:position pos:line="38" pos:column="9"/></name> <argument_list pos:line="38" pos:column="10">(<argument><expr><name pos:line="38" pos:column="11">dest_pos<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">&lt;=<pos:position pos:line="38" pos:column="25"/></operator> <operator pos:line="38" pos:column="23">(<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="24">dest_size<pos:position pos:line="38" pos:column="33"/></name> <operator pos:line="38" pos:column="34">-<pos:position pos:line="38" pos:column="35"/></operator> <literal type="number" pos:line="38" pos:column="36">2<pos:position pos:line="38" pos:column="37"/></literal><operator pos:line="38" pos:column="37">)<pos:position pos:line="38" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="40" pos:column="3">dest<pos:position pos:line="40" pos:column="7"/></name><index pos:line="40" pos:column="7">[<expr><name pos:line="40" pos:column="8">dest_pos<pos:position pos:line="40" pos:column="16"/></name></expr>]<pos:position pos:line="40" pos:column="17"/></index></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <literal type="char" pos:line="40" pos:column="20">'"'<pos:position pos:line="40" pos:column="23"/></literal></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="41" pos:column="3">dest_pos<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">++<pos:position pos:line="41" pos:column="13"/></operator></expr>;<pos:position pos:line="41" pos:column="14"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="43" pos:column="3">dest<pos:position pos:line="43" pos:column="7"/></name><index pos:line="43" pos:column="7">[<expr><name pos:line="43" pos:column="8">dest_pos<pos:position pos:line="43" pos:column="16"/></name></expr>]<pos:position pos:line="43" pos:column="17"/></index></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <literal type="number" pos:line="43" pos:column="20">0<pos:position pos:line="43" pos:column="21"/></literal></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="44" pos:column="3">dest_pos<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">++<pos:position pos:line="44" pos:column="13"/></operator></expr>;<pos:position pos:line="44" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="45" pos:column="3">src_pos<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">++<pos:position pos:line="45" pos:column="12"/></operator></expr>;<pos:position pos:line="45" pos:column="13"/></expr_stmt>

  <return pos:line="47" pos:column="3">return <expr><operator pos:line="47" pos:column="10">(<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">dest<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">)<pos:position pos:line="47" pos:column="16"/></operator></expr>;<pos:position pos:line="47" pos:column="17"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

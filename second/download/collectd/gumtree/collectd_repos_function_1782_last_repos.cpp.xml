<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1782_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_helper_exit_command<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">dpdk_helper_ctx_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">phc<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                    <parameter><decl><type><name><name pos:line="2" pos:column="37">enum<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">DPDK_HELPER_STATUS<pos:position pos:line="2" pos:column="60"/></name></name></type> <name pos:line="2" pos:column="61">status<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list> <block pos:line="2" pos:column="69">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">errbuf<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><name pos:line="3" pos:column="15">ERR_BUF_SIZE<pos:position pos:line="3" pos:column="27"/></name></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">DPDK_HELPER_TRACE<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name><name pos:line="4" pos:column="21">phc<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">shm_name<pos:position pos:line="4" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">close<pos:position pos:line="6" pos:column="8"/></name><argument_list pos:line="6" pos:column="8">(<argument><expr><name><name pos:line="6" pos:column="9">phc<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">pipes<pos:position pos:line="6" pos:column="19"/></name><index pos:line="6" pos:column="19">[<expr><literal type="number" pos:line="6" pos:column="20">1<pos:position pos:line="6" pos:column="21"/></literal></expr>]<pos:position pos:line="6" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">phc<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">status<pos:position pos:line="8" pos:column="18"/></name></name> <operator pos:line="8" pos:column="19">==<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">DPDK_HELPER_ALIVE_SENDING_EVENTS<pos:position pos:line="8" pos:column="54"/></name></expr>)<pos:position pos:line="8" pos:column="55"/></condition><then pos:line="8" pos:column="55"> <block pos:line="8" pos:column="56">{
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">phc<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">-&gt;<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="10">status<pos:position pos:line="9" pos:column="16"/></name></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">status<pos:position pos:line="9" pos:column="25"/></name></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">DEBUG<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"%s:%s:%d %s"<pos:position pos:line="10" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="26">phc<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">shm_name<pos:position pos:line="10" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">__FUNCTION__<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="55">__LINE__<pos:position pos:line="10" pos:column="63"/></name></expr></argument>,
          <argument><expr><call><name pos:line="11" pos:column="11">dpdk_helper_status_str<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">status<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">ret<pos:position pos:line="13" pos:column="12"/></name> <init pos:line="13" pos:column="13">= <expr><call><name pos:line="13" pos:column="15">dpdk_helper_command<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">phc<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">DPDK_CMD_QUIT<pos:position pos:line="13" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="55">NULL<pos:position pos:line="13" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="61">0<pos:position pos:line="13" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="64"/></decl_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">ret<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">!=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>)<pos:position pos:line="14" pos:column="18"/></condition><then pos:line="14" pos:column="18"> <block pos:line="14" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">DEBUG<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><literal type="string" pos:line="15" pos:column="13">"%s:%s:%d kill helper (pid=%lu)"<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="47">phc<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">-&gt;<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="52">shm_name<pos:position pos:line="15" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="62">__FUNCTION__<pos:position pos:line="15" pos:column="74"/></name></expr></argument>,
            <argument><expr><name pos:line="16" pos:column="13">__LINE__<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="23">(<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">long<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">)<pos:position pos:line="16" pos:column="29"/></operator><name><name pos:line="16" pos:column="29">phc<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">pid<pos:position pos:line="16" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>

      <decl_stmt><decl><type><name pos:line="18" pos:column="7">int<pos:position pos:line="18" pos:column="10"/></name></type> <name pos:line="18" pos:column="11">err<pos:position pos:line="18" pos:column="14"/></name> <init pos:line="18" pos:column="15">= <expr><call><name pos:line="18" pos:column="17">kill<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name><name pos:line="18" pos:column="22">phc<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">pid<pos:position pos:line="18" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="32">SIGKILL<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="41"/></decl_stmt>
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><name pos:line="19" pos:column="11">err<pos:position pos:line="19" pos:column="14"/></name></expr>)<pos:position pos:line="19" pos:column="15"/></condition><then pos:line="19" pos:column="15"> <block pos:line="19" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ERROR<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><literal type="string" pos:line="20" pos:column="15">"%s error sending kill to helper: %s"<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">__FUNCTION__<pos:position pos:line="20" pos:column="66"/></name></expr></argument>,
              <argument><expr><call><name pos:line="21" pos:column="15">sstrerror<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">errno<pos:position pos:line="21" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="32">errbuf<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="40">sizeof<argument_list pos:line="21" pos:column="46">(<argument><expr><name pos:line="21" pos:column="47">errbuf<pos:position pos:line="21" pos:column="53"/></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>
      }<pos:position pos:line="22" pos:column="8"/></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
  }<pos:position pos:line="24" pos:column="4"/></block></then> <else pos:line="24" pos:column="5">else <block pos:line="24" pos:column="10">{

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">DEBUG<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><literal type="string" pos:line="26" pos:column="11">"%s:%s:%d kill helper (pid=%lu)"<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="45">phc<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">-&gt;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="50">shm_name<pos:position pos:line="26" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="60">__FUNCTION__<pos:position pos:line="26" pos:column="72"/></name></expr></argument>,
          <argument><expr><name pos:line="27" pos:column="11">__LINE__<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="21">(<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">long<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">)<pos:position pos:line="27" pos:column="27"/></operator><name><name pos:line="27" pos:column="27">phc<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">pid<pos:position pos:line="27" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="29" pos:column="5">int<pos:position pos:line="29" pos:column="8"/></name></type> <name pos:line="29" pos:column="9">err<pos:position pos:line="29" pos:column="12"/></name> <init pos:line="29" pos:column="13">= <expr><call><name pos:line="29" pos:column="15">kill<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name><name pos:line="29" pos:column="20">phc<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-&gt;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="25">pid<pos:position pos:line="29" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">SIGKILL<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="39"/></decl_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">err<pos:position pos:line="30" pos:column="12"/></name></expr>)<pos:position pos:line="30" pos:column="13"/></condition><then pos:line="30" pos:column="13"> <block pos:line="30" pos:column="14">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">ERROR<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><literal type="string" pos:line="31" pos:column="13">"%s error sending kill to helper: %s"<pos:position pos:line="31" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">__FUNCTION__<pos:position pos:line="31" pos:column="64"/></name></expr></argument>,
            <argument><expr><call><name pos:line="32" pos:column="13">sstrerror<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">errno<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="30">errbuf<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="38">sizeof<argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">errbuf<pos:position pos:line="32" pos:column="51"/></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
  }<pos:position pos:line="34" pos:column="4"/></block></else></if>

  <return pos:line="36" pos:column="3">return <expr><literal type="number" pos:line="36" pos:column="10">0<pos:position pos:line="36" pos:column="11"/></literal></expr>;<pos:position pos:line="36" pos:column="12"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

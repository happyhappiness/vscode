<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2385_collectd-5.5.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">meta_data_destroy<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">meta_data_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">md<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list> <comment type="block" pos:line="1" pos:column="42">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">md<pos:position pos:line="3" pos:column="9"/></name> <operator pos:line="3" pos:column="10">==<pos:position pos:line="3" pos:column="12"/></operator> <name pos:line="3" pos:column="13">NULL<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18">
    <block type="pseudo"><return pos:line="4" pos:column="5">return;<pos:position pos:line="4" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">md_entry_free<pos:position pos:line="6" pos:column="16"/></name> <argument_list pos:line="6" pos:column="17">(<argument><expr><name><name pos:line="6" pos:column="18">md<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">head<pos:position pos:line="6" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">pthread_mutex_destroy<pos:position pos:line="7" pos:column="24"/></name> <argument_list pos:line="7" pos:column="25">(<argument><expr><operator pos:line="7" pos:column="26">&amp;<pos:position pos:line="7" pos:column="31"/></operator><name><name pos:line="7" pos:column="27">md<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">lock<pos:position pos:line="7" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">free<pos:position pos:line="8" pos:column="7"/></name> <argument_list pos:line="8" pos:column="8">(<argument><expr><name pos:line="8" pos:column="9">md<pos:position pos:line="8" pos:column="11"/></name></expr></argument>)<pos:position pos:line="8" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="13"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

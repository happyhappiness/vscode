<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1328_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">grpc<pos:position pos:line="1" pos:column="12"/></name><operator pos:line="1" pos:column="12">::<pos:position pos:line="1" pos:column="14"/></operator><name pos:line="1" pos:column="14">Status<pos:position pos:line="1" pos:column="20"/></name></name></type> <name pos:line="1" pos:column="21">marshal_value_list<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">value_list_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">vl<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                       <parameter><decl><type><name><name pos:line="2" pos:column="40">collectd<pos:position pos:line="2" pos:column="48"/></name><operator pos:line="2" pos:column="48">::<pos:position pos:line="2" pos:column="50"/></operator><name pos:line="2" pos:column="50">types<pos:position pos:line="2" pos:column="55"/></name><operator pos:line="2" pos:column="55">::<pos:position pos:line="2" pos:column="57"/></operator><name pos:line="2" pos:column="57">ValueList<pos:position pos:line="2" pos:column="66"/></name></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">msg<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list> <block pos:line="2" pos:column="73">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">auto<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">id<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><call><name><name pos:line="3" pos:column="13">msg<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">-&gt;<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="18">mutable_identifier<pos:position pos:line="3" pos:column="36"/></name></name><argument_list pos:line="3" pos:column="36">()<pos:position pos:line="3" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">marshal_ident<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">vl<pos:position pos:line="4" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="21">id<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">auto<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">ds<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><call><name pos:line="6" pos:column="13">plugin_get_ds<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name><name pos:line="6" pos:column="27">vl<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">type<pos:position pos:line="6" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">ds<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">==<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">NULL<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">)<pos:position pos:line="7" pos:column="19"/></operator> <operator pos:line="7" pos:column="20">||<pos:position pos:line="7" pos:column="22"/></operator> <operator pos:line="7" pos:column="23">(<pos:position pos:line="7" pos:column="24"/></operator><name><name pos:line="7" pos:column="24">ds<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">ds_num<pos:position pos:line="7" pos:column="34"/></name></name> <operator pos:line="7" pos:column="35">!=<pos:position pos:line="7" pos:column="37"/></operator> <name><name pos:line="7" pos:column="38">vl<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">-&gt;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="42">values_len<pos:position pos:line="7" pos:column="52"/></name></name><operator pos:line="7" pos:column="52">)<pos:position pos:line="7" pos:column="53"/></operator></expr>)<pos:position pos:line="7" pos:column="54"/></condition><then pos:line="7" pos:column="54"> <block pos:line="7" pos:column="55">{
    <return pos:line="8" pos:column="5">return <expr><call><name><name pos:line="8" pos:column="12">grpc<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">::<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">Status<pos:position pos:line="8" pos:column="24"/></name></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name><name pos:line="8" pos:column="25">grpc<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">::<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">StatusCode<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">::<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="43">INTERNAL<pos:position pos:line="8" pos:column="51"/></name></name></expr></argument>,
                        <argument><expr><call><name><name pos:line="9" pos:column="25">grpc<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">::<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">string<pos:position pos:line="9" pos:column="37"/></name></name><argument_list pos:line="9" pos:column="37">(<argument><expr><literal type="string" pos:line="9" pos:column="38">"failed to retrieve data-set for values"<pos:position pos:line="9" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="81"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">auto<pos:position pos:line="12" pos:column="7"/></name></type> <name pos:line="12" pos:column="8">t<pos:position pos:line="12" pos:column="9"/></name> <init pos:line="12" pos:column="10">= <expr><call><name><name pos:line="12" pos:column="12">TimeUtil<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">::<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">NanosecondsToTimestamp<pos:position pos:line="12" pos:column="44"/></name></name><argument_list pos:line="12" pos:column="44">(<argument><expr><call><name pos:line="12" pos:column="45">CDTIME_T_TO_NS<pos:position pos:line="12" pos:column="59"/></name><argument_list pos:line="12" pos:column="59">(<argument><expr><name><name pos:line="12" pos:column="60">vl<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">-&gt;<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="64">time<pos:position pos:line="12" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="71"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">auto<pos:position pos:line="13" pos:column="7"/></name></type> <name pos:line="13" pos:column="8">d<pos:position pos:line="13" pos:column="9"/></name> <init pos:line="13" pos:column="10">= <expr><call><name><name pos:line="13" pos:column="12">TimeUtil<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">::<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">NanosecondsToDuration<pos:position pos:line="13" pos:column="43"/></name></name><argument_list pos:line="13" pos:column="43">(<argument><expr><call><name pos:line="13" pos:column="44">CDTIME_T_TO_NS<pos:position pos:line="13" pos:column="58"/></name><argument_list pos:line="13" pos:column="58">(<argument><expr><name><name pos:line="13" pos:column="59">vl<pos:position pos:line="13" pos:column="61"/></name><operator pos:line="13" pos:column="61">-&gt;<pos:position pos:line="13" pos:column="66"/></operator><name pos:line="13" pos:column="63">interval<pos:position pos:line="13" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="74"/></decl_stmt>
  <expr_stmt><expr><call><name><name pos:line="14" pos:column="3">msg<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">set_allocated_time<pos:position pos:line="14" pos:column="26"/></name></name><argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">new<pos:position pos:line="14" pos:column="30"/></operator> <call><name><name pos:line="14" pos:column="31">google<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">::<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">protobuf<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">::<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="49">Timestamp<pos:position pos:line="14" pos:column="58"/></name></name><argument_list pos:line="14" pos:column="58">(<argument><expr><name pos:line="14" pos:column="59">t<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="15" pos:column="3">msg<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">set_allocated_interval<pos:position pos:line="15" pos:column="30"/></name></name><argument_list pos:line="15" pos:column="30">(<argument><expr><operator pos:line="15" pos:column="31">new<pos:position pos:line="15" pos:column="34"/></operator> <call><name><name pos:line="15" pos:column="35">google<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">::<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">protobuf<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">::<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="53">Duration<pos:position pos:line="15" pos:column="61"/></name></name><argument_list pos:line="15" pos:column="61">(<argument><expr><name pos:line="15" pos:column="62">d<pos:position pos:line="15" pos:column="63"/></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>

  <expr_stmt><expr><call><name><name pos:line="17" pos:column="3">msg<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">clear_meta_data<pos:position pos:line="17" pos:column="23"/></name></name><argument_list pos:line="17" pos:column="23">()<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name><name pos:line="18" pos:column="7">vl<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">meta<pos:position pos:line="18" pos:column="15"/></name></name> <operator pos:line="18" pos:column="16">!=<pos:position pos:line="18" pos:column="18"/></operator> <literal type="null" pos:line="18" pos:column="19">nullptr<pos:position pos:line="18" pos:column="26"/></literal></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27"> <block pos:line="18" pos:column="28">{
    <decl_stmt><decl><type><name><name pos:line="19" pos:column="5">grpc<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">::<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">Status<pos:position pos:line="19" pos:column="17"/></name></name></type> <name pos:line="19" pos:column="18">status<pos:position pos:line="19" pos:column="24"/></name> <init pos:line="19" pos:column="25">= <expr><call><name pos:line="19" pos:column="27">marshal_meta_data<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><name><name pos:line="19" pos:column="45">vl<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">meta<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="19" pos:column="55">msg<pos:position pos:line="19" pos:column="58"/></name><operator pos:line="19" pos:column="58">-&gt;<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="60">mutable_meta_data<pos:position pos:line="19" pos:column="77"/></name></name><argument_list pos:line="19" pos:column="77">()<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="81"/></decl_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><call><name><name pos:line="20" pos:column="10">status<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">.<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">ok<pos:position pos:line="20" pos:column="19"/></name></name><argument_list pos:line="20" pos:column="19">()<pos:position pos:line="20" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22"> <block pos:line="20" pos:column="23">{
      <return pos:line="21" pos:column="7">return <expr><name pos:line="21" pos:column="14">status<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><decl><type><name pos:line="25" pos:column="8">size_t<pos:position pos:line="25" pos:column="14"/></name></type> <name pos:line="25" pos:column="15">i<pos:position pos:line="25" pos:column="16"/></name> <init pos:line="25" pos:column="17">= <expr><literal type="number" pos:line="25" pos:column="19">0<pos:position pos:line="25" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="21"/></init> <condition><expr><name pos:line="25" pos:column="22">i<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">&lt;<pos:position pos:line="25" pos:column="28"/></operator> <name><name pos:line="25" pos:column="26">vl<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">values_len<pos:position pos:line="25" pos:column="40"/></name></name></expr>;<pos:position pos:line="25" pos:column="41"/></condition> <incr><expr><operator pos:line="25" pos:column="42">++<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">i<pos:position pos:line="25" pos:column="45"/></name></expr></incr>)<pos:position pos:line="25" pos:column="46"/></control> <block pos:line="25" pos:column="47">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">auto<pos:position pos:line="26" pos:column="9"/></name></type> <name pos:line="26" pos:column="10">v<pos:position pos:line="26" pos:column="11"/></name> <init pos:line="26" pos:column="12">= <expr><call><name><name pos:line="26" pos:column="14">msg<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">add_values<pos:position pos:line="26" pos:column="29"/></name></name><argument_list pos:line="26" pos:column="29">()<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">value_type<pos:position pos:line="27" pos:column="19"/></name> <init pos:line="27" pos:column="20">= <expr><name><name pos:line="27" pos:column="22">ds<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">ds<pos:position pos:line="27" pos:column="28"/></name><index pos:line="27" pos:column="28">[<expr><name pos:line="27" pos:column="29">i<pos:position pos:line="27" pos:column="30"/></name></expr>]<pos:position pos:line="27" pos:column="31"/></index></name><operator pos:line="27" pos:column="31">.<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">type<pos:position pos:line="27" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="37"/></decl_stmt>
    <switch pos:line="28" pos:column="5">switch <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">value_type<pos:position pos:line="28" pos:column="23"/></name></expr>)<pos:position pos:line="28" pos:column="24"/></condition> <block pos:line="28" pos:column="25">{
    <case pos:line="29" pos:column="5">case <expr><name pos:line="29" pos:column="10">DS_TYPE_COUNTER<pos:position pos:line="29" pos:column="25"/></name></expr>:<pos:position pos:line="29" pos:column="26"/></case>
      <expr_stmt><expr><call><name><name pos:line="30" pos:column="7">v<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">-&gt;<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="10">set_counter<pos:position pos:line="30" pos:column="21"/></name></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name><name pos:line="30" pos:column="22">vl<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">values<pos:position pos:line="30" pos:column="32"/></name><index pos:line="30" pos:column="32">[<expr><name pos:line="30" pos:column="33">i<pos:position pos:line="30" pos:column="34"/></name></expr>]<pos:position pos:line="30" pos:column="35"/></index></name><operator pos:line="30" pos:column="35">.<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="36">counter<pos:position pos:line="30" pos:column="43"/></name></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
      <break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break>
    <case pos:line="32" pos:column="5">case <expr><name pos:line="32" pos:column="10">DS_TYPE_GAUGE<pos:position pos:line="32" pos:column="23"/></name></expr>:<pos:position pos:line="32" pos:column="24"/></case>
      <expr_stmt><expr><call><name><name pos:line="33" pos:column="7">v<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="10">set_gauge<pos:position pos:line="33" pos:column="19"/></name></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name><name pos:line="33" pos:column="20">vl<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">values<pos:position pos:line="33" pos:column="30"/></name><index pos:line="33" pos:column="30">[<expr><name pos:line="33" pos:column="31">i<pos:position pos:line="33" pos:column="32"/></name></expr>]<pos:position pos:line="33" pos:column="33"/></index></name><operator pos:line="33" pos:column="33">.<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="34">gauge<pos:position pos:line="33" pos:column="39"/></name></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>
      <break pos:line="34" pos:column="7">break;<pos:position pos:line="34" pos:column="13"/></break>
    <case pos:line="35" pos:column="5">case <expr><name pos:line="35" pos:column="10">DS_TYPE_DERIVE<pos:position pos:line="35" pos:column="24"/></name></expr>:<pos:position pos:line="35" pos:column="25"/></case>
      <expr_stmt><expr><call><name><name pos:line="36" pos:column="7">v<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">-&gt;<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="10">set_derive<pos:position pos:line="36" pos:column="20"/></name></name><argument_list pos:line="36" pos:column="20">(<argument><expr><name><name pos:line="36" pos:column="21">vl<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">values<pos:position pos:line="36" pos:column="31"/></name><index pos:line="36" pos:column="31">[<expr><name pos:line="36" pos:column="32">i<pos:position pos:line="36" pos:column="33"/></name></expr>]<pos:position pos:line="36" pos:column="34"/></index></name><operator pos:line="36" pos:column="34">.<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="35">derive<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
      <break pos:line="37" pos:column="7">break;<pos:position pos:line="37" pos:column="13"/></break>
    <case pos:line="38" pos:column="5">case <expr><name pos:line="38" pos:column="10">DS_TYPE_ABSOLUTE<pos:position pos:line="38" pos:column="26"/></name></expr>:<pos:position pos:line="38" pos:column="27"/></case>
      <expr_stmt><expr><call><name><name pos:line="39" pos:column="7">v<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">-&gt;<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="10">set_absolute<pos:position pos:line="39" pos:column="22"/></name></name><argument_list pos:line="39" pos:column="22">(<argument><expr><name><name pos:line="39" pos:column="23">vl<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">values<pos:position pos:line="39" pos:column="33"/></name><index pos:line="39" pos:column="33">[<expr><name pos:line="39" pos:column="34">i<pos:position pos:line="39" pos:column="35"/></name></expr>]<pos:position pos:line="39" pos:column="36"/></index></name><operator pos:line="39" pos:column="36">.<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="37">absolute<pos:position pos:line="39" pos:column="45"/></name></expr></argument>)<pos:position pos:line="39" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt>
      <break pos:line="40" pos:column="7">break;<pos:position pos:line="40" pos:column="13"/></break>
    <default pos:line="41" pos:column="5">default:<pos:position pos:line="41" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">ERROR<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><literal type="string" pos:line="42" pos:column="13">"grpc: invalid value type (%d)"<pos:position pos:line="42" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="46">value_type<pos:position pos:line="42" pos:column="56"/></name></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="58"/></expr_stmt>
      <return pos:line="43" pos:column="7">return <expr><call><name><name pos:line="43" pos:column="14">grpc<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">::<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">Status<pos:position pos:line="43" pos:column="26"/></name></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name><name pos:line="43" pos:column="27">grpc<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">::<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="33">StatusCode<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">::<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="45">INTERNAL<pos:position pos:line="43" pos:column="53"/></name></name></expr></argument>,
                          <argument><expr><call><name><name pos:line="44" pos:column="27">grpc<pos:position pos:line="44" pos:column="31"/></name><operator pos:line="44" pos:column="31">::<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="33">string<pos:position pos:line="44" pos:column="39"/></name></name><argument_list pos:line="44" pos:column="39">(<argument><expr><literal type="string" pos:line="44" pos:column="40">"unknown value type"<pos:position pos:line="44" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="63"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></switch>

    <decl_stmt><decl><type><name pos:line="47" pos:column="5">auto<pos:position pos:line="47" pos:column="9"/></name></type> <name pos:line="47" pos:column="10">name<pos:position pos:line="47" pos:column="14"/></name> <init pos:line="47" pos:column="15">= <expr><call><name><name pos:line="47" pos:column="17">msg<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">add_ds_names<pos:position pos:line="47" pos:column="34"/></name></name><argument_list pos:line="47" pos:column="34">()<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="37"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="48" pos:column="5">name<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="11">assign<pos:position pos:line="48" pos:column="17"/></name></name><argument_list pos:line="48" pos:column="17">(<argument><expr><name><name pos:line="48" pos:column="18">ds<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">-&gt;<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="22">ds<pos:position pos:line="48" pos:column="24"/></name><index pos:line="48" pos:column="24">[<expr><name pos:line="48" pos:column="25">i<pos:position pos:line="48" pos:column="26"/></name></expr>]<pos:position pos:line="48" pos:column="27"/></index></name><operator pos:line="48" pos:column="27">.<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="28">name<pos:position pos:line="48" pos:column="32"/></name></expr></argument>)<pos:position pos:line="48" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></for>

  <return pos:line="51" pos:column="3">return <expr><name><name pos:line="51" pos:column="10">grpc<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">::<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="16">Status<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">::<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="24">OK<pos:position pos:line="51" pos:column="26"/></name></name></expr>;<pos:position pos:line="51" pos:column="27"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

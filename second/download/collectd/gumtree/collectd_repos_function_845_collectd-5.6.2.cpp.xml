<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_845_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">cpy_common_repr<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">PyObject<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">s<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <block pos:line="1" pos:column="47">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">PyObject<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">ret<pos:position pos:line="2" pos:column="16"/></name></decl>, <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="19">tmp<pos:position pos:line="2" pos:column="22"/></name></decl>;<pos:position pos:line="2" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">PyObject<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">l_type<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">NULL<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="36">l_type_instance<pos:position pos:line="3" pos:column="51"/></name> <init pos:line="3" pos:column="52">= <expr><name pos:line="3" pos:column="54">NULL<pos:position pos:line="3" pos:column="58"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="61">l_plugin<pos:position pos:line="3" pos:column="69"/></name> <init pos:line="3" pos:column="70">= <expr><name pos:line="3" pos:column="72">NULL<pos:position pos:line="3" pos:column="76"/></name></expr></init></decl>,
                  <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="20">l_plugin_instance<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><name pos:line="4" pos:column="40">NULL<pos:position pos:line="4" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="5" pos:column="3">static<pos:position pos:line="5" pos:column="9"/></specifier> <type><name pos:line="5" pos:column="10">PyObject<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">l_host<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="36">l_time<pos:position pos:line="5" pos:column="42"/></name> <init pos:line="5" pos:column="43">= <expr><name pos:line="5" pos:column="45">NULL<pos:position pos:line="5" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">PluginData<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">self<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><operator pos:line="6" pos:column="22">(<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">PluginData<pos:position pos:line="6" pos:column="33"/></name> <operator pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></operator><operator pos:line="6" pos:column="35">)<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="36">s<pos:position pos:line="6" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">l_type<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">==<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">l_type<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">cpy_string_to_unicode_or_bytes<pos:position pos:line="9" pos:column="44"/></name><argument_list pos:line="9" pos:column="44">(<argument><expr><literal type="string" pos:line="9" pos:column="45">"(type="<pos:position pos:line="9" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt></block></then></if>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">l_type_instance<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">==<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">l_type_instance<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">cpy_string_to_unicode_or_bytes<pos:position pos:line="11" pos:column="53"/></name><argument_list pos:line="11" pos:column="53">(<argument><expr><literal type="string" pos:line="11" pos:column="54">",type_instance="<pos:position pos:line="11" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="73"/></expr_stmt></block></then></if>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">l_plugin<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">==<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">NULL<pos:position pos:line="12" pos:column="23"/></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="5">l_plugin<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <call><name pos:line="13" pos:column="16">cpy_string_to_unicode_or_bytes<pos:position pos:line="13" pos:column="46"/></name><argument_list pos:line="13" pos:column="46">(<argument><expr><literal type="string" pos:line="13" pos:column="47">",plugin="<pos:position pos:line="13" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt></block></then></if>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">l_plugin_instance<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">==<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">NULL<pos:position pos:line="14" pos:column="32"/></name></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">l_plugin_instance<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <call><name pos:line="15" pos:column="25">cpy_string_to_unicode_or_bytes<pos:position pos:line="15" pos:column="55"/></name><argument_list pos:line="15" pos:column="55">(<argument><expr><literal type="string" pos:line="15" pos:column="56">",plugin_instance="<pos:position pos:line="15" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="77"/></expr_stmt></block></then></if>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">l_host<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">==<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">NULL<pos:position pos:line="16" pos:column="21"/></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">l_host<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">cpy_string_to_unicode_or_bytes<pos:position pos:line="17" pos:column="44"/></name><argument_list pos:line="17" pos:column="44">(<argument><expr><literal type="string" pos:line="17" pos:column="45">",host="<pos:position pos:line="17" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt></block></then></if>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">l_time<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">==<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">NULL<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">l_time<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">cpy_string_to_unicode_or_bytes<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><literal type="string" pos:line="19" pos:column="45">",time="<pos:position pos:line="19" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">l_type<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">||<pos:position pos:line="21" pos:column="17"/></operator> <operator pos:line="21" pos:column="18">!<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">l_type_instance<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">||<pos:position pos:line="21" pos:column="37"/></operator> <operator pos:line="21" pos:column="38">!<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">l_plugin<pos:position pos:line="21" pos:column="47"/></name> <operator pos:line="21" pos:column="48">||<pos:position pos:line="21" pos:column="50"/></operator> <operator pos:line="21" pos:column="51">!<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="52">l_plugin_instance<pos:position pos:line="21" pos:column="69"/></name> <operator pos:line="21" pos:column="70">||<pos:position pos:line="21" pos:column="72"/></operator>
      <operator pos:line="22" pos:column="7">!<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">l_host<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">||<pos:position pos:line="22" pos:column="17"/></operator> <operator pos:line="22" pos:column="18">!<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">l_time<pos:position pos:line="22" pos:column="25"/></name></expr>)<pos:position pos:line="22" pos:column="26"/></condition><then pos:line="22" pos:column="26">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">NULL<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="25" pos:column="3">ret<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <call><name pos:line="25" pos:column="9">cpy_string_to_unicode_or_bytes<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name><name pos:line="25" pos:column="40">s<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">ob_type<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">tp_name<pos:position pos:line="25" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="61"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">CPY_STRCAT<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><operator pos:line="27" pos:column="14">&amp;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="15">ret<pos:position pos:line="27" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="20">l_type<pos:position pos:line="27" pos:column="26"/></name></expr></argument>)<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="28" pos:column="3">tmp<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <call><name pos:line="28" pos:column="9">cpy_string_to_unicode_or_bytes<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">(<argument><expr><name><name pos:line="28" pos:column="40">self<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">-&gt;<pos:position pos:line="28" pos:column="49"/></operator><name pos:line="28" pos:column="46">type<pos:position pos:line="28" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">CPY_SUBSTITUTE<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><name pos:line="29" pos:column="18">PyObject_Repr<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">tmp<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">tmp<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">CPY_STRCAT_AND_DEL<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><operator pos:line="30" pos:column="22">&amp;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="23">ret<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="28">tmp<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name><name pos:line="32" pos:column="7">self<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">type_instance<pos:position pos:line="32" pos:column="26"/></name><index pos:line="32" pos:column="26">[<expr><literal type="number" pos:line="32" pos:column="27">0<pos:position pos:line="32" pos:column="28"/></literal></expr>]<pos:position pos:line="32" pos:column="29"/></index></name> <operator pos:line="32" pos:column="30">!=<pos:position pos:line="32" pos:column="32"/></operator> <literal type="number" pos:line="32" pos:column="33">0<pos:position pos:line="32" pos:column="34"/></literal></expr>)<pos:position pos:line="32" pos:column="35"/></condition><then pos:line="32" pos:column="35"> <block pos:line="32" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">CPY_STRCAT<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><operator pos:line="33" pos:column="16">&amp;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="17">ret<pos:position pos:line="33" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="22">l_type_instance<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">tmp<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <call><name pos:line="34" pos:column="11">cpy_string_to_unicode_or_bytes<pos:position pos:line="34" pos:column="41"/></name><argument_list pos:line="34" pos:column="41">(<argument><expr><name><name pos:line="34" pos:column="42">self<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">type_instance<pos:position pos:line="34" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">CPY_SUBSTITUTE<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><name pos:line="35" pos:column="20">PyObject_Repr<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">tmp<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="40">tmp<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">CPY_STRCAT_AND_DEL<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><operator pos:line="36" pos:column="24">&amp;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="25">ret<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="30">tmp<pos:position pos:line="36" pos:column="33"/></name></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name><name pos:line="39" pos:column="7">self<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">plugin<pos:position pos:line="39" pos:column="19"/></name><index pos:line="39" pos:column="19">[<expr><literal type="number" pos:line="39" pos:column="20">0<pos:position pos:line="39" pos:column="21"/></literal></expr>]<pos:position pos:line="39" pos:column="22"/></index></name> <operator pos:line="39" pos:column="23">!=<pos:position pos:line="39" pos:column="25"/></operator> <literal type="number" pos:line="39" pos:column="26">0<pos:position pos:line="39" pos:column="27"/></literal></expr>)<pos:position pos:line="39" pos:column="28"/></condition><then pos:line="39" pos:column="28"> <block pos:line="39" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">CPY_STRCAT<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><operator pos:line="40" pos:column="16">&amp;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="17">ret<pos:position pos:line="40" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="22">l_plugin<pos:position pos:line="40" pos:column="30"/></name></expr></argument>)<pos:position pos:line="40" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">tmp<pos:position pos:line="41" pos:column="8"/></name> <operator pos:line="41" pos:column="9">=<pos:position pos:line="41" pos:column="10"/></operator> <call><name pos:line="41" pos:column="11">cpy_string_to_unicode_or_bytes<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">(<argument><expr><name><name pos:line="41" pos:column="42">self<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">plugin<pos:position pos:line="41" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">CPY_SUBSTITUTE<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name pos:line="42" pos:column="20">PyObject_Repr<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">tmp<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">tmp<pos:position pos:line="42" pos:column="43"/></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">CPY_STRCAT_AND_DEL<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><operator pos:line="43" pos:column="24">&amp;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="25">ret<pos:position pos:line="43" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="30">tmp<pos:position pos:line="43" pos:column="33"/></name></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name><name pos:line="46" pos:column="7">self<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">-&gt;<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="13">plugin_instance<pos:position pos:line="46" pos:column="28"/></name><index pos:line="46" pos:column="28">[<expr><literal type="number" pos:line="46" pos:column="29">0<pos:position pos:line="46" pos:column="30"/></literal></expr>]<pos:position pos:line="46" pos:column="31"/></index></name> <operator pos:line="46" pos:column="32">!=<pos:position pos:line="46" pos:column="34"/></operator> <literal type="number" pos:line="46" pos:column="35">0<pos:position pos:line="46" pos:column="36"/></literal></expr>)<pos:position pos:line="46" pos:column="37"/></condition><then pos:line="46" pos:column="37"> <block pos:line="46" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">CPY_STRCAT<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><operator pos:line="47" pos:column="16">&amp;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="17">ret<pos:position pos:line="47" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="22">l_plugin_instance<pos:position pos:line="47" pos:column="39"/></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="48" pos:column="5">tmp<pos:position pos:line="48" pos:column="8"/></name> <operator pos:line="48" pos:column="9">=<pos:position pos:line="48" pos:column="10"/></operator> <call><name pos:line="48" pos:column="11">cpy_string_to_unicode_or_bytes<pos:position pos:line="48" pos:column="41"/></name><argument_list pos:line="48" pos:column="41">(<argument><expr><name><name pos:line="48" pos:column="42">self<pos:position pos:line="48" pos:column="46"/></name><operator pos:line="48" pos:column="46">-&gt;<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="48">plugin_instance<pos:position pos:line="48" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">CPY_SUBSTITUTE<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><name pos:line="49" pos:column="20">PyObject_Repr<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="35">tmp<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="40">tmp<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">CPY_STRCAT_AND_DEL<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><operator pos:line="50" pos:column="24">&amp;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="25">ret<pos:position pos:line="50" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="30">tmp<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name><name pos:line="53" pos:column="7">self<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">host<pos:position pos:line="53" pos:column="17"/></name><index pos:line="53" pos:column="17">[<expr><literal type="number" pos:line="53" pos:column="18">0<pos:position pos:line="53" pos:column="19"/></literal></expr>]<pos:position pos:line="53" pos:column="20"/></index></name> <operator pos:line="53" pos:column="21">!=<pos:position pos:line="53" pos:column="23"/></operator> <literal type="number" pos:line="53" pos:column="24">0<pos:position pos:line="53" pos:column="25"/></literal></expr>)<pos:position pos:line="53" pos:column="26"/></condition><then pos:line="53" pos:column="26"> <block pos:line="53" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">CPY_STRCAT<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><operator pos:line="54" pos:column="16">&amp;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="17">ret<pos:position pos:line="54" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="22">l_host<pos:position pos:line="54" pos:column="28"/></name></expr></argument>)<pos:position pos:line="54" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="55" pos:column="5">tmp<pos:position pos:line="55" pos:column="8"/></name> <operator pos:line="55" pos:column="9">=<pos:position pos:line="55" pos:column="10"/></operator> <call><name pos:line="55" pos:column="11">cpy_string_to_unicode_or_bytes<pos:position pos:line="55" pos:column="41"/></name><argument_list pos:line="55" pos:column="41">(<argument><expr><name><name pos:line="55" pos:column="42">self<pos:position pos:line="55" pos:column="46"/></name><operator pos:line="55" pos:column="46">-&gt;<pos:position pos:line="55" pos:column="51"/></operator><name pos:line="55" pos:column="48">host<pos:position pos:line="55" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">CPY_SUBSTITUTE<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><name pos:line="56" pos:column="20">PyObject_Repr<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="35">tmp<pos:position pos:line="56" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="40">tmp<pos:position pos:line="56" pos:column="43"/></name></expr></argument>)<pos:position pos:line="56" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">CPY_STRCAT_AND_DEL<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><operator pos:line="57" pos:column="24">&amp;<pos:position pos:line="57" pos:column="29"/></operator><name pos:line="57" pos:column="25">ret<pos:position pos:line="57" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="30">tmp<pos:position pos:line="57" pos:column="33"/></name></expr></argument>)<pos:position pos:line="57" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><name><name pos:line="60" pos:column="7">self<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">-&gt;<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="13">time<pos:position pos:line="60" pos:column="17"/></name></name> <operator pos:line="60" pos:column="18">!=<pos:position pos:line="60" pos:column="20"/></operator> <literal type="number" pos:line="60" pos:column="21">0<pos:position pos:line="60" pos:column="22"/></literal></expr>)<pos:position pos:line="60" pos:column="23"/></condition><then pos:line="60" pos:column="23"> <block pos:line="60" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">CPY_STRCAT<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><operator pos:line="61" pos:column="16">&amp;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="17">ret<pos:position pos:line="61" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="22">l_time<pos:position pos:line="61" pos:column="28"/></name></expr></argument>)<pos:position pos:line="61" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">tmp<pos:position pos:line="62" pos:column="8"/></name> <operator pos:line="62" pos:column="9">=<pos:position pos:line="62" pos:column="10"/></operator> <call><name pos:line="62" pos:column="11">PyFloat_FromDouble<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><name><name pos:line="62" pos:column="30">self<pos:position pos:line="62" pos:column="34"/></name><operator pos:line="62" pos:column="34">-&gt;<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="36">time<pos:position pos:line="62" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">CPY_SUBSTITUTE<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">(<argument><expr><name pos:line="63" pos:column="20">PyObject_Repr<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="35">tmp<pos:position pos:line="63" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="40">tmp<pos:position pos:line="63" pos:column="43"/></name></expr></argument>)<pos:position pos:line="63" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">CPY_STRCAT_AND_DEL<pos:position pos:line="64" pos:column="23"/></name><argument_list pos:line="64" pos:column="23">(<argument><expr><operator pos:line="64" pos:column="24">&amp;<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="25">ret<pos:position pos:line="64" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="30">tmp<pos:position pos:line="64" pos:column="33"/></name></expr></argument>)<pos:position pos:line="64" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>
  <return pos:line="66" pos:column="3">return <expr><name pos:line="66" pos:column="10">ret<pos:position pos:line="66" pos:column="13"/></name></expr>;<pos:position pos:line="66" pos:column="14"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

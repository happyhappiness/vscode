<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2415_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ts_subst<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">dest<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">size_t<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">size<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">string<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="67">/* {{{ */</comment>
                     <parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">value_list_t<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">vl<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list> <block pos:line="2" pos:column="46">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">temp<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">DATA_MAX_NAME_LEN<pos:position pos:line="3" pos:column="30"/></name></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* Initialize the field with the template. */</comment>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">sstrncpy<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">dest<pos:position pos:line="6" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="18">string<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="26">size<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">strchr<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">dest<pos:position pos:line="8" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="20">'%'<pos:position pos:line="8" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call> <operator pos:line="8" pos:column="25">==<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">NULL<pos:position pos:line="8" pos:column="32"/></name></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33">
    <block type="pseudo"><return pos:line="9" pos:column="5">return;<pos:position pos:line="9" pos:column="12"/></return></block></then></if>

<cpp:define pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">define<pos:position pos:line="11" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="11" pos:column="9">REPLACE_FIELD<pos:position pos:line="11" pos:column="22"/></name><parameter_list pos:line="11" pos:column="22">(<parameter><type><name pos:line="11" pos:column="23">t<pos:position pos:line="11" pos:column="24"/></name></type></parameter>, <parameter><type><name pos:line="11" pos:column="26">v<pos:position pos:line="11" pos:column="27"/></name></type></parameter>)<pos:position pos:line="11" pos:column="28"/></parameter_list></cpp:macro>                                                    \
  <cpp:value pos:line="12" pos:column="3">if (subst_string(temp, sizeof(temp), dest, t, v) != NULL)                    \
    sstrncpy(dest, temp, size);<pos:position pos:line="13" pos:column="32"/></cpp:value></cpp:define>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">REPLACE_FIELD<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><literal type="string" pos:line="14" pos:column="17">"%{host}"<pos:position pos:line="14" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="28">vl<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">host<pos:position pos:line="14" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">REPLACE_FIELD<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><literal type="string" pos:line="15" pos:column="17">"%{plugin}"<pos:position pos:line="15" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="30">vl<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">plugin<pos:position pos:line="15" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">REPLACE_FIELD<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><literal type="string" pos:line="16" pos:column="17">"%{plugin_instance}"<pos:position pos:line="16" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="39">vl<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">-&gt;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="43">plugin_instance<pos:position pos:line="16" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">REPLACE_FIELD<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><literal type="string" pos:line="17" pos:column="17">"%{type}"<pos:position pos:line="17" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="28">vl<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">type<pos:position pos:line="17" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">REPLACE_FIELD<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><literal type="string" pos:line="18" pos:column="17">"%{type_instance}"<pos:position pos:line="18" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="37">vl<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">type_instance<pos:position pos:line="18" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name><name pos:line="20" pos:column="7">vl<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">meta<pos:position pos:line="20" pos:column="15"/></name></name> <operator pos:line="20" pos:column="16">!=<pos:position pos:line="20" pos:column="18"/></operator> <name pos:line="20" pos:column="19">NULL<pos:position pos:line="20" pos:column="23"/></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24"> <block pos:line="20" pos:column="25">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier><modifier pos:line="21" pos:column="11">*<pos:position pos:line="21" pos:column="12"/></modifier></type><name pos:line="21" pos:column="12">meta_toc<pos:position pos:line="21" pos:column="20"/></name> <init pos:line="21" pos:column="21">= <expr><name pos:line="21" pos:column="23">NULL<pos:position pos:line="21" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">meta_entries<pos:position pos:line="22" pos:column="21"/></name> <init pos:line="22" pos:column="22">= <expr><call><name pos:line="22" pos:column="24">meta_data_toc<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name><name pos:line="22" pos:column="38">vl<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">meta<pos:position pos:line="22" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="48">&amp;<pos:position pos:line="22" pos:column="53"/></operator><name pos:line="22" pos:column="49">meta_toc<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="59"/></decl_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">meta_entries<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">&lt;=<pos:position pos:line="23" pos:column="27"/></operator> <literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27">
      <block type="pseudo"><return pos:line="24" pos:column="7">return;<pos:position pos:line="24" pos:column="14"/></return></block></then></if>

    <for pos:line="26" pos:column="5">for <control pos:line="26" pos:column="9">(<init><decl><type><name pos:line="26" pos:column="10">int<pos:position pos:line="26" pos:column="13"/></name></type> <name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name> <init pos:line="26" pos:column="16">= <expr><literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="20"/></init> <condition><expr><name pos:line="26" pos:column="21">i<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">&lt;<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="25">meta_entries<pos:position pos:line="26" pos:column="37"/></name></expr>;<pos:position pos:line="26" pos:column="38"/></condition> <incr><expr><name pos:line="26" pos:column="39">i<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">++<pos:position pos:line="26" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="43"/></control> <block pos:line="26" pos:column="44">{
      <decl_stmt><decl><type><name pos:line="27" pos:column="7">char<pos:position pos:line="27" pos:column="11"/></name></type> <name><name pos:line="27" pos:column="12">meta_name<pos:position pos:line="27" pos:column="21"/></name><index pos:line="27" pos:column="21">[<expr><name pos:line="27" pos:column="22">DATA_MAX_NAME_LEN<pos:position pos:line="27" pos:column="39"/></name></expr>]<pos:position pos:line="27" pos:column="40"/></index></name></decl>;<pos:position pos:line="27" pos:column="41"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="28" pos:column="7">char<pos:position pos:line="28" pos:column="11"/></name> <modifier pos:line="28" pos:column="12">*<pos:position pos:line="28" pos:column="13"/></modifier></type><name pos:line="28" pos:column="13">value_str<pos:position pos:line="28" pos:column="22"/></name></decl>;<pos:position pos:line="28" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="29" pos:column="7">const<pos:position pos:line="29" pos:column="12"/></specifier> <name pos:line="29" pos:column="13">char<pos:position pos:line="29" pos:column="17"/></name> <modifier pos:line="29" pos:column="18">*<pos:position pos:line="29" pos:column="19"/></modifier></type><name pos:line="29" pos:column="19">key<pos:position pos:line="29" pos:column="22"/></name> <init pos:line="29" pos:column="23">= <expr><name><name pos:line="29" pos:column="25">meta_toc<pos:position pos:line="29" pos:column="33"/></name><index pos:line="29" pos:column="33">[<expr><name pos:line="29" pos:column="34">i<pos:position pos:line="29" pos:column="35"/></name></expr>]<pos:position pos:line="29" pos:column="36"/></index></name></expr></init></decl>;<pos:position pos:line="29" pos:column="37"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="31" pos:column="7">snprintf<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">meta_name<pos:position pos:line="31" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="27">sizeof<argument_list pos:line="31" pos:column="33">(<argument><expr><name pos:line="31" pos:column="34">meta_name<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="46">"%%{meta:%s}"<pos:position pos:line="31" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="61">key<pos:position pos:line="31" pos:column="64"/></name></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="66"/></expr_stmt>
      <if pos:line="32" pos:column="7">if <condition pos:line="32" pos:column="10">(<expr><call><name pos:line="32" pos:column="11">meta_data_as_string<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name><name pos:line="32" pos:column="31">vl<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">meta<pos:position pos:line="32" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">key<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="46">&amp;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="47">value_str<pos:position pos:line="32" pos:column="56"/></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call> <operator pos:line="32" pos:column="58">!=<pos:position pos:line="32" pos:column="60"/></operator> <literal type="number" pos:line="32" pos:column="61">0<pos:position pos:line="32" pos:column="62"/></literal></expr>)<pos:position pos:line="32" pos:column="63"/></condition><then pos:line="32" pos:column="63">
        <block type="pseudo"><continue pos:line="33" pos:column="9">continue;<pos:position pos:line="33" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="35" pos:column="7">REPLACE_FIELD<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">meta_name<pos:position pos:line="35" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="32">value_str<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">sfree<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">value_str<pos:position pos:line="36" pos:column="22"/></name></expr></argument>)<pos:position pos:line="36" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">strarray_free<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><name pos:line="39" pos:column="19">meta_toc<pos:position pos:line="39" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="29">(<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">size_t<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">)<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="37">meta_entries<pos:position pos:line="39" pos:column="49"/></name></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

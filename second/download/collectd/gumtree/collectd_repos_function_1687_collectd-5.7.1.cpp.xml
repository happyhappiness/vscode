<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1687_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cpufreq_init<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <block pos:line="1" pos:column="31">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">status<pos:position pos:line="2" pos:column="13"/></name></decl>;<pos:position pos:line="2" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">filename<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><literal type="number" pos:line="3" pos:column="17">256<pos:position pos:line="3" pos:column="20"/></literal></expr>]<pos:position pos:line="3" pos:column="21"/></index></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">num_cpu<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr>;<pos:position pos:line="5" pos:column="15"/></expr_stmt>

  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><literal type="number" pos:line="7" pos:column="10">1<pos:position pos:line="7" pos:column="11"/></literal></expr>)<pos:position pos:line="7" pos:column="12"/></condition> <block pos:line="7" pos:column="13">{
    <expr_stmt><expr><name pos:line="8" pos:column="5">status<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">ssnprintf<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">filename<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="34">sizeof<argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">filename<pos:position pos:line="8" pos:column="49"/></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></sizeof></expr></argument>,
                       <argument><expr><literal type="string" pos:line="9" pos:column="24">"/sys/devices/system/cpu/cpu%d/cpufreq/"<pos:position pos:line="9" pos:column="64"/></literal>
                       <literal type="string" pos:line="10" pos:column="24">"scaling_cur_freq"<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>,
                       <argument><expr><name pos:line="11" pos:column="24">num_cpu<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">status<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&lt;<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="19">1<pos:position pos:line="12" pos:column="20"/></literal><operator pos:line="12" pos:column="20">)<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="22">||<pos:position pos:line="12" pos:column="24"/></operator> <operator pos:line="12" pos:column="25">(<pos:position pos:line="12" pos:column="26"/></operator><operator pos:line="12" pos:column="26">(<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">unsigned<pos:position pos:line="12" pos:column="35"/></name> <name pos:line="12" pos:column="36">int<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">)<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">status<pos:position pos:line="12" pos:column="46"/></name> <operator pos:line="12" pos:column="47">&gt;=<pos:position pos:line="12" pos:column="52"/></operator> <sizeof pos:line="12" pos:column="50">sizeof<argument_list pos:line="12" pos:column="56">(<argument><expr><name pos:line="12" pos:column="57">filename<pos:position pos:line="12" pos:column="65"/></name></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></sizeof><operator pos:line="12" pos:column="66">)<pos:position pos:line="12" pos:column="67"/></operator></expr>)<pos:position pos:line="12" pos:column="68"/></condition><then pos:line="12" pos:column="68">
      <block type="pseudo"><break pos:line="13" pos:column="7">break;<pos:position pos:line="13" pos:column="13"/></break></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">access<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">filename<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="26">R_OK<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32">
      <block type="pseudo"><break pos:line="16" pos:column="7">break;<pos:position pos:line="16" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">num_cpu<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">++<pos:position pos:line="18" pos:column="14"/></operator></expr>;<pos:position pos:line="18" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">INFO<pos:position pos:line="21" pos:column="7"/></name><argument_list pos:line="21" pos:column="7">(<argument><expr><literal type="string" pos:line="21" pos:column="8">"cpufreq plugin: Found %d CPU%s"<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">num_cpu<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="21" pos:column="51">(<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="52">num_cpu<pos:position pos:line="21" pos:column="59"/></name> <operator pos:line="21" pos:column="60">==<pos:position pos:line="21" pos:column="62"/></operator> <literal type="number" pos:line="21" pos:column="63">1<pos:position pos:line="21" pos:column="64"/></literal><operator pos:line="21" pos:column="64">)<pos:position pos:line="21" pos:column="65"/></operator></expr> ?<pos:position pos:line="21" pos:column="67"/></condition><then pos:line="21" pos:column="67"> <expr><literal type="string" pos:line="21" pos:column="68">""<pos:position pos:line="21" pos:column="70"/></literal></expr> <pos:position pos:line="21" pos:column="71"/></then><else pos:line="21" pos:column="71">: <expr><literal type="string" pos:line="21" pos:column="73">"s"<pos:position pos:line="21" pos:column="76"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="78"/></expr_stmt>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">num_cpu<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">==<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">plugin_unregister_read<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><literal type="string" pos:line="24" pos:column="28">"cpufreq"<pos:position pos:line="24" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt></block></then></if>

  <return pos:line="26" pos:column="3">return <expr><operator pos:line="26" pos:column="10">(<pos:position pos:line="26" pos:column="11"/></operator><literal type="number" pos:line="26" pos:column="11">0<pos:position pos:line="26" pos:column="12"/></literal><operator pos:line="26" pos:column="12">)<pos:position pos:line="26" pos:column="13"/></operator></expr>;<pos:position pos:line="26" pos:column="14"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

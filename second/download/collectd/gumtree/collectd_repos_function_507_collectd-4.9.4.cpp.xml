<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_507_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">long<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">read_fork_rate<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">()<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">proc_stat<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buf<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">1024<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">long<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">result<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><literal type="number" pos:line="5" pos:column="32">0<pos:position pos:line="5" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">numfields<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name><name pos:line="7" pos:column="15">fields<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><literal type="number" pos:line="7" pos:column="22">3<pos:position pos:line="7" pos:column="23"/></literal></expr>]<pos:position pos:line="7" pos:column="24"/></index></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">proc_stat<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <call><name pos:line="9" pos:column="21">fopen<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><literal type="string" pos:line="9" pos:column="27">"/proc/stat"<pos:position pos:line="9" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="41">"r"<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">proc_stat<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">==<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31"> <block pos:line="10" pos:column="32">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name></type> <name><name pos:line="11" pos:column="22">errbuf<pos:position pos:line="11" pos:column="28"/></name><index pos:line="11" pos:column="28">[<expr><literal type="number" pos:line="11" pos:column="29">1024<pos:position pos:line="11" pos:column="33"/></literal></expr>]<pos:position pos:line="11" pos:column="34"/></index></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">ERROR<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">(<argument><expr><literal type="string" pos:line="12" pos:column="24">"processes plugin: fopen (/proc/stat) failed: %s"<pos:position pos:line="12" pos:column="73"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="13" pos:column="33">sstrerror<pos:position pos:line="13" pos:column="42"/></name> <argument_list pos:line="13" pos:column="43">(<argument><expr><name pos:line="13" pos:column="44">errno<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">errbuf<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="59">sizeof <argument_list pos:line="13" pos:column="66">(<argument><expr><name pos:line="13" pos:column="67">errbuf<pos:position pos:line="13" pos:column="73"/></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="77"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">ULONG_MAX<pos:position pos:line="14" pos:column="33"/></name></expr>;<pos:position pos:line="14" pos:column="34"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><call><name pos:line="17" pos:column="16">fgets<pos:position pos:line="17" pos:column="21"/></name> <argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">buf<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="28">sizeof<argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">buf<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">proc_stat<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call> <operator pos:line="17" pos:column="52">!=<pos:position pos:line="17" pos:column="54"/></operator> <name pos:line="17" pos:column="55">NULL<pos:position pos:line="17" pos:column="59"/></name></expr>)<pos:position pos:line="17" pos:column="60"/></condition>
	<block pos:line="18" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">char<pos:position pos:line="19" pos:column="21"/></name> <modifier pos:line="19" pos:column="22">*<pos:position pos:line="19" pos:column="23"/></modifier></type><name pos:line="19" pos:column="23">endptr<pos:position pos:line="19" pos:column="29"/></name></decl>;<pos:position pos:line="19" pos:column="30"/></decl_stmt>

		<expr_stmt><expr><name pos:line="21" pos:column="17">numfields<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <call><name pos:line="21" pos:column="29">strsplit<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">buf<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="43">fields<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="51">STATIC_ARRAY_SIZE<pos:position pos:line="21" pos:column="68"/></name> <argument_list pos:line="21" pos:column="69">(<argument><expr><name pos:line="21" pos:column="70">fields<pos:position pos:line="21" pos:column="76"/></name></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="79"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">numfields<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">!=<pos:position pos:line="22" pos:column="33"/></operator> <literal type="number" pos:line="22" pos:column="34">2<pos:position pos:line="22" pos:column="35"/></literal></expr>)<pos:position pos:line="22" pos:column="36"/></condition><then pos:line="22" pos:column="36">
			<block type="pseudo"><continue pos:line="23" pos:column="25">continue;<pos:position pos:line="23" pos:column="34"/></continue></block></then></if>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">strcmp<pos:position pos:line="25" pos:column="27"/></name> <argument_list pos:line="25" pos:column="28">(<argument><expr><literal type="string" pos:line="25" pos:column="29">"processes"<pos:position pos:line="25" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="42">fields<pos:position pos:line="25" pos:column="48"/></name><index pos:line="25" pos:column="48">[<expr><literal type="number" pos:line="25" pos:column="49">0<pos:position pos:line="25" pos:column="50"/></literal></expr>]<pos:position pos:line="25" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call> <operator pos:line="25" pos:column="53">!=<pos:position pos:line="25" pos:column="55"/></operator> <literal type="number" pos:line="25" pos:column="56">0<pos:position pos:line="25" pos:column="57"/></literal></expr>)<pos:position pos:line="25" pos:column="58"/></condition><then pos:line="25" pos:column="58">
			<block type="pseudo"><continue pos:line="26" pos:column="25">continue;<pos:position pos:line="26" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="28" pos:column="17">errno<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <literal type="number" pos:line="28" pos:column="25">0<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">endptr<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">NULL<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">result<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <call><name pos:line="30" pos:column="26">strtoul<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name><name pos:line="30" pos:column="34">fields<pos:position pos:line="30" pos:column="40"/></name><index pos:line="30" pos:column="40">[<expr><literal type="number" pos:line="30" pos:column="41">1<pos:position pos:line="30" pos:column="42"/></literal></expr>]<pos:position pos:line="30" pos:column="43"/></index></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="45">&amp;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="46">endptr<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="54">10<pos:position pos:line="30" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">(<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">endptr<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">==<pos:position pos:line="31" pos:column="31"/></operator> <name><name pos:line="31" pos:column="32">fields<pos:position pos:line="31" pos:column="38"/></name><index pos:line="31" pos:column="38">[<expr><literal type="number" pos:line="31" pos:column="39">1<pos:position pos:line="31" pos:column="40"/></literal></expr>]<pos:position pos:line="31" pos:column="41"/></index></name><operator pos:line="31" pos:column="41">)<pos:position pos:line="31" pos:column="42"/></operator> <operator pos:line="31" pos:column="43">||<pos:position pos:line="31" pos:column="45"/></operator> <operator pos:line="31" pos:column="46">(<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="47">errno<pos:position pos:line="31" pos:column="52"/></name> <operator pos:line="31" pos:column="53">!=<pos:position pos:line="31" pos:column="55"/></operator> <literal type="number" pos:line="31" pos:column="56">0<pos:position pos:line="31" pos:column="57"/></literal><operator pos:line="31" pos:column="57">)<pos:position pos:line="31" pos:column="58"/></operator></expr>)<pos:position pos:line="31" pos:column="59"/></condition><then pos:line="31" pos:column="59"> <block pos:line="31" pos:column="60">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">ERROR<pos:position pos:line="32" pos:column="30"/></name> <argument_list pos:line="32" pos:column="31">(<argument><expr><literal type="string" pos:line="32" pos:column="32">"processes plugin: Cannot parse fork rate: %s"<pos:position pos:line="32" pos:column="78"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="33" pos:column="41">fields<pos:position pos:line="33" pos:column="47"/></name><index pos:line="33" pos:column="47">[<expr><literal type="number" pos:line="33" pos:column="48">1<pos:position pos:line="33" pos:column="49"/></literal></expr>]<pos:position pos:line="33" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="34" pos:column="25">result<pos:position pos:line="34" pos:column="31"/></name> <operator pos:line="34" pos:column="32">=<pos:position pos:line="34" pos:column="33"/></operator> <name pos:line="34" pos:column="34">ULONG_MAX<pos:position pos:line="34" pos:column="43"/></name></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>
			<break pos:line="35" pos:column="25">break;<pos:position pos:line="35" pos:column="31"/></break>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>

		<break pos:line="38" pos:column="17">break;<pos:position pos:line="38" pos:column="23"/></break>
	}<pos:position pos:line="39" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="41" pos:column="9">fclose<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">proc_stat<pos:position pos:line="41" pos:column="25"/></name></expr></argument>)<pos:position pos:line="41" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>

	<return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">result<pos:position pos:line="43" pos:column="22"/></name></expr>;<pos:position pos:line="43" pos:column="23"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

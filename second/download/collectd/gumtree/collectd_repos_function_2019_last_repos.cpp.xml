<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2019_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ntpd_config<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">key<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">value<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list> <block pos:line="1" pos:column="60">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><call><name pos:line="2" pos:column="7">strcasecmp<pos:position pos:line="2" pos:column="17"/></name><argument_list pos:line="2" pos:column="17">(<argument><expr><name pos:line="2" pos:column="18">key<pos:position pos:line="2" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2" pos:column="23">"Host"<pos:position pos:line="2" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="30"/></argument_list></call> <operator pos:line="2" pos:column="31">==<pos:position pos:line="2" pos:column="33"/></operator> <literal type="number" pos:line="2" pos:column="34">0<pos:position pos:line="2" pos:column="35"/></literal></expr>)<pos:position pos:line="2" pos:column="36"/></condition><then pos:line="2" pos:column="36"> <block pos:line="2" pos:column="37">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">ntpd_host<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">!=<pos:position pos:line="3" pos:column="21"/></operator> <name pos:line="3" pos:column="22">NULL<pos:position pos:line="3" pos:column="26"/></name></expr>)<pos:position pos:line="3" pos:column="27"/></condition><then pos:line="3" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="7">free<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">ntpd_host<pos:position pos:line="4" pos:column="21"/></name></expr></argument>)<pos:position pos:line="4" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt></block></then></if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">ntpd_host<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">=<pos:position pos:line="5" pos:column="21"/></operator> <call><name pos:line="5" pos:column="22">strdup<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">value<pos:position pos:line="5" pos:column="34"/></name></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call><operator pos:line="5" pos:column="35">)<pos:position pos:line="5" pos:column="36"/></operator> <operator pos:line="5" pos:column="37">==<pos:position pos:line="5" pos:column="39"/></operator> <name pos:line="5" pos:column="40">NULL<pos:position pos:line="5" pos:column="44"/></name></expr>)<pos:position pos:line="5" pos:column="45"/></condition><then pos:line="5" pos:column="45">
      <block type="pseudo"><return pos:line="6" pos:column="7">return <expr><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal></expr>;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="7" pos:column="4"/></block></then> <elseif pos:line="7" pos:column="5">else <if pos:line="7" pos:column="10">if <condition pos:line="7" pos:column="13">(<expr><call><name pos:line="7" pos:column="14">strcasecmp<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">key<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="30">"Port"<pos:position pos:line="7" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call> <operator pos:line="7" pos:column="38">==<pos:position pos:line="7" pos:column="40"/></operator> <literal type="number" pos:line="7" pos:column="41">0<pos:position pos:line="7" pos:column="42"/></literal></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43"> <block pos:line="7" pos:column="44">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">port<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><call pos:line="8" pos:column="16">(<name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name>)<argument_list pos:line="8" pos:column="21">(<argument><expr><call><name pos:line="8" pos:column="22">atof<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">value<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">port<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&gt;<pos:position pos:line="9" pos:column="19"/></operator> <literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal><operator pos:line="9" pos:column="18">)<pos:position pos:line="9" pos:column="19"/></operator> <operator pos:line="9" pos:column="20">&amp;&amp;<pos:position pos:line="9" pos:column="30"/></operator> <operator pos:line="9" pos:column="23">(<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">port<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">&lt;=<pos:position pos:line="9" pos:column="34"/></operator> <literal type="number" pos:line="9" pos:column="32">65535<pos:position pos:line="9" pos:column="37"/></literal><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="7">snprintf<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">ntpd_port<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="27">sizeof<argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">ntpd_port<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="46">"%i"<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">port<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt></block></then>
    <else pos:line="11" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="7">sstrncpy<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">ntpd_port<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="27">value<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="34">sizeof<argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">ntpd_port<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt></block></else></if>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if></elseif> <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><call><name pos:line="13" pos:column="14">strcasecmp<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">key<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"ReverseLookups"<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call> <operator pos:line="13" pos:column="48">==<pos:position pos:line="13" pos:column="50"/></operator> <literal type="number" pos:line="13" pos:column="51">0<pos:position pos:line="13" pos:column="52"/></literal></expr>)<pos:position pos:line="13" pos:column="53"/></condition><then pos:line="13" pos:column="53"> <block pos:line="13" pos:column="54">{
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">IS_TRUE<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">value<pos:position pos:line="14" pos:column="22"/></name></expr></argument>)<pos:position pos:line="14" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="7">do_reverse_lookups<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <literal type="number" pos:line="15" pos:column="28">1<pos:position pos:line="15" pos:column="29"/></literal></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt></block></then>
    <else pos:line="16" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="7">do_reverse_lookups<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="28">0<pos:position pos:line="17" pos:column="29"/></literal></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt></block></else></if>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if></elseif> <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><call><name pos:line="18" pos:column="14">strcasecmp<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">key<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="30">"IncludeUnitID"<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call> <operator pos:line="18" pos:column="47">==<pos:position pos:line="18" pos:column="49"/></operator> <literal type="number" pos:line="18" pos:column="50">0<pos:position pos:line="18" pos:column="51"/></literal></expr>)<pos:position pos:line="18" pos:column="52"/></condition><then pos:line="18" pos:column="52"> <block pos:line="18" pos:column="53">{
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">IS_TRUE<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">value<pos:position pos:line="19" pos:column="22"/></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="7">include_unit_id<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt></block></then>
    <else pos:line="21" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="7">include_unit_id<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt></block></else></if>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if></elseif> <else pos:line="23" pos:column="5">else <block pos:line="23" pos:column="10">{
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">-<pos:position pos:line="24" pos:column="13"/></operator><literal type="number" pos:line="24" pos:column="13">1<pos:position pos:line="24" pos:column="14"/></literal></expr>;<pos:position pos:line="24" pos:column="15"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></else></if>

  <return pos:line="27" pos:column="3">return <expr><literal type="number" pos:line="27" pos:column="10">0<pos:position pos:line="27" pos:column="11"/></literal></expr>;<pos:position pos:line="27" pos:column="12"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

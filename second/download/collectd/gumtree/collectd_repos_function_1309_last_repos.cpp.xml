<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1309_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">Config_init<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">PyObject<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">s<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">PyObject<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">args<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">PyObject<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">kwds<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list> <block pos:line="1" pos:column="69">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">PyObject<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">key<pos:position pos:line="2" pos:column="16"/></name> <init pos:line="2" pos:column="17">= <expr><name pos:line="2" pos:column="19">NULL<pos:position pos:line="2" pos:column="23"/></name></expr></init></decl>, <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="26">parent<pos:position pos:line="2" pos:column="32"/></name> <init pos:line="2" pos:column="33">= <expr><name pos:line="2" pos:column="35">NULL<pos:position pos:line="2" pos:column="39"/></name></expr></init></decl>, <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="42">values<pos:position pos:line="2" pos:column="48"/></name> <init pos:line="2" pos:column="49">= <expr><name pos:line="2" pos:column="51">NULL<pos:position pos:line="2" pos:column="55"/></name></expr></init></decl>, <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="58">children<pos:position pos:line="2" pos:column="66"/></name> <init pos:line="2" pos:column="67">= <expr><name pos:line="2" pos:column="69">NULL<pos:position pos:line="2" pos:column="73"/></name></expr></init></decl>, <modifier pos:line="2" pos:column="75">*<pos:position pos:line="2" pos:column="76"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="76">tmp<pos:position pos:line="2" pos:column="79"/></name></decl>;<pos:position pos:line="2" pos:column="80"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">Config<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">self<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><operator pos:line="3" pos:column="18">(<pos:position pos:line="3" pos:column="19"/></operator><name pos:line="3" pos:column="19">Config<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></operator><operator pos:line="3" pos:column="27">)<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="28">s<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><name pos:line="4" pos:column="10">char<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name><name pos:line="4" pos:column="16">kwlist<pos:position pos:line="4" pos:column="22"/></name><index pos:line="4" pos:column="22">[]<pos:position pos:line="4" pos:column="24"/></index></name> <init pos:line="4" pos:column="25">= <expr><block pos:line="4" pos:column="27">{<expr><literal type="string" pos:line="4" pos:column="28">"key"<pos:position pos:line="4" pos:column="33"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="35">"parent"<pos:position pos:line="4" pos:column="43"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="45">"values"<pos:position pos:line="4" pos:column="53"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="55">"children"<pos:position pos:line="4" pos:column="65"/></literal></expr>, <expr><name pos:line="4" pos:column="67">NULL<pos:position pos:line="4" pos:column="71"/></name></expr>}<pos:position pos:line="4" pos:column="72"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="73"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><call><name pos:line="6" pos:column="8">PyArg_ParseTupleAndKeywords<pos:position pos:line="6" pos:column="35"/></name><argument_list pos:line="6" pos:column="35">(<argument><expr><name pos:line="6" pos:column="36">args<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="42">kwds<pos:position pos:line="6" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="48">"O|OOO"<pos:position pos:line="6" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="57">kwlist<pos:position pos:line="6" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="65">&amp;<pos:position pos:line="6" pos:column="70"/></operator><name pos:line="6" pos:column="66">key<pos:position pos:line="6" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="71">&amp;<pos:position pos:line="6" pos:column="76"/></operator><name pos:line="6" pos:column="72">parent<pos:position pos:line="6" pos:column="78"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="7" pos:column="36">&amp;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="37">values<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="45">&amp;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="46">children<pos:position pos:line="7" pos:column="54"/></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="56"/></condition><then pos:line="7" pos:column="56">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">-<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><call><name pos:line="10" pos:column="8">IS_BYTES_OR_UNICODE<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">key<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33"> <block pos:line="10" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">PyErr_SetString<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">PyExc_TypeError<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="38">"argument 1 must be str"<pos:position pos:line="11" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">Py_XDECREF<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">parent<pos:position pos:line="12" pos:column="22"/></name></expr></argument>)<pos:position pos:line="12" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">Py_XDECREF<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">values<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">Py_XDECREF<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">children<pos:position pos:line="14" pos:column="24"/></name></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">-<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">1<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">values<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">NULL<pos:position pos:line="17" pos:column="21"/></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22"> <block pos:line="17" pos:column="23">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">values<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">PyTuple_New<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">PyErr_Clear<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">()<pos:position pos:line="19" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">children<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">==<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">NULL<pos:position pos:line="21" pos:column="23"/></name></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24"> <block pos:line="21" pos:column="25">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">children<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">PyTuple_New<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">PyErr_Clear<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">()<pos:position pos:line="23" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="25" pos:column="3">tmp<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <name><name pos:line="25" pos:column="9">self<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">key<pos:position pos:line="25" pos:column="18"/></name></name></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">Py_INCREF<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><name pos:line="26" pos:column="13">key<pos:position pos:line="26" pos:column="16"/></name></expr></argument>)<pos:position pos:line="26" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">self<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">key<pos:position pos:line="27" pos:column="12"/></name></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">key<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">Py_XDECREF<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name pos:line="28" pos:column="14">tmp<pos:position pos:line="28" pos:column="17"/></name></expr></argument>)<pos:position pos:line="28" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">parent<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">!=<pos:position pos:line="29" pos:column="16"/></operator> <name pos:line="29" pos:column="17">NULL<pos:position pos:line="29" pos:column="21"/></name></expr>)<pos:position pos:line="29" pos:column="22"/></condition><then pos:line="29" pos:column="22"> <block pos:line="29" pos:column="23">{
    <expr_stmt><expr><name pos:line="30" pos:column="5">tmp<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <name><name pos:line="30" pos:column="11">self<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">parent<pos:position pos:line="30" pos:column="23"/></name></name></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">Py_INCREF<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">parent<pos:position pos:line="31" pos:column="21"/></name></expr></argument>)<pos:position pos:line="31" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">self<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">parent<pos:position pos:line="32" pos:column="17"/></name></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="20">parent<pos:position pos:line="32" pos:column="26"/></name></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">Py_XDECREF<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">tmp<pos:position pos:line="33" pos:column="19"/></name></expr></argument>)<pos:position pos:line="33" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">values<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">!=<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">NULL<pos:position pos:line="35" pos:column="21"/></name></expr>)<pos:position pos:line="35" pos:column="22"/></condition><then pos:line="35" pos:column="22"> <block pos:line="35" pos:column="23">{
    <expr_stmt><expr><name pos:line="36" pos:column="5">tmp<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <name><name pos:line="36" pos:column="11">self<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">values<pos:position pos:line="36" pos:column="23"/></name></name></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">Py_INCREF<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">values<pos:position pos:line="37" pos:column="21"/></name></expr></argument>)<pos:position pos:line="37" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">self<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">values<pos:position pos:line="38" pos:column="17"/></name></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="20">values<pos:position pos:line="38" pos:column="26"/></name></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">Py_XDECREF<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name pos:line="39" pos:column="16">tmp<pos:position pos:line="39" pos:column="19"/></name></expr></argument>)<pos:position pos:line="39" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name pos:line="41" pos:column="7">children<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">!=<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">NULL<pos:position pos:line="41" pos:column="23"/></name></expr>)<pos:position pos:line="41" pos:column="24"/></condition><then pos:line="41" pos:column="24"> <block pos:line="41" pos:column="25">{
    <expr_stmt><expr><name pos:line="42" pos:column="5">tmp<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <name><name pos:line="42" pos:column="11">self<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">-&gt;<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="17">children<pos:position pos:line="42" pos:column="25"/></name></name></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">Py_INCREF<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><name pos:line="43" pos:column="15">children<pos:position pos:line="43" pos:column="23"/></name></expr></argument>)<pos:position pos:line="43" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">self<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">children<pos:position pos:line="44" pos:column="19"/></name></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="22">children<pos:position pos:line="44" pos:column="30"/></name></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">Py_XDECREF<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">tmp<pos:position pos:line="45" pos:column="19"/></name></expr></argument>)<pos:position pos:line="45" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>
  <return pos:line="47" pos:column="3">return <expr><literal type="number" pos:line="47" pos:column="10">0<pos:position pos:line="47" pos:column="11"/></literal></expr>;<pos:position pos:line="47" pos:column="12"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

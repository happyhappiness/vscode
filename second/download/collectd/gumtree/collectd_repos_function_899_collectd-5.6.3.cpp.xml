<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_899_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">allocate_counters<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">thread_data<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">threads<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                             <parameter><decl><type><name><name pos:line="2" pos:column="30">struct<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">core_data<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier><modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">cores<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
                             <parameter><decl><type><name><name pos:line="3" pos:column="30">struct<pos:position pos:line="3" pos:column="36"/></name> <name pos:line="3" pos:column="37">pkg_data<pos:position pos:line="3" pos:column="45"/></name></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier><modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">packages<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list> <block pos:line="3" pos:column="58">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">total_threads<pos:position pos:line="4" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="31">total_cores<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name><name pos:line="6" pos:column="8">topology<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">.<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">num_threads<pos:position pos:line="6" pos:column="28"/></name></name> <operator pos:line="6" pos:column="29">==<pos:position pos:line="6" pos:column="31"/></operator> <literal type="number" pos:line="6" pos:column="32">0<pos:position pos:line="6" pos:column="33"/></literal><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator> <operator pos:line="6" pos:column="35">||<pos:position pos:line="6" pos:column="37"/></operator> <operator pos:line="6" pos:column="38">(<pos:position pos:line="6" pos:column="39"/></operator><name><name pos:line="6" pos:column="39">topology<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">.<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="48">num_cores<pos:position pos:line="6" pos:column="57"/></name></name> <operator pos:line="6" pos:column="58">==<pos:position pos:line="6" pos:column="60"/></operator> <literal type="number" pos:line="6" pos:column="61">0<pos:position pos:line="6" pos:column="62"/></literal><operator pos:line="6" pos:column="62">)<pos:position pos:line="6" pos:column="63"/></operator> <operator pos:line="6" pos:column="64">||<pos:position pos:line="6" pos:column="66"/></operator>
      <operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name><name pos:line="7" pos:column="8">topology<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">.<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">num_packages<pos:position pos:line="7" pos:column="29"/></name></name> <operator pos:line="7" pos:column="30">==<pos:position pos:line="7" pos:column="32"/></operator> <literal type="number" pos:line="7" pos:column="33">0<pos:position pos:line="7" pos:column="34"/></literal><operator pos:line="7" pos:column="34">)<pos:position pos:line="7" pos:column="35"/></operator></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36"> <block pos:line="7" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(
        <argument><expr><literal type="string" pos:line="9" pos:column="9">"turbostat plugin: Invalid topology: %u threads, %u cores, %u packages"<pos:position pos:line="9" pos:column="80"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="10" pos:column="9">topology<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">.<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">num_threads<pos:position pos:line="10" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="31">topology<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">.<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">num_cores<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="51">topology<pos:position pos:line="10" pos:column="59"/></name><operator pos:line="10" pos:column="59">.<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="60">num_packages<pos:position pos:line="10" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="74"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">total_threads<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator>
      <name><name pos:line="15" pos:column="7">topology<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">num_threads<pos:position pos:line="15" pos:column="27"/></name></name> <operator pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></operator> <name><name pos:line="15" pos:column="30">topology<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">.<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="39">num_cores<pos:position pos:line="15" pos:column="48"/></name></name> <operator pos:line="15" pos:column="49">*<pos:position pos:line="15" pos:column="50"/></operator> <name><name pos:line="15" pos:column="51">topology<pos:position pos:line="15" pos:column="59"/></name><operator pos:line="15" pos:column="59">.<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="60">num_packages<pos:position pos:line="15" pos:column="72"/></name></name></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="16" pos:column="3">*<pos:position pos:line="16" pos:column="4"/></operator><name pos:line="16" pos:column="4">threads<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">calloc<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">total_threads<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="36">sizeof<argument_list pos:line="16" pos:column="42">(<argument><expr pos:line="16" pos:column="43">struct <name pos:line="16" pos:column="50">thread_data<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">*<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">threads<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">==<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24"> <block pos:line="17" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"turbostat plugin: calloc failed"<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">-<pos:position pos:line="19" pos:column="13"/></operator><literal type="number" pos:line="19" pos:column="13">1<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <for pos:line="22" pos:column="3">for <control pos:line="22" pos:column="7">(<init><decl><type><name pos:line="22" pos:column="8">unsigned<pos:position pos:line="22" pos:column="16"/></name> <name pos:line="22" pos:column="17">int<pos:position pos:line="22" pos:column="20"/></name></type> <name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name> <init pos:line="22" pos:column="23">= <expr><literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="27"/></init> <condition><expr><name pos:line="22" pos:column="28">i<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">&lt;<pos:position pos:line="22" pos:column="34"/></operator> <name pos:line="22" pos:column="32">total_threads<pos:position pos:line="22" pos:column="45"/></name></expr>;<pos:position pos:line="22" pos:column="46"/></condition> <incr><expr><operator pos:line="22" pos:column="47">++<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="49">i<pos:position pos:line="22" pos:column="50"/></name></expr></incr>)<pos:position pos:line="22" pos:column="51"/></control>
    <block type="pseudo"><expr_stmt><expr><operator pos:line="23" pos:column="5">(<pos:position pos:line="23" pos:column="6"/></operator><operator pos:line="23" pos:column="6">*<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">threads<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">)<pos:position pos:line="23" pos:column="15"/></operator><index pos:line="23" pos:column="15">[<expr><name pos:line="23" pos:column="16">i<pos:position pos:line="23" pos:column="17"/></name></expr>]<pos:position pos:line="23" pos:column="18"/></index><operator pos:line="23" pos:column="18">.<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">cpu_id<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <name><name pos:line="23" pos:column="28">topology<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">.<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="37">max_cpu_id<pos:position pos:line="23" pos:column="47"/></name></name> <operator pos:line="23" pos:column="48">+<pos:position pos:line="23" pos:column="49"/></operator> <literal type="number" pos:line="23" pos:column="50">1<pos:position pos:line="23" pos:column="51"/></literal></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt></block></for>

  <expr_stmt><expr><name pos:line="25" pos:column="3">total_cores<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name><name pos:line="25" pos:column="17">topology<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">.<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">num_cores<pos:position pos:line="25" pos:column="35"/></name></name> <operator pos:line="25" pos:column="36">*<pos:position pos:line="25" pos:column="37"/></operator> <name><name pos:line="25" pos:column="38">topology<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">.<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="47">num_packages<pos:position pos:line="25" pos:column="59"/></name></name></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="26" pos:column="3">*<pos:position pos:line="26" pos:column="4"/></operator><name pos:line="26" pos:column="4">cores<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <call><name pos:line="26" pos:column="12">calloc<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">total_cores<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="32">sizeof<argument_list pos:line="26" pos:column="38">(<argument><expr pos:line="26" pos:column="39">struct <name pos:line="26" pos:column="46">core_data<pos:position pos:line="26" pos:column="55"/></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><operator pos:line="27" pos:column="7">*<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">cores<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">==<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">NULL<pos:position pos:line="27" pos:column="21"/></name></expr>)<pos:position pos:line="27" pos:column="22"/></condition><then pos:line="27" pos:column="22"> <block pos:line="27" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><literal type="string" pos:line="28" pos:column="11">"turbostat plugin: calloc failed"<pos:position pos:line="28" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">sfree<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">threads<pos:position pos:line="29" pos:column="18"/></name></expr></argument>)<pos:position pos:line="29" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">-<pos:position pos:line="30" pos:column="13"/></operator><literal type="number" pos:line="30" pos:column="13">1<pos:position pos:line="30" pos:column="14"/></literal></expr>;<pos:position pos:line="30" pos:column="15"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="33" pos:column="3">*<pos:position pos:line="33" pos:column="4"/></operator><name pos:line="33" pos:column="4">packages<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <call><name pos:line="33" pos:column="15">calloc<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name><name pos:line="33" pos:column="22">topology<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">.<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="31">num_packages<pos:position pos:line="33" pos:column="43"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="45">sizeof<argument_list pos:line="33" pos:column="51">(<argument><expr pos:line="33" pos:column="52">struct <name pos:line="33" pos:column="59">pkg_data<pos:position pos:line="33" pos:column="67"/></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><operator pos:line="34" pos:column="7">*<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">packages<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">==<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">NULL<pos:position pos:line="34" pos:column="24"/></name></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25"> <block pos:line="34" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">ERROR<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><literal type="string" pos:line="35" pos:column="11">"turbostat plugin: calloc failed"<pos:position pos:line="35" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">sfree<pos:position pos:line="36" pos:column="10"/></name><argument_list pos:line="36" pos:column="10">(<argument><expr><name pos:line="36" pos:column="11">cores<pos:position pos:line="36" pos:column="16"/></name></expr></argument>)<pos:position pos:line="36" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">sfree<pos:position pos:line="37" pos:column="10"/></name><argument_list pos:line="37" pos:column="10">(<argument><expr><name pos:line="37" pos:column="11">threads<pos:position pos:line="37" pos:column="18"/></name></expr></argument>)<pos:position pos:line="37" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">-<pos:position pos:line="38" pos:column="13"/></operator><literal type="number" pos:line="38" pos:column="13">1<pos:position pos:line="38" pos:column="14"/></literal></expr>;<pos:position pos:line="38" pos:column="15"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <return pos:line="41" pos:column="3">return <expr><literal type="number" pos:line="41" pos:column="10">0<pos:position pos:line="41" pos:column="11"/></literal></expr>;<pos:position pos:line="41" pos:column="12"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

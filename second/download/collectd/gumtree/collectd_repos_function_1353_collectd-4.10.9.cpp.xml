<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1353_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">sysfs_iterate<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">int<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">sk<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">dirent<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">de<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">DIR<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">nets<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">num_success<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">num_fail<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">nets<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">opendir<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><literal type="string" pos:line="10" pos:column="25">"/sys/class/net/"<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">nets<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">==<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">NULL<pos:position pos:line="11" pos:column="25"/></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
	<block pos:line="12" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">WARNING<pos:position pos:line="13" pos:column="24"/></name> <argument_list pos:line="13" pos:column="25">(<argument><expr><literal type="string" pos:line="13" pos:column="26">"madwifi plugin: opening /sys/class/net failed"<pos:position pos:line="13" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">num_success<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="23">0<pos:position pos:line="17" pos:column="24"/></literal></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">num_fail<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
	<while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">de<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <call><name pos:line="19" pos:column="22">readdir<pos:position pos:line="19" pos:column="29"/></name> <argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">nets<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call><operator pos:line="19" pos:column="36">)<pos:position pos:line="19" pos:column="37"/></operator></expr>)<pos:position pos:line="19" pos:column="38"/></condition>
	<block pos:line="20" pos:column="9">{
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">check_devname<pos:position pos:line="21" pos:column="34"/></name> <argument_list pos:line="21" pos:column="35">(<argument><expr><name><name pos:line="21" pos:column="36">de<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">d_name<pos:position pos:line="21" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call> <operator pos:line="21" pos:column="48">==<pos:position pos:line="21" pos:column="50"/></operator> <literal type="number" pos:line="21" pos:column="51">0<pos:position pos:line="21" pos:column="52"/></literal></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53">
			<block type="pseudo"><continue pos:line="22" pos:column="25">continue;<pos:position pos:line="22" pos:column="34"/></continue></block></then></if>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">ignorelist_match<pos:position pos:line="24" pos:column="37"/></name> <argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">ignorelist<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="51">de<pos:position pos:line="24" pos:column="53"/></name><operator pos:line="24" pos:column="53">-&gt;<pos:position pos:line="24" pos:column="58"/></operator><name pos:line="24" pos:column="55">d_name<pos:position pos:line="24" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call> <operator pos:line="24" pos:column="63">!=<pos:position pos:line="24" pos:column="65"/></operator> <literal type="number" pos:line="24" pos:column="66">0<pos:position pos:line="24" pos:column="67"/></literal></expr>)<pos:position pos:line="24" pos:column="68"/></condition><then pos:line="24" pos:column="68">
			<block type="pseudo"><continue pos:line="25" pos:column="25">continue;<pos:position pos:line="25" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="27" pos:column="17">status<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <call><name pos:line="27" pos:column="26">process_device<pos:position pos:line="27" pos:column="40"/></name> <argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">sk<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="46">de<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">-&gt;<pos:position pos:line="27" pos:column="53"/></operator><name pos:line="27" pos:column="50">d_name<pos:position pos:line="27" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">status<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">!=<pos:position pos:line="28" pos:column="30"/></operator> <literal type="number" pos:line="28" pos:column="31">0<pos:position pos:line="28" pos:column="32"/></literal></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33">
		<block pos:line="29" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">ERROR<pos:position pos:line="30" pos:column="30"/></name> <argument_list pos:line="30" pos:column="31">(<argument><expr><literal type="string" pos:line="30" pos:column="32">"madwifi plugin: Processing interface "<pos:position pos:line="30" pos:column="71"/></literal>
					<literal type="string" pos:line="31" pos:column="41">"%s failed."<pos:position pos:line="31" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="55">de<pos:position pos:line="31" pos:column="57"/></name><operator pos:line="31" pos:column="57">-&gt;<pos:position pos:line="31" pos:column="62"/></operator><name pos:line="31" pos:column="59">d_name<pos:position pos:line="31" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><name pos:line="32" pos:column="25">num_fail<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">++<pos:position pos:line="32" pos:column="35"/></operator></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then>
		<else pos:line="34" pos:column="17">else
		<block pos:line="35" pos:column="17">{
			<expr_stmt><expr><name pos:line="36" pos:column="25">num_success<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">++<pos:position pos:line="36" pos:column="38"/></operator></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></else></if>
	}<pos:position pos:line="38" pos:column="10"/></block></while> <comment type="block" pos:line="38" pos:column="11">/* while (readdir) */</comment>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">closedir<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><name pos:line="40" pos:column="18">nets<pos:position pos:line="40" pos:column="22"/></name></expr></argument>)<pos:position pos:line="40" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">(<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">num_success<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">==<pos:position pos:line="42" pos:column="28"/></operator> <literal type="number" pos:line="42" pos:column="29">0<pos:position pos:line="42" pos:column="30"/></literal><operator pos:line="42" pos:column="30">)<pos:position pos:line="42" pos:column="31"/></operator> <operator pos:line="42" pos:column="32">&amp;&amp;<pos:position pos:line="42" pos:column="42"/></operator> <operator pos:line="42" pos:column="35">(<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="36">num_fail<pos:position pos:line="42" pos:column="44"/></name> <operator pos:line="42" pos:column="45">!=<pos:position pos:line="42" pos:column="47"/></operator> <literal type="number" pos:line="42" pos:column="48">0<pos:position pos:line="42" pos:column="49"/></literal><operator pos:line="42" pos:column="49">)<pos:position pos:line="42" pos:column="50"/></operator></expr>)<pos:position pos:line="42" pos:column="51"/></condition><then pos:line="42" pos:column="51">
		<block type="pseudo"><return pos:line="43" pos:column="17">return <expr><operator pos:line="43" pos:column="24">(<pos:position pos:line="43" pos:column="25"/></operator><operator pos:line="43" pos:column="25">-<pos:position pos:line="43" pos:column="26"/></operator><literal type="number" pos:line="43" pos:column="26">1<pos:position pos:line="43" pos:column="27"/></literal><operator pos:line="43" pos:column="27">)<pos:position pos:line="43" pos:column="28"/></operator></expr>;<pos:position pos:line="43" pos:column="29"/></return></block></then></if>
	<return pos:line="44" pos:column="9">return <expr><operator pos:line="44" pos:column="16">(<pos:position pos:line="44" pos:column="17"/></operator><literal type="number" pos:line="44" pos:column="17">0<pos:position pos:line="44" pos:column="18"/></literal><operator pos:line="44" pos:column="18">)<pos:position pos:line="44" pos:column="19"/></operator></expr>;<pos:position pos:line="44" pos:column="20"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

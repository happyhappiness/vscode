<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1134_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_handle_wafl_data<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">hostname<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">cfg_wafl_t<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">cfg_wafl<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="55">/* {{{ */</comment>
                                <parameter><decl><type><name pos:line="3" pos:column="33">na_elem_t<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">data<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="50">cdtime_t<pos:position pos:line="3" pos:column="58"/></name></type> <name pos:line="3" pos:column="59">interval<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="68"/></parameter_list> <block pos:line="3" pos:column="69">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cfg_wafl_t<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">perf_data<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><block pos:line="4" pos:column="26">{<expr><literal type="number" pos:line="4" pos:column="27">0<pos:position pos:line="4" pos:column="28"/></literal></expr>}<pos:position pos:line="4" pos:column="29"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">plugin_inst<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">na_elem_t<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">instances<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">na_elem_iter_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">counter_iter<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="10" pos:column="3">perf_data<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">.<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">timestamp<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <call><name pos:line="10" pos:column="25">cna_child_get_cdtime<pos:position pos:line="10" pos:column="45"/></name><argument_list pos:line="10" pos:column="45">(<argument><expr><name pos:line="10" pos:column="46">data<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">instances<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">na_elem_child<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><call><name pos:line="12" pos:column="29">na_elem_child<pos:position pos:line="12" pos:column="42"/></name><argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">data<pos:position pos:line="12" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="49">"instances"<pos:position pos:line="12" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="63">"instance-data"<pos:position pos:line="12" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="80"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">instances<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">==<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">NULL<pos:position pos:line="13" pos:column="24"/></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <block pos:line="13" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"netapp plugin: cna_handle_wafl_data: "<pos:position pos:line="14" pos:column="50"/></literal>
          <literal type="string" pos:line="15" pos:column="11">"na_elem_child (\"instances\") failed "<pos:position pos:line="15" pos:column="50"/></literal>
          <literal type="string" pos:line="16" pos:column="11">"for host %s."<pos:position pos:line="16" pos:column="25"/></literal></expr></argument>,
          <argument><expr><name pos:line="17" pos:column="11">hostname<pos:position pos:line="17" pos:column="19"/></name></expr></argument>)<pos:position pos:line="17" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">-<pos:position pos:line="18" pos:column="13"/></operator><literal type="number" pos:line="18" pos:column="13">1<pos:position pos:line="18" pos:column="14"/></literal></expr>;<pos:position pos:line="18" pos:column="15"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="21" pos:column="3">plugin_inst<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">na_child_get_string<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name pos:line="21" pos:column="37">instances<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="48">"name"<pos:position pos:line="21" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">plugin_inst<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">==<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">NULL<pos:position pos:line="22" pos:column="26"/></name></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27"> <block pos:line="22" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"netapp plugin: cna_handle_wafl_data: "<pos:position pos:line="23" pos:column="50"/></literal>
          <literal type="string" pos:line="24" pos:column="11">"na_child_get_string (\"name\") failed "<pos:position pos:line="24" pos:column="51"/></literal>
          <literal type="string" pos:line="25" pos:column="11">"for host %s."<pos:position pos:line="25" pos:column="25"/></literal></expr></argument>,
          <argument><expr><name pos:line="26" pos:column="11">hostname<pos:position pos:line="26" pos:column="19"/></name></expr></argument>)<pos:position pos:line="26" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="21"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">-<pos:position pos:line="27" pos:column="13"/></operator><literal type="number" pos:line="27" pos:column="13">1<pos:position pos:line="27" pos:column="14"/></literal></expr>;<pos:position pos:line="27" pos:column="15"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* Iterate over all counters */</comment>
  <expr_stmt><expr><name pos:line="31" pos:column="3">counter_iter<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <call><name pos:line="31" pos:column="18">na_child_iterator<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><call><name pos:line="31" pos:column="36">na_elem_child<pos:position pos:line="31" pos:column="49"/></name><argument_list pos:line="31" pos:column="49">(<argument><expr><name pos:line="31" pos:column="50">instances<pos:position pos:line="31" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="61">"counters"<pos:position pos:line="31" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="74"/></expr_stmt>
  <for pos:line="32" pos:column="3">for <control pos:line="32" pos:column="7">(<init><decl><type><name pos:line="32" pos:column="8">na_elem_t<pos:position pos:line="32" pos:column="17"/></name> <modifier pos:line="32" pos:column="18">*<pos:position pos:line="32" pos:column="19"/></modifier></type><name pos:line="32" pos:column="19">counter<pos:position pos:line="32" pos:column="26"/></name> <init pos:line="32" pos:column="27">= <expr><call><name pos:line="32" pos:column="29">na_iterator_next<pos:position pos:line="32" pos:column="45"/></name><argument_list pos:line="32" pos:column="45">(<argument><expr><operator pos:line="32" pos:column="46">&amp;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="47">counter_iter<pos:position pos:line="32" pos:column="59"/></name></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="61"/></init> <condition><expr><name pos:line="32" pos:column="62">counter<pos:position pos:line="32" pos:column="69"/></name> <operator pos:line="32" pos:column="70">!=<pos:position pos:line="32" pos:column="72"/></operator> <name pos:line="32" pos:column="73">NULL<pos:position pos:line="32" pos:column="77"/></name></expr>;<pos:position pos:line="32" pos:column="78"/></condition>
       <incr><expr><name pos:line="33" pos:column="8">counter<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">na_iterator_next<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><operator pos:line="33" pos:column="35">&amp;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="36">counter_iter<pos:position pos:line="33" pos:column="48"/></name></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr></incr>)<pos:position pos:line="33" pos:column="50"/></control> <block pos:line="33" pos:column="51">{
    <decl_stmt><decl><type><specifier pos:line="34" pos:column="5">const<pos:position pos:line="34" pos:column="10"/></specifier> <name pos:line="34" pos:column="11">char<pos:position pos:line="34" pos:column="15"/></name> <modifier pos:line="34" pos:column="16">*<pos:position pos:line="34" pos:column="17"/></modifier></type><name pos:line="34" pos:column="17">name<pos:position pos:line="34" pos:column="21"/></name></decl>;<pos:position pos:line="34" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">uint64_t<pos:position pos:line="35" pos:column="13"/></name></type> <name pos:line="35" pos:column="14">value<pos:position pos:line="35" pos:column="19"/></name></decl>;<pos:position pos:line="35" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><name pos:line="37" pos:column="5">name<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <call><name pos:line="37" pos:column="12">na_child_get_string<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">counter<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="41">"name"<pos:position pos:line="37" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">name<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">==<pos:position pos:line="38" pos:column="16"/></operator> <name pos:line="38" pos:column="17">NULL<pos:position pos:line="38" pos:column="21"/></name></expr>)<pos:position pos:line="38" pos:column="22"/></condition><then pos:line="38" pos:column="22">
      <block type="pseudo"><continue pos:line="39" pos:column="7">continue;<pos:position pos:line="39" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="41" pos:column="5">value<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">=<pos:position pos:line="41" pos:column="12"/></operator> <call><name pos:line="41" pos:column="13">na_child_get_uint64<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">counter<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="42">"value"<pos:position pos:line="41" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="51">UINT64_MAX<pos:position pos:line="41" pos:column="61"/></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="63"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">value<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">==<pos:position pos:line="42" pos:column="17"/></operator> <name pos:line="42" pos:column="18">UINT64_MAX<pos:position pos:line="42" pos:column="28"/></name></expr>)<pos:position pos:line="42" pos:column="29"/></condition><then pos:line="42" pos:column="29">
      <block type="pseudo"><continue pos:line="43" pos:column="7">continue;<pos:position pos:line="43" pos:column="16"/></continue></block></then></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><call><name pos:line="45" pos:column="10">strcmp<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><name pos:line="45" pos:column="17">name<pos:position pos:line="45" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="23">"name_cache_hit"<pos:position pos:line="45" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="41"/></condition><then pos:line="45" pos:column="41"> <block pos:line="45" pos:column="42">{
      <expr_stmt><expr><name><name pos:line="46" pos:column="7">perf_data<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">.<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="17">name_cache_hit<pos:position pos:line="46" pos:column="31"/></name></name> <operator pos:line="46" pos:column="32">=<pos:position pos:line="46" pos:column="33"/></operator> <name pos:line="46" pos:column="34">value<pos:position pos:line="46" pos:column="39"/></name></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">perf_data<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">.<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="17">flags<pos:position pos:line="47" pos:column="22"/></name></name> <operator pos:line="47" pos:column="23">|=<pos:position pos:line="47" pos:column="25"/></operator> <name pos:line="47" pos:column="26">HAVE_WAFL_NAME_CACHE_HIT<pos:position pos:line="47" pos:column="50"/></name></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then> <elseif pos:line="48" pos:column="7">else <if pos:line="48" pos:column="12">if <condition pos:line="48" pos:column="15">(<expr><operator pos:line="48" pos:column="16">!<pos:position pos:line="48" pos:column="17"/></operator><call><name pos:line="48" pos:column="17">strcmp<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><name pos:line="48" pos:column="24">name<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="30">"name_cache_miss"<pos:position pos:line="48" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="49"/></condition><then pos:line="48" pos:column="49"> <block pos:line="48" pos:column="50">{
      <expr_stmt><expr><name><name pos:line="49" pos:column="7">perf_data<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">.<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="17">name_cache_miss<pos:position pos:line="49" pos:column="32"/></name></name> <operator pos:line="49" pos:column="33">=<pos:position pos:line="49" pos:column="34"/></operator> <name pos:line="49" pos:column="35">value<pos:position pos:line="49" pos:column="40"/></name></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">perf_data<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">.<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">flags<pos:position pos:line="50" pos:column="22"/></name></name> <operator pos:line="50" pos:column="23">|=<pos:position pos:line="50" pos:column="25"/></operator> <name pos:line="50" pos:column="26">HAVE_WAFL_NAME_CACHE_MISS<pos:position pos:line="50" pos:column="51"/></name></expr>;<pos:position pos:line="50" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if></elseif> <elseif pos:line="51" pos:column="7">else <if pos:line="51" pos:column="12">if <condition pos:line="51" pos:column="15">(<expr><operator pos:line="51" pos:column="16">!<pos:position pos:line="51" pos:column="17"/></operator><call><name pos:line="51" pos:column="17">strcmp<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><name pos:line="51" pos:column="24">name<pos:position pos:line="51" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="30">"find_dir_hit"<pos:position pos:line="51" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="46"/></condition><then pos:line="51" pos:column="46"> <block pos:line="51" pos:column="47">{
      <expr_stmt><expr><name><name pos:line="52" pos:column="7">perf_data<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">.<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">find_dir_hit<pos:position pos:line="52" pos:column="29"/></name></name> <operator pos:line="52" pos:column="30">=<pos:position pos:line="52" pos:column="31"/></operator> <name pos:line="52" pos:column="32">value<pos:position pos:line="52" pos:column="37"/></name></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="53" pos:column="7">perf_data<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">.<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">flags<pos:position pos:line="53" pos:column="22"/></name></name> <operator pos:line="53" pos:column="23">|=<pos:position pos:line="53" pos:column="25"/></operator> <name pos:line="53" pos:column="26">HAVE_WAFL_FIND_DIR_HIT<pos:position pos:line="53" pos:column="48"/></name></expr>;<pos:position pos:line="53" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if></elseif> <elseif pos:line="54" pos:column="7">else <if pos:line="54" pos:column="12">if <condition pos:line="54" pos:column="15">(<expr><operator pos:line="54" pos:column="16">!<pos:position pos:line="54" pos:column="17"/></operator><call><name pos:line="54" pos:column="17">strcmp<pos:position pos:line="54" pos:column="23"/></name><argument_list pos:line="54" pos:column="23">(<argument><expr><name pos:line="54" pos:column="24">name<pos:position pos:line="54" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="30">"find_dir_miss"<pos:position pos:line="54" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="47"/></condition><then pos:line="54" pos:column="47"> <block pos:line="54" pos:column="48">{
      <expr_stmt><expr><name><name pos:line="55" pos:column="7">perf_data<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">.<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="17">find_dir_miss<pos:position pos:line="55" pos:column="30"/></name></name> <operator pos:line="55" pos:column="31">=<pos:position pos:line="55" pos:column="32"/></operator> <name pos:line="55" pos:column="33">value<pos:position pos:line="55" pos:column="38"/></name></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="56" pos:column="7">perf_data<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">.<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="17">flags<pos:position pos:line="56" pos:column="22"/></name></name> <operator pos:line="56" pos:column="23">|=<pos:position pos:line="56" pos:column="25"/></operator> <name pos:line="56" pos:column="26">HAVE_WAFL_FIND_DIR_MISS<pos:position pos:line="56" pos:column="49"/></name></expr>;<pos:position pos:line="56" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if></elseif> <elseif pos:line="57" pos:column="7">else <if pos:line="57" pos:column="12">if <condition pos:line="57" pos:column="15">(<expr><operator pos:line="57" pos:column="16">!<pos:position pos:line="57" pos:column="17"/></operator><call><name pos:line="57" pos:column="17">strcmp<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><name pos:line="57" pos:column="24">name<pos:position pos:line="57" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="30">"buf_hash_hit"<pos:position pos:line="57" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="46"/></condition><then pos:line="57" pos:column="46"> <block pos:line="57" pos:column="47">{
      <expr_stmt><expr><name><name pos:line="58" pos:column="7">perf_data<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">.<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="17">buf_hash_hit<pos:position pos:line="58" pos:column="29"/></name></name> <operator pos:line="58" pos:column="30">=<pos:position pos:line="58" pos:column="31"/></operator> <name pos:line="58" pos:column="32">value<pos:position pos:line="58" pos:column="37"/></name></expr>;<pos:position pos:line="58" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="59" pos:column="7">perf_data<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">.<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="17">flags<pos:position pos:line="59" pos:column="22"/></name></name> <operator pos:line="59" pos:column="23">|=<pos:position pos:line="59" pos:column="25"/></operator> <name pos:line="59" pos:column="26">HAVE_WAFL_BUF_HASH_HIT<pos:position pos:line="59" pos:column="48"/></name></expr>;<pos:position pos:line="59" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if></elseif> <elseif pos:line="60" pos:column="7">else <if pos:line="60" pos:column="12">if <condition pos:line="60" pos:column="15">(<expr><operator pos:line="60" pos:column="16">!<pos:position pos:line="60" pos:column="17"/></operator><call><name pos:line="60" pos:column="17">strcmp<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">name<pos:position pos:line="60" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="30">"buf_hash_miss"<pos:position pos:line="60" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="47"/></condition><then pos:line="60" pos:column="47"> <block pos:line="60" pos:column="48">{
      <expr_stmt><expr><name><name pos:line="61" pos:column="7">perf_data<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">.<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="17">buf_hash_miss<pos:position pos:line="61" pos:column="30"/></name></name> <operator pos:line="61" pos:column="31">=<pos:position pos:line="61" pos:column="32"/></operator> <name pos:line="61" pos:column="33">value<pos:position pos:line="61" pos:column="38"/></name></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="62" pos:column="7">perf_data<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">.<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="17">flags<pos:position pos:line="62" pos:column="22"/></name></name> <operator pos:line="62" pos:column="23">|=<pos:position pos:line="62" pos:column="25"/></operator> <name pos:line="62" pos:column="26">HAVE_WAFL_BUF_HASH_MISS<pos:position pos:line="62" pos:column="49"/></name></expr>;<pos:position pos:line="62" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if></elseif> <elseif pos:line="63" pos:column="7">else <if pos:line="63" pos:column="12">if <condition pos:line="63" pos:column="15">(<expr><operator pos:line="63" pos:column="16">!<pos:position pos:line="63" pos:column="17"/></operator><call><name pos:line="63" pos:column="17">strcmp<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><name pos:line="63" pos:column="24">name<pos:position pos:line="63" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="30">"inode_cache_hit"<pos:position pos:line="63" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="49"/></condition><then pos:line="63" pos:column="49"> <block pos:line="63" pos:column="50">{
      <expr_stmt><expr><name><name pos:line="64" pos:column="7">perf_data<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">.<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="17">inode_cache_hit<pos:position pos:line="64" pos:column="32"/></name></name> <operator pos:line="64" pos:column="33">=<pos:position pos:line="64" pos:column="34"/></operator> <name pos:line="64" pos:column="35">value<pos:position pos:line="64" pos:column="40"/></name></expr>;<pos:position pos:line="64" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="65" pos:column="7">perf_data<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">.<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="17">flags<pos:position pos:line="65" pos:column="22"/></name></name> <operator pos:line="65" pos:column="23">|=<pos:position pos:line="65" pos:column="25"/></operator> <name pos:line="65" pos:column="26">HAVE_WAFL_INODE_CACHE_HIT<pos:position pos:line="65" pos:column="51"/></name></expr>;<pos:position pos:line="65" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if></elseif> <elseif pos:line="66" pos:column="7">else <if pos:line="66" pos:column="12">if <condition pos:line="66" pos:column="15">(<expr><operator pos:line="66" pos:column="16">!<pos:position pos:line="66" pos:column="17"/></operator><call><name pos:line="66" pos:column="17">strcmp<pos:position pos:line="66" pos:column="23"/></name><argument_list pos:line="66" pos:column="23">(<argument><expr><name pos:line="66" pos:column="24">name<pos:position pos:line="66" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="30">"inode_cache_miss"<pos:position pos:line="66" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="50"/></condition><then pos:line="66" pos:column="50"> <block pos:line="66" pos:column="51">{
      <expr_stmt><expr><name><name pos:line="67" pos:column="7">perf_data<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">.<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="17">inode_cache_miss<pos:position pos:line="67" pos:column="33"/></name></name> <operator pos:line="67" pos:column="34">=<pos:position pos:line="67" pos:column="35"/></operator> <name pos:line="67" pos:column="36">value<pos:position pos:line="67" pos:column="41"/></name></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="68" pos:column="7">perf_data<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">.<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="17">flags<pos:position pos:line="68" pos:column="22"/></name></name> <operator pos:line="68" pos:column="23">|=<pos:position pos:line="68" pos:column="25"/></operator> <name pos:line="68" pos:column="26">HAVE_WAFL_INODE_CACHE_MISS<pos:position pos:line="68" pos:column="52"/></name></expr>;<pos:position pos:line="68" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if></elseif> <else pos:line="69" pos:column="7">else <block pos:line="69" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">DEBUG<pos:position pos:line="70" pos:column="12"/></name><argument_list pos:line="70" pos:column="12">(<argument><expr><literal type="string" pos:line="70" pos:column="13">"netapp plugin: cna_handle_wafl_data: "<pos:position pos:line="70" pos:column="52"/></literal>
            <literal type="string" pos:line="71" pos:column="13">"Found unexpected child: %s "<pos:position pos:line="71" pos:column="42"/></literal>
            <literal type="string" pos:line="72" pos:column="13">"for host %s."<pos:position pos:line="72" pos:column="27"/></literal></expr></argument>,
            <argument><expr><name pos:line="73" pos:column="13">name<pos:position pos:line="73" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="19">hostname<pos:position pos:line="73" pos:column="27"/></name></expr></argument>)<pos:position pos:line="73" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></else></if>
  }<pos:position pos:line="75" pos:column="4"/></block></for>

  <return pos:line="77" pos:column="3">return <expr><call><name pos:line="77" pos:column="10">submit_wafl_data<pos:position pos:line="77" pos:column="26"/></name><argument_list pos:line="77" pos:column="26">(<argument><expr><name pos:line="77" pos:column="27">hostname<pos:position pos:line="77" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="37">plugin_inst<pos:position pos:line="77" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="50">cfg_wafl<pos:position pos:line="77" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="60">&amp;<pos:position pos:line="77" pos:column="65"/></operator><name pos:line="77" pos:column="61">perf_data<pos:position pos:line="77" pos:column="70"/></name></expr></argument>,
                          <argument><expr><name pos:line="78" pos:column="27">interval<pos:position pos:line="78" pos:column="35"/></name></expr></argument>)<pos:position pos:line="78" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="37"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

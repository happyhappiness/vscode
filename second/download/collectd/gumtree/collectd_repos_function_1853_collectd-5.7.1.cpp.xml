<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1853_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">multimeter_read_value<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">double<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">value<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">retry<pos:position pos:line="2" pos:column="12"/></name> <init pos:line="2" pos:column="13">= <expr><literal type="number" pos:line="2" pos:column="15">3<pos:position pos:line="2" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt> <comment type="block" pos:line="2" pos:column="18">/* sometimes we receive garbadge */</comment>

  <do pos:line="4" pos:column="3">do <block pos:line="4" pos:column="6">{
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">timeval<pos:position pos:line="5" pos:column="19"/></name></name></type> <name pos:line="5" pos:column="20">time_end<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">tcflush<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">fd<pos:position pos:line="7" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="17">TCIFLUSH<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">gettimeofday<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><operator pos:line="9" pos:column="22">&amp;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="23">time_end<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="33">NULL<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call> <operator pos:line="9" pos:column="39">&lt;<pos:position pos:line="9" pos:column="43"/></operator> <literal type="number" pos:line="9" pos:column="41">0<pos:position pos:line="9" pos:column="42"/></literal></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <block pos:line="9" pos:column="44">{
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">char<pos:position pos:line="10" pos:column="11"/></name></type> <name><name pos:line="10" pos:column="12">errbuf<pos:position pos:line="10" pos:column="18"/></name><index pos:line="10" pos:column="18">[<expr><literal type="number" pos:line="10" pos:column="19">1024<pos:position pos:line="10" pos:column="23"/></literal></expr>]<pos:position pos:line="10" pos:column="24"/></index></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">ERROR<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><literal type="string" pos:line="11" pos:column="13">"multimeter plugin: gettimeofday failed: %s"<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="12" pos:column="13">sstrerror<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">errno<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="30">errbuf<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="38">sizeof<argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">errbuf<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
      <return pos:line="13" pos:column="7">return <expr><operator pos:line="13" pos:column="14">(<pos:position pos:line="13" pos:column="15"/></operator><operator pos:line="13" pos:column="15">-<pos:position pos:line="13" pos:column="16"/></operator><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal><operator pos:line="13" pos:column="17">)<pos:position pos:line="13" pos:column="18"/></operator></expr>;<pos:position pos:line="13" pos:column="19"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">time_end<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">tv_sec<pos:position pos:line="15" pos:column="20"/></name></name><operator pos:line="15" pos:column="20">++<pos:position pos:line="15" pos:column="22"/></operator></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>

    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><literal type="number" pos:line="17" pos:column="12">1<pos:position pos:line="17" pos:column="13"/></literal></expr>)<pos:position pos:line="17" pos:column="14"/></condition> <block pos:line="17" pos:column="15">{
      <decl_stmt><decl><type><name pos:line="18" pos:column="7">char<pos:position pos:line="18" pos:column="11"/></name></type> <name><name pos:line="18" pos:column="12">buf<pos:position pos:line="18" pos:column="15"/></name><index pos:line="18" pos:column="15">[<expr><name pos:line="18" pos:column="16">LINE_LENGTH<pos:position pos:line="18" pos:column="27"/></name></expr>]<pos:position pos:line="18" pos:column="28"/></index></name></decl>;<pos:position pos:line="18" pos:column="29"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">char<pos:position pos:line="19" pos:column="11"/></name> <modifier pos:line="19" pos:column="12">*<pos:position pos:line="19" pos:column="13"/></modifier></type><name pos:line="19" pos:column="13">range<pos:position pos:line="19" pos:column="18"/></name></decl>;<pos:position pos:line="19" pos:column="19"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">int<pos:position pos:line="20" pos:column="10"/></name></type> <name pos:line="20" pos:column="11">status<pos:position pos:line="20" pos:column="17"/></name></decl>;<pos:position pos:line="20" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="21" pos:column="7">fd_set<pos:position pos:line="21" pos:column="13"/></name></type> <name pos:line="21" pos:column="14">rfds<pos:position pos:line="21" pos:column="18"/></name></decl>;<pos:position pos:line="21" pos:column="19"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="22" pos:column="7">struct<pos:position pos:line="22" pos:column="13"/></name> <name pos:line="22" pos:column="14">timeval<pos:position pos:line="22" pos:column="21"/></name></name></type> <name pos:line="22" pos:column="22">timeout<pos:position pos:line="22" pos:column="29"/></name></decl>;<pos:position pos:line="22" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="23" pos:column="7">struct<pos:position pos:line="23" pos:column="13"/></name> <name pos:line="23" pos:column="14">timeval<pos:position pos:line="23" pos:column="21"/></name></name></type> <name pos:line="23" pos:column="22">time_now<pos:position pos:line="23" pos:column="30"/></name></decl>;<pos:position pos:line="23" pos:column="31"/></decl_stmt>

      <expr_stmt><expr><name pos:line="25" pos:column="7">status<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">swrite<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">fd<pos:position pos:line="25" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="27">"D"<pos:position pos:line="25" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="32">1<pos:position pos:line="25" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">status<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">&lt;<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="20">0<pos:position pos:line="26" pos:column="21"/></literal></expr>)<pos:position pos:line="26" pos:column="22"/></condition><then pos:line="26" pos:column="22"> <block pos:line="26" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">ERROR<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><literal type="string" pos:line="27" pos:column="15">"multimeter plugin: swrite failed."<pos:position pos:line="27" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><operator pos:line="28" pos:column="17">-<pos:position pos:line="28" pos:column="18"/></operator><literal type="number" pos:line="28" pos:column="18">1<pos:position pos:line="28" pos:column="19"/></literal><operator pos:line="28" pos:column="19">)<pos:position pos:line="28" pos:column="20"/></operator></expr>;<pos:position pos:line="28" pos:column="21"/></return>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="31" pos:column="7">FD_ZERO<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><operator pos:line="31" pos:column="15">&amp;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="16">rfds<pos:position pos:line="31" pos:column="20"/></name></expr></argument>)<pos:position pos:line="31" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">FD_SET<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><name pos:line="32" pos:column="14">fd<pos:position pos:line="32" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="18">&amp;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="19">rfds<pos:position pos:line="32" pos:column="23"/></name></expr></argument>)<pos:position pos:line="32" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>

      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><call><name pos:line="34" pos:column="11">gettimeofday<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><operator pos:line="34" pos:column="24">&amp;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="25">time_now<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">NULL<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call> <operator pos:line="34" pos:column="41">&lt;<pos:position pos:line="34" pos:column="45"/></operator> <literal type="number" pos:line="34" pos:column="43">0<pos:position pos:line="34" pos:column="44"/></literal></expr>)<pos:position pos:line="34" pos:column="45"/></condition><then pos:line="34" pos:column="45"> <block pos:line="34" pos:column="46">{
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">char<pos:position pos:line="35" pos:column="13"/></name></type> <name><name pos:line="35" pos:column="14">errbuf<pos:position pos:line="35" pos:column="20"/></name><index pos:line="35" pos:column="20">[<expr><literal type="number" pos:line="35" pos:column="21">1024<pos:position pos:line="35" pos:column="25"/></literal></expr>]<pos:position pos:line="35" pos:column="26"/></index></name></decl>;<pos:position pos:line="35" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ERROR<pos:position pos:line="36" pos:column="14"/></name><argument_list pos:line="36" pos:column="14">(<argument><expr><literal type="string" pos:line="36" pos:column="15">"multimeter plugin: "<pos:position pos:line="36" pos:column="36"/></literal>
              <literal type="string" pos:line="37" pos:column="15">"gettimeofday failed: %s"<pos:position pos:line="37" pos:column="40"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="38" pos:column="15">sstrerror<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">errno<pos:position pos:line="38" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="32">errbuf<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="40">sizeof<argument_list pos:line="38" pos:column="46">(<argument><expr><name pos:line="38" pos:column="47">errbuf<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><operator pos:line="39" pos:column="16">(<pos:position pos:line="39" pos:column="17"/></operator><operator pos:line="39" pos:column="17">-<pos:position pos:line="39" pos:column="18"/></operator><literal type="number" pos:line="39" pos:column="18">1<pos:position pos:line="39" pos:column="19"/></literal><operator pos:line="39" pos:column="19">)<pos:position pos:line="39" pos:column="20"/></operator></expr>;<pos:position pos:line="39" pos:column="21"/></return>
      }<pos:position pos:line="40" pos:column="8"/></block></then></if>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><call><name pos:line="41" pos:column="11">timeval_cmp<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">time_end<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="33">time_now<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="43">&amp;<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="44">timeout<pos:position pos:line="41" pos:column="51"/></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call> <operator pos:line="41" pos:column="53">&lt;<pos:position pos:line="41" pos:column="57"/></operator> <literal type="number" pos:line="41" pos:column="55">0<pos:position pos:line="41" pos:column="56"/></literal></expr>)<pos:position pos:line="41" pos:column="57"/></condition><then pos:line="41" pos:column="57">
        <block type="pseudo"><break pos:line="42" pos:column="9">break;<pos:position pos:line="42" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><name pos:line="44" pos:column="7">status<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <call><name pos:line="44" pos:column="16">select<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">fd<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">+<pos:position pos:line="44" pos:column="27"/></operator> <literal type="number" pos:line="44" pos:column="28">1<pos:position pos:line="44" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="31">&amp;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="32">rfds<pos:position pos:line="44" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="38">NULL<pos:position pos:line="44" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="44">NULL<pos:position pos:line="44" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="50">&amp;<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="51">timeout<pos:position pos:line="44" pos:column="58"/></name></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>

      <if pos:line="46" pos:column="7">if <condition pos:line="46" pos:column="10">(<expr><name pos:line="46" pos:column="11">status<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">&gt;<pos:position pos:line="46" pos:column="22"/></operator> <literal type="number" pos:line="46" pos:column="20">0<pos:position pos:line="46" pos:column="21"/></literal></expr>)<pos:position pos:line="46" pos:column="22"/></condition><then pos:line="46" pos:column="22"> <comment type="block" pos:line="46" pos:column="23">/* usually we succeed */</comment>
      <block pos:line="47" pos:column="7">{
        <expr_stmt><expr><name pos:line="48" pos:column="9">status<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <call><name pos:line="48" pos:column="18">read<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">fd<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">buf<pos:position pos:line="48" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="32">LINE_LENGTH<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>

        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">status<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">&lt;<pos:position pos:line="50" pos:column="25"/></operator> <literal type="number" pos:line="50" pos:column="23">0<pos:position pos:line="50" pos:column="24"/></literal><operator pos:line="50" pos:column="24">)<pos:position pos:line="50" pos:column="25"/></operator> <operator pos:line="50" pos:column="26">&amp;&amp;<pos:position pos:line="50" pos:column="36"/></operator> <operator pos:line="50" pos:column="29">(<pos:position pos:line="50" pos:column="30"/></operator><operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">errno<pos:position pos:line="50" pos:column="36"/></name> <operator pos:line="50" pos:column="37">==<pos:position pos:line="50" pos:column="39"/></operator> <name pos:line="50" pos:column="40">EAGAIN<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">)<pos:position pos:line="50" pos:column="47"/></operator> <operator pos:line="50" pos:column="48">||<pos:position pos:line="50" pos:column="50"/></operator> <operator pos:line="50" pos:column="51">(<pos:position pos:line="50" pos:column="52"/></operator><name pos:line="50" pos:column="52">errno<pos:position pos:line="50" pos:column="57"/></name> <operator pos:line="50" pos:column="58">==<pos:position pos:line="50" pos:column="60"/></operator> <name pos:line="50" pos:column="61">EINTR<pos:position pos:line="50" pos:column="66"/></name><operator pos:line="50" pos:column="66">)<pos:position pos:line="50" pos:column="67"/></operator><operator pos:line="50" pos:column="67">)<pos:position pos:line="50" pos:column="68"/></operator></expr>)<pos:position pos:line="50" pos:column="69"/></condition><then pos:line="50" pos:column="69">
          <block type="pseudo"><continue pos:line="51" pos:column="11">continue;<pos:position pos:line="51" pos:column="20"/></continue></block></then></if>

        <comment type="block" pos:line="53" pos:column="9">/* Format: "DC 00.000mV  \r" */</comment>
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">status<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">&gt;<pos:position pos:line="54" pos:column="24"/></operator> <literal type="number" pos:line="54" pos:column="22">0<pos:position pos:line="54" pos:column="23"/></literal> <operator pos:line="54" pos:column="24">&amp;&amp;<pos:position pos:line="54" pos:column="34"/></operator> <name pos:line="54" pos:column="27">status<pos:position pos:line="54" pos:column="33"/></name> <operator pos:line="54" pos:column="34">==<pos:position pos:line="54" pos:column="36"/></operator> <name pos:line="54" pos:column="37">LINE_LENGTH<pos:position pos:line="54" pos:column="48"/></name></expr>)<pos:position pos:line="54" pos:column="49"/></condition><then pos:line="54" pos:column="49"> <block pos:line="54" pos:column="50">{
          <expr_stmt><expr><operator pos:line="55" pos:column="11">*<pos:position pos:line="55" pos:column="12"/></operator><name pos:line="55" pos:column="12">value<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <call><name pos:line="55" pos:column="20">strtod<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name pos:line="55" pos:column="27">buf<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">+<pos:position pos:line="55" pos:column="32"/></operator> <literal type="number" pos:line="55" pos:column="33">2<pos:position pos:line="55" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="55" pos:column="36">&amp;<pos:position pos:line="55" pos:column="41"/></operator><name pos:line="55" pos:column="37">range<pos:position pos:line="55" pos:column="42"/></name></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>

          <if pos:line="57" pos:column="11">if <condition pos:line="57" pos:column="14">(<expr><name pos:line="57" pos:column="15">range<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">&gt;<pos:position pos:line="57" pos:column="25"/></operator> <operator pos:line="57" pos:column="23">(<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="24">buf<pos:position pos:line="57" pos:column="27"/></name> <operator pos:line="57" pos:column="28">+<pos:position pos:line="57" pos:column="29"/></operator> <literal type="number" pos:line="57" pos:column="30">6<pos:position pos:line="57" pos:column="31"/></literal><operator pos:line="57" pos:column="31">)<pos:position pos:line="57" pos:column="32"/></operator></expr>)<pos:position pos:line="57" pos:column="33"/></condition><then pos:line="57" pos:column="33"> <block pos:line="57" pos:column="34">{
            <expr_stmt><expr><name pos:line="58" pos:column="13">range<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">=<pos:position pos:line="58" pos:column="20"/></operator> <name pos:line="58" pos:column="21">buf<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">+<pos:position pos:line="58" pos:column="26"/></operator> <literal type="number" pos:line="58" pos:column="27">9<pos:position pos:line="58" pos:column="28"/></literal></expr>;<pos:position pos:line="58" pos:column="29"/></expr_stmt>

            <switch pos:line="60" pos:column="13">switch <condition pos:line="60" pos:column="20">(<expr><operator pos:line="60" pos:column="21">*<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="22">range<pos:position pos:line="60" pos:column="27"/></name></expr>)<pos:position pos:line="60" pos:column="28"/></condition> <block pos:line="60" pos:column="29">{
            <case pos:line="61" pos:column="13">case <expr><literal type="char" pos:line="61" pos:column="18">'p'<pos:position pos:line="61" pos:column="21"/></literal></expr>:<pos:position pos:line="61" pos:column="22"/></case>
              <expr_stmt><expr><operator pos:line="62" pos:column="15">*<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="16">value<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">*=<pos:position pos:line="62" pos:column="24"/></operator> <literal type="number" pos:line="62" pos:column="25">1.0E<pos:position pos:line="62" pos:column="29"/></literal><operator pos:line="62" pos:column="29">-<pos:position pos:line="62" pos:column="30"/></operator><literal type="number" pos:line="62" pos:column="30">12<pos:position pos:line="62" pos:column="32"/></literal></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>
              <break pos:line="63" pos:column="15">break;<pos:position pos:line="63" pos:column="21"/></break>
            <case pos:line="64" pos:column="13">case <expr><literal type="char" pos:line="64" pos:column="18">'n'<pos:position pos:line="64" pos:column="21"/></literal></expr>:<pos:position pos:line="64" pos:column="22"/></case>
              <expr_stmt><expr><operator pos:line="65" pos:column="15">*<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="16">value<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">*=<pos:position pos:line="65" pos:column="24"/></operator> <literal type="number" pos:line="65" pos:column="25">1.0E<pos:position pos:line="65" pos:column="29"/></literal><operator pos:line="65" pos:column="29">-<pos:position pos:line="65" pos:column="30"/></operator><literal type="number" pos:line="65" pos:column="30">9<pos:position pos:line="65" pos:column="31"/></literal></expr>;<pos:position pos:line="65" pos:column="32"/></expr_stmt>
              <break pos:line="66" pos:column="15">break;<pos:position pos:line="66" pos:column="21"/></break>
            <case pos:line="67" pos:column="13">case <expr><literal type="char" pos:line="67" pos:column="18">'u'<pos:position pos:line="67" pos:column="21"/></literal></expr>:<pos:position pos:line="67" pos:column="22"/></case>
              <expr_stmt><expr><operator pos:line="68" pos:column="15">*<pos:position pos:line="68" pos:column="16"/></operator><name pos:line="68" pos:column="16">value<pos:position pos:line="68" pos:column="21"/></name> <operator pos:line="68" pos:column="22">*=<pos:position pos:line="68" pos:column="24"/></operator> <literal type="number" pos:line="68" pos:column="25">1.0E<pos:position pos:line="68" pos:column="29"/></literal><operator pos:line="68" pos:column="29">-<pos:position pos:line="68" pos:column="30"/></operator><literal type="number" pos:line="68" pos:column="30">6<pos:position pos:line="68" pos:column="31"/></literal></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt>
              <break pos:line="69" pos:column="15">break;<pos:position pos:line="69" pos:column="21"/></break>
            <case pos:line="70" pos:column="13">case <expr><literal type="char" pos:line="70" pos:column="18">'m'<pos:position pos:line="70" pos:column="21"/></literal></expr>:<pos:position pos:line="70" pos:column="22"/></case>
              <expr_stmt><expr><operator pos:line="71" pos:column="15">*<pos:position pos:line="71" pos:column="16"/></operator><name pos:line="71" pos:column="16">value<pos:position pos:line="71" pos:column="21"/></name> <operator pos:line="71" pos:column="22">*=<pos:position pos:line="71" pos:column="24"/></operator> <literal type="number" pos:line="71" pos:column="25">1.0E<pos:position pos:line="71" pos:column="29"/></literal><operator pos:line="71" pos:column="29">-<pos:position pos:line="71" pos:column="30"/></operator><literal type="number" pos:line="71" pos:column="30">3<pos:position pos:line="71" pos:column="31"/></literal></expr>;<pos:position pos:line="71" pos:column="32"/></expr_stmt>
              <break pos:line="72" pos:column="15">break;<pos:position pos:line="72" pos:column="21"/></break>
            <case pos:line="73" pos:column="13">case <expr><literal type="char" pos:line="73" pos:column="18">'k'<pos:position pos:line="73" pos:column="21"/></literal></expr>:<pos:position pos:line="73" pos:column="22"/></case>
              <expr_stmt><expr><operator pos:line="74" pos:column="15">*<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="16">value<pos:position pos:line="74" pos:column="21"/></name> <operator pos:line="74" pos:column="22">*=<pos:position pos:line="74" pos:column="24"/></operator> <literal type="number" pos:line="74" pos:column="25">1.0E3<pos:position pos:line="74" pos:column="30"/></literal></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>
              <break pos:line="75" pos:column="15">break;<pos:position pos:line="75" pos:column="21"/></break>
            <case pos:line="76" pos:column="13">case <expr><literal type="char" pos:line="76" pos:column="18">'M'<pos:position pos:line="76" pos:column="21"/></literal></expr>:<pos:position pos:line="76" pos:column="22"/></case>
              <expr_stmt><expr><operator pos:line="77" pos:column="15">*<pos:position pos:line="77" pos:column="16"/></operator><name pos:line="77" pos:column="16">value<pos:position pos:line="77" pos:column="21"/></name> <operator pos:line="77" pos:column="22">*=<pos:position pos:line="77" pos:column="24"/></operator> <literal type="number" pos:line="77" pos:column="25">1.0E6<pos:position pos:line="77" pos:column="30"/></literal></expr>;<pos:position pos:line="77" pos:column="31"/></expr_stmt>
              <break pos:line="78" pos:column="15">break;<pos:position pos:line="78" pos:column="21"/></break>
            <case pos:line="79" pos:column="13">case <expr><literal type="char" pos:line="79" pos:column="18">'G'<pos:position pos:line="79" pos:column="21"/></literal></expr>:<pos:position pos:line="79" pos:column="22"/></case>
              <expr_stmt><expr><operator pos:line="80" pos:column="15">*<pos:position pos:line="80" pos:column="16"/></operator><name pos:line="80" pos:column="16">value<pos:position pos:line="80" pos:column="21"/></name> <operator pos:line="80" pos:column="22">*=<pos:position pos:line="80" pos:column="24"/></operator> <literal type="number" pos:line="80" pos:column="25">1.0E9<pos:position pos:line="80" pos:column="30"/></literal></expr>;<pos:position pos:line="80" pos:column="31"/></expr_stmt>
              <break pos:line="81" pos:column="15">break;<pos:position pos:line="81" pos:column="21"/></break>
            }<pos:position pos:line="82" pos:column="14"/></block></switch>
          }<pos:position pos:line="83" pos:column="12"/></block></then> <else pos:line="83" pos:column="13">else
            <block type="pseudo"><return pos:line="84" pos:column="13">return <expr><operator pos:line="84" pos:column="20">(<pos:position pos:line="84" pos:column="21"/></operator><operator pos:line="84" pos:column="21">-<pos:position pos:line="84" pos:column="22"/></operator><literal type="number" pos:line="84" pos:column="22">1<pos:position pos:line="84" pos:column="23"/></literal><operator pos:line="84" pos:column="23">)<pos:position pos:line="84" pos:column="24"/></operator></expr>;<pos:position pos:line="84" pos:column="25"/></return></block></else></if> <comment type="block" pos:line="84" pos:column="26">/* Overflow */</comment>

          <return pos:line="86" pos:column="11">return <expr><operator pos:line="86" pos:column="18">(<pos:position pos:line="86" pos:column="19"/></operator><literal type="number" pos:line="86" pos:column="19">0<pos:position pos:line="86" pos:column="20"/></literal><operator pos:line="86" pos:column="20">)<pos:position pos:line="86" pos:column="21"/></operator></expr>;<pos:position pos:line="86" pos:column="22"/></return> <comment type="block" pos:line="86" pos:column="23">/* value received */</comment>
        }<pos:position pos:line="87" pos:column="10"/></block></then> <else pos:line="87" pos:column="11">else
          <block type="pseudo"><break pos:line="88" pos:column="11">break;<pos:position pos:line="88" pos:column="17"/></break></block></else></if>
      }<pos:position pos:line="89" pos:column="8"/></block></then> <elseif pos:line="89" pos:column="9">else <if pos:line="89" pos:column="14">if <condition pos:line="89" pos:column="17">(<expr><operator pos:line="89" pos:column="18">!<pos:position pos:line="89" pos:column="19"/></operator><name pos:line="89" pos:column="19">status<pos:position pos:line="89" pos:column="25"/></name></expr>)<pos:position pos:line="89" pos:column="26"/></condition><then pos:line="89" pos:column="26"> <comment type="block" pos:line="89" pos:column="27">/* Timeout */</comment>
      <block pos:line="90" pos:column="7">{
        <break pos:line="91" pos:column="9">break;<pos:position pos:line="91" pos:column="15"/></break>
      }<pos:position pos:line="92" pos:column="8"/></block></then></if></elseif> <elseif pos:line="92" pos:column="9">else <if pos:line="92" pos:column="14">if <condition pos:line="92" pos:column="17">(<expr><operator pos:line="92" pos:column="18">(<pos:position pos:line="92" pos:column="19"/></operator><name pos:line="92" pos:column="19">status<pos:position pos:line="92" pos:column="25"/></name> <operator pos:line="92" pos:column="26">==<pos:position pos:line="92" pos:column="28"/></operator> <operator pos:line="92" pos:column="29">-<pos:position pos:line="92" pos:column="30"/></operator><literal type="number" pos:line="92" pos:column="30">1<pos:position pos:line="92" pos:column="31"/></literal><operator pos:line="92" pos:column="31">)<pos:position pos:line="92" pos:column="32"/></operator> <operator pos:line="92" pos:column="33">&amp;&amp;<pos:position pos:line="92" pos:column="43"/></operator> <operator pos:line="92" pos:column="36">(<pos:position pos:line="92" pos:column="37"/></operator><operator pos:line="92" pos:column="37">(<pos:position pos:line="92" pos:column="38"/></operator><name pos:line="92" pos:column="38">errno<pos:position pos:line="92" pos:column="43"/></name> <operator pos:line="92" pos:column="44">==<pos:position pos:line="92" pos:column="46"/></operator> <name pos:line="92" pos:column="47">EAGAIN<pos:position pos:line="92" pos:column="53"/></name><operator pos:line="92" pos:column="53">)<pos:position pos:line="92" pos:column="54"/></operator> <operator pos:line="92" pos:column="55">||<pos:position pos:line="92" pos:column="57"/></operator> <operator pos:line="92" pos:column="58">(<pos:position pos:line="92" pos:column="59"/></operator><name pos:line="92" pos:column="59">errno<pos:position pos:line="92" pos:column="64"/></name> <operator pos:line="92" pos:column="65">==<pos:position pos:line="92" pos:column="67"/></operator> <name pos:line="92" pos:column="68">EINTR<pos:position pos:line="92" pos:column="73"/></name><operator pos:line="92" pos:column="73">)<pos:position pos:line="92" pos:column="74"/></operator><operator pos:line="92" pos:column="74">)<pos:position pos:line="92" pos:column="75"/></operator></expr>)<pos:position pos:line="92" pos:column="76"/></condition><then pos:line="92" pos:column="76"> <block pos:line="92" pos:column="77">{
        <continue pos:line="93" pos:column="9">continue;<pos:position pos:line="93" pos:column="18"/></continue>
      }<pos:position pos:line="94" pos:column="8"/></block></then></if></elseif> <else pos:line="94" pos:column="9">else <comment type="block" pos:line="94" pos:column="14">/* status == -1 */</comment>
      <block pos:line="95" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="96" pos:column="9">char<pos:position pos:line="96" pos:column="13"/></name></type> <name><name pos:line="96" pos:column="14">errbuf<pos:position pos:line="96" pos:column="20"/></name><index pos:line="96" pos:column="20">[<expr><literal type="number" pos:line="96" pos:column="21">1024<pos:position pos:line="96" pos:column="25"/></literal></expr>]<pos:position pos:line="96" pos:column="26"/></index></name></decl>;<pos:position pos:line="96" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">ERROR<pos:position pos:line="97" pos:column="14"/></name><argument_list pos:line="97" pos:column="14">(<argument><expr><literal type="string" pos:line="97" pos:column="15">"multimeter plugin: "<pos:position pos:line="97" pos:column="36"/></literal>
              <literal type="string" pos:line="98" pos:column="15">"select failed: %s"<pos:position pos:line="98" pos:column="34"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="99" pos:column="15">sstrerror<pos:position pos:line="99" pos:column="24"/></name><argument_list pos:line="99" pos:column="24">(<argument><expr><name pos:line="99" pos:column="25">errno<pos:position pos:line="99" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="32">errbuf<pos:position pos:line="99" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="40">sizeof<argument_list pos:line="99" pos:column="46">(<argument><expr><name pos:line="99" pos:column="47">errbuf<pos:position pos:line="99" pos:column="53"/></name></expr></argument>)<pos:position pos:line="99" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="99" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="99" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="57"/></expr_stmt>
        <break pos:line="100" pos:column="9">break;<pos:position pos:line="100" pos:column="15"/></break>
      }<pos:position pos:line="101" pos:column="8"/></block></else></if>
    }<pos:position pos:line="102" pos:column="6"/></block></while>
  }<pos:position pos:line="103" pos:column="4"/></block> while <condition pos:line="103" pos:column="11">(<expr><operator pos:line="103" pos:column="12">--<pos:position pos:line="103" pos:column="14"/></operator><name pos:line="103" pos:column="14">retry<pos:position pos:line="103" pos:column="19"/></name></expr>)<pos:position pos:line="103" pos:column="20"/></condition>;<pos:position pos:line="103" pos:column="21"/></do>

  <return pos:line="105" pos:column="3">return <expr><operator pos:line="105" pos:column="10">(<pos:position pos:line="105" pos:column="11"/></operator><operator pos:line="105" pos:column="11">-<pos:position pos:line="105" pos:column="12"/></operator><literal type="number" pos:line="105" pos:column="12">2<pos:position pos:line="105" pos:column="13"/></literal><operator pos:line="105" pos:column="13">)<pos:position pos:line="105" pos:column="14"/></operator></expr>;<pos:position pos:line="105" pos:column="15"/></return> <comment type="block" pos:line="105" pos:column="16">/* no value received */</comment>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

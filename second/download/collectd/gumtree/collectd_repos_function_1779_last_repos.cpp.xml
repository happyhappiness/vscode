<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1779_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">dpdk_helper_shutdown<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">dpdk_helper_ctx_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">phc<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <block pos:line="1" pos:column="51">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">phc<pos:position pos:line="2" pos:column="10"/></name> <operator pos:line="2" pos:column="11">==<pos:position pos:line="2" pos:column="13"/></operator> <name pos:line="2" pos:column="14">NULL<pos:position pos:line="2" pos:column="18"/></name></expr>)<pos:position pos:line="2" pos:column="19"/></condition><then pos:line="2" pos:column="19">
    <block type="pseudo"><return pos:line="3" pos:column="5">return;<pos:position pos:line="3" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">DPDK_HELPER_TRACE<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name><name pos:line="5" pos:column="21">phc<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">shm_name<pos:position pos:line="5" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">close<pos:position pos:line="7" pos:column="8"/></name><argument_list pos:line="7" pos:column="8">(<argument><expr><name><name pos:line="7" pos:column="9">phc<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">pipes<pos:position pos:line="7" pos:column="19"/></name><index pos:line="7" pos:column="19">[<expr><literal type="number" pos:line="7" pos:column="20">1<pos:position pos:line="7" pos:column="21"/></literal></expr>]<pos:position pos:line="7" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">phc<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">status<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">!=<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">DPDK_HELPER_NOT_INITIALIZED<pos:position pos:line="9" pos:column="49"/></name></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <block pos:line="9" pos:column="51">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">dpdk_helper_exit_command<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">phc<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">DPDK_HELPER_GRACEFUL_QUIT<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">sem_destroy<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><operator pos:line="13" pos:column="15">&amp;<pos:position pos:line="13" pos:column="20"/></operator><name><name pos:line="13" pos:column="16">phc<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">sema_cmd_start<pos:position pos:line="13" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">sem_destroy<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><operator pos:line="14" pos:column="15">&amp;<pos:position pos:line="14" pos:column="20"/></operator><name><name pos:line="14" pos:column="16">phc<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">sema_cmd_complete<pos:position pos:line="14" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">dpdk_shm_cleanup<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name><name pos:line="15" pos:column="20">phc<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">shm_name<pos:position pos:line="15" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="35">phc<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">shm_size<pos:position pos:line="15" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="50">(<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="51">void<pos:position pos:line="15" pos:column="55"/></name> <operator pos:line="15" pos:column="56">*<pos:position pos:line="15" pos:column="57"/></operator><operator pos:line="15" pos:column="57">)<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="58">phc<pos:position pos:line="15" pos:column="61"/></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

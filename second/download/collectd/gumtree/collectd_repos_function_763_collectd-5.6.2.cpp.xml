<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_763_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">redis_config_node<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">oconfig_item_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">ci<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">redis_query_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">rq<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">timeout<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">redis_node_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">rn<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><block pos:line="7" pos:column="21">{<expr><operator pos:line="7" pos:column="22">.<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">port<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="30">REDIS_DEF_PORT<pos:position pos:line="7" pos:column="44"/></name></expr>,
                     <expr><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name><name pos:line="8" pos:column="23">timeout<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">.<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">tv_usec<pos:position pos:line="8" pos:column="38"/></name></name> <operator pos:line="8" pos:column="39">=<pos:position pos:line="8" pos:column="40"/></operator> <name pos:line="8" pos:column="41">REDIS_DEF_TIMEOUT<pos:position pos:line="8" pos:column="58"/></name></expr>}<pos:position pos:line="8" pos:column="59"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">sstrncpy<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name><name pos:line="10" pos:column="12">rn<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">host<pos:position pos:line="10" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="21">REDIS_DEF_HOST<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="37">sizeof<argument_list pos:line="10" pos:column="43">(<argument><expr><name><name pos:line="10" pos:column="44">rn<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">.<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="47">host<pos:position pos:line="10" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">status<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">cf_util_get_string_buffer<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">ci<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="42">rn<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">.<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="45">name<pos:position pos:line="12" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="51">sizeof<argument_list pos:line="12" pos:column="57">(<argument><expr><name><name pos:line="12" pos:column="58">rn<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">.<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="61">name<pos:position pos:line="12" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">status<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">!=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">status<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">)<pos:position pos:line="14" pos:column="20"/></operator></expr>;<pos:position pos:line="14" pos:column="21"/></return></block></then></if>

  <for pos:line="16" pos:column="3">for <control pos:line="16" pos:column="7">(<init><decl><type><name pos:line="16" pos:column="8">int<pos:position pos:line="16" pos:column="11"/></name></type> <name pos:line="16" pos:column="12">i<pos:position pos:line="16" pos:column="13"/></name> <init pos:line="16" pos:column="14">= <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="18"/></init> <condition><expr><name pos:line="16" pos:column="19">i<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&lt;<pos:position pos:line="16" pos:column="25"/></operator> <name><name pos:line="16" pos:column="23">ci<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">children_num<pos:position pos:line="16" pos:column="39"/></name></name></expr>;<pos:position pos:line="16" pos:column="40"/></condition> <incr><expr><name pos:line="16" pos:column="41">i<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">++<pos:position pos:line="16" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="45"/></control> <block pos:line="16" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">oconfig_item_t<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">option<pos:position pos:line="17" pos:column="27"/></name> <init pos:line="17" pos:column="28">= <expr><name><name pos:line="17" pos:column="30">ci<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">children<pos:position pos:line="17" pos:column="42"/></name></name> <operator pos:line="17" pos:column="43">+<pos:position pos:line="17" pos:column="44"/></operator> <name pos:line="17" pos:column="45">i<pos:position pos:line="17" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="47"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">strcasecmp<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><literal type="string" pos:line="19" pos:column="20">"Host"<pos:position pos:line="19" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="28">option<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">key<pos:position pos:line="19" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call> <operator pos:line="19" pos:column="41">==<pos:position pos:line="19" pos:column="43"/></operator> <literal type="number" pos:line="19" pos:column="44">0<pos:position pos:line="19" pos:column="45"/></literal></expr>)<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="7">status<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">option<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="50">rn<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">.<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="53">host<pos:position pos:line="20" pos:column="57"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="59">sizeof<argument_list pos:line="20" pos:column="65">(<argument><expr><name><name pos:line="20" pos:column="66">rn<pos:position pos:line="20" pos:column="68"/></name><operator pos:line="20" pos:column="68">.<pos:position pos:line="20" pos:column="69"/></operator><name pos:line="20" pos:column="69">host<pos:position pos:line="20" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt></block></then>
    <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><call><name pos:line="21" pos:column="14">strcasecmp<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><literal type="string" pos:line="21" pos:column="25">"Port"<pos:position pos:line="21" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="33">option<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">key<pos:position pos:line="21" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call> <operator pos:line="21" pos:column="46">==<pos:position pos:line="21" pos:column="48"/></operator> <literal type="number" pos:line="21" pos:column="49">0<pos:position pos:line="21" pos:column="50"/></literal></expr>)<pos:position pos:line="21" pos:column="51"/></condition><then pos:line="21" pos:column="51"> <block pos:line="21" pos:column="52">{
      <expr_stmt><expr><name pos:line="22" pos:column="7">status<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">cf_util_get_port_number<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">option<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><name pos:line="23" pos:column="11">status<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">&gt;<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="20">0<pos:position pos:line="23" pos:column="21"/></literal></expr>)<pos:position pos:line="23" pos:column="22"/></condition><then pos:line="23" pos:column="22"> <block pos:line="23" pos:column="23">{
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">rn<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">.<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">port<pos:position pos:line="24" pos:column="16"/></name></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">status<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="26" pos:column="8"/></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if></elseif> <elseif pos:line="27" pos:column="7">else <if pos:line="27" pos:column="12">if <condition pos:line="27" pos:column="15">(<expr><call><name pos:line="27" pos:column="16">strcasecmp<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><literal type="string" pos:line="27" pos:column="27">"Query"<pos:position pos:line="27" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="36">option<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">key<pos:position pos:line="27" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call> <operator pos:line="27" pos:column="49">==<pos:position pos:line="27" pos:column="51"/></operator> <literal type="number" pos:line="27" pos:column="52">0<pos:position pos:line="27" pos:column="53"/></literal></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54"> <block pos:line="27" pos:column="55">{
      <expr_stmt><expr><name pos:line="28" pos:column="7">rq<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <call><name pos:line="28" pos:column="12">redis_config_query<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">option<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name pos:line="29" pos:column="11">rq<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">==<pos:position pos:line="29" pos:column="16"/></operator> <name pos:line="29" pos:column="17">NULL<pos:position pos:line="29" pos:column="21"/></name></expr>)<pos:position pos:line="29" pos:column="22"/></condition><then pos:line="29" pos:column="22"> <block pos:line="29" pos:column="23">{
        <expr_stmt><expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">1<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="31" pos:column="8"/></block></then> <else pos:line="31" pos:column="9">else <block pos:line="31" pos:column="14">{
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">rq<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">next<pos:position pos:line="32" pos:column="17"/></name></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <name><name pos:line="32" pos:column="20">rn<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">.<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">queries<pos:position pos:line="32" pos:column="30"/></name></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">rn<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">.<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="12">queries<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">rq<pos:position pos:line="33" pos:column="24"/></name></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="34" pos:column="8"/></block></else></if>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if></elseif> <elseif pos:line="35" pos:column="7">else <if pos:line="35" pos:column="12">if <condition pos:line="35" pos:column="15">(<expr><call><name pos:line="35" pos:column="16">strcasecmp<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">(<argument><expr><literal type="string" pos:line="35" pos:column="27">"Timeout"<pos:position pos:line="35" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="38">option<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">key<pos:position pos:line="35" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call> <operator pos:line="35" pos:column="51">==<pos:position pos:line="35" pos:column="53"/></operator> <literal type="number" pos:line="35" pos:column="54">0<pos:position pos:line="35" pos:column="55"/></literal></expr>)<pos:position pos:line="35" pos:column="56"/></condition><then pos:line="35" pos:column="56"> <block pos:line="35" pos:column="57">{
      <expr_stmt><expr><name pos:line="36" pos:column="7">status<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">cf_util_get_int<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">option<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="40">&amp;<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="41">timeout<pos:position pos:line="36" pos:column="48"/></name></expr></argument>)<pos:position pos:line="36" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="50"/></expr_stmt>
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><name pos:line="37" pos:column="11">status<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">==<pos:position pos:line="37" pos:column="20"/></operator> <literal type="number" pos:line="37" pos:column="21">0<pos:position pos:line="37" pos:column="22"/></literal></expr>)<pos:position pos:line="37" pos:column="23"/></condition><then pos:line="37" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="9">rn<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">.<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="12">timeout<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">tv_usec<pos:position pos:line="38" pos:column="27"/></name></name> <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <name pos:line="38" pos:column="30">timeout<pos:position pos:line="38" pos:column="37"/></name></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if></elseif> <elseif pos:line="39" pos:column="7">else <if pos:line="39" pos:column="12">if <condition pos:line="39" pos:column="15">(<expr><call><name pos:line="39" pos:column="16">strcasecmp<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><literal type="string" pos:line="39" pos:column="27">"Password"<pos:position pos:line="39" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="39">option<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">-&gt;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="47">key<pos:position pos:line="39" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call> <operator pos:line="39" pos:column="52">==<pos:position pos:line="39" pos:column="54"/></operator> <literal type="number" pos:line="39" pos:column="55">0<pos:position pos:line="39" pos:column="56"/></literal></expr>)<pos:position pos:line="39" pos:column="57"/></condition><then pos:line="39" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="7">status<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <call><name pos:line="40" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="40" pos:column="41"/></name><argument_list pos:line="40" pos:column="41">(<argument><expr><name pos:line="40" pos:column="42">option<pos:position pos:line="40" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="50">rn<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">.<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="53">passwd<pos:position pos:line="40" pos:column="59"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="61">sizeof<argument_list pos:line="40" pos:column="67">(<argument><expr><name><name pos:line="40" pos:column="68">rn<pos:position pos:line="40" pos:column="70"/></name><operator pos:line="40" pos:column="70">.<pos:position pos:line="40" pos:column="71"/></operator><name pos:line="40" pos:column="71">passwd<pos:position pos:line="40" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="80"/></expr_stmt></block></then></if></elseif>
    <else pos:line="41" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">WARNING<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><literal type="string" pos:line="42" pos:column="15">"redis plugin: Option `%s' not allowed inside a `Node' "<pos:position pos:line="42" pos:column="71"/></literal>
              <literal type="string" pos:line="43" pos:column="15">"block. I'll ignore this option."<pos:position pos:line="43" pos:column="48"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="44" pos:column="15">option<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">key<pos:position pos:line="44" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt></block></else></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">status<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">!=<pos:position pos:line="46" pos:column="18"/></operator> <literal type="number" pos:line="46" pos:column="19">0<pos:position pos:line="46" pos:column="20"/></literal></expr>)<pos:position pos:line="46" pos:column="21"/></condition><then pos:line="46" pos:column="21">
      <block type="pseudo"><break pos:line="47" pos:column="7">break;<pos:position pos:line="47" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="48" pos:column="4"/></block></for>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">status<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">!=<pos:position pos:line="50" pos:column="16"/></operator> <literal type="number" pos:line="50" pos:column="17">0<pos:position pos:line="50" pos:column="18"/></literal></expr>)<pos:position pos:line="50" pos:column="19"/></condition><then pos:line="50" pos:column="19">
    <block type="pseudo"><return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">status<pos:position pos:line="51" pos:column="19"/></name><operator pos:line="51" pos:column="19">)<pos:position pos:line="51" pos:column="20"/></operator></expr>;<pos:position pos:line="51" pos:column="21"/></return></block></then></if>

  <return pos:line="53" pos:column="3">return <expr><operator pos:line="53" pos:column="10">(<pos:position pos:line="53" pos:column="11"/></operator><call><name pos:line="53" pos:column="11">redis_node_add<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><operator pos:line="53" pos:column="26">&amp;<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="27">rn<pos:position pos:line="53" pos:column="29"/></name></expr></argument>)<pos:position pos:line="53" pos:column="30"/></argument_list></call><operator pos:line="53" pos:column="30">)<pos:position pos:line="53" pos:column="31"/></operator></expr>;<pos:position pos:line="53" pos:column="32"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

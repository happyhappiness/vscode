<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1663_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">node_handler_fetch_data<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">arg<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">val<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="64">const<pos:position pos:line="1" pos:column="69"/></specifier> <name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">key<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">value_t<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">uv<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">double<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">tmp_d<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">uint64_t<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">tmp_u<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">values_tmp<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">vtmp<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><operator pos:line="6" pos:column="31">(<pos:position pos:line="6" pos:column="32"/></operator>struct <name pos:line="6" pos:column="39">values_tmp<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">*<pos:position pos:line="6" pos:column="50"/></operator><operator pos:line="6" pos:column="50">)<pos:position pos:line="6" pos:column="51"/></operator> <name pos:line="6" pos:column="52">arg<pos:position pos:line="6" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">uint32_t<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">type<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">DSET_TYPE_UNFOUND<pos:position pos:line="7" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">index<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name><name pos:line="8" pos:column="17">vtmp<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">index<pos:position pos:line="8" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">ds_name<pos:position pos:line="10" pos:column="17"/></name><index pos:line="10" pos:column="17">[<expr><name pos:line="10" pos:column="18">DATA_MAX_NAME_LEN<pos:position pos:line="10" pos:column="35"/></name></expr>]<pos:position pos:line="10" pos:column="36"/></index></name></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">parse_keys<pos:position pos:line="12" pos:column="19"/></name> <argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">ds_name<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="30">sizeof <argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">ds_name<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">key<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
    <block pos:line="13" pos:column="5">{
        <return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><name pos:line="17" pos:column="8">index<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">&gt;=<pos:position pos:line="17" pos:column="19"/></operator> <name><name pos:line="17" pos:column="17">vtmp<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">d<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">ds_num<pos:position pos:line="17" pos:column="32"/></name></name></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33">
    <block pos:line="18" pos:column="5">{
        <comment type="line" pos:line="19" pos:column="9">//don't overflow bounds of array</comment>
        <expr_stmt><expr><name pos:line="20" pos:column="9">index<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <operator pos:line="20" pos:column="17">(<pos:position pos:line="20" pos:column="18"/></operator><name><name pos:line="20" pos:column="18">vtmp<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">d<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">ds_num<pos:position pos:line="20" pos:column="33"/></name></name> <operator pos:line="20" pos:column="34">-<pos:position pos:line="20" pos:column="35"/></operator> <literal type="number" pos:line="20" pos:column="36">1<pos:position pos:line="20" pos:column="37"/></literal><operator pos:line="20" pos:column="37">)<pos:position pos:line="20" pos:column="38"/></operator></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="23" pos:column="5">/**
     * counters should remain in same order we parsed schema... we maintain the
     * index variable to keep track of current point in list of counters. first
     * use index to guess point in array for retrieving type. if that doesn't
     * work, use the old way to get the counter type
     */</comment>
    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><call><name pos:line="29" pos:column="8">strcmp<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">ds_name<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="24">vtmp<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">d<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">ds_names<pos:position pos:line="29" pos:column="41"/></name><index pos:line="29" pos:column="41">[<expr><name pos:line="29" pos:column="42">index<pos:position pos:line="29" pos:column="47"/></name></expr>]<pos:position pos:line="29" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call> <operator pos:line="29" pos:column="50">==<pos:position pos:line="29" pos:column="52"/></operator> <literal type="number" pos:line="29" pos:column="53">0<pos:position pos:line="29" pos:column="54"/></literal></expr>)<pos:position pos:line="29" pos:column="55"/></condition><then pos:line="29" pos:column="55">
    <block pos:line="30" pos:column="5">{
        <comment type="line" pos:line="31" pos:column="9">//found match</comment>
        <expr_stmt><expr><name pos:line="32" pos:column="9">type<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name><name pos:line="32" pos:column="16">vtmp<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">d<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">ds_types<pos:position pos:line="32" pos:column="33"/></name><index pos:line="32" pos:column="33">[<expr><name pos:line="32" pos:column="34">index<pos:position pos:line="32" pos:column="39"/></name></expr>]<pos:position pos:line="32" pos:column="40"/></index></name></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if<condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">(<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">index<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">&gt;<pos:position pos:line="34" pos:column="24"/></operator> <literal type="number" pos:line="34" pos:column="22">0<pos:position pos:line="34" pos:column="23"/></literal><operator pos:line="34" pos:column="23">)<pos:position pos:line="34" pos:column="24"/></operator> <operator pos:line="34" pos:column="25">&amp;&amp;<pos:position pos:line="34" pos:column="35"/></operator> <operator pos:line="34" pos:column="28">(<pos:position pos:line="34" pos:column="29"/></operator><call><name pos:line="34" pos:column="29">strcmp<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">ds_name<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="45">vtmp<pos:position pos:line="34" pos:column="49"/></name><operator pos:line="34" pos:column="49">-&gt;<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="51">d<pos:position pos:line="34" pos:column="52"/></name><operator pos:line="34" pos:column="52">-&gt;<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="54">ds_names<pos:position pos:line="34" pos:column="62"/></name><index pos:line="34" pos:column="62">[<expr><name pos:line="34" pos:column="63">index<pos:position pos:line="34" pos:column="68"/></name><operator pos:line="34" pos:column="68">-<pos:position pos:line="34" pos:column="69"/></operator><literal type="number" pos:line="34" pos:column="69">1<pos:position pos:line="34" pos:column="70"/></literal></expr>]<pos:position pos:line="34" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call> <operator pos:line="34" pos:column="73">==<pos:position pos:line="34" pos:column="75"/></operator> <literal type="number" pos:line="34" pos:column="76">0<pos:position pos:line="34" pos:column="77"/></literal><operator pos:line="34" pos:column="77">)<pos:position pos:line="34" pos:column="78"/></operator></expr>)<pos:position pos:line="34" pos:column="79"/></condition><then pos:line="34" pos:column="79">
    <block pos:line="35" pos:column="5">{
        <comment type="line" pos:line="36" pos:column="9">//try previous key</comment>
        <expr_stmt><expr><name pos:line="37" pos:column="9">type<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <name><name pos:line="37" pos:column="16">vtmp<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">d<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">-&gt;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="25">ds_types<pos:position pos:line="37" pos:column="33"/></name><index pos:line="37" pos:column="33">[<expr><name pos:line="37" pos:column="34">index<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-<pos:position pos:line="37" pos:column="40"/></operator><literal type="number" pos:line="37" pos:column="40">1<pos:position pos:line="37" pos:column="41"/></literal></expr>]<pos:position pos:line="37" pos:column="42"/></index></name></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">(<expr><name pos:line="40" pos:column="8">type<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">==<pos:position pos:line="40" pos:column="15"/></operator> <name pos:line="40" pos:column="16">DSET_TYPE_UNFOUND<pos:position pos:line="40" pos:column="33"/></name></expr>)<pos:position pos:line="40" pos:column="34"/></condition><then pos:line="40" pos:column="34">
    <block pos:line="41" pos:column="5">{
        <comment type="line" pos:line="42" pos:column="9">//couldn't find right type by guessing, check the old way</comment>
        <expr_stmt><expr><name pos:line="43" pos:column="9">type<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <call><name pos:line="43" pos:column="16">backup_search_for_type<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name><name pos:line="43" pos:column="39">vtmp<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">-&gt;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="45">d<pos:position pos:line="43" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="48">ds_name<pos:position pos:line="43" pos:column="55"/></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <switch pos:line="46" pos:column="5">switch<condition pos:line="46" pos:column="11">(<expr><name pos:line="46" pos:column="12">type<pos:position pos:line="46" pos:column="16"/></name></expr>)<pos:position pos:line="46" pos:column="17"/></condition>
    <block pos:line="47" pos:column="5">{
        <case pos:line="48" pos:column="9">case <expr><name pos:line="48" pos:column="14">DSET_LATENCY<pos:position pos:line="48" pos:column="26"/></name></expr>:<pos:position pos:line="48" pos:column="27"/></case>
            <if pos:line="49" pos:column="13">if<condition pos:line="49" pos:column="15">(<expr><name><name pos:line="49" pos:column="16">vtmp<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">-&gt;<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="22">avgcount_exists<pos:position pos:line="49" pos:column="37"/></name></name> <operator pos:line="49" pos:column="38">==<pos:position pos:line="49" pos:column="40"/></operator> <operator pos:line="49" pos:column="41">-<pos:position pos:line="49" pos:column="42"/></operator><literal type="number" pos:line="49" pos:column="42">1<pos:position pos:line="49" pos:column="43"/></literal></expr>)<pos:position pos:line="49" pos:column="44"/></condition><then pos:line="49" pos:column="44">
            <block pos:line="50" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="51" pos:column="17">sscanf<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><name pos:line="51" pos:column="24">val<pos:position pos:line="51" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="29">"%"<pos:position pos:line="51" pos:column="32"/></literal> <name pos:line="51" pos:column="33">PRIu64<pos:position pos:line="51" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="41">&amp;<pos:position pos:line="51" pos:column="46"/></operator><name><name pos:line="51" pos:column="42">vtmp<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">-&gt;<pos:position pos:line="51" pos:column="51"/></operator><name pos:line="51" pos:column="48">avgcount<pos:position pos:line="51" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="52" pos:column="17">vtmp<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">-&gt;<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="23">avgcount_exists<pos:position pos:line="52" pos:column="38"/></name></name> <operator pos:line="52" pos:column="39">=<pos:position pos:line="52" pos:column="40"/></operator> <literal type="number" pos:line="52" pos:column="41">0<pos:position pos:line="52" pos:column="42"/></literal></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>
                <comment type="line" pos:line="53" pos:column="17">//return after saving avgcount - don't dispatch value</comment>
                <comment type="line" pos:line="54" pos:column="17">//until latency calculation</comment>
                <return pos:line="55" pos:column="17">return <expr><literal type="number" pos:line="55" pos:column="24">0<pos:position pos:line="55" pos:column="25"/></literal></expr>;<pos:position pos:line="55" pos:column="26"/></return>
            }<pos:position pos:line="56" pos:column="14"/></block></then>
            <else pos:line="57" pos:column="13">else
            <block pos:line="58" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="59" pos:column="17">double<pos:position pos:line="59" pos:column="23"/></name></type> <name pos:line="59" pos:column="24">sum<pos:position pos:line="59" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="59" pos:column="29">result<pos:position pos:line="59" pos:column="35"/></name></decl>;<pos:position pos:line="59" pos:column="36"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="60" pos:column="17">sscanf<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">val<pos:position pos:line="60" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="29">"%lf"<pos:position pos:line="60" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="60" pos:column="36">&amp;<pos:position pos:line="60" pos:column="41"/></operator><name pos:line="60" pos:column="37">sum<pos:position pos:line="60" pos:column="40"/></name></expr></argument>)<pos:position pos:line="60" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>

                <if pos:line="62" pos:column="17">if<condition pos:line="62" pos:column="19">(<expr><name><name pos:line="62" pos:column="20">vtmp<pos:position pos:line="62" pos:column="24"/></name><operator pos:line="62" pos:column="24">-&gt;<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="26">avgcount<pos:position pos:line="62" pos:column="34"/></name></name> <operator pos:line="62" pos:column="35">==<pos:position pos:line="62" pos:column="37"/></operator> <literal type="number" pos:line="62" pos:column="38">0<pos:position pos:line="62" pos:column="39"/></literal></expr>)<pos:position pos:line="62" pos:column="40"/></condition><then pos:line="62" pos:column="40">
                <block pos:line="63" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="64" pos:column="21">vtmp<pos:position pos:line="64" pos:column="25"/></name><operator pos:line="64" pos:column="25">-&gt;<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="27">avgcount<pos:position pos:line="64" pos:column="35"/></name></name> <operator pos:line="64" pos:column="36">=<pos:position pos:line="64" pos:column="37"/></operator> <literal type="number" pos:line="64" pos:column="38">1<pos:position pos:line="64" pos:column="39"/></literal></expr>;<pos:position pos:line="64" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="65" pos:column="18"/></block></then></if>

                <comment type="block" format="doxygen" pos:line="67" pos:column="17">/** User wants latency values as long run avg */</comment>
                <if pos:line="68" pos:column="17">if<condition pos:line="68" pos:column="19">(<expr><name pos:line="68" pos:column="20">long_run_latency_avg<pos:position pos:line="68" pos:column="40"/></name></expr>)<pos:position pos:line="68" pos:column="41"/></condition><then pos:line="68" pos:column="41">
                <block pos:line="69" pos:column="17">{
                    <expr_stmt><expr><name pos:line="70" pos:column="21">result<pos:position pos:line="70" pos:column="27"/></name> <operator pos:line="70" pos:column="28">=<pos:position pos:line="70" pos:column="29"/></operator> <operator pos:line="70" pos:column="30">(<pos:position pos:line="70" pos:column="31"/></operator><name pos:line="70" pos:column="31">sum<pos:position pos:line="70" pos:column="34"/></name> <operator pos:line="70" pos:column="35">/<pos:position pos:line="70" pos:column="36"/></operator> <name><name pos:line="70" pos:column="37">vtmp<pos:position pos:line="70" pos:column="41"/></name><operator pos:line="70" pos:column="41">-&gt;<pos:position pos:line="70" pos:column="46"/></operator><name pos:line="70" pos:column="43">avgcount<pos:position pos:line="70" pos:column="51"/></name></name><operator pos:line="70" pos:column="51">)<pos:position pos:line="70" pos:column="52"/></operator></expr>;<pos:position pos:line="70" pos:column="53"/></expr_stmt>
                }<pos:position pos:line="71" pos:column="18"/></block></then>
                <else pos:line="72" pos:column="17">else
                <block pos:line="73" pos:column="17">{
                    <expr_stmt><expr><name pos:line="74" pos:column="21">result<pos:position pos:line="74" pos:column="27"/></name> <operator pos:line="74" pos:column="28">=<pos:position pos:line="74" pos:column="29"/></operator> <call><name pos:line="74" pos:column="30">get_last_avg<pos:position pos:line="74" pos:column="42"/></name><argument_list pos:line="74" pos:column="42">(<argument><expr><name><name pos:line="74" pos:column="43">vtmp<pos:position pos:line="74" pos:column="47"/></name><operator pos:line="74" pos:column="47">-&gt;<pos:position pos:line="74" pos:column="52"/></operator><name pos:line="74" pos:column="49">d<pos:position pos:line="74" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="52">ds_name<pos:position pos:line="74" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="61">vtmp<pos:position pos:line="74" pos:column="65"/></name><operator pos:line="74" pos:column="65">-&gt;<pos:position pos:line="74" pos:column="70"/></operator><name pos:line="74" pos:column="67">latency_index<pos:position pos:line="74" pos:column="80"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="82">sum<pos:position pos:line="74" pos:column="85"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="87">vtmp<pos:position pos:line="74" pos:column="91"/></name><operator pos:line="74" pos:column="91">-&gt;<pos:position pos:line="74" pos:column="96"/></operator><name pos:line="74" pos:column="93">avgcount<pos:position pos:line="74" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="103"/></expr_stmt>
                    <if pos:line="75" pos:column="21">if<condition pos:line="75" pos:column="23">(<expr><name pos:line="75" pos:column="24">result<pos:position pos:line="75" pos:column="30"/></name> <operator pos:line="75" pos:column="31">==<pos:position pos:line="75" pos:column="33"/></operator> <operator pos:line="75" pos:column="34">-<pos:position pos:line="75" pos:column="35"/></operator><name pos:line="75" pos:column="35">ENOMEM<pos:position pos:line="75" pos:column="41"/></name></expr>)<pos:position pos:line="75" pos:column="42"/></condition><then pos:line="75" pos:column="42">
                    <block pos:line="76" pos:column="21">{
                        <return pos:line="77" pos:column="25">return <expr><operator pos:line="77" pos:column="32">-<pos:position pos:line="77" pos:column="33"/></operator><name pos:line="77" pos:column="33">ENOMEM<pos:position pos:line="77" pos:column="39"/></name></expr>;<pos:position pos:line="77" pos:column="40"/></return>
                    }<pos:position pos:line="78" pos:column="22"/></block></then></if>
                }<pos:position pos:line="79" pos:column="18"/></block></else></if>

                <expr_stmt><expr><name><name pos:line="81" pos:column="17">uv<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">.<pos:position pos:line="81" pos:column="20"/></operator><name pos:line="81" pos:column="20">gauge<pos:position pos:line="81" pos:column="25"/></name></name> <operator pos:line="81" pos:column="26">=<pos:position pos:line="81" pos:column="27"/></operator> <name pos:line="81" pos:column="28">result<pos:position pos:line="81" pos:column="34"/></name></expr>;<pos:position pos:line="81" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="82" pos:column="17">vtmp<pos:position pos:line="82" pos:column="21"/></name><operator pos:line="82" pos:column="21">-&gt;<pos:position pos:line="82" pos:column="26"/></operator><name pos:line="82" pos:column="23">avgcount_exists<pos:position pos:line="82" pos:column="38"/></name></name> <operator pos:line="82" pos:column="39">=<pos:position pos:line="82" pos:column="40"/></operator> <operator pos:line="82" pos:column="41">-<pos:position pos:line="82" pos:column="42"/></operator><literal type="number" pos:line="82" pos:column="42">1<pos:position pos:line="82" pos:column="43"/></literal></expr>;<pos:position pos:line="82" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="83" pos:column="17">vtmp<pos:position pos:line="83" pos:column="21"/></name><operator pos:line="83" pos:column="21">-&gt;<pos:position pos:line="83" pos:column="26"/></operator><name pos:line="83" pos:column="23">latency_index<pos:position pos:line="83" pos:column="36"/></name></name> <operator pos:line="83" pos:column="37">=<pos:position pos:line="83" pos:column="38"/></operator> <operator pos:line="83" pos:column="39">(<pos:position pos:line="83" pos:column="40"/></operator><name><name pos:line="83" pos:column="40">vtmp<pos:position pos:line="83" pos:column="44"/></name><operator pos:line="83" pos:column="44">-&gt;<pos:position pos:line="83" pos:column="49"/></operator><name pos:line="83" pos:column="46">latency_index<pos:position pos:line="83" pos:column="59"/></name></name> <operator pos:line="83" pos:column="60">+<pos:position pos:line="83" pos:column="61"/></operator> <literal type="number" pos:line="83" pos:column="62">1<pos:position pos:line="83" pos:column="63"/></literal><operator pos:line="83" pos:column="63">)<pos:position pos:line="83" pos:column="64"/></operator></expr>;<pos:position pos:line="83" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="84" pos:column="14"/></block></else></if>
            <break pos:line="85" pos:column="13">break;<pos:position pos:line="85" pos:column="19"/></break>
        <case pos:line="86" pos:column="9">case <expr><name pos:line="86" pos:column="14">DSET_BYTES<pos:position pos:line="86" pos:column="24"/></name></expr>:<pos:position pos:line="86" pos:column="25"/></case>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">sscanf<pos:position pos:line="87" pos:column="19"/></name><argument_list pos:line="87" pos:column="19">(<argument><expr><name pos:line="87" pos:column="20">val<pos:position pos:line="87" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="25">"%lf"<pos:position pos:line="87" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="87" pos:column="32">&amp;<pos:position pos:line="87" pos:column="37"/></operator><name pos:line="87" pos:column="33">tmp_d<pos:position pos:line="87" pos:column="38"/></name></expr></argument>)<pos:position pos:line="87" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="88" pos:column="13">uv<pos:position pos:line="88" pos:column="15"/></name><operator pos:line="88" pos:column="15">.<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="16">gauge<pos:position pos:line="88" pos:column="21"/></name></name> <operator pos:line="88" pos:column="22">=<pos:position pos:line="88" pos:column="23"/></operator> <name pos:line="88" pos:column="24">tmp_d<pos:position pos:line="88" pos:column="29"/></name></expr>;<pos:position pos:line="88" pos:column="30"/></expr_stmt>
            <break pos:line="89" pos:column="13">break;<pos:position pos:line="89" pos:column="19"/></break>
        <case pos:line="90" pos:column="9">case <expr><name pos:line="90" pos:column="14">DSET_RATE<pos:position pos:line="90" pos:column="23"/></name></expr>:<pos:position pos:line="90" pos:column="24"/></case>
            <expr_stmt><expr><call><name pos:line="91" pos:column="13">sscanf<pos:position pos:line="91" pos:column="19"/></name><argument_list pos:line="91" pos:column="19">(<argument><expr><name pos:line="91" pos:column="20">val<pos:position pos:line="91" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="25">"%"<pos:position pos:line="91" pos:column="28"/></literal> <name pos:line="91" pos:column="29">PRIu64<pos:position pos:line="91" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="37">&amp;<pos:position pos:line="91" pos:column="42"/></operator><name pos:line="91" pos:column="38">tmp_u<pos:position pos:line="91" pos:column="43"/></name></expr></argument>)<pos:position pos:line="91" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="92" pos:column="13">uv<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">.<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="16">derive<pos:position pos:line="92" pos:column="22"/></name></name> <operator pos:line="92" pos:column="23">=<pos:position pos:line="92" pos:column="24"/></operator> <name pos:line="92" pos:column="25">tmp_u<pos:position pos:line="92" pos:column="30"/></name></expr>;<pos:position pos:line="92" pos:column="31"/></expr_stmt>
            <break pos:line="93" pos:column="13">break;<pos:position pos:line="93" pos:column="19"/></break>
        <case pos:line="94" pos:column="9">case <expr><name pos:line="94" pos:column="14">DSET_TYPE_UNFOUND<pos:position pos:line="94" pos:column="31"/></name></expr>:<pos:position pos:line="94" pos:column="32"/></case>
        <default pos:line="95" pos:column="9">default:<pos:position pos:line="95" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="96" pos:column="13">ERROR<pos:position pos:line="96" pos:column="18"/></name><argument_list pos:line="96" pos:column="18">(<argument><expr><literal type="string" pos:line="96" pos:column="19">"ceph plugin: ds %s was not properly initialized."<pos:position pos:line="96" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="71">ds_name<pos:position pos:line="96" pos:column="78"/></name></expr></argument>)<pos:position pos:line="96" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="80"/></expr_stmt>
            <return pos:line="97" pos:column="13">return <expr><operator pos:line="97" pos:column="20">-<pos:position pos:line="97" pos:column="21"/></operator><literal type="number" pos:line="97" pos:column="21">1<pos:position pos:line="97" pos:column="22"/></literal></expr>;<pos:position pos:line="97" pos:column="23"/></return>
    }<pos:position pos:line="98" pos:column="6"/></block></switch>

    <expr_stmt><expr><call><name pos:line="100" pos:column="5">sstrncpy<pos:position pos:line="100" pos:column="13"/></name><argument_list pos:line="100" pos:column="13">(<argument><expr><name><name pos:line="100" pos:column="14">vtmp<pos:position pos:line="100" pos:column="18"/></name><operator pos:line="100" pos:column="18">-&gt;<pos:position pos:line="100" pos:column="23"/></operator><name pos:line="100" pos:column="20">vlist<pos:position pos:line="100" pos:column="25"/></name><operator pos:line="100" pos:column="25">.<pos:position pos:line="100" pos:column="26"/></operator><name pos:line="100" pos:column="26">type<pos:position pos:line="100" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="32">ceph_dset_types<pos:position pos:line="100" pos:column="47"/></name><index pos:line="100" pos:column="47">[<expr><name pos:line="100" pos:column="48">type<pos:position pos:line="100" pos:column="52"/></name></expr>]<pos:position pos:line="100" pos:column="53"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="100" pos:column="55">sizeof<argument_list pos:line="100" pos:column="61">(<argument><expr><name><name pos:line="100" pos:column="62">vtmp<pos:position pos:line="100" pos:column="66"/></name><operator pos:line="100" pos:column="66">-&gt;<pos:position pos:line="100" pos:column="71"/></operator><name pos:line="100" pos:column="68">vlist<pos:position pos:line="100" pos:column="73"/></name><operator pos:line="100" pos:column="73">.<pos:position pos:line="100" pos:column="74"/></operator><name pos:line="100" pos:column="74">type<pos:position pos:line="100" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="100" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">sstrncpy<pos:position pos:line="101" pos:column="13"/></name><argument_list pos:line="101" pos:column="13">(<argument><expr><name><name pos:line="101" pos:column="14">vtmp<pos:position pos:line="101" pos:column="18"/></name><operator pos:line="101" pos:column="18">-&gt;<pos:position pos:line="101" pos:column="23"/></operator><name pos:line="101" pos:column="20">vlist<pos:position pos:line="101" pos:column="25"/></name><operator pos:line="101" pos:column="25">.<pos:position pos:line="101" pos:column="26"/></operator><name pos:line="101" pos:column="26">type_instance<pos:position pos:line="101" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="41">ds_name<pos:position pos:line="101" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="101" pos:column="50">sizeof<argument_list pos:line="101" pos:column="56">(<argument><expr><name><name pos:line="101" pos:column="57">vtmp<pos:position pos:line="101" pos:column="61"/></name><operator pos:line="101" pos:column="61">-&gt;<pos:position pos:line="101" pos:column="66"/></operator><name pos:line="101" pos:column="63">vlist<pos:position pos:line="101" pos:column="68"/></name><operator pos:line="101" pos:column="68">.<pos:position pos:line="101" pos:column="69"/></operator><name pos:line="101" pos:column="69">type_instance<pos:position pos:line="101" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="83"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="101" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="85"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="102" pos:column="5">vtmp<pos:position pos:line="102" pos:column="9"/></name><operator pos:line="102" pos:column="9">-&gt;<pos:position pos:line="102" pos:column="14"/></operator><name pos:line="102" pos:column="11">vlist<pos:position pos:line="102" pos:column="16"/></name><operator pos:line="102" pos:column="16">.<pos:position pos:line="102" pos:column="17"/></operator><name pos:line="102" pos:column="17">values<pos:position pos:line="102" pos:column="23"/></name></name> <operator pos:line="102" pos:column="24">=<pos:position pos:line="102" pos:column="25"/></operator> <operator pos:line="102" pos:column="26">&amp;<pos:position pos:line="102" pos:column="31"/></operator><name pos:line="102" pos:column="27">uv<pos:position pos:line="102" pos:column="29"/></name></expr>;<pos:position pos:line="102" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="103" pos:column="5">vtmp<pos:position pos:line="103" pos:column="9"/></name><operator pos:line="103" pos:column="9">-&gt;<pos:position pos:line="103" pos:column="14"/></operator><name pos:line="103" pos:column="11">vlist<pos:position pos:line="103" pos:column="16"/></name><operator pos:line="103" pos:column="16">.<pos:position pos:line="103" pos:column="17"/></operator><name pos:line="103" pos:column="17">values_len<pos:position pos:line="103" pos:column="27"/></name></name> <operator pos:line="103" pos:column="28">=<pos:position pos:line="103" pos:column="29"/></operator> <literal type="number" pos:line="103" pos:column="30">1<pos:position pos:line="103" pos:column="31"/></literal></expr>;<pos:position pos:line="103" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="105" pos:column="5">vtmp<pos:position pos:line="105" pos:column="9"/></name><operator pos:line="105" pos:column="9">-&gt;<pos:position pos:line="105" pos:column="14"/></operator><name pos:line="105" pos:column="11">index<pos:position pos:line="105" pos:column="16"/></name></name> <operator pos:line="105" pos:column="17">=<pos:position pos:line="105" pos:column="18"/></operator> <operator pos:line="105" pos:column="19">(<pos:position pos:line="105" pos:column="20"/></operator><name><name pos:line="105" pos:column="20">vtmp<pos:position pos:line="105" pos:column="24"/></name><operator pos:line="105" pos:column="24">-&gt;<pos:position pos:line="105" pos:column="29"/></operator><name pos:line="105" pos:column="26">index<pos:position pos:line="105" pos:column="31"/></name></name> <operator pos:line="105" pos:column="32">+<pos:position pos:line="105" pos:column="33"/></operator> <literal type="number" pos:line="105" pos:column="34">1<pos:position pos:line="105" pos:column="35"/></literal><operator pos:line="105" pos:column="35">)<pos:position pos:line="105" pos:column="36"/></operator></expr>;<pos:position pos:line="105" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="106" pos:column="5">plugin_dispatch_values<pos:position pos:line="106" pos:column="27"/></name><argument_list pos:line="106" pos:column="27">(<argument><expr><operator pos:line="106" pos:column="28">&amp;<pos:position pos:line="106" pos:column="33"/></operator><name><name pos:line="106" pos:column="29">vtmp<pos:position pos:line="106" pos:column="33"/></name><operator pos:line="106" pos:column="33">-&gt;<pos:position pos:line="106" pos:column="38"/></operator><name pos:line="106" pos:column="35">vlist<pos:position pos:line="106" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="42"/></expr_stmt>

    <return pos:line="108" pos:column="5">return <expr><literal type="number" pos:line="108" pos:column="12">0<pos:position pos:line="108" pos:column="13"/></literal></expr>;<pos:position pos:line="108" pos:column="14"/></return>
}<pos:position pos:line="109" pos:column="2"/></block></function></unit>

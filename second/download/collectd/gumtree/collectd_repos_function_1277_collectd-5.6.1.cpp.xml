<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1277_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">grpc<pos:position pos:line="1" pos:column="12"/></name><operator pos:line="1" pos:column="12">::<pos:position pos:line="1" pos:column="14"/></operator><name pos:line="1" pos:column="14">Status<pos:position pos:line="1" pos:column="20"/></name></name></type> <name pos:line="1" pos:column="21">unmarshal_value_list<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name><name pos:line="1" pos:column="48">collectd<pos:position pos:line="1" pos:column="56"/></name><operator pos:line="1" pos:column="56">::<pos:position pos:line="1" pos:column="58"/></operator><name pos:line="1" pos:column="58">types<pos:position pos:line="1" pos:column="63"/></name><operator pos:line="1" pos:column="63">::<pos:position pos:line="1" pos:column="65"/></operator><name pos:line="1" pos:column="65">ValueList<pos:position pos:line="1" pos:column="74"/></name></name> <modifier pos:line="1" pos:column="75">&amp;<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="76">msg<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="81">value_list_t<pos:position pos:line="1" pos:column="93"/></name> <modifier pos:line="1" pos:column="94">*<pos:position pos:line="1" pos:column="95"/></modifier></type><name pos:line="1" pos:column="95">vl<pos:position pos:line="1" pos:column="97"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="98"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name><name pos:line="3" pos:column="9">vl<pos:position pos:line="3" pos:column="11"/></name><operator pos:line="3" pos:column="11">-&gt;<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="13">time<pos:position pos:line="3" pos:column="17"/></name></name> <operator pos:line="3" pos:column="18">=<pos:position pos:line="3" pos:column="19"/></operator> <call><name pos:line="3" pos:column="20">NS_TO_CDTIME_T<pos:position pos:line="3" pos:column="34"/></name><argument_list pos:line="3" pos:column="34">(<argument><expr><call><name><name pos:line="3" pos:column="35">TimeUtil<pos:position pos:line="3" pos:column="43"/></name><operator pos:line="3" pos:column="43">::<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="45">TimestampToNanoseconds<pos:position pos:line="3" pos:column="67"/></name></name><argument_list pos:line="3" pos:column="67">(<argument><expr><call><name><name pos:line="3" pos:column="68">msg<pos:position pos:line="3" pos:column="71"/></name><operator pos:line="3" pos:column="71">.<pos:position pos:line="3" pos:column="72"/></operator><name pos:line="3" pos:column="72">time<pos:position pos:line="3" pos:column="76"/></name></name><argument_list pos:line="3" pos:column="76">()<pos:position pos:line="3" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="4" pos:column="9">vl<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">-&gt;<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="13">interval<pos:position pos:line="4" pos:column="21"/></name></name> <operator pos:line="4" pos:column="22">=<pos:position pos:line="4" pos:column="23"/></operator> <call><name pos:line="4" pos:column="24">NS_TO_CDTIME_T<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><call><name><name pos:line="4" pos:column="39">TimeUtil<pos:position pos:line="4" pos:column="47"/></name><operator pos:line="4" pos:column="47">::<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="49">DurationToNanoseconds<pos:position pos:line="4" pos:column="70"/></name></name><argument_list pos:line="4" pos:column="70">(<argument><expr><call><name><name pos:line="4" pos:column="71">msg<pos:position pos:line="4" pos:column="74"/></name><operator pos:line="4" pos:column="74">.<pos:position pos:line="4" pos:column="75"/></operator><name pos:line="4" pos:column="75">interval<pos:position pos:line="4" pos:column="83"/></name></name><argument_list pos:line="4" pos:column="83">()<pos:position pos:line="4" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="88"/></expr_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">auto<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">status<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><call><name pos:line="6" pos:column="23">unmarshal_ident<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><call><name><name pos:line="6" pos:column="39">msg<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">.<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">identifier<pos:position pos:line="6" pos:column="53"/></name></name><argument_list pos:line="6" pos:column="53">()<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="57">vl<pos:position pos:line="6" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="6" pos:column="61">true<pos:position pos:line="6" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="67"/></decl_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name><name pos:line="7" pos:column="14">status<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">.<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">ok<pos:position pos:line="7" pos:column="23"/></name></name><argument_list pos:line="7" pos:column="23">()<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><name pos:line="8" pos:column="24">status<pos:position pos:line="8" pos:column="30"/></name></expr>;<pos:position pos:line="8" pos:column="31"/></return></block></then></if>

	<decl_stmt><decl><type><name pos:line="10" pos:column="9">value_t<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">values<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><name pos:line="10" pos:column="27">NULL<pos:position pos:line="10" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">size_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">values_len<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><literal type="number" pos:line="11" pos:column="29">0<pos:position pos:line="11" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">status<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <name><name pos:line="13" pos:column="18">grpc<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">::<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">Status<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">::<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">OK<pos:position pos:line="13" pos:column="34"/></name></name></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><decl><type><name pos:line="14" pos:column="14">auto<pos:position pos:line="14" pos:column="18"/></name></type> <name pos:line="14" pos:column="19">v<pos:position pos:line="14" pos:column="20"/></name> <range pos:line="14" pos:column="21">: <expr><call><name><name pos:line="14" pos:column="23">msg<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">.<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">values<pos:position pos:line="14" pos:column="33"/></name></name><argument_list pos:line="14" pos:column="33">()<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr></range></decl></init>)<pos:position pos:line="14" pos:column="36"/></control> <block pos:line="14" pos:column="37">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">value_t<pos:position pos:line="15" pos:column="24"/></name> <modifier pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></modifier></type><name pos:line="15" pos:column="26">val<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">= <expr><operator pos:line="15" pos:column="32">(<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">value_t<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">*<pos:position pos:line="15" pos:column="42"/></operator><operator pos:line="15" pos:column="42">)<pos:position pos:line="15" pos:column="43"/></operator><call><name pos:line="15" pos:column="43">realloc<pos:position pos:line="15" pos:column="50"/></name><argument_list pos:line="15" pos:column="50">(<argument><expr><name pos:line="15" pos:column="51">values<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="59">(<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="60">values_len<pos:position pos:line="15" pos:column="70"/></name> <operator pos:line="15" pos:column="71">+<pos:position pos:line="15" pos:column="72"/></operator> <literal type="number" pos:line="15" pos:column="73">1<pos:position pos:line="15" pos:column="74"/></literal><operator pos:line="15" pos:column="74">)<pos:position pos:line="15" pos:column="75"/></operator> <operator pos:line="15" pos:column="76">*<pos:position pos:line="15" pos:column="77"/></operator> <sizeof pos:line="15" pos:column="78">sizeof<argument_list pos:line="15" pos:column="84">(<argument><expr><operator pos:line="15" pos:column="85">*<pos:position pos:line="15" pos:column="86"/></operator><name pos:line="15" pos:column="86">values<pos:position pos:line="15" pos:column="92"/></name></expr></argument>)<pos:position pos:line="15" pos:column="93"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="94"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="95"/></decl_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">val<pos:position pos:line="16" pos:column="25"/></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <block pos:line="16" pos:column="27">{
			<expr_stmt><expr><name pos:line="17" pos:column="25">status<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <call><name><name pos:line="17" pos:column="34">grpc<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">::<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="40">Status<pos:position pos:line="17" pos:column="46"/></name></name><argument_list pos:line="17" pos:column="46">(<argument><expr><name><name pos:line="17" pos:column="47">grpc<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">::<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="53">StatusCode<pos:position pos:line="17" pos:column="63"/></name><operator pos:line="17" pos:column="63">::<pos:position pos:line="17" pos:column="65"/></operator><name pos:line="17" pos:column="65">RESOURCE_EXHAUSTED<pos:position pos:line="17" pos:column="83"/></name></name></expr></argument>,
					<argument><expr><call><name><name pos:line="18" pos:column="41">grpc<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">::<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">string<pos:position pos:line="18" pos:column="53"/></name></name><argument_list pos:line="18" pos:column="53">(<argument><expr><literal type="string" pos:line="18" pos:column="54">"failed to allocate values array"<pos:position pos:line="18" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="90"/></expr_stmt>
			<break pos:line="19" pos:column="25">break;<pos:position pos:line="19" pos:column="31"/></break>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="22" pos:column="17">values<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">val<pos:position pos:line="22" pos:column="29"/></name></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">val<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">values<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">+<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">values_len<pos:position pos:line="23" pos:column="42"/></name></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="24" pos:column="17">values_len<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">++<pos:position pos:line="24" pos:column="29"/></operator></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>

		<switch pos:line="26" pos:column="17">switch <condition pos:line="26" pos:column="24">(<expr><call><name><name pos:line="26" pos:column="25">v<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">.<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">value_case<pos:position pos:line="26" pos:column="37"/></name></name><argument_list pos:line="26" pos:column="37">()<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="40"/></condition> <block pos:line="26" pos:column="41">{
		<case pos:line="27" pos:column="17">case <expr><name><name pos:line="27" pos:column="22">collectd<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">::<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">types<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">::<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="39">Value<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">::<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">ValueCase<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">::<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="57">kCounter<pos:position pos:line="27" pos:column="65"/></name></name></expr>:<pos:position pos:line="27" pos:column="66"/></case>
			<expr_stmt><expr><name><name pos:line="28" pos:column="25">val<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">counter<pos:position pos:line="28" pos:column="37"/></name></name> <operator pos:line="28" pos:column="38">=<pos:position pos:line="28" pos:column="39"/></operator> <call><name pos:line="28" pos:column="40">counter_t<pos:position pos:line="28" pos:column="49"/></name><argument_list pos:line="28" pos:column="49">(<argument><expr><call><name><name pos:line="28" pos:column="50">v<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">.<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="52">counter<pos:position pos:line="28" pos:column="59"/></name></name><argument_list pos:line="28" pos:column="59">()<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="63"/></expr_stmt>
			<break pos:line="29" pos:column="25">break;<pos:position pos:line="29" pos:column="31"/></break>
		<case pos:line="30" pos:column="17">case <expr><name><name pos:line="30" pos:column="22">collectd<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">::<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">types<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">::<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">Value<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">::<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="46">ValueCase<pos:position pos:line="30" pos:column="55"/></name><operator pos:line="30" pos:column="55">::<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="57">kGauge<pos:position pos:line="30" pos:column="63"/></name></name></expr>:<pos:position pos:line="30" pos:column="64"/></case>
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">val<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">gauge<pos:position pos:line="31" pos:column="35"/></name></name> <operator pos:line="31" pos:column="36">=<pos:position pos:line="31" pos:column="37"/></operator> <call><name pos:line="31" pos:column="38">gauge_t<pos:position pos:line="31" pos:column="45"/></name><argument_list pos:line="31" pos:column="45">(<argument><expr><call><name><name pos:line="31" pos:column="46">v<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">.<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="48">gauge<pos:position pos:line="31" pos:column="53"/></name></name><argument_list pos:line="31" pos:column="53">()<pos:position pos:line="31" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
			<break pos:line="32" pos:column="25">break;<pos:position pos:line="32" pos:column="31"/></break>
		<case pos:line="33" pos:column="17">case <expr><name><name pos:line="33" pos:column="22">collectd<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">::<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="32">types<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">::<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="39">Value<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">::<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="46">ValueCase<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">::<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="57">kDerive<pos:position pos:line="33" pos:column="64"/></name></name></expr>:<pos:position pos:line="33" pos:column="65"/></case>
			<expr_stmt><expr><name><name pos:line="34" pos:column="25">val<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">derive<pos:position pos:line="34" pos:column="36"/></name></name> <operator pos:line="34" pos:column="37">=<pos:position pos:line="34" pos:column="38"/></operator> <call><name pos:line="34" pos:column="39">derive_t<pos:position pos:line="34" pos:column="47"/></name><argument_list pos:line="34" pos:column="47">(<argument><expr><call><name><name pos:line="34" pos:column="48">v<pos:position pos:line="34" pos:column="49"/></name><operator pos:line="34" pos:column="49">.<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="50">derive<pos:position pos:line="34" pos:column="56"/></name></name><argument_list pos:line="34" pos:column="56">()<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt>
			<break pos:line="35" pos:column="25">break;<pos:position pos:line="35" pos:column="31"/></break>
		<case pos:line="36" pos:column="17">case <expr><name><name pos:line="36" pos:column="22">collectd<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">::<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="32">types<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">::<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="39">Value<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">::<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="46">ValueCase<pos:position pos:line="36" pos:column="55"/></name><operator pos:line="36" pos:column="55">::<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="57">kAbsolute<pos:position pos:line="36" pos:column="66"/></name></name></expr>:<pos:position pos:line="36" pos:column="67"/></case>
			<expr_stmt><expr><name><name pos:line="37" pos:column="25">val<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">absolute<pos:position pos:line="37" pos:column="38"/></name></name> <operator pos:line="37" pos:column="39">=<pos:position pos:line="37" pos:column="40"/></operator> <call><name pos:line="37" pos:column="41">absolute_t<pos:position pos:line="37" pos:column="51"/></name><argument_list pos:line="37" pos:column="51">(<argument><expr><call><name><name pos:line="37" pos:column="52">v<pos:position pos:line="37" pos:column="53"/></name><operator pos:line="37" pos:column="53">.<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="54">absolute<pos:position pos:line="37" pos:column="62"/></name></name><argument_list pos:line="37" pos:column="62">()<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="66"/></expr_stmt>
			<break pos:line="38" pos:column="25">break;<pos:position pos:line="38" pos:column="31"/></break>
		<default pos:line="39" pos:column="17">default:<pos:position pos:line="39" pos:column="25"/></default>
			<expr_stmt><expr><name pos:line="40" pos:column="25">status<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <call><name><name pos:line="40" pos:column="34">grpc<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">::<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="40">Status<pos:position pos:line="40" pos:column="46"/></name></name><argument_list pos:line="40" pos:column="46">(<argument><expr><name><name pos:line="40" pos:column="47">grpc<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">::<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="53">StatusCode<pos:position pos:line="40" pos:column="63"/></name><operator pos:line="40" pos:column="63">::<pos:position pos:line="40" pos:column="65"/></operator><name pos:line="40" pos:column="65">INVALID_ARGUMENT<pos:position pos:line="40" pos:column="81"/></name></name></expr></argument>,
					<argument><expr><call><name><name pos:line="41" pos:column="41">grpc<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">::<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="47">string<pos:position pos:line="41" pos:column="53"/></name></name><argument_list pos:line="41" pos:column="53">(<argument><expr><literal type="string" pos:line="41" pos:column="54">"unknown value type"<pos:position pos:line="41" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="77"/></expr_stmt>
			<break pos:line="42" pos:column="25">break;<pos:position pos:line="42" pos:column="31"/></break>
		}<pos:position pos:line="43" pos:column="18"/></block></switch>

		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><operator pos:line="45" pos:column="21">!<pos:position pos:line="45" pos:column="22"/></operator><call><name><name pos:line="45" pos:column="22">status<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">.<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="29">ok<pos:position pos:line="45" pos:column="31"/></name></name><argument_list pos:line="45" pos:column="31">()<pos:position pos:line="45" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="34"/></condition><then pos:line="45" pos:column="34">
			<block type="pseudo"><break pos:line="46" pos:column="25">break;<pos:position pos:line="46" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="47" pos:column="10"/></block></for>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><call><name><name pos:line="48" pos:column="13">status<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">ok<pos:position pos:line="48" pos:column="22"/></name></name><argument_list pos:line="48" pos:column="22">()<pos:position pos:line="48" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="25"/></condition><then pos:line="48" pos:column="25"> <block pos:line="48" pos:column="26">{
		<expr_stmt><expr><name><name pos:line="49" pos:column="17">vl<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">-&gt;<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="21">values<pos:position pos:line="49" pos:column="27"/></name></name> <operator pos:line="49" pos:column="28">=<pos:position pos:line="49" pos:column="29"/></operator> <name pos:line="49" pos:column="30">values<pos:position pos:line="49" pos:column="36"/></name></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="50" pos:column="17">vl<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">values_len<pos:position pos:line="50" pos:column="31"/></name></name> <operator pos:line="50" pos:column="32">=<pos:position pos:line="50" pos:column="33"/></operator> <name pos:line="50" pos:column="34">values_len<pos:position pos:line="50" pos:column="44"/></name></expr>;<pos:position pos:line="50" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then>
	<elseif pos:line="52" pos:column="9">else <if pos:line="52" pos:column="14">if <condition pos:line="52" pos:column="17">(<expr><name pos:line="52" pos:column="18">values<pos:position pos:line="52" pos:column="24"/></name></expr>)<pos:position pos:line="52" pos:column="25"/></condition><then pos:line="52" pos:column="25"> <block pos:line="52" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">free<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name pos:line="53" pos:column="22">values<pos:position pos:line="53" pos:column="28"/></name></expr></argument>)<pos:position pos:line="53" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">status<pos:position pos:line="56" pos:column="22"/></name></expr>;<pos:position pos:line="56" pos:column="23"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

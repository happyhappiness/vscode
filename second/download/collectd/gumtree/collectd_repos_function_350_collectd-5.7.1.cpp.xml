<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_350_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cpu_commit_without_aggregation<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">void<pos:position pos:line="1" pos:column="48"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init><decl><type><name pos:line="3" pos:column="8">int<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">state<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></init> <condition><expr><name pos:line="3" pos:column="23">state<pos:position pos:line="3" pos:column="28"/></name> <operator pos:line="3" pos:column="29">&lt;<pos:position pos:line="3" pos:column="33"/></operator> <name pos:line="3" pos:column="31">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="3" pos:column="56"/></name></expr>;<pos:position pos:line="3" pos:column="57"/></condition> <incr><expr><name pos:line="3" pos:column="58">state<pos:position pos:line="3" pos:column="63"/></name><operator pos:line="3" pos:column="63">++<pos:position pos:line="3" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="3" pos:column="66"/></control> <block pos:line="3" pos:column="67">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">size_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">cpu_num<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><literal type="number" pos:line="4" pos:column="27">0<pos:position pos:line="4" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></init> <condition><expr><name pos:line="4" pos:column="30">cpu_num<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">&lt;<pos:position pos:line="4" pos:column="42"/></operator> <name pos:line="4" pos:column="40">global_cpu_num<pos:position pos:line="4" pos:column="54"/></name></expr>;<pos:position pos:line="4" pos:column="55"/></condition> <incr><expr><name pos:line="4" pos:column="56">cpu_num<pos:position pos:line="4" pos:column="63"/></name><operator pos:line="4" pos:column="63">++<pos:position pos:line="4" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="66"/></control> <block pos:line="4" pos:column="67">{
      <decl_stmt><decl><type><name pos:line="5" pos:column="7">cpu_state_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">s<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name pos:line="5" pos:column="24">get_cpu_state<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">(<argument><expr><name pos:line="5" pos:column="38">cpu_num<pos:position pos:line="5" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="47">state<pos:position pos:line="5" pos:column="52"/></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>

      <if pos:line="7" pos:column="7">if <condition pos:line="7" pos:column="10">(<expr><operator pos:line="7" pos:column="11">!<pos:position pos:line="7" pos:column="12"/></operator><name><name pos:line="7" pos:column="12">s<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">has_value<pos:position pos:line="7" pos:column="24"/></name></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25">
        <block type="pseudo"><continue pos:line="8" pos:column="9">continue;<pos:position pos:line="8" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="10" pos:column="7">submit_derive<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">int<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">)<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">cpu_num<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="35">(<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">int<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">state<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="47">s<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">-&gt;<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="50">conv<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">.<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="55">last_value<pos:position pos:line="10" pos:column="65"/></name><operator pos:line="10" pos:column="65">.<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="66">derive<pos:position pos:line="10" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></for>
  }<pos:position pos:line="12" pos:column="4"/></block></for>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

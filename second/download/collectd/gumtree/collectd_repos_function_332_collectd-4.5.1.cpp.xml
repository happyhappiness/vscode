<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_332_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ps_config<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">key<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">value<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcasecmp<pos:position pos:line="3" pos:column="23"/></name> <argument_list pos:line="3" pos:column="24">(<argument><expr><name pos:line="3" pos:column="25">key<pos:position pos:line="3" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="30">"Process"<pos:position pos:line="3" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="40"/></argument_list></call> <operator pos:line="3" pos:column="41">==<pos:position pos:line="3" pos:column="43"/></operator> <literal type="number" pos:line="3" pos:column="44">0<pos:position pos:line="3" pos:column="45"/></literal></expr>)<pos:position pos:line="3" pos:column="46"/></condition><then pos:line="3" pos:column="46">
	<block pos:line="4" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">ps_list_register<pos:position pos:line="5" pos:column="33"/></name> <argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">value<pos:position pos:line="5" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="42">NULL<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="6" pos:column="10"/></block></then>
	<elseif pos:line="7" pos:column="9">else <if pos:line="7" pos:column="14">if <condition pos:line="7" pos:column="17">(<expr><call><name pos:line="7" pos:column="18">strcasecmp<pos:position pos:line="7" pos:column="28"/></name> <argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">key<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="35">"ProcessMatch"<pos:position pos:line="7" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call> <operator pos:line="7" pos:column="51">==<pos:position pos:line="7" pos:column="53"/></operator> <literal type="number" pos:line="7" pos:column="54">0<pos:position pos:line="7" pos:column="55"/></literal></expr>)<pos:position pos:line="7" pos:column="56"/></condition><then pos:line="7" pos:column="56">
	<block pos:line="8" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">new_val<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">char<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name><name pos:line="10" pos:column="23">fields<pos:position pos:line="10" pos:column="29"/></name><index pos:line="10" pos:column="29">[<expr><literal type="number" pos:line="10" pos:column="30">3<pos:position pos:line="10" pos:column="31"/></literal></expr>]<pos:position pos:line="10" pos:column="32"/></index></name></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">fields_num<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>

		<expr_stmt><expr><name pos:line="13" pos:column="17">new_val<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <call><name pos:line="13" pos:column="27">strdup<pos:position pos:line="13" pos:column="33"/></name> <argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">value<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">new_val<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">==<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="32">NULL<pos:position pos:line="14" pos:column="36"/></name></expr>)<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37">
			<block type="pseudo"><return pos:line="15" pos:column="25">return <expr><operator pos:line="15" pos:column="32">(<pos:position pos:line="15" pos:column="33"/></operator><literal type="number" pos:line="15" pos:column="33">1<pos:position pos:line="15" pos:column="34"/></literal><operator pos:line="15" pos:column="34">)<pos:position pos:line="15" pos:column="35"/></operator></expr>;<pos:position pos:line="15" pos:column="36"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="16" pos:column="17">fields_num<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <call><name pos:line="16" pos:column="30">strsplit<pos:position pos:line="16" pos:column="38"/></name> <argument_list pos:line="16" pos:column="39">(<argument><expr><name pos:line="16" pos:column="40">new_val<pos:position pos:line="16" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="49">fields<pos:position pos:line="16" pos:column="55"/></name></expr></argument>,
				<argument><expr><call><name pos:line="17" pos:column="33">STATIC_ARRAY_SIZE<pos:position pos:line="17" pos:column="50"/></name> <argument_list pos:line="17" pos:column="51">(<argument><expr><name pos:line="17" pos:column="52">fields<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">fields_num<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">!=<pos:position pos:line="18" pos:column="34"/></operator> <literal type="number" pos:line="18" pos:column="35">2<pos:position pos:line="18" pos:column="36"/></literal></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37">
		<block pos:line="19" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">sfree<pos:position pos:line="20" pos:column="30"/></name> <argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">new_val<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
			<return pos:line="21" pos:column="25">return <expr><operator pos:line="21" pos:column="32">(<pos:position pos:line="21" pos:column="33"/></operator><literal type="number" pos:line="21" pos:column="33">1<pos:position pos:line="21" pos:column="34"/></literal><operator pos:line="21" pos:column="34">)<pos:position pos:line="21" pos:column="35"/></operator></expr>;<pos:position pos:line="21" pos:column="36"/></return>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">ps_list_register<pos:position pos:line="23" pos:column="33"/></name> <argument_list pos:line="23" pos:column="34">(<argument><expr><name><name pos:line="23" pos:column="35">fields<pos:position pos:line="23" pos:column="41"/></name><index pos:line="23" pos:column="41">[<expr><literal type="number" pos:line="23" pos:column="42">0<pos:position pos:line="23" pos:column="43"/></literal></expr>]<pos:position pos:line="23" pos:column="44"/></index></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="46">fields<pos:position pos:line="23" pos:column="52"/></name><index pos:line="23" pos:column="52">[<expr><literal type="number" pos:line="23" pos:column="53">1<pos:position pos:line="23" pos:column="54"/></literal></expr>]<pos:position pos:line="23" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">sfree<pos:position pos:line="24" pos:column="22"/></name> <argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">new_val<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if></elseif>
	<else pos:line="26" pos:column="9">else
	<block pos:line="27" pos:column="9">{
		<return pos:line="28" pos:column="17">return <expr><operator pos:line="28" pos:column="24">(<pos:position pos:line="28" pos:column="25"/></operator><operator pos:line="28" pos:column="25">-<pos:position pos:line="28" pos:column="26"/></operator><literal type="number" pos:line="28" pos:column="26">1<pos:position pos:line="28" pos:column="27"/></literal><operator pos:line="28" pos:column="27">)<pos:position pos:line="28" pos:column="28"/></operator></expr>;<pos:position pos:line="28" pos:column="29"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></else></if>

	<return pos:line="31" pos:column="9">return <expr><operator pos:line="31" pos:column="16">(<pos:position pos:line="31" pos:column="17"/></operator><literal type="number" pos:line="31" pos:column="17">0<pos:position pos:line="31" pos:column="18"/></literal><operator pos:line="31" pos:column="18">)<pos:position pos:line="31" pos:column="19"/></operator></expr>;<pos:position pos:line="31" pos:column="20"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

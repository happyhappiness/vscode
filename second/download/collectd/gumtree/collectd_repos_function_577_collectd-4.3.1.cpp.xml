<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_577_collectd-4.3.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">change_basedir<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">orig_dir<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">dir<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><call><name pos:line="3" pos:column="21">strdup<pos:position pos:line="3" pos:column="27"/></name> <argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">orig_dir<pos:position pos:line="3" pos:column="37"/></name></expr></argument>)<pos:position pos:line="3" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">dirlen<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">dir<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">==<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25">
	<block pos:line="8" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name></type> <name><name pos:line="9" pos:column="22">errbuf<pos:position pos:line="9" pos:column="28"/></name><index pos:line="9" pos:column="28">[<expr><literal type="number" pos:line="9" pos:column="29">1024<pos:position pos:line="9" pos:column="33"/></literal></expr>]<pos:position pos:line="9" pos:column="34"/></index></name></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">ERROR<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"strdup failed: %s"<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="11" pos:column="33">sstrerror<pos:position pos:line="11" pos:column="42"/></name> <argument_list pos:line="11" pos:column="43">(<argument><expr><name pos:line="11" pos:column="44">errno<pos:position pos:line="11" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="51">errbuf<pos:position pos:line="11" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="59">sizeof <argument_list pos:line="11" pos:column="66">(<argument><expr><name pos:line="11" pos:column="67">errbuf<pos:position pos:line="11" pos:column="73"/></name></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="77"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="25">-<pos:position pos:line="12" pos:column="26"/></operator><literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator></expr>;<pos:position pos:line="12" pos:column="29"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	
	<expr_stmt><expr><name pos:line="15" pos:column="9">dirlen<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">strlen<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">dir<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">dirlen<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">&gt;<pos:position pos:line="16" pos:column="28"/></operator> <literal type="number" pos:line="16" pos:column="26">0<pos:position pos:line="16" pos:column="27"/></literal><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator> <operator pos:line="16" pos:column="29">&amp;&amp;<pos:position pos:line="16" pos:column="39"/></operator> <operator pos:line="16" pos:column="32">(<pos:position pos:line="16" pos:column="33"/></operator><name><name pos:line="16" pos:column="33">dir<pos:position pos:line="16" pos:column="36"/></name><index pos:line="16" pos:column="36">[<expr><name pos:line="16" pos:column="37">dirlen<pos:position pos:line="16" pos:column="43"/></name> <operator pos:line="16" pos:column="44">-<pos:position pos:line="16" pos:column="45"/></operator> <literal type="number" pos:line="16" pos:column="46">1<pos:position pos:line="16" pos:column="47"/></literal></expr>]<pos:position pos:line="16" pos:column="48"/></index></name> <operator pos:line="16" pos:column="49">==<pos:position pos:line="16" pos:column="51"/></operator> <literal type="char" pos:line="16" pos:column="52">'/'<pos:position pos:line="16" pos:column="55"/></literal><operator pos:line="16" pos:column="55">)<pos:position pos:line="16" pos:column="56"/></operator></expr>)<pos:position pos:line="16" pos:column="57"/></condition>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="17">dir<pos:position pos:line="17" pos:column="20"/></name><index pos:line="17" pos:column="20">[<expr><operator pos:line="17" pos:column="21">--<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">dirlen<pos:position pos:line="17" pos:column="29"/></name></expr>]<pos:position pos:line="17" pos:column="30"/></index></name> <operator pos:line="17" pos:column="31">=<pos:position pos:line="17" pos:column="32"/></operator> <literal type="char" pos:line="17" pos:column="33">'\0'<pos:position pos:line="17" pos:column="37"/></literal></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt></block></while>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">dirlen<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">&lt;=<pos:position pos:line="19" pos:column="25"/></operator> <literal type="number" pos:line="19" pos:column="23">0<pos:position pos:line="19" pos:column="24"/></literal></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25">
		<block type="pseudo"><return pos:line="20" pos:column="17">return <expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><operator pos:line="20" pos:column="25">-<pos:position pos:line="20" pos:column="26"/></operator><literal type="number" pos:line="20" pos:column="26">1<pos:position pos:line="20" pos:column="27"/></literal><operator pos:line="20" pos:column="27">)<pos:position pos:line="20" pos:column="28"/></operator></expr>;<pos:position pos:line="20" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="22" pos:column="9">status<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">chdir<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">dir<pos:position pos:line="22" pos:column="28"/></name></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">free<pos:position pos:line="23" pos:column="13"/></name> <argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">dir<pos:position pos:line="23" pos:column="18"/></name></expr></argument>)<pos:position pos:line="23" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">status<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">!=<pos:position pos:line="25" pos:column="22"/></operator> <literal type="number" pos:line="25" pos:column="23">0<pos:position pos:line="25" pos:column="24"/></literal></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25">
	<block pos:line="26" pos:column="9">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">errno<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">==<pos:position pos:line="27" pos:column="29"/></operator> <name pos:line="27" pos:column="30">ENOENT<pos:position pos:line="27" pos:column="36"/></name></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37">
		<block pos:line="28" pos:column="17">{
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><call><name pos:line="29" pos:column="29">mkdir<pos:position pos:line="29" pos:column="34"/></name> <argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">orig_dir<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="46">0755<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call> <operator pos:line="29" pos:column="52">==<pos:position pos:line="29" pos:column="54"/></operator> <operator pos:line="29" pos:column="55">-<pos:position pos:line="29" pos:column="56"/></operator><literal type="number" pos:line="29" pos:column="56">1<pos:position pos:line="29" pos:column="57"/></literal></expr>)<pos:position pos:line="29" pos:column="58"/></condition><then pos:line="29" pos:column="58">
			<block pos:line="30" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="31" pos:column="33">char<pos:position pos:line="31" pos:column="37"/></name></type> <name><name pos:line="31" pos:column="38">errbuf<pos:position pos:line="31" pos:column="44"/></name><index pos:line="31" pos:column="44">[<expr><literal type="number" pos:line="31" pos:column="45">1024<pos:position pos:line="31" pos:column="49"/></literal></expr>]<pos:position pos:line="31" pos:column="50"/></index></name></decl>;<pos:position pos:line="31" pos:column="51"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="32" pos:column="33">ERROR<pos:position pos:line="32" pos:column="38"/></name> <argument_list pos:line="32" pos:column="39">(<argument><expr><literal type="string" pos:line="32" pos:column="40">"change_basedir: mkdir (%s): %s"<pos:position pos:line="32" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="74">orig_dir<pos:position pos:line="32" pos:column="82"/></name></expr></argument>,
						<argument><expr><call><name pos:line="33" pos:column="49">sstrerror<pos:position pos:line="33" pos:column="58"/></name> <argument_list pos:line="33" pos:column="59">(<argument><expr><name pos:line="33" pos:column="60">errno<pos:position pos:line="33" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="67">errbuf<pos:position pos:line="33" pos:column="73"/></name></expr></argument>,
							<argument><expr><sizeof pos:line="34" pos:column="57">sizeof <argument_list pos:line="34" pos:column="64">(<argument><expr><name pos:line="34" pos:column="65">errbuf<pos:position pos:line="34" pos:column="71"/></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="75"/></expr_stmt>
				<return pos:line="35" pos:column="33">return <expr><operator pos:line="35" pos:column="40">(<pos:position pos:line="35" pos:column="41"/></operator><operator pos:line="35" pos:column="41">-<pos:position pos:line="35" pos:column="42"/></operator><literal type="number" pos:line="35" pos:column="42">1<pos:position pos:line="35" pos:column="43"/></literal><operator pos:line="35" pos:column="43">)<pos:position pos:line="35" pos:column="44"/></operator></expr>;<pos:position pos:line="35" pos:column="45"/></return>
			}<pos:position pos:line="36" pos:column="26"/></block></then>
			<elseif pos:line="37" pos:column="25">else <if pos:line="37" pos:column="30">if <condition pos:line="37" pos:column="33">(<expr><call><name pos:line="37" pos:column="34">chdir<pos:position pos:line="37" pos:column="39"/></name> <argument_list pos:line="37" pos:column="40">(<argument><expr><name pos:line="37" pos:column="41">orig_dir<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call> <operator pos:line="37" pos:column="51">==<pos:position pos:line="37" pos:column="53"/></operator> <operator pos:line="37" pos:column="54">-<pos:position pos:line="37" pos:column="55"/></operator><literal type="number" pos:line="37" pos:column="55">1<pos:position pos:line="37" pos:column="56"/></literal></expr>)<pos:position pos:line="37" pos:column="57"/></condition><then pos:line="37" pos:column="57">
			<block pos:line="38" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="39" pos:column="33">char<pos:position pos:line="39" pos:column="37"/></name></type> <name><name pos:line="39" pos:column="38">errbuf<pos:position pos:line="39" pos:column="44"/></name><index pos:line="39" pos:column="44">[<expr><literal type="number" pos:line="39" pos:column="45">1024<pos:position pos:line="39" pos:column="49"/></literal></expr>]<pos:position pos:line="39" pos:column="50"/></index></name></decl>;<pos:position pos:line="39" pos:column="51"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="40" pos:column="33">ERROR<pos:position pos:line="40" pos:column="38"/></name> <argument_list pos:line="40" pos:column="39">(<argument><expr><literal type="string" pos:line="40" pos:column="40">"chdir (%s): %s"<pos:position pos:line="40" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="58">orig_dir<pos:position pos:line="40" pos:column="66"/></name></expr></argument>,
						<argument><expr><call><name pos:line="41" pos:column="49">sstrerror<pos:position pos:line="41" pos:column="58"/></name> <argument_list pos:line="41" pos:column="59">(<argument><expr><name pos:line="41" pos:column="60">errno<pos:position pos:line="41" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="67">errbuf<pos:position pos:line="41" pos:column="73"/></name></expr></argument>,
							<argument><expr><sizeof pos:line="42" pos:column="57">sizeof <argument_list pos:line="42" pos:column="64">(<argument><expr><name pos:line="42" pos:column="65">errbuf<pos:position pos:line="42" pos:column="71"/></name></expr></argument>)<pos:position pos:line="42" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="75"/></expr_stmt>
				<return pos:line="43" pos:column="33">return <expr><operator pos:line="43" pos:column="40">(<pos:position pos:line="43" pos:column="41"/></operator><operator pos:line="43" pos:column="41">-<pos:position pos:line="43" pos:column="42"/></operator><literal type="number" pos:line="43" pos:column="42">1<pos:position pos:line="43" pos:column="43"/></literal><operator pos:line="43" pos:column="43">)<pos:position pos:line="43" pos:column="44"/></operator></expr>;<pos:position pos:line="43" pos:column="45"/></return>
			}<pos:position pos:line="44" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="45" pos:column="18"/></block></then>
		<else pos:line="46" pos:column="17">else
		<block pos:line="47" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="48" pos:column="25">char<pos:position pos:line="48" pos:column="29"/></name></type> <name><name pos:line="48" pos:column="30">errbuf<pos:position pos:line="48" pos:column="36"/></name><index pos:line="48" pos:column="36">[<expr><literal type="number" pos:line="48" pos:column="37">1024<pos:position pos:line="48" pos:column="41"/></literal></expr>]<pos:position pos:line="48" pos:column="42"/></index></name></decl>;<pos:position pos:line="48" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">ERROR<pos:position pos:line="49" pos:column="30"/></name> <argument_list pos:line="49" pos:column="31">(<argument><expr><literal type="string" pos:line="49" pos:column="32">"chdir (%s): %s"<pos:position pos:line="49" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="50">orig_dir<pos:position pos:line="49" pos:column="58"/></name></expr></argument>,
					<argument><expr><call><name pos:line="50" pos:column="41">sstrerror<pos:position pos:line="50" pos:column="50"/></name> <argument_list pos:line="50" pos:column="51">(<argument><expr><name pos:line="50" pos:column="52">errno<pos:position pos:line="50" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="59">errbuf<pos:position pos:line="50" pos:column="65"/></name></expr></argument>,
						<argument><expr><sizeof pos:line="51" pos:column="49">sizeof <argument_list pos:line="51" pos:column="56">(<argument><expr><name pos:line="51" pos:column="57">errbuf<pos:position pos:line="51" pos:column="63"/></name></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="67"/></expr_stmt>
			<return pos:line="52" pos:column="25">return <expr><operator pos:line="52" pos:column="32">(<pos:position pos:line="52" pos:column="33"/></operator><operator pos:line="52" pos:column="33">-<pos:position pos:line="52" pos:column="34"/></operator><literal type="number" pos:line="52" pos:column="34">1<pos:position pos:line="52" pos:column="35"/></literal><operator pos:line="52" pos:column="35">)<pos:position pos:line="52" pos:column="36"/></operator></expr>;<pos:position pos:line="52" pos:column="37"/></return>
		}<pos:position pos:line="53" pos:column="18"/></block></else></if>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if>

	<return pos:line="56" pos:column="9">return <expr><operator pos:line="56" pos:column="16">(<pos:position pos:line="56" pos:column="17"/></operator><literal type="number" pos:line="56" pos:column="17">0<pos:position pos:line="56" pos:column="18"/></literal><operator pos:line="56" pos:column="18">)<pos:position pos:line="56" pos:column="19"/></operator></expr>;<pos:position pos:line="56" pos:column="20"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

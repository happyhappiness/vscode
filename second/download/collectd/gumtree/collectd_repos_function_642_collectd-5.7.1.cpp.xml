<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_642_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">load_submit<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">gauge_t<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">snum<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">gauge_t<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">mnum<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">gauge_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">lnum<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list> <block pos:line="1" pos:column="67">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">cores<pos:position pos:line="2" pos:column="12"/></name> <init pos:line="2" pos:column="13">= <expr><literal type="number" pos:line="2" pos:column="15">0<pos:position pos:line="2" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">errbuf<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">1024<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">_SC_NPROCESSORS_ONLN<pos:position pos:line="5" pos:column="28"/></name></cpp:ifdef>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">report_relative_load<pos:position pos:line="6" pos:column="27"/></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28"> <block pos:line="6" pos:column="29">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">cores<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <call><name pos:line="7" pos:column="18">sysconf<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">_SC_NPROCESSORS_ONLN<pos:position pos:line="7" pos:column="46"/></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call><operator pos:line="7" pos:column="47">)<pos:position pos:line="7" pos:column="48"/></operator> <operator pos:line="7" pos:column="49">&lt;<pos:position pos:line="7" pos:column="53"/></operator> <literal type="number" pos:line="7" pos:column="51">1<pos:position pos:line="7" pos:column="52"/></literal></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53"> <block pos:line="7" pos:column="54">{
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">WARNING<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><literal type="string" pos:line="8" pos:column="15">"load: sysconf failed : %s"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="9" pos:column="15">sstrerror<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">errno<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">errbuf<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="40">sizeof<argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">errbuf<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">cores<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">&gt;<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="15">0<pos:position pos:line="13" pos:column="16"/></literal></expr>)<pos:position pos:line="13" pos:column="17"/></condition><then pos:line="13" pos:column="17"> <block pos:line="13" pos:column="18">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">snum<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">/=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">cores<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">mnum<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">/=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">cores<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">lnum<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">/=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">cores<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="19" pos:column="3">value_list_t<pos:position pos:line="19" pos:column="15"/></name></type> <name pos:line="19" pos:column="16">vl<pos:position pos:line="19" pos:column="18"/></name> <init pos:line="19" pos:column="19">= <expr><name pos:line="19" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="19" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">value_t<pos:position pos:line="20" pos:column="10"/></name></type> <name><name pos:line="20" pos:column="11">values<pos:position pos:line="20" pos:column="17"/></name><index pos:line="20" pos:column="17">[]<pos:position pos:line="20" pos:column="19"/></index></name> <init pos:line="20" pos:column="20">= <expr><block pos:line="20" pos:column="22">{
      <expr><block pos:line="21" pos:column="7">{<expr><operator pos:line="21" pos:column="8">.<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">gauge<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">snum<pos:position pos:line="21" pos:column="21"/></name></expr>}<pos:position pos:line="21" pos:column="22"/></block></expr>, <expr><block pos:line="21" pos:column="24">{<expr><operator pos:line="21" pos:column="25">.<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">gauge<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="34">mnum<pos:position pos:line="21" pos:column="38"/></name></expr>}<pos:position pos:line="21" pos:column="39"/></block></expr>, <expr><block pos:line="21" pos:column="41">{<expr><operator pos:line="21" pos:column="42">.<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="43">gauge<pos:position pos:line="21" pos:column="48"/></name> <operator pos:line="21" pos:column="49">=<pos:position pos:line="21" pos:column="50"/></operator> <name pos:line="21" pos:column="51">lnum<pos:position pos:line="21" pos:column="55"/></name></expr>}<pos:position pos:line="21" pos:column="56"/></block></expr>,
  }<pos:position pos:line="22" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="22" pos:column="5"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="24" pos:column="3">vl<pos:position pos:line="24" pos:column="5"/></name><operator pos:line="24" pos:column="5">.<pos:position pos:line="24" pos:column="6"/></operator><name pos:line="24" pos:column="6">values<pos:position pos:line="24" pos:column="12"/></name></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">values<pos:position pos:line="24" pos:column="21"/></name></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">vl<pos:position pos:line="25" pos:column="5"/></name><operator pos:line="25" pos:column="5">.<pos:position pos:line="25" pos:column="6"/></operator><name pos:line="25" pos:column="6">values_len<pos:position pos:line="25" pos:column="16"/></name></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <call><name pos:line="25" pos:column="19">STATIC_ARRAY_SIZE<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><name pos:line="25" pos:column="37">values<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">sstrncpy<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name><name pos:line="27" pos:column="12">vl<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">.<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">plugin<pos:position pos:line="27" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="23">"load"<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="31">sizeof<argument_list pos:line="27" pos:column="37">(<argument><expr><name><name pos:line="27" pos:column="38">vl<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">.<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="41">plugin<pos:position pos:line="27" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">sstrncpy<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name><name pos:line="28" pos:column="12">vl<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">.<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">type<pos:position pos:line="28" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="21">"load"<pos:position pos:line="28" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="29">sizeof<argument_list pos:line="28" pos:column="35">(<argument><expr><name><name pos:line="28" pos:column="36">vl<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">.<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">type<pos:position pos:line="28" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">cores<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">&gt;<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="15">0<pos:position pos:line="30" pos:column="16"/></literal></expr>)<pos:position pos:line="30" pos:column="17"/></condition><then pos:line="30" pos:column="17"> <block pos:line="30" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">sstrncpy<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name><name pos:line="31" pos:column="14">vl<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">.<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">type_instance<pos:position pos:line="31" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="32">"relative"<pos:position pos:line="31" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="44">sizeof<argument_list pos:line="31" pos:column="50">(<argument><expr><name><name pos:line="31" pos:column="51">vl<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">.<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="54">type_instance<pos:position pos:line="31" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="70"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">plugin_dispatch_values<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><operator pos:line="34" pos:column="26">&amp;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="27">vl<pos:position pos:line="34" pos:column="29"/></name></expr></argument>)<pos:position pos:line="34" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

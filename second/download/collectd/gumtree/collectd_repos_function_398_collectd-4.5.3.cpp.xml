<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_398_collectd-4.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">handle_linux_sll<pos:position pos:line="2" pos:column="17"/></name> <parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">u_char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">pkt<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">len<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <struct pos:line="4" pos:column="5">struct <name pos:line="4" pos:column="12">sll_header<pos:position pos:line="4" pos:column="22"/></name>
    <block pos:line="5" pos:column="5">{<public type="default" pos:line="5" pos:column="6">
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">uint16_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">pkt_type<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">uint16_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">dev_type<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">uint16_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">addr_len<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">uint8_t<pos:position pos:line="9" pos:column="16"/></name></type>  <name><name pos:line="9" pos:column="18">addr<pos:position pos:line="9" pos:column="22"/></name><index pos:line="9" pos:column="22">[<expr><literal type="number" pos:line="9" pos:column="23">8<pos:position pos:line="9" pos:column="24"/></literal></expr>]<pos:position pos:line="9" pos:column="25"/></index></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">uint16_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">proto_type<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
    <pos:position pos:line="11" pos:column="5"/></public>}<pos:position pos:line="11" pos:column="6"/></block> <decl><modifier pos:line="11" pos:column="7">*<pos:position pos:line="11" pos:column="8"/></modifier><name pos:line="11" pos:column="8">hdr<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></struct>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">uint16_t<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">etype<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><literal type="number" pos:line="14" pos:column="10">0<pos:position pos:line="14" pos:column="11"/></literal> <operator pos:line="14" pos:column="12">&gt;<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="14">len<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">)<pos:position pos:line="14" pos:column="18"/></operator> <operator pos:line="14" pos:column="19">||<pos:position pos:line="14" pos:column="21"/></operator> <operator pos:line="14" pos:column="22">(<pos:position pos:line="14" pos:column="23"/></operator><operator pos:line="14" pos:column="23">(<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">unsigned<pos:position pos:line="14" pos:column="32"/></name> <name pos:line="14" pos:column="33">int<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">)<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">len<pos:position pos:line="14" pos:column="40"/></name> <operator pos:line="14" pos:column="41">&lt;<pos:position pos:line="14" pos:column="45"/></operator> <sizeof pos:line="14" pos:column="43">sizeof <argument_list pos:line="14" pos:column="50">(<argument><expr pos:line="14" pos:column="51">struct <name pos:line="14" pos:column="58">sll_header<pos:position pos:line="14" pos:column="68"/></name></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></sizeof><operator pos:line="14" pos:column="69">)<pos:position pos:line="14" pos:column="70"/></operator></expr>)<pos:position pos:line="14" pos:column="71"/></condition><then pos:line="14" pos:column="71">
	<block type="pseudo"><return pos:line="15" pos:column="9">return <expr><operator pos:line="15" pos:column="16">(<pos:position pos:line="15" pos:column="17"/></operator><literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal><operator pos:line="15" pos:column="18">)<pos:position pos:line="15" pos:column="19"/></operator></expr>;<pos:position pos:line="15" pos:column="20"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">hdr<pos:position pos:line="17" pos:column="8"/></name>  <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator>struct <name pos:line="17" pos:column="20">sll_header<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">*<pos:position pos:line="17" pos:column="32"/></operator><operator pos:line="17" pos:column="32">)<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">pkt<pos:position pos:line="17" pos:column="37"/></name></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">pkt<pos:position pos:line="18" pos:column="8"/></name>  <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">u_char<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></operator><operator pos:line="18" pos:column="21">)<pos:position pos:line="18" pos:column="22"/></operator> <operator pos:line="18" pos:column="23">(<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">hdr<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">+<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="30">1<pos:position pos:line="18" pos:column="31"/></literal><operator pos:line="18" pos:column="31">)<pos:position pos:line="18" pos:column="32"/></operator></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">len<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">-=<pos:position pos:line="19" pos:column="11"/></operator> <sizeof pos:line="19" pos:column="12">sizeof <argument_list pos:line="19" pos:column="19">(<argument><expr pos:line="19" pos:column="20">struct <name pos:line="19" pos:column="27">sll_header<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></sizeof></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">etype<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <call><name pos:line="21" pos:column="13">ntohs<pos:position pos:line="21" pos:column="18"/></name> <argument_list pos:line="21" pos:column="19">(<argument><expr><name><name pos:line="21" pos:column="20">hdr<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">-&gt;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="25">proto_type<pos:position pos:line="21" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">ETHERTYPE_IP<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">!=<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">etype<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">)<pos:position pos:line="23" pos:column="32"/></operator>
	    <operator pos:line="24" pos:column="13">&amp;&amp;<pos:position pos:line="24" pos:column="23"/></operator> <operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">ETHERTYPE_IPV6<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">!=<pos:position pos:line="24" pos:column="34"/></operator> <name pos:line="24" pos:column="35">etype<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">)<pos:position pos:line="24" pos:column="41"/></operator></expr>)<pos:position pos:line="24" pos:column="42"/></condition><then pos:line="24" pos:column="42">
	<block type="pseudo"><return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return></block></then></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">ETHERTYPE_IPV6<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">==<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">etype<pos:position pos:line="27" pos:column="32"/></name></expr>)<pos:position pos:line="27" pos:column="33"/></condition><then pos:line="27" pos:column="33">
	<block type="pseudo"><return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><call><name pos:line="28" pos:column="17">handle_ipv6<pos:position pos:line="28" pos:column="28"/></name> <argument_list pos:line="28" pos:column="29">(<argument><expr><operator pos:line="28" pos:column="30">(<pos:position pos:line="28" pos:column="31"/></operator>struct <name pos:line="28" pos:column="38">ip6_hdr<pos:position pos:line="28" pos:column="45"/></name> <operator pos:line="28" pos:column="46">*<pos:position pos:line="28" pos:column="47"/></operator><operator pos:line="28" pos:column="47">)<pos:position pos:line="28" pos:column="48"/></operator> <name pos:line="28" pos:column="49">pkt<pos:position pos:line="28" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="54">len<pos:position pos:line="28" pos:column="57"/></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call><operator pos:line="28" pos:column="58">)<pos:position pos:line="28" pos:column="59"/></operator></expr>;<pos:position pos:line="28" pos:column="60"/></return></block></then>
    <else pos:line="29" pos:column="5">else
	<block type="pseudo"><return pos:line="30" pos:column="9">return <expr><call><name pos:line="30" pos:column="16">handle_ip<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><operator pos:line="30" pos:column="26">(<pos:position pos:line="30" pos:column="27"/></operator>struct <name pos:line="30" pos:column="34">ip<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">*<pos:position pos:line="30" pos:column="38"/></operator><operator pos:line="30" pos:column="38">)<pos:position pos:line="30" pos:column="39"/></operator> <name pos:line="30" pos:column="40">pkt<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">len<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="50"/></return></block></else></if>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

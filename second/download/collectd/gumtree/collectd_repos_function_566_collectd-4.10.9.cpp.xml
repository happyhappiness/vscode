<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_566_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">iptables_read<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">num_failures<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ip_chain_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">chain<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* Init the iptc handle structure and query the correct table */</comment>    
    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="21">chain_num<pos:position pos:line="8" pos:column="30"/></name></expr>;<pos:position pos:line="8" pos:column="31"/></condition> <incr><expr><name pos:line="8" pos:column="32">i<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">++<pos:position pos:line="8" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="36"/></control>
    <block pos:line="9" pos:column="5">{
	<expr_stmt><expr><name pos:line="10" pos:column="9">chain<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name><name pos:line="10" pos:column="17">chain_list<pos:position pos:line="10" pos:column="27"/></name><index pos:line="10" pos:column="27">[<expr><name pos:line="10" pos:column="28">i<pos:position pos:line="10" pos:column="29"/></name></expr>]<pos:position pos:line="10" pos:column="30"/></index></name></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
	
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">chain<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
	<block pos:line="13" pos:column="9">{
	    <expr_stmt><expr><call><name pos:line="14" pos:column="13">DEBUG<pos:position pos:line="14" pos:column="18"/></name> <argument_list pos:line="14" pos:column="19">(<argument><expr><literal type="string" pos:line="14" pos:column="20">"iptables plugin: chain == NULL"<pos:position pos:line="14" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt>
	    <continue pos:line="15" pos:column="13">continue;<pos:position pos:line="15" pos:column="22"/></continue>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">( <expr><name><name pos:line="18" pos:column="14">chain<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">ip_version<pos:position pos:line="18" pos:column="31"/></name></name> <operator pos:line="18" pos:column="32">==<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="35">IPV4<pos:position pos:line="18" pos:column="39"/></name></expr> )<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41">
        <block pos:line="19" pos:column="9">{
<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">HAVE_IPTC_HANDLE_T<pos:position pos:line="20" pos:column="26"/></name></cpp:ifdef>
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">iptc_handle_t<pos:position pos:line="21" pos:column="30"/></name></type> <name pos:line="21" pos:column="31">_handle<pos:position pos:line="21" pos:column="38"/></name></decl>;<pos:position pos:line="21" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">iptc_handle_t<pos:position pos:line="22" pos:column="30"/></name> <modifier pos:line="22" pos:column="31">*<pos:position pos:line="22" pos:column="32"/></modifier></type><name pos:line="22" pos:column="32">handle<pos:position pos:line="22" pos:column="38"/></name> <init pos:line="22" pos:column="39">= <expr><operator pos:line="22" pos:column="41">&amp;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="42">_handle<pos:position pos:line="22" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="50"/></decl_stmt>

		<expr_stmt><expr><operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">handle<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <call><name pos:line="24" pos:column="27">iptc_init<pos:position pos:line="24" pos:column="36"/></name> <argument_list pos:line="24" pos:column="37">(<argument><expr><name><name pos:line="24" pos:column="38">chain<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">table<pos:position pos:line="24" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
<cpp:else pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">else<pos:position pos:line="25" pos:column="6"/></cpp:directive></cpp:else>
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">iptc_handle_t<pos:position pos:line="26" pos:column="30"/></name> <modifier pos:line="26" pos:column="31">*<pos:position pos:line="26" pos:column="32"/></modifier></type><name pos:line="26" pos:column="32">handle<pos:position pos:line="26" pos:column="38"/></name></decl>;<pos:position pos:line="26" pos:column="39"/></decl_stmt>
                <expr_stmt><expr><name pos:line="27" pos:column="17">handle<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <call><name pos:line="27" pos:column="26">iptc_init<pos:position pos:line="27" pos:column="35"/></name> <argument_list pos:line="27" pos:column="36">(<argument><expr><name><name pos:line="27" pos:column="37">chain<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">table<pos:position pos:line="27" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>

                <if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">handle<pos:position pos:line="30" pos:column="28"/></name></expr>)<pos:position pos:line="30" pos:column="29"/></condition><then pos:line="30" pos:column="29">
                <block pos:line="31" pos:column="17">{
                        <expr_stmt><expr><call><name pos:line="32" pos:column="25">ERROR<pos:position pos:line="32" pos:column="30"/></name> <argument_list pos:line="32" pos:column="31">(<argument><expr><literal type="string" pos:line="32" pos:column="32">"iptables plugin: iptc_init (%s) failed: %s"<pos:position pos:line="32" pos:column="76"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="33" pos:column="33">chain<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">table<pos:position pos:line="33" pos:column="45"/></name></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="47">iptc_strerror<pos:position pos:line="33" pos:column="60"/></name> <argument_list pos:line="33" pos:column="61">(<argument><expr><name pos:line="33" pos:column="62">errno<pos:position pos:line="33" pos:column="67"/></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="34" pos:column="25">num_failures<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">++<pos:position pos:line="34" pos:column="39"/></operator></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
                        <continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue>
                }<pos:position pos:line="36" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="38" pos:column="17">submit_chain<pos:position pos:line="38" pos:column="29"/></name> <argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">handle<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="39">chain<pos:position pos:line="38" pos:column="44"/></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="39" pos:column="17">iptc_free<pos:position pos:line="39" pos:column="26"/></name> <argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">handle<pos:position pos:line="39" pos:column="34"/></name></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then>
        <elseif pos:line="41" pos:column="9">else <if pos:line="41" pos:column="14">if <condition pos:line="41" pos:column="17">( <expr><name><name pos:line="41" pos:column="19">chain<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">-&gt;<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="26">ip_version<pos:position pos:line="41" pos:column="36"/></name></name> <operator pos:line="41" pos:column="37">==<pos:position pos:line="41" pos:column="39"/></operator> <name pos:line="41" pos:column="40">IPV6<pos:position pos:line="41" pos:column="44"/></name></expr> )<pos:position pos:line="41" pos:column="46"/></condition><then pos:line="41" pos:column="46">
        <block pos:line="42" pos:column="9">{
<cpp:ifdef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifdef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">HAVE_IP6TC_HANDLE_T<pos:position pos:line="43" pos:column="27"/></name></cpp:ifdef>
		<decl_stmt><decl><type><name pos:line="44" pos:column="17">ip6tc_handle_t<pos:position pos:line="44" pos:column="31"/></name></type> <name pos:line="44" pos:column="32">_handle<pos:position pos:line="44" pos:column="39"/></name></decl>;<pos:position pos:line="44" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="45" pos:column="17">ip6tc_handle_t<pos:position pos:line="45" pos:column="31"/></name> <modifier pos:line="45" pos:column="32">*<pos:position pos:line="45" pos:column="33"/></modifier></type><name pos:line="45" pos:column="33">handle<pos:position pos:line="45" pos:column="39"/></name> <init pos:line="45" pos:column="40">= <expr><operator pos:line="45" pos:column="42">&amp;<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="43">_handle<pos:position pos:line="45" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="45" pos:column="51"/></decl_stmt>

		<expr_stmt><expr><operator pos:line="47" pos:column="17">*<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">handle<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <call><name pos:line="47" pos:column="27">ip6tc_init<pos:position pos:line="47" pos:column="37"/></name> <argument_list pos:line="47" pos:column="38">(<argument><expr><name><name pos:line="47" pos:column="39">chain<pos:position pos:line="47" pos:column="44"/></name><operator pos:line="47" pos:column="44">-&gt;<pos:position pos:line="47" pos:column="49"/></operator><name pos:line="47" pos:column="46">table<pos:position pos:line="47" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt>
<cpp:else pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">else<pos:position pos:line="48" pos:column="6"/></cpp:directive></cpp:else>
                <decl_stmt><decl><type><name pos:line="49" pos:column="17">ip6tc_handle_t<pos:position pos:line="49" pos:column="31"/></name> <modifier pos:line="49" pos:column="32">*<pos:position pos:line="49" pos:column="33"/></modifier></type><name pos:line="49" pos:column="33">handle<pos:position pos:line="49" pos:column="39"/></name></decl>;<pos:position pos:line="49" pos:column="40"/></decl_stmt>
                <expr_stmt><expr><name pos:line="50" pos:column="17">handle<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <call><name pos:line="50" pos:column="26">ip6tc_init<pos:position pos:line="50" pos:column="36"/></name> <argument_list pos:line="50" pos:column="37">(<argument><expr><name><name pos:line="50" pos:column="38">chain<pos:position pos:line="50" pos:column="43"/></name><operator pos:line="50" pos:column="43">-&gt;<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="45">table<pos:position pos:line="50" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>

                <if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><operator pos:line="53" pos:column="21">!<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="22">handle<pos:position pos:line="53" pos:column="28"/></name></expr>)<pos:position pos:line="53" pos:column="29"/></condition><then pos:line="53" pos:column="29">
                <block pos:line="54" pos:column="17">{
                        <expr_stmt><expr><call><name pos:line="55" pos:column="25">ERROR<pos:position pos:line="55" pos:column="30"/></name> <argument_list pos:line="55" pos:column="31">(<argument><expr><literal type="string" pos:line="55" pos:column="32">"iptables plugin: ip6tc_init (%s) failed: %s"<pos:position pos:line="55" pos:column="77"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="56" pos:column="33">chain<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">table<pos:position pos:line="56" pos:column="45"/></name></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="47">ip6tc_strerror<pos:position pos:line="56" pos:column="61"/></name> <argument_list pos:line="56" pos:column="62">(<argument><expr><name pos:line="56" pos:column="63">errno<pos:position pos:line="56" pos:column="68"/></name></expr></argument>)<pos:position pos:line="56" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="71"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="57" pos:column="25">num_failures<pos:position pos:line="57" pos:column="37"/></name><operator pos:line="57" pos:column="37">++<pos:position pos:line="57" pos:column="39"/></operator></expr>;<pos:position pos:line="57" pos:column="40"/></expr_stmt>
                        <continue pos:line="58" pos:column="25">continue;<pos:position pos:line="58" pos:column="34"/></continue>
                }<pos:position pos:line="59" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="61" pos:column="17">submit6_chain<pos:position pos:line="61" pos:column="30"/></name> <argument_list pos:line="61" pos:column="31">(<argument><expr><name pos:line="61" pos:column="32">handle<pos:position pos:line="61" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="40">chain<pos:position pos:line="61" pos:column="45"/></name></expr></argument>)<pos:position pos:line="61" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">ip6tc_free<pos:position pos:line="62" pos:column="27"/></name> <argument_list pos:line="62" pos:column="28">(<argument><expr><name pos:line="62" pos:column="29">handle<pos:position pos:line="62" pos:column="35"/></name></expr></argument>)<pos:position pos:line="62" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if></elseif>
        <else pos:line="64" pos:column="9">else <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="14">num_failures<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">++<pos:position pos:line="64" pos:column="28"/></operator></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt></block></else></if>

    }<pos:position pos:line="66" pos:column="6"/></block></for> <comment type="block" pos:line="66" pos:column="7">/* for (i = 0 .. chain_num) */</comment>

    <return pos:line="68" pos:column="5">return <expr><operator pos:line="68" pos:column="12">(<pos:position pos:line="68" pos:column="13"/></operator><ternary><condition><expr><operator pos:line="68" pos:column="13">(<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="14">num_failures<pos:position pos:line="68" pos:column="26"/></name> <operator pos:line="68" pos:column="27">&lt;<pos:position pos:line="68" pos:column="31"/></operator> <name pos:line="68" pos:column="29">chain_num<pos:position pos:line="68" pos:column="38"/></name><operator pos:line="68" pos:column="38">)<pos:position pos:line="68" pos:column="39"/></operator></expr> ?<pos:position pos:line="68" pos:column="41"/></condition><then pos:line="68" pos:column="41"> <expr><literal type="number" pos:line="68" pos:column="42">0<pos:position pos:line="68" pos:column="43"/></literal></expr> <pos:position pos:line="68" pos:column="44"/></then><else pos:line="68" pos:column="44">: <expr><operator pos:line="68" pos:column="46">-<pos:position pos:line="68" pos:column="47"/></operator><literal type="number" pos:line="68" pos:column="47">1<pos:position pos:line="68" pos:column="48"/></literal></expr></else></ternary><operator pos:line="68" pos:column="48">)<pos:position pos:line="68" pos:column="49"/></operator></expr>;<pos:position pos:line="68" pos:column="50"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

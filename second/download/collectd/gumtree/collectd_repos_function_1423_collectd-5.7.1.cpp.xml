<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1423_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">swap_read<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <comment type="block" pos:line="1" pos:column="28">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">swapent<pos:position pos:line="3" pos:column="17"/></name></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">swap_entries<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">swap_num<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gauge_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">used<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gauge_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">total<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">swap_num<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">swapctl<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">SWAP_NSWAP<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">NULL<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="40">0<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">swap_num<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&lt;<pos:position pos:line="11" pos:column="20"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20"> <block pos:line="11" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"swap plugin: swapctl (SWAP_NSWAP) failed with status %i."<pos:position pos:line="12" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="71">swap_num<pos:position pos:line="12" pos:column="79"/></name></expr></argument>)<pos:position pos:line="12" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="81"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then> <elseif pos:line="14" pos:column="5">else <if pos:line="14" pos:column="10">if <condition pos:line="14" pos:column="13">(<expr><name pos:line="14" pos:column="14">swap_num<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">==<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">0<pos:position pos:line="15" pos:column="14"/></literal><operator pos:line="15" pos:column="14">)<pos:position pos:line="15" pos:column="15"/></operator></expr>;<pos:position pos:line="15" pos:column="16"/></return></block></then></if></elseif></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">swap_entries<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">calloc<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">swap_num<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="35">sizeof<argument_list pos:line="17" pos:column="41">(<argument><expr><operator pos:line="17" pos:column="42">*<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">swap_entries<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">swap_entries<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">==<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">NULL<pos:position pos:line="18" pos:column="27"/></name></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28"> <block pos:line="18" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ERROR<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><literal type="string" pos:line="19" pos:column="11">"swap plugin: calloc failed."<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">-<pos:position pos:line="20" pos:column="14"/></operator><literal type="number" pos:line="20" pos:column="14">1<pos:position pos:line="20" pos:column="15"/></literal><operator pos:line="20" pos:column="15">)<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="23" pos:column="3">status<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">swapctl<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">SWAP_STATS<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="32">swap_entries<pos:position pos:line="23" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="46">swap_num<pos:position pos:line="23" pos:column="54"/></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">status<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">!=<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">swap_num<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26"> <block pos:line="24" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">ERROR<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><literal type="string" pos:line="25" pos:column="11">"swap plugin: swapctl (SWAP_STATS) failed with status %i."<pos:position pos:line="25" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="71">status<pos:position pos:line="25" pos:column="77"/></name></expr></argument>)<pos:position pos:line="25" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">sfree<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><name pos:line="26" pos:column="11">swap_entries<pos:position pos:line="26" pos:column="23"/></name></expr></argument>)<pos:position pos:line="26" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><operator pos:line="27" pos:column="13">-<pos:position pos:line="27" pos:column="14"/></operator><literal type="number" pos:line="27" pos:column="14">1<pos:position pos:line="27" pos:column="15"/></literal><operator pos:line="27" pos:column="15">)<pos:position pos:line="27" pos:column="16"/></operator></expr>;<pos:position pos:line="27" pos:column="17"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

<cpp:if pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">if<pos:position pos:line="30" pos:column="4"/></cpp:directive> <expr><call><name pos:line="30" pos:column="5">defined<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">DEV_BSIZE<pos:position pos:line="30" pos:column="22"/></name></expr></argument>)<pos:position pos:line="30" pos:column="23"/></argument_list></call> <operator pos:line="30" pos:column="24">&amp;&amp;<pos:position pos:line="30" pos:column="34"/></operator> <operator pos:line="30" pos:column="27">(<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="28">DEV_BSIZE<pos:position pos:line="30" pos:column="37"/></name> <operator pos:line="30" pos:column="38">&gt;<pos:position pos:line="30" pos:column="42"/></operator> <literal type="number" pos:line="30" pos:column="40">0<pos:position pos:line="30" pos:column="41"/></literal><operator pos:line="30" pos:column="41">)<pos:position pos:line="30" pos:column="42"/></operator></expr></cpp:if>
<cpp:define pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">define<pos:position pos:line="31" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="31" pos:column="9">C_SWAP_BLOCK_SIZE<pos:position pos:line="31" pos:column="26"/></name></cpp:macro> <cpp:value pos:line="31" pos:column="27">((gauge_t)DEV_BSIZE)<pos:position pos:line="31" pos:column="47"/></cpp:value></cpp:define>
<cpp:else pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">else<pos:position pos:line="32" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">define<pos:position pos:line="33" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="33" pos:column="9">C_SWAP_BLOCK_SIZE<pos:position pos:line="33" pos:column="26"/></name></cpp:macro> <cpp:value pos:line="33" pos:column="27">512.0<pos:position pos:line="33" pos:column="32"/></cpp:value></cpp:define>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="36" pos:column="3">/* TODO: Report per-device stats. The path name is available from
   * swap_entries[i].se_path */</comment>
  <for pos:line="38" pos:column="3">for <control pos:line="38" pos:column="7">(<init><decl><type><name pos:line="38" pos:column="8">int<pos:position pos:line="38" pos:column="11"/></name></type> <name pos:line="38" pos:column="12">i<pos:position pos:line="38" pos:column="13"/></name> <init pos:line="38" pos:column="14">= <expr><literal type="number" pos:line="38" pos:column="16">0<pos:position pos:line="38" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="38" pos:column="18"/></init> <condition><expr><name pos:line="38" pos:column="19">i<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">&lt;<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="23">swap_num<pos:position pos:line="38" pos:column="31"/></name></expr>;<pos:position pos:line="38" pos:column="32"/></condition> <incr><expr><name pos:line="38" pos:column="33">i<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">++<pos:position pos:line="38" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="37"/></control> <block pos:line="38" pos:column="38">{
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><name><name pos:line="39" pos:column="10">swap_entries<pos:position pos:line="39" pos:column="22"/></name><index pos:line="39" pos:column="22">[<expr><name pos:line="39" pos:column="23">i<pos:position pos:line="39" pos:column="24"/></name></expr>]<pos:position pos:line="39" pos:column="25"/></index></name><operator pos:line="39" pos:column="25">.<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="26">se_flags<pos:position pos:line="39" pos:column="34"/></name> <operator pos:line="39" pos:column="35">&amp;<pos:position pos:line="39" pos:column="40"/></operator> <name pos:line="39" pos:column="37">SWF_ENABLE<pos:position pos:line="39" pos:column="47"/></name><operator pos:line="39" pos:column="47">)<pos:position pos:line="39" pos:column="48"/></operator> <operator pos:line="39" pos:column="49">==<pos:position pos:line="39" pos:column="51"/></operator> <literal type="number" pos:line="39" pos:column="52">0<pos:position pos:line="39" pos:column="53"/></literal></expr>)<pos:position pos:line="39" pos:column="54"/></condition><then pos:line="39" pos:column="54">
      <block type="pseudo"><continue pos:line="40" pos:column="7">continue;<pos:position pos:line="40" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="42" pos:column="5">used<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">+=<pos:position pos:line="42" pos:column="12"/></operator> <operator pos:line="42" pos:column="13">(<pos:position pos:line="42" pos:column="14"/></operator><operator pos:line="42" pos:column="14">(<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">gauge_t<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">)<pos:position pos:line="42" pos:column="23"/></operator><name><name pos:line="42" pos:column="23">swap_entries<pos:position pos:line="42" pos:column="35"/></name><index pos:line="42" pos:column="35">[<expr><name pos:line="42" pos:column="36">i<pos:position pos:line="42" pos:column="37"/></name></expr>]<pos:position pos:line="42" pos:column="38"/></index></name><operator pos:line="42" pos:column="38">.<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">se_inuse<pos:position pos:line="42" pos:column="47"/></name><operator pos:line="42" pos:column="47">)<pos:position pos:line="42" pos:column="48"/></operator> <operator pos:line="42" pos:column="49">*<pos:position pos:line="42" pos:column="50"/></operator> <name pos:line="42" pos:column="51">C_SWAP_BLOCK_SIZE<pos:position pos:line="42" pos:column="68"/></name></expr>;<pos:position pos:line="42" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">total<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">+=<pos:position pos:line="43" pos:column="13"/></operator> <operator pos:line="43" pos:column="14">(<pos:position pos:line="43" pos:column="15"/></operator><operator pos:line="43" pos:column="15">(<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="16">gauge_t<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">)<pos:position pos:line="43" pos:column="24"/></operator><name><name pos:line="43" pos:column="24">swap_entries<pos:position pos:line="43" pos:column="36"/></name><index pos:line="43" pos:column="36">[<expr><name pos:line="43" pos:column="37">i<pos:position pos:line="43" pos:column="38"/></name></expr>]<pos:position pos:line="43" pos:column="39"/></index></name><operator pos:line="43" pos:column="39">.<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">se_nblks<pos:position pos:line="43" pos:column="48"/></name><operator pos:line="43" pos:column="48">)<pos:position pos:line="43" pos:column="49"/></operator> <operator pos:line="43" pos:column="50">*<pos:position pos:line="43" pos:column="51"/></operator> <name pos:line="43" pos:column="52">C_SWAP_BLOCK_SIZE<pos:position pos:line="43" pos:column="69"/></name></expr>;<pos:position pos:line="43" pos:column="70"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></for>

  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">total<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">&lt;<pos:position pos:line="46" pos:column="17"/></operator> <name pos:line="46" pos:column="15">used<pos:position pos:line="46" pos:column="19"/></name></expr>)<pos:position pos:line="46" pos:column="20"/></condition><then pos:line="46" pos:column="20"> <block pos:line="46" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ERROR<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(
        <argument><expr><literal type="string" pos:line="48" pos:column="9">"swap plugin: Total swap space (%g) is less than used swap space (%g)."<pos:position pos:line="48" pos:column="80"/></literal></expr></argument>,
        <argument><expr><name pos:line="49" pos:column="9">total<pos:position pos:line="49" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="16">used<pos:position pos:line="49" pos:column="20"/></name></expr></argument>)<pos:position pos:line="49" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">sfree<pos:position pos:line="50" pos:column="10"/></name><argument_list pos:line="50" pos:column="10">(<argument><expr><name pos:line="50" pos:column="11">swap_entries<pos:position pos:line="50" pos:column="23"/></name></expr></argument>)<pos:position pos:line="50" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><operator pos:line="51" pos:column="13">-<pos:position pos:line="51" pos:column="14"/></operator><literal type="number" pos:line="51" pos:column="14">1<pos:position pos:line="51" pos:column="15"/></literal><operator pos:line="51" pos:column="15">)<pos:position pos:line="51" pos:column="16"/></operator></expr>;<pos:position pos:line="51" pos:column="17"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="54" pos:column="3">swap_submit_usage<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">NULL<pos:position pos:line="54" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="27">used<pos:position pos:line="54" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="33">total<pos:position pos:line="54" pos:column="38"/></name> <operator pos:line="54" pos:column="39">-<pos:position pos:line="54" pos:column="40"/></operator> <name pos:line="54" pos:column="41">used<pos:position pos:line="54" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="47">NULL<pos:position pos:line="54" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="53">NAN<pos:position pos:line="54" pos:column="56"/></name></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="58"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">sfree<pos:position pos:line="56" pos:column="8"/></name><argument_list pos:line="56" pos:column="8">(<argument><expr><name pos:line="56" pos:column="9">swap_entries<pos:position pos:line="56" pos:column="21"/></name></expr></argument>)<pos:position pos:line="56" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>
  <return pos:line="57" pos:column="3">return <expr><operator pos:line="57" pos:column="10">(<pos:position pos:line="57" pos:column="11"/></operator><literal type="number" pos:line="57" pos:column="11">0<pos:position pos:line="57" pos:column="12"/></literal><operator pos:line="57" pos:column="12">)<pos:position pos:line="57" pos:column="13"/></operator></expr>;<pos:position pos:line="57" pos:column="14"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

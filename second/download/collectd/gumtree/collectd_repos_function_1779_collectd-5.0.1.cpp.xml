<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1779_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ts_create<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">oconfig_item_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">ci<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">void<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier><modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">user_data<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list> <comment type="block" pos:line="1" pos:column="67">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ts_data_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">data<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">data<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">ts_data_t<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></operator><operator pos:line="7" pos:column="22">)<pos:position pos:line="7" pos:column="23"/></operator> <call><name pos:line="7" pos:column="24">malloc<pos:position pos:line="7" pos:column="30"/></name> <argument_list pos:line="7" pos:column="31">(<argument><expr><sizeof pos:line="7" pos:column="32">sizeof <argument_list pos:line="7" pos:column="39">(<argument><expr><operator pos:line="7" pos:column="40">*<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">data<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">data<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name> <argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="string" pos:line="10" pos:column="12">"ts_create: malloc failed."<pos:position pos:line="10" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">ENOMEM<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">)<pos:position pos:line="11" pos:column="21"/></operator></expr>;<pos:position pos:line="11" pos:column="22"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">memset<pos:position pos:line="13" pos:column="9"/></name> <argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">data<pos:position pos:line="13" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="20">sizeof <argument_list pos:line="13" pos:column="27">(<argument><expr><operator pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">data<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="15" pos:column="3">data<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">host<pos:position pos:line="15" pos:column="13"/></name></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">data<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">plugin<pos:position pos:line="16" pos:column="15"/></name></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">NULL<pos:position pos:line="16" pos:column="22"/></name></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">data<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">plugin_instance<pos:position pos:line="17" pos:column="24"/></name></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">NULL<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
  <comment type="block" pos:line="18" pos:column="3">/* data-&gt;type = NULL; */</comment>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">data<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">type_instance<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">NULL<pos:position pos:line="19" pos:column="29"/></name></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name pos:line="21" pos:column="3">status<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <literal type="number" pos:line="21" pos:column="12">0<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></expr_stmt>
  <for pos:line="22" pos:column="3">for <control pos:line="22" pos:column="7">(<init><expr><name pos:line="22" pos:column="8">i<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <literal type="number" pos:line="22" pos:column="12">0<pos:position pos:line="22" pos:column="13"/></literal></expr>;<pos:position pos:line="22" pos:column="14"/></init> <condition><expr><name pos:line="22" pos:column="15">i<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&lt;<pos:position pos:line="22" pos:column="21"/></operator> <name><name pos:line="22" pos:column="19">ci<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">children_num<pos:position pos:line="22" pos:column="35"/></name></name></expr>;<pos:position pos:line="22" pos:column="36"/></condition> <incr><expr><name pos:line="22" pos:column="37">i<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">++<pos:position pos:line="22" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="41"/></control>
  <block pos:line="23" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">oconfig_item_t<pos:position pos:line="24" pos:column="19"/></name> <modifier pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></modifier></type><name pos:line="24" pos:column="21">child<pos:position pos:line="24" pos:column="26"/></name> <init pos:line="24" pos:column="27">= <expr><name><name pos:line="24" pos:column="29">ci<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">children<pos:position pos:line="24" pos:column="41"/></name></name> <operator pos:line="24" pos:column="42">+<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">i<pos:position pos:line="24" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="46"/></decl_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><call><name pos:line="26" pos:column="10">strcasecmp<pos:position pos:line="26" pos:column="20"/></name> <argument_list pos:line="26" pos:column="21">(<argument><expr><literal type="string" pos:line="26" pos:column="22">"Host"<pos:position pos:line="26" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="30">child<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">key<pos:position pos:line="26" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call> <operator pos:line="26" pos:column="42">==<pos:position pos:line="26" pos:column="44"/></operator> <literal type="number" pos:line="26" pos:column="45">0<pos:position pos:line="26" pos:column="46"/></literal><operator pos:line="26" pos:column="46">)<pos:position pos:line="26" pos:column="47"/></operator>
        <operator pos:line="27" pos:column="9">||<pos:position pos:line="27" pos:column="11"/></operator> <operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><call><name pos:line="27" pos:column="13">strcasecmp<pos:position pos:line="27" pos:column="23"/></name> <argument_list pos:line="27" pos:column="24">(<argument><expr><literal type="string" pos:line="27" pos:column="25">"Hostname"<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="37">child<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">key<pos:position pos:line="27" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call> <operator pos:line="27" pos:column="49">==<pos:position pos:line="27" pos:column="51"/></operator> <literal type="number" pos:line="27" pos:column="52">0<pos:position pos:line="27" pos:column="53"/></literal><operator pos:line="27" pos:column="53">)<pos:position pos:line="27" pos:column="54"/></operator></expr>)<pos:position pos:line="27" pos:column="55"/></condition><then pos:line="27" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">status<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">ts_config_add_string<pos:position pos:line="28" pos:column="36"/></name> <argument_list pos:line="28" pos:column="37">(<argument><expr><operator pos:line="28" pos:column="38">&amp;<pos:position pos:line="28" pos:column="43"/></operator><name><name pos:line="28" pos:column="39">data<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">host<pos:position pos:line="28" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="51">child<pos:position pos:line="28" pos:column="56"/></name></expr></argument>,
          <comment type="block" pos:line="29" pos:column="11">/* may be empty = */</comment> <argument><expr><literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt></block></then>
    <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><call><name pos:line="30" pos:column="14">strcasecmp<pos:position pos:line="30" pos:column="24"/></name> <argument_list pos:line="30" pos:column="25">(<argument><expr><literal type="string" pos:line="30" pos:column="26">"Plugin"<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="36">child<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">-&gt;<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="43">key<pos:position pos:line="30" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call> <operator pos:line="30" pos:column="48">==<pos:position pos:line="30" pos:column="50"/></operator> <literal type="number" pos:line="30" pos:column="51">0<pos:position pos:line="30" pos:column="52"/></literal></expr>)<pos:position pos:line="30" pos:column="53"/></condition><then pos:line="30" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">status<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">ts_config_add_string<pos:position pos:line="31" pos:column="36"/></name> <argument_list pos:line="31" pos:column="37">(<argument><expr><operator pos:line="31" pos:column="38">&amp;<pos:position pos:line="31" pos:column="43"/></operator><name><name pos:line="31" pos:column="39">data<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">-&gt;<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="45">plugin<pos:position pos:line="31" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">child<pos:position pos:line="31" pos:column="58"/></name></expr></argument>,
          <comment type="block" pos:line="32" pos:column="11">/* may be empty = */</comment> <argument><expr><literal type="number" pos:line="32" pos:column="32">0<pos:position pos:line="32" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><call><name pos:line="33" pos:column="14">strcasecmp<pos:position pos:line="33" pos:column="24"/></name> <argument_list pos:line="33" pos:column="25">(<argument><expr><literal type="string" pos:line="33" pos:column="26">"PluginInstance"<pos:position pos:line="33" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="44">child<pos:position pos:line="33" pos:column="49"/></name><operator pos:line="33" pos:column="49">-&gt;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="51">key<pos:position pos:line="33" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call> <operator pos:line="33" pos:column="56">==<pos:position pos:line="33" pos:column="58"/></operator> <literal type="number" pos:line="33" pos:column="59">0<pos:position pos:line="33" pos:column="60"/></literal></expr>)<pos:position pos:line="33" pos:column="61"/></condition><then pos:line="33" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="7">status<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <call><name pos:line="34" pos:column="16">ts_config_add_string<pos:position pos:line="34" pos:column="36"/></name> <argument_list pos:line="34" pos:column="37">(<argument><expr><operator pos:line="34" pos:column="38">&amp;<pos:position pos:line="34" pos:column="43"/></operator><name><name pos:line="34" pos:column="39">data<pos:position pos:line="34" pos:column="43"/></name><operator pos:line="34" pos:column="43">-&gt;<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="45">plugin_instance<pos:position pos:line="34" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="62">child<pos:position pos:line="34" pos:column="67"/></name></expr></argument>,
          <comment type="block" pos:line="35" pos:column="11">/* may be empty = */</comment> <argument><expr><literal type="number" pos:line="35" pos:column="32">1<pos:position pos:line="35" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt></block></then></if></elseif>
<cpp:if pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">if<pos:position pos:line="36" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="36" pos:column="5">0<pos:position pos:line="36" pos:column="6"/></literal></expr></cpp:if>
    else if (strcasecmp ("Type", child-&gt;key) == 0)
      status = ts_config_add_string (&amp;data-&gt;type, child,
          <comment type="block" pos:line="39" pos:column="11">/* may be empty = */</comment> 0);
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><call><name pos:line="41" pos:column="14">strcasecmp<pos:position pos:line="41" pos:column="24"/></name> <argument_list pos:line="41" pos:column="25">(<argument><expr><literal type="string" pos:line="41" pos:column="26">"TypeInstance"<pos:position pos:line="41" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="42">child<pos:position pos:line="41" pos:column="47"/></name><operator pos:line="41" pos:column="47">-&gt;<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="49">key<pos:position pos:line="41" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call> <operator pos:line="41" pos:column="54">==<pos:position pos:line="41" pos:column="56"/></operator> <literal type="number" pos:line="41" pos:column="57">0<pos:position pos:line="41" pos:column="58"/></literal></expr>)<pos:position pos:line="41" pos:column="59"/></condition><then pos:line="41" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="7">status<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <call><name pos:line="42" pos:column="16">ts_config_add_string<pos:position pos:line="42" pos:column="36"/></name> <argument_list pos:line="42" pos:column="37">(<argument><expr><operator pos:line="42" pos:column="38">&amp;<pos:position pos:line="42" pos:column="43"/></operator><name><name pos:line="42" pos:column="39">data<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">-&gt;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="45">type_instance<pos:position pos:line="42" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="60">child<pos:position pos:line="42" pos:column="65"/></name></expr></argument>,
          <comment type="block" pos:line="43" pos:column="11">/* may be empty = */</comment> <argument><expr><literal type="number" pos:line="43" pos:column="32">1<pos:position pos:line="43" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt></block></then></if></elseif>
    <else pos:line="44" pos:column="5">else
    <block pos:line="45" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">ERROR<pos:position pos:line="46" pos:column="12"/></name> <argument_list pos:line="46" pos:column="13">(<argument><expr><literal type="string" pos:line="46" pos:column="14">"Target `set': The `%s' configuration option is not understood "<pos:position pos:line="46" pos:column="78"/></literal>
          <literal type="string" pos:line="47" pos:column="11">"and will be ignored."<pos:position pos:line="47" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="35">child<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">-&gt;<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="42">key<pos:position pos:line="47" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="48" pos:column="7">status<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <literal type="number" pos:line="48" pos:column="16">0<pos:position pos:line="48" pos:column="17"/></literal></expr>;<pos:position pos:line="48" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">status<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">!=<pos:position pos:line="51" pos:column="18"/></operator> <literal type="number" pos:line="51" pos:column="19">0<pos:position pos:line="51" pos:column="20"/></literal></expr>)<pos:position pos:line="51" pos:column="21"/></condition><then pos:line="51" pos:column="21">
      <block type="pseudo"><break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="53" pos:column="4"/></block></for>

  <comment type="block" pos:line="55" pos:column="3">/* Additional sanity-checking */</comment>
  <while pos:line="56" pos:column="3">while <condition pos:line="56" pos:column="9">(<expr><name pos:line="56" pos:column="10">status<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">==<pos:position pos:line="56" pos:column="19"/></operator> <literal type="number" pos:line="56" pos:column="20">0<pos:position pos:line="56" pos:column="21"/></literal></expr>)<pos:position pos:line="56" pos:column="22"/></condition>
  <block pos:line="57" pos:column="3">{
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">(<pos:position pos:line="58" pos:column="10"/></operator><name><name pos:line="58" pos:column="10">data<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">host<pos:position pos:line="58" pos:column="20"/></name></name> <operator pos:line="58" pos:column="21">==<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">NULL<pos:position pos:line="58" pos:column="28"/></name><operator pos:line="58" pos:column="28">)<pos:position pos:line="58" pos:column="29"/></operator>
        <operator pos:line="59" pos:column="9">&amp;&amp;<pos:position pos:line="59" pos:column="19"/></operator> <operator pos:line="59" pos:column="12">(<pos:position pos:line="59" pos:column="13"/></operator><name><name pos:line="59" pos:column="13">data<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">plugin<pos:position pos:line="59" pos:column="25"/></name></name> <operator pos:line="59" pos:column="26">==<pos:position pos:line="59" pos:column="28"/></operator> <name pos:line="59" pos:column="29">NULL<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">)<pos:position pos:line="59" pos:column="34"/></operator>
        <operator pos:line="60" pos:column="9">&amp;&amp;<pos:position pos:line="60" pos:column="19"/></operator> <operator pos:line="60" pos:column="12">(<pos:position pos:line="60" pos:column="13"/></operator><name><name pos:line="60" pos:column="13">data<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">-&gt;<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="19">plugin_instance<pos:position pos:line="60" pos:column="34"/></name></name> <operator pos:line="60" pos:column="35">==<pos:position pos:line="60" pos:column="37"/></operator> <name pos:line="60" pos:column="38">NULL<pos:position pos:line="60" pos:column="42"/></name><operator pos:line="60" pos:column="42">)<pos:position pos:line="60" pos:column="43"/></operator>
        <comment type="block" pos:line="61" pos:column="9">/* &amp;&amp; (data-&gt;type == NULL) */</comment>
        <operator pos:line="62" pos:column="9">&amp;&amp;<pos:position pos:line="62" pos:column="19"/></operator> <operator pos:line="62" pos:column="12">(<pos:position pos:line="62" pos:column="13"/></operator><name><name pos:line="62" pos:column="13">data<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">-&gt;<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="19">type_instance<pos:position pos:line="62" pos:column="32"/></name></name> <operator pos:line="62" pos:column="33">==<pos:position pos:line="62" pos:column="35"/></operator> <name pos:line="62" pos:column="36">NULL<pos:position pos:line="62" pos:column="40"/></name><operator pos:line="62" pos:column="40">)<pos:position pos:line="62" pos:column="41"/></operator></expr>)<pos:position pos:line="62" pos:column="42"/></condition><then pos:line="62" pos:column="42">
    <block pos:line="63" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">ERROR<pos:position pos:line="64" pos:column="12"/></name> <argument_list pos:line="64" pos:column="13">(<argument><expr><literal type="string" pos:line="64" pos:column="14">"Target `set': You need to set at lease one of `Host', "<pos:position pos:line="64" pos:column="70"/></literal>
          <literal type="string" pos:line="65" pos:column="11">"`Plugin', `PluginInstance', `Type', or `TypeInstance'."<pos:position pos:line="65" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><name pos:line="66" pos:column="7">status<pos:position pos:line="66" pos:column="13"/></name> <operator pos:line="66" pos:column="14">=<pos:position pos:line="66" pos:column="15"/></operator> <operator pos:line="66" pos:column="16">-<pos:position pos:line="66" pos:column="17"/></operator><literal type="number" pos:line="66" pos:column="17">1<pos:position pos:line="66" pos:column="18"/></literal></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <break pos:line="69" pos:column="5">break;<pos:position pos:line="69" pos:column="11"/></break>
  }<pos:position pos:line="70" pos:column="4"/></block></while>

  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><name pos:line="72" pos:column="7">status<pos:position pos:line="72" pos:column="13"/></name> <operator pos:line="72" pos:column="14">!=<pos:position pos:line="72" pos:column="16"/></operator> <literal type="number" pos:line="72" pos:column="17">0<pos:position pos:line="72" pos:column="18"/></literal></expr>)<pos:position pos:line="72" pos:column="19"/></condition><then pos:line="72" pos:column="19">
  <block pos:line="73" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">ts_destroy<pos:position pos:line="74" pos:column="15"/></name> <argument_list pos:line="74" pos:column="16">(<argument><expr><operator pos:line="74" pos:column="17">(<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="18">void<pos:position pos:line="74" pos:column="22"/></name> <operator pos:line="74" pos:column="23">*<pos:position pos:line="74" pos:column="24"/></operator><operator pos:line="74" pos:column="24">)<pos:position pos:line="74" pos:column="25"/></operator> <operator pos:line="74" pos:column="26">&amp;<pos:position pos:line="74" pos:column="31"/></operator><name pos:line="74" pos:column="27">data<pos:position pos:line="74" pos:column="31"/></name></expr></argument>)<pos:position pos:line="74" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="33"/></expr_stmt>
    <return pos:line="75" pos:column="5">return <expr><operator pos:line="75" pos:column="12">(<pos:position pos:line="75" pos:column="13"/></operator><name pos:line="75" pos:column="13">status<pos:position pos:line="75" pos:column="19"/></name><operator pos:line="75" pos:column="19">)<pos:position pos:line="75" pos:column="20"/></operator></expr>;<pos:position pos:line="75" pos:column="21"/></return>
  }<pos:position pos:line="76" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="78" pos:column="3">*<pos:position pos:line="78" pos:column="4"/></operator><name pos:line="78" pos:column="4">user_data<pos:position pos:line="78" pos:column="13"/></name> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <name pos:line="78" pos:column="16">data<pos:position pos:line="78" pos:column="20"/></name></expr>;<pos:position pos:line="78" pos:column="21"/></expr_stmt>
  <return pos:line="79" pos:column="3">return <expr><operator pos:line="79" pos:column="10">(<pos:position pos:line="79" pos:column="11"/></operator><literal type="number" pos:line="79" pos:column="11">0<pos:position pos:line="79" pos:column="12"/></literal><operator pos:line="79" pos:column="12">)<pos:position pos:line="79" pos:column="13"/></operator></expr>;<pos:position pos:line="79" pos:column="14"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

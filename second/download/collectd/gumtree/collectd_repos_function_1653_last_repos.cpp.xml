<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1653_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rrd_cache_insert<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">filename<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">value<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">cdtime_t<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">value_time<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list> <block pos:line="2" pos:column="50">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">rrd_cache_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">rc<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">NULL<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">new_rc<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier><modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">values_new<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">pthread_mutex_lock<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><operator pos:line="7" pos:column="22">&amp;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="23">cache_lock<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* This shouldn't happen, but it did happen at least once, so we'll be
   * careful. */</comment>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">cache<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">==<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block pos:line="11" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">pthread_mutex_unlock<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><operator pos:line="12" pos:column="26">&amp;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="27">cache_lock<pos:position pos:line="12" pos:column="37"/></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">WARNING<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><literal type="string" pos:line="13" pos:column="13">"rrdtool plugin: cache == NULL."<pos:position pos:line="13" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">c_avl_get<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">cache<pos:position pos:line="17" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="20">filename<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="30">(<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">void<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">*<pos:position pos:line="17" pos:column="37"/></operator><operator pos:line="17" pos:column="37">)<pos:position pos:line="17" pos:column="38"/></operator><operator pos:line="17" pos:column="38">&amp;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="39">rc<pos:position pos:line="17" pos:column="41"/></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">rc<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">==<pos:position pos:line="19" pos:column="12"/></operator> <name pos:line="19" pos:column="13">NULL<pos:position pos:line="19" pos:column="17"/></name></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18"> <block pos:line="19" pos:column="19">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">rc<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <call><name pos:line="20" pos:column="10">malloc<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><sizeof pos:line="20" pos:column="17">sizeof<argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">rc<pos:position pos:line="20" pos:column="27"/></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">rc<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">==<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">NULL<pos:position pos:line="21" pos:column="19"/></name></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20"> <block pos:line="21" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">pthread_mutex_unlock<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><operator pos:line="22" pos:column="28">&amp;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="29">cache_lock<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">-<pos:position pos:line="23" pos:column="15"/></operator><literal type="number" pos:line="23" pos:column="15">1<pos:position pos:line="23" pos:column="16"/></literal></expr>;<pos:position pos:line="23" pos:column="17"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">rc<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">values_num<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <literal type="number" pos:line="25" pos:column="22">0<pos:position pos:line="25" pos:column="23"/></literal></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">rc<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">values<pos:position pos:line="26" pos:column="15"/></name></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">NULL<pos:position pos:line="26" pos:column="22"/></name></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">rc<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">first_value<pos:position pos:line="27" pos:column="20"/></name></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <literal type="number" pos:line="27" pos:column="23">0<pos:position pos:line="27" pos:column="24"/></literal></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">rc<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">last_value<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <literal type="number" pos:line="28" pos:column="22">0<pos:position pos:line="28" pos:column="23"/></literal></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">rc<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">-&gt;<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="9">random_variation<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <call><name pos:line="29" pos:column="28">rrd_get_random_variation<pos:position pos:line="29" pos:column="52"/></name><argument_list pos:line="29" pos:column="52">()<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">rc<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">flags<pos:position pos:line="30" pos:column="14"/></name></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">FLAG_NONE<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">new_rc<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <literal type="number" pos:line="31" pos:column="14">1<pos:position pos:line="31" pos:column="15"/></literal></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">assert<pos:position pos:line="34" pos:column="9"/></name><argument_list pos:line="34" pos:column="9">(<argument><expr><name pos:line="34" pos:column="10">value_time<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">&gt;<pos:position pos:line="34" pos:column="25"/></operator> <literal type="number" pos:line="34" pos:column="23">0<pos:position pos:line="34" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt> <comment type="block" pos:line="34" pos:column="27">/* plugin_dispatch() ensures this. */</comment>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name><name pos:line="35" pos:column="7">rc<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">-&gt;<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="11">last_value<pos:position pos:line="35" pos:column="21"/></name></name> <operator pos:line="35" pos:column="22">&gt;=<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="25">value_time<pos:position pos:line="35" pos:column="35"/></name></expr>)<pos:position pos:line="35" pos:column="36"/></condition><then pos:line="35" pos:column="36"> <block pos:line="35" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">pthread_mutex_unlock<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><operator pos:line="36" pos:column="26">&amp;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="27">cache_lock<pos:position pos:line="36" pos:column="37"/></name></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">DEBUG<pos:position pos:line="37" pos:column="10"/></name><argument_list pos:line="37" pos:column="10">(<argument><expr><literal type="string" pos:line="37" pos:column="11">"rrdtool plugin: (rc-&gt;last_value = %"<pos:position pos:line="37" pos:column="51"/></literal> <name pos:line="37" pos:column="49">PRIu64<pos:position pos:line="37" pos:column="55"/></name> <literal type="string" pos:line="37" pos:column="56">") "<pos:position pos:line="37" pos:column="60"/></literal>
          <literal type="string" pos:line="38" pos:column="11">"&gt;= (value_time = %"<pos:position pos:line="38" pos:column="34"/></literal> <name pos:line="38" pos:column="32">PRIu64<pos:position pos:line="38" pos:column="38"/></name> <literal type="string" pos:line="38" pos:column="39">")"<pos:position pos:line="38" pos:column="42"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="39" pos:column="11">rc<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">last_value<pos:position pos:line="39" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="27">value_time<pos:position pos:line="39" pos:column="37"/></name></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><operator pos:line="40" pos:column="12">-<pos:position pos:line="40" pos:column="13"/></operator><literal type="number" pos:line="40" pos:column="13">1<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="43" pos:column="3">values_new<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator>
      <call><name pos:line="44" pos:column="7">realloc<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><operator pos:line="44" pos:column="15">(<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="16">void<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">*<pos:position pos:line="44" pos:column="22"/></operator><operator pos:line="44" pos:column="22">)<pos:position pos:line="44" pos:column="23"/></operator><name><name pos:line="44" pos:column="23">rc<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">-&gt;<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="27">values<pos:position pos:line="44" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="35">(<pos:position pos:line="44" pos:column="36"/></operator><name><name pos:line="44" pos:column="36">rc<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">values_num<pos:position pos:line="44" pos:column="50"/></name></name> <operator pos:line="44" pos:column="51">+<pos:position pos:line="44" pos:column="52"/></operator> <literal type="number" pos:line="44" pos:column="53">1<pos:position pos:line="44" pos:column="54"/></literal><operator pos:line="44" pos:column="54">)<pos:position pos:line="44" pos:column="55"/></operator> <operator pos:line="44" pos:column="56">*<pos:position pos:line="44" pos:column="57"/></operator> <sizeof pos:line="44" pos:column="58">sizeof<argument_list pos:line="44" pos:column="64">(<argument><expr><name pos:line="44" pos:column="65">char<pos:position pos:line="44" pos:column="69"/></name> <operator pos:line="44" pos:column="70">*<pos:position pos:line="44" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="44" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="74"/></expr_stmt>
  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><name pos:line="45" pos:column="7">values_new<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">==<pos:position pos:line="45" pos:column="20"/></operator> <name pos:line="45" pos:column="21">NULL<pos:position pos:line="45" pos:column="25"/></name></expr>)<pos:position pos:line="45" pos:column="26"/></condition><then pos:line="45" pos:column="26"> <block pos:line="45" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">char<pos:position pos:line="46" pos:column="9"/></name></type> <name><name pos:line="46" pos:column="10">errbuf<pos:position pos:line="46" pos:column="16"/></name><index pos:line="46" pos:column="16">[<expr><literal type="number" pos:line="46" pos:column="17">1024<pos:position pos:line="46" pos:column="21"/></literal></expr>]<pos:position pos:line="46" pos:column="22"/></index></name></decl>;<pos:position pos:line="46" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="47" pos:column="5">void<pos:position pos:line="47" pos:column="9"/></name> <modifier pos:line="47" pos:column="10">*<pos:position pos:line="47" pos:column="11"/></modifier></type><name pos:line="47" pos:column="11">cache_key<pos:position pos:line="47" pos:column="20"/></name> <init pos:line="47" pos:column="21">= <expr><name pos:line="47" pos:column="23">NULL<pos:position pos:line="47" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">sstrerror<pos:position pos:line="49" pos:column="14"/></name><argument_list pos:line="49" pos:column="14">(<argument><expr><name pos:line="49" pos:column="15">errno<pos:position pos:line="49" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="22">errbuf<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="30">sizeof<argument_list pos:line="49" pos:column="36">(<argument><expr><name pos:line="49" pos:column="37">errbuf<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">c_avl_remove<pos:position pos:line="51" pos:column="17"/></name><argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">cache<pos:position pos:line="51" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="25">filename<pos:position pos:line="51" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="35">&amp;<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="36">cache_key<pos:position pos:line="51" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="47">NULL<pos:position pos:line="51" pos:column="51"/></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">pthread_mutex_unlock<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><operator pos:line="52" pos:column="26">&amp;<pos:position pos:line="52" pos:column="31"/></operator><name pos:line="52" pos:column="27">cache_lock<pos:position pos:line="52" pos:column="37"/></name></expr></argument>)<pos:position pos:line="52" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">ERROR<pos:position pos:line="54" pos:column="10"/></name><argument_list pos:line="54" pos:column="10">(<argument><expr><literal type="string" pos:line="54" pos:column="11">"rrdtool plugin: realloc failed: %s"<pos:position pos:line="54" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="49">errbuf<pos:position pos:line="54" pos:column="55"/></name></expr></argument>)<pos:position pos:line="54" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="56" pos:column="5">sfree<pos:position pos:line="56" pos:column="10"/></name><argument_list pos:line="56" pos:column="10">(<argument><expr><name pos:line="56" pos:column="11">cache_key<pos:position pos:line="56" pos:column="20"/></name></expr></argument>)<pos:position pos:line="56" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">sfree<pos:position pos:line="57" pos:column="10"/></name><argument_list pos:line="57" pos:column="10">(<argument><expr><name><name pos:line="57" pos:column="11">rc<pos:position pos:line="57" pos:column="13"/></name><operator pos:line="57" pos:column="13">-&gt;<pos:position pos:line="57" pos:column="18"/></operator><name pos:line="57" pos:column="15">values<pos:position pos:line="57" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">sfree<pos:position pos:line="58" pos:column="10"/></name><argument_list pos:line="58" pos:column="10">(<argument><expr><name pos:line="58" pos:column="11">rc<pos:position pos:line="58" pos:column="13"/></name></expr></argument>)<pos:position pos:line="58" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="15"/></expr_stmt>
    <return pos:line="59" pos:column="5">return <expr><operator pos:line="59" pos:column="12">-<pos:position pos:line="59" pos:column="13"/></operator><literal type="number" pos:line="59" pos:column="13">1<pos:position pos:line="59" pos:column="14"/></literal></expr>;<pos:position pos:line="59" pos:column="15"/></return>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="61" pos:column="3">rc<pos:position pos:line="61" pos:column="5"/></name><operator pos:line="61" pos:column="5">-&gt;<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="7">values<pos:position pos:line="61" pos:column="13"/></name></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <name pos:line="61" pos:column="16">values_new<pos:position pos:line="61" pos:column="26"/></name></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="63" pos:column="3">rc<pos:position pos:line="63" pos:column="5"/></name><operator pos:line="63" pos:column="5">-&gt;<pos:position pos:line="63" pos:column="10"/></operator><name pos:line="63" pos:column="7">values<pos:position pos:line="63" pos:column="13"/></name><index pos:line="63" pos:column="13">[<expr><name><name pos:line="63" pos:column="14">rc<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">values_num<pos:position pos:line="63" pos:column="28"/></name></name></expr>]<pos:position pos:line="63" pos:column="29"/></index></name> <operator pos:line="63" pos:column="30">=<pos:position pos:line="63" pos:column="31"/></operator> <call><name pos:line="63" pos:column="32">strdup<pos:position pos:line="63" pos:column="38"/></name><argument_list pos:line="63" pos:column="38">(<argument><expr><name pos:line="63" pos:column="39">value<pos:position pos:line="63" pos:column="44"/></name></expr></argument>)<pos:position pos:line="63" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="46"/></expr_stmt>
  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><name><name pos:line="64" pos:column="7">rc<pos:position pos:line="64" pos:column="9"/></name><operator pos:line="64" pos:column="9">-&gt;<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="11">values<pos:position pos:line="64" pos:column="17"/></name><index pos:line="64" pos:column="17">[<expr><name><name pos:line="64" pos:column="18">rc<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">-&gt;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="22">values_num<pos:position pos:line="64" pos:column="32"/></name></name></expr>]<pos:position pos:line="64" pos:column="33"/></index></name> <operator pos:line="64" pos:column="34">!=<pos:position pos:line="64" pos:column="36"/></operator> <name pos:line="64" pos:column="37">NULL<pos:position pos:line="64" pos:column="41"/></name></expr>)<pos:position pos:line="64" pos:column="42"/></condition><then pos:line="64" pos:column="42">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="5">rc<pos:position pos:line="65" pos:column="7"/></name><operator pos:line="65" pos:column="7">-&gt;<pos:position pos:line="65" pos:column="12"/></operator><name pos:line="65" pos:column="9">values_num<pos:position pos:line="65" pos:column="19"/></name></name><operator pos:line="65" pos:column="19">++<pos:position pos:line="65" pos:column="21"/></operator></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt></block></then></if>

  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><name><name pos:line="67" pos:column="7">rc<pos:position pos:line="67" pos:column="9"/></name><operator pos:line="67" pos:column="9">-&gt;<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="11">values_num<pos:position pos:line="67" pos:column="21"/></name></name> <operator pos:line="67" pos:column="22">==<pos:position pos:line="67" pos:column="24"/></operator> <literal type="number" pos:line="67" pos:column="25">1<pos:position pos:line="67" pos:column="26"/></literal></expr>)<pos:position pos:line="67" pos:column="27"/></condition><then pos:line="67" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="68" pos:column="5">rc<pos:position pos:line="68" pos:column="7"/></name><operator pos:line="68" pos:column="7">-&gt;<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="9">first_value<pos:position pos:line="68" pos:column="20"/></name></name> <operator pos:line="68" pos:column="21">=<pos:position pos:line="68" pos:column="22"/></operator> <name pos:line="68" pos:column="23">value_time<pos:position pos:line="68" pos:column="33"/></name></expr>;<pos:position pos:line="68" pos:column="34"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="69" pos:column="3">rc<pos:position pos:line="69" pos:column="5"/></name><operator pos:line="69" pos:column="5">-&gt;<pos:position pos:line="69" pos:column="10"/></operator><name pos:line="69" pos:column="7">last_value<pos:position pos:line="69" pos:column="17"/></name></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <name pos:line="69" pos:column="20">value_time<pos:position pos:line="69" pos:column="30"/></name></expr>;<pos:position pos:line="69" pos:column="31"/></expr_stmt>

  <comment type="block" pos:line="71" pos:column="3">/* Insert if this is the first value */</comment>
  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><name pos:line="72" pos:column="7">new_rc<pos:position pos:line="72" pos:column="13"/></name> <operator pos:line="72" pos:column="14">==<pos:position pos:line="72" pos:column="16"/></operator> <literal type="number" pos:line="72" pos:column="17">1<pos:position pos:line="72" pos:column="18"/></literal></expr>)<pos:position pos:line="72" pos:column="19"/></condition><then pos:line="72" pos:column="19"> <block pos:line="72" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="73" pos:column="5">void<pos:position pos:line="73" pos:column="9"/></name> <modifier pos:line="73" pos:column="10">*<pos:position pos:line="73" pos:column="11"/></modifier></type><name pos:line="73" pos:column="11">cache_key<pos:position pos:line="73" pos:column="20"/></name> <init pos:line="73" pos:column="21">= <expr><call><name pos:line="73" pos:column="23">strdup<pos:position pos:line="73" pos:column="29"/></name><argument_list pos:line="73" pos:column="29">(<argument><expr><name pos:line="73" pos:column="30">filename<pos:position pos:line="73" pos:column="38"/></name></expr></argument>)<pos:position pos:line="73" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="73" pos:column="40"/></decl_stmt>

    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name pos:line="75" pos:column="9">cache_key<pos:position pos:line="75" pos:column="18"/></name> <operator pos:line="75" pos:column="19">==<pos:position pos:line="75" pos:column="21"/></operator> <name pos:line="75" pos:column="22">NULL<pos:position pos:line="75" pos:column="26"/></name></expr>)<pos:position pos:line="75" pos:column="27"/></condition><then pos:line="75" pos:column="27"> <block pos:line="75" pos:column="28">{
      <decl_stmt><decl><type><name pos:line="76" pos:column="7">char<pos:position pos:line="76" pos:column="11"/></name></type> <name><name pos:line="76" pos:column="12">errbuf<pos:position pos:line="76" pos:column="18"/></name><index pos:line="76" pos:column="18">[<expr><literal type="number" pos:line="76" pos:column="19">1024<pos:position pos:line="76" pos:column="23"/></literal></expr>]<pos:position pos:line="76" pos:column="24"/></index></name></decl>;<pos:position pos:line="76" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">sstrerror<pos:position pos:line="77" pos:column="16"/></name><argument_list pos:line="77" pos:column="16">(<argument><expr><name pos:line="77" pos:column="17">errno<pos:position pos:line="77" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="24">errbuf<pos:position pos:line="77" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="32">sizeof<argument_list pos:line="77" pos:column="38">(<argument><expr><name pos:line="77" pos:column="39">errbuf<pos:position pos:line="77" pos:column="45"/></name></expr></argument>)<pos:position pos:line="77" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="77" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="48"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="79" pos:column="7">pthread_mutex_unlock<pos:position pos:line="79" pos:column="27"/></name><argument_list pos:line="79" pos:column="27">(<argument><expr><operator pos:line="79" pos:column="28">&amp;<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="29">cache_lock<pos:position pos:line="79" pos:column="39"/></name></expr></argument>)<pos:position pos:line="79" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="41"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="81" pos:column="7">ERROR<pos:position pos:line="81" pos:column="12"/></name><argument_list pos:line="81" pos:column="12">(<argument><expr><literal type="string" pos:line="81" pos:column="13">"rrdtool plugin: strdup failed: %s"<pos:position pos:line="81" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="50">errbuf<pos:position pos:line="81" pos:column="56"/></name></expr></argument>)<pos:position pos:line="81" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="58"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="83" pos:column="7">sfree<pos:position pos:line="83" pos:column="12"/></name><argument_list pos:line="83" pos:column="12">(<argument><expr><name><name pos:line="83" pos:column="13">rc<pos:position pos:line="83" pos:column="15"/></name><operator pos:line="83" pos:column="15">-&gt;<pos:position pos:line="83" pos:column="20"/></operator><name pos:line="83" pos:column="17">values<pos:position pos:line="83" pos:column="23"/></name><index pos:line="83" pos:column="23">[<expr><literal type="number" pos:line="83" pos:column="24">0<pos:position pos:line="83" pos:column="25"/></literal></expr>]<pos:position pos:line="83" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="83" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="84" pos:column="7">sfree<pos:position pos:line="84" pos:column="12"/></name><argument_list pos:line="84" pos:column="12">(<argument><expr><name><name pos:line="84" pos:column="13">rc<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">-&gt;<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="17">values<pos:position pos:line="84" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="85" pos:column="7">sfree<pos:position pos:line="85" pos:column="12"/></name><argument_list pos:line="85" pos:column="12">(<argument><expr><name pos:line="85" pos:column="13">rc<pos:position pos:line="85" pos:column="15"/></name></expr></argument>)<pos:position pos:line="85" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="17"/></expr_stmt>
      <return pos:line="86" pos:column="7">return <expr><operator pos:line="86" pos:column="14">-<pos:position pos:line="86" pos:column="15"/></operator><literal type="number" pos:line="86" pos:column="15">1<pos:position pos:line="86" pos:column="16"/></literal></expr>;<pos:position pos:line="86" pos:column="17"/></return>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="89" pos:column="5">c_avl_insert<pos:position pos:line="89" pos:column="17"/></name><argument_list pos:line="89" pos:column="17">(<argument><expr><name pos:line="89" pos:column="18">cache<pos:position pos:line="89" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="25">cache_key<pos:position pos:line="89" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="36">rc<pos:position pos:line="89" pos:column="38"/></name></expr></argument>)<pos:position pos:line="89" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="90" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="92" pos:column="3">DEBUG<pos:position pos:line="92" pos:column="8"/></name><argument_list pos:line="92" pos:column="8">(<argument><expr><literal type="string" pos:line="92" pos:column="9">"rrdtool plugin: rrd_cache_insert: file = %s; "<pos:position pos:line="92" pos:column="56"/></literal>
        <literal type="string" pos:line="93" pos:column="9">"values_num = %i; age = %.3f;"<pos:position pos:line="93" pos:column="39"/></literal></expr></argument>,
        <argument><expr><name pos:line="94" pos:column="9">filename<pos:position pos:line="94" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="19">rc<pos:position pos:line="94" pos:column="21"/></name><operator pos:line="94" pos:column="21">-&gt;<pos:position pos:line="94" pos:column="26"/></operator><name pos:line="94" pos:column="23">values_num<pos:position pos:line="94" pos:column="33"/></name></name></expr></argument>,
        <argument><expr><call><name pos:line="95" pos:column="9">CDTIME_T_TO_DOUBLE<pos:position pos:line="95" pos:column="27"/></name><argument_list pos:line="95" pos:column="27">(<argument><expr><name><name pos:line="95" pos:column="28">rc<pos:position pos:line="95" pos:column="30"/></name><operator pos:line="95" pos:column="30">-&gt;<pos:position pos:line="95" pos:column="35"/></operator><name pos:line="95" pos:column="32">last_value<pos:position pos:line="95" pos:column="42"/></name></name> <operator pos:line="95" pos:column="43">-<pos:position pos:line="95" pos:column="44"/></operator> <name><name pos:line="95" pos:column="45">rc<pos:position pos:line="95" pos:column="47"/></name><operator pos:line="95" pos:column="47">-&gt;<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="49">first_value<pos:position pos:line="95" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="95" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="63"/></expr_stmt>

  <if pos:line="97" pos:column="3">if <condition pos:line="97" pos:column="6">(<expr><operator pos:line="97" pos:column="7">(<pos:position pos:line="97" pos:column="8"/></operator><name><name pos:line="97" pos:column="8">rc<pos:position pos:line="97" pos:column="10"/></name><operator pos:line="97" pos:column="10">-&gt;<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="12">last_value<pos:position pos:line="97" pos:column="22"/></name></name> <operator pos:line="97" pos:column="23">-<pos:position pos:line="97" pos:column="24"/></operator> <name><name pos:line="97" pos:column="25">rc<pos:position pos:line="97" pos:column="27"/></name><operator pos:line="97" pos:column="27">-&gt;<pos:position pos:line="97" pos:column="32"/></operator><name pos:line="97" pos:column="29">first_value<pos:position pos:line="97" pos:column="40"/></name></name><operator pos:line="97" pos:column="40">)<pos:position pos:line="97" pos:column="41"/></operator> <operator pos:line="97" pos:column="42">&gt;=<pos:position pos:line="97" pos:column="47"/></operator>
      <operator pos:line="98" pos:column="7">(<pos:position pos:line="98" pos:column="8"/></operator><name pos:line="98" pos:column="8">cache_timeout<pos:position pos:line="98" pos:column="21"/></name> <operator pos:line="98" pos:column="22">+<pos:position pos:line="98" pos:column="23"/></operator> <name><name pos:line="98" pos:column="24">rc<pos:position pos:line="98" pos:column="26"/></name><operator pos:line="98" pos:column="26">-&gt;<pos:position pos:line="98" pos:column="31"/></operator><name pos:line="98" pos:column="28">random_variation<pos:position pos:line="98" pos:column="44"/></name></name><operator pos:line="98" pos:column="44">)<pos:position pos:line="98" pos:column="45"/></operator></expr>)<pos:position pos:line="98" pos:column="46"/></condition><then pos:line="98" pos:column="46"> <block pos:line="98" pos:column="47">{
    <comment type="block" pos:line="99" pos:column="5">/* XXX: If you need to lock both, cache_lock and queue_lock, at
     * the same time, ALWAYS lock `cache_lock' first! */</comment>
    <if pos:line="101" pos:column="5">if <condition pos:line="101" pos:column="8">(<expr><name><name pos:line="101" pos:column="9">rc<pos:position pos:line="101" pos:column="11"/></name><operator pos:line="101" pos:column="11">-&gt;<pos:position pos:line="101" pos:column="16"/></operator><name pos:line="101" pos:column="13">flags<pos:position pos:line="101" pos:column="18"/></name></name> <operator pos:line="101" pos:column="19">==<pos:position pos:line="101" pos:column="21"/></operator> <name pos:line="101" pos:column="22">FLAG_NONE<pos:position pos:line="101" pos:column="31"/></name></expr>)<pos:position pos:line="101" pos:column="32"/></condition><then pos:line="101" pos:column="32"> <block pos:line="101" pos:column="33">{
      <decl_stmt><decl><type><name pos:line="102" pos:column="7">int<pos:position pos:line="102" pos:column="10"/></name></type> <name pos:line="102" pos:column="11">status<pos:position pos:line="102" pos:column="17"/></name></decl>;<pos:position pos:line="102" pos:column="18"/></decl_stmt>

      <expr_stmt><expr><name pos:line="104" pos:column="7">status<pos:position pos:line="104" pos:column="13"/></name> <operator pos:line="104" pos:column="14">=<pos:position pos:line="104" pos:column="15"/></operator> <call><name pos:line="104" pos:column="16">rrd_queue_enqueue<pos:position pos:line="104" pos:column="33"/></name><argument_list pos:line="104" pos:column="33">(<argument><expr><name pos:line="104" pos:column="34">filename<pos:position pos:line="104" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="44">&amp;<pos:position pos:line="104" pos:column="49"/></operator><name pos:line="104" pos:column="45">queue_head<pos:position pos:line="104" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="57">&amp;<pos:position pos:line="104" pos:column="62"/></operator><name pos:line="104" pos:column="58">queue_tail<pos:position pos:line="104" pos:column="68"/></name></expr></argument>)<pos:position pos:line="104" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="70"/></expr_stmt>
      <if pos:line="105" pos:column="7">if <condition pos:line="105" pos:column="10">(<expr><name pos:line="105" pos:column="11">status<pos:position pos:line="105" pos:column="17"/></name> <operator pos:line="105" pos:column="18">==<pos:position pos:line="105" pos:column="20"/></operator> <literal type="number" pos:line="105" pos:column="21">0<pos:position pos:line="105" pos:column="22"/></literal></expr>)<pos:position pos:line="105" pos:column="23"/></condition><then pos:line="105" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="106" pos:column="9">rc<pos:position pos:line="106" pos:column="11"/></name><operator pos:line="106" pos:column="11">-&gt;<pos:position pos:line="106" pos:column="16"/></operator><name pos:line="106" pos:column="13">flags<pos:position pos:line="106" pos:column="18"/></name></name> <operator pos:line="106" pos:column="19">=<pos:position pos:line="106" pos:column="20"/></operator> <name pos:line="106" pos:column="21">FLAG_QUEUED<pos:position pos:line="106" pos:column="32"/></name></expr>;<pos:position pos:line="106" pos:column="33"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name><name pos:line="108" pos:column="7">rc<pos:position pos:line="108" pos:column="9"/></name><operator pos:line="108" pos:column="9">-&gt;<pos:position pos:line="108" pos:column="14"/></operator><name pos:line="108" pos:column="11">random_variation<pos:position pos:line="108" pos:column="27"/></name></name> <operator pos:line="108" pos:column="28">=<pos:position pos:line="108" pos:column="29"/></operator> <call><name pos:line="108" pos:column="30">rrd_get_random_variation<pos:position pos:line="108" pos:column="54"/></name><argument_list pos:line="108" pos:column="54">()<pos:position pos:line="108" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block></then> <else pos:line="109" pos:column="7">else <block pos:line="109" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="110" pos:column="7">DEBUG<pos:position pos:line="110" pos:column="12"/></name><argument_list pos:line="110" pos:column="12">(<argument><expr><literal type="string" pos:line="110" pos:column="13">"rrdtool plugin: `%s' is already queued."<pos:position pos:line="110" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="110" pos:column="56">filename<pos:position pos:line="110" pos:column="64"/></name></expr></argument>)<pos:position pos:line="110" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="111" pos:column="6"/></block></else></if>
  }<pos:position pos:line="112" pos:column="4"/></block></then></if>

  <if pos:line="114" pos:column="3">if <condition pos:line="114" pos:column="6">(<expr><operator pos:line="114" pos:column="7">(<pos:position pos:line="114" pos:column="8"/></operator><name pos:line="114" pos:column="8">cache_timeout<pos:position pos:line="114" pos:column="21"/></name> <operator pos:line="114" pos:column="22">&gt;<pos:position pos:line="114" pos:column="26"/></operator> <literal type="number" pos:line="114" pos:column="24">0<pos:position pos:line="114" pos:column="25"/></literal><operator pos:line="114" pos:column="25">)<pos:position pos:line="114" pos:column="26"/></operator> <operator pos:line="114" pos:column="27">&amp;&amp;<pos:position pos:line="114" pos:column="37"/></operator>
      <operator pos:line="115" pos:column="7">(<pos:position pos:line="115" pos:column="8"/></operator><operator pos:line="115" pos:column="8">(<pos:position pos:line="115" pos:column="9"/></operator><call><name pos:line="115" pos:column="9">cdtime<pos:position pos:line="115" pos:column="15"/></name><argument_list pos:line="115" pos:column="15">()<pos:position pos:line="115" pos:column="17"/></argument_list></call> <operator pos:line="115" pos:column="18">-<pos:position pos:line="115" pos:column="19"/></operator> <name pos:line="115" pos:column="20">cache_flush_last<pos:position pos:line="115" pos:column="36"/></name><operator pos:line="115" pos:column="36">)<pos:position pos:line="115" pos:column="37"/></operator> <operator pos:line="115" pos:column="38">&gt;<pos:position pos:line="115" pos:column="42"/></operator> <name pos:line="115" pos:column="40">cache_flush_timeout<pos:position pos:line="115" pos:column="59"/></name><operator pos:line="115" pos:column="59">)<pos:position pos:line="115" pos:column="60"/></operator></expr>)<pos:position pos:line="115" pos:column="61"/></condition><then pos:line="115" pos:column="61">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="5">rrd_cache_flush<pos:position pos:line="116" pos:column="20"/></name><argument_list pos:line="116" pos:column="20">(<argument><expr><name pos:line="116" pos:column="21">cache_timeout<pos:position pos:line="116" pos:column="34"/></name> <operator pos:line="116" pos:column="35">+<pos:position pos:line="116" pos:column="36"/></operator> <name pos:line="116" pos:column="37">random_timeout<pos:position pos:line="116" pos:column="51"/></name></expr></argument>)<pos:position pos:line="116" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="53"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="118" pos:column="3">pthread_mutex_unlock<pos:position pos:line="118" pos:column="23"/></name><argument_list pos:line="118" pos:column="23">(<argument><expr><operator pos:line="118" pos:column="24">&amp;<pos:position pos:line="118" pos:column="29"/></operator><name pos:line="118" pos:column="25">cache_lock<pos:position pos:line="118" pos:column="35"/></name></expr></argument>)<pos:position pos:line="118" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="37"/></expr_stmt>

  <return pos:line="120" pos:column="3">return <expr><literal type="number" pos:line="120" pos:column="10">0<pos:position pos:line="120" pos:column="11"/></literal></expr>;<pos:position pos:line="120" pos:column="12"/></return>
}<pos:position pos:line="121" pos:column="2"/></block></function></unit>

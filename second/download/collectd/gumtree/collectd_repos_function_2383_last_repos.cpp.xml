<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2383_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cj_cb_number<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">ctx<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">number<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">yajl_len_t<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">number_len<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list> <block pos:line="1" pos:column="79">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">cj_t<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">db<pos:position pos:line="2" pos:column="11"/></name> <init pos:line="2" pos:column="12">= <expr><operator pos:line="2" pos:column="14">(<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">cj_t<pos:position pos:line="2" pos:column="19"/></name> <operator pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></operator><operator pos:line="2" pos:column="21">)<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">ctx<pos:position pos:line="2" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>

  <comment type="block" pos:line="4" pos:column="3">/* Create a null-terminated version of the string. */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buffer<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">number_len<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">+<pos:position pos:line="5" pos:column="27"/></operator> <literal type="number" pos:line="5" pos:column="28">1<pos:position pos:line="5" pos:column="29"/></literal></expr>]<pos:position pos:line="5" pos:column="30"/></index></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">memcpy<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name pos:line="6" pos:column="10">buffer<pos:position pos:line="6" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="18">number<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="26">number_len<pos:position pos:line="6" pos:column="36"/></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">buffer<pos:position pos:line="7" pos:column="9"/></name><index pos:line="7" pos:column="9">[<expr><sizeof pos:line="7" pos:column="10">sizeof<argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">buffer<pos:position pos:line="7" pos:column="23"/></name></expr></argument>)<pos:position pos:line="7" pos:column="24"/></argument_list></sizeof> <operator pos:line="7" pos:column="25">-<pos:position pos:line="7" pos:column="26"/></operator> <literal type="number" pos:line="7" pos:column="27">1<pos:position pos:line="7" pos:column="28"/></literal></expr>]<pos:position pos:line="7" pos:column="29"/></index></name> <operator pos:line="7" pos:column="30">=<pos:position pos:line="7" pos:column="31"/></operator> <literal type="number" pos:line="7" pos:column="32">0<pos:position pos:line="7" pos:column="33"/></literal></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">db<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">state<pos:position pos:line="9" pos:column="16"/></name><index pos:line="9" pos:column="16">[<expr><name><name pos:line="9" pos:column="17">db<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">depth<pos:position pos:line="9" pos:column="26"/></name></name></expr>]<pos:position pos:line="9" pos:column="27"/></index></name><operator pos:line="9" pos:column="27">.<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">entry<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">==<pos:position pos:line="9" pos:column="36"/></operator> <name pos:line="9" pos:column="37">NULL<pos:position pos:line="9" pos:column="41"/></name> <operator pos:line="9" pos:column="42">||<pos:position pos:line="9" pos:column="44"/></operator>
      <name><name pos:line="10" pos:column="7">db<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">state<pos:position pos:line="10" pos:column="16"/></name><index pos:line="10" pos:column="16">[<expr><name><name pos:line="10" pos:column="17">db<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">depth<pos:position pos:line="10" pos:column="26"/></name></name></expr>]<pos:position pos:line="10" pos:column="27"/></index></name><operator pos:line="10" pos:column="27">.<pos:position pos:line="10" pos:column="28"/></operator><name><name pos:line="10" pos:column="28">entry<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">type<pos:position pos:line="10" pos:column="39"/></name></name> <operator pos:line="10" pos:column="40">!=<pos:position pos:line="10" pos:column="42"/></operator> <name pos:line="10" pos:column="43">KEY<pos:position pos:line="10" pos:column="46"/></name></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47"> <block pos:line="10" pos:column="48">{
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">db<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">state<pos:position pos:line="11" pos:column="18"/></name><index pos:line="11" pos:column="18">[<expr><name><name pos:line="11" pos:column="19">db<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">depth<pos:position pos:line="11" pos:column="28"/></name></name></expr>]<pos:position pos:line="11" pos:column="29"/></index></name><operator pos:line="11" pos:column="29">.<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">entry<pos:position pos:line="11" pos:column="35"/></name> <operator pos:line="11" pos:column="36">!=<pos:position pos:line="11" pos:column="38"/></operator> <name pos:line="11" pos:column="39">NULL<pos:position pos:line="11" pos:column="43"/></name></expr>)<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44"> <block pos:line="11" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">NOTICE<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><literal type="string" pos:line="12" pos:column="14">"curl_json plugin: Found \"%s\", but the configuration expects a "<pos:position pos:line="12" pos:column="80"/></literal>
             <literal type="string" pos:line="13" pos:column="14">"map."<pos:position pos:line="13" pos:column="20"/></literal></expr></argument>,
             <argument><expr><name pos:line="14" pos:column="14">buffer<pos:position pos:line="14" pos:column="20"/></name></expr></argument>)<pos:position pos:line="14" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">cj_advance_array<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">ctx<pos:position pos:line="16" pos:column="25"/></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">CJ_CB_CONTINUE<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="20" pos:column="3">cj_key_t<pos:position pos:line="20" pos:column="11"/></name> <modifier pos:line="20" pos:column="12">*<pos:position pos:line="20" pos:column="13"/></modifier></type><name pos:line="20" pos:column="13">key<pos:position pos:line="20" pos:column="16"/></name> <init pos:line="20" pos:column="17">= <expr><name><name pos:line="20" pos:column="19">db<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">state<pos:position pos:line="20" pos:column="28"/></name><index pos:line="20" pos:column="28">[<expr><name><name pos:line="20" pos:column="29">db<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">depth<pos:position pos:line="20" pos:column="38"/></name></name></expr>]<pos:position pos:line="20" pos:column="39"/></index></name><operator pos:line="20" pos:column="39">.<pos:position pos:line="20" pos:column="40"/></operator><name><name pos:line="20" pos:column="40">entry<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">-&gt;<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="47">key<pos:position pos:line="20" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="51"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="22" pos:column="3">int<pos:position pos:line="22" pos:column="6"/></name></type> <name pos:line="22" pos:column="7">type<pos:position pos:line="22" pos:column="11"/></name> <init pos:line="22" pos:column="12">= <expr><call><name pos:line="22" pos:column="14">cj_get_type<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">key<pos:position pos:line="22" pos:column="29"/></name></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">value_t<pos:position pos:line="23" pos:column="10"/></name></type> <name pos:line="23" pos:column="11">vt<pos:position pos:line="23" pos:column="13"/></name></decl>;<pos:position pos:line="23" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">int<pos:position pos:line="24" pos:column="6"/></name></type> <name pos:line="24" pos:column="7">status<pos:position pos:line="24" pos:column="13"/></name> <init pos:line="24" pos:column="14">= <expr><call><name pos:line="24" pos:column="16">parse_value<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">buffer<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="36">&amp;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="37">vt<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">type<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="47"/></decl_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">status<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">!=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19"> <block pos:line="25" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">NOTICE<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="string" pos:line="26" pos:column="12">"curl_json plugin: Unable to parse number: \"%s\""<pos:position pos:line="26" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="64">buffer<pos:position pos:line="26" pos:column="70"/></name></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">cj_advance_array<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">ctx<pos:position pos:line="27" pos:column="25"/></name></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">CJ_CB_CONTINUE<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="31" pos:column="3">cj_submit<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">db<pos:position pos:line="31" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="17">key<pos:position pos:line="31" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="22">&amp;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="23">vt<pos:position pos:line="31" pos:column="25"/></name></expr></argument>)<pos:position pos:line="31" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">cj_advance_array<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><name pos:line="32" pos:column="20">ctx<pos:position pos:line="32" pos:column="23"/></name></expr></argument>)<pos:position pos:line="32" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>
  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">CJ_CB_CONTINUE<pos:position pos:line="33" pos:column="24"/></name></expr>;<pos:position pos:line="33" pos:column="25"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

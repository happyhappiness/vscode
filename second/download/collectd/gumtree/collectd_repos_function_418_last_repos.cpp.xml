<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_418_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nut_config<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">key<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">value<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list> <block pos:line="1" pos:column="59">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><call><name pos:line="2" pos:column="7">strcasecmp<pos:position pos:line="2" pos:column="17"/></name><argument_list pos:line="2" pos:column="17">(<argument><expr><name pos:line="2" pos:column="18">key<pos:position pos:line="2" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2" pos:column="23">"UPS"<pos:position pos:line="2" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="29"/></argument_list></call> <operator pos:line="2" pos:column="30">==<pos:position pos:line="2" pos:column="32"/></operator> <literal type="number" pos:line="2" pos:column="33">0<pos:position pos:line="2" pos:column="34"/></literal></expr>)<pos:position pos:line="2" pos:column="35"/></condition><then pos:line="2" pos:column="35">
    <block type="pseudo"><return pos:line="3" pos:column="5">return <expr><call><name pos:line="3" pos:column="12">nut_add_ups<pos:position pos:line="3" pos:column="23"/></name><argument_list pos:line="3" pos:column="23">(<argument><expr><name pos:line="3" pos:column="24">value<pos:position pos:line="3" pos:column="29"/></name></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="31"/></return></block></then>
  <elseif pos:line="4" pos:column="3">else <if pos:line="4" pos:column="8">if <condition pos:line="4" pos:column="11">(<expr><call><name pos:line="4" pos:column="12">strcasecmp<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name pos:line="4" pos:column="23">key<pos:position pos:line="4" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="28">"FORCESSL"<pos:position pos:line="4" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call> <operator pos:line="4" pos:column="40">==<pos:position pos:line="4" pos:column="42"/></operator> <literal type="number" pos:line="4" pos:column="43">0<pos:position pos:line="4" pos:column="44"/></literal></expr>)<pos:position pos:line="4" pos:column="45"/></condition><then pos:line="4" pos:column="45">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><call><name pos:line="5" pos:column="12">nut_force_ssl<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">value<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="33"/></return></block></then></if></elseif>
  <elseif pos:line="6" pos:column="3">else <if pos:line="6" pos:column="8">if <condition pos:line="6" pos:column="11">(<expr><call><name pos:line="6" pos:column="12">strcasecmp<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">key<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="28">"VERIFYPEER"<pos:position pos:line="6" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call> <operator pos:line="6" pos:column="42">==<pos:position pos:line="6" pos:column="44"/></operator> <literal type="number" pos:line="6" pos:column="45">0<pos:position pos:line="6" pos:column="46"/></literal></expr>)<pos:position pos:line="6" pos:column="47"/></condition><then pos:line="6" pos:column="47">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><call><name pos:line="7" pos:column="12">nut_verify_peer<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">value<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></return></block></then></if></elseif>
  <elseif pos:line="8" pos:column="3">else <if pos:line="8" pos:column="8">if <condition pos:line="8" pos:column="11">(<expr><call><name pos:line="8" pos:column="12">strcasecmp<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">key<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="28">"CAPATH"<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call> <operator pos:line="8" pos:column="38">==<pos:position pos:line="8" pos:column="40"/></operator> <literal type="number" pos:line="8" pos:column="41">0<pos:position pos:line="8" pos:column="42"/></literal></expr>)<pos:position pos:line="8" pos:column="43"/></condition><then pos:line="8" pos:column="43">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><call><name pos:line="9" pos:column="12">nut_ca_path<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">value<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></return></block></then></if></elseif>
  <elseif pos:line="10" pos:column="3">else <if pos:line="10" pos:column="8">if <condition pos:line="10" pos:column="11">(<expr><call><name pos:line="10" pos:column="12">strcasecmp<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">key<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="28">"CONNECTTIMEOUT"<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call> <operator pos:line="10" pos:column="46">==<pos:position pos:line="10" pos:column="48"/></operator> <literal type="number" pos:line="10" pos:column="49">0<pos:position pos:line="10" pos:column="50"/></literal></expr>)<pos:position pos:line="10" pos:column="51"/></condition><then pos:line="10" pos:column="51">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><call><name pos:line="11" pos:column="12">nut_set_connect_timeout<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">value<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></return></block></then></if></elseif>
  <else pos:line="12" pos:column="3">else
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return></block></else></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

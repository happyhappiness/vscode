<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1084_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_range<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">string<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">range_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">range<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <block pos:line="1" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">min_ptr<pos:position pos:line="2" pos:column="16"/></name></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">max_ptr<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">string<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">==<pos:position pos:line="5" pos:column="17"/></operator> <literal type="char" pos:line="5" pos:column="18">'@'<pos:position pos:line="5" pos:column="21"/></literal></expr>)<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22"> <block pos:line="5" pos:column="23">{
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">range<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">invert<pos:position pos:line="6" pos:column="18"/></name></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <literal type="number" pos:line="6" pos:column="21">1<pos:position pos:line="6" pos:column="22"/></literal></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">string<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">++<pos:position pos:line="7" pos:column="13"/></operator></expr>;<pos:position pos:line="7" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">max_ptr<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">strchr<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">string<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="28">':'<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">max_ptr<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">==<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">NULL<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
    <expr_stmt><expr><name pos:line="12" pos:column="5">min_ptr<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">max_ptr<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">string<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then> <else pos:line="14" pos:column="5">else <block pos:line="14" pos:column="10">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">min_ptr<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">string<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="16" pos:column="5">*<pos:position pos:line="16" pos:column="6"/></operator><name pos:line="16" pos:column="6">max_ptr<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <literal type="char" pos:line="16" pos:column="16">'\0'<pos:position pos:line="16" pos:column="20"/></literal></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">max_ptr<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">++<pos:position pos:line="17" pos:column="14"/></operator></expr>;<pos:position pos:line="17" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">assert<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name pos:line="20" pos:column="10">max_ptr<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">!=<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">NULL<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* `10' == `0:10' */</comment>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">min_ptr<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">==<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">NULL<pos:position pos:line="23" pos:column="22"/></name></expr>)<pos:position pos:line="23" pos:column="23"/></condition><then pos:line="23" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="5">range<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">min<pos:position pos:line="24" pos:column="15"/></name></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <literal type="number" pos:line="24" pos:column="18">0.0<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt></block></then>
  <comment type="block" pos:line="25" pos:column="3">/* :10 == ~:10 == -inf:10 */</comment>
  <elseif pos:line="26" pos:column="3">else <if pos:line="26" pos:column="8">if <condition pos:line="26" pos:column="11">(<expr><operator pos:line="26" pos:column="12">(<pos:position pos:line="26" pos:column="13"/></operator><operator pos:line="26" pos:column="13">*<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">min_ptr<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">==<pos:position pos:line="26" pos:column="24"/></operator> <literal type="char" pos:line="26" pos:column="25">'\0'<pos:position pos:line="26" pos:column="29"/></literal><operator pos:line="26" pos:column="29">)<pos:position pos:line="26" pos:column="30"/></operator> <operator pos:line="26" pos:column="31">||<pos:position pos:line="26" pos:column="33"/></operator> <operator pos:line="26" pos:column="34">(<pos:position pos:line="26" pos:column="35"/></operator><operator pos:line="26" pos:column="35">*<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="36">min_ptr<pos:position pos:line="26" pos:column="43"/></name> <operator pos:line="26" pos:column="44">==<pos:position pos:line="26" pos:column="46"/></operator> <literal type="char" pos:line="26" pos:column="47">'~'<pos:position pos:line="26" pos:column="50"/></literal><operator pos:line="26" pos:column="50">)<pos:position pos:line="26" pos:column="51"/></operator></expr>)<pos:position pos:line="26" pos:column="52"/></condition><then pos:line="26" pos:column="52">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="5">range<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">min<pos:position pos:line="27" pos:column="15"/></name></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">NAN<pos:position pos:line="27" pos:column="21"/></name></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt></block></then></if></elseif>
  <else pos:line="28" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="5">range<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">min<pos:position pos:line="29" pos:column="15"/></name></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">atof<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">min_ptr<pos:position pos:line="29" pos:column="30"/></name></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt></block></else></if>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><operator pos:line="31" pos:column="7">(<pos:position pos:line="31" pos:column="8"/></operator><operator pos:line="31" pos:column="8">*<pos:position pos:line="31" pos:column="9"/></operator><name pos:line="31" pos:column="9">max_ptr<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">==<pos:position pos:line="31" pos:column="19"/></operator> <literal type="char" pos:line="31" pos:column="20">'\0'<pos:position pos:line="31" pos:column="24"/></literal><operator pos:line="31" pos:column="24">)<pos:position pos:line="31" pos:column="25"/></operator> <operator pos:line="31" pos:column="26">||<pos:position pos:line="31" pos:column="28"/></operator> <operator pos:line="31" pos:column="29">(<pos:position pos:line="31" pos:column="30"/></operator><operator pos:line="31" pos:column="30">*<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="31">max_ptr<pos:position pos:line="31" pos:column="38"/></name> <operator pos:line="31" pos:column="39">==<pos:position pos:line="31" pos:column="41"/></operator> <literal type="char" pos:line="31" pos:column="42">'~'<pos:position pos:line="31" pos:column="45"/></literal><operator pos:line="31" pos:column="45">)<pos:position pos:line="31" pos:column="46"/></operator></expr>)<pos:position pos:line="31" pos:column="47"/></condition><then pos:line="31" pos:column="47">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="5">range<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">max<pos:position pos:line="32" pos:column="15"/></name></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">NAN<pos:position pos:line="32" pos:column="21"/></name></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt></block></then>
  <else pos:line="33" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="5">range<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">max<pos:position pos:line="34" pos:column="15"/></name></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">atof<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">max_ptr<pos:position pos:line="34" pos:column="30"/></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt></block></else></if>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

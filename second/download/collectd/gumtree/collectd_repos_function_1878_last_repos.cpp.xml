<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1878_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">backup_search_for_last_avg<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">ceph_daemon<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">d<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="62">const<pos:position pos:line="1" pos:column="67"/></specifier> <name pos:line="1" pos:column="68">char<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">ds_n<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list> <block pos:line="1" pos:column="80">{
  <for pos:line="2" pos:column="3">for <control pos:line="2" pos:column="7">(<init><decl><type><name pos:line="2" pos:column="8">int<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">i<pos:position pos:line="2" pos:column="13"/></name> <init pos:line="2" pos:column="14">= <expr><literal type="number" pos:line="2" pos:column="16">0<pos:position pos:line="2" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="18"/></init> <condition><expr><name pos:line="2" pos:column="19">i<pos:position pos:line="2" pos:column="20"/></name> <operator pos:line="2" pos:column="21">&lt;<pos:position pos:line="2" pos:column="25"/></operator> <name><name pos:line="2" pos:column="23">d<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">-&gt;<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="26">last_idx<pos:position pos:line="2" pos:column="34"/></name></name></expr>;<pos:position pos:line="2" pos:column="35"/></condition> <incr><expr><name pos:line="2" pos:column="36">i<pos:position pos:line="2" pos:column="37"/></name><operator pos:line="2" pos:column="37">++<pos:position pos:line="2" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="2" pos:column="40"/></control> <block pos:line="2" pos:column="41">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name pos:line="3" pos:column="9">strcmp<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><name><name pos:line="3" pos:column="16">d<pos:position pos:line="3" pos:column="17"/></name><operator pos:line="3" pos:column="17">-&gt;<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="19">last_poll_data<pos:position pos:line="3" pos:column="33"/></name><index pos:line="3" pos:column="33">[<expr><name pos:line="3" pos:column="34">i<pos:position pos:line="3" pos:column="35"/></name></expr>]<pos:position pos:line="3" pos:column="36"/></index></name><operator pos:line="3" pos:column="36">-&gt;<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="38">ds_name<pos:position pos:line="3" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="47">ds_n<pos:position pos:line="3" pos:column="51"/></name></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></call> <operator pos:line="3" pos:column="53">==<pos:position pos:line="3" pos:column="55"/></operator> <literal type="number" pos:line="3" pos:column="56">0<pos:position pos:line="3" pos:column="57"/></literal></expr>)<pos:position pos:line="3" pos:column="58"/></condition><then pos:line="3" pos:column="58"> <block pos:line="3" pos:column="59">{
      <return pos:line="4" pos:column="7">return <expr><name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name></expr>;<pos:position pos:line="4" pos:column="16"/></return>
    }<pos:position pos:line="5" pos:column="6"/></block></then></if>
  }<pos:position pos:line="6" pos:column="4"/></block></for>
  <return pos:line="7" pos:column="3">return <expr><operator pos:line="7" pos:column="10">-<pos:position pos:line="7" pos:column="11"/></operator><literal type="number" pos:line="7" pos:column="11">1<pos:position pos:line="7" pos:column="12"/></literal></expr>;<pos:position pos:line="7" pos:column="13"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

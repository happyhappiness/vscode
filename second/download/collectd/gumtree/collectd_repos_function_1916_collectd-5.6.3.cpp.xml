<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1916_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_part_values<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">ret_buffer<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">size_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">ret_buffer_len<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">data_set_t<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">ds<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">value_list_t<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">vl<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list> <block pos:line="2" pos:column="76">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">packet_ptr<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">packet_len<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">num_values<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">part_header_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">pkg_ph<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">uint16_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">pkg_num_values<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">uint8_t<pos:position pos:line="9" pos:column="10"/></name> <modifier pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></modifier></type><name pos:line="9" pos:column="12">pkg_values_types<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">value_t<pos:position pos:line="10" pos:column="10"/></name> <modifier pos:line="10" pos:column="11">*<pos:position pos:line="10" pos:column="12"/></modifier></type><name pos:line="10" pos:column="12">pkg_values<pos:position pos:line="10" pos:column="22"/></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">offset<pos:position pos:line="12" pos:column="16"/></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">num_values<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name><name pos:line="14" pos:column="16">vl<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">values_len<pos:position pos:line="14" pos:column="30"/></name></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">packet_len<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <sizeof pos:line="15" pos:column="16">sizeof<argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">part_header_t<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></sizeof> <operator pos:line="15" pos:column="38">+<pos:position pos:line="15" pos:column="39"/></operator> <sizeof pos:line="15" pos:column="40">sizeof<argument_list pos:line="15" pos:column="46">(<argument><expr><name pos:line="15" pos:column="47">uint16_t<pos:position pos:line="15" pos:column="55"/></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></sizeof> <operator pos:line="15" pos:column="57">+<pos:position pos:line="15" pos:column="58"/></operator>
               <operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">num_values<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></operator> <sizeof pos:line="16" pos:column="30">sizeof<argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">uint8_t<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></sizeof><operator pos:line="16" pos:column="45">)<pos:position pos:line="16" pos:column="46"/></operator> <operator pos:line="16" pos:column="47">+<pos:position pos:line="16" pos:column="48"/></operator> <operator pos:line="16" pos:column="49">(<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="50">num_values<pos:position pos:line="16" pos:column="60"/></name> <operator pos:line="16" pos:column="61">*<pos:position pos:line="16" pos:column="62"/></operator> <sizeof pos:line="16" pos:column="63">sizeof<argument_list pos:line="16" pos:column="69">(<argument><expr><name pos:line="16" pos:column="70">value_t<pos:position pos:line="16" pos:column="77"/></name></expr></argument>)<pos:position pos:line="16" pos:column="78"/></argument_list></sizeof><operator pos:line="16" pos:column="78">)<pos:position pos:line="16" pos:column="79"/></operator></expr>;<pos:position pos:line="16" pos:column="80"/></expr_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">*<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">ret_buffer_len<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="25">packet_len<pos:position pos:line="18" pos:column="35"/></name></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="21" pos:column="3">pkg_values_types<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">malloc<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">num_values<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">*<pos:position pos:line="21" pos:column="41"/></operator> <sizeof pos:line="21" pos:column="42">sizeof<argument_list pos:line="21" pos:column="48">(<argument><expr><operator pos:line="21" pos:column="49">*<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">pkg_values_types<pos:position pos:line="21" pos:column="66"/></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">pkg_values_types<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">==<pos:position pos:line="22" pos:column="26"/></operator> <name pos:line="22" pos:column="27">NULL<pos:position pos:line="22" pos:column="31"/></name></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32"> <block pos:line="22" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"network plugin: write_part_values: malloc failed."<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">-<pos:position pos:line="24" pos:column="14"/></operator><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal><operator pos:line="24" pos:column="15">)<pos:position pos:line="24" pos:column="16"/></operator></expr>;<pos:position pos:line="24" pos:column="17"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="27" pos:column="3">pkg_values<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">malloc<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">num_values<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">*<pos:position pos:line="27" pos:column="35"/></operator> <sizeof pos:line="27" pos:column="36">sizeof<argument_list pos:line="27" pos:column="42">(<argument><expr><operator pos:line="27" pos:column="43">*<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="44">pkg_values<pos:position pos:line="27" pos:column="54"/></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">pkg_values<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">==<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">NULL<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26"> <block pos:line="28" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">free<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><name pos:line="29" pos:column="10">pkg_values_types<pos:position pos:line="29" pos:column="26"/></name></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ERROR<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="string" pos:line="30" pos:column="11">"network plugin: write_part_values: malloc failed."<pos:position pos:line="30" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="64"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><operator pos:line="31" pos:column="13">-<pos:position pos:line="31" pos:column="14"/></operator><literal type="number" pos:line="31" pos:column="14">1<pos:position pos:line="31" pos:column="15"/></literal><operator pos:line="31" pos:column="15">)<pos:position pos:line="31" pos:column="16"/></operator></expr>;<pos:position pos:line="31" pos:column="17"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="34" pos:column="3">pkg_ph<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">.<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">type<pos:position pos:line="34" pos:column="14"/></name></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <call><name pos:line="34" pos:column="17">htons<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">TYPE_VALUES<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">pkg_ph<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">.<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">length<pos:position pos:line="35" pos:column="16"/></name></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <call><name pos:line="35" pos:column="19">htons<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">packet_len<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name pos:line="37" pos:column="3">pkg_num_values<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <call><name pos:line="37" pos:column="20">htons<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><operator pos:line="37" pos:column="26">(<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="27">uint16_t<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">)<pos:position pos:line="37" pos:column="36"/></operator><name><name pos:line="37" pos:column="36">vl<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">values_len<pos:position pos:line="37" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>

  <for pos:line="39" pos:column="3">for <control pos:line="39" pos:column="7">(<init><decl><type><name pos:line="39" pos:column="8">int<pos:position pos:line="39" pos:column="11"/></name></type> <name pos:line="39" pos:column="12">i<pos:position pos:line="39" pos:column="13"/></name> <init pos:line="39" pos:column="14">= <expr><literal type="number" pos:line="39" pos:column="16">0<pos:position pos:line="39" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="18"/></init> <condition><expr><name pos:line="39" pos:column="19">i<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">&lt;<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="23">num_values<pos:position pos:line="39" pos:column="33"/></name></expr>;<pos:position pos:line="39" pos:column="34"/></condition> <incr><expr><name pos:line="39" pos:column="35">i<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">++<pos:position pos:line="39" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="39"/></control> <block pos:line="39" pos:column="40">{
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">pkg_values_types<pos:position pos:line="40" pos:column="21"/></name><index pos:line="40" pos:column="21">[<expr><name pos:line="40" pos:column="22">i<pos:position pos:line="40" pos:column="23"/></name></expr>]<pos:position pos:line="40" pos:column="24"/></index></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <operator pos:line="40" pos:column="27">(<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">uint8_t<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">)<pos:position pos:line="40" pos:column="36"/></operator><name><name pos:line="40" pos:column="36">ds<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">ds<pos:position pos:line="40" pos:column="42"/></name><index pos:line="40" pos:column="42">[<expr><name pos:line="40" pos:column="43">i<pos:position pos:line="40" pos:column="44"/></name></expr>]<pos:position pos:line="40" pos:column="45"/></index></name><operator pos:line="40" pos:column="45">.<pos:position pos:line="40" pos:column="46"/></operator><name pos:line="40" pos:column="46">type<pos:position pos:line="40" pos:column="50"/></name></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>
    <switch pos:line="41" pos:column="5">switch <condition pos:line="41" pos:column="12">(<expr><name><name pos:line="41" pos:column="13">ds<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">ds<pos:position pos:line="41" pos:column="19"/></name><index pos:line="41" pos:column="19">[<expr><name pos:line="41" pos:column="20">i<pos:position pos:line="41" pos:column="21"/></name></expr>]<pos:position pos:line="41" pos:column="22"/></index></name><operator pos:line="41" pos:column="22">.<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">type<pos:position pos:line="41" pos:column="27"/></name></expr>)<pos:position pos:line="41" pos:column="28"/></condition> <block pos:line="41" pos:column="29">{
    <case pos:line="42" pos:column="5">case <expr><name pos:line="42" pos:column="10">DS_TYPE_COUNTER<pos:position pos:line="42" pos:column="25"/></name></expr>:<pos:position pos:line="42" pos:column="26"/></case>
      <expr_stmt><expr><name><name pos:line="43" pos:column="7">pkg_values<pos:position pos:line="43" pos:column="17"/></name><index pos:line="43" pos:column="17">[<expr><name pos:line="43" pos:column="18">i<pos:position pos:line="43" pos:column="19"/></name></expr>]<pos:position pos:line="43" pos:column="20"/></index></name><operator pos:line="43" pos:column="20">.<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="21">counter<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <call><name pos:line="43" pos:column="31">htonll<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><name><name pos:line="43" pos:column="38">vl<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">values<pos:position pos:line="43" pos:column="48"/></name><index pos:line="43" pos:column="48">[<expr><name pos:line="43" pos:column="49">i<pos:position pos:line="43" pos:column="50"/></name></expr>]<pos:position pos:line="43" pos:column="51"/></index></name><operator pos:line="43" pos:column="51">.<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="52">counter<pos:position pos:line="43" pos:column="59"/></name></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt>
      <break pos:line="44" pos:column="7">break;<pos:position pos:line="44" pos:column="13"/></break>

    <case pos:line="46" pos:column="5">case <expr><name pos:line="46" pos:column="10">DS_TYPE_GAUGE<pos:position pos:line="46" pos:column="23"/></name></expr>:<pos:position pos:line="46" pos:column="24"/></case>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">pkg_values<pos:position pos:line="47" pos:column="17"/></name><index pos:line="47" pos:column="17">[<expr><name pos:line="47" pos:column="18">i<pos:position pos:line="47" pos:column="19"/></name></expr>]<pos:position pos:line="47" pos:column="20"/></index></name><operator pos:line="47" pos:column="20">.<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="21">gauge<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <call><name pos:line="47" pos:column="29">htond<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name><name pos:line="47" pos:column="35">vl<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">-&gt;<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="39">values<pos:position pos:line="47" pos:column="45"/></name><index pos:line="47" pos:column="45">[<expr><name pos:line="47" pos:column="46">i<pos:position pos:line="47" pos:column="47"/></name></expr>]<pos:position pos:line="47" pos:column="48"/></index></name><operator pos:line="47" pos:column="48">.<pos:position pos:line="47" pos:column="49"/></operator><name pos:line="47" pos:column="49">gauge<pos:position pos:line="47" pos:column="54"/></name></expr></argument>)<pos:position pos:line="47" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt>
      <break pos:line="48" pos:column="7">break;<pos:position pos:line="48" pos:column="13"/></break>

    <case pos:line="50" pos:column="5">case <expr><name pos:line="50" pos:column="10">DS_TYPE_DERIVE<pos:position pos:line="50" pos:column="24"/></name></expr>:<pos:position pos:line="50" pos:column="25"/></case>
      <expr_stmt><expr><name><name pos:line="51" pos:column="7">pkg_values<pos:position pos:line="51" pos:column="17"/></name><index pos:line="51" pos:column="17">[<expr><name pos:line="51" pos:column="18">i<pos:position pos:line="51" pos:column="19"/></name></expr>]<pos:position pos:line="51" pos:column="20"/></index></name><operator pos:line="51" pos:column="20">.<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="21">derive<pos:position pos:line="51" pos:column="27"/></name> <operator pos:line="51" pos:column="28">=<pos:position pos:line="51" pos:column="29"/></operator> <call><name pos:line="51" pos:column="30">htonll<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><name><name pos:line="51" pos:column="37">vl<pos:position pos:line="51" pos:column="39"/></name><operator pos:line="51" pos:column="39">-&gt;<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="41">values<pos:position pos:line="51" pos:column="47"/></name><index pos:line="51" pos:column="47">[<expr><name pos:line="51" pos:column="48">i<pos:position pos:line="51" pos:column="49"/></name></expr>]<pos:position pos:line="51" pos:column="50"/></index></name><operator pos:line="51" pos:column="50">.<pos:position pos:line="51" pos:column="51"/></operator><name pos:line="51" pos:column="51">derive<pos:position pos:line="51" pos:column="57"/></name></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="59"/></expr_stmt>
      <break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break>

    <case pos:line="54" pos:column="5">case <expr><name pos:line="54" pos:column="10">DS_TYPE_ABSOLUTE<pos:position pos:line="54" pos:column="26"/></name></expr>:<pos:position pos:line="54" pos:column="27"/></case>
      <expr_stmt><expr><name><name pos:line="55" pos:column="7">pkg_values<pos:position pos:line="55" pos:column="17"/></name><index pos:line="55" pos:column="17">[<expr><name pos:line="55" pos:column="18">i<pos:position pos:line="55" pos:column="19"/></name></expr>]<pos:position pos:line="55" pos:column="20"/></index></name><operator pos:line="55" pos:column="20">.<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="21">absolute<pos:position pos:line="55" pos:column="29"/></name> <operator pos:line="55" pos:column="30">=<pos:position pos:line="55" pos:column="31"/></operator> <call><name pos:line="55" pos:column="32">htonll<pos:position pos:line="55" pos:column="38"/></name><argument_list pos:line="55" pos:column="38">(<argument><expr><name><name pos:line="55" pos:column="39">vl<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">-&gt;<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="43">values<pos:position pos:line="55" pos:column="49"/></name><index pos:line="55" pos:column="49">[<expr><name pos:line="55" pos:column="50">i<pos:position pos:line="55" pos:column="51"/></name></expr>]<pos:position pos:line="55" pos:column="52"/></index></name><operator pos:line="55" pos:column="52">.<pos:position pos:line="55" pos:column="53"/></operator><name pos:line="55" pos:column="53">absolute<pos:position pos:line="55" pos:column="61"/></name></expr></argument>)<pos:position pos:line="55" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="63"/></expr_stmt>
      <break pos:line="56" pos:column="7">break;<pos:position pos:line="56" pos:column="13"/></break>

    <default pos:line="58" pos:column="5">default:<pos:position pos:line="58" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">free<pos:position pos:line="59" pos:column="11"/></name><argument_list pos:line="59" pos:column="11">(<argument><expr><name pos:line="59" pos:column="12">pkg_values_types<pos:position pos:line="59" pos:column="28"/></name></expr></argument>)<pos:position pos:line="59" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">free<pos:position pos:line="60" pos:column="11"/></name><argument_list pos:line="60" pos:column="11">(<argument><expr><name pos:line="60" pos:column="12">pkg_values<pos:position pos:line="60" pos:column="22"/></name></expr></argument>)<pos:position pos:line="60" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">ERROR<pos:position pos:line="61" pos:column="12"/></name><argument_list pos:line="61" pos:column="12">(<argument><expr><literal type="string" pos:line="61" pos:column="13">"network plugin: write_part_values: "<pos:position pos:line="61" pos:column="50"/></literal>
            <literal type="string" pos:line="62" pos:column="13">"Unknown data source type: %i"<pos:position pos:line="62" pos:column="43"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="63" pos:column="13">ds<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">-&gt;<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="17">ds<pos:position pos:line="63" pos:column="19"/></name><index pos:line="63" pos:column="19">[<expr><name pos:line="63" pos:column="20">i<pos:position pos:line="63" pos:column="21"/></name></expr>]<pos:position pos:line="63" pos:column="22"/></index></name><operator pos:line="63" pos:column="22">.<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="23">type<pos:position pos:line="63" pos:column="27"/></name></expr></argument>)<pos:position pos:line="63" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="29"/></expr_stmt>
      <return pos:line="64" pos:column="7">return <expr><operator pos:line="64" pos:column="14">(<pos:position pos:line="64" pos:column="15"/></operator><operator pos:line="64" pos:column="15">-<pos:position pos:line="64" pos:column="16"/></operator><literal type="number" pos:line="64" pos:column="16">1<pos:position pos:line="64" pos:column="17"/></literal><operator pos:line="64" pos:column="17">)<pos:position pos:line="64" pos:column="18"/></operator></expr>;<pos:position pos:line="64" pos:column="19"/></return>
    }<pos:position pos:line="65" pos:column="6"/></block></switch> <comment type="block" pos:line="65" pos:column="7">/* switch (ds-&gt;ds[i].type) */</comment>
  }<pos:position pos:line="66" pos:column="4"/></block></for>   <comment type="block" pos:line="66" pos:column="7">/* for (num_values) */</comment>

  <comment type="block" pos:line="68" pos:column="3">/*
   * Use `memcpy' to write everything to the buffer, because the pointer
   * may be unaligned and some architectures, such as SPARC, can't handle
   * that.
   */</comment>
  <expr_stmt><expr><name pos:line="73" pos:column="3">packet_ptr<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">=<pos:position pos:line="73" pos:column="15"/></operator> <operator pos:line="73" pos:column="16">*<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="17">ret_buffer<pos:position pos:line="73" pos:column="27"/></name></expr>;<pos:position pos:line="73" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="74" pos:column="3">offset<pos:position pos:line="74" pos:column="9"/></name> <operator pos:line="74" pos:column="10">=<pos:position pos:line="74" pos:column="11"/></operator> <literal type="number" pos:line="74" pos:column="12">0<pos:position pos:line="74" pos:column="13"/></literal></expr>;<pos:position pos:line="74" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">memcpy<pos:position pos:line="75" pos:column="9"/></name><argument_list pos:line="75" pos:column="9">(<argument><expr><name pos:line="75" pos:column="10">packet_ptr<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">+<pos:position pos:line="75" pos:column="22"/></operator> <name pos:line="75" pos:column="23">offset<pos:position pos:line="75" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="31">&amp;<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="32">pkg_ph<pos:position pos:line="75" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="40">sizeof<argument_list pos:line="75" pos:column="46">(<argument><expr><name pos:line="75" pos:column="47">pkg_ph<pos:position pos:line="75" pos:column="53"/></name></expr></argument>)<pos:position pos:line="75" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="75" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><name pos:line="76" pos:column="3">offset<pos:position pos:line="76" pos:column="9"/></name> <operator pos:line="76" pos:column="10">+=<pos:position pos:line="76" pos:column="12"/></operator> <sizeof pos:line="76" pos:column="13">sizeof<argument_list pos:line="76" pos:column="19">(<argument><expr><name pos:line="76" pos:column="20">pkg_ph<pos:position pos:line="76" pos:column="26"/></name></expr></argument>)<pos:position pos:line="76" pos:column="27"/></argument_list></sizeof></expr>;<pos:position pos:line="76" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="77" pos:column="3">memcpy<pos:position pos:line="77" pos:column="9"/></name><argument_list pos:line="77" pos:column="9">(<argument><expr><name pos:line="77" pos:column="10">packet_ptr<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">+<pos:position pos:line="77" pos:column="22"/></operator> <name pos:line="77" pos:column="23">offset<pos:position pos:line="77" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="31">&amp;<pos:position pos:line="77" pos:column="36"/></operator><name pos:line="77" pos:column="32">pkg_num_values<pos:position pos:line="77" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="48">sizeof<argument_list pos:line="77" pos:column="54">(<argument><expr><name pos:line="77" pos:column="55">pkg_num_values<pos:position pos:line="77" pos:column="69"/></name></expr></argument>)<pos:position pos:line="77" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="77" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><name pos:line="78" pos:column="3">offset<pos:position pos:line="78" pos:column="9"/></name> <operator pos:line="78" pos:column="10">+=<pos:position pos:line="78" pos:column="12"/></operator> <sizeof pos:line="78" pos:column="13">sizeof<argument_list pos:line="78" pos:column="19">(<argument><expr><name pos:line="78" pos:column="20">pkg_num_values<pos:position pos:line="78" pos:column="34"/></name></expr></argument>)<pos:position pos:line="78" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="78" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="79" pos:column="3">memcpy<pos:position pos:line="79" pos:column="9"/></name><argument_list pos:line="79" pos:column="9">(<argument><expr><name pos:line="79" pos:column="10">packet_ptr<pos:position pos:line="79" pos:column="20"/></name> <operator pos:line="79" pos:column="21">+<pos:position pos:line="79" pos:column="22"/></operator> <name pos:line="79" pos:column="23">offset<pos:position pos:line="79" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="31">pkg_values_types<pos:position pos:line="79" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="49">num_values<pos:position pos:line="79" pos:column="59"/></name> <operator pos:line="79" pos:column="60">*<pos:position pos:line="79" pos:column="61"/></operator> <sizeof pos:line="79" pos:column="62">sizeof<argument_list pos:line="79" pos:column="68">(<argument><expr><name pos:line="79" pos:column="69">uint8_t<pos:position pos:line="79" pos:column="76"/></name></expr></argument>)<pos:position pos:line="79" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="79"/></expr_stmt>
  <expr_stmt><expr><name pos:line="80" pos:column="3">offset<pos:position pos:line="80" pos:column="9"/></name> <operator pos:line="80" pos:column="10">+=<pos:position pos:line="80" pos:column="12"/></operator> <name pos:line="80" pos:column="13">num_values<pos:position pos:line="80" pos:column="23"/></name> <operator pos:line="80" pos:column="24">*<pos:position pos:line="80" pos:column="25"/></operator> <sizeof pos:line="80" pos:column="26">sizeof<argument_list pos:line="80" pos:column="32">(<argument><expr><name pos:line="80" pos:column="33">uint8_t<pos:position pos:line="80" pos:column="40"/></name></expr></argument>)<pos:position pos:line="80" pos:column="41"/></argument_list></sizeof></expr>;<pos:position pos:line="80" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">memcpy<pos:position pos:line="81" pos:column="9"/></name><argument_list pos:line="81" pos:column="9">(<argument><expr><name pos:line="81" pos:column="10">packet_ptr<pos:position pos:line="81" pos:column="20"/></name> <operator pos:line="81" pos:column="21">+<pos:position pos:line="81" pos:column="22"/></operator> <name pos:line="81" pos:column="23">offset<pos:position pos:line="81" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="31">pkg_values<pos:position pos:line="81" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="43">num_values<pos:position pos:line="81" pos:column="53"/></name> <operator pos:line="81" pos:column="54">*<pos:position pos:line="81" pos:column="55"/></operator> <sizeof pos:line="81" pos:column="56">sizeof<argument_list pos:line="81" pos:column="62">(<argument><expr><name pos:line="81" pos:column="63">value_t<pos:position pos:line="81" pos:column="70"/></name></expr></argument>)<pos:position pos:line="81" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="81" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="73"/></expr_stmt>
  <expr_stmt><expr><name pos:line="82" pos:column="3">offset<pos:position pos:line="82" pos:column="9"/></name> <operator pos:line="82" pos:column="10">+=<pos:position pos:line="82" pos:column="12"/></operator> <name pos:line="82" pos:column="13">num_values<pos:position pos:line="82" pos:column="23"/></name> <operator pos:line="82" pos:column="24">*<pos:position pos:line="82" pos:column="25"/></operator> <sizeof pos:line="82" pos:column="26">sizeof<argument_list pos:line="82" pos:column="32">(<argument><expr><name pos:line="82" pos:column="33">value_t<pos:position pos:line="82" pos:column="40"/></name></expr></argument>)<pos:position pos:line="82" pos:column="41"/></argument_list></sizeof></expr>;<pos:position pos:line="82" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="84" pos:column="3">assert<pos:position pos:line="84" pos:column="9"/></name><argument_list pos:line="84" pos:column="9">(<argument><expr><name pos:line="84" pos:column="10">offset<pos:position pos:line="84" pos:column="16"/></name> <operator pos:line="84" pos:column="17">==<pos:position pos:line="84" pos:column="19"/></operator> <name pos:line="84" pos:column="20">packet_len<pos:position pos:line="84" pos:column="30"/></name></expr></argument>)<pos:position pos:line="84" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="86" pos:column="3">*<pos:position pos:line="86" pos:column="4"/></operator><name pos:line="86" pos:column="4">ret_buffer<pos:position pos:line="86" pos:column="14"/></name> <operator pos:line="86" pos:column="15">=<pos:position pos:line="86" pos:column="16"/></operator> <name pos:line="86" pos:column="17">packet_ptr<pos:position pos:line="86" pos:column="27"/></name> <operator pos:line="86" pos:column="28">+<pos:position pos:line="86" pos:column="29"/></operator> <name pos:line="86" pos:column="30">packet_len<pos:position pos:line="86" pos:column="40"/></name></expr>;<pos:position pos:line="86" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="87" pos:column="3">*<pos:position pos:line="87" pos:column="4"/></operator><name pos:line="87" pos:column="4">ret_buffer_len<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">-=<pos:position pos:line="87" pos:column="21"/></operator> <name pos:line="87" pos:column="22">packet_len<pos:position pos:line="87" pos:column="32"/></name></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="89" pos:column="3">free<pos:position pos:line="89" pos:column="7"/></name><argument_list pos:line="89" pos:column="7">(<argument><expr><name pos:line="89" pos:column="8">pkg_values_types<pos:position pos:line="89" pos:column="24"/></name></expr></argument>)<pos:position pos:line="89" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="90" pos:column="3">free<pos:position pos:line="90" pos:column="7"/></name><argument_list pos:line="90" pos:column="7">(<argument><expr><name pos:line="90" pos:column="8">pkg_values<pos:position pos:line="90" pos:column="18"/></name></expr></argument>)<pos:position pos:line="90" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="20"/></expr_stmt>

  <return pos:line="92" pos:column="3">return <expr><operator pos:line="92" pos:column="10">(<pos:position pos:line="92" pos:column="11"/></operator><literal type="number" pos:line="92" pos:column="11">0<pos:position pos:line="92" pos:column="12"/></literal><operator pos:line="92" pos:column="12">)<pos:position pos:line="92" pos:column="13"/></operator></expr>;<pos:position pos:line="92" pos:column="14"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_227_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">submit_percent<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">cpu_num<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">cpu_state<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">gauge_t<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">value<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list> <block pos:line="1" pos:column="71">{
  <comment type="block" pos:line="2" pos:column="3">/* This function is called for all known CPU states, but each read
   * method will only report a subset. The remaining states are left as
   * NAN and we ignore them here. */</comment>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">isnan<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">value<pos:position pos:line="5" pos:column="18"/></name></expr></argument>)<pos:position pos:line="5" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">submit_value<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">cpu_num<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">cpu_state<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="36">"percent"<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="47">(<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="48">value_t<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">)<pos:position pos:line="8" pos:column="56"/></operator><block pos:line="8" pos:column="56">{<expr><operator pos:line="8" pos:column="57">.<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="58">gauge<pos:position pos:line="8" pos:column="63"/></name> <operator pos:line="8" pos:column="64">=<pos:position pos:line="8" pos:column="65"/></operator> <name pos:line="8" pos:column="66">value<pos:position pos:line="8" pos:column="71"/></name></expr>}<pos:position pos:line="8" pos:column="72"/></block></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="74"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

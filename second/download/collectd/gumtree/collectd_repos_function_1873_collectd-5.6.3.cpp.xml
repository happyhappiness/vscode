<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1873_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mb_config_add_host<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">oconfig_item_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ci<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">mb_host_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">host<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">host<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <call><name pos:line="6" pos:column="10">calloc<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="20">sizeof<argument_list pos:line="6" pos:column="26">(<argument><expr><operator pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">host<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">host<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">ENOMEM<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">)<pos:position pos:line="8" pos:column="20"/></operator></expr>;<pos:position pos:line="8" pos:column="21"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">host<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">slaves<pos:position pos:line="9" pos:column="15"/></name></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">status<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <call><name pos:line="11" pos:column="12">cf_util_get_string_buffer<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">ci<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="42">host<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">host<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="54">sizeof<argument_list pos:line="11" pos:column="60">(<argument><expr><name><name pos:line="11" pos:column="61">host<pos:position pos:line="11" pos:column="65"/></name><operator pos:line="11" pos:column="65">-&gt;<pos:position pos:line="11" pos:column="70"/></operator><name pos:line="11" pos:column="67">host<pos:position pos:line="11" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">status<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">!=<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block pos:line="12" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">sfree<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">host<pos:position pos:line="13" pos:column="15"/></name></expr></argument>)<pos:position pos:line="13" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">status<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">)<pos:position pos:line="14" pos:column="20"/></operator></expr>;<pos:position pos:line="14" pos:column="21"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name><name pos:line="16" pos:column="7">host<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">host<pos:position pos:line="16" pos:column="17"/></name><index pos:line="16" pos:column="17">[<expr><literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>]<pos:position pos:line="16" pos:column="20"/></index></name> <operator pos:line="16" pos:column="21">==<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <block pos:line="16" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">sfree<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">host<pos:position pos:line="17" pos:column="15"/></name></expr></argument>)<pos:position pos:line="17" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">EINVAL<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">)<pos:position pos:line="18" pos:column="20"/></operator></expr>;<pos:position pos:line="18" pos:column="21"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <for pos:line="21" pos:column="3">for <control pos:line="21" pos:column="7">(<init><decl><type><name pos:line="21" pos:column="8">int<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">i<pos:position pos:line="21" pos:column="13"/></name> <init pos:line="21" pos:column="14">= <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="18"/></init> <condition><expr><name pos:line="21" pos:column="19">i<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&lt;<pos:position pos:line="21" pos:column="25"/></operator> <name><name pos:line="21" pos:column="23">ci<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">children_num<pos:position pos:line="21" pos:column="39"/></name></name></expr>;<pos:position pos:line="21" pos:column="40"/></condition> <incr><expr><name pos:line="21" pos:column="41">i<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">++<pos:position pos:line="21" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="45"/></control> <block pos:line="21" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">oconfig_item_t<pos:position pos:line="22" pos:column="19"/></name> <modifier pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></modifier></type><name pos:line="22" pos:column="21">child<pos:position pos:line="22" pos:column="26"/></name> <init pos:line="22" pos:column="27">= <expr><name><name pos:line="22" pos:column="29">ci<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">children<pos:position pos:line="22" pos:column="41"/></name></name> <operator pos:line="22" pos:column="42">+<pos:position pos:line="22" pos:column="43"/></operator> <name pos:line="22" pos:column="44">i<pos:position pos:line="22" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="46"/></decl_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">status<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <literal type="number" pos:line="23" pos:column="14">0<pos:position pos:line="23" pos:column="15"/></literal></expr>;<pos:position pos:line="23" pos:column="16"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">strcasecmp<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="string" pos:line="25" pos:column="20">"Address"<pos:position pos:line="25" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="31">child<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">key<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call> <operator pos:line="25" pos:column="43">==<pos:position pos:line="25" pos:column="45"/></operator> <literal type="number" pos:line="25" pos:column="46">0<pos:position pos:line="25" pos:column="47"/></literal></expr>)<pos:position pos:line="25" pos:column="48"/></condition><then pos:line="25" pos:column="48"> <block pos:line="25" pos:column="49">{
      <decl_stmt><decl><type><name pos:line="26" pos:column="7">char<pos:position pos:line="26" pos:column="11"/></name></type> <name><name pos:line="26" pos:column="12">buffer<pos:position pos:line="26" pos:column="18"/></name><index pos:line="26" pos:column="18">[<expr><name pos:line="26" pos:column="19">NI_MAXHOST<pos:position pos:line="26" pos:column="29"/></name></expr>]<pos:position pos:line="26" pos:column="30"/></index></name></decl>;<pos:position pos:line="26" pos:column="31"/></decl_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">status<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">child<pos:position pos:line="27" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="49">buffer<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="57">sizeof<argument_list pos:line="27" pos:column="63">(<argument><expr><name pos:line="27" pos:column="64">buffer<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="73"/></expr_stmt>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name pos:line="28" pos:column="11">status<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">==<pos:position pos:line="28" pos:column="20"/></operator> <literal type="number" pos:line="28" pos:column="21">0<pos:position pos:line="28" pos:column="22"/></literal></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="9">status<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">mb_config_set_host_address<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><name pos:line="29" pos:column="45">host<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">buffer<pos:position pos:line="29" pos:column="57"/></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt></block></then></if>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name pos:line="30" pos:column="11">status<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">==<pos:position pos:line="30" pos:column="20"/></operator> <literal type="number" pos:line="30" pos:column="21">0<pos:position pos:line="30" pos:column="22"/></literal></expr>)<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="9">host<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">conntype<pos:position pos:line="31" pos:column="23"/></name></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <name pos:line="31" pos:column="26">MBCONN_TCP<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then> <elseif pos:line="32" pos:column="7">else <if pos:line="32" pos:column="12">if <condition pos:line="32" pos:column="15">(<expr><call><name pos:line="32" pos:column="16">strcasecmp<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><literal type="string" pos:line="32" pos:column="27">"Port"<pos:position pos:line="32" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="35">child<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="42">key<pos:position pos:line="32" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call> <operator pos:line="32" pos:column="47">==<pos:position pos:line="32" pos:column="49"/></operator> <literal type="number" pos:line="32" pos:column="50">0<pos:position pos:line="32" pos:column="51"/></literal></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52"> <block pos:line="32" pos:column="53">{
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">host<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">port<pos:position pos:line="33" pos:column="17"/></name></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <call><name pos:line="33" pos:column="20">cf_util_get_port_number<pos:position pos:line="33" pos:column="43"/></name><argument_list pos:line="33" pos:column="43">(<argument><expr><name pos:line="33" pos:column="44">child<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name><name pos:line="34" pos:column="11">host<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">port<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">&lt;=<pos:position pos:line="34" pos:column="27"/></operator> <literal type="number" pos:line="34" pos:column="25">0<pos:position pos:line="34" pos:column="26"/></literal></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="9">status<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <operator pos:line="35" pos:column="18">-<pos:position pos:line="35" pos:column="19"/></operator><literal type="number" pos:line="35" pos:column="19">1<pos:position pos:line="35" pos:column="20"/></literal></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if></elseif> <elseif pos:line="36" pos:column="7">else <if pos:line="36" pos:column="12">if <condition pos:line="36" pos:column="15">(<expr><call><name pos:line="36" pos:column="16">strcasecmp<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><literal type="string" pos:line="36" pos:column="27">"Device"<pos:position pos:line="36" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="37">child<pos:position pos:line="36" pos:column="42"/></name><operator pos:line="36" pos:column="42">-&gt;<pos:position pos:line="36" pos:column="47"/></operator><name pos:line="36" pos:column="44">key<pos:position pos:line="36" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call> <operator pos:line="36" pos:column="49">==<pos:position pos:line="36" pos:column="51"/></operator> <literal type="number" pos:line="36" pos:column="52">0<pos:position pos:line="36" pos:column="53"/></literal></expr>)<pos:position pos:line="36" pos:column="54"/></condition><then pos:line="36" pos:column="54"> <block pos:line="36" pos:column="55">{
      <expr_stmt><expr><name pos:line="37" pos:column="7">status<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><name pos:line="37" pos:column="42">child<pos:position pos:line="37" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="49">host<pos:position pos:line="37" pos:column="53"/></name><operator pos:line="37" pos:column="53">-&gt;<pos:position pos:line="37" pos:column="58"/></operator><name pos:line="37" pos:column="55">node<pos:position pos:line="37" pos:column="59"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="61">sizeof<argument_list pos:line="37" pos:column="67">(<argument><expr><name><name pos:line="37" pos:column="68">host<pos:position pos:line="37" pos:column="72"/></name><operator pos:line="37" pos:column="72">-&gt;<pos:position pos:line="37" pos:column="77"/></operator><name pos:line="37" pos:column="74">node<pos:position pos:line="37" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="81"/></expr_stmt>
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><name pos:line="38" pos:column="11">status<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">==<pos:position pos:line="38" pos:column="20"/></operator> <literal type="number" pos:line="38" pos:column="21">0<pos:position pos:line="38" pos:column="22"/></literal></expr>)<pos:position pos:line="38" pos:column="23"/></condition><then pos:line="38" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="9">host<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">conntype<pos:position pos:line="39" pos:column="23"/></name></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="26">MBCONN_RTU<pos:position pos:line="39" pos:column="36"/></name></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif> <elseif pos:line="40" pos:column="7">else <if pos:line="40" pos:column="12">if <condition pos:line="40" pos:column="15">(<expr><call><name pos:line="40" pos:column="16">strcasecmp<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><literal type="string" pos:line="40" pos:column="27">"Baudrate"<pos:position pos:line="40" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="39">child<pos:position pos:line="40" pos:column="44"/></name><operator pos:line="40" pos:column="44">-&gt;<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="46">key<pos:position pos:line="40" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call> <operator pos:line="40" pos:column="51">==<pos:position pos:line="40" pos:column="53"/></operator> <literal type="number" pos:line="40" pos:column="54">0<pos:position pos:line="40" pos:column="55"/></literal></expr>)<pos:position pos:line="40" pos:column="56"/></condition><then pos:line="40" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">status<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">cf_util_get_int<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">child<pos:position pos:line="41" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="39">&amp;<pos:position pos:line="41" pos:column="44"/></operator><name><name pos:line="41" pos:column="40">host<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">-&gt;<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="46">baudrate<pos:position pos:line="41" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="56"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="42" pos:column="5">else <if pos:line="42" pos:column="10">if <condition pos:line="42" pos:column="13">(<expr><call><name pos:line="42" pos:column="14">strcasecmp<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><literal type="string" pos:line="42" pos:column="25">"Interval"<pos:position pos:line="42" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="37">child<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">-&gt;<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="44">key<pos:position pos:line="42" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call> <operator pos:line="42" pos:column="49">==<pos:position pos:line="42" pos:column="51"/></operator> <literal type="number" pos:line="42" pos:column="52">0<pos:position pos:line="42" pos:column="53"/></literal></expr>)<pos:position pos:line="42" pos:column="54"/></condition><then pos:line="42" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="7">status<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <call><name pos:line="43" pos:column="16">cf_util_get_cdtime<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><name pos:line="43" pos:column="35">child<pos:position pos:line="43" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="42">&amp;<pos:position pos:line="43" pos:column="47"/></operator><name><name pos:line="43" pos:column="43">host<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">-&gt;<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="49">interval<pos:position pos:line="43" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="44" pos:column="5">else <if pos:line="44" pos:column="10">if <condition pos:line="44" pos:column="13">(<expr><call><name pos:line="44" pos:column="14">strcasecmp<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><literal type="string" pos:line="44" pos:column="25">"Slave"<pos:position pos:line="44" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="34">child<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">-&gt;<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="41">key<pos:position pos:line="44" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call> <operator pos:line="44" pos:column="46">==<pos:position pos:line="44" pos:column="48"/></operator> <literal type="number" pos:line="44" pos:column="49">0<pos:position pos:line="44" pos:column="50"/></literal></expr>)<pos:position pos:line="44" pos:column="51"/></condition><then pos:line="44" pos:column="51">
      <comment type="block" pos:line="45" pos:column="7">/* Don't set status: Gracefully continue if a slave fails. */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="7">mb_config_add_slave<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><name pos:line="46" pos:column="27">host<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="33">child<pos:position pos:line="46" pos:column="38"/></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt></block></then></if></elseif>
    <else pos:line="47" pos:column="5">else <block pos:line="47" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">ERROR<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><literal type="string" pos:line="48" pos:column="13">"Modbus plugin: Unknown configuration option: %s"<pos:position pos:line="48" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="64">child<pos:position pos:line="48" pos:column="69"/></name><operator pos:line="48" pos:column="69">-&gt;<pos:position pos:line="48" pos:column="74"/></operator><name pos:line="48" pos:column="71">key<pos:position pos:line="48" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><name pos:line="49" pos:column="7">status<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <operator pos:line="49" pos:column="16">-<pos:position pos:line="49" pos:column="17"/></operator><literal type="number" pos:line="49" pos:column="17">1<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></else></if>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">status<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">!=<pos:position pos:line="52" pos:column="18"/></operator> <literal type="number" pos:line="52" pos:column="19">0<pos:position pos:line="52" pos:column="20"/></literal></expr>)<pos:position pos:line="52" pos:column="21"/></condition><then pos:line="52" pos:column="21">
      <block type="pseudo"><break pos:line="53" pos:column="7">break;<pos:position pos:line="53" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="54" pos:column="4"/></block></for> <comment type="block" pos:line="54" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">assert<pos:position pos:line="56" pos:column="9"/></name><argument_list pos:line="56" pos:column="9">(<argument><expr><name><name pos:line="56" pos:column="10">host<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">host<pos:position pos:line="56" pos:column="20"/></name><index pos:line="56" pos:column="20">[<expr><literal type="number" pos:line="56" pos:column="21">0<pos:position pos:line="56" pos:column="22"/></literal></expr>]<pos:position pos:line="56" pos:column="23"/></index></name> <operator pos:line="56" pos:column="24">!=<pos:position pos:line="56" pos:column="26"/></operator> <literal type="number" pos:line="56" pos:column="27">0<pos:position pos:line="56" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>
  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><name><name pos:line="57" pos:column="7">host<pos:position pos:line="57" pos:column="11"/></name><operator pos:line="57" pos:column="11">-&gt;<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="13">node<pos:position pos:line="57" pos:column="17"/></name><index pos:line="57" pos:column="17">[<expr><literal type="number" pos:line="57" pos:column="18">0<pos:position pos:line="57" pos:column="19"/></literal></expr>]<pos:position pos:line="57" pos:column="20"/></index></name> <operator pos:line="57" pos:column="21">==<pos:position pos:line="57" pos:column="23"/></operator> <literal type="number" pos:line="57" pos:column="24">0<pos:position pos:line="57" pos:column="25"/></literal></expr>)<pos:position pos:line="57" pos:column="26"/></condition><then pos:line="57" pos:column="26"> <block pos:line="57" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">ERROR<pos:position pos:line="58" pos:column="10"/></name><argument_list pos:line="58" pos:column="10">(<argument><expr><literal type="string" pos:line="58" pos:column="11">"Modbus plugin: Data block \"%s\": No address or device has been "<pos:position pos:line="58" pos:column="77"/></literal>
          <literal type="string" pos:line="59" pos:column="11">"specified."<pos:position pos:line="59" pos:column="23"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="60" pos:column="11">host<pos:position pos:line="60" pos:column="15"/></name><operator pos:line="60" pos:column="15">-&gt;<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="17">host<pos:position pos:line="60" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="61" pos:column="5">status<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <operator pos:line="61" pos:column="14">-<pos:position pos:line="61" pos:column="15"/></operator><literal type="number" pos:line="61" pos:column="15">1<pos:position pos:line="61" pos:column="16"/></literal></expr>;<pos:position pos:line="61" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><name><name pos:line="63" pos:column="7">host<pos:position pos:line="63" pos:column="11"/></name><operator pos:line="63" pos:column="11">-&gt;<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="13">conntype<pos:position pos:line="63" pos:column="21"/></name></name> <operator pos:line="63" pos:column="22">==<pos:position pos:line="63" pos:column="24"/></operator> <name pos:line="63" pos:column="25">MBCONN_RTU<pos:position pos:line="63" pos:column="35"/></name> <operator pos:line="63" pos:column="36">&amp;&amp;<pos:position pos:line="63" pos:column="46"/></operator> <operator pos:line="63" pos:column="39">!<pos:position pos:line="63" pos:column="40"/></operator><name><name pos:line="63" pos:column="40">host<pos:position pos:line="63" pos:column="44"/></name><operator pos:line="63" pos:column="44">-&gt;<pos:position pos:line="63" pos:column="49"/></operator><name pos:line="63" pos:column="46">baudrate<pos:position pos:line="63" pos:column="54"/></name></name></expr>)<pos:position pos:line="63" pos:column="55"/></condition><then pos:line="63" pos:column="55"> <block pos:line="63" pos:column="56">{
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">ERROR<pos:position pos:line="64" pos:column="10"/></name><argument_list pos:line="64" pos:column="10">(<argument><expr><literal type="string" pos:line="64" pos:column="11">"Modbus plugin: Data block \"%s\": No serial baudrate has been "<pos:position pos:line="64" pos:column="75"/></literal>
          <literal type="string" pos:line="65" pos:column="11">"specified."<pos:position pos:line="65" pos:column="23"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="66" pos:column="11">host<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">-&gt;<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="17">host<pos:position pos:line="66" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="67" pos:column="5">status<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">=<pos:position pos:line="67" pos:column="13"/></operator> <operator pos:line="67" pos:column="14">-<pos:position pos:line="67" pos:column="15"/></operator><literal type="number" pos:line="67" pos:column="15">1<pos:position pos:line="67" pos:column="16"/></literal></expr>;<pos:position pos:line="67" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>
  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><operator pos:line="69" pos:column="7">(<pos:position pos:line="69" pos:column="8"/></operator><name><name pos:line="69" pos:column="8">host<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">-&gt;<pos:position pos:line="69" pos:column="17"/></operator><name pos:line="69" pos:column="14">conntype<pos:position pos:line="69" pos:column="22"/></name></name> <operator pos:line="69" pos:column="23">==<pos:position pos:line="69" pos:column="25"/></operator> <name pos:line="69" pos:column="26">MBCONN_TCP<pos:position pos:line="69" pos:column="36"/></name> <operator pos:line="69" pos:column="37">&amp;&amp;<pos:position pos:line="69" pos:column="47"/></operator> <name><name pos:line="69" pos:column="40">host<pos:position pos:line="69" pos:column="44"/></name><operator pos:line="69" pos:column="44">-&gt;<pos:position pos:line="69" pos:column="49"/></operator><name pos:line="69" pos:column="46">baudrate<pos:position pos:line="69" pos:column="54"/></name></name><operator pos:line="69" pos:column="54">)<pos:position pos:line="69" pos:column="55"/></operator> <operator pos:line="69" pos:column="56">||<pos:position pos:line="69" pos:column="58"/></operator>
      <operator pos:line="70" pos:column="7">(<pos:position pos:line="70" pos:column="8"/></operator><name><name pos:line="70" pos:column="8">host<pos:position pos:line="70" pos:column="12"/></name><operator pos:line="70" pos:column="12">-&gt;<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="14">conntype<pos:position pos:line="70" pos:column="22"/></name></name> <operator pos:line="70" pos:column="23">==<pos:position pos:line="70" pos:column="25"/></operator> <name pos:line="70" pos:column="26">MBCONN_RTU<pos:position pos:line="70" pos:column="36"/></name> <operator pos:line="70" pos:column="37">&amp;&amp;<pos:position pos:line="70" pos:column="47"/></operator> <name><name pos:line="70" pos:column="40">host<pos:position pos:line="70" pos:column="44"/></name><operator pos:line="70" pos:column="44">-&gt;<pos:position pos:line="70" pos:column="49"/></operator><name pos:line="70" pos:column="46">port<pos:position pos:line="70" pos:column="50"/></name></name><operator pos:line="70" pos:column="50">)<pos:position pos:line="70" pos:column="51"/></operator></expr>)<pos:position pos:line="70" pos:column="52"/></condition><then pos:line="70" pos:column="52"> <block pos:line="70" pos:column="53">{
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">ERROR<pos:position pos:line="71" pos:column="10"/></name><argument_list pos:line="71" pos:column="10">(<argument><expr><literal type="string" pos:line="71" pos:column="11">"Modbus plugin: Data block \"%s\": You've mixed up RTU and TCP "<pos:position pos:line="71" pos:column="75"/></literal>
          <literal type="string" pos:line="72" pos:column="11">"options."<pos:position pos:line="72" pos:column="21"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="73" pos:column="11">host<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">host<pos:position pos:line="73" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="74" pos:column="5">status<pos:position pos:line="74" pos:column="11"/></name> <operator pos:line="74" pos:column="12">=<pos:position pos:line="74" pos:column="13"/></operator> <operator pos:line="74" pos:column="14">-<pos:position pos:line="74" pos:column="15"/></operator><literal type="number" pos:line="74" pos:column="15">1<pos:position pos:line="74" pos:column="16"/></literal></expr>;<pos:position pos:line="74" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if>

  <if pos:line="77" pos:column="3">if <condition pos:line="77" pos:column="6">(<expr><name pos:line="77" pos:column="7">status<pos:position pos:line="77" pos:column="13"/></name> <operator pos:line="77" pos:column="14">==<pos:position pos:line="77" pos:column="16"/></operator> <literal type="number" pos:line="77" pos:column="17">0<pos:position pos:line="77" pos:column="18"/></literal></expr>)<pos:position pos:line="77" pos:column="19"/></condition><then pos:line="77" pos:column="19"> <block pos:line="77" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="78" pos:column="5">user_data_t<pos:position pos:line="78" pos:column="16"/></name></type> <name pos:line="78" pos:column="17">ud<pos:position pos:line="78" pos:column="19"/></name></decl>;<pos:position pos:line="78" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="79" pos:column="5">char<pos:position pos:line="79" pos:column="9"/></name></type> <name><name pos:line="79" pos:column="10">name<pos:position pos:line="79" pos:column="14"/></name><index pos:line="79" pos:column="14">[<expr><literal type="number" pos:line="79" pos:column="15">1024<pos:position pos:line="79" pos:column="19"/></literal></expr>]<pos:position pos:line="79" pos:column="20"/></index></name></decl>;<pos:position pos:line="79" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="81" pos:column="5">ud<pos:position pos:line="81" pos:column="7"/></name><operator pos:line="81" pos:column="7">.<pos:position pos:line="81" pos:column="8"/></operator><name pos:line="81" pos:column="8">data<pos:position pos:line="81" pos:column="12"/></name></name> <operator pos:line="81" pos:column="13">=<pos:position pos:line="81" pos:column="14"/></operator> <name pos:line="81" pos:column="15">host<pos:position pos:line="81" pos:column="19"/></name></expr>;<pos:position pos:line="81" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="82" pos:column="5">ud<pos:position pos:line="82" pos:column="7"/></name><operator pos:line="82" pos:column="7">.<pos:position pos:line="82" pos:column="8"/></operator><name pos:line="82" pos:column="8">free_func<pos:position pos:line="82" pos:column="17"/></name></name> <operator pos:line="82" pos:column="18">=<pos:position pos:line="82" pos:column="19"/></operator> <name pos:line="82" pos:column="20">host_free<pos:position pos:line="82" pos:column="29"/></name></expr>;<pos:position pos:line="82" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="84" pos:column="5">ssnprintf<pos:position pos:line="84" pos:column="14"/></name><argument_list pos:line="84" pos:column="14">(<argument><expr><name pos:line="84" pos:column="15">name<pos:position pos:line="84" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="21">sizeof<argument_list pos:line="84" pos:column="27">(<argument><expr><name pos:line="84" pos:column="28">name<pos:position pos:line="84" pos:column="32"/></name></expr></argument>)<pos:position pos:line="84" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="35">"modbus-%s"<pos:position pos:line="84" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="48">host<pos:position pos:line="84" pos:column="52"/></name><operator pos:line="84" pos:column="52">-&gt;<pos:position pos:line="84" pos:column="57"/></operator><name pos:line="84" pos:column="54">host<pos:position pos:line="84" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="86" pos:column="5">plugin_register_complex_read<pos:position pos:line="86" pos:column="33"/></name><argument_list pos:line="86" pos:column="33">(<comment type="block" pos:line="86" pos:column="34">/* group = */</comment> <argument><expr><name pos:line="86" pos:column="48">NULL<pos:position pos:line="86" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="54">name<pos:position pos:line="86" pos:column="58"/></name></expr></argument>,
                                 <comment type="block" pos:line="87" pos:column="34">/* callback = */</comment> <argument><expr><name pos:line="87" pos:column="51">mb_read<pos:position pos:line="87" pos:column="58"/></name></expr></argument>,
                                 <comment type="block" pos:line="88" pos:column="34">/* interval = */</comment> <argument><expr><name><name pos:line="88" pos:column="51">host<pos:position pos:line="88" pos:column="55"/></name><operator pos:line="88" pos:column="55">-&gt;<pos:position pos:line="88" pos:column="60"/></operator><name pos:line="88" pos:column="57">interval<pos:position pos:line="88" pos:column="65"/></name></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="67">&amp;<pos:position pos:line="88" pos:column="72"/></operator><name pos:line="88" pos:column="68">ud<pos:position pos:line="88" pos:column="70"/></name></expr></argument>)<pos:position pos:line="88" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="72"/></expr_stmt>
  }<pos:position pos:line="89" pos:column="4"/></block></then> <else pos:line="89" pos:column="5">else <block pos:line="89" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">host_free<pos:position pos:line="90" pos:column="14"/></name><argument_list pos:line="90" pos:column="14">(<argument><expr><name pos:line="90" pos:column="15">host<pos:position pos:line="90" pos:column="19"/></name></expr></argument>)<pos:position pos:line="90" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="91" pos:column="4"/></block></else></if>

  <return pos:line="93" pos:column="3">return <expr><operator pos:line="93" pos:column="10">(<pos:position pos:line="93" pos:column="11"/></operator><name pos:line="93" pos:column="11">status<pos:position pos:line="93" pos:column="17"/></name><operator pos:line="93" pos:column="17">)<pos:position pos:line="93" pos:column="18"/></operator></expr>;<pos:position pos:line="93" pos:column="19"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

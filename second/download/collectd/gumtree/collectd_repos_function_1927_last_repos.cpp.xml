<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1927_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wh_write_kairosdb<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">data_set_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">ds<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">value_list_t<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">vl<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="54">/* {{{ */</comment>
                             <parameter><decl><type><name pos:line="3" pos:column="30">wh_callback_t<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">cb<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list> <block pos:line="3" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">pthread_mutex_lock<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><operator pos:line="6" pos:column="22">&amp;<pos:position pos:line="6" pos:column="27"/></operator><name><name pos:line="6" pos:column="23">cb<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">send_lock<pos:position pos:line="6" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">cb<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">curl<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">NULL<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">status<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">wh_callback_init<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">cb<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">status<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">!=<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">ERROR<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><literal type="string" pos:line="11" pos:column="13">"write_http plugin: wh_callback_init failed."<pos:position pos:line="11" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">pthread_mutex_unlock<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><operator pos:line="12" pos:column="28">&amp;<pos:position pos:line="12" pos:column="33"/></operator><name><name pos:line="12" pos:column="29">cb<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">send_lock<pos:position pos:line="12" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
      <return pos:line="13" pos:column="7">return <expr><operator pos:line="13" pos:column="14">-<pos:position pos:line="13" pos:column="15"/></operator><literal type="number" pos:line="13" pos:column="15">1<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">status<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">format_kairosdb_value_list<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(
      <argument><expr><name><name pos:line="18" pos:column="7">cb<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">send_buffer<pos:position pos:line="18" pos:column="22"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="24">&amp;<pos:position pos:line="18" pos:column="29"/></operator><name><name pos:line="18" pos:column="25">cb<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">send_buffer_fill<pos:position pos:line="18" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="47">&amp;<pos:position pos:line="18" pos:column="52"/></operator><name><name pos:line="18" pos:column="48">cb<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">-&gt;<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="52">send_buffer_free<pos:position pos:line="18" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="70">ds<pos:position pos:line="18" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="74">vl<pos:position pos:line="18" pos:column="76"/></name></expr></argument>,
      <argument><expr><name><name pos:line="19" pos:column="7">cb<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">store_rates<pos:position pos:line="19" pos:column="22"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">char<pos:position pos:line="19" pos:column="29"/></name> <specifier pos:line="19" pos:column="30">const<pos:position pos:line="19" pos:column="35"/></specifier> <operator pos:line="19" pos:column="36">*<pos:position pos:line="19" pos:column="37"/></operator><specifier pos:line="19" pos:column="37">const<pos:position pos:line="19" pos:column="42"/></specifier> <operator pos:line="19" pos:column="43">*<pos:position pos:line="19" pos:column="44"/></operator><operator pos:line="19" pos:column="44">)<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="45">http_attrs<pos:position pos:line="19" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="57">http_attrs_num<pos:position pos:line="19" pos:column="71"/></name></expr></argument>,
      <argument><expr><name><name pos:line="20" pos:column="7">cb<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">data_ttl<pos:position pos:line="20" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="21">cb<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">metrics_prefix<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">status<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">==<pos:position pos:line="21" pos:column="16"/></operator> <operator pos:line="21" pos:column="17">-<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">ENOMEM<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25"> <block pos:line="21" pos:column="26">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">status<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">wh_flush_nolock<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<comment type="block" pos:line="22" pos:column="30">/* timeout = */</comment> <argument><expr><literal type="number" pos:line="22" pos:column="46">0<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">cb<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">status<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">!=<pos:position pos:line="23" pos:column="18"/></operator> <literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21"> <block pos:line="23" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">wh_reset_buffer<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">cb<pos:position pos:line="24" pos:column="25"/></name></expr></argument>)<pos:position pos:line="24" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">pthread_mutex_unlock<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><operator pos:line="25" pos:column="28">&amp;<pos:position pos:line="25" pos:column="33"/></operator><name><name pos:line="25" pos:column="29">cb<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">send_lock<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
      <return pos:line="26" pos:column="7">return <expr><name pos:line="26" pos:column="14">status<pos:position pos:line="26" pos:column="20"/></name></expr>;<pos:position pos:line="26" pos:column="21"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">status<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">format_kairosdb_value_list<pos:position pos:line="29" pos:column="40"/></name><argument_list pos:line="29" pos:column="40">(
        <argument><expr><name><name pos:line="30" pos:column="9">cb<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">send_buffer<pos:position pos:line="30" pos:column="24"/></name></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="26">&amp;<pos:position pos:line="30" pos:column="31"/></operator><name><name pos:line="30" pos:column="27">cb<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">send_buffer_fill<pos:position pos:line="30" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="49">&amp;<pos:position pos:line="30" pos:column="54"/></operator><name><name pos:line="30" pos:column="50">cb<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">-&gt;<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="54">send_buffer_free<pos:position pos:line="30" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="72">ds<pos:position pos:line="30" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="76">vl<pos:position pos:line="30" pos:column="78"/></name></expr></argument>,
        <argument><expr><name><name pos:line="31" pos:column="9">cb<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">store_rates<pos:position pos:line="31" pos:column="24"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="26">(<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">char<pos:position pos:line="31" pos:column="31"/></name> <specifier pos:line="31" pos:column="32">const<pos:position pos:line="31" pos:column="37"/></specifier> <operator pos:line="31" pos:column="38">*<pos:position pos:line="31" pos:column="39"/></operator><specifier pos:line="31" pos:column="39">const<pos:position pos:line="31" pos:column="44"/></specifier> <operator pos:line="31" pos:column="45">*<pos:position pos:line="31" pos:column="46"/></operator><operator pos:line="31" pos:column="46">)<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="47">http_attrs<pos:position pos:line="31" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="59">http_attrs_num<pos:position pos:line="31" pos:column="73"/></name></expr></argument>,
        <argument><expr><name><name pos:line="32" pos:column="9">cb<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">data_ttl<pos:position pos:line="32" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="23">cb<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">metrics_prefix<pos:position pos:line="32" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">status<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">!=<pos:position pos:line="34" pos:column="16"/></operator> <literal type="number" pos:line="34" pos:column="17">0<pos:position pos:line="34" pos:column="18"/></literal></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19"> <block pos:line="34" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">pthread_mutex_unlock<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><operator pos:line="35" pos:column="26">&amp;<pos:position pos:line="35" pos:column="31"/></operator><name><name pos:line="35" pos:column="27">cb<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">send_lock<pos:position pos:line="35" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">status<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="39" pos:column="3">DEBUG<pos:position pos:line="39" pos:column="8"/></name><argument_list pos:line="39" pos:column="8">(<argument><expr><literal type="string" pos:line="39" pos:column="9">"write_http plugin: &lt;%s&gt; buffer %zu/%zu (%g%%)"<pos:position pos:line="39" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="58">cb<pos:position pos:line="39" pos:column="60"/></name><operator pos:line="39" pos:column="60">-&gt;<pos:position pos:line="39" pos:column="65"/></operator><name pos:line="39" pos:column="62">location<pos:position pos:line="39" pos:column="70"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="40" pos:column="9">cb<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">-&gt;<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="13">send_buffer_fill<pos:position pos:line="40" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="31">cb<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">send_buffer_size<pos:position pos:line="40" pos:column="51"/></name></name></expr></argument>,
        <argument><expr><literal type="number" pos:line="41" pos:column="9">100.0<pos:position pos:line="41" pos:column="14"/></literal> <operator pos:line="41" pos:column="15">*<pos:position pos:line="41" pos:column="16"/></operator> <operator pos:line="41" pos:column="17">(<pos:position pos:line="41" pos:column="18"/></operator><operator pos:line="41" pos:column="18">(<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">double<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">)<pos:position pos:line="41" pos:column="26"/></operator><name><name pos:line="41" pos:column="26">cb<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">send_buffer_fill<pos:position pos:line="41" pos:column="46"/></name></name><operator pos:line="41" pos:column="46">)<pos:position pos:line="41" pos:column="47"/></operator> <operator pos:line="41" pos:column="48">/<pos:position pos:line="41" pos:column="49"/></operator>
            <operator pos:line="42" pos:column="13">(<pos:position pos:line="42" pos:column="14"/></operator><operator pos:line="42" pos:column="14">(<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">double<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">)<pos:position pos:line="42" pos:column="22"/></operator><name><name pos:line="42" pos:column="22">cb<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">-&gt;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="26">send_buffer_size<pos:position pos:line="42" pos:column="42"/></name></name><operator pos:line="42" pos:column="42">)<pos:position pos:line="42" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="44" pos:column="3">/* Check if we have enough space for this command. */</comment>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">pthread_mutex_unlock<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><operator pos:line="45" pos:column="24">&amp;<pos:position pos:line="45" pos:column="29"/></operator><name><name pos:line="45" pos:column="25">cb<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">-&gt;<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="29">send_lock<pos:position pos:line="45" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt>

  <return pos:line="47" pos:column="3">return <expr><literal type="number" pos:line="47" pos:column="10">0<pos:position pos:line="47" pos:column="11"/></literal></expr>;<pos:position pos:line="47" pos:column="12"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

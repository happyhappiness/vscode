<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2189_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">lu_destroy_user_class_list<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">lookup_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">obj<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="55">/* {{{ */</comment>
                                       <parameter><decl><type><name pos:line="2" pos:column="40">user_class_list_t<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">user_class_list<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list> <block pos:line="2" pos:column="76">{
  <while pos:line="3" pos:column="3">while <condition pos:line="3" pos:column="9">(<expr><name pos:line="3" pos:column="10">user_class_list<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">!=<pos:position pos:line="3" pos:column="28"/></operator> <name pos:line="3" pos:column="29">NULL<pos:position pos:line="3" pos:column="33"/></name></expr>)<pos:position pos:line="3" pos:column="34"/></condition> <block pos:line="3" pos:column="35">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">user_class_list_t<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">next<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name><name pos:line="4" pos:column="31">user_class_list<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">-&gt;<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="48">next<pos:position pos:line="4" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">obj<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">cb_free_class<pos:position pos:line="6" pos:column="27"/></name></name> <operator pos:line="6" pos:column="28">!=<pos:position pos:line="6" pos:column="30"/></operator> <name pos:line="6" pos:column="31">NULL<pos:position pos:line="6" pos:column="35"/></name></expr>)<pos:position pos:line="6" pos:column="36"/></condition><then pos:line="6" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="7" pos:column="7">obj<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">cb_free_class<pos:position pos:line="7" pos:column="25"/></name></name><argument_list pos:line="7" pos:column="25">(<argument><expr><name><name pos:line="7" pos:column="26">user_class_list<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">-&gt;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="43">entry<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">.<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="49">user_class<pos:position pos:line="7" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">user_class_list<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">entry<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">user_class<pos:position pos:line="8" pos:column="38"/></name></name> <operator pos:line="8" pos:column="39">=<pos:position pos:line="8" pos:column="40"/></operator> <name pos:line="8" pos:column="41">NULL<pos:position pos:line="8" pos:column="45"/></name></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>

<cpp:define pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">define<pos:position pos:line="10" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="10" pos:column="9">CLEAR_FIELD<pos:position pos:line="10" pos:column="20"/></name><parameter_list pos:line="10" pos:column="20">(<parameter><type><name pos:line="10" pos:column="21">field<pos:position pos:line="10" pos:column="26"/></name></type></parameter>)<pos:position pos:line="10" pos:column="27"/></parameter_list></cpp:macro>                                                     \
  <cpp:value pos:line="11" pos:column="3">do {                                                                         \
    if (user_class_list-&gt;entry.match.field.is_regex) {                         \
      regfree(&amp;user_class_list-&gt;entry.match.field.regex);                      \
      user_class_list-&gt;entry.match.field.is_regex = 0;                         \
    }                                                                          \
  } while (0)<pos:position pos:line="16" pos:column="14"/></cpp:value></cpp:define>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">CLEAR_FIELD<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">host<pos:position pos:line="18" pos:column="21"/></name></expr></argument>)<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">CLEAR_FIELD<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">plugin<pos:position pos:line="19" pos:column="23"/></name></expr></argument>)<pos:position pos:line="19" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">CLEAR_FIELD<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">plugin_instance<pos:position pos:line="20" pos:column="32"/></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">CLEAR_FIELD<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><name pos:line="21" pos:column="17">type<pos:position pos:line="21" pos:column="21"/></name></expr></argument>)<pos:position pos:line="21" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">CLEAR_FIELD<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">type_instance<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>

<cpp:undef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">undef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">CLEAR_FIELD<pos:position pos:line="24" pos:column="19"/></name></cpp:undef>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">lu_destroy_user_obj<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">obj<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="30">user_class_list<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">-&gt;<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="47">entry<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">.<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="53">user_obj_list<pos:position pos:line="26" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">user_class_list<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">entry<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">.<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">user_obj_list<pos:position pos:line="27" pos:column="41"/></name></name> <operator pos:line="27" pos:column="42">=<pos:position pos:line="27" pos:column="43"/></operator> <name pos:line="27" pos:column="44">NULL<pos:position pos:line="27" pos:column="48"/></name></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">pthread_mutex_destroy<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><operator pos:line="28" pos:column="27">&amp;<pos:position pos:line="28" pos:column="32"/></operator><name><name pos:line="28" pos:column="28">user_class_list<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">entry<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">.<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="51">lock<pos:position pos:line="28" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">sfree<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><name pos:line="30" pos:column="11">user_class_list<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">user_class_list<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">next<pos:position pos:line="31" pos:column="27"/></name></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></while>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

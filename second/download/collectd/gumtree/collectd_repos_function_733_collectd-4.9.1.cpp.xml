<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_733_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">notification_meta2av<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">pTHX_<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">notification_meta_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">meta<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">AV<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">array<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">meta_num<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><literal type="number" pos:line="3" pos:column="24">0<pos:position pos:line="3" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><name pos:line="6" pos:column="16">meta<pos:position pos:line="6" pos:column="20"/></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition> <block pos:line="6" pos:column="22">{
		<expr_stmt><expr><operator pos:line="7" pos:column="17">++<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">meta_num<pos:position pos:line="7" pos:column="27"/></name></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">meta<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <name><name pos:line="8" pos:column="24">meta<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">next<pos:position pos:line="8" pos:column="34"/></name></name></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">av_extend<pos:position pos:line="11" pos:column="18"/></name> <argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">array<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">meta_num<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>

	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">NULL<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">!=<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="29">meta<pos:position pos:line="13" pos:column="33"/></name></expr>;<pos:position pos:line="13" pos:column="34"/></condition> <incr><expr><name pos:line="13" pos:column="35">meta<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">=<pos:position pos:line="13" pos:column="41"/></operator> <name><name pos:line="13" pos:column="42">meta<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">-&gt;<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="48">next<pos:position pos:line="13" pos:column="52"/></name></name></expr><operator pos:line="13" pos:column="52">,<pos:position pos:line="13" pos:column="53"/></operator> <expr><operator pos:line="13" pos:column="54">++<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="56">i<pos:position pos:line="13" pos:column="57"/></name></expr></incr>)<pos:position pos:line="13" pos:column="58"/></control> <block pos:line="13" pos:column="59">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">HV<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">m<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><call><name pos:line="14" pos:column="25">newHV<pos:position pos:line="14" pos:column="30"/></name> <argument_list pos:line="14" pos:column="31">()<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">SV<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">value<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">NULL<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">==<pos:position pos:line="17" pos:column="28"/></operator> <call><name pos:line="17" pos:column="29">hv_store<pos:position pos:line="17" pos:column="37"/></name> <argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">m<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="42">"name"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="50">4<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="53">newSVpv<pos:position pos:line="17" pos:column="60"/></name> <argument_list pos:line="17" pos:column="61">(<argument><expr><name><name pos:line="17" pos:column="62">meta<pos:position pos:line="17" pos:column="66"/></name><operator pos:line="17" pos:column="66">-&gt;<pos:position pos:line="17" pos:column="71"/></operator><name pos:line="17" pos:column="68">name<pos:position pos:line="17" pos:column="72"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="74">0<pos:position pos:line="17" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="78">0<pos:position pos:line="17" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="81"/></condition><then pos:line="17" pos:column="81">
			<block type="pseudo"><return pos:line="18" pos:column="25">return <expr><operator pos:line="18" pos:column="32">-<pos:position pos:line="18" pos:column="33"/></operator><literal type="number" pos:line="18" pos:column="33">1<pos:position pos:line="18" pos:column="34"/></literal></expr>;<pos:position pos:line="18" pos:column="35"/></return></block></then></if>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">NM_TYPE_STRING<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">==<pos:position pos:line="20" pos:column="38"/></operator> <name><name pos:line="20" pos:column="39">meta<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">type<pos:position pos:line="20" pos:column="49"/></name></name></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">value<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <call><name pos:line="21" pos:column="33">newSVpv<pos:position pos:line="21" pos:column="40"/></name> <argument_list pos:line="21" pos:column="41">(<argument><expr><name><name pos:line="21" pos:column="42">meta<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">-&gt;<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="48">nm_value<pos:position pos:line="21" pos:column="56"/></name><operator pos:line="21" pos:column="56">.<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="57">nm_string<pos:position pos:line="21" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="68">0<pos:position pos:line="21" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt></block></then>
		<elseif pos:line="22" pos:column="17">else <if pos:line="22" pos:column="22">if <condition pos:line="22" pos:column="25">(<expr><name pos:line="22" pos:column="26">NM_TYPE_SIGNED_INT<pos:position pos:line="22" pos:column="44"/></name> <operator pos:line="22" pos:column="45">==<pos:position pos:line="22" pos:column="47"/></operator> <name><name pos:line="22" pos:column="48">meta<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">-&gt;<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="54">type<pos:position pos:line="22" pos:column="58"/></name></name></expr>)<pos:position pos:line="22" pos:column="59"/></condition><then pos:line="22" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="25">value<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <call><name pos:line="23" pos:column="33">newSViv<pos:position pos:line="23" pos:column="40"/></name> <argument_list pos:line="23" pos:column="41">(<argument><expr><name><name pos:line="23" pos:column="42">meta<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">nm_value<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">.<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="57">nm_signed_int<pos:position pos:line="23" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="24" pos:column="17">else <if pos:line="24" pos:column="22">if <condition pos:line="24" pos:column="25">(<expr><name pos:line="24" pos:column="26">NM_TYPE_UNSIGNED_INT<pos:position pos:line="24" pos:column="46"/></name> <operator pos:line="24" pos:column="47">==<pos:position pos:line="24" pos:column="49"/></operator> <name><name pos:line="24" pos:column="50">meta<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">-&gt;<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="56">type<pos:position pos:line="24" pos:column="60"/></name></name></expr>)<pos:position pos:line="24" pos:column="61"/></condition><then pos:line="24" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">value<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">=<pos:position pos:line="25" pos:column="32"/></operator> <call><name pos:line="25" pos:column="33">newSVuv<pos:position pos:line="25" pos:column="40"/></name> <argument_list pos:line="25" pos:column="41">(<argument><expr><name><name pos:line="25" pos:column="42">meta<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">nm_value<pos:position pos:line="25" pos:column="56"/></name><operator pos:line="25" pos:column="56">.<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="57">nm_unsigned_int<pos:position pos:line="25" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="74"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="26" pos:column="17">else <if pos:line="26" pos:column="22">if <condition pos:line="26" pos:column="25">(<expr><name pos:line="26" pos:column="26">NM_TYPE_DOUBLE<pos:position pos:line="26" pos:column="40"/></name> <operator pos:line="26" pos:column="41">==<pos:position pos:line="26" pos:column="43"/></operator> <name><name pos:line="26" pos:column="44">meta<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">-&gt;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="50">type<pos:position pos:line="26" pos:column="54"/></name></name></expr>)<pos:position pos:line="26" pos:column="55"/></condition><then pos:line="26" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">value<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">=<pos:position pos:line="27" pos:column="32"/></operator> <call><name pos:line="27" pos:column="33">newSVnv<pos:position pos:line="27" pos:column="40"/></name> <argument_list pos:line="27" pos:column="41">(<argument><expr><name><name pos:line="27" pos:column="42">meta<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">nm_value<pos:position pos:line="27" pos:column="56"/></name><operator pos:line="27" pos:column="56">.<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="57">nm_double<pos:position pos:line="27" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="28" pos:column="17">else <if pos:line="28" pos:column="22">if <condition pos:line="28" pos:column="25">(<expr><name pos:line="28" pos:column="26">NM_TYPE_BOOLEAN<pos:position pos:line="28" pos:column="41"/></name> <operator pos:line="28" pos:column="42">==<pos:position pos:line="28" pos:column="44"/></operator> <name><name pos:line="28" pos:column="45">meta<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">-&gt;<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="51">type<pos:position pos:line="28" pos:column="55"/></name></name></expr>)<pos:position pos:line="28" pos:column="56"/></condition><then pos:line="28" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">value<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <ternary><condition><expr><name><name pos:line="29" pos:column="33">meta<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">-&gt;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="39">nm_value<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">.<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="48">nm_boolean<pos:position pos:line="29" pos:column="58"/></name></name></expr> ?<pos:position pos:line="29" pos:column="60"/></condition><then pos:line="29" pos:column="60"> <expr><operator pos:line="29" pos:column="61">&amp;<pos:position pos:line="29" pos:column="66"/></operator><name pos:line="29" pos:column="62">PL_sv_yes<pos:position pos:line="29" pos:column="71"/></name></expr> <pos:position pos:line="29" pos:column="72"/></then><else pos:line="29" pos:column="72">: <expr><operator pos:line="29" pos:column="74">&amp;<pos:position pos:line="29" pos:column="79"/></operator><name pos:line="29" pos:column="75">PL_sv_no<pos:position pos:line="29" pos:column="83"/></name></expr></else></ternary></expr>;<pos:position pos:line="29" pos:column="84"/></expr_stmt></block></then></if></elseif>
		<else pos:line="30" pos:column="17">else
			<block type="pseudo"><return pos:line="31" pos:column="25">return <expr><operator pos:line="31" pos:column="32">-<pos:position pos:line="31" pos:column="33"/></operator><literal type="number" pos:line="31" pos:column="33">1<pos:position pos:line="31" pos:column="34"/></literal></expr>;<pos:position pos:line="31" pos:column="35"/></return></block></else></if>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">NULL<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">==<pos:position pos:line="33" pos:column="28"/></operator> <call><name pos:line="33" pos:column="29">hv_store<pos:position pos:line="33" pos:column="37"/></name> <argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">m<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="42">"value"<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="51">5<pos:position pos:line="33" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="54">value<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="61">0<pos:position pos:line="33" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="64"/></condition><then pos:line="33" pos:column="64"> <block pos:line="33" pos:column="65">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">sv_free<pos:position pos:line="34" pos:column="32"/></name> <argument_list pos:line="34" pos:column="33">(<argument><expr><name pos:line="34" pos:column="34">value<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
			<return pos:line="35" pos:column="25">return <expr><operator pos:line="35" pos:column="32">-<pos:position pos:line="35" pos:column="33"/></operator><literal type="number" pos:line="35" pos:column="33">1<pos:position pos:line="35" pos:column="34"/></literal></expr>;<pos:position pos:line="35" pos:column="35"/></return>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>

		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">NULL<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">==<pos:position pos:line="38" pos:column="28"/></operator> <call><name pos:line="38" pos:column="29">av_store<pos:position pos:line="38" pos:column="37"/></name> <argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">array<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">i<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="49">newRV_noinc<pos:position pos:line="38" pos:column="60"/></name> <argument_list pos:line="38" pos:column="61">(<argument><expr><operator pos:line="38" pos:column="62">(<pos:position pos:line="38" pos:column="63"/></operator><name pos:line="38" pos:column="63">SV<pos:position pos:line="38" pos:column="65"/></name> <operator pos:line="38" pos:column="66">*<pos:position pos:line="38" pos:column="67"/></operator><operator pos:line="38" pos:column="67">)<pos:position pos:line="38" pos:column="68"/></operator><name pos:line="38" pos:column="68">m<pos:position pos:line="38" pos:column="69"/></name></expr></argument>)<pos:position pos:line="38" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="72"/></condition><then pos:line="38" pos:column="72"> <block pos:line="38" pos:column="73">{
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">hv_clear<pos:position pos:line="39" pos:column="33"/></name> <argument_list pos:line="39" pos:column="34">(<argument><expr><name pos:line="39" pos:column="35">m<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">hv_undef<pos:position pos:line="40" pos:column="33"/></name> <argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">m<pos:position pos:line="40" pos:column="36"/></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>
			<return pos:line="41" pos:column="25">return <expr><operator pos:line="41" pos:column="32">-<pos:position pos:line="41" pos:column="33"/></operator><literal type="number" pos:line="41" pos:column="33">1<pos:position pos:line="41" pos:column="34"/></literal></expr>;<pos:position pos:line="41" pos:column="35"/></return>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>
	}<pos:position pos:line="43" pos:column="10"/></block></for>
	<return pos:line="44" pos:column="9">return <expr><literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

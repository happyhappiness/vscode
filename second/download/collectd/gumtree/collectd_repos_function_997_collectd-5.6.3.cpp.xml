<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_997_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">xs_init<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">pTHX<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list> <block pos:line="1" pos:column="27">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">HV<pos:position pos:line="2" pos:column="5"/></name> <modifier pos:line="2" pos:column="6">*<pos:position pos:line="2" pos:column="7"/></modifier></type><name pos:line="2" pos:column="7">stash<pos:position pos:line="2" pos:column="12"/></name> <init pos:line="2" pos:column="13">= <expr><name pos:line="2" pos:column="15">NULL<pos:position pos:line="2" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">SV<pos:position pos:line="3" pos:column="5"/></name> <modifier pos:line="3" pos:column="6">*<pos:position pos:line="3" pos:column="7"/></modifier></type><name pos:line="3" pos:column="7">tmp<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><name pos:line="3" pos:column="13">NULL<pos:position pos:line="3" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">file<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">__FILE__<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">dXSUB_SYS<pos:position pos:line="6" pos:column="12"/></name></expr>;<pos:position pos:line="6" pos:column="13"/></expr_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* enable usage of Perl modules using shared libraries */</comment>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">newXS<pos:position pos:line="9" pos:column="8"/></name><argument_list pos:line="9" pos:column="8">(<argument><expr><literal type="string" pos:line="9" pos:column="9">"DynaLoader::boot_DynaLoader"<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">boot_DynaLoader<pos:position pos:line="9" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="57">file<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* register API */</comment>
  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><decl><type><name pos:line="12" pos:column="8">int<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">i<pos:position pos:line="12" pos:column="13"/></name> <init pos:line="12" pos:column="14">= <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="18"/></init> <condition><expr><name pos:line="12" pos:column="19">NULL<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">!=<pos:position pos:line="12" pos:column="26"/></operator> <name><name pos:line="12" pos:column="27">api<pos:position pos:line="12" pos:column="30"/></name><index pos:line="12" pos:column="30">[<expr><name pos:line="12" pos:column="31">i<pos:position pos:line="12" pos:column="32"/></name></expr>]<pos:position pos:line="12" pos:column="33"/></index></name><operator pos:line="12" pos:column="33">.<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="34">f<pos:position pos:line="12" pos:column="35"/></name></expr>;<pos:position pos:line="12" pos:column="36"/></condition> <incr><expr><operator pos:line="12" pos:column="37">++<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="39">i<pos:position pos:line="12" pos:column="40"/></name></expr></incr>)<pos:position pos:line="12" pos:column="41"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="5">newXS<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name><name pos:line="13" pos:column="11">api<pos:position pos:line="13" pos:column="14"/></name><index pos:line="13" pos:column="14">[<expr><name pos:line="13" pos:column="15">i<pos:position pos:line="13" pos:column="16"/></name></expr>]<pos:position pos:line="13" pos:column="17"/></index></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">name<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="24">api<pos:position pos:line="13" pos:column="27"/></name><index pos:line="13" pos:column="27">[<expr><name pos:line="13" pos:column="28">i<pos:position pos:line="13" pos:column="29"/></name></expr>]<pos:position pos:line="13" pos:column="30"/></index></name><operator pos:line="13" pos:column="30">.<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">f<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">file<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt></block></for>

  <expr_stmt><expr><name pos:line="15" pos:column="3">stash<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">gv_stashpv<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><literal type="string" pos:line="15" pos:column="22">"Collectd"<pos:position pos:line="15" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="34">1<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* export "constants" */</comment>
  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><decl><type><name pos:line="18" pos:column="8">int<pos:position pos:line="18" pos:column="11"/></name></type> <name pos:line="18" pos:column="12">i<pos:position pos:line="18" pos:column="13"/></name> <init pos:line="18" pos:column="14">= <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="18"/></init> <condition><expr><literal type="char" pos:line="18" pos:column="19">'\0'<pos:position pos:line="18" pos:column="23"/></literal> <operator pos:line="18" pos:column="24">!=<pos:position pos:line="18" pos:column="26"/></operator> <name><name pos:line="18" pos:column="27">constants<pos:position pos:line="18" pos:column="36"/></name><index pos:line="18" pos:column="36">[<expr><name pos:line="18" pos:column="37">i<pos:position pos:line="18" pos:column="38"/></name></expr>]<pos:position pos:line="18" pos:column="39"/></index></name><operator pos:line="18" pos:column="39">.<pos:position pos:line="18" pos:column="40"/></operator><name><name pos:line="18" pos:column="40">name<pos:position pos:line="18" pos:column="44"/></name><index pos:line="18" pos:column="44">[<expr><literal type="number" pos:line="18" pos:column="45">0<pos:position pos:line="18" pos:column="46"/></literal></expr>]<pos:position pos:line="18" pos:column="47"/></index></name></expr>;<pos:position pos:line="18" pos:column="48"/></condition> <incr><expr><operator pos:line="18" pos:column="49">++<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">i<pos:position pos:line="18" pos:column="52"/></name></expr></incr>)<pos:position pos:line="18" pos:column="53"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">newCONSTSUB<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">stash<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="24">constants<pos:position pos:line="19" pos:column="33"/></name><index pos:line="19" pos:column="33">[<expr><name pos:line="19" pos:column="34">i<pos:position pos:line="19" pos:column="35"/></name></expr>]<pos:position pos:line="19" pos:column="36"/></index></name><operator pos:line="19" pos:column="36">.<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">name<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="43">newSViv<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><name><name pos:line="19" pos:column="51">constants<pos:position pos:line="19" pos:column="60"/></name><index pos:line="19" pos:column="60">[<expr><name pos:line="19" pos:column="61">i<pos:position pos:line="19" pos:column="62"/></name></expr>]<pos:position pos:line="19" pos:column="63"/></index></name><operator pos:line="19" pos:column="63">.<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="64">value<pos:position pos:line="19" pos:column="69"/></name></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="72"/></expr_stmt></block></for>

  <comment type="block" pos:line="21" pos:column="3">/* export global variables
   * by adding "magic" to the SV's representing the globale variables
   * perl is able to automagically call the get/set function when
   * accessing any such variable (this is basically the same as using
   * tie() in Perl) */</comment>
  <comment type="block" pos:line="26" pos:column="3">/* global strings */</comment>
  <for pos:line="27" pos:column="3">for <control pos:line="27" pos:column="7">(<init><decl><type><name pos:line="27" pos:column="8">int<pos:position pos:line="27" pos:column="11"/></name></type> <name pos:line="27" pos:column="12">i<pos:position pos:line="27" pos:column="13"/></name> <init pos:line="27" pos:column="14">= <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="18"/></init> <condition><expr><literal type="char" pos:line="27" pos:column="19">'\0'<pos:position pos:line="27" pos:column="23"/></literal> <operator pos:line="27" pos:column="24">!=<pos:position pos:line="27" pos:column="26"/></operator> <name><name pos:line="27" pos:column="27">g_strings<pos:position pos:line="27" pos:column="36"/></name><index pos:line="27" pos:column="36">[<expr><name pos:line="27" pos:column="37">i<pos:position pos:line="27" pos:column="38"/></name></expr>]<pos:position pos:line="27" pos:column="39"/></index></name><operator pos:line="27" pos:column="39">.<pos:position pos:line="27" pos:column="40"/></operator><name><name pos:line="27" pos:column="40">name<pos:position pos:line="27" pos:column="44"/></name><index pos:line="27" pos:column="44">[<expr><literal type="number" pos:line="27" pos:column="45">0<pos:position pos:line="27" pos:column="46"/></literal></expr>]<pos:position pos:line="27" pos:column="47"/></index></name></expr>;<pos:position pos:line="27" pos:column="48"/></condition> <incr><expr><operator pos:line="27" pos:column="49">++<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="51">i<pos:position pos:line="27" pos:column="52"/></name></expr></incr>)<pos:position pos:line="27" pos:column="53"/></control> <block pos:line="27" pos:column="54">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">tmp<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <call><name pos:line="28" pos:column="11">get_sv<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name><name pos:line="28" pos:column="18">g_strings<pos:position pos:line="28" pos:column="27"/></name><index pos:line="28" pos:column="27">[<expr><name pos:line="28" pos:column="28">i<pos:position pos:line="28" pos:column="29"/></name></expr>]<pos:position pos:line="28" pos:column="30"/></index></name><operator pos:line="28" pos:column="30">.<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="31">name<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="37">1<pos:position pos:line="28" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">sv_magicext<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">tmp<pos:position pos:line="29" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="22">NULL<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="28">PERL_MAGIC_ext<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="44">&amp;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="45">g_pv_vtbl<pos:position pos:line="29" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="56">g_strings<pos:position pos:line="29" pos:column="65"/></name><index pos:line="29" pos:column="65">[<expr><name pos:line="29" pos:column="66">i<pos:position pos:line="29" pos:column="67"/></name></expr>]<pos:position pos:line="29" pos:column="68"/></index></name><operator pos:line="29" pos:column="68">.<pos:position pos:line="29" pos:column="69"/></operator><name pos:line="29" pos:column="69">var<pos:position pos:line="29" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="74">0<pos:position pos:line="29" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="32" pos:column="3">tmp<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">=<pos:position pos:line="32" pos:column="8"/></operator> <call><name pos:line="32" pos:column="9">get_sv<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="string" pos:line="32" pos:column="16">"Collectd::interval_g"<pos:position pos:line="32" pos:column="38"/></literal></expr></argument>, <comment type="block" pos:line="32" pos:column="40">/* create = */</comment> <argument><expr><literal type="number" pos:line="32" pos:column="55">1<pos:position pos:line="32" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">sv_magicext<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">tmp<pos:position pos:line="33" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="20">NULL<pos:position pos:line="33" pos:column="24"/></name></expr></argument>, <comment type="block" pos:line="33" pos:column="26">/* how = */</comment> <argument><expr><name pos:line="33" pos:column="38">PERL_MAGIC_ext<pos:position pos:line="33" pos:column="52"/></name></expr></argument>,
              <comment type="block" pos:line="34" pos:column="15">/* vtbl = */</comment> <argument><expr><operator pos:line="34" pos:column="28">&amp;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="29">g_interval_vtbl<pos:position pos:line="34" pos:column="44"/></name></expr></argument>,
              <comment type="block" pos:line="35" pos:column="15">/* name = */</comment> <argument><expr><name pos:line="35" pos:column="28">NULL<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <comment type="block" pos:line="35" pos:column="34">/* namelen = */</comment> <argument><expr><literal type="number" pos:line="35" pos:column="50">0<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>

  <return pos:line="37" pos:column="3">return;<pos:position pos:line="37" pos:column="10"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

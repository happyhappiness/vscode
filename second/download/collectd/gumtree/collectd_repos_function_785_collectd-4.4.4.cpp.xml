<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_785_collectd-4.4.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ut_threshold_add<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">threshold_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">th<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">name<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><literal type="number" pos:line="3" pos:column="13">6<pos:position pos:line="3" pos:column="14"/></literal> <operator pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></operator> <name pos:line="3" pos:column="17">DATA_MAX_NAME_LEN<pos:position pos:line="3" pos:column="34"/></name></expr>]<pos:position pos:line="3" pos:column="35"/></index></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">name_copy<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">threshold_t<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">th_copy<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">threshold_t<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">th_ptr<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">format_name<pos:position pos:line="9" pos:column="18"/></name> <argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">name<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="26">sizeof <argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">name<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="41">th<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">-&gt;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="45">host<pos:position pos:line="9" pos:column="49"/></name></name></expr></argument>,
	<argument><expr><name><name pos:line="10" pos:column="9">th<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">plugin<pos:position pos:line="10" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="21">th<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">plugin_instance<pos:position pos:line="10" pos:column="40"/></name></name></expr></argument>,
	<argument><expr><name><name pos:line="11" pos:column="9">th<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">type<pos:position pos:line="11" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="19">th<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">type_instance<pos:position pos:line="11" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call> <operator pos:line="11" pos:column="38">!=<pos:position pos:line="11" pos:column="40"/></operator> <literal type="number" pos:line="11" pos:column="41">0<pos:position pos:line="11" pos:column="42"/></literal></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name> <argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="string" pos:line="13" pos:column="12">"ut_threshold_add: format_name failed."<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">name_copy<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">strdup<pos:position pos:line="17" pos:column="21"/></name> <argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">name<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">name_copy<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">==<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">NULL<pos:position pos:line="18" pos:column="24"/></name></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ERROR<pos:position pos:line="20" pos:column="10"/></name> <argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="string" pos:line="20" pos:column="12">"ut_threshold_add: strdup failed."<pos:position pos:line="20" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><operator pos:line="21" pos:column="13">-<pos:position pos:line="21" pos:column="14"/></operator><literal type="number" pos:line="21" pos:column="14">1<pos:position pos:line="21" pos:column="15"/></literal><operator pos:line="21" pos:column="15">)<pos:position pos:line="21" pos:column="16"/></operator></expr>;<pos:position pos:line="21" pos:column="17"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="24" pos:column="3">th_copy<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">threshold_t<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">*<pos:position pos:line="24" pos:column="27"/></operator><operator pos:line="24" pos:column="27">)<pos:position pos:line="24" pos:column="28"/></operator> <call><name pos:line="24" pos:column="29">malloc<pos:position pos:line="24" pos:column="35"/></name> <argument_list pos:line="24" pos:column="36">(<argument><expr><sizeof pos:line="24" pos:column="37">sizeof <argument_list pos:line="24" pos:column="44">(<argument><expr><name pos:line="24" pos:column="45">threshold_t<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="59"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">th_copy<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">==<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">NULL<pos:position pos:line="25" pos:column="22"/></name></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">sfree<pos:position pos:line="27" pos:column="10"/></name> <argument_list pos:line="27" pos:column="11">(<argument><expr><name pos:line="27" pos:column="12">name_copy<pos:position pos:line="27" pos:column="21"/></name></expr></argument>)<pos:position pos:line="27" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name> <argument_list pos:line="28" pos:column="11">(<argument><expr><literal type="string" pos:line="28" pos:column="12">"ut_threshold_add: malloc failed."<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><operator pos:line="29" pos:column="13">-<pos:position pos:line="29" pos:column="14"/></operator><literal type="number" pos:line="29" pos:column="14">1<pos:position pos:line="29" pos:column="15"/></literal><operator pos:line="29" pos:column="15">)<pos:position pos:line="29" pos:column="16"/></operator></expr>;<pos:position pos:line="29" pos:column="17"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">memcpy<pos:position pos:line="31" pos:column="9"/></name> <argument_list pos:line="31" pos:column="10">(<argument><expr><name pos:line="31" pos:column="11">th_copy<pos:position pos:line="31" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="20">th<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="24">sizeof <argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">threshold_t<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">th_ptr<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <name pos:line="32" pos:column="12">NULL<pos:position pos:line="32" pos:column="16"/></name></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">DEBUG<pos:position pos:line="34" pos:column="8"/></name> <argument_list pos:line="34" pos:column="9">(<argument><expr><literal type="string" pos:line="34" pos:column="10">"ut_threshold_add: Adding entry `%s'"<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">name<pos:position pos:line="34" pos:column="53"/></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="36" pos:column="3">pthread_mutex_lock<pos:position pos:line="36" pos:column="21"/></name> <argument_list pos:line="36" pos:column="22">(<argument><expr><operator pos:line="36" pos:column="23">&amp;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="24">threshold_lock<pos:position pos:line="36" pos:column="38"/></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><name pos:line="38" pos:column="3">th_ptr<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <call><name pos:line="38" pos:column="12">threshold_get<pos:position pos:line="38" pos:column="25"/></name> <argument_list pos:line="38" pos:column="26">(<argument><expr><name><name pos:line="38" pos:column="27">th<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">-&gt;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="31">host<pos:position pos:line="38" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="37">th<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">-&gt;<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="41">plugin<pos:position pos:line="38" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="49">th<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">-&gt;<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="53">plugin_instance<pos:position pos:line="38" pos:column="68"/></name></name></expr></argument>,
      <argument><expr><name><name pos:line="39" pos:column="7">th<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">-&gt;<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="11">type<pos:position pos:line="39" pos:column="15"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="17">th<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">-&gt;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="21">type_instance<pos:position pos:line="39" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>

  <while pos:line="41" pos:column="3">while <condition pos:line="41" pos:column="9">(<expr><operator pos:line="41" pos:column="10">(<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="11">th_ptr<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">!=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">NULL<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">)<pos:position pos:line="41" pos:column="26"/></operator> <operator pos:line="41" pos:column="27">&amp;&amp;<pos:position pos:line="41" pos:column="37"/></operator> <operator pos:line="41" pos:column="30">(<pos:position pos:line="41" pos:column="31"/></operator><name><name pos:line="41" pos:column="31">th_ptr<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">next<pos:position pos:line="41" pos:column="43"/></name></name> <operator pos:line="41" pos:column="44">!=<pos:position pos:line="41" pos:column="46"/></operator> <name pos:line="41" pos:column="47">NULL<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">)<pos:position pos:line="41" pos:column="52"/></operator></expr>)<pos:position pos:line="41" pos:column="53"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="5">th_ptr<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <name><name pos:line="42" pos:column="14">th_ptr<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">next<pos:position pos:line="42" pos:column="26"/></name></name></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt></block></while>

  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">th_ptr<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">==<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">NULL<pos:position pos:line="44" pos:column="21"/></name></expr>)<pos:position pos:line="44" pos:column="22"/></condition><then pos:line="44" pos:column="22"> <comment type="block" pos:line="44" pos:column="23">/* no such threshold yet */</comment>
  <block pos:line="45" pos:column="3">{
    <expr_stmt><expr><name pos:line="46" pos:column="5">status<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">c_avl_insert<pos:position pos:line="46" pos:column="26"/></name> <argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">threshold_tree<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="44">name_copy<pos:position pos:line="46" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="55">th_copy<pos:position pos:line="46" pos:column="62"/></name></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></then>
  <else pos:line="48" pos:column="3">else <comment type="block" pos:line="48" pos:column="8">/* th_ptr points to the last threshold in the list */</comment>
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">th_ptr<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">next<pos:position pos:line="50" pos:column="17"/></name></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <name pos:line="50" pos:column="20">th_copy<pos:position pos:line="50" pos:column="27"/></name></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
    <comment type="block" pos:line="51" pos:column="5">/* name_copy isn't needed */</comment>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">sfree<pos:position pos:line="52" pos:column="10"/></name> <argument_list pos:line="52" pos:column="11">(<argument><expr><name pos:line="52" pos:column="12">name_copy<pos:position pos:line="52" pos:column="21"/></name></expr></argument>)<pos:position pos:line="52" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">pthread_mutex_unlock<pos:position pos:line="55" pos:column="23"/></name> <argument_list pos:line="55" pos:column="24">(<argument><expr><operator pos:line="55" pos:column="25">&amp;<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="26">threshold_lock<pos:position pos:line="55" pos:column="40"/></name></expr></argument>)<pos:position pos:line="55" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="42"/></expr_stmt>

  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><name pos:line="57" pos:column="7">status<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">!=<pos:position pos:line="57" pos:column="16"/></operator> <literal type="number" pos:line="57" pos:column="17">0<pos:position pos:line="57" pos:column="18"/></literal></expr>)<pos:position pos:line="57" pos:column="19"/></condition><then pos:line="57" pos:column="19">
  <block pos:line="58" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">ERROR<pos:position pos:line="59" pos:column="10"/></name> <argument_list pos:line="59" pos:column="11">(<argument><expr><literal type="string" pos:line="59" pos:column="12">"ut_threshold_add: c_avl_insert (%s) failed."<pos:position pos:line="59" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="59">name<pos:position pos:line="59" pos:column="63"/></name></expr></argument>)<pos:position pos:line="59" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">sfree<pos:position pos:line="60" pos:column="10"/></name> <argument_list pos:line="60" pos:column="11">(<argument><expr><name pos:line="60" pos:column="12">name_copy<pos:position pos:line="60" pos:column="21"/></name></expr></argument>)<pos:position pos:line="60" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">sfree<pos:position pos:line="61" pos:column="10"/></name> <argument_list pos:line="61" pos:column="11">(<argument><expr><name pos:line="61" pos:column="12">th_copy<pos:position pos:line="61" pos:column="19"/></name></expr></argument>)<pos:position pos:line="61" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <return pos:line="64" pos:column="3">return <expr><operator pos:line="64" pos:column="10">(<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="11">status<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">)<pos:position pos:line="64" pos:column="18"/></operator></expr>;<pos:position pos:line="64" pos:column="19"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

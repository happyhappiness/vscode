<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2703_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_thread_name<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">pthread_t<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">tid<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">name<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <block pos:line="1" pos:column="62">{
<cpp:if pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">if<pos:position pos:line="2" pos:column="4"/></cpp:directive> <expr><call><name pos:line="2" pos:column="5">defined<pos:position pos:line="2" pos:column="12"/></name><argument_list pos:line="2" pos:column="12">(<argument><expr><name pos:line="2" pos:column="13">HAVE_PTHREAD_SETNAME_NP<pos:position pos:line="2" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2" pos:column="37"/></argument_list></call> <operator pos:line="2" pos:column="38">||<pos:position pos:line="2" pos:column="40"/></operator> <call><name pos:line="2" pos:column="41">defined<pos:position pos:line="2" pos:column="48"/></name><argument_list pos:line="2" pos:column="48">(<argument><expr><name pos:line="2" pos:column="49">HAVE_PTHREAD_SET_NAME_NP<pos:position pos:line="2" pos:column="73"/></name></expr></argument>)<pos:position pos:line="2" pos:column="74"/></argument_list></call></expr></cpp:if>

  <comment type="block" pos:line="4" pos:column="3">/* glibc limits the length of the name and fails if the passed string
   * is too long, so we truncate it here. */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">n<pos:position pos:line="6" pos:column="9"/></name><index pos:line="6" pos:column="9">[<expr><name pos:line="6" pos:column="10">THREAD_NAME_MAX<pos:position pos:line="6" pos:column="25"/></name></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">strlen<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">name<pos:position pos:line="7" pos:column="18"/></name></expr></argument>)<pos:position pos:line="7" pos:column="19"/></argument_list></call> <operator pos:line="7" pos:column="20">&gt;=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="23">THREAD_NAME_MAX<pos:position pos:line="7" pos:column="38"/></name></expr>)<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="5">WARNING<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="string" pos:line="8" pos:column="13">"set_thread_name(\"%s\"): name too long"<pos:position pos:line="8" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="55">name<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">sstrncpy<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">n<pos:position pos:line="9" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="15">name<pos:position pos:line="9" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="21">sizeof<argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">n<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>

<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><call><name pos:line="11" pos:column="5">defined<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">HAVE_PTHREAD_SETNAME_NP<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">status<pos:position pos:line="12" pos:column="13"/></name> <init pos:line="12" pos:column="14">= <expr><call><name pos:line="12" pos:column="16">pthread_setname_np<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">tid<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">n<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="43"/></decl_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">status<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">!=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block pos:line="13" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name></type> <name><name pos:line="14" pos:column="10">errbuf<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><literal type="number" pos:line="14" pos:column="17">1024<pos:position pos:line="14" pos:column="21"/></literal></expr>]<pos:position pos:line="14" pos:column="22"/></index></name></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ERROR<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="string" pos:line="15" pos:column="11">"set_thread_name(\"%s\"): %s"<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">n<pos:position pos:line="15" pos:column="43"/></name></expr></argument>,
          <argument><expr><call><name pos:line="16" pos:column="11">sstrerror<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">status<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="29">errbuf<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="37">sizeof<argument_list pos:line="16" pos:column="43">(<argument><expr><name pos:line="16" pos:column="44">errbuf<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
<cpp:else pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">else<pos:position pos:line="18" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="18" pos:column="7">/* if defined(HAVE_PTHREAD_SET_NAME_NP) */</comment>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">pthread_set_name_np<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">tid<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">n<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2605_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_register_flush<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">name<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">plugin_flush_cb<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">callback<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">user_data_t<pos:position pos:line="2" pos:column="54"/></name> <specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">ud<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">plugin_ctx_t<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">ctx<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><call><name pos:line="5" pos:column="28">plugin_get_ctx<pos:position pos:line="5" pos:column="42"/></name> <argument_list pos:line="5" pos:column="43">()<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">status<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <call><name pos:line="7" pos:column="18">create_register_callback<pos:position pos:line="7" pos:column="42"/></name> <argument_list pos:line="7" pos:column="43">(<argument><expr><operator pos:line="7" pos:column="44">&amp;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="45">list_flush<pos:position pos:line="7" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="57">name<pos:position pos:line="7" pos:column="61"/></name></expr></argument>,
		<argument><expr><operator pos:line="8" pos:column="17">(<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">void<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></operator><operator pos:line="8" pos:column="24">)<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">callback<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">ud<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">status<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">!=<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><name pos:line="10" pos:column="24">status<pos:position pos:line="10" pos:column="30"/></name></expr>;<pos:position pos:line="10" pos:column="31"/></return></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">ctx<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">.<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">flush_interval<pos:position pos:line="12" pos:column="31"/></name></name> <operator pos:line="12" pos:column="32">!=<pos:position pos:line="12" pos:column="34"/></operator> <literal type="number" pos:line="12" pos:column="35">0<pos:position pos:line="12" pos:column="36"/></literal></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
	<block pos:line="13" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name> <modifier pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></modifier></type><name pos:line="14" pos:column="23">flush_name<pos:position pos:line="14" pos:column="33"/></name></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">flush_callback_t<pos:position pos:line="15" pos:column="33"/></name> <modifier pos:line="15" pos:column="34">*<pos:position pos:line="15" pos:column="35"/></modifier></type><name pos:line="15" pos:column="35">cb<pos:position pos:line="15" pos:column="37"/></name></decl>;<pos:position pos:line="15" pos:column="38"/></decl_stmt>

		<expr_stmt><expr><name pos:line="17" pos:column="17">flush_name<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <call><name pos:line="17" pos:column="30">plugin_flush_callback_name<pos:position pos:line="17" pos:column="56"/></name> <argument_list pos:line="17" pos:column="57">(<argument><expr><name pos:line="17" pos:column="58">name<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">flush_name<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">==<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="35">NULL<pos:position pos:line="18" pos:column="39"/></name></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40">
			<block type="pseudo"><return pos:line="19" pos:column="25">return <expr><operator pos:line="19" pos:column="32">(<pos:position pos:line="19" pos:column="33"/></operator><operator pos:line="19" pos:column="33">-<pos:position pos:line="19" pos:column="34"/></operator><literal type="number" pos:line="19" pos:column="34">1<pos:position pos:line="19" pos:column="35"/></literal><operator pos:line="19" pos:column="35">)<pos:position pos:line="19" pos:column="36"/></operator></expr>;<pos:position pos:line="19" pos:column="37"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="21" pos:column="17">cb<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">malloc<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><sizeof pos:line="21" pos:column="29">sizeof <argument_list pos:line="21" pos:column="36">(<argument><expr><operator pos:line="21" pos:column="37">*<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="38">cb<pos:position pos:line="21" pos:column="40"/></name></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">cb<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">==<pos:position pos:line="22" pos:column="26"/></operator> <name pos:line="22" pos:column="27">NULL<pos:position pos:line="22" pos:column="31"/></name></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32">
		<block pos:line="23" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">ERROR<pos:position pos:line="24" pos:column="30"/></name> <argument_list pos:line="24" pos:column="31">(<argument><expr><literal type="string" pos:line="24" pos:column="32">"plugin_register_flush: malloc failed."<pos:position pos:line="24" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">sfree<pos:position pos:line="25" pos:column="30"/></name> <argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">flush_name<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
			<return pos:line="26" pos:column="25">return <expr><operator pos:line="26" pos:column="32">(<pos:position pos:line="26" pos:column="33"/></operator><operator pos:line="26" pos:column="33">-<pos:position pos:line="26" pos:column="34"/></operator><literal type="number" pos:line="26" pos:column="34">1<pos:position pos:line="26" pos:column="35"/></literal><operator pos:line="26" pos:column="35">)<pos:position pos:line="26" pos:column="36"/></operator></expr>;<pos:position pos:line="26" pos:column="37"/></return>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="29" pos:column="17">cb<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">-&gt;<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="21">name<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <call><name pos:line="29" pos:column="28">strdup<pos:position pos:line="29" pos:column="34"/></name> <argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">name<pos:position pos:line="29" pos:column="40"/></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name><name pos:line="30" pos:column="21">cb<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">-&gt;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="25">name<pos:position pos:line="30" pos:column="29"/></name></name> <operator pos:line="30" pos:column="30">==<pos:position pos:line="30" pos:column="32"/></operator> <name pos:line="30" pos:column="33">NULL<pos:position pos:line="30" pos:column="37"/></name></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38">
		<block pos:line="31" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">ERROR<pos:position pos:line="32" pos:column="30"/></name> <argument_list pos:line="32" pos:column="31">(<argument><expr><literal type="string" pos:line="32" pos:column="32">"plugin_register_flush: strdup failed."<pos:position pos:line="32" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">sfree<pos:position pos:line="33" pos:column="30"/></name> <argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">cb<pos:position pos:line="33" pos:column="34"/></name></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">sfree<pos:position pos:line="34" pos:column="30"/></name> <argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">flush_name<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>
			<return pos:line="35" pos:column="25">return <expr><operator pos:line="35" pos:column="32">(<pos:position pos:line="35" pos:column="33"/></operator><operator pos:line="35" pos:column="33">-<pos:position pos:line="35" pos:column="34"/></operator><literal type="number" pos:line="35" pos:column="34">1<pos:position pos:line="35" pos:column="35"/></literal><operator pos:line="35" pos:column="35">)<pos:position pos:line="35" pos:column="36"/></operator></expr>;<pos:position pos:line="35" pos:column="37"/></return>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">cb<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">timeout<pos:position pos:line="37" pos:column="28"/></name></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <name><name pos:line="37" pos:column="31">ctx<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">.<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="35">flush_timeout<pos:position pos:line="37" pos:column="48"/></name></name></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>

		<expr_stmt><expr><name pos:line="39" pos:column="17">status<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <call><name pos:line="39" pos:column="26">plugin_register_complex_read<pos:position pos:line="39" pos:column="54"/></name> <argument_list pos:line="39" pos:column="55">(
			<comment type="block" pos:line="40" pos:column="25">/* group     = */</comment> <argument><expr><literal type="string" pos:line="40" pos:column="43">"flush"<pos:position pos:line="40" pos:column="50"/></literal></expr></argument>,
			<comment type="block" pos:line="41" pos:column="25">/* name      = */</comment> <argument><expr><name pos:line="41" pos:column="43">flush_name<pos:position pos:line="41" pos:column="53"/></name></expr></argument>,
			<comment type="block" pos:line="42" pos:column="25">/* callback  = */</comment> <argument><expr><name pos:line="42" pos:column="43">plugin_flush_timeout_callback<pos:position pos:line="42" pos:column="72"/></name></expr></argument>,
			<comment type="block" pos:line="43" pos:column="25">/* interval  = */</comment> <argument><expr><name><name pos:line="43" pos:column="43">ctx<pos:position pos:line="43" pos:column="46"/></name><operator pos:line="43" pos:column="46">.<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="47">flush_interval<pos:position pos:line="43" pos:column="61"/></name></name></expr></argument>,
			<comment type="block" pos:line="44" pos:column="25">/* user data = */</comment> <argument><expr><operator pos:line="44" pos:column="43">&amp;<pos:position pos:line="44" pos:column="48"/></operator><operator pos:line="44" pos:column="44">(<pos:position pos:line="44" pos:column="45"/></operator><name pos:line="44" pos:column="45">user_data_t<pos:position pos:line="44" pos:column="56"/></name><operator pos:line="44" pos:column="56">)<pos:position pos:line="44" pos:column="57"/></operator> <block pos:line="44" pos:column="58">{
				<expr><operator pos:line="45" pos:column="33">.<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="34">data<pos:position pos:line="45" pos:column="38"/></name> <operator pos:line="45" pos:column="39">=<pos:position pos:line="45" pos:column="40"/></operator> <name pos:line="45" pos:column="41">cb<pos:position pos:line="45" pos:column="43"/></name></expr>,
				<expr><operator pos:line="46" pos:column="33">.<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="34">free_func<pos:position pos:line="46" pos:column="43"/></name> <operator pos:line="46" pos:column="44">=<pos:position pos:line="46" pos:column="45"/></operator> <name pos:line="46" pos:column="46">plugin_flush_timeout_callback_free<pos:position pos:line="46" pos:column="80"/></name></expr>,
			}<pos:position pos:line="47" pos:column="26"/></block></expr></argument>)<pos:position pos:line="47" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="49" pos:column="17">sfree<pos:position pos:line="49" pos:column="22"/></name> <argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">flush_name<pos:position pos:line="49" pos:column="34"/></name></expr></argument>)<pos:position pos:line="49" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">status<pos:position pos:line="50" pos:column="27"/></name> <operator pos:line="50" pos:column="28">!=<pos:position pos:line="50" pos:column="30"/></operator> <literal type="number" pos:line="50" pos:column="31">0<pos:position pos:line="50" pos:column="32"/></literal></expr>)<pos:position pos:line="50" pos:column="33"/></condition><then pos:line="50" pos:column="33">
		<block pos:line="51" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">sfree<pos:position pos:line="52" pos:column="30"/></name> <argument_list pos:line="52" pos:column="31">(<argument><expr><name><name pos:line="52" pos:column="32">cb<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">-&gt;<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="36">name<pos:position pos:line="52" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">sfree<pos:position pos:line="53" pos:column="30"/></name> <argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">cb<pos:position pos:line="53" pos:column="34"/></name></expr></argument>)<pos:position pos:line="53" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>
			<return pos:line="54" pos:column="25">return <expr><name pos:line="54" pos:column="32">status<pos:position pos:line="54" pos:column="38"/></name></expr>;<pos:position pos:line="54" pos:column="39"/></return>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<return pos:line="58" pos:column="9">return <expr><literal type="number" pos:line="58" pos:column="16">0<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_719_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cow_read_values<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">path<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">name<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">ow_family_features_t<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">family_info<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list> <block pos:line="2" pos:column="69">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">vl<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">success<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">sensor_list<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">!=<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27"> <block pos:line="6" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">DEBUG<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><literal type="string" pos:line="7" pos:column="11">"onewire plugin: Checking ignorelist for `%s'"<pos:position pos:line="7" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="59">name<pos:position pos:line="7" pos:column="63"/></name></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="65"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">ignorelist_match<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">sensor_list<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">name<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call> <operator pos:line="8" pos:column="45">!=<pos:position pos:line="8" pos:column="47"/></operator> <literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50">
      <block type="pseudo"><return pos:line="9" pos:column="7">return <expr><literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">sstrncpy<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name><name pos:line="12" pos:column="12">vl<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">plugin<pos:position pos:line="12" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="23">"onewire"<pos:position pos:line="12" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="34">sizeof<argument_list pos:line="12" pos:column="40">(<argument><expr><name><name pos:line="12" pos:column="41">vl<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">.<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">plugin<pos:position pos:line="12" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">sstrncpy<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name><name pos:line="13" pos:column="12">vl<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">plugin_instance<pos:position pos:line="13" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">name<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="38">sizeof<argument_list pos:line="13" pos:column="44">(<argument><expr><name><name pos:line="13" pos:column="45">vl<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">.<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">plugin_instance<pos:position pos:line="13" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>

  <for pos:line="15" pos:column="3">for <control pos:line="15" pos:column="7">(<init><decl><type><name pos:line="15" pos:column="8">size_t<pos:position pos:line="15" pos:column="14"/></name></type> <name pos:line="15" pos:column="15">i<pos:position pos:line="15" pos:column="16"/></name> <init pos:line="15" pos:column="17">= <expr><literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="21"/></init> <condition><expr><name pos:line="15" pos:column="22">i<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&lt;<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="26">family_info<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">-&gt;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="39">features_num<pos:position pos:line="15" pos:column="51"/></name></name></expr>;<pos:position pos:line="15" pos:column="52"/></condition> <incr><expr><name pos:line="15" pos:column="53">i<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">++<pos:position pos:line="15" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="57"/></control> <block pos:line="15" pos:column="58">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">buffer<pos:position pos:line="16" pos:column="17"/></name></decl>;<pos:position pos:line="16" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">size_t<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">buffer_size<pos:position pos:line="17" pos:column="23"/></name></decl>;<pos:position pos:line="17" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">status<pos:position pos:line="18" pos:column="15"/></name></decl>;<pos:position pos:line="18" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name></type> <name><name pos:line="19" pos:column="10">errbuf<pos:position pos:line="19" pos:column="16"/></name><index pos:line="19" pos:column="16">[<expr><literal type="number" pos:line="19" pos:column="17">1024<pos:position pos:line="19" pos:column="21"/></literal></expr>]<pos:position pos:line="19" pos:column="22"/></index></name></decl>;<pos:position pos:line="19" pos:column="23"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name></type> <name><name pos:line="21" pos:column="10">file<pos:position pos:line="21" pos:column="14"/></name><index pos:line="21" pos:column="14">[<expr><literal type="number" pos:line="21" pos:column="15">4096<pos:position pos:line="21" pos:column="19"/></literal></expr>]<pos:position pos:line="21" pos:column="20"/></index></name></decl>;<pos:position pos:line="21" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">char<pos:position pos:line="22" pos:column="9"/></name> <modifier pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></modifier></type><name pos:line="22" pos:column="11">endptr<pos:position pos:line="22" pos:column="17"/></name></decl>;<pos:position pos:line="22" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">snprintf<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">file<pos:position pos:line="24" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="20">sizeof<argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">file<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="34">"%s/%s"<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">path<pos:position pos:line="24" pos:column="47"/></name></expr></argument>,
             <argument><expr><name><name pos:line="25" pos:column="14">family_info<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">features<pos:position pos:line="25" pos:column="35"/></name><index pos:line="25" pos:column="35">[<expr><name pos:line="25" pos:column="36">i<pos:position pos:line="25" pos:column="37"/></name></expr>]<pos:position pos:line="25" pos:column="38"/></index></name><operator pos:line="25" pos:column="38">.<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="39">filename<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">file<pos:position pos:line="26" pos:column="9"/></name><index pos:line="26" pos:column="9">[<expr><sizeof pos:line="26" pos:column="10">sizeof<argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">file<pos:position pos:line="26" pos:column="21"/></name></expr></argument>)<pos:position pos:line="26" pos:column="22"/></argument_list></sizeof> <operator pos:line="26" pos:column="23">-<pos:position pos:line="26" pos:column="24"/></operator> <literal type="number" pos:line="26" pos:column="25">1<pos:position pos:line="26" pos:column="26"/></literal></expr>]<pos:position pos:line="26" pos:column="27"/></index></name> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <literal type="number" pos:line="26" pos:column="30">0<pos:position pos:line="26" pos:column="31"/></literal></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="28" pos:column="5">buffer<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <name pos:line="28" pos:column="14">NULL<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">buffer_size<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="19">0<pos:position pos:line="29" pos:column="20"/></literal></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">DEBUG<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="string" pos:line="30" pos:column="11">"Start reading onewire device %s"<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">file<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">status<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">OW_get<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">file<pos:position pos:line="31" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="27">&amp;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="28">buffer<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="36">&amp;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="37">buffer_size<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">status<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">&lt;<pos:position pos:line="32" pos:column="20"/></operator> <literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal></expr>)<pos:position pos:line="32" pos:column="20"/></condition><then pos:line="32" pos:column="20"> <block pos:line="32" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">ERROR<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><literal type="string" pos:line="33" pos:column="13">"onewire plugin: OW_get (%s/%s) failed. error = %s;"<pos:position pos:line="33" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="67">path<pos:position pos:line="33" pos:column="71"/></name></expr></argument>,
            <argument><expr><name><name pos:line="34" pos:column="13">family_info<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">features<pos:position pos:line="34" pos:column="34"/></name><index pos:line="34" pos:column="34">[<expr><name pos:line="34" pos:column="35">i<pos:position pos:line="34" pos:column="36"/></name></expr>]<pos:position pos:line="34" pos:column="37"/></index></name><operator pos:line="34" pos:column="37">.<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">filename<pos:position pos:line="34" pos:column="46"/></name></expr></argument>,
            <argument><expr><call><name pos:line="35" pos:column="13">sstrerror<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">errno<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="30">errbuf<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="38">sizeof<argument_list pos:line="35" pos:column="44">(<argument><expr><name pos:line="35" pos:column="45">errbuf<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
      <return pos:line="36" pos:column="7">return <expr><operator pos:line="36" pos:column="14">-<pos:position pos:line="36" pos:column="15"/></operator><literal type="number" pos:line="36" pos:column="15">1<pos:position pos:line="36" pos:column="16"/></literal></expr>;<pos:position pos:line="36" pos:column="17"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">DEBUG<pos:position pos:line="38" pos:column="10"/></name><argument_list pos:line="38" pos:column="10">(<argument><expr><literal type="string" pos:line="38" pos:column="11">"Read onewire device %s as %s"<pos:position pos:line="38" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="43">file<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="49">buffer<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><name pos:line="40" pos:column="5">endptr<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <name pos:line="40" pos:column="14">NULL<pos:position pos:line="40" pos:column="18"/></name></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">gauge_t<pos:position pos:line="41" pos:column="12"/></name></type> <name pos:line="41" pos:column="13">g<pos:position pos:line="41" pos:column="14"/></name> <init pos:line="41" pos:column="15">= <expr><call><name pos:line="41" pos:column="17">strtod<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><name pos:line="41" pos:column="24">buffer<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="32">&amp;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="33">endptr<pos:position pos:line="41" pos:column="39"/></name></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="41"/></decl_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">endptr<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">==<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">NULL<pos:position pos:line="42" pos:column="23"/></name></expr>)<pos:position pos:line="42" pos:column="24"/></condition><then pos:line="42" pos:column="24"> <block pos:line="42" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">ERROR<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><literal type="string" pos:line="43" pos:column="13">"onewire plugin: Buffer is not a number: %s"<pos:position pos:line="43" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="59">buffer<pos:position pos:line="43" pos:column="65"/></name></expr></argument>)<pos:position pos:line="43" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="67"/></expr_stmt>
      <continue pos:line="44" pos:column="7">continue;<pos:position pos:line="44" pos:column="16"/></continue>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">sstrncpy<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><name><name pos:line="47" pos:column="14">vl<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">.<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="17">type<pos:position pos:line="47" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="23">family_info<pos:position pos:line="47" pos:column="34"/></name><operator pos:line="47" pos:column="34">-&gt;<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="36">features<pos:position pos:line="47" pos:column="44"/></name><index pos:line="47" pos:column="44">[<expr><name pos:line="47" pos:column="45">i<pos:position pos:line="47" pos:column="46"/></name></expr>]<pos:position pos:line="47" pos:column="47"/></index></name><operator pos:line="47" pos:column="47">.<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="48">type<pos:position pos:line="47" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="54">sizeof<argument_list pos:line="47" pos:column="60">(<argument><expr><name><name pos:line="47" pos:column="61">vl<pos:position pos:line="47" pos:column="63"/></name><operator pos:line="47" pos:column="63">.<pos:position pos:line="47" pos:column="64"/></operator><name pos:line="47" pos:column="64">type<pos:position pos:line="47" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">sstrncpy<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">(<argument><expr><name><name pos:line="48" pos:column="14">vl<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">.<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="17">type_instance<pos:position pos:line="48" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="32">family_info<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">-&gt;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="45">features<pos:position pos:line="48" pos:column="53"/></name><index pos:line="48" pos:column="53">[<expr><name pos:line="48" pos:column="54">i<pos:position pos:line="48" pos:column="55"/></name></expr>]<pos:position pos:line="48" pos:column="56"/></index></name><operator pos:line="48" pos:column="56">.<pos:position pos:line="48" pos:column="57"/></operator><name pos:line="48" pos:column="57">type_instance<pos:position pos:line="48" pos:column="70"/></name></expr></argument>,
             <argument><expr><sizeof pos:line="49" pos:column="14">sizeof<argument_list pos:line="49" pos:column="20">(<argument><expr><name><name pos:line="49" pos:column="21">vl<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">.<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="24">type_instance<pos:position pos:line="49" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="51" pos:column="5">vl<pos:position pos:line="51" pos:column="7"/></name><operator pos:line="51" pos:column="7">.<pos:position pos:line="51" pos:column="8"/></operator><name pos:line="51" pos:column="8">values<pos:position pos:line="51" pos:column="14"/></name></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <operator pos:line="51" pos:column="17">&amp;<pos:position pos:line="51" pos:column="22"/></operator><operator pos:line="51" pos:column="18">(<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="19">value_t<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">)<pos:position pos:line="51" pos:column="27"/></operator><block pos:line="51" pos:column="27">{<expr><operator pos:line="51" pos:column="28">.<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="29">gauge<pos:position pos:line="51" pos:column="34"/></name> <operator pos:line="51" pos:column="35">=<pos:position pos:line="51" pos:column="36"/></operator> <name pos:line="51" pos:column="37">g<pos:position pos:line="51" pos:column="38"/></name></expr>}<pos:position pos:line="51" pos:column="39"/></block></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">vl<pos:position pos:line="52" pos:column="7"/></name><operator pos:line="52" pos:column="7">.<pos:position pos:line="52" pos:column="8"/></operator><name pos:line="52" pos:column="8">values_len<pos:position pos:line="52" pos:column="18"/></name></name> <operator pos:line="52" pos:column="19">=<pos:position pos:line="52" pos:column="20"/></operator> <literal type="number" pos:line="52" pos:column="21">1<pos:position pos:line="52" pos:column="22"/></literal></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">plugin_dispatch_values<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><operator pos:line="54" pos:column="28">&amp;<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="29">vl<pos:position pos:line="54" pos:column="31"/></name></expr></argument>)<pos:position pos:line="54" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="55" pos:column="5">success<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">++<pos:position pos:line="55" pos:column="14"/></operator></expr>;<pos:position pos:line="55" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="57" pos:column="5">free<pos:position pos:line="57" pos:column="9"/></name><argument_list pos:line="57" pos:column="9">(<argument><expr><name pos:line="57" pos:column="10">buffer<pos:position pos:line="57" pos:column="16"/></name></expr></argument>)<pos:position pos:line="57" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="58" pos:column="4"/></block></for> <comment type="block" pos:line="58" pos:column="5">/* for (i = 0; i &lt; features_num; i++) */</comment>

  <return pos:line="60" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="60" pos:column="10">(<pos:position pos:line="60" pos:column="11"/></operator><name pos:line="60" pos:column="11">success<pos:position pos:line="60" pos:column="18"/></name> <operator pos:line="60" pos:column="19">&gt;<pos:position pos:line="60" pos:column="23"/></operator> <literal type="number" pos:line="60" pos:column="21">0<pos:position pos:line="60" pos:column="22"/></literal><operator pos:line="60" pos:column="22">)<pos:position pos:line="60" pos:column="23"/></operator></expr> ?<pos:position pos:line="60" pos:column="25"/></condition><then pos:line="60" pos:column="25"> <expr><literal type="number" pos:line="60" pos:column="26">0<pos:position pos:line="60" pos:column="27"/></literal></expr> <pos:position pos:line="60" pos:column="28"/></then><else pos:line="60" pos:column="28">: <expr><operator pos:line="60" pos:column="30">-<pos:position pos:line="60" pos:column="31"/></operator><literal type="number" pos:line="60" pos:column="31">1<pos:position pos:line="60" pos:column="32"/></literal></expr></else></ternary></expr>;<pos:position pos:line="60" pos:column="33"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

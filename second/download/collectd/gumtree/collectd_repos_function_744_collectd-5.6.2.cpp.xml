<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_744_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_udp<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">udphdr<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">udp<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">len<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list> <block pos:line="1" pos:column="58">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buf<pos:position pos:line="2" pos:column="11"/></name><index pos:line="2" pos:column="11">[<expr><name pos:line="2" pos:column="12">PCAP_SNAPLEN<pos:position pos:line="2" pos:column="24"/></name></expr>]<pos:position pos:line="2" pos:column="25"/></index></name></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">(<pos:position pos:line="3" pos:column="8"/></operator><call><name pos:line="3" pos:column="8">ntohs<pos:position pos:line="3" pos:column="13"/></name><argument_list pos:line="3" pos:column="13">(<argument><expr><name><name pos:line="3" pos:column="14">udp<pos:position pos:line="3" pos:column="17"/></name><operator pos:line="3" pos:column="17">-&gt;<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="19">UDP_DEST<pos:position pos:line="3" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="28"/></argument_list></call> <operator pos:line="3" pos:column="29">!=<pos:position pos:line="3" pos:column="31"/></operator> <literal type="number" pos:line="3" pos:column="32">53<pos:position pos:line="3" pos:column="34"/></literal><operator pos:line="3" pos:column="34">)<pos:position pos:line="3" pos:column="35"/></operator> <operator pos:line="3" pos:column="36">&amp;&amp;<pos:position pos:line="3" pos:column="46"/></operator> <operator pos:line="3" pos:column="39">(<pos:position pos:line="3" pos:column="40"/></operator><call><name pos:line="3" pos:column="40">ntohs<pos:position pos:line="3" pos:column="45"/></name><argument_list pos:line="3" pos:column="45">(<argument><expr><name><name pos:line="3" pos:column="46">udp<pos:position pos:line="3" pos:column="49"/></name><operator pos:line="3" pos:column="49">-&gt;<pos:position pos:line="3" pos:column="54"/></operator><name pos:line="3" pos:column="51">UDP_SRC<pos:position pos:line="3" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="59"/></argument_list></call> <operator pos:line="3" pos:column="60">!=<pos:position pos:line="3" pos:column="62"/></operator> <literal type="number" pos:line="3" pos:column="63">53<pos:position pos:line="3" pos:column="65"/></literal><operator pos:line="3" pos:column="65">)<pos:position pos:line="3" pos:column="66"/></operator></expr>)<pos:position pos:line="3" pos:column="67"/></condition><then pos:line="3" pos:column="67">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr>;<pos:position pos:line="4" pos:column="14"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">memcpy<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">buf<pos:position pos:line="5" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="15">udp<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">+<pos:position pos:line="5" pos:column="20"/></operator> <literal type="number" pos:line="5" pos:column="21">1<pos:position pos:line="5" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="24">len<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">-<pos:position pos:line="5" pos:column="29"/></operator> <sizeof pos:line="5" pos:column="30">sizeof<argument_list pos:line="5" pos:column="36">(<argument><expr><operator pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">udp<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="44"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><literal type="number" pos:line="6" pos:column="7">0<pos:position pos:line="6" pos:column="8"/></literal> <operator pos:line="6" pos:column="9">==<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">handle_dns<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">buf<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">len<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">-<pos:position pos:line="6" pos:column="33"/></operator> <sizeof pos:line="6" pos:column="34">sizeof<argument_list pos:line="6" pos:column="40">(<argument><expr><operator pos:line="6" pos:column="41">*<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="42">udp<pos:position pos:line="6" pos:column="45"/></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="48"/></condition><then pos:line="6" pos:column="48">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>
  <return pos:line="8" pos:column="3">return <expr><literal type="number" pos:line="8" pos:column="10">1<pos:position pos:line="8" pos:column="11"/></literal></expr>;<pos:position pos:line="8" pos:column="12"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2020_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">sigrok_feed_callback<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">sr_dev_inst<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">sdi<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name><name pos:line="2" pos:column="40">struct<pos:position pos:line="2" pos:column="46"/></name> <name pos:line="2" pos:column="47">sr_datafeed_packet<pos:position pos:line="2" pos:column="65"/></name></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">packet<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">void<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">cb_data<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list> <block pos:line="3" pos:column="49">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">sr_datafeed_analog<pos:position pos:line="4" pos:column="34"/></name></name> <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier></type><name pos:line="4" pos:column="36">analog<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">config_device<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">cfdev<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">value_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">value<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">value_list_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">vl<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="7" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Find this device's configuration. */</comment>
  <expr_stmt><expr><name pos:line="10" pos:column="3">cfdev<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <name pos:line="10" pos:column="11">NULL<pos:position pos:line="10" pos:column="15"/></name></expr>;<pos:position pos:line="10" pos:column="16"/></expr_stmt>
  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><decl><type><name pos:line="11" pos:column="8">GSList<pos:position pos:line="11" pos:column="14"/></name> <modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">l<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><name pos:line="11" pos:column="20">config_devices<pos:position pos:line="11" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="35"/></init> <condition><expr><name pos:line="11" pos:column="36">l<pos:position pos:line="11" pos:column="37"/></name></expr>;<pos:position pos:line="11" pos:column="38"/></condition> <incr><expr><name pos:line="11" pos:column="39">l<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">=<pos:position pos:line="11" pos:column="42"/></operator> <name><name pos:line="11" pos:column="43">l<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">-&gt;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="46">next<pos:position pos:line="11" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="51"/></control> <block pos:line="11" pos:column="52">{
    <expr_stmt><expr><name pos:line="12" pos:column="5">cfdev<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name><name pos:line="12" pos:column="13">l<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">data<pos:position pos:line="12" pos:column="20"/></name></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">cfdev<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">sdi<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">==<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">sdi<pos:position pos:line="13" pos:column="26"/></name></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <block pos:line="13" pos:column="28">{
      <comment type="block" pos:line="14" pos:column="7">/* Found it. */</comment>
      <break pos:line="15" pos:column="7">break;<pos:position pos:line="15" pos:column="13"/></break>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="17" pos:column="5">cfdev<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <name pos:line="17" pos:column="13">NULL<pos:position pos:line="17" pos:column="17"/></name></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></for>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">!<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">cfdev<pos:position pos:line="20" pos:column="13"/></name></expr>)<pos:position pos:line="20" pos:column="14"/></condition><then pos:line="20" pos:column="14"> <block pos:line="20" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ERROR<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><literal type="string" pos:line="21" pos:column="11">"sigrok plugin: Received data from driver \"%s\" but "<pos:position pos:line="21" pos:column="65"/></literal>
          <literal type="string" pos:line="22" pos:column="11">"can't find a configuration / device matching "<pos:position pos:line="22" pos:column="58"/></literal>
          <literal type="string" pos:line="23" pos:column="11">"it."<pos:position pos:line="23" pos:column="16"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="24" pos:column="11">sdi<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">driver<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">name<pos:position pos:line="24" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
    <return pos:line="25" pos:column="5">return;<pos:position pos:line="25" pos:column="12"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">packet<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">type<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">==<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">SR_DF_END<pos:position pos:line="28" pos:column="32"/></name></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33"> <block pos:line="28" pos:column="34">{
    <comment type="block" pos:line="29" pos:column="5">/* TODO: try to restart acquisition after a delay? */</comment>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">WARNING<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><literal type="string" pos:line="30" pos:column="13">"sigrok plugin: acquisition for \"%s\" ended."<pos:position pos:line="30" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="61">cfdev<pos:position pos:line="30" pos:column="66"/></name><operator pos:line="30" pos:column="66">-&gt;<pos:position pos:line="30" pos:column="71"/></operator><name pos:line="30" pos:column="68">name<pos:position pos:line="30" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="74"/></expr_stmt>
    <return pos:line="31" pos:column="5">return;<pos:position pos:line="31" pos:column="12"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name><name pos:line="34" pos:column="7">packet<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">type<pos:position pos:line="34" pos:column="19"/></name></name> <operator pos:line="34" pos:column="20">!=<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">SR_DF_ANALOG<pos:position pos:line="34" pos:column="35"/></name></expr>)<pos:position pos:line="34" pos:column="36"/></condition><then pos:line="34" pos:column="36">
    <block type="pseudo"><return pos:line="35" pos:column="5">return;<pos:position pos:line="35" pos:column="12"/></return></block></then></if>

  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><operator pos:line="37" pos:column="7">(<pos:position pos:line="37" pos:column="8"/></operator><name><name pos:line="37" pos:column="8">cfdev<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">-&gt;<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="15">min_dispatch_interval<pos:position pos:line="37" pos:column="36"/></name></name> <operator pos:line="37" pos:column="37">!=<pos:position pos:line="37" pos:column="39"/></operator> <literal type="number" pos:line="37" pos:column="40">0<pos:position pos:line="37" pos:column="41"/></literal><operator pos:line="37" pos:column="41">)<pos:position pos:line="37" pos:column="42"/></operator> <operator pos:line="37" pos:column="43">&amp;&amp;<pos:position pos:line="37" pos:column="53"/></operator>
      <operator pos:line="38" pos:column="7">(<pos:position pos:line="38" pos:column="8"/></operator><operator pos:line="38" pos:column="8">(<pos:position pos:line="38" pos:column="9"/></operator><call><name pos:line="38" pos:column="9">cdtime<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">()<pos:position pos:line="38" pos:column="17"/></argument_list></call> <operator pos:line="38" pos:column="18">-<pos:position pos:line="38" pos:column="19"/></operator> <name><name pos:line="38" pos:column="20">cfdev<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">last_dispatch<pos:position pos:line="38" pos:column="40"/></name></name><operator pos:line="38" pos:column="40">)<pos:position pos:line="38" pos:column="41"/></operator> <operator pos:line="38" pos:column="42">&lt;<pos:position pos:line="38" pos:column="46"/></operator> <name><name pos:line="38" pos:column="44">cfdev<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">-&gt;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="51">min_dispatch_interval<pos:position pos:line="38" pos:column="72"/></name></name><operator pos:line="38" pos:column="72">)<pos:position pos:line="38" pos:column="73"/></operator></expr>)<pos:position pos:line="38" pos:column="74"/></condition><then pos:line="38" pos:column="74">
    <block type="pseudo"><return pos:line="39" pos:column="5">return;<pos:position pos:line="39" pos:column="12"/></return></block></then></if>

  <comment type="block" pos:line="41" pos:column="3">/* Ignore all but the first sample on the first probe. */</comment>
  <expr_stmt><expr><name pos:line="42" pos:column="3">analog<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <name><name pos:line="42" pos:column="12">packet<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">payload<pos:position pos:line="42" pos:column="27"/></name></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">value<pos:position pos:line="43" pos:column="8"/></name><operator pos:line="43" pos:column="8">.<pos:position pos:line="43" pos:column="9"/></operator><name pos:line="43" pos:column="9">gauge<pos:position pos:line="43" pos:column="14"/></name></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <name><name pos:line="43" pos:column="17">analog<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">-&gt;<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="25">data<pos:position pos:line="43" pos:column="29"/></name><index pos:line="43" pos:column="29">[<expr><literal type="number" pos:line="43" pos:column="30">0<pos:position pos:line="43" pos:column="31"/></literal></expr>]<pos:position pos:line="43" pos:column="32"/></index></name></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">vl<pos:position pos:line="44" pos:column="5"/></name><operator pos:line="44" pos:column="5">.<pos:position pos:line="44" pos:column="6"/></operator><name pos:line="44" pos:column="6">values<pos:position pos:line="44" pos:column="12"/></name></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <operator pos:line="44" pos:column="15">&amp;<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="16">value<pos:position pos:line="44" pos:column="21"/></name></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">vl<pos:position pos:line="45" pos:column="5"/></name><operator pos:line="45" pos:column="5">.<pos:position pos:line="45" pos:column="6"/></operator><name pos:line="45" pos:column="6">values_len<pos:position pos:line="45" pos:column="16"/></name></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <literal type="number" pos:line="45" pos:column="19">1<pos:position pos:line="45" pos:column="20"/></literal></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">sstrncpy<pos:position pos:line="46" pos:column="11"/></name><argument_list pos:line="46" pos:column="11">(<argument><expr><name><name pos:line="46" pos:column="12">vl<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">.<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">host<pos:position pos:line="46" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="21">hostname_g<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="33">sizeof<argument_list pos:line="46" pos:column="39">(<argument><expr><name><name pos:line="46" pos:column="40">vl<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">.<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="43">host<pos:position pos:line="46" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">sstrncpy<pos:position pos:line="47" pos:column="11"/></name><argument_list pos:line="47" pos:column="11">(<argument><expr><name><name pos:line="47" pos:column="12">vl<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">.<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">plugin<pos:position pos:line="47" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="23">"sigrok"<pos:position pos:line="47" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="33">sizeof<argument_list pos:line="47" pos:column="39">(<argument><expr><name><name pos:line="47" pos:column="40">vl<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">.<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="43">plugin<pos:position pos:line="47" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">ssnprintf<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><name><name pos:line="48" pos:column="13">vl<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">.<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="16">plugin_instance<pos:position pos:line="48" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="33">sizeof<argument_list pos:line="48" pos:column="39">(<argument><expr><name><name pos:line="48" pos:column="40">vl<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">.<pos:position pos:line="48" pos:column="43"/></operator><name pos:line="48" pos:column="43">plugin_instance<pos:position pos:line="48" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="61">"%s"<pos:position pos:line="48" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="67">cfdev<pos:position pos:line="48" pos:column="72"/></name><operator pos:line="48" pos:column="72">-&gt;<pos:position pos:line="48" pos:column="77"/></operator><name pos:line="48" pos:column="74">name<pos:position pos:line="48" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="80"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">sstrncpy<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">(<argument><expr><name><name pos:line="49" pos:column="12">vl<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">.<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="15">type<pos:position pos:line="49" pos:column="19"/></name></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="21">sigrok_value_type<pos:position pos:line="49" pos:column="38"/></name><argument_list pos:line="49" pos:column="38">(<argument><expr><name pos:line="49" pos:column="39">analog<pos:position pos:line="49" pos:column="45"/></name></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="48">sizeof<argument_list pos:line="49" pos:column="54">(<argument><expr><name><name pos:line="49" pos:column="55">vl<pos:position pos:line="49" pos:column="57"/></name><operator pos:line="49" pos:column="57">.<pos:position pos:line="49" pos:column="58"/></operator><name pos:line="49" pos:column="58">type<pos:position pos:line="49" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="65"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="51" pos:column="3">plugin_dispatch_values<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><operator pos:line="51" pos:column="26">&amp;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="27">vl<pos:position pos:line="51" pos:column="29"/></name></expr></argument>)<pos:position pos:line="51" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="52" pos:column="3">cfdev<pos:position pos:line="52" pos:column="8"/></name><operator pos:line="52" pos:column="8">-&gt;<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="10">last_dispatch<pos:position pos:line="52" pos:column="23"/></name></name> <operator pos:line="52" pos:column="24">=<pos:position pos:line="52" pos:column="25"/></operator> <call><name pos:line="52" pos:column="26">cdtime<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">()<pos:position pos:line="52" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="35"/></expr_stmt>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

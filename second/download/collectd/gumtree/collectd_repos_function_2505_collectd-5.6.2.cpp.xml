<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2505_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cf_read<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><specifier pos:line="1" pos:column="13">const<pos:position pos:line="1" pos:column="18"/></specifier> <name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">filename<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list> <block pos:line="1" pos:column="35">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">oconfig_item_t<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">conf<pos:position pos:line="2" pos:column="23"/></name></decl>;<pos:position pos:line="2" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">conf<pos:position pos:line="5" pos:column="7"/></name> <operator pos:line="5" pos:column="8">=<pos:position pos:line="5" pos:column="9"/></operator> <call><name pos:line="5" pos:column="10">cf_read_generic<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">filename<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <comment type="block" pos:line="5" pos:column="36">/* pattern = */</comment> <argument><expr><name pos:line="5" pos:column="52">NULL<pos:position pos:line="5" pos:column="56"/></name></expr></argument>, <comment type="block" pos:line="5" pos:column="58">/* depth = */</comment> <argument><expr><literal type="number" pos:line="5" pos:column="72">0<pos:position pos:line="5" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="75"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">conf<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">==<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <block pos:line="6" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ERROR<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><literal type="string" pos:line="7" pos:column="11">"Unable to read config file %s."<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">filename<pos:position pos:line="7" pos:column="53"/></name></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator></expr>;<pos:position pos:line="8" pos:column="17"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then> <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><name><name pos:line="9" pos:column="14">conf<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">children_num<pos:position pos:line="9" pos:column="32"/></name></name> <operator pos:line="9" pos:column="33">==<pos:position pos:line="9" pos:column="35"/></operator> <literal type="number" pos:line="9" pos:column="36">0<pos:position pos:line="9" pos:column="37"/></literal></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38"> <block pos:line="9" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"Configuration file %s is empty."<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="46">filename<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">oconfig_free<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">conf<pos:position pos:line="11" pos:column="22"/></name></expr></argument>)<pos:position pos:line="11" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if></elseif></if>

  <for pos:line="15" pos:column="3">for <control pos:line="15" pos:column="7">(<init><decl><type><name pos:line="15" pos:column="8">int<pos:position pos:line="15" pos:column="11"/></name></type> <name pos:line="15" pos:column="12">i<pos:position pos:line="15" pos:column="13"/></name> <init pos:line="15" pos:column="14">= <expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="18"/></init> <condition><expr><name pos:line="15" pos:column="19">i<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">&lt;<pos:position pos:line="15" pos:column="25"/></operator> <name><name pos:line="15" pos:column="23">conf<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">children_num<pos:position pos:line="15" pos:column="41"/></name></name></expr>;<pos:position pos:line="15" pos:column="42"/></condition> <incr><expr><name pos:line="15" pos:column="43">i<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">++<pos:position pos:line="15" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="47"/></control> <block pos:line="15" pos:column="48">{
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">conf<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">children<pos:position pos:line="16" pos:column="23"/></name><index pos:line="16" pos:column="23">[<expr><name pos:line="16" pos:column="24">i<pos:position pos:line="16" pos:column="25"/></name></expr>]<pos:position pos:line="16" pos:column="26"/></index></name><operator pos:line="16" pos:column="26">.<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">children<pos:position pos:line="16" pos:column="35"/></name> <operator pos:line="16" pos:column="36">==<pos:position pos:line="16" pos:column="38"/></operator> <name pos:line="16" pos:column="39">NULL<pos:position pos:line="16" pos:column="43"/></name></expr>)<pos:position pos:line="16" pos:column="44"/></condition><then pos:line="16" pos:column="44"> <block pos:line="16" pos:column="45">{
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><call><name pos:line="17" pos:column="11">dispatch_value<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name><name pos:line="17" pos:column="26">conf<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">children<pos:position pos:line="17" pos:column="40"/></name></name> <operator pos:line="17" pos:column="41">+<pos:position pos:line="17" pos:column="42"/></operator> <name pos:line="17" pos:column="43">i<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call> <operator pos:line="17" pos:column="46">!=<pos:position pos:line="17" pos:column="48"/></operator> <literal type="number" pos:line="17" pos:column="49">0<pos:position pos:line="17" pos:column="50"/></literal></expr>)<pos:position pos:line="17" pos:column="51"/></condition><then pos:line="17" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">ret<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <operator pos:line="18" pos:column="15">-<pos:position pos:line="18" pos:column="16"/></operator><literal type="number" pos:line="18" pos:column="16">1<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt></block></then></if>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <else pos:line="19" pos:column="7">else <block pos:line="19" pos:column="12">{
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><call><name pos:line="20" pos:column="11">dispatch_block<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name><name pos:line="20" pos:column="26">conf<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">children<pos:position pos:line="20" pos:column="40"/></name></name> <operator pos:line="20" pos:column="41">+<pos:position pos:line="20" pos:column="42"/></operator> <name pos:line="20" pos:column="43">i<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call> <operator pos:line="20" pos:column="46">!=<pos:position pos:line="20" pos:column="48"/></operator> <literal type="number" pos:line="20" pos:column="49">0<pos:position pos:line="20" pos:column="50"/></literal></expr>)<pos:position pos:line="20" pos:column="51"/></condition><then pos:line="20" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">ret<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <operator pos:line="21" pos:column="15">-<pos:position pos:line="21" pos:column="16"/></operator><literal type="number" pos:line="21" pos:column="16">1<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>
  }<pos:position pos:line="23" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">oconfig_free<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">conf<pos:position pos:line="25" pos:column="20"/></name></expr></argument>)<pos:position pos:line="25" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="27" pos:column="3">/* Read the default types.db if no `TypesDB' option was given. */</comment>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">cf_default_typesdb<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26"> <block pos:line="28" pos:column="27">{
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">read_types_list<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">PKGDATADIR<pos:position pos:line="29" pos:column="35"/></name> <literal type="string" pos:line="29" pos:column="36">"/types.db"<pos:position pos:line="29" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call> <operator pos:line="29" pos:column="49">!=<pos:position pos:line="29" pos:column="51"/></operator> <literal type="number" pos:line="29" pos:column="52">0<pos:position pos:line="29" pos:column="53"/></literal></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">ret<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal></expr>;<pos:position pos:line="30" pos:column="16"/></expr_stmt></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">ret<pos:position pos:line="33" pos:column="13"/></name></expr>;<pos:position pos:line="33" pos:column="14"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

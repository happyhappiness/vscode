<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1460_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">Msg<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">riemann_notification_to_protobuf<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">riemann_host<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">host<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="73">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">notification_t<pos:position pos:line="2" pos:column="31"/></name> <specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">n<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">Msg<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">msg<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">Event<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">event<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">service_buffer<pos:position pos:line="6" pos:column="28"/></name><index pos:line="6" pos:column="28">[<expr><literal type="number" pos:line="6" pos:column="29">6<pos:position pos:line="6" pos:column="30"/></literal> <operator pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="33">DATA_MAX_NAME_LEN<pos:position pos:line="6" pos:column="50"/></name></expr>]<pos:position pos:line="6" pos:column="51"/></index></name></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <specifier pos:line="7" pos:column="14">const<pos:position pos:line="7" pos:column="19"/></specifier> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">severity<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">notification_meta_t<pos:position pos:line="8" pos:column="28"/></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">meta<pos:position pos:line="8" pos:column="34"/></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">msg<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name pos:line="11" pos:column="15">malloc<pos:position pos:line="11" pos:column="21"/></name> <argument_list pos:line="11" pos:column="22">(<argument><expr><sizeof pos:line="11" pos:column="23">sizeof <argument_list pos:line="11" pos:column="30">(<argument><expr><operator pos:line="11" pos:column="31">*<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">msg<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">msg<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">==<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25">
	<block pos:line="13" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">ERROR<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><literal type="string" pos:line="14" pos:column="24">"write_riemann plugin: malloc failed."<pos:position pos:line="14" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">NULL<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">)<pos:position pos:line="15" pos:column="30"/></operator></expr>;<pos:position pos:line="15" pos:column="31"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">memset<pos:position pos:line="17" pos:column="15"/></name> <argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">msg<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="22">0<pos:position pos:line="17" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="25">sizeof <argument_list pos:line="17" pos:column="32">(<argument><expr><operator pos:line="17" pos:column="33">*<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">msg<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">msg__init<pos:position pos:line="18" pos:column="18"/></name> <argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">msg<pos:position pos:line="18" pos:column="23"/></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">msg<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">events<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">malloc<pos:position pos:line="20" pos:column="29"/></name> <argument_list pos:line="20" pos:column="30">(<argument><expr><sizeof pos:line="20" pos:column="31">sizeof <argument_list pos:line="20" pos:column="38">(<argument><expr><operator pos:line="20" pos:column="39">*<pos:position pos:line="20" pos:column="40"/></operator><name><name pos:line="20" pos:column="40">msg<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">events<pos:position pos:line="20" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">msg<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">events<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">==<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">NULL<pos:position pos:line="21" pos:column="32"/></name></expr>)<pos:position pos:line="21" pos:column="33"/></condition><then pos:line="21" pos:column="33">
	<block pos:line="22" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">ERROR<pos:position pos:line="23" pos:column="22"/></name> <argument_list pos:line="23" pos:column="23">(<argument><expr><literal type="string" pos:line="23" pos:column="24">"write_riemann plugin: malloc failed."<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">sfree<pos:position pos:line="24" pos:column="22"/></name> <argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">msg<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><operator pos:line="25" pos:column="24">(<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">NULL<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">)<pos:position pos:line="25" pos:column="30"/></operator></expr>;<pos:position pos:line="25" pos:column="31"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="28" pos:column="9">event<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <call><name pos:line="28" pos:column="17">malloc<pos:position pos:line="28" pos:column="23"/></name> <argument_list pos:line="28" pos:column="24">(<argument><expr><sizeof pos:line="28" pos:column="25">sizeof <argument_list pos:line="28" pos:column="32">(<argument><expr><operator pos:line="28" pos:column="33">*<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">event<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">event<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">==<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">NULL<pos:position pos:line="29" pos:column="26"/></name></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27">
	<block pos:line="30" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">ERROR<pos:position pos:line="31" pos:column="22"/></name> <argument_list pos:line="31" pos:column="23">(<argument><expr><literal type="string" pos:line="31" pos:column="24">"write_riemann plugin: malloc failed."<pos:position pos:line="31" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">sfree<pos:position pos:line="32" pos:column="22"/></name> <argument_list pos:line="32" pos:column="23">(<argument><expr><name><name pos:line="32" pos:column="24">msg<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">events<pos:position pos:line="32" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">sfree<pos:position pos:line="33" pos:column="22"/></name> <argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">msg<pos:position pos:line="33" pos:column="27"/></name></expr></argument>)<pos:position pos:line="33" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
		<return pos:line="34" pos:column="17">return <expr><operator pos:line="34" pos:column="24">(<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">NULL<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">)<pos:position pos:line="34" pos:column="30"/></operator></expr>;<pos:position pos:line="34" pos:column="31"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">memset<pos:position pos:line="36" pos:column="15"/></name> <argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">event<pos:position pos:line="36" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="24">0<pos:position pos:line="36" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="27">sizeof <argument_list pos:line="36" pos:column="34">(<argument><expr><operator pos:line="36" pos:column="35">*<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">event<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">event__init<pos:position pos:line="37" pos:column="20"/></name> <argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">event<pos:position pos:line="37" pos:column="27"/></name></expr></argument>)<pos:position pos:line="37" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="39" pos:column="9">msg<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">events<pos:position pos:line="39" pos:column="20"/></name><index pos:line="39" pos:column="20">[<expr><literal type="number" pos:line="39" pos:column="21">0<pos:position pos:line="39" pos:column="22"/></literal></expr>]<pos:position pos:line="39" pos:column="23"/></index></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="26">event<pos:position pos:line="39" pos:column="31"/></name></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="40" pos:column="9">msg<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">-&gt;<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="14">n_events<pos:position pos:line="40" pos:column="22"/></name></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <literal type="number" pos:line="40" pos:column="25">1<pos:position pos:line="40" pos:column="26"/></literal></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="42" pos:column="9">event<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">host<pos:position pos:line="42" pos:column="20"/></name></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <call><name pos:line="42" pos:column="23">strdup<pos:position pos:line="42" pos:column="29"/></name> <argument_list pos:line="42" pos:column="30">(<argument><expr><name><name pos:line="42" pos:column="31">n<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">-&gt;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="34">host<pos:position pos:line="42" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">event<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">time<pos:position pos:line="43" pos:column="20"/></name></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <call><name pos:line="43" pos:column="23">CDTIME_T_TO_TIME_T<pos:position pos:line="43" pos:column="41"/></name> <argument_list pos:line="43" pos:column="42">(<argument><expr><name><name pos:line="43" pos:column="43">n<pos:position pos:line="43" pos:column="44"/></name><operator pos:line="43" pos:column="44">-&gt;<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="46">time<pos:position pos:line="43" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">event<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">has_time<pos:position pos:line="44" pos:column="24"/></name></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <literal type="number" pos:line="44" pos:column="27">1<pos:position pos:line="44" pos:column="28"/></literal></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>

	<switch pos:line="46" pos:column="9">switch <condition pos:line="46" pos:column="16">(<expr><name><name pos:line="46" pos:column="17">n<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">-&gt;<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="20">severity<pos:position pos:line="46" pos:column="28"/></name></name></expr>)<pos:position pos:line="46" pos:column="29"/></condition>
	<block pos:line="47" pos:column="9">{
		<case pos:line="48" pos:column="17">case <expr><name pos:line="48" pos:column="22">NOTIF_OKAY<pos:position pos:line="48" pos:column="32"/></name></expr>:<pos:position pos:line="48" pos:column="33"/></case>	<expr_stmt><expr><name pos:line="48" pos:column="41">severity<pos:position pos:line="48" pos:column="49"/></name> <operator pos:line="48" pos:column="50">=<pos:position pos:line="48" pos:column="51"/></operator> <literal type="string" pos:line="48" pos:column="52">"ok"<pos:position pos:line="48" pos:column="56"/></literal></expr>;<pos:position pos:line="48" pos:column="57"/></expr_stmt> <break pos:line="48" pos:column="58">break;<pos:position pos:line="48" pos:column="64"/></break>
		<case pos:line="49" pos:column="17">case <expr><name pos:line="49" pos:column="22">NOTIF_WARNING<pos:position pos:line="49" pos:column="35"/></name></expr>:<pos:position pos:line="49" pos:column="36"/></case>	<expr_stmt><expr><name pos:line="49" pos:column="41">severity<pos:position pos:line="49" pos:column="49"/></name> <operator pos:line="49" pos:column="50">=<pos:position pos:line="49" pos:column="51"/></operator> <literal type="string" pos:line="49" pos:column="52">"warning"<pos:position pos:line="49" pos:column="61"/></literal></expr>;<pos:position pos:line="49" pos:column="62"/></expr_stmt> <break pos:line="49" pos:column="63">break;<pos:position pos:line="49" pos:column="69"/></break>
		<case pos:line="50" pos:column="17">case <expr><name pos:line="50" pos:column="22">NOTIF_FAILURE<pos:position pos:line="50" pos:column="35"/></name></expr>:<pos:position pos:line="50" pos:column="36"/></case>	<expr_stmt><expr><name pos:line="50" pos:column="41">severity<pos:position pos:line="50" pos:column="49"/></name> <operator pos:line="50" pos:column="50">=<pos:position pos:line="50" pos:column="51"/></operator> <literal type="string" pos:line="50" pos:column="52">"critical"<pos:position pos:line="50" pos:column="62"/></literal></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt> <break pos:line="50" pos:column="64">break;<pos:position pos:line="50" pos:column="70"/></break>
		<default pos:line="51" pos:column="17">default:<pos:position pos:line="51" pos:column="25"/></default>		<expr_stmt><expr><name pos:line="51" pos:column="41">severity<pos:position pos:line="51" pos:column="49"/></name> <operator pos:line="51" pos:column="50">=<pos:position pos:line="51" pos:column="51"/></operator> <literal type="string" pos:line="51" pos:column="52">"unknown"<pos:position pos:line="51" pos:column="61"/></literal></expr>;<pos:position pos:line="51" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></switch>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">event<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">-&gt;<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="16">state<pos:position pos:line="53" pos:column="21"/></name></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <call><name pos:line="53" pos:column="24">strdup<pos:position pos:line="53" pos:column="30"/></name> <argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">severity<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">riemann_event_add_tag<pos:position pos:line="55" pos:column="30"/></name> <argument_list pos:line="55" pos:column="31">(<argument><expr><name pos:line="55" pos:column="32">event<pos:position pos:line="55" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="39">"notification"<pos:position pos:line="55" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="55"/></expr_stmt>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">n<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">host<pos:position pos:line="56" pos:column="20"/></name><index pos:line="56" pos:column="20">[<expr><literal type="number" pos:line="56" pos:column="21">0<pos:position pos:line="56" pos:column="22"/></literal></expr>]<pos:position pos:line="56" pos:column="23"/></index></name> <operator pos:line="56" pos:column="24">!=<pos:position pos:line="56" pos:column="26"/></operator> <literal type="number" pos:line="56" pos:column="27">0<pos:position pos:line="56" pos:column="28"/></literal></expr>)<pos:position pos:line="56" pos:column="29"/></condition><then pos:line="56" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="17">riemann_event_add_attribute<pos:position pos:line="57" pos:column="44"/></name> <argument_list pos:line="57" pos:column="45">(<argument><expr><name pos:line="57" pos:column="46">event<pos:position pos:line="57" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="53">"host"<pos:position pos:line="57" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="61">n<pos:position pos:line="57" pos:column="62"/></name><operator pos:line="57" pos:column="62">-&gt;<pos:position pos:line="57" pos:column="67"/></operator><name pos:line="57" pos:column="64">host<pos:position pos:line="57" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="70"/></expr_stmt></block></then></if>
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">n<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">plugin<pos:position pos:line="58" pos:column="22"/></name><index pos:line="58" pos:column="22">[<expr><literal type="number" pos:line="58" pos:column="23">0<pos:position pos:line="58" pos:column="24"/></literal></expr>]<pos:position pos:line="58" pos:column="25"/></index></name> <operator pos:line="58" pos:column="26">!=<pos:position pos:line="58" pos:column="28"/></operator> <literal type="number" pos:line="58" pos:column="29">0<pos:position pos:line="58" pos:column="30"/></literal></expr>)<pos:position pos:line="58" pos:column="31"/></condition><then pos:line="58" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="17">riemann_event_add_attribute<pos:position pos:line="59" pos:column="44"/></name> <argument_list pos:line="59" pos:column="45">(<argument><expr><name pos:line="59" pos:column="46">event<pos:position pos:line="59" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="53">"plugin"<pos:position pos:line="59" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="63">n<pos:position pos:line="59" pos:column="64"/></name><operator pos:line="59" pos:column="64">-&gt;<pos:position pos:line="59" pos:column="69"/></operator><name pos:line="59" pos:column="66">plugin<pos:position pos:line="59" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="74"/></expr_stmt></block></then></if>
	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name><name pos:line="60" pos:column="13">n<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">-&gt;<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="16">plugin_instance<pos:position pos:line="60" pos:column="31"/></name><index pos:line="60" pos:column="31">[<expr><literal type="number" pos:line="60" pos:column="32">0<pos:position pos:line="60" pos:column="33"/></literal></expr>]<pos:position pos:line="60" pos:column="34"/></index></name> <operator pos:line="60" pos:column="35">!=<pos:position pos:line="60" pos:column="37"/></operator> <literal type="number" pos:line="60" pos:column="38">0<pos:position pos:line="60" pos:column="39"/></literal></expr>)<pos:position pos:line="60" pos:column="40"/></condition><then pos:line="60" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="17">riemann_event_add_attribute<pos:position pos:line="61" pos:column="44"/></name> <argument_list pos:line="61" pos:column="45">(<argument><expr><name pos:line="61" pos:column="46">event<pos:position pos:line="61" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="53">"plugin_instance"<pos:position pos:line="61" pos:column="70"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="62" pos:column="33">n<pos:position pos:line="62" pos:column="34"/></name><operator pos:line="62" pos:column="34">-&gt;<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="36">plugin_instance<pos:position pos:line="62" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="53"/></expr_stmt></block></then></if>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name><name pos:line="64" pos:column="13">n<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">-&gt;<pos:position pos:line="64" pos:column="19"/></operator><name pos:line="64" pos:column="16">type<pos:position pos:line="64" pos:column="20"/></name><index pos:line="64" pos:column="20">[<expr><literal type="number" pos:line="64" pos:column="21">0<pos:position pos:line="64" pos:column="22"/></literal></expr>]<pos:position pos:line="64" pos:column="23"/></index></name> <operator pos:line="64" pos:column="24">!=<pos:position pos:line="64" pos:column="26"/></operator> <literal type="number" pos:line="64" pos:column="27">0<pos:position pos:line="64" pos:column="28"/></literal></expr>)<pos:position pos:line="64" pos:column="29"/></condition><then pos:line="64" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="17">riemann_event_add_attribute<pos:position pos:line="65" pos:column="44"/></name> <argument_list pos:line="65" pos:column="45">(<argument><expr><name pos:line="65" pos:column="46">event<pos:position pos:line="65" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="53">"type"<pos:position pos:line="65" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="61">n<pos:position pos:line="65" pos:column="62"/></name><operator pos:line="65" pos:column="62">-&gt;<pos:position pos:line="65" pos:column="67"/></operator><name pos:line="65" pos:column="64">type<pos:position pos:line="65" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="70"/></expr_stmt></block></then></if>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name><name pos:line="66" pos:column="13">n<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">type_instance<pos:position pos:line="66" pos:column="29"/></name><index pos:line="66" pos:column="29">[<expr><literal type="number" pos:line="66" pos:column="30">0<pos:position pos:line="66" pos:column="31"/></literal></expr>]<pos:position pos:line="66" pos:column="32"/></index></name> <operator pos:line="66" pos:column="33">!=<pos:position pos:line="66" pos:column="35"/></operator> <literal type="number" pos:line="66" pos:column="36">0<pos:position pos:line="66" pos:column="37"/></literal></expr>)<pos:position pos:line="66" pos:column="38"/></condition><then pos:line="66" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="17">riemann_event_add_attribute<pos:position pos:line="67" pos:column="44"/></name> <argument_list pos:line="67" pos:column="45">(<argument><expr><name pos:line="67" pos:column="46">event<pos:position pos:line="67" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="53">"type_instance"<pos:position pos:line="67" pos:column="68"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="68" pos:column="33">n<pos:position pos:line="68" pos:column="34"/></name><operator pos:line="68" pos:column="34">-&gt;<pos:position pos:line="68" pos:column="39"/></operator><name pos:line="68" pos:column="36">type_instance<pos:position pos:line="68" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="51"/></expr_stmt></block></then></if>

	<for pos:line="70" pos:column="9">for <control pos:line="70" pos:column="13">(<init><expr><name pos:line="70" pos:column="14">i<pos:position pos:line="70" pos:column="15"/></name> <operator pos:line="70" pos:column="16">=<pos:position pos:line="70" pos:column="17"/></operator> <literal type="number" pos:line="70" pos:column="18">0<pos:position pos:line="70" pos:column="19"/></literal></expr>;<pos:position pos:line="70" pos:column="20"/></init> <condition><expr><name pos:line="70" pos:column="21">i<pos:position pos:line="70" pos:column="22"/></name> <operator pos:line="70" pos:column="23">&lt;<pos:position pos:line="70" pos:column="27"/></operator> <name pos:line="70" pos:column="25">riemann_attrs_num<pos:position pos:line="70" pos:column="42"/></name></expr>;<pos:position pos:line="70" pos:column="43"/></condition> <incr><expr><name pos:line="70" pos:column="44">i<pos:position pos:line="70" pos:column="45"/></name> <operator pos:line="70" pos:column="46">+=<pos:position pos:line="70" pos:column="48"/></operator> <literal type="number" pos:line="70" pos:column="49">2<pos:position pos:line="70" pos:column="50"/></literal></expr></incr>)<pos:position pos:line="70" pos:column="51"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="17">riemann_event_add_attribute<pos:position pos:line="71" pos:column="44"/></name><argument_list pos:line="71" pos:column="44">(<argument><expr><name pos:line="71" pos:column="45">event<pos:position pos:line="71" pos:column="50"/></name></expr></argument>,
					    <argument><expr><name><name pos:line="72" pos:column="45">riemann_attrs<pos:position pos:line="72" pos:column="58"/></name><index pos:line="72" pos:column="58">[<expr><name pos:line="72" pos:column="59">i<pos:position pos:line="72" pos:column="60"/></name></expr>]<pos:position pos:line="72" pos:column="61"/></index></name></expr></argument>,
					    <argument><expr><name><name pos:line="73" pos:column="45">riemann_attrs<pos:position pos:line="73" pos:column="58"/></name><index pos:line="73" pos:column="58">[<expr><name pos:line="73" pos:column="59">i<pos:position pos:line="73" pos:column="60"/></name> <operator pos:line="73" pos:column="61">+<pos:position pos:line="73" pos:column="62"/></operator><literal type="number" pos:line="73" pos:column="62">1<pos:position pos:line="73" pos:column="63"/></literal></expr>]<pos:position pos:line="73" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="73" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="66"/></expr_stmt></block></for>

	<for pos:line="75" pos:column="9">for <control pos:line="75" pos:column="13">(<init><expr><name pos:line="75" pos:column="14">i<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <literal type="number" pos:line="75" pos:column="18">0<pos:position pos:line="75" pos:column="19"/></literal></expr>;<pos:position pos:line="75" pos:column="20"/></init> <condition><expr><name pos:line="75" pos:column="21">i<pos:position pos:line="75" pos:column="22"/></name> <operator pos:line="75" pos:column="23">&lt;<pos:position pos:line="75" pos:column="27"/></operator> <name pos:line="75" pos:column="25">riemann_tags_num<pos:position pos:line="75" pos:column="41"/></name></expr>;<pos:position pos:line="75" pos:column="42"/></condition> <incr><expr><name pos:line="75" pos:column="43">i<pos:position pos:line="75" pos:column="44"/></name><operator pos:line="75" pos:column="44">++<pos:position pos:line="75" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="75" pos:column="47"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="17">riemann_event_add_tag<pos:position pos:line="76" pos:column="38"/></name> <argument_list pos:line="76" pos:column="39">(<argument><expr><name pos:line="76" pos:column="40">event<pos:position pos:line="76" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="47">riemann_tags<pos:position pos:line="76" pos:column="59"/></name><index pos:line="76" pos:column="59">[<expr><name pos:line="76" pos:column="60">i<pos:position pos:line="76" pos:column="61"/></name></expr>]<pos:position pos:line="76" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="76" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="64"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="78" pos:column="9">format_name<pos:position pos:line="78" pos:column="20"/></name> <argument_list pos:line="78" pos:column="21">(<argument><expr><name pos:line="78" pos:column="22">service_buffer<pos:position pos:line="78" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="78" pos:column="38">sizeof <argument_list pos:line="78" pos:column="45">(<argument><expr><name pos:line="78" pos:column="46">service_buffer<pos:position pos:line="78" pos:column="60"/></name></expr></argument>)<pos:position pos:line="78" pos:column="61"/></argument_list></sizeof></expr></argument>,
			<comment type="block" pos:line="79" pos:column="25">/* host = */</comment> <argument><expr><literal type="string" pos:line="79" pos:column="38">""<pos:position pos:line="79" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="42">n<pos:position pos:line="79" pos:column="43"/></name><operator pos:line="79" pos:column="43">-&gt;<pos:position pos:line="79" pos:column="48"/></operator><name pos:line="79" pos:column="45">plugin<pos:position pos:line="79" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="53">n<pos:position pos:line="79" pos:column="54"/></name><operator pos:line="79" pos:column="54">-&gt;<pos:position pos:line="79" pos:column="59"/></operator><name pos:line="79" pos:column="56">plugin_instance<pos:position pos:line="79" pos:column="71"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="80" pos:column="25">n<pos:position pos:line="80" pos:column="26"/></name><operator pos:line="80" pos:column="26">-&gt;<pos:position pos:line="80" pos:column="31"/></operator><name pos:line="80" pos:column="28">type<pos:position pos:line="80" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="34">n<pos:position pos:line="80" pos:column="35"/></name><operator pos:line="80" pos:column="35">-&gt;<pos:position pos:line="80" pos:column="40"/></operator><name pos:line="80" pos:column="37">type_instance<pos:position pos:line="80" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="81" pos:column="9">event<pos:position pos:line="81" pos:column="14"/></name><operator pos:line="81" pos:column="14">-&gt;<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="16">service<pos:position pos:line="81" pos:column="23"/></name></name> <operator pos:line="81" pos:column="24">=<pos:position pos:line="81" pos:column="25"/></operator> <call><name pos:line="81" pos:column="26">strdup<pos:position pos:line="81" pos:column="32"/></name> <argument_list pos:line="81" pos:column="33">(<argument><expr><operator pos:line="81" pos:column="34">&amp;<pos:position pos:line="81" pos:column="39"/></operator><name><name pos:line="81" pos:column="35">service_buffer<pos:position pos:line="81" pos:column="49"/></name><index pos:line="81" pos:column="49">[<expr><literal type="number" pos:line="81" pos:column="50">1<pos:position pos:line="81" pos:column="51"/></literal></expr>]<pos:position pos:line="81" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="81" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="54"/></expr_stmt>

	<if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name><name pos:line="83" pos:column="13">n<pos:position pos:line="83" pos:column="14"/></name><operator pos:line="83" pos:column="14">-&gt;<pos:position pos:line="83" pos:column="19"/></operator><name pos:line="83" pos:column="16">message<pos:position pos:line="83" pos:column="23"/></name><index pos:line="83" pos:column="23">[<expr><literal type="number" pos:line="83" pos:column="24">0<pos:position pos:line="83" pos:column="25"/></literal></expr>]<pos:position pos:line="83" pos:column="26"/></index></name> <operator pos:line="83" pos:column="27">!=<pos:position pos:line="83" pos:column="29"/></operator> <literal type="number" pos:line="83" pos:column="30">0<pos:position pos:line="83" pos:column="31"/></literal></expr>)<pos:position pos:line="83" pos:column="32"/></condition><then pos:line="83" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="17">riemann_event_add_attribute<pos:position pos:line="84" pos:column="44"/></name> <argument_list pos:line="84" pos:column="45">(<argument><expr><name pos:line="84" pos:column="46">event<pos:position pos:line="84" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="53">"description"<pos:position pos:line="84" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="68">n<pos:position pos:line="84" pos:column="69"/></name><operator pos:line="84" pos:column="69">-&gt;<pos:position pos:line="84" pos:column="74"/></operator><name pos:line="84" pos:column="71">message<pos:position pos:line="84" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="80"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="86" pos:column="9">/* Pull in values from threshold and add extra attributes */</comment>
	<for pos:line="87" pos:column="9">for <control pos:line="87" pos:column="13">(<init><expr><name pos:line="87" pos:column="14">meta<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">=<pos:position pos:line="87" pos:column="20"/></operator> <name><name pos:line="87" pos:column="21">n<pos:position pos:line="87" pos:column="22"/></name><operator pos:line="87" pos:column="22">-&gt;<pos:position pos:line="87" pos:column="27"/></operator><name pos:line="87" pos:column="24">meta<pos:position pos:line="87" pos:column="28"/></name></name></expr>;<pos:position pos:line="87" pos:column="29"/></init> <condition><expr><name pos:line="87" pos:column="30">meta<pos:position pos:line="87" pos:column="34"/></name> <operator pos:line="87" pos:column="35">!=<pos:position pos:line="87" pos:column="37"/></operator> <name pos:line="87" pos:column="38">NULL<pos:position pos:line="87" pos:column="42"/></name></expr>;<pos:position pos:line="87" pos:column="43"/></condition> <incr><expr><name pos:line="87" pos:column="44">meta<pos:position pos:line="87" pos:column="48"/></name> <operator pos:line="87" pos:column="49">=<pos:position pos:line="87" pos:column="50"/></operator> <name><name pos:line="87" pos:column="51">meta<pos:position pos:line="87" pos:column="55"/></name><operator pos:line="87" pos:column="55">-&gt;<pos:position pos:line="87" pos:column="60"/></operator><name pos:line="87" pos:column="57">next<pos:position pos:line="87" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="87" pos:column="62"/></control>
	<block pos:line="88" pos:column="9">{
		<if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><call><name pos:line="89" pos:column="21">strcasecmp<pos:position pos:line="89" pos:column="31"/></name> <argument_list pos:line="89" pos:column="32">(<argument><expr><literal type="string" pos:line="89" pos:column="33">"CurrentValue"<pos:position pos:line="89" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="49">meta<pos:position pos:line="89" pos:column="53"/></name><operator pos:line="89" pos:column="53">-&gt;<pos:position pos:line="89" pos:column="58"/></operator><name pos:line="89" pos:column="55">name<pos:position pos:line="89" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="60"/></argument_list></call> <operator pos:line="89" pos:column="61">==<pos:position pos:line="89" pos:column="63"/></operator> <literal type="number" pos:line="89" pos:column="64">0<pos:position pos:line="89" pos:column="65"/></literal> <operator pos:line="89" pos:column="66">&amp;&amp;<pos:position pos:line="89" pos:column="76"/></operator> <name><name pos:line="89" pos:column="69">meta<pos:position pos:line="89" pos:column="73"/></name><operator pos:line="89" pos:column="73">-&gt;<pos:position pos:line="89" pos:column="78"/></operator><name pos:line="89" pos:column="75">type<pos:position pos:line="89" pos:column="79"/></name></name> <operator pos:line="89" pos:column="80">==<pos:position pos:line="89" pos:column="82"/></operator> <name pos:line="89" pos:column="83">NM_TYPE_DOUBLE<pos:position pos:line="89" pos:column="97"/></name></expr>)<pos:position pos:line="89" pos:column="98"/></condition><then pos:line="89" pos:column="98">
		<block pos:line="90" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="91" pos:column="25">event<pos:position pos:line="91" pos:column="30"/></name><operator pos:line="91" pos:column="30">-&gt;<pos:position pos:line="91" pos:column="35"/></operator><name pos:line="91" pos:column="32">metric_d<pos:position pos:line="91" pos:column="40"/></name></name> <operator pos:line="91" pos:column="41">=<pos:position pos:line="91" pos:column="42"/></operator> <name><name pos:line="91" pos:column="43">meta<pos:position pos:line="91" pos:column="47"/></name><operator pos:line="91" pos:column="47">-&gt;<pos:position pos:line="91" pos:column="52"/></operator><name pos:line="91" pos:column="49">nm_value<pos:position pos:line="91" pos:column="57"/></name><operator pos:line="91" pos:column="57">.<pos:position pos:line="91" pos:column="58"/></operator><name pos:line="91" pos:column="58">nm_double<pos:position pos:line="91" pos:column="67"/></name></name></expr>;<pos:position pos:line="91" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="92" pos:column="25">event<pos:position pos:line="92" pos:column="30"/></name><operator pos:line="92" pos:column="30">-&gt;<pos:position pos:line="92" pos:column="35"/></operator><name pos:line="92" pos:column="32">has_metric_d<pos:position pos:line="92" pos:column="44"/></name></name> <operator pos:line="92" pos:column="45">=<pos:position pos:line="92" pos:column="46"/></operator> <literal type="number" pos:line="92" pos:column="47">1<pos:position pos:line="92" pos:column="48"/></literal></expr>;<pos:position pos:line="92" pos:column="49"/></expr_stmt>
			<continue pos:line="93" pos:column="25">continue;<pos:position pos:line="93" pos:column="34"/></continue>
		}<pos:position pos:line="94" pos:column="18"/></block></then></if>

		<if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><name><name pos:line="96" pos:column="21">meta<pos:position pos:line="96" pos:column="25"/></name><operator pos:line="96" pos:column="25">-&gt;<pos:position pos:line="96" pos:column="30"/></operator><name pos:line="96" pos:column="27">type<pos:position pos:line="96" pos:column="31"/></name></name> <operator pos:line="96" pos:column="32">==<pos:position pos:line="96" pos:column="34"/></operator> <name pos:line="96" pos:column="35">NM_TYPE_STRING<pos:position pos:line="96" pos:column="49"/></name></expr>)<pos:position pos:line="96" pos:column="50"/></condition><then pos:line="96" pos:column="50"> <block pos:line="96" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="97" pos:column="25">riemann_event_add_attribute<pos:position pos:line="97" pos:column="52"/></name> <argument_list pos:line="97" pos:column="53">(<argument><expr><name pos:line="97" pos:column="54">event<pos:position pos:line="97" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="61">meta<pos:position pos:line="97" pos:column="65"/></name><operator pos:line="97" pos:column="65">-&gt;<pos:position pos:line="97" pos:column="70"/></operator><name pos:line="97" pos:column="67">name<pos:position pos:line="97" pos:column="71"/></name></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="73">meta<pos:position pos:line="97" pos:column="77"/></name><operator pos:line="97" pos:column="77">-&gt;<pos:position pos:line="97" pos:column="82"/></operator><name pos:line="97" pos:column="79">nm_value<pos:position pos:line="97" pos:column="87"/></name><operator pos:line="97" pos:column="87">.<pos:position pos:line="97" pos:column="88"/></operator><name pos:line="97" pos:column="88">nm_string<pos:position pos:line="97" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="99"/></expr_stmt>
			<continue pos:line="98" pos:column="25">continue;<pos:position pos:line="98" pos:column="34"/></continue>
		}<pos:position pos:line="99" pos:column="18"/></block></then></if>
	}<pos:position pos:line="100" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="102" pos:column="9">DEBUG<pos:position pos:line="102" pos:column="14"/></name> <argument_list pos:line="102" pos:column="15">(<argument><expr><literal type="string" pos:line="102" pos:column="16">"write_riemann plugin: Successfully created protobuf for notification: "<pos:position pos:line="102" pos:column="88"/></literal>
			<literal type="string" pos:line="103" pos:column="25">"host = \"%s\", service = \"%s\", state = \"%s\""<pos:position pos:line="103" pos:column="74"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="104" pos:column="25">event<pos:position pos:line="104" pos:column="30"/></name><operator pos:line="104" pos:column="30">-&gt;<pos:position pos:line="104" pos:column="35"/></operator><name pos:line="104" pos:column="32">host<pos:position pos:line="104" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="38">event<pos:position pos:line="104" pos:column="43"/></name><operator pos:line="104" pos:column="43">-&gt;<pos:position pos:line="104" pos:column="48"/></operator><name pos:line="104" pos:column="45">service<pos:position pos:line="104" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="54">event<pos:position pos:line="104" pos:column="59"/></name><operator pos:line="104" pos:column="59">-&gt;<pos:position pos:line="104" pos:column="64"/></operator><name pos:line="104" pos:column="61">state<pos:position pos:line="104" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="68"/></expr_stmt>
	<return pos:line="105" pos:column="9">return <expr><operator pos:line="105" pos:column="16">(<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="17">msg<pos:position pos:line="105" pos:column="20"/></name><operator pos:line="105" pos:column="20">)<pos:position pos:line="105" pos:column="21"/></operator></expr>;<pos:position pos:line="105" pos:column="22"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

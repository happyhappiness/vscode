<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_732_collectd-4.4.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cache_flush<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">keys<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type>    <name pos:line="4" pos:column="16">keys_num<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><literal type="number" pos:line="4" pos:column="27">0<pos:position pos:line="4" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier><modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">tmp<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type>    <name pos:line="7" pos:column="16">i<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name>   <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">key<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">time_t<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">value<pos:position pos:line="10" pos:column="22"/></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">c_avl_iterator_t<pos:position pos:line="11" pos:column="25"/></name> <modifier pos:line="11" pos:column="26">*<pos:position pos:line="11" pos:column="27"/></modifier></type><name pos:line="11" pos:column="27">iter<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="13" pos:column="9">time_t<pos:position pos:line="13" pos:column="15"/></name></type> <name pos:line="13" pos:column="16">curtime<pos:position pos:line="13" pos:column="23"/></name> <init pos:line="13" pos:column="24">= <expr><call><name pos:line="13" pos:column="26">time<pos:position pos:line="13" pos:column="30"/></name> <argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">NULL<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="38"/></decl_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">iter<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">c_avl_get_iterator<pos:position pos:line="15" pos:column="34"/></name> <argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">cache_tree<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><call><name pos:line="16" pos:column="16">c_avl_iterator_next<pos:position pos:line="16" pos:column="35"/></name> <argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">iter<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="43">(<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">void<pos:position pos:line="16" pos:column="48"/></name> <operator pos:line="16" pos:column="49">*<pos:position pos:line="16" pos:column="50"/></operator><operator pos:line="16" pos:column="50">)<pos:position pos:line="16" pos:column="51"/></operator> <operator pos:line="16" pos:column="52">&amp;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="53">key<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="58">(<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="59">void<pos:position pos:line="16" pos:column="63"/></name> <operator pos:line="16" pos:column="64">*<pos:position pos:line="16" pos:column="65"/></operator><operator pos:line="16" pos:column="65">)<pos:position pos:line="16" pos:column="66"/></operator> <operator pos:line="16" pos:column="67">&amp;<pos:position pos:line="16" pos:column="72"/></operator><name pos:line="16" pos:column="68">value<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call> <operator pos:line="16" pos:column="75">==<pos:position pos:line="16" pos:column="77"/></operator> <literal type="number" pos:line="16" pos:column="78">0<pos:position pos:line="16" pos:column="79"/></literal></expr>)<pos:position pos:line="16" pos:column="80"/></condition>
	<block pos:line="17" pos:column="9">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">(<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">curtime<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">-<pos:position pos:line="18" pos:column="31"/></operator> <operator pos:line="18" pos:column="32">*<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">value<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">)<pos:position pos:line="18" pos:column="39"/></operator> <operator pos:line="18" pos:column="40">&lt;=<pos:position pos:line="18" pos:column="45"/></operator> <name pos:line="18" pos:column="43">cache_flush_interval<pos:position pos:line="18" pos:column="63"/></name></expr>)<pos:position pos:line="18" pos:column="64"/></condition><then pos:line="18" pos:column="64">
			<block type="pseudo"><continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="20" pos:column="17">tmp<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <operator pos:line="20" pos:column="23">(<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">char<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">*<pos:position pos:line="20" pos:column="30"/></operator><operator pos:line="20" pos:column="30">*<pos:position pos:line="20" pos:column="31"/></operator><operator pos:line="20" pos:column="31">)<pos:position pos:line="20" pos:column="32"/></operator> <call><name pos:line="20" pos:column="33">realloc<pos:position pos:line="20" pos:column="40"/></name> <argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">keys<pos:position pos:line="20" pos:column="46"/></name></expr></argument>,
				<argument><expr><operator pos:line="21" pos:column="33">(<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">keys_num<pos:position pos:line="21" pos:column="42"/></name> <operator pos:line="21" pos:column="43">+<pos:position pos:line="21" pos:column="44"/></operator> <literal type="number" pos:line="21" pos:column="45">1<pos:position pos:line="21" pos:column="46"/></literal><operator pos:line="21" pos:column="46">)<pos:position pos:line="21" pos:column="47"/></operator> <operator pos:line="21" pos:column="48">*<pos:position pos:line="21" pos:column="49"/></operator> <sizeof pos:line="21" pos:column="50">sizeof <argument_list pos:line="21" pos:column="57">(<argument><expr><name pos:line="21" pos:column="58">char<pos:position pos:line="21" pos:column="62"/></name> <operator pos:line="21" pos:column="63">*<pos:position pos:line="21" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="67"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">tmp<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">==<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">NULL<pos:position pos:line="22" pos:column="32"/></name></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33">
		<block pos:line="23" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">sfree<pos:position pos:line="24" pos:column="30"/></name> <argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">keys<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">c_avl_iterator_destroy<pos:position pos:line="25" pos:column="47"/></name> <argument_list pos:line="25" pos:column="48">(<argument><expr><name pos:line="25" pos:column="49">iter<pos:position pos:line="25" pos:column="53"/></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">ERROR<pos:position pos:line="26" pos:column="30"/></name> <argument_list pos:line="26" pos:column="31">(<argument><expr><literal type="string" pos:line="26" pos:column="32">"network plugin: cache_flush: realloc"<pos:position pos:line="26" pos:column="70"/></literal>
					<literal type="string" pos:line="27" pos:column="41">" failed."<pos:position pos:line="27" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
			<return pos:line="28" pos:column="25">return <expr><operator pos:line="28" pos:column="32">(<pos:position pos:line="28" pos:column="33"/></operator><operator pos:line="28" pos:column="33">-<pos:position pos:line="28" pos:column="34"/></operator><literal type="number" pos:line="28" pos:column="34">1<pos:position pos:line="28" pos:column="35"/></literal><operator pos:line="28" pos:column="35">)<pos:position pos:line="28" pos:column="36"/></operator></expr>;<pos:position pos:line="28" pos:column="37"/></return>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="30" pos:column="17">keys<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">tmp<pos:position pos:line="30" pos:column="27"/></name></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">keys<pos:position pos:line="31" pos:column="21"/></name><index pos:line="31" pos:column="21">[<expr><name pos:line="31" pos:column="22">keys_num<pos:position pos:line="31" pos:column="30"/></name></expr>]<pos:position pos:line="31" pos:column="31"/></index></name> <operator pos:line="31" pos:column="32">=<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="34">key<pos:position pos:line="31" pos:column="37"/></name></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">keys_num<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">++<pos:position pos:line="32" pos:column="27"/></operator></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></while> <comment type="block" pos:line="33" pos:column="11">/* while (c_avl_iterator_next) */</comment>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">c_avl_iterator_destroy<pos:position pos:line="34" pos:column="31"/></name> <argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">iter<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>

	<for pos:line="36" pos:column="9">for <control pos:line="36" pos:column="13">(<init><expr><name pos:line="36" pos:column="14">i<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <literal type="number" pos:line="36" pos:column="18">0<pos:position pos:line="36" pos:column="19"/></literal></expr>;<pos:position pos:line="36" pos:column="20"/></init> <condition><expr><name pos:line="36" pos:column="21">i<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&lt;<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="25">keys_num<pos:position pos:line="36" pos:column="33"/></name></expr>;<pos:position pos:line="36" pos:column="34"/></condition> <incr><expr><name pos:line="36" pos:column="35">i<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">++<pos:position pos:line="36" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="39"/></control>
	<block pos:line="37" pos:column="9">{
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">c_avl_remove<pos:position pos:line="38" pos:column="33"/></name> <argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">cache_tree<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="47">keys<pos:position pos:line="38" pos:column="51"/></name><index pos:line="38" pos:column="51">[<expr><name pos:line="38" pos:column="52">i<pos:position pos:line="38" pos:column="53"/></name></expr>]<pos:position pos:line="38" pos:column="54"/></index></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="56">(<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="57">void<pos:position pos:line="38" pos:column="61"/></name> <operator pos:line="38" pos:column="62">*<pos:position pos:line="38" pos:column="63"/></operator><operator pos:line="38" pos:column="63">)<pos:position pos:line="38" pos:column="64"/></operator> <operator pos:line="38" pos:column="65">&amp;<pos:position pos:line="38" pos:column="70"/></operator><name pos:line="38" pos:column="66">key<pos:position pos:line="38" pos:column="69"/></name></expr></argument>,
					<argument><expr><operator pos:line="39" pos:column="41">(<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">void<pos:position pos:line="39" pos:column="46"/></name> <operator pos:line="39" pos:column="47">*<pos:position pos:line="39" pos:column="48"/></operator><operator pos:line="39" pos:column="48">)<pos:position pos:line="39" pos:column="49"/></operator> <operator pos:line="39" pos:column="50">&amp;<pos:position pos:line="39" pos:column="55"/></operator><name pos:line="39" pos:column="51">value<pos:position pos:line="39" pos:column="56"/></name></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call> <operator pos:line="39" pos:column="58">!=<pos:position pos:line="39" pos:column="60"/></operator> <literal type="number" pos:line="39" pos:column="61">0<pos:position pos:line="39" pos:column="62"/></literal></expr>)<pos:position pos:line="39" pos:column="63"/></condition><then pos:line="39" pos:column="63">
		<block pos:line="40" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">WARNING<pos:position pos:line="41" pos:column="32"/></name> <argument_list pos:line="41" pos:column="33">(<argument><expr><literal type="string" pos:line="41" pos:column="34">"network plugin: cache_flush: c_avl_remove"<pos:position pos:line="41" pos:column="77"/></literal>
					<literal type="string" pos:line="42" pos:column="41">" (%s) failed."<pos:position pos:line="42" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="58">keys<pos:position pos:line="42" pos:column="62"/></name><index pos:line="42" pos:column="62">[<expr><name pos:line="42" pos:column="63">i<pos:position pos:line="42" pos:column="64"/></name></expr>]<pos:position pos:line="42" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt>
			<continue pos:line="43" pos:column="25">continue;<pos:position pos:line="43" pos:column="34"/></continue>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="46" pos:column="17">sfree<pos:position pos:line="46" pos:column="22"/></name> <argument_list pos:line="46" pos:column="23">(<argument><expr><name pos:line="46" pos:column="24">key<pos:position pos:line="46" pos:column="27"/></name></expr></argument>)<pos:position pos:line="46" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">sfree<pos:position pos:line="47" pos:column="22"/></name> <argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">value<pos:position pos:line="47" pos:column="29"/></name></expr></argument>)<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">sfree<pos:position pos:line="50" pos:column="14"/></name> <argument_list pos:line="50" pos:column="15">(<argument><expr><name pos:line="50" pos:column="16">keys<pos:position pos:line="50" pos:column="20"/></name></expr></argument>)<pos:position pos:line="50" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">DEBUG<pos:position pos:line="52" pos:column="14"/></name> <argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="string" pos:line="52" pos:column="16">"network plugin: cache_flush: Removed %i %s"<pos:position pos:line="52" pos:column="60"/></literal></expr></argument>,
			<argument><expr><name pos:line="53" pos:column="25">keys_num<pos:position pos:line="53" pos:column="33"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="53" pos:column="35">(<pos:position pos:line="53" pos:column="36"/></operator><name pos:line="53" pos:column="36">keys_num<pos:position pos:line="53" pos:column="44"/></name> <operator pos:line="53" pos:column="45">==<pos:position pos:line="53" pos:column="47"/></operator> <literal type="number" pos:line="53" pos:column="48">1<pos:position pos:line="53" pos:column="49"/></literal><operator pos:line="53" pos:column="49">)<pos:position pos:line="53" pos:column="50"/></operator></expr> ?<pos:position pos:line="53" pos:column="52"/></condition><then pos:line="53" pos:column="52"> <expr><literal type="string" pos:line="53" pos:column="53">"entry"<pos:position pos:line="53" pos:column="60"/></literal></expr> <pos:position pos:line="53" pos:column="61"/></then><else pos:line="53" pos:column="61">: <expr><literal type="string" pos:line="53" pos:column="63">"entries"<pos:position pos:line="53" pos:column="72"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><name pos:line="54" pos:column="9">cache_flush_last<pos:position pos:line="54" pos:column="25"/></name> <operator pos:line="54" pos:column="26">=<pos:position pos:line="54" pos:column="27"/></operator> <name pos:line="54" pos:column="28">curtime<pos:position pos:line="54" pos:column="35"/></name></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>
	<return pos:line="55" pos:column="9">return <expr><operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><literal type="number" pos:line="55" pos:column="17">0<pos:position pos:line="55" pos:column="18"/></literal><operator pos:line="55" pos:column="18">)<pos:position pos:line="55" pos:column="19"/></operator></expr>;<pos:position pos:line="55" pos:column="20"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

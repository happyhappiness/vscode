<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1453_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ovs_events_plugin_config<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">oconfig_item_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">ci<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <block pos:line="1" pos:column="57">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">_Bool<pos:position pos:line="2" pos:column="8"/></name></type> <name pos:line="2" pos:column="9">dispatch_values<pos:position pos:line="2" pos:column="24"/></name> <init pos:line="2" pos:column="25">= <expr><literal type="number" pos:line="2" pos:column="27">0<pos:position pos:line="2" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="29"/></decl_stmt>
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init><decl><type><name pos:line="3" pos:column="8">int<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">i<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></init> <condition><expr><name pos:line="3" pos:column="19">i<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">&lt;<pos:position pos:line="3" pos:column="25"/></operator> <name><name pos:line="3" pos:column="23">ci<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">-&gt;<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="27">children_num<pos:position pos:line="3" pos:column="39"/></name></name></expr>;<pos:position pos:line="3" pos:column="40"/></condition> <incr><expr><name pos:line="3" pos:column="41">i<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">++<pos:position pos:line="3" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="3" pos:column="45"/></control> <block pos:line="3" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">oconfig_item_t<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">child<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name><name pos:line="4" pos:column="29">ci<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">children<pos:position pos:line="4" pos:column="41"/></name></name> <operator pos:line="4" pos:column="42">+<pos:position pos:line="4" pos:column="43"/></operator> <name pos:line="4" pos:column="44">i<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">strcasecmp<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><literal type="string" pos:line="5" pos:column="20">"SendNotification"<pos:position pos:line="5" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="40">child<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">key<pos:position pos:line="5" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call> <operator pos:line="5" pos:column="52">==<pos:position pos:line="5" pos:column="54"/></operator> <literal type="number" pos:line="5" pos:column="55">0<pos:position pos:line="5" pos:column="56"/></literal></expr>)<pos:position pos:line="5" pos:column="57"/></condition><then pos:line="5" pos:column="57"> <block pos:line="5" pos:column="58">{
      <if pos:line="6" pos:column="7">if <condition pos:line="6" pos:column="10">(<expr><call><name pos:line="6" pos:column="11">cf_util_get_boolean<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">child<pos:position pos:line="6" pos:column="36"/></name></expr></argument>,
                              <argument><expr><operator pos:line="7" pos:column="31">&amp;<pos:position pos:line="7" pos:column="36"/></operator><name><name pos:line="7" pos:column="32">ovs_events_ctx<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">.<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="47">config<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">.<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="54">send_notification<pos:position pos:line="7" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call> <operator pos:line="7" pos:column="73">!=<pos:position pos:line="7" pos:column="75"/></operator> <literal type="number" pos:line="7" pos:column="76">0<pos:position pos:line="7" pos:column="77"/></literal></expr>)<pos:position pos:line="7" pos:column="78"/></condition><then pos:line="7" pos:column="78"> <block pos:line="7" pos:column="79">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">ovs_events_config_free<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">()<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><operator pos:line="9" pos:column="16">-<pos:position pos:line="9" pos:column="17"/></operator><literal type="number" pos:line="9" pos:column="17">1<pos:position pos:line="9" pos:column="18"/></literal></expr>;<pos:position pos:line="9" pos:column="19"/></return>
      }<pos:position pos:line="10" pos:column="8"/></block></then></if>
    }<pos:position pos:line="11" pos:column="6"/></block></then> <elseif pos:line="11" pos:column="7">else <if pos:line="11" pos:column="12">if <condition pos:line="11" pos:column="15">(<expr><call><name pos:line="11" pos:column="16">strcasecmp<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><literal type="string" pos:line="11" pos:column="27">"Address"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="38">child<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">key<pos:position pos:line="11" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call> <operator pos:line="11" pos:column="50">==<pos:position pos:line="11" pos:column="52"/></operator> <literal type="number" pos:line="11" pos:column="53">0<pos:position pos:line="11" pos:column="54"/></literal></expr>)<pos:position pos:line="11" pos:column="55"/></condition><then pos:line="11" pos:column="55"> <block pos:line="11" pos:column="56">{
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><call><name pos:line="12" pos:column="11">cf_util_get_string_buffer<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(
              <argument><expr><name pos:line="13" pos:column="15">child<pos:position pos:line="13" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="22">ovs_events_ctx<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">.<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="37">config<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">.<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="44">ovs_db_node<pos:position pos:line="13" pos:column="55"/></name></name></expr></argument>,
              <argument><expr><sizeof pos:line="14" pos:column="15">sizeof<argument_list pos:line="14" pos:column="21">(<argument><expr><name><name pos:line="14" pos:column="22">ovs_events_ctx<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">config<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">.<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="44">ovs_db_node<pos:position pos:line="14" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call> <operator pos:line="14" pos:column="58">!=<pos:position pos:line="14" pos:column="60"/></operator> <literal type="number" pos:line="14" pos:column="61">0<pos:position pos:line="14" pos:column="62"/></literal></expr>)<pos:position pos:line="14" pos:column="63"/></condition><then pos:line="14" pos:column="63"> <block pos:line="14" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ovs_events_config_free<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">()<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">-<pos:position pos:line="16" pos:column="17"/></operator><literal type="number" pos:line="16" pos:column="17">1<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></return>
      }<pos:position pos:line="17" pos:column="8"/></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if></elseif> <elseif pos:line="18" pos:column="7">else <if pos:line="18" pos:column="12">if <condition pos:line="18" pos:column="15">(<expr><call><name pos:line="18" pos:column="16">strcasecmp<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><literal type="string" pos:line="18" pos:column="27">"Port"<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="35">child<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">key<pos:position pos:line="18" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call> <operator pos:line="18" pos:column="47">==<pos:position pos:line="18" pos:column="49"/></operator> <literal type="number" pos:line="18" pos:column="50">0<pos:position pos:line="18" pos:column="51"/></literal></expr>)<pos:position pos:line="18" pos:column="52"/></condition><then pos:line="18" pos:column="52"> <block pos:line="18" pos:column="53">{
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">char<pos:position pos:line="19" pos:column="11"/></name> <modifier pos:line="19" pos:column="12">*<pos:position pos:line="19" pos:column="13"/></modifier></type><name pos:line="19" pos:column="13">service<pos:position pos:line="19" pos:column="20"/></name> <init pos:line="19" pos:column="21">= <expr><name pos:line="19" pos:column="23">NULL<pos:position pos:line="19" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="28"/></decl_stmt>
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><call><name pos:line="20" pos:column="11">cf_util_get_service<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">child<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="38">&amp;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="39">service<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call> <operator pos:line="20" pos:column="48">!=<pos:position pos:line="20" pos:column="50"/></operator> <literal type="number" pos:line="20" pos:column="51">0<pos:position pos:line="20" pos:column="52"/></literal></expr>)<pos:position pos:line="20" pos:column="53"/></condition><then pos:line="20" pos:column="53"> <block pos:line="20" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ovs_events_config_free<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">()<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><operator pos:line="22" pos:column="16">-<pos:position pos:line="22" pos:column="17"/></operator><literal type="number" pos:line="22" pos:column="17">1<pos:position pos:line="22" pos:column="18"/></literal></expr>;<pos:position pos:line="22" pos:column="19"/></return>
      }<pos:position pos:line="23" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">sstrncpy<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name><name pos:line="24" pos:column="16">ovs_events_ctx<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">.<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="31">config<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">.<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="38">ovs_db_serv<pos:position pos:line="24" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">service<pos:position pos:line="24" pos:column="58"/></name></expr></argument>,
               <argument><expr><sizeof pos:line="25" pos:column="16">sizeof<argument_list pos:line="25" pos:column="22">(<argument><expr><name><name pos:line="25" pos:column="23">ovs_events_ctx<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">.<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="38">config<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">.<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">ovs_db_serv<pos:position pos:line="25" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">sfree<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><name pos:line="26" pos:column="13">service<pos:position pos:line="26" pos:column="20"/></name></expr></argument>)<pos:position pos:line="26" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if></elseif> <elseif pos:line="27" pos:column="7">else <if pos:line="27" pos:column="12">if <condition pos:line="27" pos:column="15">(<expr><call><name pos:line="27" pos:column="16">strcasecmp<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><literal type="string" pos:line="27" pos:column="27">"Socket"<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="37">child<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">key<pos:position pos:line="27" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call> <operator pos:line="27" pos:column="49">==<pos:position pos:line="27" pos:column="51"/></operator> <literal type="number" pos:line="27" pos:column="52">0<pos:position pos:line="27" pos:column="53"/></literal></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54"> <block pos:line="27" pos:column="55">{
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><call><name pos:line="28" pos:column="11">cf_util_get_string_buffer<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(
              <argument><expr><name pos:line="29" pos:column="15">child<pos:position pos:line="29" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="22">ovs_events_ctx<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">.<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="37">config<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">.<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="44">ovs_db_unix<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>,
              <argument><expr><sizeof pos:line="30" pos:column="15">sizeof<argument_list pos:line="30" pos:column="21">(<argument><expr><name><name pos:line="30" pos:column="22">ovs_events_ctx<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">.<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="37">config<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">.<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="44">ovs_db_unix<pos:position pos:line="30" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call> <operator pos:line="30" pos:column="58">!=<pos:position pos:line="30" pos:column="60"/></operator> <literal type="number" pos:line="30" pos:column="61">0<pos:position pos:line="30" pos:column="62"/></literal></expr>)<pos:position pos:line="30" pos:column="63"/></condition><then pos:line="30" pos:column="63"> <block pos:line="30" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ovs_events_config_free<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">()<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><operator pos:line="32" pos:column="16">-<pos:position pos:line="32" pos:column="17"/></operator><literal type="number" pos:line="32" pos:column="17">1<pos:position pos:line="32" pos:column="18"/></literal></expr>;<pos:position pos:line="32" pos:column="19"/></return>
      }<pos:position pos:line="33" pos:column="8"/></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if></elseif> <elseif pos:line="34" pos:column="7">else <if pos:line="34" pos:column="12">if <condition pos:line="34" pos:column="15">(<expr><call><name pos:line="34" pos:column="16">strcasecmp<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><literal type="string" pos:line="34" pos:column="27">"Interfaces"<pos:position pos:line="34" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="41">child<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">key<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call> <operator pos:line="34" pos:column="53">==<pos:position pos:line="34" pos:column="55"/></operator> <literal type="number" pos:line="34" pos:column="56">0<pos:position pos:line="34" pos:column="57"/></literal></expr>)<pos:position pos:line="34" pos:column="58"/></condition><then pos:line="34" pos:column="58"> <block pos:line="34" pos:column="59">{
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><call><name pos:line="35" pos:column="11">ovs_events_config_get_interfaces<pos:position pos:line="35" pos:column="43"/></name><argument_list pos:line="35" pos:column="43">(<argument><expr><name pos:line="35" pos:column="44">child<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call> <operator pos:line="35" pos:column="51">!=<pos:position pos:line="35" pos:column="53"/></operator> <literal type="number" pos:line="35" pos:column="54">0<pos:position pos:line="35" pos:column="55"/></literal></expr>)<pos:position pos:line="35" pos:column="56"/></condition><then pos:line="35" pos:column="56"> <block pos:line="35" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ovs_events_config_free<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">()<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><operator pos:line="37" pos:column="16">-<pos:position pos:line="37" pos:column="17"/></operator><literal type="number" pos:line="37" pos:column="17">1<pos:position pos:line="37" pos:column="18"/></literal></expr>;<pos:position pos:line="37" pos:column="19"/></return>
      }<pos:position pos:line="38" pos:column="8"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if></elseif> <elseif pos:line="39" pos:column="7">else <if pos:line="39" pos:column="12">if <condition pos:line="39" pos:column="15">(<expr><call><name pos:line="39" pos:column="16">strcasecmp<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><literal type="string" pos:line="39" pos:column="27">"DispatchValues"<pos:position pos:line="39" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="45">child<pos:position pos:line="39" pos:column="50"/></name><operator pos:line="39" pos:column="50">-&gt;<pos:position pos:line="39" pos:column="55"/></operator><name pos:line="39" pos:column="52">key<pos:position pos:line="39" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call> <operator pos:line="39" pos:column="57">==<pos:position pos:line="39" pos:column="59"/></operator> <literal type="number" pos:line="39" pos:column="60">0<pos:position pos:line="39" pos:column="61"/></literal></expr>)<pos:position pos:line="39" pos:column="62"/></condition><then pos:line="39" pos:column="62"> <block pos:line="39" pos:column="63">{
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><call><name pos:line="40" pos:column="11">cf_util_get_boolean<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">child<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="38">&amp;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="39">dispatch_values<pos:position pos:line="40" pos:column="54"/></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call> <operator pos:line="40" pos:column="56">!=<pos:position pos:line="40" pos:column="58"/></operator> <literal type="number" pos:line="40" pos:column="59">0<pos:position pos:line="40" pos:column="60"/></literal></expr>)<pos:position pos:line="40" pos:column="61"/></condition><then pos:line="40" pos:column="61"> <block pos:line="40" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ovs_events_config_free<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">()<pos:position pos:line="41" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><operator pos:line="42" pos:column="16">-<pos:position pos:line="42" pos:column="17"/></operator><literal type="number" pos:line="42" pos:column="17">1<pos:position pos:line="42" pos:column="18"/></literal></expr>;<pos:position pos:line="42" pos:column="19"/></return>
      }<pos:position pos:line="43" pos:column="8"/></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif> <else pos:line="44" pos:column="7">else <block pos:line="44" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">ERROR<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">OVS_EVENTS_PLUGIN<pos:position pos:line="45" pos:column="30"/></name> <literal type="string" pos:line="45" pos:column="31">": option '%s' is not allowed here"<pos:position pos:line="45" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="68">child<pos:position pos:line="45" pos:column="73"/></name><operator pos:line="45" pos:column="73">-&gt;<pos:position pos:line="45" pos:column="78"/></operator><name pos:line="45" pos:column="75">key<pos:position pos:line="45" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="80"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">ovs_events_config_free<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">()<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>
      <return pos:line="47" pos:column="7">return <expr><operator pos:line="47" pos:column="14">-<pos:position pos:line="47" pos:column="15"/></operator><literal type="number" pos:line="47" pos:column="15">1<pos:position pos:line="47" pos:column="16"/></literal></expr>;<pos:position pos:line="47" pos:column="17"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></else></if>
  }<pos:position pos:line="49" pos:column="4"/></block></for>
  <comment type="block" pos:line="50" pos:column="3">/* Check and warn about invalid configuration */</comment>
  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><operator pos:line="51" pos:column="7">!<pos:position pos:line="51" pos:column="8"/></operator><name><name pos:line="51" pos:column="8">ovs_events_ctx<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">.<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="23">config<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">.<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="30">send_notification<pos:position pos:line="51" pos:column="47"/></name></name> <operator pos:line="51" pos:column="48">&amp;&amp;<pos:position pos:line="51" pos:column="58"/></operator> <operator pos:line="51" pos:column="51">!<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="52">dispatch_values<pos:position pos:line="51" pos:column="67"/></name></expr>)<pos:position pos:line="51" pos:column="68"/></condition><then pos:line="51" pos:column="68"> <block pos:line="51" pos:column="69">{
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">WARNING<pos:position pos:line="52" pos:column="12"/></name><argument_list pos:line="52" pos:column="12">(<argument><expr><name pos:line="52" pos:column="13">OVS_EVENTS_PLUGIN<pos:position pos:line="52" pos:column="30"/></name>
            <literal type="string" pos:line="53" pos:column="13">": send notification and dispatch values "<pos:position pos:line="53" pos:column="55"/></literal>
            <literal type="string" pos:line="54" pos:column="13">"options are disabled. No information will be dispatched by the "<pos:position pos:line="54" pos:column="78"/></literal>
            <literal type="string" pos:line="55" pos:column="13">"plugin. Please check your configuration"<pos:position pos:line="55" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="57" pos:column="3">/* Dispatch link status values if configured */</comment>
  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><name pos:line="58" pos:column="7">dispatch_values<pos:position pos:line="58" pos:column="22"/></name></expr>)<pos:position pos:line="58" pos:column="23"/></condition><then pos:line="58" pos:column="23">
    <block type="pseudo"><return pos:line="59" pos:column="5">return <expr><call><name pos:line="59" pos:column="12">plugin_register_complex_read<pos:position pos:line="59" pos:column="40"/></name><argument_list pos:line="59" pos:column="40">(<argument><expr><name pos:line="59" pos:column="41">NULL<pos:position pos:line="59" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="47">OVS_EVENTS_PLUGIN<pos:position pos:line="59" pos:column="64"/></name></expr></argument>,
                                        <argument><expr><name pos:line="60" pos:column="41">ovs_events_plugin_read<pos:position pos:line="60" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="65">0<pos:position pos:line="60" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="68">NULL<pos:position pos:line="60" pos:column="72"/></name></expr></argument>)<pos:position pos:line="60" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="74"/></return></block></then></if>

  <return pos:line="62" pos:column="3">return <expr><literal type="number" pos:line="62" pos:column="10">0<pos:position pos:line="62" pos:column="11"/></literal></expr>;<pos:position pos:line="62" pos:column="12"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2096_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wt_send_message<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">key<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">value<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">cdtime_t<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">time<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
                           <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">wt_callback<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">cb<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">char<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">host<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="3" pos:column="28">meta_data_t<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">md<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="44"/></parameter_list> <block pos:line="3" pos:column="45">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">message_len<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">temp<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">tags<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="string" pos:line="7" pos:column="22">""<pos:position pos:line="7" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">message<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><literal type="number" pos:line="8" pos:column="16">1024<pos:position pos:line="8" pos:column="20"/></literal></expr>]<pos:position pos:line="8" pos:column="21"/></index></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">host_tags<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><ternary><condition><expr><name><name pos:line="9" pos:column="27">cb<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">host_tags<pos:position pos:line="9" pos:column="40"/></name></name></expr> ?<pos:position pos:line="9" pos:column="42"/></condition><then pos:line="9" pos:column="42"> <expr><name><name pos:line="9" pos:column="43">cb<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">-&gt;<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="47">host_tags<pos:position pos:line="9" pos:column="56"/></name></name></expr> <pos:position pos:line="9" pos:column="57"/></then><else pos:line="9" pos:column="57">: <expr><literal type="string" pos:line="9" pos:column="59">""<pos:position pos:line="9" pos:column="61"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">meta_tsdb<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><literal type="string" pos:line="10" pos:column="27">"tsdb_tags"<pos:position pos:line="10" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="39"/></decl_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* skip if value is NaN */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name><name pos:line="13" pos:column="7">value<pos:position pos:line="13" pos:column="12"/></name><index pos:line="13" pos:column="12">[<expr><literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal></expr>]<pos:position pos:line="13" pos:column="15"/></index></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <literal type="char" pos:line="13" pos:column="19">'n'<pos:position pos:line="13" pos:column="22"/></literal></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></return></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">md<pos:position pos:line="16" pos:column="9"/></name></expr>)<pos:position pos:line="16" pos:column="10"/></condition><then pos:line="16" pos:column="10"> <block pos:line="16" pos:column="11">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">status<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">meta_data_get_string<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">md<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">meta_tsdb<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="50">&amp;<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="51">temp<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">status<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <operator pos:line="18" pos:column="19">-<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">ENOENT<pos:position pos:line="18" pos:column="26"/></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27"> <block pos:line="18" pos:column="28">{
      <comment type="block" pos:line="19" pos:column="7">/* defaults to empty string */</comment>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <elseif pos:line="20" pos:column="7">else <if pos:line="20" pos:column="12">if <condition pos:line="20" pos:column="15">(<expr><name pos:line="20" pos:column="16">status<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27"> <block pos:line="20" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">ERROR<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><literal type="string" pos:line="21" pos:column="13">"write_tsdb plugin: tags metadata get failure"<pos:position pos:line="21" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">sfree<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">temp<pos:position pos:line="22" pos:column="17"/></name></expr></argument>)<pos:position pos:line="22" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">pthread_mutex_unlock<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><name><name pos:line="23" pos:column="29">cb<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">send_lock<pos:position pos:line="23" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><name pos:line="24" pos:column="14">status<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if></elseif> <else pos:line="25" pos:column="7">else <block pos:line="25" pos:column="12">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">tags<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">temp<pos:position pos:line="26" pos:column="18"/></name></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></else></if>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="30" pos:column="3">status<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator>
      <call><name pos:line="31" pos:column="7">ssnprintf<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">message<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="26">sizeof<argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">message<pos:position pos:line="31" pos:column="40"/></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="43">"put %s %.0f %s fqdn=%s %s %s\r\n"<pos:position pos:line="31" pos:column="77"/></literal></expr></argument>,
                <argument><expr><name pos:line="32" pos:column="17">key<pos:position pos:line="32" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="22">CDTIME_T_TO_DOUBLE<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">time<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">value<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">host<pos:position pos:line="32" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="61">tags<pos:position pos:line="32" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="67">host_tags<pos:position pos:line="32" pos:column="76"/></name></expr></argument>)<pos:position pos:line="32" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="78"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">sfree<pos:position pos:line="33" pos:column="8"/></name><argument_list pos:line="33" pos:column="8">(<argument><expr><name pos:line="33" pos:column="9">temp<pos:position pos:line="33" pos:column="13"/></name></expr></argument>)<pos:position pos:line="33" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="15"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">status<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">&lt;<pos:position pos:line="34" pos:column="18"/></operator> <literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>)<pos:position pos:line="34" pos:column="18"/></condition><then pos:line="34" pos:column="18">
    <block type="pseudo"><return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">-<pos:position pos:line="35" pos:column="13"/></operator><literal type="number" pos:line="35" pos:column="13">1<pos:position pos:line="35" pos:column="14"/></literal></expr>;<pos:position pos:line="35" pos:column="15"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="36" pos:column="3">message_len<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <operator pos:line="36" pos:column="17">(<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">size_t<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">)<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">status<pos:position pos:line="36" pos:column="31"/></name></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">message_len<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">&gt;=<pos:position pos:line="38" pos:column="24"/></operator> <sizeof pos:line="38" pos:column="22">sizeof<argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">message<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></sizeof></expr>)<pos:position pos:line="38" pos:column="38"/></condition><then pos:line="38" pos:column="38"> <block pos:line="38" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">ERROR<pos:position pos:line="39" pos:column="10"/></name><argument_list pos:line="39" pos:column="10">(<argument><expr><literal type="string" pos:line="39" pos:column="11">"write_tsdb plugin: message buffer too small: "<pos:position pos:line="39" pos:column="58"/></literal>
          <literal type="string" pos:line="40" pos:column="11">"Need %zu bytes."<pos:position pos:line="40" pos:column="28"/></literal></expr></argument>,
          <argument><expr><name pos:line="41" pos:column="11">message_len<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">+<pos:position pos:line="41" pos:column="24"/></operator> <literal type="number" pos:line="41" pos:column="25">1<pos:position pos:line="41" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><operator pos:line="42" pos:column="12">-<pos:position pos:line="42" pos:column="13"/></operator><literal type="number" pos:line="42" pos:column="13">1<pos:position pos:line="42" pos:column="14"/></literal></expr>;<pos:position pos:line="42" pos:column="15"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">pthread_mutex_lock<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><operator pos:line="45" pos:column="22">&amp;<pos:position pos:line="45" pos:column="27"/></operator><name><name pos:line="45" pos:column="23">cb<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">-&gt;<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="27">send_lock<pos:position pos:line="45" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="38"/></expr_stmt>

  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name><name pos:line="47" pos:column="7">cb<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">-&gt;<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="11">sock_fd<pos:position pos:line="47" pos:column="18"/></name></name> <operator pos:line="47" pos:column="19">&lt;<pos:position pos:line="47" pos:column="23"/></operator> <literal type="number" pos:line="47" pos:column="21">0<pos:position pos:line="47" pos:column="22"/></literal></expr>)<pos:position pos:line="47" pos:column="23"/></condition><then pos:line="47" pos:column="23"> <block pos:line="47" pos:column="24">{
    <expr_stmt><expr><name pos:line="48" pos:column="5">status<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <call><name pos:line="48" pos:column="14">wt_callback_init<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><name pos:line="48" pos:column="31">cb<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">status<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">!=<pos:position pos:line="49" pos:column="18"/></operator> <literal type="number" pos:line="49" pos:column="19">0<pos:position pos:line="49" pos:column="20"/></literal></expr>)<pos:position pos:line="49" pos:column="21"/></condition><then pos:line="49" pos:column="21"> <block pos:line="49" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">ERROR<pos:position pos:line="50" pos:column="12"/></name><argument_list pos:line="50" pos:column="12">(<argument><expr><literal type="string" pos:line="50" pos:column="13">"write_tsdb plugin: wt_callback_init failed."<pos:position pos:line="50" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">pthread_mutex_unlock<pos:position pos:line="51" pos:column="27"/></name><argument_list pos:line="51" pos:column="27">(<argument><expr><operator pos:line="51" pos:column="28">&amp;<pos:position pos:line="51" pos:column="33"/></operator><name><name pos:line="51" pos:column="29">cb<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">-&gt;<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="33">send_lock<pos:position pos:line="51" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="44"/></expr_stmt>
      <return pos:line="52" pos:column="7">return <expr><operator pos:line="52" pos:column="14">-<pos:position pos:line="52" pos:column="15"/></operator><literal type="number" pos:line="52" pos:column="15">1<pos:position pos:line="52" pos:column="16"/></literal></expr>;<pos:position pos:line="52" pos:column="17"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>

  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><name pos:line="56" pos:column="7">message_len<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">&gt;=<pos:position pos:line="56" pos:column="24"/></operator> <name><name pos:line="56" pos:column="22">cb<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">-&gt;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="26">send_buf_free<pos:position pos:line="56" pos:column="39"/></name></name></expr>)<pos:position pos:line="56" pos:column="40"/></condition><then pos:line="56" pos:column="40"> <block pos:line="56" pos:column="41">{
    <expr_stmt><expr><name pos:line="57" pos:column="5">status<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <call><name pos:line="57" pos:column="14">wt_flush_nolock<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><literal type="number" pos:line="57" pos:column="30">0<pos:position pos:line="57" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="33">cb<pos:position pos:line="57" pos:column="35"/></name></expr></argument>)<pos:position pos:line="57" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">status<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">!=<pos:position pos:line="58" pos:column="18"/></operator> <literal type="number" pos:line="58" pos:column="19">0<pos:position pos:line="58" pos:column="20"/></literal></expr>)<pos:position pos:line="58" pos:column="21"/></condition><then pos:line="58" pos:column="21"> <block pos:line="58" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">pthread_mutex_unlock<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><operator pos:line="59" pos:column="28">&amp;<pos:position pos:line="59" pos:column="33"/></operator><name><name pos:line="59" pos:column="29">cb<pos:position pos:line="59" pos:column="31"/></name><operator pos:line="59" pos:column="31">-&gt;<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="33">send_lock<pos:position pos:line="59" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="44"/></expr_stmt>
      <return pos:line="60" pos:column="7">return <expr><name pos:line="60" pos:column="14">status<pos:position pos:line="60" pos:column="20"/></name></expr>;<pos:position pos:line="60" pos:column="21"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="64" pos:column="3">/* Assert that we have enough space for this message. */</comment>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">assert<pos:position pos:line="65" pos:column="9"/></name><argument_list pos:line="65" pos:column="9">(<argument><expr><name pos:line="65" pos:column="10">message_len<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">&lt;<pos:position pos:line="65" pos:column="26"/></operator> <name><name pos:line="65" pos:column="24">cb<pos:position pos:line="65" pos:column="26"/></name><operator pos:line="65" pos:column="26">-&gt;<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="28">send_buf_free<pos:position pos:line="65" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt>

  <comment type="block" pos:line="67" pos:column="3">/* `message_len + 1' because `message_len' does not include the
   * trailing null byte. Neither does `send_buffer_fill'. */</comment>
  <expr_stmt><expr><call><name pos:line="69" pos:column="3">memcpy<pos:position pos:line="69" pos:column="9"/></name><argument_list pos:line="69" pos:column="9">(<argument><expr><name><name pos:line="69" pos:column="10">cb<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">-&gt;<pos:position pos:line="69" pos:column="17"/></operator><name pos:line="69" pos:column="14">send_buf<pos:position pos:line="69" pos:column="22"/></name></name> <operator pos:line="69" pos:column="23">+<pos:position pos:line="69" pos:column="24"/></operator> <name><name pos:line="69" pos:column="25">cb<pos:position pos:line="69" pos:column="27"/></name><operator pos:line="69" pos:column="27">-&gt;<pos:position pos:line="69" pos:column="32"/></operator><name pos:line="69" pos:column="29">send_buf_fill<pos:position pos:line="69" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="44">message<pos:position pos:line="69" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="53">message_len<pos:position pos:line="69" pos:column="64"/></name> <operator pos:line="69" pos:column="65">+<pos:position pos:line="69" pos:column="66"/></operator> <literal type="number" pos:line="69" pos:column="67">1<pos:position pos:line="69" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="70" pos:column="3">cb<pos:position pos:line="70" pos:column="5"/></name><operator pos:line="70" pos:column="5">-&gt;<pos:position pos:line="70" pos:column="10"/></operator><name pos:line="70" pos:column="7">send_buf_fill<pos:position pos:line="70" pos:column="20"/></name></name> <operator pos:line="70" pos:column="21">+=<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="24">message_len<pos:position pos:line="70" pos:column="35"/></name></expr>;<pos:position pos:line="70" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="71" pos:column="3">cb<pos:position pos:line="71" pos:column="5"/></name><operator pos:line="71" pos:column="5">-&gt;<pos:position pos:line="71" pos:column="10"/></operator><name pos:line="71" pos:column="7">send_buf_free<pos:position pos:line="71" pos:column="20"/></name></name> <operator pos:line="71" pos:column="21">-=<pos:position pos:line="71" pos:column="23"/></operator> <name pos:line="71" pos:column="24">message_len<pos:position pos:line="71" pos:column="35"/></name></expr>;<pos:position pos:line="71" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="73" pos:column="3">DEBUG<pos:position pos:line="73" pos:column="8"/></name><argument_list pos:line="73" pos:column="8">(<argument><expr><literal type="string" pos:line="73" pos:column="9">"write_tsdb plugin: [%s]:%s buf %zu/%zu (%.1f %%) \"%s\""<pos:position pos:line="73" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="68">cb<pos:position pos:line="73" pos:column="70"/></name><operator pos:line="73" pos:column="70">-&gt;<pos:position pos:line="73" pos:column="75"/></operator><name pos:line="73" pos:column="72">node<pos:position pos:line="73" pos:column="76"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="74" pos:column="9">cb<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">service<pos:position pos:line="74" pos:column="20"/></name></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="22">cb<pos:position pos:line="74" pos:column="24"/></name><operator pos:line="74" pos:column="24">-&gt;<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="26">send_buf_fill<pos:position pos:line="74" pos:column="39"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="74" pos:column="41">sizeof<argument_list pos:line="74" pos:column="47">(<argument><expr><name><name pos:line="74" pos:column="48">cb<pos:position pos:line="74" pos:column="50"/></name><operator pos:line="74" pos:column="50">-&gt;<pos:position pos:line="74" pos:column="55"/></operator><name pos:line="74" pos:column="52">send_buf<pos:position pos:line="74" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="61"/></argument_list></sizeof></expr></argument>,
        <argument><expr><literal type="number" pos:line="75" pos:column="9">100.0<pos:position pos:line="75" pos:column="14"/></literal> <operator pos:line="75" pos:column="15">*<pos:position pos:line="75" pos:column="16"/></operator> <operator pos:line="75" pos:column="17">(<pos:position pos:line="75" pos:column="18"/></operator><operator pos:line="75" pos:column="18">(<pos:position pos:line="75" pos:column="19"/></operator><name pos:line="75" pos:column="19">double<pos:position pos:line="75" pos:column="25"/></name><operator pos:line="75" pos:column="25">)<pos:position pos:line="75" pos:column="26"/></operator><name><name pos:line="75" pos:column="26">cb<pos:position pos:line="75" pos:column="28"/></name><operator pos:line="75" pos:column="28">-&gt;<pos:position pos:line="75" pos:column="33"/></operator><name pos:line="75" pos:column="30">send_buf_fill<pos:position pos:line="75" pos:column="43"/></name></name><operator pos:line="75" pos:column="43">)<pos:position pos:line="75" pos:column="44"/></operator> <operator pos:line="75" pos:column="45">/<pos:position pos:line="75" pos:column="46"/></operator> <operator pos:line="75" pos:column="47">(<pos:position pos:line="75" pos:column="48"/></operator><operator pos:line="75" pos:column="48">(<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="49">double<pos:position pos:line="75" pos:column="55"/></name><operator pos:line="75" pos:column="55">)<pos:position pos:line="75" pos:column="56"/></operator><sizeof pos:line="75" pos:column="56">sizeof<argument_list pos:line="75" pos:column="62">(<argument><expr><name><name pos:line="75" pos:column="63">cb<pos:position pos:line="75" pos:column="65"/></name><operator pos:line="75" pos:column="65">-&gt;<pos:position pos:line="75" pos:column="70"/></operator><name pos:line="75" pos:column="67">send_buf<pos:position pos:line="75" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="76"/></argument_list></sizeof><operator pos:line="75" pos:column="76">)<pos:position pos:line="75" pos:column="77"/></operator></expr></argument>,
        <argument><expr><name pos:line="76" pos:column="9">message<pos:position pos:line="76" pos:column="16"/></name></expr></argument>)<pos:position pos:line="76" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="78" pos:column="3">pthread_mutex_unlock<pos:position pos:line="78" pos:column="23"/></name><argument_list pos:line="78" pos:column="23">(<argument><expr><operator pos:line="78" pos:column="24">&amp;<pos:position pos:line="78" pos:column="29"/></operator><name><name pos:line="78" pos:column="25">cb<pos:position pos:line="78" pos:column="27"/></name><operator pos:line="78" pos:column="27">-&gt;<pos:position pos:line="78" pos:column="32"/></operator><name pos:line="78" pos:column="29">send_lock<pos:position pos:line="78" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="40"/></expr_stmt>

  <return pos:line="80" pos:column="3">return <expr><literal type="number" pos:line="80" pos:column="10">0<pos:position pos:line="80" pos:column="11"/></literal></expr>;<pos:position pos:line="80" pos:column="12"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

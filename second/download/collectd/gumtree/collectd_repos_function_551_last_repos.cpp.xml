<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_551_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_string<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier><modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">ret_buffer<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ret_string<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list> <block pos:line="1" pos:column="56">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">buffer<pos:position pos:line="2" pos:column="15"/></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">string<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">buffer<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">=<pos:position pos:line="5" pos:column="11"/></operator> <operator pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">ret_buffer<pos:position pos:line="5" pos:column="23"/></name></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Eat up leading spaces. */</comment>
  <expr_stmt><expr><name pos:line="8" pos:column="3">string<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <name pos:line="8" pos:column="12">buffer<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>
  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><call><name pos:line="9" pos:column="10">isspace<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><operator pos:line="9" pos:column="18">(<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">int<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">)<pos:position pos:line="9" pos:column="23"/></operator><operator pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">string<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="32"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">string<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">++<pos:position pos:line="10" pos:column="13"/></operator></expr>;<pos:position pos:line="10" pos:column="14"/></expr_stmt></block></while>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">*<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">string<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">==<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">1<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="14" pos:column="3">/* A quoted string */</comment>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">*<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">string<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">==<pos:position pos:line="15" pos:column="17"/></operator> <literal type="char" pos:line="15" pos:column="18">'"'<pos:position pos:line="15" pos:column="21"/></literal></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22"> <block pos:line="15" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">dst<pos:position pos:line="16" pos:column="14"/></name></decl>;<pos:position pos:line="16" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">string<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">++<pos:position pos:line="18" pos:column="13"/></operator></expr>;<pos:position pos:line="18" pos:column="14"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">string<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">==<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22">
      <block type="pseudo"><return pos:line="20" pos:column="7">return <expr><literal type="number" pos:line="20" pos:column="14">1<pos:position pos:line="20" pos:column="15"/></literal></expr>;<pos:position pos:line="20" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">dst<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <name pos:line="22" pos:column="11">string<pos:position pos:line="22" pos:column="17"/></name></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">buffer<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name pos:line="23" pos:column="14">string<pos:position pos:line="23" pos:column="20"/></name></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
    <while pos:line="24" pos:column="5">while <condition pos:line="24" pos:column="11">(<expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">*<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">buffer<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">!=<pos:position pos:line="24" pos:column="23"/></operator> <literal type="char" pos:line="24" pos:column="24">'"'<pos:position pos:line="24" pos:column="27"/></literal><operator pos:line="24" pos:column="27">)<pos:position pos:line="24" pos:column="28"/></operator> <operator pos:line="24" pos:column="29">&amp;&amp;<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="32">(<pos:position pos:line="24" pos:column="33"/></operator><operator pos:line="24" pos:column="33">*<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">buffer<pos:position pos:line="24" pos:column="40"/></name> <operator pos:line="24" pos:column="41">!=<pos:position pos:line="24" pos:column="43"/></operator> <literal type="number" pos:line="24" pos:column="44">0<pos:position pos:line="24" pos:column="45"/></literal><operator pos:line="24" pos:column="45">)<pos:position pos:line="24" pos:column="46"/></operator></expr>)<pos:position pos:line="24" pos:column="47"/></condition> <block pos:line="24" pos:column="48">{
      <comment type="block" pos:line="25" pos:column="7">/* Un-escape backslashes */</comment>
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><operator pos:line="26" pos:column="11">*<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">buffer<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">==<pos:position pos:line="26" pos:column="21"/></operator> <literal type="char" pos:line="26" pos:column="22">'\\'<pos:position pos:line="26" pos:column="26"/></literal></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27"> <block pos:line="26" pos:column="28">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">buffer<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">++<pos:position pos:line="27" pos:column="17"/></operator></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>
        <comment type="block" pos:line="28" pos:column="9">/* Catch a backslash at the end of buffer */</comment>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">*<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">buffer<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">==<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>)<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26">
          <block type="pseudo"><return pos:line="30" pos:column="11">return <expr><operator pos:line="30" pos:column="18">-<pos:position pos:line="30" pos:column="19"/></operator><literal type="number" pos:line="30" pos:column="19">1<pos:position pos:line="30" pos:column="20"/></literal></expr>;<pos:position pos:line="30" pos:column="21"/></return></block></then></if>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>
      <expr_stmt><expr><operator pos:line="32" pos:column="7">*<pos:position pos:line="32" pos:column="8"/></operator><name pos:line="32" pos:column="8">dst<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <operator pos:line="32" pos:column="14">*<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">buffer<pos:position pos:line="32" pos:column="21"/></name></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="33" pos:column="7">buffer<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">++<pos:position pos:line="33" pos:column="15"/></operator></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><name pos:line="34" pos:column="7">dst<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">++<pos:position pos:line="34" pos:column="12"/></operator></expr>;<pos:position pos:line="34" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></while>
    <comment type="block" pos:line="36" pos:column="5">/* No quote sign has been found */</comment>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">buffer<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">==<pos:position pos:line="37" pos:column="19"/></operator> <literal type="number" pos:line="37" pos:column="20">0<pos:position pos:line="37" pos:column="21"/></literal></expr>)<pos:position pos:line="37" pos:column="22"/></condition><then pos:line="37" pos:column="22">
      <block type="pseudo"><return pos:line="38" pos:column="7">return <expr><operator pos:line="38" pos:column="14">-<pos:position pos:line="38" pos:column="15"/></operator><literal type="number" pos:line="38" pos:column="15">1<pos:position pos:line="38" pos:column="16"/></literal></expr>;<pos:position pos:line="38" pos:column="17"/></return></block></then></if>

    <expr_stmt><expr><operator pos:line="40" pos:column="5">*<pos:position pos:line="40" pos:column="6"/></operator><name pos:line="40" pos:column="6">dst<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <literal type="number" pos:line="40" pos:column="12">0<pos:position pos:line="40" pos:column="13"/></literal></expr>;<pos:position pos:line="40" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">dst<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">++<pos:position pos:line="41" pos:column="10"/></operator></expr>;<pos:position pos:line="41" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="42" pos:column="5">*<pos:position pos:line="42" pos:column="6"/></operator><name pos:line="42" pos:column="6">buffer<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <literal type="number" pos:line="42" pos:column="15">0<pos:position pos:line="42" pos:column="16"/></literal></expr>;<pos:position pos:line="42" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">buffer<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">++<pos:position pos:line="43" pos:column="13"/></operator></expr>;<pos:position pos:line="43" pos:column="14"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/* Check for trailing spaces. */</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">(<pos:position pos:line="46" pos:column="10"/></operator><operator pos:line="46" pos:column="10">*<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">buffer<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">!=<pos:position pos:line="46" pos:column="20"/></operator> <literal type="number" pos:line="46" pos:column="21">0<pos:position pos:line="46" pos:column="22"/></literal><operator pos:line="46" pos:column="22">)<pos:position pos:line="46" pos:column="23"/></operator> <operator pos:line="46" pos:column="24">&amp;&amp;<pos:position pos:line="46" pos:column="34"/></operator> <operator pos:line="46" pos:column="27">!<pos:position pos:line="46" pos:column="28"/></operator><call><name pos:line="46" pos:column="28">isspace<pos:position pos:line="46" pos:column="35"/></name><argument_list pos:line="46" pos:column="35">(<argument><expr><operator pos:line="46" pos:column="36">(<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="37">int<pos:position pos:line="46" pos:column="40"/></name><operator pos:line="46" pos:column="40">)<pos:position pos:line="46" pos:column="41"/></operator><operator pos:line="46" pos:column="41">*<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="42">buffer<pos:position pos:line="46" pos:column="48"/></name></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="50"/></condition><then pos:line="46" pos:column="50">
      <block type="pseudo"><return pos:line="47" pos:column="7">return <expr><operator pos:line="47" pos:column="14">-<pos:position pos:line="47" pos:column="15"/></operator><literal type="number" pos:line="47" pos:column="15">1<pos:position pos:line="47" pos:column="16"/></literal></expr>;<pos:position pos:line="47" pos:column="17"/></return></block></then></if>
  }<pos:position pos:line="48" pos:column="4"/></block></then> <else pos:line="48" pos:column="5">else <comment type="block" pos:line="48" pos:column="10">/* an unquoted string */</comment>
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><name pos:line="50" pos:column="5">buffer<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <name pos:line="50" pos:column="14">string<pos:position pos:line="50" pos:column="20"/></name></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>
    <while pos:line="51" pos:column="5">while <condition pos:line="51" pos:column="11">(<expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><operator pos:line="51" pos:column="13">*<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">buffer<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">!=<pos:position pos:line="51" pos:column="23"/></operator> <literal type="number" pos:line="51" pos:column="24">0<pos:position pos:line="51" pos:column="25"/></literal><operator pos:line="51" pos:column="25">)<pos:position pos:line="51" pos:column="26"/></operator> <operator pos:line="51" pos:column="27">&amp;&amp;<pos:position pos:line="51" pos:column="37"/></operator> <operator pos:line="51" pos:column="30">!<pos:position pos:line="51" pos:column="31"/></operator><call><name pos:line="51" pos:column="31">isspace<pos:position pos:line="51" pos:column="38"/></name><argument_list pos:line="51" pos:column="38">(<argument><expr><operator pos:line="51" pos:column="39">(<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="40">int<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">)<pos:position pos:line="51" pos:column="44"/></operator><operator pos:line="51" pos:column="44">*<pos:position pos:line="51" pos:column="45"/></operator><name pos:line="51" pos:column="45">buffer<pos:position pos:line="51" pos:column="51"/></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="53"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="7">buffer<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">++<pos:position pos:line="52" pos:column="15"/></operator></expr>;<pos:position pos:line="52" pos:column="16"/></expr_stmt></block></while>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><operator pos:line="53" pos:column="9">*<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">buffer<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">!=<pos:position pos:line="53" pos:column="19"/></operator> <literal type="number" pos:line="53" pos:column="20">0<pos:position pos:line="53" pos:column="21"/></literal></expr>)<pos:position pos:line="53" pos:column="22"/></condition><then pos:line="53" pos:column="22"> <block pos:line="53" pos:column="23">{
      <expr_stmt><expr><operator pos:line="54" pos:column="7">*<pos:position pos:line="54" pos:column="8"/></operator><name pos:line="54" pos:column="8">buffer<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">=<pos:position pos:line="54" pos:column="16"/></operator> <literal type="number" pos:line="54" pos:column="17">0<pos:position pos:line="54" pos:column="18"/></literal></expr>;<pos:position pos:line="54" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="55" pos:column="7">buffer<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">++<pos:position pos:line="55" pos:column="15"/></operator></expr>;<pos:position pos:line="55" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
  }<pos:position pos:line="57" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="59" pos:column="3">/* Eat up trailing spaces */</comment>
  <while pos:line="60" pos:column="3">while <condition pos:line="60" pos:column="9">(<expr><call><name pos:line="60" pos:column="10">isspace<pos:position pos:line="60" pos:column="17"/></name><argument_list pos:line="60" pos:column="17">(<argument><expr><operator pos:line="60" pos:column="18">(<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="19">int<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">)<pos:position pos:line="60" pos:column="23"/></operator><operator pos:line="60" pos:column="23">*<pos:position pos:line="60" pos:column="24"/></operator><name pos:line="60" pos:column="24">buffer<pos:position pos:line="60" pos:column="30"/></name></expr></argument>)<pos:position pos:line="60" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="32"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="5">buffer<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">++<pos:position pos:line="61" pos:column="13"/></operator></expr>;<pos:position pos:line="61" pos:column="14"/></expr_stmt></block></while>

  <expr_stmt><expr><operator pos:line="63" pos:column="3">*<pos:position pos:line="63" pos:column="4"/></operator><name pos:line="63" pos:column="4">ret_buffer<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <name pos:line="63" pos:column="17">buffer<pos:position pos:line="63" pos:column="23"/></name></expr>;<pos:position pos:line="63" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="64" pos:column="3">*<pos:position pos:line="64" pos:column="4"/></operator><name pos:line="64" pos:column="4">ret_string<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <name pos:line="64" pos:column="17">string<pos:position pos:line="64" pos:column="23"/></name></expr>;<pos:position pos:line="64" pos:column="24"/></expr_stmt>

  <return pos:line="66" pos:column="3">return <expr><literal type="number" pos:line="66" pos:column="10">0<pos:position pos:line="66" pos:column="11"/></literal></expr>;<pos:position pos:line="66" pos:column="12"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

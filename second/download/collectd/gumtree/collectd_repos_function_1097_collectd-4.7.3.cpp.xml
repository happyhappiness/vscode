<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1097_collectd-4.7.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_part_number<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ret_buffer<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ret_buffer_len<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">type<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">uint64_t<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">value<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">packet_ptr<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">packet_len<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">part_header_t<pos:position pos:line="7" pos:column="22"/></name></type> <name pos:line="7" pos:column="23">pkg_head<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">uint64_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">pkg_value<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">offset<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">packet_len<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <sizeof pos:line="12" pos:column="22">sizeof <argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">pkg_head<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></sizeof> <operator pos:line="12" pos:column="40">+<pos:position pos:line="12" pos:column="41"/></operator> <sizeof pos:line="12" pos:column="42">sizeof <argument_list pos:line="12" pos:column="49">(<argument><expr><name pos:line="12" pos:column="50">pkg_value<pos:position pos:line="12" pos:column="59"/></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></sizeof></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">ret_buffer_len<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">&lt;<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="31">packet_len<pos:position pos:line="14" pos:column="41"/></name></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><operator pos:line="15" pos:column="25">-<pos:position pos:line="15" pos:column="26"/></operator><literal type="number" pos:line="15" pos:column="26">1<pos:position pos:line="15" pos:column="27"/></literal><operator pos:line="15" pos:column="27">)<pos:position pos:line="15" pos:column="28"/></operator></expr>;<pos:position pos:line="15" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="17" pos:column="9">pkg_head<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">.<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">type<pos:position pos:line="17" pos:column="22"/></name></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <call><name pos:line="17" pos:column="25">htons<pos:position pos:line="17" pos:column="30"/></name> <argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">type<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">pkg_head<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">.<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">length<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <call><name pos:line="18" pos:column="27">htons<pos:position pos:line="18" pos:column="32"/></name> <argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">packet_len<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">pkg_value<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <call><name pos:line="19" pos:column="21">htonll<pos:position pos:line="19" pos:column="27"/></name> <argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">value<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><name pos:line="21" pos:column="9">packet_ptr<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <operator pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">ret_buffer<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">offset<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">memcpy<pos:position pos:line="23" pos:column="15"/></name> <argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">packet_ptr<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">+<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">offset<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="38">&amp;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="39">pkg_head<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="49">sizeof <argument_list pos:line="23" pos:column="56">(<argument><expr><name pos:line="23" pos:column="57">pkg_head<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">offset<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">+=<pos:position pos:line="24" pos:column="18"/></operator> <sizeof pos:line="24" pos:column="19">sizeof <argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">pkg_head<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></sizeof></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">memcpy<pos:position pos:line="25" pos:column="15"/></name> <argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">packet_ptr<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">+<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="30">offset<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="38">&amp;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="39">pkg_value<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="50">sizeof <argument_list pos:line="25" pos:column="57">(<argument><expr><name pos:line="25" pos:column="58">pkg_value<pos:position pos:line="25" pos:column="67"/></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">offset<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">+=<pos:position pos:line="26" pos:column="18"/></operator> <sizeof pos:line="26" pos:column="19">sizeof <argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">pkg_value<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></sizeof></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">assert<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">offset<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">==<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">packet_len<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">ret_buffer<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">packet_ptr<pos:position pos:line="30" pos:column="33"/></name> <operator pos:line="30" pos:column="34">+<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="36">packet_len<pos:position pos:line="30" pos:column="46"/></name></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">ret_buffer_len<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">-=<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="28">packet_len<pos:position pos:line="31" pos:column="38"/></name></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>

	<return pos:line="33" pos:column="9">return <expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><literal type="number" pos:line="33" pos:column="17">0<pos:position pos:line="33" pos:column="18"/></literal><operator pos:line="33" pos:column="18">)<pos:position pos:line="33" pos:column="19"/></operator></expr>;<pos:position pos:line="33" pos:column="20"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

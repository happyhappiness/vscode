<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1330_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">free_zfs_values<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">kstat_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ksp<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">ksp<pos:position pos:line="3" pos:column="16"/></name> <operator pos:line="3" pos:column="17">==<pos:position pos:line="3" pos:column="19"/></operator> <name pos:line="3" pos:column="20">NULL<pos:position pos:line="3" pos:column="24"/></name></expr>)<pos:position pos:line="3" pos:column="25"/></condition><then pos:line="3" pos:column="25">
		<block type="pseudo"><return pos:line="4" pos:column="17">return;<pos:position pos:line="4" pos:column="24"/></return></block></then></if>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><decl><type><name pos:line="6" pos:column="14">llentry_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">e<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name pos:line="6" pos:column="29">llist_head<pos:position pos:line="6" pos:column="39"/></name> <argument_list pos:line="6" pos:column="40">(<argument><expr><name pos:line="6" pos:column="41">ksp<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></init> <condition><expr><name pos:line="6" pos:column="47">e<pos:position pos:line="6" pos:column="48"/></name> <operator pos:line="6" pos:column="49">!=<pos:position pos:line="6" pos:column="51"/></operator> <name pos:line="6" pos:column="52">NULL<pos:position pos:line="6" pos:column="56"/></name></expr>;<pos:position pos:line="6" pos:column="57"/></condition> <incr><expr><name pos:line="6" pos:column="58">e<pos:position pos:line="6" pos:column="59"/></name> <operator pos:line="6" pos:column="60">=<pos:position pos:line="6" pos:column="61"/></operator> <name><name pos:line="6" pos:column="62">e<pos:position pos:line="6" pos:column="63"/></name><operator pos:line="6" pos:column="63">-&gt;<pos:position pos:line="6" pos:column="68"/></operator><name pos:line="6" pos:column="65">next<pos:position pos:line="6" pos:column="69"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="70"/></control>
	<block pos:line="7" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">sfree<pos:position pos:line="8" pos:column="22"/></name> <argument_list pos:line="8" pos:column="23">(<argument><expr><name><name pos:line="8" pos:column="24">e<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">key<pos:position pos:line="8" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">sfree<pos:position pos:line="9" pos:column="22"/></name> <argument_list pos:line="9" pos:column="23">(<argument><expr><name><name pos:line="9" pos:column="24">e<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">value<pos:position pos:line="9" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">llist_destroy<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">ksp<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_287_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">camqp_create_exchange<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">camqp_config_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">conf<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list> <comment type="block" pos:line="1" pos:column="56">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">amqp_exchange_declare_ok_t<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">ed_ret<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">amqp_table_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">argument_table<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">amqp_table_entry_t_<pos:position pos:line="5" pos:column="29"/></name></name></type> <name><name pos:line="5" pos:column="30">argument_table_entries<pos:position pos:line="5" pos:column="52"/></name><index pos:line="5" pos:column="52">[<expr><literal type="number" pos:line="5" pos:column="53">1<pos:position pos:line="5" pos:column="54"/></literal></expr>]<pos:position pos:line="5" pos:column="55"/></index></name></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">conf<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">exchange_type<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">==<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="30">NULL<pos:position pos:line="7" pos:column="34"/></name></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="10" pos:column="3">/* Valid arguments: "auto_delete", "internal" */</comment>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">argument_table<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">.<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">num_entries<pos:position pos:line="11" pos:column="29"/></name></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <call><name pos:line="11" pos:column="32">STATIC_ARRAY_SIZE<pos:position pos:line="11" pos:column="49"/></name><argument_list pos:line="11" pos:column="49">(<argument><expr><name pos:line="11" pos:column="50">argument_table_entries<pos:position pos:line="11" pos:column="72"/></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">argument_table<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">.<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">entries<pos:position pos:line="12" pos:column="25"/></name></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">argument_table_entries<pos:position pos:line="12" pos:column="50"/></name></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">argument_table_entries<pos:position pos:line="13" pos:column="25"/></name><index pos:line="13" pos:column="25">[<expr><literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr>]<pos:position pos:line="13" pos:column="28"/></index></name><operator pos:line="13" pos:column="28">.<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">key<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <call><name pos:line="13" pos:column="35">amqp_cstring_bytes<pos:position pos:line="13" pos:column="53"/></name><argument_list pos:line="13" pos:column="53">(<argument><expr><literal type="string" pos:line="13" pos:column="54">"auto_delete"<pos:position pos:line="13" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">argument_table_entries<pos:position pos:line="14" pos:column="25"/></name><index pos:line="14" pos:column="25">[<expr><literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr>]<pos:position pos:line="14" pos:column="28"/></index></name><operator pos:line="14" pos:column="28">.<pos:position pos:line="14" pos:column="29"/></operator><name><name pos:line="14" pos:column="29">value<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">.<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="35">kind<pos:position pos:line="14" pos:column="39"/></name></name> <operator pos:line="14" pos:column="40">=<pos:position pos:line="14" pos:column="41"/></operator> <name pos:line="14" pos:column="42">AMQP_FIELD_KIND_BOOLEAN<pos:position pos:line="14" pos:column="65"/></name></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">argument_table_entries<pos:position pos:line="15" pos:column="25"/></name><index pos:line="15" pos:column="25">[<expr><literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr>]<pos:position pos:line="15" pos:column="28"/></index></name><operator pos:line="15" pos:column="28">.<pos:position pos:line="15" pos:column="29"/></operator><name><name pos:line="15" pos:column="29">value<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">.<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="35">value<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">.<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="41">boolean<pos:position pos:line="15" pos:column="48"/></name></name> <operator pos:line="15" pos:column="49">=<pos:position pos:line="15" pos:column="50"/></operator> <literal type="number" pos:line="15" pos:column="51">1<pos:position pos:line="15" pos:column="52"/></literal></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>

  <expr_stmt><expr><name pos:line="17" pos:column="3">ed_ret<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">amqp_exchange_declare<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(
      <argument><expr><name><name pos:line="18" pos:column="7">conf<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">connection<pos:position pos:line="18" pos:column="23"/></name></name></expr></argument>,
      <comment type="block" pos:line="19" pos:column="7">/* channel     = */</comment> <argument><expr><name pos:line="19" pos:column="27">CAMQP_CHANNEL<pos:position pos:line="19" pos:column="40"/></name></expr></argument>,
      <comment type="block" pos:line="20" pos:column="7">/* exchange    = */</comment> <argument><expr><call><name pos:line="20" pos:column="27">amqp_cstring_bytes<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><name><name pos:line="20" pos:column="46">conf<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">-&gt;<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="52">exchange<pos:position pos:line="20" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr></argument>,
      <comment type="block" pos:line="21" pos:column="7">/* type        = */</comment> <argument><expr><call><name pos:line="21" pos:column="27">amqp_cstring_bytes<pos:position pos:line="21" pos:column="45"/></name><argument_list pos:line="21" pos:column="45">(<argument><expr><name><name pos:line="21" pos:column="46">conf<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">exchange_type<pos:position pos:line="21" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr></argument>,
      <comment type="block" pos:line="22" pos:column="7">/* passive     = */</comment> <argument><expr><literal type="number" pos:line="22" pos:column="27">0<pos:position pos:line="22" pos:column="28"/></literal></expr></argument>,
      <comment type="block" pos:line="23" pos:column="7">/* durable     = */</comment> <argument><expr><literal type="number" pos:line="23" pos:column="27">0<pos:position pos:line="23" pos:column="28"/></literal></expr></argument>,
<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><call><name pos:line="24" pos:column="5">defined<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">AMQP_VERSION<pos:position pos:line="24" pos:column="25"/></name></expr></argument>)<pos:position pos:line="24" pos:column="26"/></argument_list></call> <operator pos:line="24" pos:column="27">&amp;&amp;<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="30">AMQP_VERSION<pos:position pos:line="24" pos:column="42"/></name> <operator pos:line="24" pos:column="43">&gt;=<pos:position pos:line="24" pos:column="48"/></operator> <literal type="number" pos:line="24" pos:column="46">0x00060000<pos:position pos:line="24" pos:column="56"/></literal></expr></cpp:if>
      <comment type="block" pos:line="25" pos:column="7">/* auto delete = */</comment> <argument><expr><literal type="number" pos:line="25" pos:column="27">0<pos:position pos:line="25" pos:column="28"/></literal></expr></argument>,
      <comment type="block" pos:line="26" pos:column="7">/* internal    = */</comment> <argument><expr><literal type="number" pos:line="26" pos:column="27">0<pos:position pos:line="26" pos:column="28"/></literal></expr></argument>,
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
      <comment type="block" pos:line="28" pos:column="7">/* arguments   = */</comment> <argument><expr><name pos:line="28" pos:column="27">argument_table<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><operator pos:line="29" pos:column="7">(<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">ed_ret<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">==<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">NULL<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">)<pos:position pos:line="29" pos:column="23"/></operator> <operator pos:line="29" pos:column="24">&amp;&amp;<pos:position pos:line="29" pos:column="34"/></operator> <call><name pos:line="29" pos:column="27">camqp_is_error<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">conf<pos:position pos:line="29" pos:column="46"/></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="48"/></condition><then pos:line="29" pos:column="48"> <block pos:line="29" pos:column="49">{
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">char<pos:position pos:line="30" pos:column="9"/></name></type> <name><name pos:line="30" pos:column="10">errbuf<pos:position pos:line="30" pos:column="16"/></name><index pos:line="30" pos:column="16">[<expr><literal type="number" pos:line="30" pos:column="17">1024<pos:position pos:line="30" pos:column="21"/></literal></expr>]<pos:position pos:line="30" pos:column="22"/></index></name></decl>;<pos:position pos:line="30" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ERROR<pos:position pos:line="31" pos:column="10"/></name><argument_list pos:line="31" pos:column="10">(<argument><expr><literal type="string" pos:line="31" pos:column="11">"amqp plugin: amqp_exchange_declare failed: %s"<pos:position pos:line="31" pos:column="58"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="32" pos:column="11">camqp_strerror<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">conf<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="32">errbuf<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="40">sizeof<argument_list pos:line="32" pos:column="46">(<argument><expr><name pos:line="32" pos:column="47">errbuf<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">camqp_close_connection<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">conf<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">-<pos:position pos:line="34" pos:column="13"/></operator><literal type="number" pos:line="34" pos:column="13">1<pos:position pos:line="34" pos:column="14"/></literal></expr>;<pos:position pos:line="34" pos:column="15"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">INFO<pos:position pos:line="37" pos:column="7"/></name><argument_list pos:line="37" pos:column="7">(<argument><expr><literal type="string" pos:line="37" pos:column="8">"amqp plugin: Successfully created exchange \"%s\" "<pos:position pos:line="37" pos:column="60"/></literal>
       <literal type="string" pos:line="38" pos:column="8">"with type \"%s\"."<pos:position pos:line="38" pos:column="27"/></literal></expr></argument>,
       <argument><expr><name><name pos:line="39" pos:column="8">conf<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">exchange<pos:position pos:line="39" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="24">conf<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">exchange_type<pos:position pos:line="39" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>

  <return pos:line="41" pos:column="3">return <expr><literal type="number" pos:line="41" pos:column="10">0<pos:position pos:line="41" pos:column="11"/></literal></expr>;<pos:position pos:line="41" pos:column="12"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

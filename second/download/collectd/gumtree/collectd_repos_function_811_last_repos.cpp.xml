<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_811_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">email_shutdown<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list> <block pos:line="1" pos:column="33">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">connector<pos:position pos:line="2" pos:column="16"/></name> <operator pos:line="2" pos:column="17">!=<pos:position pos:line="2" pos:column="19"/></operator> <operator pos:line="2" pos:column="20">(<pos:position pos:line="2" pos:column="21"/></operator><operator pos:line="2" pos:column="21">(<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">pthread_t<pos:position pos:line="2" pos:column="31"/></name><operator pos:line="2" pos:column="31">)<pos:position pos:line="2" pos:column="32"/></operator><literal type="number" pos:line="2" pos:column="32">0<pos:position pos:line="2" pos:column="33"/></literal><operator pos:line="2" pos:column="33">)<pos:position pos:line="2" pos:column="34"/></operator></expr>)<pos:position pos:line="2" pos:column="35"/></condition><then pos:line="2" pos:column="35"> <block pos:line="2" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">pthread_kill<pos:position pos:line="3" pos:column="17"/></name><argument_list pos:line="3" pos:column="17">(<argument><expr><name pos:line="3" pos:column="18">connector<pos:position pos:line="3" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="29">SIGTERM<pos:position pos:line="3" pos:column="36"/></name></expr></argument>)<pos:position pos:line="3" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="4" pos:column="5">connector<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">=<pos:position pos:line="4" pos:column="16"/></operator> <operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">pthread_t<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">)<pos:position pos:line="4" pos:column="28"/></operator><literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr>;<pos:position pos:line="4" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="5" pos:column="4"/></block></then></if>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">connector_socket<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&gt;=<pos:position pos:line="7" pos:column="29"/></operator> <literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29"> <block pos:line="7" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">close<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">connector_socket<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">connector_socket<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <operator pos:line="9" pos:column="24">-<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* don't allow any more connections to be processed */</comment>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">pthread_mutex_lock<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><operator pos:line="13" pos:column="22">&amp;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="23">conns_mutex<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">available_collectors<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">collectors<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">!=<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">NULL<pos:position pos:line="17" pos:column="25"/></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26"> <block pos:line="17" pos:column="27">{
    <for pos:line="18" pos:column="5">for <control pos:line="18" pos:column="9">(<init><decl><type><name pos:line="18" pos:column="10">int<pos:position pos:line="18" pos:column="13"/></name></type> <name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <init pos:line="18" pos:column="16">= <expr><literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="25">max_conns<pos:position pos:line="18" pos:column="34"/></name></expr>;<pos:position pos:line="18" pos:column="35"/></condition> <incr><expr><operator pos:line="18" pos:column="36">++<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">i<pos:position pos:line="18" pos:column="39"/></name></expr></incr>)<pos:position pos:line="18" pos:column="40"/></control> <block pos:line="18" pos:column="41">{
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><name><name pos:line="19" pos:column="11">collectors<pos:position pos:line="19" pos:column="21"/></name><index pos:line="19" pos:column="21">[<expr><name pos:line="19" pos:column="22">i<pos:position pos:line="19" pos:column="23"/></name></expr>]<pos:position pos:line="19" pos:column="24"/></index></name> <operator pos:line="19" pos:column="25">==<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">NULL<pos:position pos:line="19" pos:column="32"/></name></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33">
        <block type="pseudo"><continue pos:line="20" pos:column="9">continue;<pos:position pos:line="20" pos:column="18"/></continue></block></then></if>

      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name><name pos:line="22" pos:column="11">collectors<pos:position pos:line="22" pos:column="21"/></name><index pos:line="22" pos:column="21">[<expr><name pos:line="22" pos:column="22">i<pos:position pos:line="22" pos:column="23"/></name></expr>]<pos:position pos:line="22" pos:column="24"/></index></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">thread<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">!=<pos:position pos:line="22" pos:column="35"/></operator> <operator pos:line="22" pos:column="36">(<pos:position pos:line="22" pos:column="37"/></operator><operator pos:line="22" pos:column="37">(<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">pthread_t<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">)<pos:position pos:line="22" pos:column="48"/></operator><literal type="number" pos:line="22" pos:column="48">0<pos:position pos:line="22" pos:column="49"/></literal><operator pos:line="22" pos:column="49">)<pos:position pos:line="22" pos:column="50"/></operator></expr>)<pos:position pos:line="22" pos:column="51"/></condition><then pos:line="22" pos:column="51"> <block pos:line="22" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">pthread_kill<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name><name pos:line="23" pos:column="22">collectors<pos:position pos:line="23" pos:column="32"/></name><index pos:line="23" pos:column="32">[<expr><name pos:line="23" pos:column="33">i<pos:position pos:line="23" pos:column="34"/></name></expr>]<pos:position pos:line="23" pos:column="35"/></index></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">thread<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">SIGTERM<pos:position pos:line="23" pos:column="52"/></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">collectors<pos:position pos:line="24" pos:column="19"/></name><index pos:line="24" pos:column="19">[<expr><name pos:line="24" pos:column="20">i<pos:position pos:line="24" pos:column="21"/></name></expr>]<pos:position pos:line="24" pos:column="22"/></index></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">thread<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">=<pos:position pos:line="24" pos:column="32"/></operator> <operator pos:line="24" pos:column="33">(<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">pthread_t<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">)<pos:position pos:line="24" pos:column="44"/></operator><literal type="number" pos:line="24" pos:column="44">0<pos:position pos:line="24" pos:column="45"/></literal></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>
      }<pos:position pos:line="25" pos:column="8"/></block></then></if>

      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name><name pos:line="27" pos:column="11">collectors<pos:position pos:line="27" pos:column="21"/></name><index pos:line="27" pos:column="21">[<expr><name pos:line="27" pos:column="22">i<pos:position pos:line="27" pos:column="23"/></name></expr>]<pos:position pos:line="27" pos:column="24"/></index></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">socket<pos:position pos:line="27" pos:column="32"/></name> <operator pos:line="27" pos:column="33">!=<pos:position pos:line="27" pos:column="35"/></operator> <name pos:line="27" pos:column="36">NULL<pos:position pos:line="27" pos:column="40"/></name></expr>)<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41"> <block pos:line="27" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">fclose<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name><name pos:line="28" pos:column="16">collectors<pos:position pos:line="28" pos:column="26"/></name><index pos:line="28" pos:column="26">[<expr><name pos:line="28" pos:column="27">i<pos:position pos:line="28" pos:column="28"/></name></expr>]<pos:position pos:line="28" pos:column="29"/></index></name><operator pos:line="28" pos:column="29">-&gt;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="31">socket<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">collectors<pos:position pos:line="29" pos:column="19"/></name><index pos:line="29" pos:column="19">[<expr><name pos:line="29" pos:column="20">i<pos:position pos:line="29" pos:column="21"/></name></expr>]<pos:position pos:line="29" pos:column="22"/></index></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">socket<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <name pos:line="29" pos:column="33">NULL<pos:position pos:line="29" pos:column="37"/></name></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="30" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="32" pos:column="7">sfree<pos:position pos:line="32" pos:column="12"/></name><argument_list pos:line="32" pos:column="12">(<argument><expr><name><name pos:line="32" pos:column="13">collectors<pos:position pos:line="32" pos:column="23"/></name><index pos:line="32" pos:column="23">[<expr><name pos:line="32" pos:column="24">i<pos:position pos:line="32" pos:column="25"/></name></expr>]<pos:position pos:line="32" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">sfree<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><name pos:line="34" pos:column="11">collectors<pos:position pos:line="34" pos:column="21"/></name></expr></argument>)<pos:position pos:line="34" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if> <comment type="block" pos:line="35" pos:column="5">/* if (collectors != NULL) */</comment>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">pthread_mutex_unlock<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><operator pos:line="37" pos:column="24">&amp;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="25">conns_mutex<pos:position pos:line="37" pos:column="36"/></name></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="39" pos:column="3">type_list_free<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><operator pos:line="39" pos:column="18">&amp;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="19">list_count<pos:position pos:line="39" pos:column="29"/></name></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">type_list_free<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><operator pos:line="40" pos:column="18">&amp;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="19">list_count_copy<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">type_list_free<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><operator pos:line="41" pos:column="18">&amp;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="19">list_size<pos:position pos:line="41" pos:column="28"/></name></expr></argument>)<pos:position pos:line="41" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">type_list_free<pos:position pos:line="42" pos:column="17"/></name><argument_list pos:line="42" pos:column="17">(<argument><expr><operator pos:line="42" pos:column="18">&amp;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="19">list_size_copy<pos:position pos:line="42" pos:column="33"/></name></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">type_list_free<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><operator pos:line="43" pos:column="18">&amp;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="19">list_check<pos:position pos:line="43" pos:column="29"/></name></expr></argument>)<pos:position pos:line="43" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">type_list_free<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><operator pos:line="44" pos:column="18">&amp;<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="19">list_check_copy<pos:position pos:line="44" pos:column="34"/></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="46" pos:column="3">unlink<pos:position pos:line="46" pos:column="9"/></name><argument_list pos:line="46" pos:column="9">(<argument><expr><ternary><condition><expr><operator pos:line="46" pos:column="10">(<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">sock_file<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">==<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">NULL<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">)<pos:position pos:line="46" pos:column="29"/></operator></expr> ?<pos:position pos:line="46" pos:column="31"/></condition><then pos:line="46" pos:column="31"> <expr><name pos:line="46" pos:column="32">SOCK_PATH<pos:position pos:line="46" pos:column="41"/></name></expr> <pos:position pos:line="46" pos:column="42"/></then><else pos:line="46" pos:column="42">: <expr><name pos:line="46" pos:column="44">sock_file<pos:position pos:line="46" pos:column="53"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="48" pos:column="3">sfree<pos:position pos:line="48" pos:column="8"/></name><argument_list pos:line="48" pos:column="8">(<argument><expr><name pos:line="48" pos:column="9">sock_file<pos:position pos:line="48" pos:column="18"/></name></expr></argument>)<pos:position pos:line="48" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">sfree<pos:position pos:line="49" pos:column="8"/></name><argument_list pos:line="49" pos:column="8">(<argument><expr><name pos:line="49" pos:column="9">sock_group<pos:position pos:line="49" pos:column="19"/></name></expr></argument>)<pos:position pos:line="49" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="21"/></expr_stmt>
  <return pos:line="50" pos:column="3">return <expr><literal type="number" pos:line="50" pos:column="10">0<pos:position pos:line="50" pos:column="11"/></literal></expr>;<pos:position pos:line="50" pos:column="12"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_633_collectd-4.3.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ntpd_send_request<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">req_code<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">req_items<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">req_size<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="74">char<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">req_data<pos:position pos:line="1" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="89"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type>             <name pos:line="3" pos:column="25">sd<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">req_pkt<pos:position pos:line="4" pos:column="23"/></name></name></type>  <name pos:line="4" pos:column="25">req<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type>          <name pos:line="5" pos:column="25">req_data_len<pos:position pos:line="5" pos:column="37"/></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type>             <name pos:line="6" pos:column="25">status<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">assert<pos:position pos:line="8" pos:column="15"/></name> <argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">req_items<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">&gt;=<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">req_size<pos:position pos:line="9" pos:column="25"/></name>  <operator pos:line="9" pos:column="27">&gt;=<pos:position pos:line="9" pos:column="32"/></operator> <literal type="number" pos:line="9" pos:column="30">0<pos:position pos:line="9" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">sd<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <call><name pos:line="11" pos:column="19">ntpd_connect<pos:position pos:line="11" pos:column="31"/></name> <argument_list pos:line="11" pos:column="32">()<pos:position pos:line="11" pos:column="34"/></argument_list></call><operator pos:line="11" pos:column="34">)<pos:position pos:line="11" pos:column="35"/></operator> <operator pos:line="11" pos:column="36">&lt;<pos:position pos:line="11" pos:column="40"/></operator> <literal type="number" pos:line="11" pos:column="38">0<pos:position pos:line="11" pos:column="39"/></literal></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="25">-<pos:position pos:line="12" pos:column="26"/></operator><literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator></expr>;<pos:position pos:line="12" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">memset<pos:position pos:line="14" pos:column="15"/></name> <argument_list pos:line="14" pos:column="16">(<argument><expr><operator pos:line="14" pos:column="17">(<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">void<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">*<pos:position pos:line="14" pos:column="24"/></operator><operator pos:line="14" pos:column="24">)<pos:position pos:line="14" pos:column="25"/></operator> <operator pos:line="14" pos:column="26">&amp;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="27">req<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="32">'\0'<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="38">sizeof <argument_list pos:line="14" pos:column="45">(<argument><expr><name pos:line="14" pos:column="46">req<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">req<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">.<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">rm_vn_mode<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">RM_VN_MODE<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><literal type="number" pos:line="15" pos:column="37">0<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="40">0<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="43">0<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">req<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">.<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">auth_seq<pos:position pos:line="16" pos:column="21"/></name></name>   <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <call><name pos:line="16" pos:column="26">AUTH_SEQ<pos:position pos:line="16" pos:column="34"/></name> <argument_list pos:line="16" pos:column="35">(<argument><expr><literal type="number" pos:line="16" pos:column="36">0<pos:position pos:line="16" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="39">0<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">req<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">implementation<pos:position pos:line="17" pos:column="27"/></name></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">IMPL_XNTPD<pos:position pos:line="17" pos:column="40"/></name></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">req<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">.<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">request<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <operator pos:line="18" pos:column="23">(<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">unsigned<pos:position pos:line="18" pos:column="32"/></name> <name pos:line="18" pos:column="33">char<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">)<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="39">req_code<pos:position pos:line="18" pos:column="47"/></name></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>

	<expr_stmt><expr><name pos:line="20" pos:column="9">req_data_len<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <call pos:line="20" pos:column="24">(<name pos:line="20" pos:column="25">size_t<pos:position pos:line="20" pos:column="31"/></name>) <argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">req_items<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">*<pos:position pos:line="20" pos:column="45"/></operator> <name pos:line="20" pos:column="46">req_size<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">assert<pos:position pos:line="22" pos:column="15"/></name> <argument_list pos:line="22" pos:column="16">(<argument><expr><operator pos:line="22" pos:column="17">(<pos:position pos:line="22" pos:column="18"/></operator><operator pos:line="22" pos:column="18">(<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">req_data<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">!=<pos:position pos:line="22" pos:column="30"/></operator> <name pos:line="22" pos:column="31">NULL<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator> <operator pos:line="22" pos:column="37">&amp;&amp;<pos:position pos:line="22" pos:column="47"/></operator> <operator pos:line="22" pos:column="40">(<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">req_data_len<pos:position pos:line="22" pos:column="53"/></name> <operator pos:line="22" pos:column="54">&gt;<pos:position pos:line="22" pos:column="58"/></operator> <literal type="number" pos:line="22" pos:column="56">0<pos:position pos:line="22" pos:column="57"/></literal><operator pos:line="22" pos:column="57">)<pos:position pos:line="22" pos:column="58"/></operator><operator pos:line="22" pos:column="58">)<pos:position pos:line="22" pos:column="59"/></operator>
			<operator pos:line="23" pos:column="25">||<pos:position pos:line="23" pos:column="27"/></operator> <operator pos:line="23" pos:column="28">(<pos:position pos:line="23" pos:column="29"/></operator><operator pos:line="23" pos:column="29">(<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">req_data<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">==<pos:position pos:line="23" pos:column="41"/></operator> <name pos:line="23" pos:column="42">NULL<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">)<pos:position pos:line="23" pos:column="47"/></operator> <operator pos:line="23" pos:column="48">&amp;&amp;<pos:position pos:line="23" pos:column="58"/></operator> <operator pos:line="23" pos:column="51">(<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="52">req_items<pos:position pos:line="23" pos:column="61"/></name> <operator pos:line="23" pos:column="62">==<pos:position pos:line="23" pos:column="64"/></operator> <literal type="number" pos:line="23" pos:column="65">0<pos:position pos:line="23" pos:column="66"/></literal><operator pos:line="23" pos:column="66">)<pos:position pos:line="23" pos:column="67"/></operator> <operator pos:line="23" pos:column="68">&amp;&amp;<pos:position pos:line="23" pos:column="78"/></operator> <operator pos:line="23" pos:column="71">(<pos:position pos:line="23" pos:column="72"/></operator><name pos:line="23" pos:column="72">req_size<pos:position pos:line="23" pos:column="80"/></name> <operator pos:line="23" pos:column="81">==<pos:position pos:line="23" pos:column="83"/></operator> <literal type="number" pos:line="23" pos:column="84">0<pos:position pos:line="23" pos:column="85"/></literal><operator pos:line="23" pos:column="85">)<pos:position pos:line="23" pos:column="86"/></operator><operator pos:line="23" pos:column="86">)<pos:position pos:line="23" pos:column="87"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="89"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="25" pos:column="9">req<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">.<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">err_nitems<pos:position pos:line="25" pos:column="23"/></name></name>   <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <call><name pos:line="25" pos:column="28">ERR_NITEMS<pos:position pos:line="25" pos:column="38"/></name> <argument_list pos:line="25" pos:column="39">(<argument><expr><literal type="number" pos:line="25" pos:column="40">0<pos:position pos:line="25" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">req_items<pos:position pos:line="25" pos:column="52"/></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">req<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">.<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">mbz_itemsize<pos:position pos:line="26" pos:column="25"/></name></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <call><name pos:line="26" pos:column="28">MBZ_ITEMSIZE<pos:position pos:line="26" pos:column="40"/></name> <argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">req_size<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>
	
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">req_data<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">!=<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="25">NULL<pos:position pos:line="28" pos:column="29"/></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">memcpy<pos:position pos:line="29" pos:column="23"/></name> <argument_list pos:line="29" pos:column="24">(<argument><expr><operator pos:line="29" pos:column="25">(<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">void<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">*<pos:position pos:line="29" pos:column="32"/></operator><operator pos:line="29" pos:column="32">)<pos:position pos:line="29" pos:column="33"/></operator> <name><name pos:line="29" pos:column="34">req<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">.<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="38">data<pos:position pos:line="29" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="44">(<pos:position pos:line="29" pos:column="45"/></operator><specifier pos:line="29" pos:column="45">const<pos:position pos:line="29" pos:column="50"/></specifier> <name pos:line="29" pos:column="51">void<pos:position pos:line="29" pos:column="55"/></name> <operator pos:line="29" pos:column="56">*<pos:position pos:line="29" pos:column="57"/></operator><operator pos:line="29" pos:column="57">)<pos:position pos:line="29" pos:column="58"/></operator> <name pos:line="29" pos:column="59">req_data<pos:position pos:line="29" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="69">req_data_len<pos:position pos:line="29" pos:column="81"/></name></expr></argument>)<pos:position pos:line="29" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="83"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">DEBUG<pos:position pos:line="31" pos:column="14"/></name> <argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="string" pos:line="31" pos:column="16">"req_items = %i; req_size = %i; req_data = %p;"<pos:position pos:line="31" pos:column="63"/></literal></expr></argument>,
			<argument><expr><name pos:line="32" pos:column="25">req_items<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="36">req_size<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="46">(<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="47">void<pos:position pos:line="32" pos:column="51"/></name> <operator pos:line="32" pos:column="52">*<pos:position pos:line="32" pos:column="53"/></operator><operator pos:line="32" pos:column="53">)<pos:position pos:line="32" pos:column="54"/></operator> <name pos:line="32" pos:column="55">req_data<pos:position pos:line="32" pos:column="63"/></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="65"/></expr_stmt>

	<expr_stmt><expr><name pos:line="34" pos:column="9">status<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">swrite<pos:position pos:line="34" pos:column="24"/></name> <argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">sd<pos:position pos:line="34" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="30">(<pos:position pos:line="34" pos:column="31"/></operator><specifier pos:line="34" pos:column="31">const<pos:position pos:line="34" pos:column="36"/></specifier> <name pos:line="34" pos:column="37">char<pos:position pos:line="34" pos:column="41"/></name> <operator pos:line="34" pos:column="42">*<pos:position pos:line="34" pos:column="43"/></operator><operator pos:line="34" pos:column="43">)<pos:position pos:line="34" pos:column="44"/></operator> <operator pos:line="34" pos:column="45">&amp;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="46">req<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">REQ_LEN_NOMAC<pos:position pos:line="34" pos:column="64"/></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">status<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">&lt;<pos:position pos:line="35" pos:column="24"/></operator> <literal type="number" pos:line="35" pos:column="22">0<pos:position pos:line="35" pos:column="23"/></literal></expr>)<pos:position pos:line="35" pos:column="24"/></condition><then pos:line="35" pos:column="24">
	<block pos:line="36" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">DEBUG<pos:position pos:line="37" pos:column="22"/></name> <argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="string" pos:line="37" pos:column="24">"`swrite' failed. Closing socket #%i"<pos:position pos:line="37" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="63">sd<pos:position pos:line="37" pos:column="65"/></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">close<pos:position pos:line="38" pos:column="22"/></name> <argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">sd<pos:position pos:line="38" pos:column="26"/></name></expr></argument>)<pos:position pos:line="38" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">sock_descr<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <name pos:line="39" pos:column="30">sd<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">=<pos:position pos:line="39" pos:column="34"/></operator> <operator pos:line="39" pos:column="35">-<pos:position pos:line="39" pos:column="36"/></operator><literal type="number" pos:line="39" pos:column="36">1<pos:position pos:line="39" pos:column="37"/></literal></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
		<return pos:line="40" pos:column="17">return <expr><operator pos:line="40" pos:column="24">(<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">status<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">)<pos:position pos:line="40" pos:column="32"/></operator></expr>;<pos:position pos:line="40" pos:column="33"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">0<pos:position pos:line="43" pos:column="18"/></literal><operator pos:line="43" pos:column="18">)<pos:position pos:line="43" pos:column="19"/></operator></expr>;<pos:position pos:line="43" pos:column="20"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

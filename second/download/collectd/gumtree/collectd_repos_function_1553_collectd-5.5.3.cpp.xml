<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1553_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">update_last<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">ceph_daemon<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">d<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">ds_n<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">index<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">double<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">cur_sum<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">uint64_t<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">cur_count<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if<condition pos:line="4" pos:column="7">(<expr><operator pos:line="4" pos:column="8">(<pos:position pos:line="4" pos:column="9"/></operator><name><name pos:line="4" pos:column="9">d<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">-&gt;<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="12">last_idx<pos:position pos:line="4" pos:column="20"/></name></name> <operator pos:line="4" pos:column="21">&gt;<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="23">index<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">)<pos:position pos:line="4" pos:column="29"/></operator> <operator pos:line="4" pos:column="30">&amp;&amp;<pos:position pos:line="4" pos:column="40"/></operator> <operator pos:line="4" pos:column="33">(<pos:position pos:line="4" pos:column="34"/></operator><call><name pos:line="4" pos:column="34">strcmp<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name><name pos:line="4" pos:column="41">d<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">-&gt;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="44">last_poll_data<pos:position pos:line="4" pos:column="58"/></name><index pos:line="4" pos:column="58">[<expr><name pos:line="4" pos:column="59">index<pos:position pos:line="4" pos:column="64"/></name></expr>]<pos:position pos:line="4" pos:column="65"/></index></name><operator pos:line="4" pos:column="65">-&gt;<pos:position pos:line="4" pos:column="70"/></operator><name pos:line="4" pos:column="67">ds_name<pos:position pos:line="4" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="76">ds_n<pos:position pos:line="4" pos:column="80"/></name></expr></argument>)<pos:position pos:line="4" pos:column="81"/></argument_list></call> <operator pos:line="4" pos:column="82">==<pos:position pos:line="4" pos:column="84"/></operator> <literal type="number" pos:line="4" pos:column="85">0<pos:position pos:line="4" pos:column="86"/></literal><operator pos:line="4" pos:column="86">)<pos:position pos:line="4" pos:column="87"/></operator></expr>)<pos:position pos:line="4" pos:column="88"/></condition><then pos:line="4" pos:column="88">
    <block pos:line="5" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">d<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">last_poll_data<pos:position pos:line="6" pos:column="26"/></name><index pos:line="6" pos:column="26">[<expr><name pos:line="6" pos:column="27">index<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">last_sum<pos:position pos:line="6" pos:column="43"/></name> <operator pos:line="6" pos:column="44">=<pos:position pos:line="6" pos:column="45"/></operator> <name pos:line="6" pos:column="46">cur_sum<pos:position pos:line="6" pos:column="53"/></name></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">d<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">last_poll_data<pos:position pos:line="7" pos:column="26"/></name><index pos:line="7" pos:column="26">[<expr><name pos:line="7" pos:column="27">index<pos:position pos:line="7" pos:column="32"/></name></expr>]<pos:position pos:line="7" pos:column="33"/></index></name><operator pos:line="7" pos:column="33">-&gt;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="35">last_count<pos:position pos:line="7" pos:column="45"/></name> <operator pos:line="7" pos:column="46">=<pos:position pos:line="7" pos:column="47"/></operator> <name pos:line="7" pos:column="48">cur_count<pos:position pos:line="7" pos:column="57"/></name></expr>;<pos:position pos:line="7" pos:column="58"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <if pos:line="11" pos:column="5">if<condition pos:line="11" pos:column="7">(<expr><operator pos:line="11" pos:column="8">!<pos:position pos:line="11" pos:column="9"/></operator><name><name pos:line="11" pos:column="9">d<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">last_poll_data<pos:position pos:line="11" pos:column="26"/></name></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27">
    <block pos:line="12" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">d<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">last_poll_data<pos:position pos:line="13" pos:column="26"/></name></name> <operator pos:line="13" pos:column="27">=<pos:position pos:line="13" pos:column="28"/></operator> <call><name pos:line="13" pos:column="29">malloc<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><literal type="number" pos:line="13" pos:column="36">1<pos:position pos:line="13" pos:column="37"/></literal> <operator pos:line="13" pos:column="38">*<pos:position pos:line="13" pos:column="39"/></operator> <sizeof pos:line="13" pos:column="40">sizeof<argument_list pos:line="13" pos:column="46">(<argument><expr pos:line="13" pos:column="47">struct <name pos:line="13" pos:column="54">last_data<pos:position pos:line="13" pos:column="63"/></name> <operator pos:line="13" pos:column="64">*<pos:position pos:line="13" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
        <if pos:line="14" pos:column="9">if<condition pos:line="14" pos:column="11">(<expr><operator pos:line="14" pos:column="12">!<pos:position pos:line="14" pos:column="13"/></operator><name><name pos:line="14" pos:column="13">d<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">last_poll_data<pos:position pos:line="14" pos:column="30"/></name></name></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31">
        <block pos:line="15" pos:column="9">{
            <return pos:line="16" pos:column="13">return <expr><operator pos:line="16" pos:column="20">-<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">ENOMEM<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then>
    <else pos:line="19" pos:column="5">else
    <block pos:line="20" pos:column="5">{
        <decl_stmt><decl><type><name><name pos:line="21" pos:column="9">struct<pos:position pos:line="21" pos:column="15"/></name> <name pos:line="21" pos:column="16">last_data<pos:position pos:line="21" pos:column="25"/></name></name> <modifier pos:line="21" pos:column="26">*<pos:position pos:line="21" pos:column="27"/></modifier><modifier pos:line="21" pos:column="27">*<pos:position pos:line="21" pos:column="28"/></modifier></type><name pos:line="21" pos:column="28">tmp_last<pos:position pos:line="21" pos:column="36"/></name> <init pos:line="21" pos:column="37">= <expr><call><name pos:line="21" pos:column="39">realloc<pos:position pos:line="21" pos:column="46"/></name><argument_list pos:line="21" pos:column="46">(<argument><expr><name><name pos:line="21" pos:column="47">d<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">-&gt;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="50">last_poll_data<pos:position pos:line="21" pos:column="64"/></name></name></expr></argument>,
                <argument><expr><operator pos:line="22" pos:column="17">(<pos:position pos:line="22" pos:column="18"/></operator><operator pos:line="22" pos:column="18">(<pos:position pos:line="22" pos:column="19"/></operator><name><name pos:line="22" pos:column="19">d<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">last_idx<pos:position pos:line="22" pos:column="30"/></name></name><operator pos:line="22" pos:column="30">+<pos:position pos:line="22" pos:column="31"/></operator><literal type="number" pos:line="22" pos:column="31">1<pos:position pos:line="22" pos:column="32"/></literal><operator pos:line="22" pos:column="32">)<pos:position pos:line="22" pos:column="33"/></operator> <operator pos:line="22" pos:column="34">*<pos:position pos:line="22" pos:column="35"/></operator> <sizeof pos:line="22" pos:column="36">sizeof<argument_list pos:line="22" pos:column="42">(<argument><expr pos:line="22" pos:column="43">struct <name pos:line="22" pos:column="50">last_data<pos:position pos:line="22" pos:column="59"/></name> <operator pos:line="22" pos:column="60">*<pos:position pos:line="22" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></sizeof><operator pos:line="22" pos:column="62">)<pos:position pos:line="22" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="65"/></decl_stmt>
        <if pos:line="23" pos:column="9">if<condition pos:line="23" pos:column="11">(<expr><operator pos:line="23" pos:column="12">!<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">tmp_last<pos:position pos:line="23" pos:column="21"/></name></expr>)<pos:position pos:line="23" pos:column="22"/></condition><then pos:line="23" pos:column="22">
        <block pos:line="24" pos:column="9">{
            <return pos:line="25" pos:column="13">return <expr><operator pos:line="25" pos:column="20">-<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">ENOMEM<pos:position pos:line="25" pos:column="27"/></name></expr>;<pos:position pos:line="25" pos:column="28"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">d<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">last_poll_data<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="29">tmp_last<pos:position pos:line="27" pos:column="37"/></name></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>
    <return pos:line="29" pos:column="5">return <expr><call><name pos:line="29" pos:column="12">add_last<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">d<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="24">ds_n<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">cur_sum<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="39">cur_count<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

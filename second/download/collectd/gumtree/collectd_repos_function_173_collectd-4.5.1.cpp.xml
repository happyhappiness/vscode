<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_173_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">thermal_sysfs_device_read<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">dir<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">name<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">user_data<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">filename<pos:position pos:line="4" pos:column="22"/></name><index pos:line="4" pos:column="22">[<expr><literal type="number" pos:line="4" pos:column="23">256<pos:position pos:line="4" pos:column="26"/></literal></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">data<pos:position pos:line="5" pos:column="18"/></name><index pos:line="5" pos:column="18">[<expr><literal type="number" pos:line="5" pos:column="19">1024<pos:position pos:line="5" pos:column="23"/></literal></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">len<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ok<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">device_list<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">&amp;&amp;<pos:position pos:line="9" pos:column="35"/></operator> <call><name pos:line="9" pos:column="28">ignorelist_match<pos:position pos:line="9" pos:column="44"/></name> <argument_list pos:line="9" pos:column="45">(<argument><expr><name pos:line="9" pos:column="46">device_list<pos:position pos:line="9" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="59">name<pos:position pos:line="9" pos:column="63"/></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="65"/></condition><then pos:line="9" pos:column="65">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">len<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">snprintf<pos:position pos:line="12" pos:column="23"/></name> <argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">filename<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="35">sizeof <argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">filename<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="54">"%s/%s/temp"<pos:position pos:line="12" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="68">dirname_sysfs<pos:position pos:line="12" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="83">name<pos:position pos:line="12" pos:column="87"/></name></expr></argument>)<pos:position pos:line="12" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="89"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">len<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">&lt;<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="20">0<pos:position pos:line="13" pos:column="21"/></literal><operator pos:line="13" pos:column="21">)<pos:position pos:line="13" pos:column="22"/></operator> <operator pos:line="13" pos:column="23">||<pos:position pos:line="13" pos:column="25"/></operator> <operator pos:line="13" pos:column="26">(<pos:position pos:line="13" pos:column="27"/></operator><operator pos:line="13" pos:column="27">(<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">unsigned<pos:position pos:line="13" pos:column="36"/></name> <name pos:line="13" pos:column="37">int<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">)<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">len<pos:position pos:line="13" pos:column="44"/></name> <operator pos:line="13" pos:column="45">&gt;=<pos:position pos:line="13" pos:column="50"/></operator> <sizeof pos:line="13" pos:column="48">sizeof <argument_list pos:line="13" pos:column="55">(<argument><expr><name pos:line="13" pos:column="56">filename<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></sizeof><operator pos:line="13" pos:column="65">)<pos:position pos:line="13" pos:column="66"/></operator></expr>)<pos:position pos:line="13" pos:column="67"/></condition><then pos:line="13" pos:column="67">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">len<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">read_file_contents<pos:position pos:line="16" pos:column="33"/></name> <argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">filename<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">data<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="51">sizeof<argument_list pos:line="16" pos:column="57">(<argument><expr><name pos:line="16" pos:column="58">data<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">len<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&gt;<pos:position pos:line="17" pos:column="21"/></operator> <literal type="number" pos:line="17" pos:column="19">1<pos:position pos:line="17" pos:column="20"/></literal> <operator pos:line="17" pos:column="21">&amp;&amp;<pos:position pos:line="17" pos:column="31"/></operator> <name><name pos:line="17" pos:column="24">data<pos:position pos:line="17" pos:column="28"/></name><index pos:line="17" pos:column="28">[<expr><operator pos:line="17" pos:column="29">--<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">len<pos:position pos:line="17" pos:column="34"/></name></expr>]<pos:position pos:line="17" pos:column="35"/></index></name> <operator pos:line="17" pos:column="36">==<pos:position pos:line="17" pos:column="38"/></operator> <literal type="char" pos:line="17" pos:column="39">'\n'<pos:position pos:line="17" pos:column="43"/></literal></expr>)<pos:position pos:line="17" pos:column="44"/></condition><then pos:line="17" pos:column="44"> <block pos:line="17" pos:column="45">{
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">char<pos:position pos:line="18" pos:column="21"/></name> <modifier pos:line="18" pos:column="22">*<pos:position pos:line="18" pos:column="23"/></modifier></type><name pos:line="18" pos:column="23">endptr<pos:position pos:line="18" pos:column="29"/></name> <init pos:line="18" pos:column="30">= <expr><name pos:line="18" pos:column="32">NULL<pos:position pos:line="18" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">double<pos:position pos:line="19" pos:column="23"/></name></type> <name pos:line="19" pos:column="24">temp<pos:position pos:line="19" pos:column="28"/></name></decl>;<pos:position pos:line="19" pos:column="29"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="21" pos:column="17">data<pos:position pos:line="21" pos:column="21"/></name><index pos:line="21" pos:column="21">[<expr><name pos:line="21" pos:column="22">len<pos:position pos:line="21" pos:column="25"/></name></expr>]<pos:position pos:line="21" pos:column="26"/></index></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="29">0<pos:position pos:line="21" pos:column="30"/></literal></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">errno<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">temp<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <call><name pos:line="23" pos:column="24">strtod<pos:position pos:line="23" pos:column="30"/></name> <argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">data<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="38">&amp;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="39">endptr<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call> <operator pos:line="23" pos:column="47">/<pos:position pos:line="23" pos:column="48"/></operator> <literal type="number" pos:line="23" pos:column="49">1000.0<pos:position pos:line="23" pos:column="55"/></literal></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">endptr<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">==<pos:position pos:line="25" pos:column="30"/></operator> <name pos:line="25" pos:column="31">data<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">+<pos:position pos:line="25" pos:column="37"/></operator> <name pos:line="25" pos:column="38">len<pos:position pos:line="25" pos:column="41"/></name> <operator pos:line="25" pos:column="42">&amp;&amp;<pos:position pos:line="25" pos:column="52"/></operator> <name pos:line="25" pos:column="45">errno<pos:position pos:line="25" pos:column="50"/></name> <operator pos:line="25" pos:column="51">==<pos:position pos:line="25" pos:column="53"/></operator> <literal type="number" pos:line="25" pos:column="54">0<pos:position pos:line="25" pos:column="55"/></literal></expr>)<pos:position pos:line="25" pos:column="56"/></condition><then pos:line="25" pos:column="56"> <block pos:line="25" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">thermal_submit<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><name pos:line="26" pos:column="40">name<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">TEMP<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">temp<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="27" pos:column="25">++<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">ok<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="31" pos:column="9">len<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <call><name pos:line="31" pos:column="15">snprintf<pos:position pos:line="31" pos:column="23"/></name> <argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">filename<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="35">sizeof <argument_list pos:line="31" pos:column="42">(<argument><expr><name pos:line="31" pos:column="43">filename<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="54">"%s/%s/cur_state"<pos:position pos:line="31" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="73">dirname_sysfs<pos:position pos:line="31" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="88">name<pos:position pos:line="31" pos:column="92"/></name></expr></argument>)<pos:position pos:line="31" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="94"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">len<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">&lt;<pos:position pos:line="32" pos:column="22"/></operator> <literal type="number" pos:line="32" pos:column="20">0<pos:position pos:line="32" pos:column="21"/></literal><operator pos:line="32" pos:column="21">)<pos:position pos:line="32" pos:column="22"/></operator> <operator pos:line="32" pos:column="23">||<pos:position pos:line="32" pos:column="25"/></operator> <operator pos:line="32" pos:column="26">(<pos:position pos:line="32" pos:column="27"/></operator><operator pos:line="32" pos:column="27">(<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">unsigned<pos:position pos:line="32" pos:column="36"/></name> <name pos:line="32" pos:column="37">int<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">)<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="41">len<pos:position pos:line="32" pos:column="44"/></name> <operator pos:line="32" pos:column="45">&gt;=<pos:position pos:line="32" pos:column="50"/></operator> <sizeof pos:line="32" pos:column="48">sizeof <argument_list pos:line="32" pos:column="55">(<argument><expr><name pos:line="32" pos:column="56">filename<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></sizeof><operator pos:line="32" pos:column="65">)<pos:position pos:line="32" pos:column="66"/></operator></expr>)<pos:position pos:line="32" pos:column="67"/></condition><then pos:line="32" pos:column="67">
		<block type="pseudo"><return pos:line="33" pos:column="17">return <expr><operator pos:line="33" pos:column="24">-<pos:position pos:line="33" pos:column="25"/></operator><literal type="number" pos:line="33" pos:column="25">1<pos:position pos:line="33" pos:column="26"/></literal></expr>;<pos:position pos:line="33" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="35" pos:column="9">len<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">read_file_contents<pos:position pos:line="35" pos:column="33"/></name> <argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">filename<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="45">data<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="51">sizeof<argument_list pos:line="35" pos:column="57">(<argument><expr><name pos:line="35" pos:column="58">data<pos:position pos:line="35" pos:column="62"/></name></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">len<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">&gt;<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="19">1<pos:position pos:line="36" pos:column="20"/></literal> <operator pos:line="36" pos:column="21">&amp;&amp;<pos:position pos:line="36" pos:column="31"/></operator> <name><name pos:line="36" pos:column="24">data<pos:position pos:line="36" pos:column="28"/></name><index pos:line="36" pos:column="28">[<expr><operator pos:line="36" pos:column="29">--<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="31">len<pos:position pos:line="36" pos:column="34"/></name></expr>]<pos:position pos:line="36" pos:column="35"/></index></name> <operator pos:line="36" pos:column="36">==<pos:position pos:line="36" pos:column="38"/></operator> <literal type="char" pos:line="36" pos:column="39">'\n'<pos:position pos:line="36" pos:column="43"/></literal></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44"> <block pos:line="36" pos:column="45">{
		<decl_stmt><decl><type><name pos:line="37" pos:column="17">char<pos:position pos:line="37" pos:column="21"/></name> <modifier pos:line="37" pos:column="22">*<pos:position pos:line="37" pos:column="23"/></modifier></type><name pos:line="37" pos:column="23">endptr<pos:position pos:line="37" pos:column="29"/></name> <init pos:line="37" pos:column="30">= <expr><name pos:line="37" pos:column="32">NULL<pos:position pos:line="37" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="38" pos:column="17">double<pos:position pos:line="38" pos:column="23"/></name></type> <name pos:line="38" pos:column="24">state<pos:position pos:line="38" pos:column="29"/></name></decl>;<pos:position pos:line="38" pos:column="30"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="40" pos:column="17">data<pos:position pos:line="40" pos:column="21"/></name><index pos:line="40" pos:column="21">[<expr><name pos:line="40" pos:column="22">len<pos:position pos:line="40" pos:column="25"/></name></expr>]<pos:position pos:line="40" pos:column="26"/></index></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <literal type="number" pos:line="40" pos:column="29">0<pos:position pos:line="40" pos:column="30"/></literal></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">errno<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">=<pos:position pos:line="41" pos:column="24"/></operator> <literal type="number" pos:line="41" pos:column="25">0<pos:position pos:line="41" pos:column="26"/></literal></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">state<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">=<pos:position pos:line="42" pos:column="24"/></operator> <call><name pos:line="42" pos:column="25">strtod<pos:position pos:line="42" pos:column="31"/></name> <argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">data<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="39">&amp;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="40">endptr<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>

		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">endptr<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">==<pos:position pos:line="44" pos:column="30"/></operator> <name pos:line="44" pos:column="31">data<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">+<pos:position pos:line="44" pos:column="37"/></operator> <name pos:line="44" pos:column="38">len<pos:position pos:line="44" pos:column="41"/></name> <operator pos:line="44" pos:column="42">&amp;&amp;<pos:position pos:line="44" pos:column="52"/></operator> <name pos:line="44" pos:column="45">errno<pos:position pos:line="44" pos:column="50"/></name> <operator pos:line="44" pos:column="51">==<pos:position pos:line="44" pos:column="53"/></operator> <literal type="number" pos:line="44" pos:column="54">0<pos:position pos:line="44" pos:column="55"/></literal></expr>)<pos:position pos:line="44" pos:column="56"/></condition><then pos:line="44" pos:column="56"> <block pos:line="44" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">thermal_submit<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">(<argument><expr><name pos:line="45" pos:column="40">name<pos:position pos:line="45" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="46">COOLING_DEV<pos:position pos:line="45" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="59">state<pos:position pos:line="45" pos:column="64"/></name></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="46" pos:column="25">++<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="27">ok<pos:position pos:line="46" pos:column="29"/></name></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<return pos:line="50" pos:column="9">return <expr><ternary><condition><expr><name pos:line="50" pos:column="16">ok<pos:position pos:line="50" pos:column="18"/></name></expr> ?<pos:position pos:line="50" pos:column="20"/></condition><then pos:line="50" pos:column="20"> <expr><literal type="number" pos:line="50" pos:column="21">0<pos:position pos:line="50" pos:column="22"/></literal></expr> <pos:position pos:line="50" pos:column="23"/></then><else pos:line="50" pos:column="23">: <expr><operator pos:line="50" pos:column="25">-<pos:position pos:line="50" pos:column="26"/></operator><literal type="number" pos:line="50" pos:column="26">1<pos:position pos:line="50" pos:column="27"/></literal></expr></else></ternary></expr>;<pos:position pos:line="50" pos:column="28"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

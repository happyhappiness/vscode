<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1017_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wm_write<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">data_set_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ds<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="44">/* {{{ */</comment>
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">value_list_t<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">vl<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">user_data_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">ud<pos:position pos:line="3" pos:column="20"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="21"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">wm_node_t<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">node<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">ud<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">data<pos:position pos:line="5" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">collection_name<pos:position pos:line="6" pos:column="23"/></name><index pos:line="6" pos:column="23">[<expr><literal type="number" pos:line="6" pos:column="24">512<pos:position pos:line="6" pos:column="27"/></literal></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">bson<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">bson_record<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">ssnprintf<pos:position pos:line="10" pos:column="12"/></name> <argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">collection_name<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="31">sizeof <argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">collection_name<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="57">"collectd.%s"<pos:position pos:line="10" pos:column="70"/></literal></expr></argument>,
      <argument><expr><name><name pos:line="11" pos:column="7">vl<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">plugin<pos:position pos:line="11" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">bson_record<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">wm_create_bson<pos:position pos:line="13" pos:column="31"/></name> <argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">ds<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">vl<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="41">node<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">store_rates<pos:position pos:line="13" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">bson_record<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">==<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">NULL<pos:position pos:line="14" pos:column="26"/></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">ENOMEM<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">)<pos:position pos:line="15" pos:column="20"/></operator></expr>;<pos:position pos:line="15" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">pthread_mutex_lock<pos:position pos:line="17" pos:column="21"/></name> <argument_list pos:line="17" pos:column="22">(<argument><expr><operator pos:line="17" pos:column="23">&amp;<pos:position pos:line="17" pos:column="28"/></operator><name><name pos:line="17" pos:column="24">node<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">lock<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator><call><name pos:line="19" pos:column="8">mongo_is_connected<pos:position pos:line="19" pos:column="26"/></name> <argument_list pos:line="19" pos:column="27">(<argument><expr><name><name pos:line="19" pos:column="28">node<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">conn<pos:position pos:line="19" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40">
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">INFO<pos:position pos:line="21" pos:column="9"/></name> <argument_list pos:line="21" pos:column="10">(<argument><expr><literal type="string" pos:line="21" pos:column="11">"write_mongodb plugin: Connecting to [%s]:%i"<pos:position pos:line="21" pos:column="56"/></literal></expr></argument>,
        <argument><expr><ternary><condition><expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name><name pos:line="22" pos:column="10">node<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">host<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">!=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">)<pos:position pos:line="22" pos:column="29"/></operator></expr> ?<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31"> <expr><name><name pos:line="22" pos:column="32">node<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">host<pos:position pos:line="22" pos:column="42"/></name></name></expr> <pos:position pos:line="22" pos:column="43"/></then><else pos:line="22" pos:column="43">: <expr><literal type="string" pos:line="22" pos:column="45">"localhost"<pos:position pos:line="22" pos:column="56"/></literal></expr></else></ternary></expr></argument>,
        <argument><expr><ternary><condition><expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name><name pos:line="23" pos:column="10">node<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">port<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">!=<pos:position pos:line="23" pos:column="23"/></operator> <literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal><operator pos:line="23" pos:column="25">)<pos:position pos:line="23" pos:column="26"/></operator></expr> ?<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28"> <expr><name><name pos:line="23" pos:column="29">node<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">-&gt;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="35">port<pos:position pos:line="23" pos:column="39"/></name></name></expr> <pos:position pos:line="23" pos:column="40"/></then><else pos:line="23" pos:column="40">: <expr><name pos:line="23" pos:column="42">MONGO_DEFAULT_PORT<pos:position pos:line="23" pos:column="60"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">status<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">mongo_connect<pos:position pos:line="24" pos:column="27"/></name> <argument_list pos:line="24" pos:column="28">(<argument><expr><name><name pos:line="24" pos:column="29">node<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">conn<pos:position pos:line="24" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="41">node<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">host<pos:position pos:line="24" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="53">node<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">-&gt;<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="59">port<pos:position pos:line="24" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">!=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">MONGO_OK<pos:position pos:line="25" pos:column="27"/></name></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28"> <block pos:line="25" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">ERROR<pos:position pos:line="26" pos:column="12"/></name> <argument_list pos:line="26" pos:column="13">(<argument><expr><literal type="string" pos:line="26" pos:column="14">"write_mongodb plugin: Connecting to [%s]:%i failed."<pos:position pos:line="26" pos:column="67"/></literal></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="27" pos:column="11">(<pos:position pos:line="27" pos:column="12"/></operator><name><name pos:line="27" pos:column="12">node<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">host<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">!=<pos:position pos:line="27" pos:column="25"/></operator> <name pos:line="27" pos:column="26">NULL<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">)<pos:position pos:line="27" pos:column="31"/></operator></expr> ?<pos:position pos:line="27" pos:column="33"/></condition><then pos:line="27" pos:column="33"> <expr><name><name pos:line="27" pos:column="34">node<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">host<pos:position pos:line="27" pos:column="44"/></name></name></expr> <pos:position pos:line="27" pos:column="45"/></then><else pos:line="27" pos:column="45">: <expr><literal type="string" pos:line="27" pos:column="47">"localhost"<pos:position pos:line="27" pos:column="58"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="28" pos:column="11">(<pos:position pos:line="28" pos:column="12"/></operator><name><name pos:line="28" pos:column="12">node<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">port<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">!=<pos:position pos:line="28" pos:column="25"/></operator> <literal type="number" pos:line="28" pos:column="26">0<pos:position pos:line="28" pos:column="27"/></literal><operator pos:line="28" pos:column="27">)<pos:position pos:line="28" pos:column="28"/></operator></expr> ?<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30"> <expr><name><name pos:line="28" pos:column="31">node<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">port<pos:position pos:line="28" pos:column="41"/></name></name></expr> <pos:position pos:line="28" pos:column="42"/></then><else pos:line="28" pos:column="42">: <expr><name pos:line="28" pos:column="44">MONGO_DEFAULT_PORT<pos:position pos:line="28" pos:column="62"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">mongo_destroy<pos:position pos:line="29" pos:column="20"/></name> <argument_list pos:line="29" pos:column="21">(<argument><expr><name><name pos:line="29" pos:column="22">node<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">conn<pos:position pos:line="29" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">pthread_mutex_unlock<pos:position pos:line="30" pos:column="27"/></name> <argument_list pos:line="30" pos:column="28">(<argument><expr><operator pos:line="30" pos:column="29">&amp;<pos:position pos:line="30" pos:column="34"/></operator><name><name pos:line="30" pos:column="30">node<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">lock<pos:position pos:line="30" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
      <return pos:line="31" pos:column="7">return <expr><operator pos:line="31" pos:column="14">(<pos:position pos:line="31" pos:column="15"/></operator><operator pos:line="31" pos:column="15">-<pos:position pos:line="31" pos:column="16"/></operator><literal type="number" pos:line="31" pos:column="16">1<pos:position pos:line="31" pos:column="17"/></literal><operator pos:line="31" pos:column="17">)<pos:position pos:line="31" pos:column="18"/></operator></expr>;<pos:position pos:line="31" pos:column="19"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><name pos:line="34" pos:column="9">node<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">timeout<pos:position pos:line="34" pos:column="22"/></name></name> <operator pos:line="34" pos:column="23">&gt;<pos:position pos:line="34" pos:column="27"/></operator> <literal type="number" pos:line="34" pos:column="25">0<pos:position pos:line="34" pos:column="26"/></literal></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27"> <block pos:line="34" pos:column="28">{
      <expr_stmt><expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">mongo_set_op_timeout<pos:position pos:line="35" pos:column="36"/></name> <argument_list pos:line="35" pos:column="37">(<argument><expr><name><name pos:line="35" pos:column="38">node<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">conn<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="50">node<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">-&gt;<pos:position pos:line="35" pos:column="59"/></operator><name pos:line="35" pos:column="56">timeout<pos:position pos:line="35" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><name pos:line="36" pos:column="11">status<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">!=<pos:position pos:line="36" pos:column="20"/></operator> <name pos:line="36" pos:column="21">MONGO_OK<pos:position pos:line="36" pos:column="29"/></name></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30"> <block pos:line="36" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">WARNING<pos:position pos:line="37" pos:column="16"/></name> <argument_list pos:line="37" pos:column="17">(<argument><expr><literal type="string" pos:line="37" pos:column="18">"write_mongodb plugin: mongo_set_op_timeout(%i) failed: %s"<pos:position pos:line="37" pos:column="77"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="38" pos:column="13">node<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">timeout<pos:position pos:line="38" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="28">node<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">conn<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">errstr<pos:position pos:line="38" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>
      }<pos:position pos:line="39" pos:column="8"/></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="43" pos:column="3">/* Assert if the connection has been established */</comment>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">assert<pos:position pos:line="44" pos:column="9"/></name> <argument_list pos:line="44" pos:column="10">(<argument><expr><call><name pos:line="44" pos:column="11">mongo_is_connected<pos:position pos:line="44" pos:column="29"/></name> <argument_list pos:line="44" pos:column="30">(<argument><expr><name><name pos:line="44" pos:column="31">node<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">-&gt;<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="37">conn<pos:position pos:line="44" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name pos:line="46" pos:column="3">status<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">=<pos:position pos:line="46" pos:column="11"/></operator> <call><name pos:line="46" pos:column="12">mongo_insert<pos:position pos:line="46" pos:column="24"/></name> <argument_list pos:line="46" pos:column="25">(<argument><expr><name><name pos:line="46" pos:column="26">node<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">conn<pos:position pos:line="46" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">collection_name<pos:position pos:line="46" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="55">bson_record<pos:position pos:line="46" pos:column="66"/></name></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="68"/></expr_stmt>
  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><name pos:line="47" pos:column="6">status<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">!=<pos:position pos:line="47" pos:column="15"/></operator> <name pos:line="47" pos:column="16">MONGO_OK<pos:position pos:line="47" pos:column="24"/></name></expr>)<pos:position pos:line="47" pos:column="25"/></condition><then pos:line="47" pos:column="25">
  <block pos:line="48" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">ERROR<pos:position pos:line="49" pos:column="10"/></name> <argument_list pos:line="49" pos:column="11">( <argument><expr><literal type="string" pos:line="49" pos:column="13">"write_mongodb plugin: error inserting record: %d"<pos:position pos:line="49" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="65">node<pos:position pos:line="49" pos:column="69"/></name><operator pos:line="49" pos:column="69">-&gt;<pos:position pos:line="49" pos:column="74"/></operator><name pos:line="49" pos:column="71">conn<pos:position pos:line="49" pos:column="75"/></name><operator pos:line="49" pos:column="75">-&gt;<pos:position pos:line="49" pos:column="80"/></operator><name pos:line="49" pos:column="77">err<pos:position pos:line="49" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="82"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">node<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">-&gt;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="15">conn<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">err<pos:position pos:line="50" pos:column="24"/></name></name> <operator pos:line="50" pos:column="25">!=<pos:position pos:line="50" pos:column="27"/></operator> <name pos:line="50" pos:column="28">MONGO_BSON_INVALID<pos:position pos:line="50" pos:column="46"/></name></expr>)<pos:position pos:line="50" pos:column="47"/></condition><then pos:line="50" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="7">ERROR<pos:position pos:line="51" pos:column="12"/></name> <argument_list pos:line="51" pos:column="13">(<argument><expr><literal type="string" pos:line="51" pos:column="14">"write_mongodb plugin: %s"<pos:position pos:line="51" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="42">node<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">-&gt;<pos:position pos:line="51" pos:column="51"/></operator><name pos:line="51" pos:column="48">conn<pos:position pos:line="51" pos:column="52"/></name><operator pos:line="51" pos:column="52">-&gt;<pos:position pos:line="51" pos:column="57"/></operator><name pos:line="51" pos:column="54">errstr<pos:position pos:line="51" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="62"/></expr_stmt></block></then>
    <elseif pos:line="52" pos:column="5">else <if pos:line="52" pos:column="10">if <condition pos:line="52" pos:column="13">(<expr><name><name pos:line="52" pos:column="14">bson_record<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">err<pos:position pos:line="52" pos:column="30"/></name></name></expr>)<pos:position pos:line="52" pos:column="31"/></condition><then pos:line="52" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="7">ERROR<pos:position pos:line="53" pos:column="12"/></name> <argument_list pos:line="53" pos:column="13">(<argument><expr><literal type="string" pos:line="53" pos:column="14">"write_mongodb plugin: %s"<pos:position pos:line="53" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="42">bson_record<pos:position pos:line="53" pos:column="53"/></name><operator pos:line="53" pos:column="53">-&gt;<pos:position pos:line="53" pos:column="58"/></operator><name pos:line="53" pos:column="55">errstr<pos:position pos:line="53" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="63"/></expr_stmt></block></then></if></elseif></if>

    <comment type="block" pos:line="55" pos:column="5">/* Disconnect except on data errors. */</comment>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><operator pos:line="56" pos:column="9">(<pos:position pos:line="56" pos:column="10"/></operator><name><name pos:line="56" pos:column="10">node<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">conn<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">-&gt;<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="22">err<pos:position pos:line="56" pos:column="25"/></name></name> <operator pos:line="56" pos:column="26">!=<pos:position pos:line="56" pos:column="28"/></operator> <name pos:line="56" pos:column="29">MONGO_BSON_INVALID<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">)<pos:position pos:line="56" pos:column="48"/></operator>
        <operator pos:line="57" pos:column="9">&amp;&amp;<pos:position pos:line="57" pos:column="19"/></operator> <operator pos:line="57" pos:column="12">(<pos:position pos:line="57" pos:column="13"/></operator><name><name pos:line="57" pos:column="13">node<pos:position pos:line="57" pos:column="17"/></name><operator pos:line="57" pos:column="17">-&gt;<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="19">conn<pos:position pos:line="57" pos:column="23"/></name><operator pos:line="57" pos:column="23">-&gt;<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="25">err<pos:position pos:line="57" pos:column="28"/></name></name> <operator pos:line="57" pos:column="29">!=<pos:position pos:line="57" pos:column="31"/></operator> <name pos:line="57" pos:column="32">MONGO_BSON_NOT_FINISHED<pos:position pos:line="57" pos:column="55"/></name><operator pos:line="57" pos:column="55">)<pos:position pos:line="57" pos:column="56"/></operator></expr>)<pos:position pos:line="57" pos:column="57"/></condition><then pos:line="57" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="7">mongo_destroy<pos:position pos:line="58" pos:column="20"/></name> <argument_list pos:line="58" pos:column="21">(<argument><expr><name><name pos:line="58" pos:column="22">node<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">-&gt;<pos:position pos:line="58" pos:column="31"/></operator><name pos:line="58" pos:column="28">conn<pos:position pos:line="58" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt></block></then></if>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="61" pos:column="3">pthread_mutex_unlock<pos:position pos:line="61" pos:column="23"/></name> <argument_list pos:line="61" pos:column="24">(<argument><expr><operator pos:line="61" pos:column="25">&amp;<pos:position pos:line="61" pos:column="30"/></operator><name><name pos:line="61" pos:column="26">node<pos:position pos:line="61" pos:column="30"/></name><operator pos:line="61" pos:column="30">-&gt;<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="32">lock<pos:position pos:line="61" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="63" pos:column="3">/* free our resource as not to leak memory */</comment>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">bson_dispose<pos:position pos:line="64" pos:column="15"/></name> <argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">bson_record<pos:position pos:line="64" pos:column="28"/></name></expr></argument>)<pos:position pos:line="64" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>

  <return pos:line="66" pos:column="3">return <expr><operator pos:line="66" pos:column="10">(<pos:position pos:line="66" pos:column="11"/></operator><literal type="number" pos:line="66" pos:column="11">0<pos:position pos:line="66" pos:column="12"/></literal><operator pos:line="66" pos:column="12">)<pos:position pos:line="66" pos:column="13"/></operator></expr>;<pos:position pos:line="66" pos:column="14"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

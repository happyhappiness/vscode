<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1554_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">backup_search_for_last_avg<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">ceph_daemon<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">d<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="62">const<pos:position pos:line="1" pos:column="67"/></specifier> <name pos:line="1" pos:column="68">char<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">ds_n<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
    <for pos:line="4" pos:column="5">for<control pos:line="4" pos:column="8">(<init pos:line="4" pos:column="9">;<pos:position pos:line="4" pos:column="10"/></init> <condition><expr><name pos:line="4" pos:column="11">i<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">&lt;<pos:position pos:line="4" pos:column="17"/></operator> <name><name pos:line="4" pos:column="15">d<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">-&gt;<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="18">last_idx<pos:position pos:line="4" pos:column="26"/></name></name></expr>;<pos:position pos:line="4" pos:column="27"/></condition> <incr><expr><name pos:line="4" pos:column="28">i<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">++<pos:position pos:line="4" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="32"/></control>
    <block pos:line="5" pos:column="5">{
        <if pos:line="6" pos:column="9">if<condition pos:line="6" pos:column="11">(<expr><call><name pos:line="6" pos:column="12">strcmp<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name><name pos:line="6" pos:column="19">d<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">last_poll_data<pos:position pos:line="6" pos:column="36"/></name><index pos:line="6" pos:column="36">[<expr><name pos:line="6" pos:column="37">i<pos:position pos:line="6" pos:column="38"/></name></expr>]<pos:position pos:line="6" pos:column="39"/></index></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">ds_name<pos:position pos:line="6" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="50">ds_n<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call> <operator pos:line="6" pos:column="56">==<pos:position pos:line="6" pos:column="58"/></operator> <literal type="number" pos:line="6" pos:column="59">0<pos:position pos:line="6" pos:column="60"/></literal></expr>)<pos:position pos:line="6" pos:column="61"/></condition><then pos:line="6" pos:column="61">
        <block pos:line="7" pos:column="9">{
            <return pos:line="8" pos:column="13">return <expr><name pos:line="8" pos:column="20">i<pos:position pos:line="8" pos:column="21"/></name></expr>;<pos:position pos:line="8" pos:column="22"/></return>
        }<pos:position pos:line="9" pos:column="10"/></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></for>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

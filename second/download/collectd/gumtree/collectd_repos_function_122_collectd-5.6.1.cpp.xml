<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_122_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">vl_init<pos:position pos:line="2" pos:column="8"/></name> <parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">lt_user_data<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">loader_data<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">errors<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator> <name pos:line="6" pos:column="9">dyld_cannot_close<pos:position pos:line="6" pos:column="26"/></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27">
    <block pos:line="7" pos:column="5">{
      <if pos:line="8" pos:column="7">if <condition pos:line="8" pos:column="10">(<expr><operator pos:line="8" pos:column="11">!<pos:position pos:line="8" pos:column="12"/></operator><call><name pos:line="8" pos:column="12">_dyld_present<pos:position pos:line="8" pos:column="25"/></name> <argument_list pos:line="8" pos:column="26">()<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
	<block pos:line="9" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="10" pos:column="11">++<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">errors<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then>
      <else pos:line="12" pos:column="7">else
	<block pos:line="13" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="14" pos:column="11">(<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">void<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">)<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">_dyld_func_lookup<pos:position pos:line="14" pos:column="35"/></name> <argument_list pos:line="14" pos:column="36">(<argument><expr><literal type="string" pos:line="14" pos:column="37">"__dyld_NSAddImage"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>,
				    <argument><expr><operator pos:line="15" pos:column="37">(<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">unsigned<pos:position pos:line="15" pos:column="46"/></name> <name pos:line="15" pos:column="47">long<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">*<pos:position pos:line="15" pos:column="52"/></operator><operator pos:line="15" pos:column="52">)<pos:position pos:line="15" pos:column="53"/></operator> <operator pos:line="15" pos:column="54">&amp;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="55">lt__addimage<pos:position pos:line="15" pos:column="67"/></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="69"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="16" pos:column="11">(<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">void<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">)<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">_dyld_func_lookup<pos:position pos:line="16" pos:column="35"/></name> <argument_list pos:line="16" pos:column="36">(<argument><expr><literal type="string" pos:line="16" pos:column="37">"__dyld_NSLookupSymbolInImage"<pos:position pos:line="16" pos:column="67"/></literal></expr></argument>,
				    <argument><expr><operator pos:line="17" pos:column="37">(<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="38">unsigned<pos:position pos:line="17" pos:column="46"/></name> <name pos:line="17" pos:column="47">long<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">*<pos:position pos:line="17" pos:column="52"/></operator><operator pos:line="17" pos:column="52">)<pos:position pos:line="17" pos:column="53"/></operator><operator pos:line="17" pos:column="53">&amp;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="54">lt__image_symbol<pos:position pos:line="17" pos:column="70"/></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="18" pos:column="11">(<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">void<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">)<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">_dyld_func_lookup<pos:position pos:line="18" pos:column="35"/></name> <argument_list pos:line="18" pos:column="36">(<argument><expr><literal type="string" pos:line="18" pos:column="37">"__dyld_NSIsSymbolNameDefinedInImage"<pos:position pos:line="18" pos:column="74"/></literal></expr></argument>,
				    <argument><expr><operator pos:line="19" pos:column="37">(<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">unsigned<pos:position pos:line="19" pos:column="46"/></name> <name pos:line="19" pos:column="47">long<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">*<pos:position pos:line="19" pos:column="52"/></operator><operator pos:line="19" pos:column="52">)<pos:position pos:line="19" pos:column="53"/></operator> <operator pos:line="19" pos:column="54">&amp;<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="55">lt__image_symbol_p<pos:position pos:line="19" pos:column="73"/></name></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="75"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="20" pos:column="11">(<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">void<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">)<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">_dyld_func_lookup<pos:position pos:line="20" pos:column="35"/></name> <argument_list pos:line="20" pos:column="36">(<argument><expr><literal type="string" pos:line="20" pos:column="37">"__dyld_NSMakePrivateModulePublic"<pos:position pos:line="20" pos:column="71"/></literal></expr></argument>,
				    <argument><expr><operator pos:line="21" pos:column="37">(<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="38">unsigned<pos:position pos:line="21" pos:column="46"/></name> <name pos:line="21" pos:column="47">long<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">*<pos:position pos:line="21" pos:column="52"/></operator><operator pos:line="21" pos:column="52">)<pos:position pos:line="21" pos:column="53"/></operator> <operator pos:line="21" pos:column="54">&amp;<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="55">lt__module_export<pos:position pos:line="21" pos:column="72"/></name></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="74"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="22" pos:column="11">dyld_cannot_close<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <call><name pos:line="22" pos:column="31">lt_dladderror<pos:position pos:line="22" pos:column="44"/></name> <argument_list pos:line="22" pos:column="45">(<argument><expr><literal type="string" pos:line="22" pos:column="46">"can't close a dylib"<pos:position pos:line="22" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></else></if>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

  <return pos:line="26" pos:column="3">return <expr><name pos:line="26" pos:column="10">errors<pos:position pos:line="26" pos:column="16"/></name></expr>;<pos:position pos:line="26" pos:column="17"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

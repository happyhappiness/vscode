<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1787_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ntpd_read<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <block pos:line="1" pos:column="28">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">info_kernel<pos:position pos:line="2" pos:column="21"/></name></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">ik<pos:position pos:line="2" pos:column="25"/></name></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ik_num<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">ik_size<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">info_peer_summary<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">ps<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">ps_num<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">ps_size<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">gauge_t<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">offset_loop<pos:position pos:line="10" pos:column="22"/></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">gauge_t<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">freq_loop<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">gauge_t<pos:position pos:line="12" pos:column="10"/></name></type> <name pos:line="12" pos:column="11">offset_error<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name></decl>;<pos:position pos:line="14" pos:column="14"/></decl_stmt>

  <comment type="block" pos:line="16" pos:column="3">/* On Linux, if the STA_NANO bit is set in ik-&gt;status, then ik-&gt;offset
   * is is nanoseconds, otherwise it's microseconds. */</comment>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">double<pos:position pos:line="18" pos:column="9"/></name></type> <name pos:line="18" pos:column="10">scale_loop<pos:position pos:line="18" pos:column="20"/></name> <init pos:line="18" pos:column="21">= <expr><literal type="number" pos:line="18" pos:column="23">1e-6<pos:position pos:line="18" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">double<pos:position pos:line="19" pos:column="9"/></name></type> <name pos:line="19" pos:column="10">scale_error<pos:position pos:line="19" pos:column="21"/></name> <init pos:line="19" pos:column="22">= <expr><literal type="number" pos:line="19" pos:column="24">1e-6<pos:position pos:line="19" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="29"/></decl_stmt>

  <expr_stmt><expr><name pos:line="21" pos:column="3">ik<pos:position pos:line="21" pos:column="5"/></name> <operator pos:line="21" pos:column="6">=<pos:position pos:line="21" pos:column="7"/></operator> <name pos:line="21" pos:column="8">NULL<pos:position pos:line="21" pos:column="12"/></name></expr>;<pos:position pos:line="21" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">ik_num<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <literal type="number" pos:line="22" pos:column="12">0<pos:position pos:line="22" pos:column="13"/></literal></expr>;<pos:position pos:line="22" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">ik_size<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <literal type="number" pos:line="23" pos:column="13">0<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><name pos:line="25" pos:column="3">status<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">ntpd_do_query<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">REQ_GET_KERNEL<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="42">0<pos:position pos:line="25" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="45">0<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">NULL<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <comment type="block" pos:line="25" pos:column="54">/* request data */</comment>
                         <argument><expr><operator pos:line="26" pos:column="26">&amp;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="27">ik_num<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="35">&amp;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="36">ik_size<pos:position pos:line="26" pos:column="43"/></name></expr></argument>,
                         <argument><expr><operator pos:line="27" pos:column="26">(<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">char<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">*<pos:position pos:line="27" pos:column="33"/></operator><operator pos:line="27" pos:column="33">*<pos:position pos:line="27" pos:column="34"/></operator><operator pos:line="27" pos:column="34">)<pos:position pos:line="27" pos:column="35"/></operator><operator pos:line="27" pos:column="35">(<pos:position pos:line="27" pos:column="36"/></operator><operator pos:line="27" pos:column="36">(<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="37">void<pos:position pos:line="27" pos:column="41"/></name> <operator pos:line="27" pos:column="42">*<pos:position pos:line="27" pos:column="43"/></operator><operator pos:line="27" pos:column="43">)<pos:position pos:line="27" pos:column="44"/></operator><operator pos:line="27" pos:column="44">&amp;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="45">ik<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">)<pos:position pos:line="27" pos:column="48"/></operator></expr></argument>, <comment type="block" pos:line="27" pos:column="50">/* response data */</comment>
                         <argument><expr><sizeof pos:line="28" pos:column="26">sizeof<argument_list pos:line="28" pos:column="32">(<argument><expr pos:line="28" pos:column="33">struct <name pos:line="28" pos:column="40">info_kernel<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">!=<pos:position pos:line="29" pos:column="16"/></operator> <literal type="number" pos:line="29" pos:column="17">0<pos:position pos:line="29" pos:column="18"/></literal></expr>)<pos:position pos:line="29" pos:column="19"/></condition><then pos:line="29" pos:column="19"> <block pos:line="29" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ERROR<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="string" pos:line="30" pos:column="11">"ntpd plugin: ntpd_do_query (REQ_GET_KERNEL) failed with status %i"<pos:position pos:line="30" pos:column="78"/></literal></expr></argument>,
          <argument><expr><name pos:line="31" pos:column="11">status<pos:position pos:line="31" pos:column="17"/></name></expr></argument>)<pos:position pos:line="31" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="19"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">status<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">)<pos:position pos:line="32" pos:column="20"/></operator></expr>;<pos:position pos:line="32" pos:column="21"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then> <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><operator pos:line="33" pos:column="14">(<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">ik<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">==<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="21">NULL<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">)<pos:position pos:line="33" pos:column="26"/></operator> <operator pos:line="33" pos:column="27">||<pos:position pos:line="33" pos:column="29"/></operator> <operator pos:line="33" pos:column="30">(<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="31">ik_num<pos:position pos:line="33" pos:column="37"/></name> <operator pos:line="33" pos:column="38">==<pos:position pos:line="33" pos:column="40"/></operator> <literal type="number" pos:line="33" pos:column="41">0<pos:position pos:line="33" pos:column="42"/></literal><operator pos:line="33" pos:column="42">)<pos:position pos:line="33" pos:column="43"/></operator> <operator pos:line="33" pos:column="44">||<pos:position pos:line="33" pos:column="46"/></operator> <operator pos:line="33" pos:column="47">(<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="48">ik_size<pos:position pos:line="33" pos:column="55"/></name> <operator pos:line="33" pos:column="56">==<pos:position pos:line="33" pos:column="58"/></operator> <literal type="number" pos:line="33" pos:column="59">0<pos:position pos:line="33" pos:column="60"/></literal><operator pos:line="33" pos:column="60">)<pos:position pos:line="33" pos:column="61"/></operator></expr>)<pos:position pos:line="33" pos:column="62"/></condition><then pos:line="33" pos:column="62"> <block pos:line="33" pos:column="63">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><literal type="string" pos:line="34" pos:column="11">"ntpd plugin: ntpd_do_query returned unexpected data. "<pos:position pos:line="34" pos:column="66"/></literal>
          <literal type="string" pos:line="35" pos:column="11">"(ik = %p; ik_num = %i; ik_size = %i)"<pos:position pos:line="35" pos:column="49"/></literal></expr></argument>,
          <argument><expr><operator pos:line="36" pos:column="11">(<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">void<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">*<pos:position pos:line="36" pos:column="18"/></operator><operator pos:line="36" pos:column="18">)<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">ik<pos:position pos:line="36" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="23">ik_num<pos:position pos:line="36" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="31">ik_size<pos:position pos:line="36" pos:column="38"/></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><operator pos:line="37" pos:column="13">-<pos:position pos:line="37" pos:column="14"/></operator><literal type="number" pos:line="37" pos:column="14">1<pos:position pos:line="37" pos:column="15"/></literal><operator pos:line="37" pos:column="15">)<pos:position pos:line="37" pos:column="16"/></operator></expr>;<pos:position pos:line="37" pos:column="17"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if></elseif></if>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><call><name pos:line="40" pos:column="7">ntohs<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><name><name pos:line="40" pos:column="13">ik<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">-&gt;<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="17">status<pos:position pos:line="40" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call> <operator pos:line="40" pos:column="25">&amp;<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="27">STA_NANO<pos:position pos:line="40" pos:column="35"/></name></expr>)<pos:position pos:line="40" pos:column="36"/></condition><then pos:line="40" pos:column="36"> <block pos:line="40" pos:column="37">{
    <expr_stmt><expr><name pos:line="41" pos:column="5">scale_loop<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <literal type="number" pos:line="41" pos:column="18">1e-9<pos:position pos:line="41" pos:column="22"/></literal></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">scale_error<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <literal type="number" pos:line="42" pos:column="19">1e-9<pos:position pos:line="42" pos:column="23"/></literal></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="45" pos:column="3">/* kerninfo -&gt; estimated error */</comment>
  <expr_stmt><expr><name pos:line="46" pos:column="3">offset_loop<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <name pos:line="46" pos:column="17">scale_loop<pos:position pos:line="46" pos:column="27"/></name> <operator pos:line="46" pos:column="28">*<pos:position pos:line="46" pos:column="29"/></operator> <operator pos:line="46" pos:column="30">(<pos:position pos:line="46" pos:column="31"/></operator><operator pos:line="46" pos:column="31">(<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="32">gauge_t<pos:position pos:line="46" pos:column="39"/></name><operator pos:line="46" pos:column="39">)<pos:position pos:line="46" pos:column="40"/></operator><call><name pos:line="46" pos:column="40">ntohl<pos:position pos:line="46" pos:column="45"/></name><argument_list pos:line="46" pos:column="45">(<argument><expr><name><name pos:line="46" pos:column="46">ik<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">-&gt;<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="50">offset<pos:position pos:line="46" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="57"/></argument_list></call><operator pos:line="46" pos:column="57">)<pos:position pos:line="46" pos:column="58"/></operator></expr>;<pos:position pos:line="46" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name pos:line="47" pos:column="3">freq_loop<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <call><name pos:line="47" pos:column="15">ntpd_read_fp<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name><name pos:line="47" pos:column="28">ik<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">-&gt;<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="32">freq<pos:position pos:line="47" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name pos:line="48" pos:column="3">offset_error<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="18">scale_error<pos:position pos:line="48" pos:column="29"/></name> <operator pos:line="48" pos:column="30">*<pos:position pos:line="48" pos:column="31"/></operator> <operator pos:line="48" pos:column="32">(<pos:position pos:line="48" pos:column="33"/></operator><operator pos:line="48" pos:column="33">(<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="34">gauge_t<pos:position pos:line="48" pos:column="41"/></name><operator pos:line="48" pos:column="41">)<pos:position pos:line="48" pos:column="42"/></operator><call><name pos:line="48" pos:column="42">ntohl<pos:position pos:line="48" pos:column="47"/></name><argument_list pos:line="48" pos:column="47">(<argument><expr><name><name pos:line="48" pos:column="48">ik<pos:position pos:line="48" pos:column="50"/></name><operator pos:line="48" pos:column="50">-&gt;<pos:position pos:line="48" pos:column="55"/></operator><name pos:line="48" pos:column="52">esterror<pos:position pos:line="48" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="61"/></argument_list></call><operator pos:line="48" pos:column="61">)<pos:position pos:line="48" pos:column="62"/></operator></expr>;<pos:position pos:line="48" pos:column="63"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="50" pos:column="3">DEBUG<pos:position pos:line="50" pos:column="8"/></name><argument_list pos:line="50" pos:column="8">(<argument><expr><literal type="string" pos:line="50" pos:column="9">"info_kernel:\n"<pos:position pos:line="50" pos:column="25"/></literal>
        <literal type="string" pos:line="51" pos:column="9">"  pll offset    = %.8g\n"<pos:position pos:line="51" pos:column="35"/></literal>
        <literal type="string" pos:line="52" pos:column="9">"  pll frequency = %.8g\n"<pos:position pos:line="52" pos:column="35"/></literal> <comment type="block" pos:line="52" pos:column="36">/* drift compensation */</comment>
        <literal type="string" pos:line="53" pos:column="9">"  est error     = %.8g\n"<pos:position pos:line="53" pos:column="35"/></literal></expr></argument>,
        <argument><expr><name pos:line="54" pos:column="9">offset_loop<pos:position pos:line="54" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="22">freq_loop<pos:position pos:line="54" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="33">offset_error<pos:position pos:line="54" pos:column="45"/></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">ntpd_submit<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><literal type="string" pos:line="56" pos:column="15">"frequency_offset"<pos:position pos:line="56" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="35">"loop"<pos:position pos:line="56" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="43">freq_loop<pos:position pos:line="56" pos:column="52"/></name></expr></argument>)<pos:position pos:line="56" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">ntpd_submit<pos:position pos:line="57" pos:column="14"/></name><argument_list pos:line="57" pos:column="14">(<argument><expr><literal type="string" pos:line="57" pos:column="15">"time_offset"<pos:position pos:line="57" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="30">"loop"<pos:position pos:line="57" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="38">offset_loop<pos:position pos:line="57" pos:column="49"/></name></expr></argument>)<pos:position pos:line="57" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">ntpd_submit<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><literal type="string" pos:line="58" pos:column="15">"time_offset"<pos:position pos:line="58" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="30">"error"<pos:position pos:line="58" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="39">offset_error<pos:position pos:line="58" pos:column="51"/></name></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="53"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="60" pos:column="3">free<pos:position pos:line="60" pos:column="7"/></name><argument_list pos:line="60" pos:column="7">(<argument><expr><name pos:line="60" pos:column="8">ik<pos:position pos:line="60" pos:column="10"/></name></expr></argument>)<pos:position pos:line="60" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><name pos:line="61" pos:column="3">ik<pos:position pos:line="61" pos:column="5"/></name> <operator pos:line="61" pos:column="6">=<pos:position pos:line="61" pos:column="7"/></operator> <name pos:line="61" pos:column="8">NULL<pos:position pos:line="61" pos:column="12"/></name></expr>;<pos:position pos:line="61" pos:column="13"/></expr_stmt>

  <expr_stmt><expr><name pos:line="63" pos:column="3">status<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">=<pos:position pos:line="63" pos:column="11"/></operator> <call><name pos:line="63" pos:column="12">ntpd_do_query<pos:position pos:line="63" pos:column="25"/></name><argument_list pos:line="63" pos:column="25">(<argument><expr><name pos:line="63" pos:column="26">REQ_PEER_LIST_SUM<pos:position pos:line="63" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="45">0<pos:position pos:line="63" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="48">0<pos:position pos:line="63" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="51">NULL<pos:position pos:line="63" pos:column="55"/></name></expr></argument>, <comment type="block" pos:line="63" pos:column="57">/* request data */</comment>
                         <argument><expr><operator pos:line="64" pos:column="26">&amp;<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="27">ps_num<pos:position pos:line="64" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="35">&amp;<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="36">ps_size<pos:position pos:line="64" pos:column="43"/></name></expr></argument>,
                         <argument><expr><operator pos:line="65" pos:column="26">(<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="27">char<pos:position pos:line="65" pos:column="31"/></name> <operator pos:line="65" pos:column="32">*<pos:position pos:line="65" pos:column="33"/></operator><operator pos:line="65" pos:column="33">*<pos:position pos:line="65" pos:column="34"/></operator><operator pos:line="65" pos:column="34">)<pos:position pos:line="65" pos:column="35"/></operator><operator pos:line="65" pos:column="35">(<pos:position pos:line="65" pos:column="36"/></operator><operator pos:line="65" pos:column="36">(<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="37">void<pos:position pos:line="65" pos:column="41"/></name> <operator pos:line="65" pos:column="42">*<pos:position pos:line="65" pos:column="43"/></operator><operator pos:line="65" pos:column="43">)<pos:position pos:line="65" pos:column="44"/></operator><operator pos:line="65" pos:column="44">&amp;<pos:position pos:line="65" pos:column="49"/></operator><name pos:line="65" pos:column="45">ps<pos:position pos:line="65" pos:column="47"/></name><operator pos:line="65" pos:column="47">)<pos:position pos:line="65" pos:column="48"/></operator></expr></argument>, <comment type="block" pos:line="65" pos:column="50">/* response data */</comment>
                         <argument><expr><sizeof pos:line="66" pos:column="26">sizeof<argument_list pos:line="66" pos:column="32">(<argument><expr pos:line="66" pos:column="33">struct <name pos:line="66" pos:column="40">info_peer_summary<pos:position pos:line="66" pos:column="57"/></name></expr></argument>)<pos:position pos:line="66" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="60"/></expr_stmt>
  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><name pos:line="67" pos:column="7">status<pos:position pos:line="67" pos:column="13"/></name> <operator pos:line="67" pos:column="14">!=<pos:position pos:line="67" pos:column="16"/></operator> <literal type="number" pos:line="67" pos:column="17">0<pos:position pos:line="67" pos:column="18"/></literal></expr>)<pos:position pos:line="67" pos:column="19"/></condition><then pos:line="67" pos:column="19"> <block pos:line="67" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">ERROR<pos:position pos:line="68" pos:column="10"/></name><argument_list pos:line="68" pos:column="10">(
        <argument><expr><literal type="string" pos:line="69" pos:column="9">"ntpd plugin: ntpd_do_query (REQ_PEER_LIST_SUM) failed with status %i"<pos:position pos:line="69" pos:column="79"/></literal></expr></argument>,
        <argument><expr><name pos:line="70" pos:column="9">status<pos:position pos:line="70" pos:column="15"/></name></expr></argument>)<pos:position pos:line="70" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="17"/></expr_stmt>
    <return pos:line="71" pos:column="5">return <expr><operator pos:line="71" pos:column="12">(<pos:position pos:line="71" pos:column="13"/></operator><name pos:line="71" pos:column="13">status<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">)<pos:position pos:line="71" pos:column="20"/></operator></expr>;<pos:position pos:line="71" pos:column="21"/></return>
  }<pos:position pos:line="72" pos:column="4"/></block></then> <elseif pos:line="72" pos:column="5">else <if pos:line="72" pos:column="10">if <condition pos:line="72" pos:column="13">(<expr><operator pos:line="72" pos:column="14">(<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">ps<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">==<pos:position pos:line="72" pos:column="20"/></operator> <name pos:line="72" pos:column="21">NULL<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">)<pos:position pos:line="72" pos:column="26"/></operator> <operator pos:line="72" pos:column="27">||<pos:position pos:line="72" pos:column="29"/></operator> <operator pos:line="72" pos:column="30">(<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="31">ps_num<pos:position pos:line="72" pos:column="37"/></name> <operator pos:line="72" pos:column="38">==<pos:position pos:line="72" pos:column="40"/></operator> <literal type="number" pos:line="72" pos:column="41">0<pos:position pos:line="72" pos:column="42"/></literal><operator pos:line="72" pos:column="42">)<pos:position pos:line="72" pos:column="43"/></operator> <operator pos:line="72" pos:column="44">||<pos:position pos:line="72" pos:column="46"/></operator> <operator pos:line="72" pos:column="47">(<pos:position pos:line="72" pos:column="48"/></operator><name pos:line="72" pos:column="48">ps_size<pos:position pos:line="72" pos:column="55"/></name> <operator pos:line="72" pos:column="56">==<pos:position pos:line="72" pos:column="58"/></operator> <literal type="number" pos:line="72" pos:column="59">0<pos:position pos:line="72" pos:column="60"/></literal><operator pos:line="72" pos:column="60">)<pos:position pos:line="72" pos:column="61"/></operator></expr>)<pos:position pos:line="72" pos:column="62"/></condition><then pos:line="72" pos:column="62"> <block pos:line="72" pos:column="63">{
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">ERROR<pos:position pos:line="73" pos:column="10"/></name><argument_list pos:line="73" pos:column="10">(<argument><expr><literal type="string" pos:line="73" pos:column="11">"ntpd plugin: ntpd_do_query returned unexpected data. "<pos:position pos:line="73" pos:column="66"/></literal>
          <literal type="string" pos:line="74" pos:column="11">"(ps = %p; ps_num = %i; ps_size = %i)"<pos:position pos:line="74" pos:column="49"/></literal></expr></argument>,
          <argument><expr><operator pos:line="75" pos:column="11">(<pos:position pos:line="75" pos:column="12"/></operator><name pos:line="75" pos:column="12">void<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">*<pos:position pos:line="75" pos:column="18"/></operator><operator pos:line="75" pos:column="18">)<pos:position pos:line="75" pos:column="19"/></operator><name pos:line="75" pos:column="19">ps<pos:position pos:line="75" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="23">ps_num<pos:position pos:line="75" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="31">ps_size<pos:position pos:line="75" pos:column="38"/></name></expr></argument>)<pos:position pos:line="75" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="40"/></expr_stmt>
    <return pos:line="76" pos:column="5">return <expr><operator pos:line="76" pos:column="12">(<pos:position pos:line="76" pos:column="13"/></operator><operator pos:line="76" pos:column="13">-<pos:position pos:line="76" pos:column="14"/></operator><literal type="number" pos:line="76" pos:column="14">1<pos:position pos:line="76" pos:column="15"/></literal><operator pos:line="76" pos:column="15">)<pos:position pos:line="76" pos:column="16"/></operator></expr>;<pos:position pos:line="76" pos:column="17"/></return>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if></elseif></if>

  <for pos:line="79" pos:column="3">for <control pos:line="79" pos:column="7">(<init><decl><type><name pos:line="79" pos:column="8">int<pos:position pos:line="79" pos:column="11"/></name></type> <name pos:line="79" pos:column="12">i<pos:position pos:line="79" pos:column="13"/></name> <init pos:line="79" pos:column="14">= <expr><literal type="number" pos:line="79" pos:column="16">0<pos:position pos:line="79" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="79" pos:column="18"/></init> <condition><expr><name pos:line="79" pos:column="19">i<pos:position pos:line="79" pos:column="20"/></name> <operator pos:line="79" pos:column="21">&lt;<pos:position pos:line="79" pos:column="25"/></operator> <name pos:line="79" pos:column="23">ps_num<pos:position pos:line="79" pos:column="29"/></name></expr>;<pos:position pos:line="79" pos:column="30"/></condition> <incr><expr><name pos:line="79" pos:column="31">i<pos:position pos:line="79" pos:column="32"/></name><operator pos:line="79" pos:column="32">++<pos:position pos:line="79" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="79" pos:column="35"/></control> <block pos:line="79" pos:column="36">{
    <decl_stmt><decl><type><name><name pos:line="80" pos:column="5">struct<pos:position pos:line="80" pos:column="11"/></name> <name pos:line="80" pos:column="12">info_peer_summary<pos:position pos:line="80" pos:column="29"/></name></name> <modifier pos:line="80" pos:column="30">*<pos:position pos:line="80" pos:column="31"/></modifier></type><name pos:line="80" pos:column="31">ptr<pos:position pos:line="80" pos:column="34"/></name></decl>;<pos:position pos:line="80" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="81" pos:column="5">double<pos:position pos:line="81" pos:column="11"/></name></type> <name pos:line="81" pos:column="12">offset<pos:position pos:line="81" pos:column="18"/></name></decl>;<pos:position pos:line="81" pos:column="19"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="83" pos:column="5">char<pos:position pos:line="83" pos:column="9"/></name></type> <name><name pos:line="83" pos:column="10">peername<pos:position pos:line="83" pos:column="18"/></name><index pos:line="83" pos:column="18">[<expr><name pos:line="83" pos:column="19">NI_MAXHOST<pos:position pos:line="83" pos:column="29"/></name></expr>]<pos:position pos:line="83" pos:column="30"/></index></name></decl>;<pos:position pos:line="83" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="84" pos:column="5">uint32_t<pos:position pos:line="84" pos:column="13"/></name></type> <name pos:line="84" pos:column="14">refclock_id<pos:position pos:line="84" pos:column="25"/></name></decl>;<pos:position pos:line="84" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="86" pos:column="5">ptr<pos:position pos:line="86" pos:column="8"/></name> <operator pos:line="86" pos:column="9">=<pos:position pos:line="86" pos:column="10"/></operator> <name pos:line="86" pos:column="11">ps<pos:position pos:line="86" pos:column="13"/></name> <operator pos:line="86" pos:column="14">+<pos:position pos:line="86" pos:column="15"/></operator> <name pos:line="86" pos:column="16">i<pos:position pos:line="86" pos:column="17"/></name></expr>;<pos:position pos:line="86" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="88" pos:column="5">status<pos:position pos:line="88" pos:column="11"/></name> <operator pos:line="88" pos:column="12">=<pos:position pos:line="88" pos:column="13"/></operator> <call><name pos:line="88" pos:column="14">ntpd_get_name<pos:position pos:line="88" pos:column="27"/></name><argument_list pos:line="88" pos:column="27">(<argument><expr><name pos:line="88" pos:column="28">peername<pos:position pos:line="88" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="88" pos:column="38">sizeof<argument_list pos:line="88" pos:column="44">(<argument><expr><name pos:line="88" pos:column="45">peername<pos:position pos:line="88" pos:column="53"/></name></expr></argument>)<pos:position pos:line="88" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="88" pos:column="56">ptr<pos:position pos:line="88" pos:column="59"/></name></expr></argument>)<pos:position pos:line="88" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="61"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">status<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">!=<pos:position pos:line="89" pos:column="18"/></operator> <literal type="number" pos:line="89" pos:column="19">0<pos:position pos:line="89" pos:column="20"/></literal></expr>)<pos:position pos:line="89" pos:column="21"/></condition><then pos:line="89" pos:column="21"> <block pos:line="89" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="90" pos:column="7">ERROR<pos:position pos:line="90" pos:column="12"/></name><argument_list pos:line="90" pos:column="12">(<argument><expr><literal type="string" pos:line="90" pos:column="13">"ntpd plugin: Determining name of peer failed."<pos:position pos:line="90" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="62"/></expr_stmt>
      <continue pos:line="91" pos:column="7">continue;<pos:position pos:line="91" pos:column="16"/></continue>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="94" pos:column="5">refclock_id<pos:position pos:line="94" pos:column="16"/></name> <operator pos:line="94" pos:column="17">=<pos:position pos:line="94" pos:column="18"/></operator> <call><name pos:line="94" pos:column="19">ntpd_get_refclock_id<pos:position pos:line="94" pos:column="39"/></name><argument_list pos:line="94" pos:column="39">(<argument><expr><name pos:line="94" pos:column="40">ptr<pos:position pos:line="94" pos:column="43"/></name></expr></argument>)<pos:position pos:line="94" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="96" pos:column="5">/* Convert the `long floating point' offset value to double */</comment>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">M_LFPTOD<pos:position pos:line="97" pos:column="13"/></name><argument_list pos:line="97" pos:column="13">(<argument><expr><call><name pos:line="97" pos:column="14">ntohl<pos:position pos:line="97" pos:column="19"/></name><argument_list pos:line="97" pos:column="19">(<argument><expr><name><name pos:line="97" pos:column="20">ptr<pos:position pos:line="97" pos:column="23"/></name><operator pos:line="97" pos:column="23">-&gt;<pos:position pos:line="97" pos:column="28"/></operator><name pos:line="97" pos:column="25">offset_int<pos:position pos:line="97" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="97" pos:column="38">ntohl<pos:position pos:line="97" pos:column="43"/></name><argument_list pos:line="97" pos:column="43">(<argument><expr><name><name pos:line="97" pos:column="44">ptr<pos:position pos:line="97" pos:column="47"/></name><operator pos:line="97" pos:column="47">-&gt;<pos:position pos:line="97" pos:column="52"/></operator><name pos:line="97" pos:column="49">offset_frc<pos:position pos:line="97" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="97" pos:column="62">offset<pos:position pos:line="97" pos:column="68"/></name></expr></argument>)<pos:position pos:line="97" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="99" pos:column="5">DEBUG<pos:position pos:line="99" pos:column="10"/></name><argument_list pos:line="99" pos:column="10">(<argument><expr><literal type="string" pos:line="99" pos:column="11">"peer %i:\n"<pos:position pos:line="99" pos:column="23"/></literal>
          <literal type="string" pos:line="100" pos:column="11">"  peername   = %s\n"<pos:position pos:line="100" pos:column="32"/></literal>
          <literal type="string" pos:line="101" pos:column="11">"  srcadr     = 0x%08x\n"<pos:position pos:line="101" pos:column="36"/></literal>
          <literal type="string" pos:line="102" pos:column="11">"  reach      = 0%03o\n"<pos:position pos:line="102" pos:column="35"/></literal>
          <literal type="string" pos:line="103" pos:column="11">"  delay      = %f\n"<pos:position pos:line="103" pos:column="32"/></literal>
          <literal type="string" pos:line="104" pos:column="11">"  offset_int = %i\n"<pos:position pos:line="104" pos:column="32"/></literal>
          <literal type="string" pos:line="105" pos:column="11">"  offset_frc = %i\n"<pos:position pos:line="105" pos:column="32"/></literal>
          <literal type="string" pos:line="106" pos:column="11">"  offset     = %f\n"<pos:position pos:line="106" pos:column="32"/></literal>
          <literal type="string" pos:line="107" pos:column="11">"  dispersion = %f\n"<pos:position pos:line="107" pos:column="32"/></literal></expr></argument>,
          <argument><expr><name pos:line="108" pos:column="11">i<pos:position pos:line="108" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="14">peername<pos:position pos:line="108" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="108" pos:column="24">ntohl<pos:position pos:line="108" pos:column="29"/></name><argument_list pos:line="108" pos:column="29">(<argument><expr><name><name pos:line="108" pos:column="30">ptr<pos:position pos:line="108" pos:column="33"/></name><operator pos:line="108" pos:column="33">-&gt;<pos:position pos:line="108" pos:column="38"/></operator><name pos:line="108" pos:column="35">srcadr<pos:position pos:line="108" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="44">ptr<pos:position pos:line="108" pos:column="47"/></name><operator pos:line="108" pos:column="47">-&gt;<pos:position pos:line="108" pos:column="52"/></operator><name pos:line="108" pos:column="49">reach<pos:position pos:line="108" pos:column="54"/></name></name></expr></argument>, <argument><expr><call><name pos:line="108" pos:column="56">ntpd_read_fp<pos:position pos:line="108" pos:column="68"/></name><argument_list pos:line="108" pos:column="68">(<argument><expr><name><name pos:line="108" pos:column="69">ptr<pos:position pos:line="108" pos:column="72"/></name><operator pos:line="108" pos:column="72">-&gt;<pos:position pos:line="108" pos:column="77"/></operator><name pos:line="108" pos:column="74">delay<pos:position pos:line="108" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="80"/></argument_list></call></expr></argument>,
          <argument><expr><call><name pos:line="109" pos:column="11">ntohl<pos:position pos:line="109" pos:column="16"/></name><argument_list pos:line="109" pos:column="16">(<argument><expr><name><name pos:line="109" pos:column="17">ptr<pos:position pos:line="109" pos:column="20"/></name><operator pos:line="109" pos:column="20">-&gt;<pos:position pos:line="109" pos:column="25"/></operator><name pos:line="109" pos:column="22">offset_int<pos:position pos:line="109" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="109" pos:column="35">ntohl<pos:position pos:line="109" pos:column="40"/></name><argument_list pos:line="109" pos:column="40">(<argument><expr><name><name pos:line="109" pos:column="41">ptr<pos:position pos:line="109" pos:column="44"/></name><operator pos:line="109" pos:column="44">-&gt;<pos:position pos:line="109" pos:column="49"/></operator><name pos:line="109" pos:column="46">offset_frc<pos:position pos:line="109" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="109" pos:column="59">offset<pos:position pos:line="109" pos:column="65"/></name></expr></argument>,
          <argument><expr><call><name pos:line="110" pos:column="11">ntpd_read_fp<pos:position pos:line="110" pos:column="23"/></name><argument_list pos:line="110" pos:column="23">(<argument><expr><name><name pos:line="110" pos:column="24">ptr<pos:position pos:line="110" pos:column="27"/></name><operator pos:line="110" pos:column="27">-&gt;<pos:position pos:line="110" pos:column="32"/></operator><name pos:line="110" pos:column="29">dispersion<pos:position pos:line="110" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="110" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="42"/></expr_stmt>

    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name pos:line="112" pos:column="9">refclock_id<pos:position pos:line="112" pos:column="20"/></name> <operator pos:line="112" pos:column="21">!=<pos:position pos:line="112" pos:column="23"/></operator>
        <literal type="number" pos:line="113" pos:column="9">1<pos:position pos:line="113" pos:column="10"/></literal></expr>)<pos:position pos:line="113" pos:column="11"/></condition><then pos:line="113" pos:column="11"> <comment type="block" pos:line="113" pos:column="12">/* not the system clock (offset will always be zero.. */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="7">ntpd_submit_reach<pos:position pos:line="114" pos:column="24"/></name><argument_list pos:line="114" pos:column="24">(<argument><expr><literal type="string" pos:line="114" pos:column="25">"time_offset"<pos:position pos:line="114" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="40">peername<pos:position pos:line="114" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="50">ptr<pos:position pos:line="114" pos:column="53"/></name><operator pos:line="114" pos:column="53">-&gt;<pos:position pos:line="114" pos:column="58"/></operator><name pos:line="114" pos:column="55">reach<pos:position pos:line="114" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="62">offset<pos:position pos:line="114" pos:column="68"/></name></expr></argument>)<pos:position pos:line="114" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="70"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">ntpd_submit_reach<pos:position pos:line="115" pos:column="22"/></name><argument_list pos:line="115" pos:column="22">(<argument><expr><literal type="string" pos:line="115" pos:column="23">"time_dispersion"<pos:position pos:line="115" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="115" pos:column="42">peername<pos:position pos:line="115" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="52">ptr<pos:position pos:line="115" pos:column="55"/></name><operator pos:line="115" pos:column="55">-&gt;<pos:position pos:line="115" pos:column="60"/></operator><name pos:line="115" pos:column="57">reach<pos:position pos:line="115" pos:column="62"/></name></name></expr></argument>,
                      <argument><expr><call><name pos:line="116" pos:column="23">ntpd_read_fp<pos:position pos:line="116" pos:column="35"/></name><argument_list pos:line="116" pos:column="35">(<argument><expr><name><name pos:line="116" pos:column="36">ptr<pos:position pos:line="116" pos:column="39"/></name><operator pos:line="116" pos:column="39">-&gt;<pos:position pos:line="116" pos:column="44"/></operator><name pos:line="116" pos:column="41">dispersion<pos:position pos:line="116" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="54"/></expr_stmt>
    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><name pos:line="117" pos:column="9">refclock_id<pos:position pos:line="117" pos:column="20"/></name> <operator pos:line="117" pos:column="21">==<pos:position pos:line="117" pos:column="23"/></operator> <literal type="number" pos:line="117" pos:column="24">0<pos:position pos:line="117" pos:column="25"/></literal></expr>)<pos:position pos:line="117" pos:column="26"/></condition><then pos:line="117" pos:column="26"> <comment type="block" pos:line="117" pos:column="27">/* not a reference clock */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="7">ntpd_submit_reach<pos:position pos:line="118" pos:column="24"/></name><argument_list pos:line="118" pos:column="24">(<argument><expr><literal type="string" pos:line="118" pos:column="25">"delay"<pos:position pos:line="118" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="34">peername<pos:position pos:line="118" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="44">ptr<pos:position pos:line="118" pos:column="47"/></name><operator pos:line="118" pos:column="47">-&gt;<pos:position pos:line="118" pos:column="52"/></operator><name pos:line="118" pos:column="49">reach<pos:position pos:line="118" pos:column="54"/></name></name></expr></argument>,
                        <argument><expr><call><name pos:line="119" pos:column="25">ntpd_read_fp<pos:position pos:line="119" pos:column="37"/></name><argument_list pos:line="119" pos:column="37">(<argument><expr><name><name pos:line="119" pos:column="38">ptr<pos:position pos:line="119" pos:column="41"/></name><operator pos:line="119" pos:column="41">-&gt;<pos:position pos:line="119" pos:column="46"/></operator><name pos:line="119" pos:column="43">delay<pos:position pos:line="119" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="119" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="51"/></expr_stmt></block></then></if>
  }<pos:position pos:line="120" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="122" pos:column="3">free<pos:position pos:line="122" pos:column="7"/></name><argument_list pos:line="122" pos:column="7">(<argument><expr><name pos:line="122" pos:column="8">ps<pos:position pos:line="122" pos:column="10"/></name></expr></argument>)<pos:position pos:line="122" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><name pos:line="123" pos:column="3">ps<pos:position pos:line="123" pos:column="5"/></name> <operator pos:line="123" pos:column="6">=<pos:position pos:line="123" pos:column="7"/></operator> <name pos:line="123" pos:column="8">NULL<pos:position pos:line="123" pos:column="12"/></name></expr>;<pos:position pos:line="123" pos:column="13"/></expr_stmt>

  <return pos:line="125" pos:column="3">return <expr><operator pos:line="125" pos:column="10">(<pos:position pos:line="125" pos:column="11"/></operator><literal type="number" pos:line="125" pos:column="11">0<pos:position pos:line="125" pos:column="12"/></literal><operator pos:line="125" pos:column="12">)<pos:position pos:line="125" pos:column="13"/></operator></expr>;<pos:position pos:line="125" pos:column="14"/></return>
}<pos:position pos:line="126" pos:column="2"/></block></function></unit>

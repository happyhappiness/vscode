<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_100_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lv_read<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">user_data_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">ud<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list> <block pos:line="1" pos:column="37">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">time_t<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">t<pos:position pos:line="2" pos:column="11"/></name></decl>;<pos:position pos:line="2" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">lv_read_instance<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">inst<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">NULL<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">lv_read_state<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">state<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">NULL<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">ud<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">data<pos:position pos:line="6" pos:column="15"/></name></name> <operator pos:line="6" pos:column="16">==<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">NULL<pos:position pos:line="6" pos:column="23"/></name></expr>)<pos:position pos:line="6" pos:column="24"/></condition><then pos:line="6" pos:column="24"> <block pos:line="6" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ERROR<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">PLUGIN_NAME<pos:position pos:line="7" pos:column="22"/></name> <literal type="string" pos:line="7" pos:column="23">" plugin: NULL userdata"<pos:position pos:line="7" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="49"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">-<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">inst<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <name><name pos:line="11" pos:column="10">ud<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">data<pos:position pos:line="11" pos:column="18"/></name></name></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">state<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <operator pos:line="12" pos:column="11">&amp;<pos:position pos:line="12" pos:column="16"/></operator><name><name pos:line="12" pos:column="12">inst<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">read_state<pos:position pos:line="12" pos:column="28"/></name></name></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">inst<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">id<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21"> <block pos:line="14" pos:column="22">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">lv_connect<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">()<pos:position pos:line="15" pos:column="21"/></argument_list></call> <operator pos:line="15" pos:column="22">&lt;<pos:position pos:line="15" pos:column="26"/></operator> <literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">-<pos:position pos:line="16" pos:column="15"/></operator><literal type="number" pos:line="16" pos:column="15">1<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></return></block></then></if>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">time<pos:position pos:line="19" pos:column="7"/></name><argument_list pos:line="19" pos:column="7">(<argument><expr><operator pos:line="19" pos:column="8">&amp;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="9">t<pos:position pos:line="19" pos:column="10"/></name></expr></argument>)<pos:position pos:line="19" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="12"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* Need to refresh domain or device lists? */</comment>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">(<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">last_refresh<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">==<pos:position pos:line="22" pos:column="23"/></operator> <operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">time_t<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">)<pos:position pos:line="22" pos:column="32"/></operator><literal type="number" pos:line="22" pos:column="32">0<pos:position pos:line="22" pos:column="33"/></literal><operator pos:line="22" pos:column="33">)<pos:position pos:line="22" pos:column="34"/></operator> <operator pos:line="22" pos:column="35">||<pos:position pos:line="22" pos:column="37"/></operator>
      <operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><operator pos:line="23" pos:column="8">(<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="9">interval<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">&gt;<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="20">0<pos:position pos:line="23" pos:column="21"/></literal><operator pos:line="23" pos:column="21">)<pos:position pos:line="23" pos:column="22"/></operator> <operator pos:line="23" pos:column="23">&amp;&amp;<pos:position pos:line="23" pos:column="33"/></operator> <operator pos:line="23" pos:column="26">(<pos:position pos:line="23" pos:column="27"/></operator><operator pos:line="23" pos:column="27">(<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">last_refresh<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">+<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">interval<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">)<pos:position pos:line="23" pos:column="52"/></operator> <operator pos:line="23" pos:column="53">&lt;=<pos:position pos:line="23" pos:column="58"/></operator> <name pos:line="23" pos:column="56">t<pos:position pos:line="23" pos:column="57"/></name><operator pos:line="23" pos:column="57">)<pos:position pos:line="23" pos:column="58"/></operator><operator pos:line="23" pos:column="58">)<pos:position pos:line="23" pos:column="59"/></operator></expr>)<pos:position pos:line="23" pos:column="60"/></condition><then pos:line="23" pos:column="60"> <block pos:line="23" pos:column="61">{
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">refresh_lists<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">inst<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call> <operator pos:line="24" pos:column="29">!=<pos:position pos:line="24" pos:column="31"/></operator> <literal type="number" pos:line="24" pos:column="32">0<pos:position pos:line="24" pos:column="33"/></literal></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34"> <block pos:line="24" pos:column="35">{
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name><name pos:line="25" pos:column="11">inst<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">id<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">==<pos:position pos:line="25" pos:column="22"/></operator> <literal type="number" pos:line="25" pos:column="23">0<pos:position pos:line="25" pos:column="24"/></literal></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="9">lv_disconnect<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">()<pos:position pos:line="26" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt></block></then></if>
      <return pos:line="27" pos:column="7">return <expr><operator pos:line="27" pos:column="14">-<pos:position pos:line="27" pos:column="15"/></operator><literal type="number" pos:line="27" pos:column="15">1<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="29" pos:column="5">last_refresh<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">t<pos:position pos:line="29" pos:column="21"/></name></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

<cpp:if pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">if<pos:position pos:line="32" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="32" pos:column="5">0<pos:position pos:line="32" pos:column="6"/></literal></expr></cpp:if>
    for (int i = 0; i &lt; nr_domains; ++i)
        fprintf (stderr, "domain %s\n", virDomainGetName (state-&gt;domains[i].ptr));
    for (int i = 0; i &lt; nr_block_devices; ++i)
        fprintf  (stderr, "block device %d %s:%s\n",
                  i, virDomainGetName (block_devices[i].dom),
                  block_devices[i].path);
    for (int i = 0; i &lt; nr_interface_devices; ++i)
        fprintf (stderr, "interface device %d %s:%s\n",
                 i, virDomainGetName (interface_devices[i].dom),
                 interface_devices[i].path);
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="45" pos:column="3">/* Get domains' metrics */</comment>
  <for pos:line="46" pos:column="3">for <control pos:line="46" pos:column="7">(<init><decl><type><name pos:line="46" pos:column="8">int<pos:position pos:line="46" pos:column="11"/></name></type> <name pos:line="46" pos:column="12">i<pos:position pos:line="46" pos:column="13"/></name> <init pos:line="46" pos:column="14">= <expr><literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="46" pos:column="18"/></init> <condition><expr><name pos:line="46" pos:column="19">i<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">&lt;<pos:position pos:line="46" pos:column="25"/></operator> <name><name pos:line="46" pos:column="23">state<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">nr_domains<pos:position pos:line="46" pos:column="40"/></name></name></expr>;<pos:position pos:line="46" pos:column="41"/></condition> <incr><expr><operator pos:line="46" pos:column="42">++<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="44">i<pos:position pos:line="46" pos:column="45"/></name></expr></incr>)<pos:position pos:line="46" pos:column="46"/></control> <block pos:line="46" pos:column="47">{
    <decl_stmt><decl><type><name pos:line="47" pos:column="5">int<pos:position pos:line="47" pos:column="8"/></name></type> <name pos:line="47" pos:column="9">status<pos:position pos:line="47" pos:column="15"/></name> <init pos:line="47" pos:column="16">= <expr><call><name pos:line="47" pos:column="18">get_domain_metrics<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><operator pos:line="47" pos:column="37">&amp;<pos:position pos:line="47" pos:column="42"/></operator><name><name pos:line="47" pos:column="38">state<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">-&gt;<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="45">domains<pos:position pos:line="47" pos:column="52"/></name><index pos:line="47" pos:column="52">[<expr><name pos:line="47" pos:column="53">i<pos:position pos:line="47" pos:column="54"/></name></expr>]<pos:position pos:line="47" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="57"/></decl_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">status<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">!=<pos:position pos:line="48" pos:column="18"/></operator> <literal type="number" pos:line="48" pos:column="19">0<pos:position pos:line="48" pos:column="20"/></literal></expr>)<pos:position pos:line="48" pos:column="21"/></condition><then pos:line="48" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="7">ERROR<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">PLUGIN_NAME<pos:position pos:line="49" pos:column="24"/></name> <literal type="string" pos:line="49" pos:column="25">" failed to get metrics for domain=%s"<pos:position pos:line="49" pos:column="63"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="50" pos:column="13">virDomainGetName<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><name><name pos:line="50" pos:column="30">state<pos:position pos:line="50" pos:column="35"/></name><operator pos:line="50" pos:column="35">-&gt;<pos:position pos:line="50" pos:column="40"/></operator><name pos:line="50" pos:column="37">domains<pos:position pos:line="50" pos:column="44"/></name><index pos:line="50" pos:column="44">[<expr><name pos:line="50" pos:column="45">i<pos:position pos:line="50" pos:column="46"/></name></expr>]<pos:position pos:line="50" pos:column="47"/></index></name><operator pos:line="50" pos:column="47">.<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="48">ptr<pos:position pos:line="50" pos:column="51"/></name></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt></block></then></if>
  }<pos:position pos:line="51" pos:column="4"/></block></for>

  <comment type="block" pos:line="53" pos:column="3">/* Get block device stats for each domain. */</comment>
  <for pos:line="54" pos:column="3">for <control pos:line="54" pos:column="7">(<init><decl><type><name pos:line="54" pos:column="8">int<pos:position pos:line="54" pos:column="11"/></name></type> <name pos:line="54" pos:column="12">i<pos:position pos:line="54" pos:column="13"/></name> <init pos:line="54" pos:column="14">= <expr><literal type="number" pos:line="54" pos:column="16">0<pos:position pos:line="54" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="54" pos:column="18"/></init> <condition><expr><name pos:line="54" pos:column="19">i<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">&lt;<pos:position pos:line="54" pos:column="25"/></operator> <name><name pos:line="54" pos:column="23">state<pos:position pos:line="54" pos:column="28"/></name><operator pos:line="54" pos:column="28">-&gt;<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="30">nr_block_devices<pos:position pos:line="54" pos:column="46"/></name></name></expr>;<pos:position pos:line="54" pos:column="47"/></condition> <incr><expr><operator pos:line="54" pos:column="48">++<pos:position pos:line="54" pos:column="50"/></operator><name pos:line="54" pos:column="50">i<pos:position pos:line="54" pos:column="51"/></name></expr></incr>)<pos:position pos:line="54" pos:column="52"/></control> <block pos:line="54" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="55" pos:column="5">int<pos:position pos:line="55" pos:column="8"/></name></type> <name pos:line="55" pos:column="9">status<pos:position pos:line="55" pos:column="15"/></name> <init pos:line="55" pos:column="16">= <expr><call><name pos:line="55" pos:column="18">get_block_stats<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">(<argument><expr><operator pos:line="55" pos:column="34">&amp;<pos:position pos:line="55" pos:column="39"/></operator><name><name pos:line="55" pos:column="35">state<pos:position pos:line="55" pos:column="40"/></name><operator pos:line="55" pos:column="40">-&gt;<pos:position pos:line="55" pos:column="45"/></operator><name pos:line="55" pos:column="42">block_devices<pos:position pos:line="55" pos:column="55"/></name><index pos:line="55" pos:column="55">[<expr><name pos:line="55" pos:column="56">i<pos:position pos:line="55" pos:column="57"/></name></expr>]<pos:position pos:line="55" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="55" pos:column="60"/></decl_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">status<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">!=<pos:position pos:line="56" pos:column="18"/></operator> <literal type="number" pos:line="56" pos:column="19">0<pos:position pos:line="56" pos:column="20"/></literal></expr>)<pos:position pos:line="56" pos:column="21"/></condition><then pos:line="56" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="7">ERROR<pos:position pos:line="57" pos:column="12"/></name><argument_list pos:line="57" pos:column="12">(<argument><expr><name pos:line="57" pos:column="13">PLUGIN_NAME<pos:position pos:line="57" pos:column="24"/></name>
            <literal type="string" pos:line="58" pos:column="13">" failed to get stats for block device (%s) in domain %s"<pos:position pos:line="58" pos:column="70"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="59" pos:column="13">state<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">-&gt;<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="20">block_devices<pos:position pos:line="59" pos:column="33"/></name><index pos:line="59" pos:column="33">[<expr><name pos:line="59" pos:column="34">i<pos:position pos:line="59" pos:column="35"/></name></expr>]<pos:position pos:line="59" pos:column="36"/></index></name><operator pos:line="59" pos:column="36">.<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="37">path<pos:position pos:line="59" pos:column="41"/></name></expr></argument>,
            <argument><expr><call><name pos:line="60" pos:column="13">virDomainGetName<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><name><name pos:line="60" pos:column="30">state<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">-&gt;<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="37">domains<pos:position pos:line="60" pos:column="44"/></name><index pos:line="60" pos:column="44">[<expr><name pos:line="60" pos:column="45">i<pos:position pos:line="60" pos:column="46"/></name></expr>]<pos:position pos:line="60" pos:column="47"/></index></name><operator pos:line="60" pos:column="47">.<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="48">ptr<pos:position pos:line="60" pos:column="51"/></name></expr></argument>)<pos:position pos:line="60" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="54"/></expr_stmt></block></then></if>
  }<pos:position pos:line="61" pos:column="4"/></block></for>

  <comment type="block" pos:line="63" pos:column="3">/* Get interface stats for each domain. */</comment>
  <for pos:line="64" pos:column="3">for <control pos:line="64" pos:column="7">(<init><decl><type><name pos:line="64" pos:column="8">int<pos:position pos:line="64" pos:column="11"/></name></type> <name pos:line="64" pos:column="12">i<pos:position pos:line="64" pos:column="13"/></name> <init pos:line="64" pos:column="14">= <expr><literal type="number" pos:line="64" pos:column="16">0<pos:position pos:line="64" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="64" pos:column="18"/></init> <condition><expr><name pos:line="64" pos:column="19">i<pos:position pos:line="64" pos:column="20"/></name> <operator pos:line="64" pos:column="21">&lt;<pos:position pos:line="64" pos:column="25"/></operator> <name><name pos:line="64" pos:column="23">state<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">nr_interface_devices<pos:position pos:line="64" pos:column="50"/></name></name></expr>;<pos:position pos:line="64" pos:column="51"/></condition> <incr><expr><operator pos:line="64" pos:column="52">++<pos:position pos:line="64" pos:column="54"/></operator><name pos:line="64" pos:column="54">i<pos:position pos:line="64" pos:column="55"/></name></expr></incr>)<pos:position pos:line="64" pos:column="56"/></control> <block pos:line="64" pos:column="57">{
    <decl_stmt><decl><type><name pos:line="65" pos:column="5">int<pos:position pos:line="65" pos:column="8"/></name></type> <name pos:line="65" pos:column="9">status<pos:position pos:line="65" pos:column="15"/></name> <init pos:line="65" pos:column="16">= <expr><call><name pos:line="65" pos:column="18">get_if_dev_stats<pos:position pos:line="65" pos:column="34"/></name><argument_list pos:line="65" pos:column="34">(<argument><expr><operator pos:line="65" pos:column="35">&amp;<pos:position pos:line="65" pos:column="40"/></operator><name><name pos:line="65" pos:column="36">state<pos:position pos:line="65" pos:column="41"/></name><operator pos:line="65" pos:column="41">-&gt;<pos:position pos:line="65" pos:column="46"/></operator><name pos:line="65" pos:column="43">interface_devices<pos:position pos:line="65" pos:column="60"/></name><index pos:line="65" pos:column="60">[<expr><name pos:line="65" pos:column="61">i<pos:position pos:line="65" pos:column="62"/></name></expr>]<pos:position pos:line="65" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="65" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="65" pos:column="65"/></decl_stmt>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">status<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">!=<pos:position pos:line="66" pos:column="18"/></operator> <literal type="number" pos:line="66" pos:column="19">0<pos:position pos:line="66" pos:column="20"/></literal></expr>)<pos:position pos:line="66" pos:column="21"/></condition><then pos:line="66" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="7">ERROR<pos:position pos:line="67" pos:column="12"/></name><argument_list pos:line="67" pos:column="12">(<argument><expr><name pos:line="67" pos:column="13">PLUGIN_NAME<pos:position pos:line="67" pos:column="24"/></name>
            <literal type="string" pos:line="68" pos:column="13">" failed to get interface stats for device (%s) in domain %s"<pos:position pos:line="68" pos:column="74"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="69" pos:column="13">state<pos:position pos:line="69" pos:column="18"/></name><operator pos:line="69" pos:column="18">-&gt;<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="20">interface_devices<pos:position pos:line="69" pos:column="37"/></name><index pos:line="69" pos:column="37">[<expr><name pos:line="69" pos:column="38">i<pos:position pos:line="69" pos:column="39"/></name></expr>]<pos:position pos:line="69" pos:column="40"/></index></name><operator pos:line="69" pos:column="40">.<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="41">path<pos:position pos:line="69" pos:column="45"/></name></expr></argument>,
            <argument><expr><call><name pos:line="70" pos:column="13">virDomainGetName<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><name><name pos:line="70" pos:column="30">state<pos:position pos:line="70" pos:column="35"/></name><operator pos:line="70" pos:column="35">-&gt;<pos:position pos:line="70" pos:column="40"/></operator><name pos:line="70" pos:column="37">interface_devices<pos:position pos:line="70" pos:column="54"/></name><index pos:line="70" pos:column="54">[<expr><name pos:line="70" pos:column="55">i<pos:position pos:line="70" pos:column="56"/></name></expr>]<pos:position pos:line="70" pos:column="57"/></index></name><operator pos:line="70" pos:column="57">.<pos:position pos:line="70" pos:column="58"/></operator><name pos:line="70" pos:column="58">dom<pos:position pos:line="70" pos:column="61"/></name></expr></argument>)<pos:position pos:line="70" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="64"/></expr_stmt></block></then></if>
  }<pos:position pos:line="71" pos:column="4"/></block></for>

  <return pos:line="73" pos:column="3">return <expr><literal type="number" pos:line="73" pos:column="10">0<pos:position pos:line="73" pos:column="11"/></literal></expr>;<pos:position pos:line="73" pos:column="12"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

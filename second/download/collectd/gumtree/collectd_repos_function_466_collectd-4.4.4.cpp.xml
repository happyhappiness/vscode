<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_466_collectd-4.4.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">long<pos:position pos:line="1" pos:column="19"/></name> <name pos:line="1" pos:column="20">long<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">__get_sock_bytes<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">s<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><name><name pos:line="3" pos:column="16">s<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name> <operator pos:line="3" pos:column="21">!=<pos:position pos:line="3" pos:column="23"/></operator> <literal type="char" pos:line="3" pos:column="24">'/'<pos:position pos:line="3" pos:column="27"/></literal></expr>)<pos:position pos:line="3" pos:column="28"/></condition>
		<block type="pseudo"><expr_stmt><expr><operator pos:line="4" pos:column="17">++<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">s<pos:position pos:line="4" pos:column="20"/></name></expr>;<pos:position pos:line="4" pos:column="21"/></expr_stmt></block></while>

	<comment type="block" pos:line="6" pos:column="9">/* Remove '/' */</comment>
	<expr_stmt><expr><operator pos:line="7" pos:column="9">++<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">s<pos:position pos:line="7" pos:column="12"/></name></expr>;<pos:position pos:line="7" pos:column="13"/></expr_stmt>
	<return pos:line="8" pos:column="9">return <expr><call><name pos:line="8" pos:column="16">atoll<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">s<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

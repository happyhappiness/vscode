<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_734_collectd-4.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">pinghost_t<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ping_alloc<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">pinghost_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ph<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type>      <name pos:line="4" pos:column="21">ph_size<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">ph_size<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <sizeof pos:line="6" pos:column="19">sizeof <argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">pinghost_t<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></sizeof>
		<operator pos:line="7" pos:column="17">+<pos:position pos:line="7" pos:column="18"/></operator> <sizeof pos:line="7" pos:column="19">sizeof <argument_list pos:line="7" pos:column="26">(<argument><expr pos:line="7" pos:column="27">struct <name pos:line="7" pos:column="34">sockaddr_storage<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></sizeof>
		<operator pos:line="8" pos:column="17">+<pos:position pos:line="8" pos:column="18"/></operator> <sizeof pos:line="8" pos:column="19">sizeof <argument_list pos:line="8" pos:column="26">(<argument><expr pos:line="8" pos:column="27">struct <name pos:line="8" pos:column="34">timeval<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></sizeof></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">ph<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">pinghost_t<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></operator><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator> <call><name pos:line="10" pos:column="29">malloc<pos:position pos:line="10" pos:column="35"/></name> <argument_list pos:line="10" pos:column="36">(<argument><expr><name pos:line="10" pos:column="37">ph_size<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">ph<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">==<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">NULL<pos:position pos:line="11" pos:column="23"/></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">NULL<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">)<pos:position pos:line="12" pos:column="30"/></operator></expr>;<pos:position pos:line="12" pos:column="31"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">memset<pos:position pos:line="14" pos:column="15"/></name> <argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">ph<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="21">'\0'<pos:position pos:line="14" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="27">ph_size<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="16" pos:column="9">ph<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">timer<pos:position pos:line="16" pos:column="18"/></name></name>   <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <operator pos:line="16" pos:column="23">(<pos:position pos:line="16" pos:column="24"/></operator>struct <name pos:line="16" pos:column="31">timeval<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">*<pos:position pos:line="16" pos:column="40"/></operator><operator pos:line="16" pos:column="40">)<pos:position pos:line="16" pos:column="41"/></operator> <operator pos:line="16" pos:column="42">(<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="43">ph<pos:position pos:line="16" pos:column="45"/></name> <operator pos:line="16" pos:column="46">+<pos:position pos:line="16" pos:column="47"/></operator> <literal type="number" pos:line="16" pos:column="48">1<pos:position pos:line="16" pos:column="49"/></literal><operator pos:line="16" pos:column="49">)<pos:position pos:line="16" pos:column="50"/></operator></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">ph<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">addr<pos:position pos:line="17" pos:column="17"/></name></name>    <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <operator pos:line="17" pos:column="23">(<pos:position pos:line="17" pos:column="24"/></operator>struct <name pos:line="17" pos:column="31">sockaddr_storage<pos:position pos:line="17" pos:column="47"/></name> <operator pos:line="17" pos:column="48">*<pos:position pos:line="17" pos:column="49"/></operator><operator pos:line="17" pos:column="49">)<pos:position pos:line="17" pos:column="50"/></operator> <operator pos:line="17" pos:column="51">(<pos:position pos:line="17" pos:column="52"/></operator><name><name pos:line="17" pos:column="52">ph<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">timer<pos:position pos:line="17" pos:column="61"/></name></name> <operator pos:line="17" pos:column="62">+<pos:position pos:line="17" pos:column="63"/></operator> <literal type="number" pos:line="17" pos:column="64">1<pos:position pos:line="17" pos:column="65"/></literal><operator pos:line="17" pos:column="65">)<pos:position pos:line="17" pos:column="66"/></operator></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="19" pos:column="9">ph<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">addrlen<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <sizeof pos:line="19" pos:column="23">sizeof <argument_list pos:line="19" pos:column="30">(<argument><expr pos:line="19" pos:column="31">struct <name pos:line="19" pos:column="38">sockaddr_storage<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></sizeof></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">ph<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">latency<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <operator pos:line="20" pos:column="23">-<pos:position pos:line="20" pos:column="24"/></operator><literal type="number" pos:line="20" pos:column="24">1.0<pos:position pos:line="20" pos:column="27"/></literal></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">ph<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">ident<pos:position pos:line="21" pos:column="18"/></name></name>   <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">ping_get_ident<pos:position pos:line="21" pos:column="37"/></name> <argument_list pos:line="21" pos:column="38">()<pos:position pos:line="21" pos:column="40"/></argument_list></call> <operator pos:line="21" pos:column="41">&amp;<pos:position pos:line="21" pos:column="46"/></operator> <literal type="number" pos:line="21" pos:column="43">0xFFFF<pos:position pos:line="21" pos:column="49"/></literal></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>

	<return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">ph<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">)<pos:position pos:line="23" pos:column="20"/></operator></expr>;<pos:position pos:line="23" pos:column="21"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

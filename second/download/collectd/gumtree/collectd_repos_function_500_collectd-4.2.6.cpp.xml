<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_500_collectd-4.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">value_list_to_filename<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">buffer<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">buffer_len<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">data_set_t<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">ds<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">value_list_t<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">vl<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">offset<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">datadir<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">!=<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
	<block pos:line="8" pos:column="9">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">status<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <call><name pos:line="9" pos:column="26">snprintf<pos:position pos:line="9" pos:column="34"/></name> <argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">buffer<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">+<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">offset<pos:position pos:line="9" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="53">buffer_len<pos:position pos:line="9" pos:column="63"/></name> <operator pos:line="9" pos:column="64">-<pos:position pos:line="9" pos:column="65"/></operator> <name pos:line="9" pos:column="66">offset<pos:position pos:line="9" pos:column="72"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="10" pos:column="33">"%s/"<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">datadir<pos:position pos:line="10" pos:column="47"/></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">(<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">status<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&lt;<pos:position pos:line="11" pos:column="33"/></operator> <literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal><operator pos:line="11" pos:column="32">)<pos:position pos:line="11" pos:column="33"/></operator> <operator pos:line="11" pos:column="34">||<pos:position pos:line="11" pos:column="36"/></operator> <operator pos:line="11" pos:column="37">(<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="38">status<pos:position pos:line="11" pos:column="44"/></name> <operator pos:line="11" pos:column="45">&gt;=<pos:position pos:line="11" pos:column="50"/></operator> <name pos:line="11" pos:column="48">buffer_len<pos:position pos:line="11" pos:column="58"/></name> <operator pos:line="11" pos:column="59">-<pos:position pos:line="11" pos:column="60"/></operator> <name pos:line="11" pos:column="61">offset<pos:position pos:line="11" pos:column="67"/></name><operator pos:line="11" pos:column="67">)<pos:position pos:line="11" pos:column="68"/></operator></expr>)<pos:position pos:line="11" pos:column="69"/></condition><then pos:line="11" pos:column="69">
			<block type="pseudo"><return pos:line="12" pos:column="25">return <expr><operator pos:line="12" pos:column="32">(<pos:position pos:line="12" pos:column="33"/></operator><operator pos:line="12" pos:column="33">-<pos:position pos:line="12" pos:column="34"/></operator><literal type="number" pos:line="12" pos:column="34">1<pos:position pos:line="12" pos:column="35"/></literal><operator pos:line="12" pos:column="35">)<pos:position pos:line="12" pos:column="36"/></operator></expr>;<pos:position pos:line="12" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="13" pos:column="17">offset<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">+=<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">status<pos:position pos:line="13" pos:column="33"/></name></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">status<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">snprintf<pos:position pos:line="16" pos:column="26"/></name> <argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">buffer<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">+<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="37">offset<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">buffer_len<pos:position pos:line="16" pos:column="55"/></name> <operator pos:line="16" pos:column="56">-<pos:position pos:line="16" pos:column="57"/></operator> <name pos:line="16" pos:column="58">offset<pos:position pos:line="16" pos:column="64"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="17" pos:column="25">"%s/"<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="32">vl<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">host<pos:position pos:line="17" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">status<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">&lt;<pos:position pos:line="18" pos:column="25"/></operator> <literal type="number" pos:line="18" pos:column="23">1<pos:position pos:line="18" pos:column="24"/></literal><operator pos:line="18" pos:column="24">)<pos:position pos:line="18" pos:column="25"/></operator> <operator pos:line="18" pos:column="26">||<pos:position pos:line="18" pos:column="28"/></operator> <operator pos:line="18" pos:column="29">(<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">status<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">&gt;=<pos:position pos:line="18" pos:column="42"/></operator> <name pos:line="18" pos:column="40">buffer_len<pos:position pos:line="18" pos:column="50"/></name> <operator pos:line="18" pos:column="51">-<pos:position pos:line="18" pos:column="52"/></operator> <name pos:line="18" pos:column="53">offset<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">)<pos:position pos:line="18" pos:column="60"/></operator></expr>)<pos:position pos:line="18" pos:column="61"/></condition><then pos:line="18" pos:column="61">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><operator pos:line="19" pos:column="25">-<pos:position pos:line="19" pos:column="26"/></operator><literal type="number" pos:line="19" pos:column="26">1<pos:position pos:line="19" pos:column="27"/></literal><operator pos:line="19" pos:column="27">)<pos:position pos:line="19" pos:column="28"/></operator></expr>;<pos:position pos:line="19" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="20" pos:column="9">offset<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">+=<pos:position pos:line="20" pos:column="18"/></operator> <name pos:line="20" pos:column="19">status<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">strlen<pos:position pos:line="22" pos:column="19"/></name> <argument_list pos:line="22" pos:column="20">(<argument><expr><name><name pos:line="22" pos:column="21">vl<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">plugin_instance<pos:position pos:line="22" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call> <operator pos:line="22" pos:column="42">&gt;<pos:position pos:line="22" pos:column="46"/></operator> <literal type="number" pos:line="22" pos:column="44">0<pos:position pos:line="22" pos:column="45"/></literal></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="17">status<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <call><name pos:line="23" pos:column="26">snprintf<pos:position pos:line="23" pos:column="34"/></name> <argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">buffer<pos:position pos:line="23" pos:column="42"/></name> <operator pos:line="23" pos:column="43">+<pos:position pos:line="23" pos:column="44"/></operator> <name pos:line="23" pos:column="45">offset<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="53">buffer_len<pos:position pos:line="23" pos:column="63"/></name> <operator pos:line="23" pos:column="64">-<pos:position pos:line="23" pos:column="65"/></operator> <name pos:line="23" pos:column="66">offset<pos:position pos:line="23" pos:column="72"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="24" pos:column="33">"%s-%s/"<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="43">vl<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">plugin<pos:position pos:line="24" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="55">vl<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">-&gt;<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="59">plugin_instance<pos:position pos:line="24" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="76"/></expr_stmt></block></then>
	<else pos:line="25" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">status<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">snprintf<pos:position pos:line="26" pos:column="34"/></name> <argument_list pos:line="26" pos:column="35">(<argument><expr><name pos:line="26" pos:column="36">buffer<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">+<pos:position pos:line="26" pos:column="44"/></operator> <name pos:line="26" pos:column="45">offset<pos:position pos:line="26" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="53">buffer_len<pos:position pos:line="26" pos:column="63"/></name> <operator pos:line="26" pos:column="64">-<pos:position pos:line="26" pos:column="65"/></operator> <name pos:line="26" pos:column="66">offset<pos:position pos:line="26" pos:column="72"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="27" pos:column="33">"%s/"<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="40">vl<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">plugin<pos:position pos:line="27" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt></block></else></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">status<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">&lt;<pos:position pos:line="28" pos:column="25"/></operator> <literal type="number" pos:line="28" pos:column="23">1<pos:position pos:line="28" pos:column="24"/></literal><operator pos:line="28" pos:column="24">)<pos:position pos:line="28" pos:column="25"/></operator> <operator pos:line="28" pos:column="26">||<pos:position pos:line="28" pos:column="28"/></operator> <operator pos:line="28" pos:column="29">(<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">status<pos:position pos:line="28" pos:column="36"/></name> <operator pos:line="28" pos:column="37">&gt;=<pos:position pos:line="28" pos:column="42"/></operator> <name pos:line="28" pos:column="40">buffer_len<pos:position pos:line="28" pos:column="50"/></name> <operator pos:line="28" pos:column="51">-<pos:position pos:line="28" pos:column="52"/></operator> <name pos:line="28" pos:column="53">offset<pos:position pos:line="28" pos:column="59"/></name><operator pos:line="28" pos:column="59">)<pos:position pos:line="28" pos:column="60"/></operator></expr>)<pos:position pos:line="28" pos:column="61"/></condition><then pos:line="28" pos:column="61">
		<block type="pseudo"><return pos:line="29" pos:column="17">return <expr><operator pos:line="29" pos:column="24">(<pos:position pos:line="29" pos:column="25"/></operator><operator pos:line="29" pos:column="25">-<pos:position pos:line="29" pos:column="26"/></operator><literal type="number" pos:line="29" pos:column="26">1<pos:position pos:line="29" pos:column="27"/></literal><operator pos:line="29" pos:column="27">)<pos:position pos:line="29" pos:column="28"/></operator></expr>;<pos:position pos:line="29" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="30" pos:column="9">offset<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">+=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">status<pos:position pos:line="30" pos:column="25"/></name></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">strlen<pos:position pos:line="32" pos:column="19"/></name> <argument_list pos:line="32" pos:column="20">(<argument><expr><name><name pos:line="32" pos:column="21">vl<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">type_instance<pos:position pos:line="32" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call> <operator pos:line="32" pos:column="40">&gt;<pos:position pos:line="32" pos:column="44"/></operator> <literal type="number" pos:line="32" pos:column="42">0<pos:position pos:line="32" pos:column="43"/></literal></expr>)<pos:position pos:line="32" pos:column="44"/></condition><then pos:line="32" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">status<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <call><name pos:line="33" pos:column="26">snprintf<pos:position pos:line="33" pos:column="34"/></name> <argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">buffer<pos:position pos:line="33" pos:column="42"/></name> <operator pos:line="33" pos:column="43">+<pos:position pos:line="33" pos:column="44"/></operator> <name pos:line="33" pos:column="45">offset<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">buffer_len<pos:position pos:line="33" pos:column="63"/></name> <operator pos:line="33" pos:column="64">-<pos:position pos:line="33" pos:column="65"/></operator> <name pos:line="33" pos:column="66">offset<pos:position pos:line="33" pos:column="72"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="34" pos:column="33">"%s-%s.rrd"<pos:position pos:line="34" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="46">ds<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">-&gt;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="50">type<pos:position pos:line="34" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="56">vl<pos:position pos:line="34" pos:column="58"/></name><operator pos:line="34" pos:column="58">-&gt;<pos:position pos:line="34" pos:column="63"/></operator><name pos:line="34" pos:column="60">type_instance<pos:position pos:line="34" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="75"/></expr_stmt></block></then>
	<else pos:line="35" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="17">status<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <call><name pos:line="36" pos:column="26">snprintf<pos:position pos:line="36" pos:column="34"/></name> <argument_list pos:line="36" pos:column="35">(<argument><expr><name pos:line="36" pos:column="36">buffer<pos:position pos:line="36" pos:column="42"/></name> <operator pos:line="36" pos:column="43">+<pos:position pos:line="36" pos:column="44"/></operator> <name pos:line="36" pos:column="45">offset<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">buffer_len<pos:position pos:line="36" pos:column="63"/></name> <operator pos:line="36" pos:column="64">-<pos:position pos:line="36" pos:column="65"/></operator> <name pos:line="36" pos:column="66">offset<pos:position pos:line="36" pos:column="72"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="37" pos:column="33">"%s.rrd"<pos:position pos:line="37" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="43">ds<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">-&gt;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="47">type<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt></block></else></if>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">(<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">status<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">&lt;<pos:position pos:line="38" pos:column="25"/></operator> <literal type="number" pos:line="38" pos:column="23">1<pos:position pos:line="38" pos:column="24"/></literal><operator pos:line="38" pos:column="24">)<pos:position pos:line="38" pos:column="25"/></operator> <operator pos:line="38" pos:column="26">||<pos:position pos:line="38" pos:column="28"/></operator> <operator pos:line="38" pos:column="29">(<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">status<pos:position pos:line="38" pos:column="36"/></name> <operator pos:line="38" pos:column="37">&gt;=<pos:position pos:line="38" pos:column="42"/></operator> <name pos:line="38" pos:column="40">buffer_len<pos:position pos:line="38" pos:column="50"/></name> <operator pos:line="38" pos:column="51">-<pos:position pos:line="38" pos:column="52"/></operator> <name pos:line="38" pos:column="53">offset<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">)<pos:position pos:line="38" pos:column="60"/></operator></expr>)<pos:position pos:line="38" pos:column="61"/></condition><then pos:line="38" pos:column="61">
		<block type="pseudo"><return pos:line="39" pos:column="17">return <expr><operator pos:line="39" pos:column="24">(<pos:position pos:line="39" pos:column="25"/></operator><operator pos:line="39" pos:column="25">-<pos:position pos:line="39" pos:column="26"/></operator><literal type="number" pos:line="39" pos:column="26">1<pos:position pos:line="39" pos:column="27"/></literal><operator pos:line="39" pos:column="27">)<pos:position pos:line="39" pos:column="28"/></operator></expr>;<pos:position pos:line="39" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="40" pos:column="9">offset<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">+=<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">status<pos:position pos:line="40" pos:column="25"/></name></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>

	<return pos:line="42" pos:column="9">return <expr><operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><literal type="number" pos:line="42" pos:column="17">0<pos:position pos:line="42" pos:column="18"/></literal><operator pos:line="42" pos:column="18">)<pos:position pos:line="42" pos:column="19"/></operator></expr>;<pos:position pos:line="42" pos:column="20"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

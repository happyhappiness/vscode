<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1690_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ut_config<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">oconfig_item_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ci<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{ <comment type="block" pos:line="2" pos:column="3">/* {{{ */</comment>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">old_size<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><call><name pos:line="4" pos:column="18">c_avl_size<pos:position pos:line="4" pos:column="28"/></name> <argument_list pos:line="4" pos:column="29">(<argument><expr><name pos:line="4" pos:column="30">threshold_tree<pos:position pos:line="4" pos:column="44"/></name></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">threshold_tree<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">==<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">NULL<pos:position pos:line="6" pos:column="29"/></name></expr>)<pos:position pos:line="6" pos:column="30"/></condition><then pos:line="6" pos:column="30">
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><name pos:line="8" pos:column="5">threshold_tree<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <call><name pos:line="8" pos:column="22">c_avl_create<pos:position pos:line="8" pos:column="34"/></name> <argument_list pos:line="8" pos:column="35">(<argument><expr><operator pos:line="8" pos:column="36">(<pos:position pos:line="8" pos:column="37"/></operator><call><call><name pos:line="8" pos:column="37">int<pos:position pos:line="8" pos:column="40"/></name> <argument_list pos:line="8" pos:column="41">(<argument><expr><operator pos:line="8" pos:column="42">*<pos:position pos:line="8" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call> <argument_list pos:line="8" pos:column="45">(<argument><expr><specifier pos:line="8" pos:column="46">const<pos:position pos:line="8" pos:column="51"/></specifier> <name pos:line="8" pos:column="52">void<pos:position pos:line="8" pos:column="56"/></name> <operator pos:line="8" pos:column="57">*<pos:position pos:line="8" pos:column="58"/></operator></expr></argument>, <argument><expr><specifier pos:line="8" pos:column="60">const<pos:position pos:line="8" pos:column="65"/></specifier> <name pos:line="8" pos:column="66">void<pos:position pos:line="8" pos:column="70"/></name> <operator pos:line="8" pos:column="71">*<pos:position pos:line="8" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call><operator pos:line="8" pos:column="73">)<pos:position pos:line="8" pos:column="74"/></operator> <name pos:line="8" pos:column="75">strcmp<pos:position pos:line="8" pos:column="81"/></name></expr></argument>)<pos:position pos:line="8" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="83"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">threshold_tree<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">==<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">NULL<pos:position pos:line="9" pos:column="31"/></name></expr>)<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32">
    <block pos:line="10" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">ERROR<pos:position pos:line="11" pos:column="12"/></name> <argument_list pos:line="11" pos:column="13">(<argument><expr><literal type="string" pos:line="11" pos:column="14">"ut_config: c_avl_create failed."<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
      <return pos:line="12" pos:column="7">return <expr><operator pos:line="12" pos:column="14">(<pos:position pos:line="12" pos:column="15"/></operator><operator pos:line="12" pos:column="15">-<pos:position pos:line="12" pos:column="16"/></operator><literal type="number" pos:line="12" pos:column="16">1<pos:position pos:line="12" pos:column="17"/></literal><operator pos:line="12" pos:column="17">)<pos:position pos:line="12" pos:column="18"/></operator></expr>;<pos:position pos:line="12" pos:column="19"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="16" pos:column="3">threshold_t<pos:position pos:line="16" pos:column="14"/></name></type> <name pos:line="16" pos:column="15">th<pos:position pos:line="16" pos:column="17"/></name> <init pos:line="16" pos:column="18">= <expr><block pos:line="16" pos:column="20">{
    <expr><operator pos:line="17" pos:column="5">.<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">warning_min<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">NAN<pos:position pos:line="17" pos:column="23"/></name></expr>,
    <expr><operator pos:line="18" pos:column="5">.<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">warning_max<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">NAN<pos:position pos:line="18" pos:column="23"/></name></expr>,
    <expr><operator pos:line="19" pos:column="5">.<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">failure_min<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">NAN<pos:position pos:line="19" pos:column="23"/></name></expr>,
    <expr><operator pos:line="20" pos:column="5">.<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">failure_max<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">NAN<pos:position pos:line="20" pos:column="23"/></name></expr>,
    <expr><operator pos:line="21" pos:column="5">.<pos:position pos:line="21" pos:column="6"/></operator><name pos:line="21" pos:column="6">flags<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">UT_FLAG_INTERESTING<pos:position pos:line="21" pos:column="33"/></name></expr> <comment type="block" pos:line="21" pos:column="34">/* interesting by default */</comment>
  }<pos:position pos:line="22" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="22" pos:column="5"/></decl_stmt>

  <for pos:line="24" pos:column="3">for <control pos:line="24" pos:column="7">(<init><decl><type><name pos:line="24" pos:column="8">int<pos:position pos:line="24" pos:column="11"/></name></type> <name pos:line="24" pos:column="12">i<pos:position pos:line="24" pos:column="13"/></name> <init pos:line="24" pos:column="14">= <expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="18"/></init> <condition><expr><name pos:line="24" pos:column="19">i<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">&lt;<pos:position pos:line="24" pos:column="25"/></operator> <name><name pos:line="24" pos:column="23">ci<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">children_num<pos:position pos:line="24" pos:column="39"/></name></name></expr>;<pos:position pos:line="24" pos:column="40"/></condition> <incr><expr><name pos:line="24" pos:column="41">i<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">++<pos:position pos:line="24" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="45"/></control>
  <block pos:line="25" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">oconfig_item_t<pos:position pos:line="26" pos:column="19"/></name> <modifier pos:line="26" pos:column="20">*<pos:position pos:line="26" pos:column="21"/></modifier></type><name pos:line="26" pos:column="21">option<pos:position pos:line="26" pos:column="27"/></name> <init pos:line="26" pos:column="28">= <expr><name><name pos:line="26" pos:column="30">ci<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">children<pos:position pos:line="26" pos:column="42"/></name></name> <operator pos:line="26" pos:column="43">+<pos:position pos:line="26" pos:column="44"/></operator> <name pos:line="26" pos:column="45">i<pos:position pos:line="26" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="47"/></decl_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">strcasecmp<pos:position pos:line="28" pos:column="19"/></name> <argument_list pos:line="28" pos:column="20">(<argument><expr><literal type="string" pos:line="28" pos:column="21">"Type"<pos:position pos:line="28" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="29">option<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">key<pos:position pos:line="28" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call> <operator pos:line="28" pos:column="42">==<pos:position pos:line="28" pos:column="44"/></operator> <literal type="number" pos:line="28" pos:column="45">0<pos:position pos:line="28" pos:column="46"/></literal></expr>)<pos:position pos:line="28" pos:column="47"/></condition><then pos:line="28" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">ut_config_type<pos:position pos:line="29" pos:column="30"/></name> <argument_list pos:line="29" pos:column="31">(<argument><expr><operator pos:line="29" pos:column="32">&amp;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="33">th<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="37">option<pos:position pos:line="29" pos:column="43"/></name></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt></block></then>
    <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><call><name pos:line="30" pos:column="14">strcasecmp<pos:position pos:line="30" pos:column="24"/></name> <argument_list pos:line="30" pos:column="25">(<argument><expr><literal type="string" pos:line="30" pos:column="26">"Plugin"<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="36">option<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">-&gt;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="44">key<pos:position pos:line="30" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call> <operator pos:line="30" pos:column="49">==<pos:position pos:line="30" pos:column="51"/></operator> <literal type="number" pos:line="30" pos:column="52">0<pos:position pos:line="30" pos:column="53"/></literal></expr>)<pos:position pos:line="30" pos:column="54"/></condition><then pos:line="30" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">status<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">ut_config_plugin<pos:position pos:line="31" pos:column="32"/></name> <argument_list pos:line="31" pos:column="33">(<argument><expr><operator pos:line="31" pos:column="34">&amp;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="35">th<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">option<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><call><name pos:line="32" pos:column="14">strcasecmp<pos:position pos:line="32" pos:column="24"/></name> <argument_list pos:line="32" pos:column="25">(<argument><expr><literal type="string" pos:line="32" pos:column="26">"Host"<pos:position pos:line="32" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="34">option<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="42">key<pos:position pos:line="32" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call> <operator pos:line="32" pos:column="47">==<pos:position pos:line="32" pos:column="49"/></operator> <literal type="number" pos:line="32" pos:column="50">0<pos:position pos:line="32" pos:column="51"/></literal></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">ut_config_host<pos:position pos:line="33" pos:column="30"/></name> <argument_list pos:line="33" pos:column="31">(<argument><expr><operator pos:line="33" pos:column="32">&amp;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="33">th<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">option<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt></block></then></if></elseif>
    <else pos:line="34" pos:column="5">else
    <block pos:line="35" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">WARNING<pos:position pos:line="36" pos:column="14"/></name> <argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="string" pos:line="36" pos:column="16">"threshold values: Option `%s' not allowed here."<pos:position pos:line="36" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="67">option<pos:position pos:line="36" pos:column="73"/></name><operator pos:line="36" pos:column="73">-&gt;<pos:position pos:line="36" pos:column="78"/></operator><name pos:line="36" pos:column="75">key<pos:position pos:line="36" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="80"/></expr_stmt>
      <expr_stmt><expr><name pos:line="37" pos:column="7">status<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <operator pos:line="37" pos:column="16">-<pos:position pos:line="37" pos:column="17"/></operator><literal type="number" pos:line="37" pos:column="17">1<pos:position pos:line="37" pos:column="18"/></literal></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">status<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">!=<pos:position pos:line="40" pos:column="18"/></operator> <literal type="number" pos:line="40" pos:column="19">0<pos:position pos:line="40" pos:column="20"/></literal></expr>)<pos:position pos:line="40" pos:column="21"/></condition><then pos:line="40" pos:column="21">
      <block type="pseudo"><break pos:line="41" pos:column="7">break;<pos:position pos:line="41" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="42" pos:column="4"/></block></for>

  <comment type="block" pos:line="44" pos:column="3">/* register callbacks if this is the first time we see a valid config */</comment>
  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><operator pos:line="45" pos:column="7">(<pos:position pos:line="45" pos:column="8"/></operator><name pos:line="45" pos:column="8">old_size<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">==<pos:position pos:line="45" pos:column="19"/></operator> <literal type="number" pos:line="45" pos:column="20">0<pos:position pos:line="45" pos:column="21"/></literal><operator pos:line="45" pos:column="21">)<pos:position pos:line="45" pos:column="22"/></operator> <operator pos:line="45" pos:column="23">&amp;&amp;<pos:position pos:line="45" pos:column="33"/></operator> <operator pos:line="45" pos:column="26">(<pos:position pos:line="45" pos:column="27"/></operator><call><name pos:line="45" pos:column="27">c_avl_size<pos:position pos:line="45" pos:column="37"/></name> <argument_list pos:line="45" pos:column="38">(<argument><expr><name pos:line="45" pos:column="39">threshold_tree<pos:position pos:line="45" pos:column="53"/></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call> <operator pos:line="45" pos:column="55">&gt;<pos:position pos:line="45" pos:column="59"/></operator> <literal type="number" pos:line="45" pos:column="57">0<pos:position pos:line="45" pos:column="58"/></literal><operator pos:line="45" pos:column="58">)<pos:position pos:line="45" pos:column="59"/></operator></expr>)<pos:position pos:line="45" pos:column="60"/></condition><then pos:line="45" pos:column="60">
  <block pos:line="46" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">plugin_register_missing<pos:position pos:line="47" pos:column="28"/></name> <argument_list pos:line="47" pos:column="29">(<argument><expr><literal type="string" pos:line="47" pos:column="30">"threshold"<pos:position pos:line="47" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="43">ut_missing<pos:position pos:line="47" pos:column="53"/></name></expr></argument>,
        <comment type="block" pos:line="48" pos:column="9">/* user data = */</comment> <argument><expr><name pos:line="48" pos:column="27">NULL<pos:position pos:line="48" pos:column="31"/></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">plugin_register_write<pos:position pos:line="49" pos:column="26"/></name> <argument_list pos:line="49" pos:column="27">(<argument><expr><literal type="string" pos:line="49" pos:column="28">"threshold"<pos:position pos:line="49" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="41">ut_check_threshold<pos:position pos:line="49" pos:column="59"/></name></expr></argument>,
        <comment type="block" pos:line="50" pos:column="9">/* user data = */</comment> <argument><expr><name pos:line="50" pos:column="27">NULL<pos:position pos:line="50" pos:column="31"/></name></expr></argument>)<pos:position pos:line="50" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <return pos:line="53" pos:column="3">return <expr><operator pos:line="53" pos:column="10">(<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="11">status<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">)<pos:position pos:line="53" pos:column="18"/></operator></expr>;<pos:position pos:line="53" pos:column="19"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_576_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_events_preinit<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <block pos:line="1" pos:column="38">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">DPDK_EVENTS_TRACE<pos:position pos:line="2" pos:column="20"/></name><argument_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="23"/></expr_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">g_hc<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">!=<pos:position pos:line="4" pos:column="14"/></operator> <name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
    <comment type="block" pos:line="5" pos:column="5">/* already initialized if config callback was called before init callback */</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">DEBUG<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><literal type="string" pos:line="6" pos:column="11">"dpdk_events_preinit: helper already initialized."<pos:position pos:line="6" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="63"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">ret<pos:position pos:line="10" pos:column="10"/></name> <init pos:line="10" pos:column="11">=
      <expr><call><name pos:line="11" pos:column="7">dpdk_helper_init<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">DPDK_EVENTS_NAME<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="42">sizeof<argument_list pos:line="11" pos:column="48">(<argument><expr><name pos:line="11" pos:column="49">dpdk_events_ctx_t<pos:position pos:line="11" pos:column="66"/></name></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="11" pos:column="69">&amp;<pos:position pos:line="11" pos:column="74"/></operator><name pos:line="11" pos:column="70">g_hc<pos:position pos:line="11" pos:column="74"/></name></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="76"/></decl_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">ret<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">!=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>)<pos:position pos:line="12" pos:column="16"/></condition><then pos:line="12" pos:column="16"> <block pos:line="12" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">DPDK_EVENTS_PLUGIN<pos:position pos:line="13" pos:column="29"/></name> <literal type="string" pos:line="13" pos:column="30">": failed to initialize %s helper(error: %s)"<pos:position pos:line="13" pos:column="75"/></literal></expr></argument>,
          <argument><expr><name pos:line="14" pos:column="11">DPDK_EVENTS_NAME<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="29">strerror<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">ret<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">ret<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">dpdk_events_default_config<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">()<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="20" pos:column="3">dpdk_events_ctx_t<pos:position pos:line="20" pos:column="20"/></name> <modifier pos:line="20" pos:column="21">*<pos:position pos:line="20" pos:column="22"/></modifier></type><name pos:line="20" pos:column="22">ec<pos:position pos:line="20" pos:column="24"/></name> <init pos:line="20" pos:column="25">= <expr><call><name pos:line="20" pos:column="27">DPDK_EVENTS_CTX_GET<pos:position pos:line="20" pos:column="46"/></name><argument_list pos:line="20" pos:column="46">(<argument><expr><name pos:line="20" pos:column="47">g_hc<pos:position pos:line="20" pos:column="51"/></name></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="53"/></decl_stmt>
  <for pos:line="21" pos:column="3">for <control pos:line="21" pos:column="7">(<init><decl><type><name pos:line="21" pos:column="8">int<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">i<pos:position pos:line="21" pos:column="13"/></name> <init pos:line="21" pos:column="14">= <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="18"/></init> <condition><expr><name pos:line="21" pos:column="19">i<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&lt;<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="23">RTE_MAX_ETHPORTS<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></condition> <incr><expr><name pos:line="21" pos:column="41">i<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">++<pos:position pos:line="21" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="45"/></control> <block pos:line="21" pos:column="46">{
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">ec<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">link_info<pos:position pos:line="22" pos:column="18"/></name><index pos:line="22" pos:column="18">[<expr><name pos:line="22" pos:column="19">i<pos:position pos:line="22" pos:column="20"/></name></expr>]<pos:position pos:line="22" pos:column="21"/></index></name><operator pos:line="22" pos:column="21">.<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">link_status<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">=<pos:position pos:line="22" pos:column="35"/></operator> <name pos:line="22" pos:column="36">ETH_LINK_NA<pos:position pos:line="22" pos:column="47"/></name></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></for>

  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><decl><type><name pos:line="25" pos:column="8">int<pos:position pos:line="25" pos:column="11"/></name></type> <name pos:line="25" pos:column="12">i<pos:position pos:line="25" pos:column="13"/></name> <init pos:line="25" pos:column="14">= <expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="18"/></init> <condition><expr><name pos:line="25" pos:column="19">i<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">&lt;<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="23">RTE_KEEPALIVE_MAXCORES<pos:position pos:line="25" pos:column="45"/></name></expr>;<pos:position pos:line="25" pos:column="46"/></condition> <incr><expr><name pos:line="25" pos:column="47">i<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">++<pos:position pos:line="25" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="51"/></control> <block pos:line="25" pos:column="52">{
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">ec<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">core_info<pos:position pos:line="26" pos:column="18"/></name><index pos:line="26" pos:column="18">[<expr><name pos:line="26" pos:column="19">i<pos:position pos:line="26" pos:column="20"/></name></expr>]<pos:position pos:line="26" pos:column="21"/></index></name><operator pos:line="26" pos:column="21">.<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">lcore_state<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">=<pos:position pos:line="26" pos:column="35"/></operator> <name pos:line="26" pos:column="36">ETH_LINK_NA<pos:position pos:line="26" pos:column="47"/></name></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></for>

  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">ret<pos:position pos:line="29" pos:column="13"/></name></expr>;<pos:position pos:line="29" pos:column="14"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

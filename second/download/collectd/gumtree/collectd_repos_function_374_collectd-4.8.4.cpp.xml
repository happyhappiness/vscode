<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_374_collectd-4.8.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">config_query_param_add<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">udb_query_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">q<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">oconfig_item_t<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">ci<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">c_psql_user_data_t<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">data<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">param_str<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">c_psql_param_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">tmp<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">data<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">udb_query_get_user_data<pos:position pos:line="8" pos:column="39"/></name> <argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">q<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">NULL<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">data<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
		<expr_stmt><expr><name pos:line="10" pos:column="17">data<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">c_psql_user_data_t<pos:position pos:line="10" pos:column="43"/></name> <operator pos:line="10" pos:column="44">*<pos:position pos:line="10" pos:column="45"/></operator><operator pos:line="10" pos:column="45">)<pos:position pos:line="10" pos:column="46"/></operator> <call><name pos:line="10" pos:column="47">smalloc<pos:position pos:line="10" pos:column="54"/></name> <argument_list pos:line="10" pos:column="55">(<argument><expr><sizeof pos:line="10" pos:column="56">sizeof <argument_list pos:line="10" pos:column="63">(<argument><expr><operator pos:line="10" pos:column="64">*<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="65">data<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="72"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">NULL<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">==<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">data<pos:position pos:line="11" pos:column="33"/></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <block pos:line="11" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="12" pos:column="25">log_err<pos:position pos:line="12" pos:column="32"/></name> <argument_list pos:line="12" pos:column="33">(<argument><expr><literal type="string" pos:line="12" pos:column="34">"Out of memory."<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>
			<return pos:line="13" pos:column="25">return <expr><operator pos:line="13" pos:column="32">-<pos:position pos:line="13" pos:column="33"/></operator><literal type="number" pos:line="13" pos:column="33">1<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></return>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">memset<pos:position pos:line="15" pos:column="23"/></name> <argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">data<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="31">0<pos:position pos:line="15" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="34">sizeof <argument_list pos:line="15" pos:column="41">(<argument><expr><operator pos:line="15" pos:column="42">*<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">data<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">data<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">params<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">=<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">NULL<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="19" pos:column="9">tmp<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <operator pos:line="19" pos:column="15">(<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">c_psql_param_t<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">*<pos:position pos:line="19" pos:column="32"/></operator><operator pos:line="19" pos:column="32">)<pos:position pos:line="19" pos:column="33"/></operator> <call><name pos:line="19" pos:column="34">realloc<pos:position pos:line="19" pos:column="41"/></name> <argument_list pos:line="19" pos:column="42">(<argument><expr><name><name pos:line="19" pos:column="43">data<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">params<pos:position pos:line="19" pos:column="55"/></name></name></expr></argument>,
			<argument><expr><operator pos:line="20" pos:column="25">(<pos:position pos:line="20" pos:column="26"/></operator><name><name pos:line="20" pos:column="26">data<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">params_num<pos:position pos:line="20" pos:column="42"/></name></name> <operator pos:line="20" pos:column="43">+<pos:position pos:line="20" pos:column="44"/></operator> <literal type="number" pos:line="20" pos:column="45">1<pos:position pos:line="20" pos:column="46"/></literal><operator pos:line="20" pos:column="46">)<pos:position pos:line="20" pos:column="47"/></operator> <operator pos:line="20" pos:column="48">*<pos:position pos:line="20" pos:column="49"/></operator> <sizeof pos:line="20" pos:column="50">sizeof <argument_list pos:line="20" pos:column="57">(<argument><expr><name pos:line="20" pos:column="58">c_psql_param_t<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="75"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">NULL<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">tmp<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25"> <block pos:line="21" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">log_err<pos:position pos:line="22" pos:column="24"/></name> <argument_list pos:line="22" pos:column="25">(<argument><expr><literal type="string" pos:line="22" pos:column="26">"Out of memory."<pos:position pos:line="22" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">-<pos:position pos:line="23" pos:column="25"/></operator><literal type="number" pos:line="23" pos:column="25">1<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">data<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">params<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">tmp<pos:position pos:line="25" pos:column="27"/></name></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><name pos:line="27" pos:column="9">param_str<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name><name pos:line="27" pos:column="21">ci<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">values<pos:position pos:line="27" pos:column="31"/></name><index pos:line="27" pos:column="31">[<expr><literal type="number" pos:line="27" pos:column="32">0<pos:position pos:line="27" pos:column="33"/></literal></expr>]<pos:position pos:line="27" pos:column="34"/></index></name><operator pos:line="27" pos:column="34">.<pos:position pos:line="27" pos:column="35"/></operator><name><name pos:line="27" pos:column="35">value<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">.<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="41">string<pos:position pos:line="27" pos:column="47"/></name></name></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><literal type="number" pos:line="28" pos:column="13">0<pos:position pos:line="28" pos:column="14"/></literal> <operator pos:line="28" pos:column="15">==<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">strcasecmp<pos:position pos:line="28" pos:column="28"/></name> <argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">param_str<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="41">"hostname"<pos:position pos:line="28" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="53"/></condition><then pos:line="28" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="17">data<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">params<pos:position pos:line="29" pos:column="29"/></name><index pos:line="29" pos:column="29">[<expr><name><name pos:line="29" pos:column="30">data<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">-&gt;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="36">params_num<pos:position pos:line="29" pos:column="46"/></name></name></expr>]<pos:position pos:line="29" pos:column="47"/></index></name> <operator pos:line="29" pos:column="48">=<pos:position pos:line="29" pos:column="49"/></operator> <name pos:line="29" pos:column="50">C_PSQL_PARAM_HOST<pos:position pos:line="29" pos:column="67"/></name></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt></block></then>
	<elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if <condition pos:line="30" pos:column="17">(<expr><literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal> <operator pos:line="30" pos:column="20">==<pos:position pos:line="30" pos:column="22"/></operator> <call><name pos:line="30" pos:column="23">strcasecmp<pos:position pos:line="30" pos:column="33"/></name> <argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">param_str<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="46">"database"<pos:position pos:line="30" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="58"/></condition><then pos:line="30" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="17">data<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">params<pos:position pos:line="31" pos:column="29"/></name><index pos:line="31" pos:column="29">[<expr><name><name pos:line="31" pos:column="30">data<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">params_num<pos:position pos:line="31" pos:column="46"/></name></name></expr>]<pos:position pos:line="31" pos:column="47"/></index></name> <operator pos:line="31" pos:column="48">=<pos:position pos:line="31" pos:column="49"/></operator> <name pos:line="31" pos:column="50">C_PSQL_PARAM_DB<pos:position pos:line="31" pos:column="65"/></name></expr>;<pos:position pos:line="31" pos:column="66"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal> <operator pos:line="32" pos:column="20">==<pos:position pos:line="32" pos:column="22"/></operator> <call><name pos:line="32" pos:column="23">strcasecmp<pos:position pos:line="32" pos:column="33"/></name> <argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">param_str<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="46">"username"<pos:position pos:line="32" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="58"/></condition><then pos:line="32" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="17">data<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">params<pos:position pos:line="33" pos:column="29"/></name><index pos:line="33" pos:column="29">[<expr><name><name pos:line="33" pos:column="30">data<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">-&gt;<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="36">params_num<pos:position pos:line="33" pos:column="46"/></name></name></expr>]<pos:position pos:line="33" pos:column="47"/></index></name> <operator pos:line="33" pos:column="48">=<pos:position pos:line="33" pos:column="49"/></operator> <name pos:line="33" pos:column="50">C_PSQL_PARAM_USER<pos:position pos:line="33" pos:column="67"/></name></expr>;<pos:position pos:line="33" pos:column="68"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="34" pos:column="9">else <if pos:line="34" pos:column="14">if <condition pos:line="34" pos:column="17">(<expr><literal type="number" pos:line="34" pos:column="18">0<pos:position pos:line="34" pos:column="19"/></literal> <operator pos:line="34" pos:column="20">==<pos:position pos:line="34" pos:column="22"/></operator> <call><name pos:line="34" pos:column="23">strcasecmp<pos:position pos:line="34" pos:column="33"/></name> <argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">param_str<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="46">"interval"<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="58"/></condition><then pos:line="34" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="17">data<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">params<pos:position pos:line="35" pos:column="29"/></name><index pos:line="35" pos:column="29">[<expr><name><name pos:line="35" pos:column="30">data<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">-&gt;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="36">params_num<pos:position pos:line="35" pos:column="46"/></name></name></expr>]<pos:position pos:line="35" pos:column="47"/></index></name> <operator pos:line="35" pos:column="48">=<pos:position pos:line="35" pos:column="49"/></operator> <name pos:line="35" pos:column="50">C_PSQL_PARAM_INTERVAL<pos:position pos:line="35" pos:column="71"/></name></expr>;<pos:position pos:line="35" pos:column="72"/></expr_stmt></block></then></if></elseif>
	<else pos:line="36" pos:column="9">else <block pos:line="36" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">log_err<pos:position pos:line="37" pos:column="24"/></name> <argument_list pos:line="37" pos:column="25">(<argument><expr><literal type="string" pos:line="37" pos:column="26">"Invalid parameter \"%s\"."<pos:position pos:line="37" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="55">param_str<pos:position pos:line="37" pos:column="64"/></name></expr></argument>)<pos:position pos:line="37" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="66"/></expr_stmt>
		<return pos:line="38" pos:column="17">return <expr><literal type="number" pos:line="38" pos:column="24">1<pos:position pos:line="38" pos:column="25"/></literal></expr>;<pos:position pos:line="38" pos:column="26"/></return>
	}<pos:position pos:line="39" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="41" pos:column="9">data<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">-&gt;<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="15">params_num<pos:position pos:line="41" pos:column="25"/></name></name><operator pos:line="41" pos:column="25">++<pos:position pos:line="41" pos:column="27"/></operator></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">udb_query_set_user_data<pos:position pos:line="42" pos:column="32"/></name> <argument_list pos:line="42" pos:column="33">(<argument><expr><name pos:line="42" pos:column="34">q<pos:position pos:line="42" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="37">data<pos:position pos:line="42" pos:column="41"/></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>

	<return pos:line="44" pos:column="9">return <expr><operator pos:line="44" pos:column="16">(<pos:position pos:line="44" pos:column="17"/></operator><literal type="number" pos:line="44" pos:column="17">0<pos:position pos:line="44" pos:column="18"/></literal><operator pos:line="44" pos:column="18">)<pos:position pos:line="44" pos:column="19"/></operator></expr>;<pos:position pos:line="44" pos:column="20"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

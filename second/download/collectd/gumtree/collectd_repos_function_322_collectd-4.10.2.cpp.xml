<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_322_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mr_create<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">oconfig_item_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">ci<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">void<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier><modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">user_data<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list> <comment type="block" pos:line="1" pos:column="67">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">mr_match_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">m<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">m<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">mr_match_t<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></operator><operator pos:line="7" pos:column="26">)<pos:position pos:line="7" pos:column="27"/></operator> <call><name pos:line="7" pos:column="28">malloc<pos:position pos:line="7" pos:column="34"/></name> <argument_list pos:line="7" pos:column="35">(<argument><expr><sizeof pos:line="7" pos:column="36">sizeof <argument_list pos:line="7" pos:column="43">(<argument><expr><operator pos:line="7" pos:column="44">*<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="45">m<pos:position pos:line="7" pos:column="46"/></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="49"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">m<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">==<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
	<block pos:line="9" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">log_err<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><literal type="string" pos:line="10" pos:column="26">"mr_create: malloc failed."<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">ENOMEM<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">)<pos:position pos:line="11" pos:column="33"/></operator></expr>;<pos:position pos:line="11" pos:column="34"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">memset<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">m<pos:position pos:line="13" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">0<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="23">sizeof <argument_list pos:line="13" pos:column="30">(<argument><expr><operator pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">m<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
	
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">m<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">invert<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <literal type="number" pos:line="15" pos:column="21">0<pos:position pos:line="15" pos:column="22"/></literal></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">status<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">ci<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">children_num<pos:position pos:line="18" pos:column="41"/></name></name></expr>;<pos:position pos:line="18" pos:column="42"/></condition> <incr><expr><name pos:line="18" pos:column="43">i<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">++<pos:position pos:line="18" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="47"/></control>
	<block pos:line="19" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">oconfig_item_t<pos:position pos:line="20" pos:column="31"/></name> <modifier pos:line="20" pos:column="32">*<pos:position pos:line="20" pos:column="33"/></modifier></type><name pos:line="20" pos:column="33">child<pos:position pos:line="20" pos:column="38"/></name> <init pos:line="20" pos:column="39">= <expr><name><name pos:line="20" pos:column="41">ci<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">children<pos:position pos:line="20" pos:column="53"/></name></name> <operator pos:line="20" pos:column="54">+<pos:position pos:line="20" pos:column="55"/></operator> <name pos:line="20" pos:column="56">i<pos:position pos:line="20" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="58"/></decl_stmt>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">(<pos:position pos:line="22" pos:column="22"/></operator><call><name pos:line="22" pos:column="22">strcasecmp<pos:position pos:line="22" pos:column="32"/></name> <argument_list pos:line="22" pos:column="33">(<argument><expr><literal type="string" pos:line="22" pos:column="34">"Host"<pos:position pos:line="22" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="42">child<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">-&gt;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="49">key<pos:position pos:line="22" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call> <operator pos:line="22" pos:column="54">==<pos:position pos:line="22" pos:column="56"/></operator> <literal type="number" pos:line="22" pos:column="57">0<pos:position pos:line="22" pos:column="58"/></literal><operator pos:line="22" pos:column="58">)<pos:position pos:line="22" pos:column="59"/></operator>
				<operator pos:line="23" pos:column="33">||<pos:position pos:line="23" pos:column="35"/></operator> <operator pos:line="23" pos:column="36">(<pos:position pos:line="23" pos:column="37"/></operator><call><name pos:line="23" pos:column="37">strcasecmp<pos:position pos:line="23" pos:column="47"/></name> <argument_list pos:line="23" pos:column="48">(<argument><expr><literal type="string" pos:line="23" pos:column="49">"Hostname"<pos:position pos:line="23" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="61">child<pos:position pos:line="23" pos:column="66"/></name><operator pos:line="23" pos:column="66">-&gt;<pos:position pos:line="23" pos:column="71"/></operator><name pos:line="23" pos:column="68">key<pos:position pos:line="23" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call> <operator pos:line="23" pos:column="73">==<pos:position pos:line="23" pos:column="75"/></operator> <literal type="number" pos:line="23" pos:column="76">0<pos:position pos:line="23" pos:column="77"/></literal><operator pos:line="23" pos:column="77">)<pos:position pos:line="23" pos:column="78"/></operator></expr>)<pos:position pos:line="23" pos:column="79"/></condition><then pos:line="23" pos:column="79">
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">status<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">=<pos:position pos:line="24" pos:column="33"/></operator> <call><name pos:line="24" pos:column="34">mr_config_add_regex<pos:position pos:line="24" pos:column="53"/></name> <argument_list pos:line="24" pos:column="54">(<argument><expr><operator pos:line="24" pos:column="55">&amp;<pos:position pos:line="24" pos:column="60"/></operator><name><name pos:line="24" pos:column="56">m<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">-&gt;<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="59">host<pos:position pos:line="24" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="65">child<pos:position pos:line="24" pos:column="70"/></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt></block></then>
		<elseif pos:line="25" pos:column="17">else <if pos:line="25" pos:column="22">if <condition pos:line="25" pos:column="25">(<expr><call><name pos:line="25" pos:column="26">strcasecmp<pos:position pos:line="25" pos:column="36"/></name> <argument_list pos:line="25" pos:column="37">(<argument><expr><literal type="string" pos:line="25" pos:column="38">"Plugin"<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="48">child<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">-&gt;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="55">key<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call> <operator pos:line="25" pos:column="60">==<pos:position pos:line="25" pos:column="62"/></operator> <literal type="number" pos:line="25" pos:column="63">0<pos:position pos:line="25" pos:column="64"/></literal></expr>)<pos:position pos:line="25" pos:column="65"/></condition><then pos:line="25" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="25">status<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">=<pos:position pos:line="26" pos:column="33"/></operator> <call><name pos:line="26" pos:column="34">mr_config_add_regex<pos:position pos:line="26" pos:column="53"/></name> <argument_list pos:line="26" pos:column="54">(<argument><expr><operator pos:line="26" pos:column="55">&amp;<pos:position pos:line="26" pos:column="60"/></operator><name><name pos:line="26" pos:column="56">m<pos:position pos:line="26" pos:column="57"/></name><operator pos:line="26" pos:column="57">-&gt;<pos:position pos:line="26" pos:column="62"/></operator><name pos:line="26" pos:column="59">plugin<pos:position pos:line="26" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="67">child<pos:position pos:line="26" pos:column="72"/></name></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="74"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="27" pos:column="17">else <if pos:line="27" pos:column="22">if <condition pos:line="27" pos:column="25">(<expr><call><name pos:line="27" pos:column="26">strcasecmp<pos:position pos:line="27" pos:column="36"/></name> <argument_list pos:line="27" pos:column="37">(<argument><expr><literal type="string" pos:line="27" pos:column="38">"PluginInstance"<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="56">child<pos:position pos:line="27" pos:column="61"/></name><operator pos:line="27" pos:column="61">-&gt;<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="63">key<pos:position pos:line="27" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call> <operator pos:line="27" pos:column="68">==<pos:position pos:line="27" pos:column="70"/></operator> <literal type="number" pos:line="27" pos:column="71">0<pos:position pos:line="27" pos:column="72"/></literal></expr>)<pos:position pos:line="27" pos:column="73"/></condition><then pos:line="27" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">status<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">=<pos:position pos:line="28" pos:column="33"/></operator> <call><name pos:line="28" pos:column="34">mr_config_add_regex<pos:position pos:line="28" pos:column="53"/></name> <argument_list pos:line="28" pos:column="54">(<argument><expr><operator pos:line="28" pos:column="55">&amp;<pos:position pos:line="28" pos:column="60"/></operator><name><name pos:line="28" pos:column="56">m<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">-&gt;<pos:position pos:line="28" pos:column="62"/></operator><name pos:line="28" pos:column="59">plugin_instance<pos:position pos:line="28" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="76">child<pos:position pos:line="28" pos:column="81"/></name></expr></argument>)<pos:position pos:line="28" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="83"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="29" pos:column="17">else <if pos:line="29" pos:column="22">if <condition pos:line="29" pos:column="25">(<expr><call><name pos:line="29" pos:column="26">strcasecmp<pos:position pos:line="29" pos:column="36"/></name> <argument_list pos:line="29" pos:column="37">(<argument><expr><literal type="string" pos:line="29" pos:column="38">"Type"<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="46">child<pos:position pos:line="29" pos:column="51"/></name><operator pos:line="29" pos:column="51">-&gt;<pos:position pos:line="29" pos:column="56"/></operator><name pos:line="29" pos:column="53">key<pos:position pos:line="29" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call> <operator pos:line="29" pos:column="58">==<pos:position pos:line="29" pos:column="60"/></operator> <literal type="number" pos:line="29" pos:column="61">0<pos:position pos:line="29" pos:column="62"/></literal></expr>)<pos:position pos:line="29" pos:column="63"/></condition><then pos:line="29" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="25">status<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">=<pos:position pos:line="30" pos:column="33"/></operator> <call><name pos:line="30" pos:column="34">mr_config_add_regex<pos:position pos:line="30" pos:column="53"/></name> <argument_list pos:line="30" pos:column="54">(<argument><expr><operator pos:line="30" pos:column="55">&amp;<pos:position pos:line="30" pos:column="60"/></operator><name><name pos:line="30" pos:column="56">m<pos:position pos:line="30" pos:column="57"/></name><operator pos:line="30" pos:column="57">-&gt;<pos:position pos:line="30" pos:column="62"/></operator><name pos:line="30" pos:column="59">type<pos:position pos:line="30" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="65">child<pos:position pos:line="30" pos:column="70"/></name></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="31" pos:column="17">else <if pos:line="31" pos:column="22">if <condition pos:line="31" pos:column="25">(<expr><call><name pos:line="31" pos:column="26">strcasecmp<pos:position pos:line="31" pos:column="36"/></name> <argument_list pos:line="31" pos:column="37">(<argument><expr><literal type="string" pos:line="31" pos:column="38">"TypeInstance"<pos:position pos:line="31" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="54">child<pos:position pos:line="31" pos:column="59"/></name><operator pos:line="31" pos:column="59">-&gt;<pos:position pos:line="31" pos:column="64"/></operator><name pos:line="31" pos:column="61">key<pos:position pos:line="31" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call> <operator pos:line="31" pos:column="66">==<pos:position pos:line="31" pos:column="68"/></operator> <literal type="number" pos:line="31" pos:column="69">0<pos:position pos:line="31" pos:column="70"/></literal></expr>)<pos:position pos:line="31" pos:column="71"/></condition><then pos:line="31" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="25">status<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">=<pos:position pos:line="32" pos:column="33"/></operator> <call><name pos:line="32" pos:column="34">mr_config_add_regex<pos:position pos:line="32" pos:column="53"/></name> <argument_list pos:line="32" pos:column="54">(<argument><expr><operator pos:line="32" pos:column="55">&amp;<pos:position pos:line="32" pos:column="60"/></operator><name><name pos:line="32" pos:column="56">m<pos:position pos:line="32" pos:column="57"/></name><operator pos:line="32" pos:column="57">-&gt;<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="59">type_instance<pos:position pos:line="32" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="74">child<pos:position pos:line="32" pos:column="79"/></name></expr></argument>)<pos:position pos:line="32" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="81"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="33" pos:column="17">else <if pos:line="33" pos:column="22">if <condition pos:line="33" pos:column="25">(<expr><call><name pos:line="33" pos:column="26">strcasecmp<pos:position pos:line="33" pos:column="36"/></name> <argument_list pos:line="33" pos:column="37">(<argument><expr><literal type="string" pos:line="33" pos:column="38">"Invert"<pos:position pos:line="33" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="48">child<pos:position pos:line="33" pos:column="53"/></name><operator pos:line="33" pos:column="53">-&gt;<pos:position pos:line="33" pos:column="58"/></operator><name pos:line="33" pos:column="55">key<pos:position pos:line="33" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call> <operator pos:line="33" pos:column="60">==<pos:position pos:line="33" pos:column="62"/></operator> <literal type="number" pos:line="33" pos:column="63">0<pos:position pos:line="33" pos:column="64"/></literal></expr>)<pos:position pos:line="33" pos:column="65"/></condition><then pos:line="33" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="25">status<pos:position pos:line="34" pos:column="31"/></name> <operator pos:line="34" pos:column="32">=<pos:position pos:line="34" pos:column="33"/></operator> <call><name pos:line="34" pos:column="34">cf_util_get_boolean<pos:position pos:line="34" pos:column="53"/></name><argument_list pos:line="34" pos:column="53">(<argument><expr><name pos:line="34" pos:column="54">child<pos:position pos:line="34" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="61">&amp;<pos:position pos:line="34" pos:column="66"/></operator><name><name pos:line="34" pos:column="62">m<pos:position pos:line="34" pos:column="63"/></name><operator pos:line="34" pos:column="63">-&gt;<pos:position pos:line="34" pos:column="68"/></operator><name pos:line="34" pos:column="65">invert<pos:position pos:line="34" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt></block></then></if></elseif>
		<else pos:line="35" pos:column="17">else
		<block pos:line="36" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">log_err<pos:position pos:line="37" pos:column="32"/></name> <argument_list pos:line="37" pos:column="33">(<argument><expr><literal type="string" pos:line="37" pos:column="34">"The `%s' configuration option is not understood and "<pos:position pos:line="37" pos:column="88"/></literal>
					<literal type="string" pos:line="38" pos:column="41">"will be ignored."<pos:position pos:line="38" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="61">child<pos:position pos:line="38" pos:column="66"/></name><operator pos:line="38" pos:column="66">-&gt;<pos:position pos:line="38" pos:column="71"/></operator><name pos:line="38" pos:column="68">key<pos:position pos:line="38" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name pos:line="39" pos:column="25">status<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">=<pos:position pos:line="39" pos:column="33"/></operator> <literal type="number" pos:line="39" pos:column="34">0<pos:position pos:line="39" pos:column="35"/></literal></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></else></if>

		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">status<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">!=<pos:position pos:line="42" pos:column="30"/></operator> <literal type="number" pos:line="42" pos:column="31">0<pos:position pos:line="42" pos:column="32"/></literal></expr>)<pos:position pos:line="42" pos:column="33"/></condition><then pos:line="42" pos:column="33">
			<block type="pseudo"><break pos:line="43" pos:column="25">break;<pos:position pos:line="43" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="44" pos:column="10"/></block></for>

	<comment type="block" pos:line="46" pos:column="9">/* Additional sanity-checking */</comment>
	<while pos:line="47" pos:column="9">while <condition pos:line="47" pos:column="15">(<expr><name pos:line="47" pos:column="16">status<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">==<pos:position pos:line="47" pos:column="25"/></operator> <literal type="number" pos:line="47" pos:column="26">0<pos:position pos:line="47" pos:column="27"/></literal></expr>)<pos:position pos:line="47" pos:column="28"/></condition>
	<block pos:line="48" pos:column="9">{
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">(<pos:position pos:line="49" pos:column="22"/></operator><name><name pos:line="49" pos:column="22">m<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">-&gt;<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="25">host<pos:position pos:line="49" pos:column="29"/></name></name> <operator pos:line="49" pos:column="30">==<pos:position pos:line="49" pos:column="32"/></operator> <name pos:line="49" pos:column="33">NULL<pos:position pos:line="49" pos:column="37"/></name><operator pos:line="49" pos:column="37">)<pos:position pos:line="49" pos:column="38"/></operator>
				<operator pos:line="50" pos:column="33">&amp;&amp;<pos:position pos:line="50" pos:column="43"/></operator> <operator pos:line="50" pos:column="36">(<pos:position pos:line="50" pos:column="37"/></operator><name><name pos:line="50" pos:column="37">m<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">-&gt;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="40">plugin<pos:position pos:line="50" pos:column="46"/></name></name> <operator pos:line="50" pos:column="47">==<pos:position pos:line="50" pos:column="49"/></operator> <name pos:line="50" pos:column="50">NULL<pos:position pos:line="50" pos:column="54"/></name><operator pos:line="50" pos:column="54">)<pos:position pos:line="50" pos:column="55"/></operator>
				<operator pos:line="51" pos:column="33">&amp;&amp;<pos:position pos:line="51" pos:column="43"/></operator> <operator pos:line="51" pos:column="36">(<pos:position pos:line="51" pos:column="37"/></operator><name><name pos:line="51" pos:column="37">m<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">-&gt;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="40">plugin_instance<pos:position pos:line="51" pos:column="55"/></name></name> <operator pos:line="51" pos:column="56">==<pos:position pos:line="51" pos:column="58"/></operator> <name pos:line="51" pos:column="59">NULL<pos:position pos:line="51" pos:column="63"/></name><operator pos:line="51" pos:column="63">)<pos:position pos:line="51" pos:column="64"/></operator>
				<operator pos:line="52" pos:column="33">&amp;&amp;<pos:position pos:line="52" pos:column="43"/></operator> <operator pos:line="52" pos:column="36">(<pos:position pos:line="52" pos:column="37"/></operator><name><name pos:line="52" pos:column="37">m<pos:position pos:line="52" pos:column="38"/></name><operator pos:line="52" pos:column="38">-&gt;<pos:position pos:line="52" pos:column="43"/></operator><name pos:line="52" pos:column="40">type<pos:position pos:line="52" pos:column="44"/></name></name> <operator pos:line="52" pos:column="45">==<pos:position pos:line="52" pos:column="47"/></operator> <name pos:line="52" pos:column="48">NULL<pos:position pos:line="52" pos:column="52"/></name><operator pos:line="52" pos:column="52">)<pos:position pos:line="52" pos:column="53"/></operator>
				<operator pos:line="53" pos:column="33">&amp;&amp;<pos:position pos:line="53" pos:column="43"/></operator> <operator pos:line="53" pos:column="36">(<pos:position pos:line="53" pos:column="37"/></operator><name><name pos:line="53" pos:column="37">m<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">-&gt;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="40">type_instance<pos:position pos:line="53" pos:column="53"/></name></name> <operator pos:line="53" pos:column="54">==<pos:position pos:line="53" pos:column="56"/></operator> <name pos:line="53" pos:column="57">NULL<pos:position pos:line="53" pos:column="61"/></name><operator pos:line="53" pos:column="61">)<pos:position pos:line="53" pos:column="62"/></operator></expr>)<pos:position pos:line="53" pos:column="63"/></condition><then pos:line="53" pos:column="63">
		<block pos:line="54" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">log_err<pos:position pos:line="55" pos:column="32"/></name> <argument_list pos:line="55" pos:column="33">(<argument><expr><literal type="string" pos:line="55" pos:column="34">"No (valid) regular expressions have been configured. "<pos:position pos:line="55" pos:column="89"/></literal>
					<literal type="string" pos:line="56" pos:column="41">"This match will be ignored."<pos:position pos:line="56" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><name pos:line="57" pos:column="25">status<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">=<pos:position pos:line="57" pos:column="33"/></operator> <operator pos:line="57" pos:column="34">-<pos:position pos:line="57" pos:column="35"/></operator><literal type="number" pos:line="57" pos:column="35">1<pos:position pos:line="57" pos:column="36"/></literal></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if>

		<break pos:line="60" pos:column="17">break;<pos:position pos:line="60" pos:column="23"/></break>
	}<pos:position pos:line="61" pos:column="10"/></block></while>

	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">status<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">!=<pos:position pos:line="63" pos:column="22"/></operator> <literal type="number" pos:line="63" pos:column="23">0<pos:position pos:line="63" pos:column="24"/></literal></expr>)<pos:position pos:line="63" pos:column="25"/></condition><then pos:line="63" pos:column="25">
	<block pos:line="64" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="65" pos:column="17">mr_free_match<pos:position pos:line="65" pos:column="30"/></name> <argument_list pos:line="65" pos:column="31">(<argument><expr><name pos:line="65" pos:column="32">m<pos:position pos:line="65" pos:column="33"/></name></expr></argument>)<pos:position pos:line="65" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="35"/></expr_stmt>
		<return pos:line="66" pos:column="17">return <expr><operator pos:line="66" pos:column="24">(<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="25">status<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">)<pos:position pos:line="66" pos:column="32"/></operator></expr>;<pos:position pos:line="66" pos:column="33"/></return>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="69" pos:column="9">*<pos:position pos:line="69" pos:column="10"/></operator><name pos:line="69" pos:column="10">user_data<pos:position pos:line="69" pos:column="19"/></name> <operator pos:line="69" pos:column="20">=<pos:position pos:line="69" pos:column="21"/></operator> <name pos:line="69" pos:column="22">m<pos:position pos:line="69" pos:column="23"/></name></expr>;<pos:position pos:line="69" pos:column="24"/></expr_stmt>
	<return pos:line="70" pos:column="9">return <expr><operator pos:line="70" pos:column="16">(<pos:position pos:line="70" pos:column="17"/></operator><literal type="number" pos:line="70" pos:column="17">0<pos:position pos:line="70" pos:column="18"/></literal><operator pos:line="70" pos:column="18">)<pos:position pos:line="70" pos:column="19"/></operator></expr>;<pos:position pos:line="70" pos:column="20"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

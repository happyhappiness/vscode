<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1176_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">publish<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">mqtt_client_conf_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">conf<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">topic<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">void<pos:position pos:line="2" pos:column="9"/></name> <specifier pos:line="2" pos:column="10">const<pos:position pos:line="2" pos:column="15"/></specifier> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">payload<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">size_t<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">payload_len<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">status<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">pthread_mutex_lock<pos:position pos:line="6" pos:column="23"/></name> <argument_list pos:line="6" pos:column="24">(<argument><expr><operator pos:line="6" pos:column="25">&amp;<pos:position pos:line="6" pos:column="30"/></operator><name><name pos:line="6" pos:column="26">conf<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">lock<pos:position pos:line="6" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">status<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">mqtt_connect<pos:position pos:line="8" pos:column="26"/></name> <argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">conf<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">status<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">!=<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">pthread_mutex_unlock<pos:position pos:line="10" pos:column="29"/></name> <argument_list pos:line="10" pos:column="30">(<argument><expr><operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><name><name pos:line="10" pos:column="32">conf<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">lock<pos:position pos:line="10" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ERROR<pos:position pos:line="11" pos:column="14"/></name> <argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="string" pos:line="11" pos:column="16">"mqtt plugin: unable to reconnect to broker"<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">status<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">)<pos:position pos:line="12" pos:column="24"/></operator></expr>;<pos:position pos:line="12" pos:column="25"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">status<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">mosquitto_publish<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name><name pos:line="15" pos:column="32">conf<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">mosq<pos:position pos:line="15" pos:column="42"/></name></name></expr></argument>, <comment type="block" pos:line="15" pos:column="44">/* message_id */</comment> <argument><expr><name pos:line="15" pos:column="61">NULL<pos:position pos:line="15" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="67">topic<pos:position pos:line="15" pos:column="72"/></name></expr></argument>,
<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">LIBMOSQUITTO_MAJOR<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">==<pos:position pos:line="16" pos:column="26"/></operator> <literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr></cpp:if>
            <argument><expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">uint32_t<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">)<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">payload_len<pos:position pos:line="17" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="37">payload<pos:position pos:line="17" pos:column="44"/></name></expr></argument>,
<cpp:else pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">else<pos:position pos:line="18" pos:column="6"/></cpp:directive></cpp:else>
            <argument><expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">int<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">)<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">payload_len<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">payload<pos:position pos:line="19" pos:column="39"/></name></expr></argument>,
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
            <argument><expr><name><name pos:line="21" pos:column="13">conf<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">qos<pos:position pos:line="21" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="24">conf<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">retain<pos:position pos:line="21" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">status<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">!=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">MOSQ_ERR_SUCCESS<pos:position pos:line="22" pos:column="35"/></name></expr>)<pos:position pos:line="22" pos:column="36"/></condition><then pos:line="22" pos:column="36">
    <block pos:line="23" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">char<pos:position pos:line="24" pos:column="13"/></name></type> <name><name pos:line="24" pos:column="14">errbuf<pos:position pos:line="24" pos:column="20"/></name><index pos:line="24" pos:column="20">[<expr><literal type="number" pos:line="24" pos:column="21">1024<pos:position pos:line="24" pos:column="25"/></literal></expr>]<pos:position pos:line="24" pos:column="26"/></index></name></decl>;<pos:position pos:line="24" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">c_complain<pos:position pos:line="25" pos:column="19"/></name> <argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">LOG_ERR<pos:position pos:line="25" pos:column="28"/></name></expr></argument>,
            <argument><expr><operator pos:line="26" pos:column="13">&amp;<pos:position pos:line="26" pos:column="18"/></operator><name><name pos:line="26" pos:column="14">conf<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">complaint_cantpublish<pos:position pos:line="26" pos:column="41"/></name></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="27" pos:column="13">"mqtt plugin: mosquitto_publish failed: %s"<pos:position pos:line="27" pos:column="56"/></literal></expr></argument>,
            <argument><expr><ternary><condition><expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">status<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">==<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">MOSQ_ERR_ERRNO<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">)<pos:position pos:line="28" pos:column="39"/></operator></expr>
            ?<pos:position pos:line="29" pos:column="14"/></condition><then pos:line="29" pos:column="14"> <expr><call><name pos:line="29" pos:column="15">sstrerror<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">errno<pos:position pos:line="29" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="32">errbuf<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="40">sizeof <argument_list pos:line="29" pos:column="47">(<argument><expr><name pos:line="29" pos:column="48">errbuf<pos:position pos:line="29" pos:column="54"/></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>
            <pos:position pos:line="30" pos:column="13"/></then><else pos:line="30" pos:column="13">: <expr><call><name pos:line="30" pos:column="15">mosquitto_strerror<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">status<pos:position pos:line="30" pos:column="40"/></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
        <comment type="block" pos:line="31" pos:column="9">/* Mark our connection "down" regardless of the error as a safety
         * measure; we will try to reconnect the next time we have to publish a
         * message */</comment>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">conf<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">connected<pos:position pos:line="34" pos:column="24"/></name></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <literal type="number" pos:line="34" pos:column="27">0<pos:position pos:line="34" pos:column="28"/></literal></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="36" pos:column="9">pthread_mutex_unlock<pos:position pos:line="36" pos:column="29"/></name> <argument_list pos:line="36" pos:column="30">(<argument><expr><operator pos:line="36" pos:column="31">&amp;<pos:position pos:line="36" pos:column="36"/></operator><name><name pos:line="36" pos:column="32">conf<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">-&gt;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="38">lock<pos:position pos:line="36" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><operator pos:line="37" pos:column="17">-<pos:position pos:line="37" pos:column="18"/></operator><literal type="number" pos:line="37" pos:column="18">1<pos:position pos:line="37" pos:column="19"/></literal><operator pos:line="37" pos:column="19">)<pos:position pos:line="37" pos:column="20"/></operator></expr>;<pos:position pos:line="37" pos:column="21"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">pthread_mutex_unlock<pos:position pos:line="40" pos:column="25"/></name> <argument_list pos:line="40" pos:column="26">(<argument><expr><operator pos:line="40" pos:column="27">&amp;<pos:position pos:line="40" pos:column="32"/></operator><name><name pos:line="40" pos:column="28">conf<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">-&gt;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="34">lock<pos:position pos:line="40" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><literal type="number" pos:line="41" pos:column="13">0<pos:position pos:line="41" pos:column="14"/></literal><operator pos:line="41" pos:column="14">)<pos:position pos:line="41" pos:column="15"/></operator></expr>;<pos:position pos:line="41" pos:column="16"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1641_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rrd_init<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list> <block pos:line="1" pos:column="27">{
  <decl_stmt><decl><specifier pos:line="2" pos:column="3">static<pos:position pos:line="2" pos:column="9"/></specifier> <type><name pos:line="2" pos:column="10">int<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">init_once<pos:position pos:line="2" pos:column="23"/></name> <init pos:line="2" pos:column="24">= <expr><literal type="number" pos:line="2" pos:column="26">0<pos:position pos:line="2" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">init_once<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">!=<pos:position pos:line="5" pos:column="19"/></operator> <literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal></expr>)<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal><operator pos:line="6" pos:column="14">)<pos:position pos:line="6" pos:column="15"/></operator></expr>;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="7" pos:column="3">init_once<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <literal type="number" pos:line="7" pos:column="15">1<pos:position pos:line="7" pos:column="16"/></literal></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">rrdcreate_config<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">.<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">heartbeat<pos:position pos:line="9" pos:column="33"/></name></name> <operator pos:line="9" pos:column="34">&lt;=<pos:position pos:line="9" pos:column="39"/></operator> <literal type="number" pos:line="9" pos:column="37">0<pos:position pos:line="9" pos:column="38"/></literal></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="5">rrdcreate_config<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">heartbeat<pos:position pos:line="10" pos:column="31"/></name></name> <operator pos:line="10" pos:column="32">=<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="34">2<pos:position pos:line="10" pos:column="35"/></literal> <operator pos:line="10" pos:column="36">*<pos:position pos:line="10" pos:column="37"/></operator> <name><name pos:line="10" pos:column="38">rrdcreate_config<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">.<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="55">stepsize<pos:position pos:line="10" pos:column="63"/></name></name></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* Set the cache up */</comment>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">pthread_mutex_lock<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><operator pos:line="13" pos:column="22">&amp;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="23">cache_lock<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">cache<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">c_avl_create<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><call><call><name pos:line="15" pos:column="25">int<pos:position pos:line="15" pos:column="28"/></name> <argument_list pos:line="15" pos:column="29">(<argument><expr><operator pos:line="15" pos:column="30">*<pos:position pos:line="15" pos:column="31"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call><argument_list pos:line="15" pos:column="32">(<argument><expr><specifier pos:line="15" pos:column="33">const<pos:position pos:line="15" pos:column="38"/></specifier> <name pos:line="15" pos:column="39">void<pos:position pos:line="15" pos:column="43"/></name> <operator pos:line="15" pos:column="44">*<pos:position pos:line="15" pos:column="45"/></operator></expr></argument>, <argument><expr><specifier pos:line="15" pos:column="47">const<pos:position pos:line="15" pos:column="52"/></specifier> <name pos:line="15" pos:column="53">void<pos:position pos:line="15" pos:column="57"/></name> <operator pos:line="15" pos:column="58">*<pos:position pos:line="15" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call><operator pos:line="15" pos:column="60">)<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="61">strcmp<pos:position pos:line="15" pos:column="67"/></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="69"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">cache<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">==<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>)<pos:position pos:line="16" pos:column="21"/></condition><then pos:line="16" pos:column="21"> <block pos:line="16" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">pthread_mutex_unlock<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="27">cache_lock<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"rrdtool plugin: c_avl_create failed."<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">cache_flush_last<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <call><name pos:line="22" pos:column="22">cdtime<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">()<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">cache_timeout<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">==<pos:position pos:line="23" pos:column="23"/></operator> <literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26"> <block pos:line="23" pos:column="27">{
    <expr_stmt><expr><name pos:line="24" pos:column="5">cache_flush_timeout<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <literal type="number" pos:line="24" pos:column="27">0<pos:position pos:line="24" pos:column="28"/></literal></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then> <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><name pos:line="25" pos:column="14">cache_flush_timeout<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">&lt;<pos:position pos:line="25" pos:column="38"/></operator> <name pos:line="25" pos:column="36">cache_timeout<pos:position pos:line="25" pos:column="49"/></name></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50">
    <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="5">cache_flush_timeout<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <literal type="number" pos:line="26" pos:column="27">10<pos:position pos:line="26" pos:column="29"/></literal> <operator pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="32">cache_timeout<pos:position pos:line="26" pos:column="45"/></name></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">pthread_mutex_unlock<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><operator pos:line="28" pos:column="24">&amp;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="25">cache_lock<pos:position pos:line="28" pos:column="35"/></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name pos:line="30" pos:column="3">status<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator>
      <call><name pos:line="31" pos:column="7">plugin_thread_create<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><operator pos:line="31" pos:column="28">&amp;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="29">queue_thread<pos:position pos:line="31" pos:column="41"/></name></expr></argument>, <comment type="block" pos:line="31" pos:column="43">/* attr = */</comment> <argument><expr><name pos:line="31" pos:column="56">NULL<pos:position pos:line="31" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="62">rrd_queue_thread<pos:position pos:line="31" pos:column="78"/></name></expr></argument>,
                           <comment type="block" pos:line="32" pos:column="28">/* args = */</comment> <argument><expr><name pos:line="32" pos:column="41">NULL<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="47">"rrdtool queue"<pos:position pos:line="32" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">!=<pos:position pos:line="33" pos:column="16"/></operator> <literal type="number" pos:line="33" pos:column="17">0<pos:position pos:line="33" pos:column="18"/></literal></expr>)<pos:position pos:line="33" pos:column="19"/></condition><then pos:line="33" pos:column="19"> <block pos:line="33" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><literal type="string" pos:line="34" pos:column="11">"rrdtool plugin: Cannot create queue-thread."<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><operator pos:line="35" pos:column="13">-<pos:position pos:line="35" pos:column="14"/></operator><literal type="number" pos:line="35" pos:column="14">1<pos:position pos:line="35" pos:column="15"/></literal><operator pos:line="35" pos:column="15">)<pos:position pos:line="35" pos:column="16"/></operator></expr>;<pos:position pos:line="35" pos:column="17"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="37" pos:column="3">queue_thread_running<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <literal type="number" pos:line="37" pos:column="26">1<pos:position pos:line="37" pos:column="27"/></literal></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="39" pos:column="3">DEBUG<pos:position pos:line="39" pos:column="8"/></name><argument_list pos:line="39" pos:column="8">(<argument><expr><literal type="string" pos:line="39" pos:column="9">"rrdtool plugin: rrd_init: datadir = %s; stepsize = %lu;"<pos:position pos:line="39" pos:column="66"/></literal>
        <literal type="string" pos:line="40" pos:column="9">" heartbeat = %i; rrarows = %i; xff = %lf;"<pos:position pos:line="40" pos:column="52"/></literal></expr></argument>,
        <argument><expr><ternary><condition><expr><operator pos:line="41" pos:column="9">(<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">datadir<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">==<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">NULL<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">)<pos:position pos:line="41" pos:column="26"/></operator></expr> ?<pos:position pos:line="41" pos:column="28"/></condition><then pos:line="41" pos:column="28"> <expr><literal type="string" pos:line="41" pos:column="29">"(null)"<pos:position pos:line="41" pos:column="37"/></literal></expr> <pos:position pos:line="41" pos:column="38"/></then><else pos:line="41" pos:column="38">: <expr><name pos:line="41" pos:column="40">datadir<pos:position pos:line="41" pos:column="47"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="49">rrdcreate_config<pos:position pos:line="41" pos:column="65"/></name><operator pos:line="41" pos:column="65">.<pos:position pos:line="41" pos:column="66"/></operator><name pos:line="41" pos:column="66">stepsize<pos:position pos:line="41" pos:column="74"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="42" pos:column="9">rrdcreate_config<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">.<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="26">heartbeat<pos:position pos:line="42" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="37">rrdcreate_config<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">.<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="54">rrarows<pos:position pos:line="42" pos:column="61"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="43" pos:column="9">rrdcreate_config<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">.<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="26">xff<pos:position pos:line="43" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>

  <return pos:line="45" pos:column="3">return <expr><operator pos:line="45" pos:column="10">(<pos:position pos:line="45" pos:column="11"/></operator><literal type="number" pos:line="45" pos:column="11">0<pos:position pos:line="45" pos:column="12"/></literal><operator pos:line="45" pos:column="12">)<pos:position pos:line="45" pos:column="13"/></operator></expr>;<pos:position pos:line="45" pos:column="14"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

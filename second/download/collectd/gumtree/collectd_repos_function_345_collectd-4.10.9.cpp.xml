<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_345_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_config_add_host_collect<pos:position pos:line="1" pos:column="41"/></name> <parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">host_definition_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">host<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">oconfig_item_t<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">ci<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">data_definition_t<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">data<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">data_definition_t<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier><modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">data_list<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">data_list_len<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">ci<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">values_num<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">&lt;<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">WARNING<pos:position pos:line="11" pos:column="12"/></name> <argument_list pos:line="11" pos:column="13">(<argument><expr><literal type="string" pos:line="11" pos:column="14">"snmp plugin: `Collect' needs at least one argument."<pos:position pos:line="11" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="69"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <for pos:line="15" pos:column="3">for <control pos:line="15" pos:column="7">(<init><expr><name pos:line="15" pos:column="8">i<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></init> <condition><expr><name pos:line="15" pos:column="15">i<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&lt;<pos:position pos:line="15" pos:column="21"/></operator> <name><name pos:line="15" pos:column="19">ci<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">values_num<pos:position pos:line="15" pos:column="33"/></name></name></expr>;<pos:position pos:line="15" pos:column="34"/></condition> <incr><expr><name pos:line="15" pos:column="35">i<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">++<pos:position pos:line="15" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="39"/></control>
    <block type="pseudo"><if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">ci<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">values<pos:position pos:line="16" pos:column="19"/></name><index pos:line="16" pos:column="19">[<expr><name pos:line="16" pos:column="20">i<pos:position pos:line="16" pos:column="21"/></name></expr>]<pos:position pos:line="16" pos:column="22"/></index></name><operator pos:line="16" pos:column="22">.<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">type<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">!=<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="31">OCONFIG_TYPE_STRING<pos:position pos:line="16" pos:column="50"/></name></expr>)<pos:position pos:line="16" pos:column="51"/></condition><then pos:line="16" pos:column="51">
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">WARNING<pos:position pos:line="18" pos:column="14"/></name> <argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="string" pos:line="18" pos:column="16">"snmp plugin: All arguments to `Collect' must be strings."<pos:position pos:line="18" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="76"/></expr_stmt>
      <return pos:line="19" pos:column="7">return <expr><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><operator pos:line="19" pos:column="15">-<pos:position pos:line="19" pos:column="16"/></operator><literal type="number" pos:line="19" pos:column="16">1<pos:position pos:line="19" pos:column="17"/></literal><operator pos:line="19" pos:column="17">)<pos:position pos:line="19" pos:column="18"/></operator></expr>;<pos:position pos:line="19" pos:column="19"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if></block></for>

  <expr_stmt><expr><name pos:line="22" pos:column="3">data_list_len<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name><name pos:line="22" pos:column="19">host<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">data_list_len<pos:position pos:line="22" pos:column="38"/></name></name> <operator pos:line="22" pos:column="39">+<pos:position pos:line="22" pos:column="40"/></operator> <name><name pos:line="22" pos:column="41">ci<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">-&gt;<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="45">values_num<pos:position pos:line="22" pos:column="55"/></name></name></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">data_list<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <operator pos:line="23" pos:column="15">(<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">data_definition_t<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">*<pos:position pos:line="23" pos:column="35"/></operator><operator pos:line="23" pos:column="35">*<pos:position pos:line="23" pos:column="36"/></operator><operator pos:line="23" pos:column="36">)<pos:position pos:line="23" pos:column="37"/></operator> <call><name pos:line="23" pos:column="38">realloc<pos:position pos:line="23" pos:column="45"/></name> <argument_list pos:line="23" pos:column="46">(<argument><expr><name><name pos:line="23" pos:column="47">host<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">-&gt;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="53">data_list<pos:position pos:line="23" pos:column="62"/></name></name></expr></argument>,
      <argument><expr><sizeof pos:line="24" pos:column="7">sizeof <argument_list pos:line="24" pos:column="14">(<argument><expr><name pos:line="24" pos:column="15">data_definition_t<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">*<pos:position pos:line="24" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></sizeof> <operator pos:line="24" pos:column="36">*<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="38">data_list_len<pos:position pos:line="24" pos:column="51"/></name></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">data_list<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">==<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">NULL<pos:position pos:line="25" pos:column="24"/></name></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">(<pos:position pos:line="26" pos:column="13"/></operator><operator pos:line="26" pos:column="13">-<pos:position pos:line="26" pos:column="14"/></operator><literal type="number" pos:line="26" pos:column="14">1<pos:position pos:line="26" pos:column="15"/></literal><operator pos:line="26" pos:column="15">)<pos:position pos:line="26" pos:column="16"/></operator></expr>;<pos:position pos:line="26" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">host<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">data_list<pos:position pos:line="27" pos:column="18"/></name></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">data_list<pos:position pos:line="27" pos:column="30"/></name></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>

  <for pos:line="29" pos:column="3">for <control pos:line="29" pos:column="7">(<init><expr><name pos:line="29" pos:column="8">i<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <literal type="number" pos:line="29" pos:column="12">0<pos:position pos:line="29" pos:column="13"/></literal></expr>;<pos:position pos:line="29" pos:column="14"/></init> <condition><expr><name pos:line="29" pos:column="15">i<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">&lt;<pos:position pos:line="29" pos:column="21"/></operator> <name><name pos:line="29" pos:column="19">ci<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">values_num<pos:position pos:line="29" pos:column="33"/></name></name></expr>;<pos:position pos:line="29" pos:column="34"/></condition> <incr><expr><name pos:line="29" pos:column="35">i<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">++<pos:position pos:line="29" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="39"/></control>
  <block pos:line="30" pos:column="3">{
    <for pos:line="31" pos:column="5">for <control pos:line="31" pos:column="9">(<init><expr><name pos:line="31" pos:column="10">data<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">data_head<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></init> <condition><expr><name pos:line="31" pos:column="28">data<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">!=<pos:position pos:line="31" pos:column="35"/></operator> <name pos:line="31" pos:column="36">NULL<pos:position pos:line="31" pos:column="40"/></name></expr>;<pos:position pos:line="31" pos:column="41"/></condition> <incr><expr><name pos:line="31" pos:column="42">data<pos:position pos:line="31" pos:column="46"/></name> <operator pos:line="31" pos:column="47">=<pos:position pos:line="31" pos:column="48"/></operator> <name><name pos:line="31" pos:column="49">data<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">-&gt;<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="55">next<pos:position pos:line="31" pos:column="59"/></name></name></expr></incr>)<pos:position pos:line="31" pos:column="60"/></control>
      <block type="pseudo"><if pos:line="32" pos:column="7">if <condition pos:line="32" pos:column="10">(<expr><call><name pos:line="32" pos:column="11">strcasecmp<pos:position pos:line="32" pos:column="21"/></name> <argument_list pos:line="32" pos:column="22">(<argument><expr><name><name pos:line="32" pos:column="23">ci<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">values<pos:position pos:line="32" pos:column="33"/></name><index pos:line="32" pos:column="33">[<expr><name pos:line="32" pos:column="34">i<pos:position pos:line="32" pos:column="35"/></name></expr>]<pos:position pos:line="32" pos:column="36"/></index></name><operator pos:line="32" pos:column="36">.<pos:position pos:line="32" pos:column="37"/></operator><name><name pos:line="32" pos:column="37">value<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">.<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="43">string<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="51">data<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">-&gt;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="57">name<pos:position pos:line="32" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call> <operator pos:line="32" pos:column="63">==<pos:position pos:line="32" pos:column="65"/></operator> <literal type="number" pos:line="32" pos:column="66">0<pos:position pos:line="32" pos:column="67"/></literal></expr>)<pos:position pos:line="32" pos:column="68"/></condition><then pos:line="32" pos:column="68">
        <block type="pseudo"><break pos:line="33" pos:column="9">break;<pos:position pos:line="33" pos:column="15"/></break></block></then></if></block></for>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">data<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">==<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">NULL<pos:position pos:line="35" pos:column="21"/></name></expr>)<pos:position pos:line="35" pos:column="22"/></condition><then pos:line="35" pos:column="22">
    <block pos:line="36" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">WARNING<pos:position pos:line="37" pos:column="14"/></name> <argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="string" pos:line="37" pos:column="16">"snmp plugin: No such data configured: `%s'"<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="38" pos:column="11">ci<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">values<pos:position pos:line="38" pos:column="21"/></name><index pos:line="38" pos:column="21">[<expr><name pos:line="38" pos:column="22">i<pos:position pos:line="38" pos:column="23"/></name></expr>]<pos:position pos:line="38" pos:column="24"/></index></name><operator pos:line="38" pos:column="24">.<pos:position pos:line="38" pos:column="25"/></operator><name><name pos:line="38" pos:column="25">value<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">.<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">string<pos:position pos:line="38" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>
      <continue pos:line="39" pos:column="7">continue;<pos:position pos:line="39" pos:column="16"/></continue>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">DEBUG<pos:position pos:line="42" pos:column="10"/></name> <argument_list pos:line="42" pos:column="11">(<argument><expr><literal type="string" pos:line="42" pos:column="12">"snmp plugin: Collect: host = %s, data[%i] = %s;"<pos:position pos:line="42" pos:column="61"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="43" pos:column="9">host<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">name<pos:position pos:line="43" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="21">host<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">-&gt;<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="27">data_list_len<pos:position pos:line="43" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="42">data<pos:position pos:line="43" pos:column="46"/></name><operator pos:line="43" pos:column="46">-&gt;<pos:position pos:line="43" pos:column="51"/></operator><name pos:line="43" pos:column="48">name<pos:position pos:line="43" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="45" pos:column="5">host<pos:position pos:line="45" pos:column="9"/></name><operator pos:line="45" pos:column="9">-&gt;<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="11">data_list<pos:position pos:line="45" pos:column="20"/></name><index pos:line="45" pos:column="20">[<expr><name><name pos:line="45" pos:column="21">host<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">-&gt;<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="27">data_list_len<pos:position pos:line="45" pos:column="40"/></name></name></expr>]<pos:position pos:line="45" pos:column="41"/></index></name> <operator pos:line="45" pos:column="42">=<pos:position pos:line="45" pos:column="43"/></operator> <name pos:line="45" pos:column="44">data<pos:position pos:line="45" pos:column="48"/></name></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">host<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">-&gt;<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="11">data_list_len<pos:position pos:line="46" pos:column="24"/></name></name><operator pos:line="46" pos:column="24">++<pos:position pos:line="46" pos:column="26"/></operator></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></for> <comment type="block" pos:line="47" pos:column="5">/* for (values_num) */</comment>

  <return pos:line="49" pos:column="3">return <expr><operator pos:line="49" pos:column="10">(<pos:position pos:line="49" pos:column="11"/></operator><literal type="number" pos:line="49" pos:column="11">0<pos:position pos:line="49" pos:column="12"/></literal><operator pos:line="49" pos:column="12">)<pos:position pos:line="49" pos:column="13"/></operator></expr>;<pos:position pos:line="49" pos:column="14"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

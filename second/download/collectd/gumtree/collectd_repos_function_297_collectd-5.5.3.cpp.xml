<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_297_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">kafka_config<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">oconfig_item_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">ci<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list> <comment type="block" pos:line="1" pos:column="45">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type>                          <name pos:line="3" pos:column="38">i<pos:position pos:line="3" pos:column="39"/></name></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">oconfig_item_t<pos:position pos:line="4" pos:column="23"/></name>              <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier></type><name pos:line="4" pos:column="38">child<pos:position pos:line="4" pos:column="43"/></name></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">rd_kafka_conf_t<pos:position pos:line="5" pos:column="20"/></name>             <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">conf<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">rd_kafka_conf_res_t<pos:position pos:line="6" pos:column="24"/></name></type>          <name pos:line="6" pos:column="34">ret<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type>                         <name><name pos:line="7" pos:column="34">errbuf<pos:position pos:line="7" pos:column="40"/></name><index pos:line="7" pos:column="40">[<expr><literal type="number" pos:line="7" pos:column="41">1024<pos:position pos:line="7" pos:column="45"/></literal></expr>]<pos:position pos:line="7" pos:column="46"/></index></name></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">conf<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name pos:line="9" pos:column="17">rd_kafka_conf_new<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">()<pos:position pos:line="9" pos:column="36"/></argument_list></call><operator pos:line="9" pos:column="36">)<pos:position pos:line="9" pos:column="37"/></operator> <operator pos:line="9" pos:column="38">==<pos:position pos:line="9" pos:column="40"/></operator> <name pos:line="9" pos:column="41">NULL<pos:position pos:line="9" pos:column="45"/></name></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46"> <block pos:line="9" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">WARNING<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><literal type="string" pos:line="10" pos:column="17">"cannot allocate kafka configuration."<pos:position pos:line="10" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">-<pos:position pos:line="11" pos:column="17"/></operator><literal type="number" pos:line="11" pos:column="17">1<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name><name pos:line="13" pos:column="25">ci<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">children_num<pos:position pos:line="13" pos:column="41"/></name></name></expr>;<pos:position pos:line="13" pos:column="42"/></condition> <incr><expr><name pos:line="13" pos:column="43">i<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">++<pos:position pos:line="13" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="47"/></control>  <block pos:line="13" pos:column="49">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">child<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <operator pos:line="14" pos:column="25">&amp;<pos:position pos:line="14" pos:column="30"/></operator><name><name pos:line="14" pos:column="26">ci<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">children<pos:position pos:line="14" pos:column="38"/></name><index pos:line="14" pos:column="38">[<expr><name pos:line="14" pos:column="39">i<pos:position pos:line="14" pos:column="40"/></name></expr>]<pos:position pos:line="14" pos:column="41"/></index></name></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">strcasecmp<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><literal type="string" pos:line="16" pos:column="32">"Topic"<pos:position pos:line="16" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="41">child<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">-&gt;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="48">key<pos:position pos:line="16" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call> <operator pos:line="16" pos:column="53">==<pos:position pos:line="16" pos:column="55"/></operator> <literal type="number" pos:line="16" pos:column="56">0<pos:position pos:line="16" pos:column="57"/></literal></expr>)<pos:position pos:line="16" pos:column="58"/></condition><then pos:line="16" pos:column="58"> <block pos:line="16" pos:column="59">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">kafka_config_topic<pos:position pos:line="17" pos:column="43"/></name> <argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">conf<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">child<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></then> <elseif pos:line="18" pos:column="19">else <if pos:line="18" pos:column="24">if <condition pos:line="18" pos:column="27">(<expr><call><name pos:line="18" pos:column="28">strcasecmp<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name><name pos:line="18" pos:column="39">child<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">-&gt;<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="46">key<pos:position pos:line="18" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="51">"Property"<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call> <operator pos:line="18" pos:column="63">==<pos:position pos:line="18" pos:column="65"/></operator> <literal type="number" pos:line="18" pos:column="66">0<pos:position pos:line="18" pos:column="67"/></literal></expr>)<pos:position pos:line="18" pos:column="68"/></condition><then pos:line="18" pos:column="68"> <block pos:line="18" pos:column="69">{
			<decl_stmt><decl><type><name pos:line="19" pos:column="25">char<pos:position pos:line="19" pos:column="29"/></name> <modifier pos:line="19" pos:column="30">*<pos:position pos:line="19" pos:column="31"/></modifier></type><name pos:line="19" pos:column="31">key<pos:position pos:line="19" pos:column="34"/></name> <init pos:line="19" pos:column="35">= <expr><name pos:line="19" pos:column="37">NULL<pos:position pos:line="19" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="42"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="20" pos:column="25">char<pos:position pos:line="20" pos:column="29"/></name> <modifier pos:line="20" pos:column="30">*<pos:position pos:line="20" pos:column="31"/></modifier></type><name pos:line="20" pos:column="31">val<pos:position pos:line="20" pos:column="34"/></name> <init pos:line="20" pos:column="35">= <expr><name pos:line="20" pos:column="37">NULL<pos:position pos:line="20" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="42"/></decl_stmt>

			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name><name pos:line="22" pos:column="29">child<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">values_num<pos:position pos:line="22" pos:column="46"/></name></name> <operator pos:line="22" pos:column="47">!=<pos:position pos:line="22" pos:column="49"/></operator> <literal type="number" pos:line="22" pos:column="50">2<pos:position pos:line="22" pos:column="51"/></literal></expr>)<pos:position pos:line="22" pos:column="52"/></condition><then pos:line="22" pos:column="52"> <block pos:line="22" pos:column="53">{
				<expr_stmt><expr><call><name pos:line="23" pos:column="33">WARNING<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><literal type="string" pos:line="23" pos:column="41">"kafka properties need both a key and a value."<pos:position pos:line="23" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="90"/></expr_stmt>
                <goto pos:line="24" pos:column="17">goto <name pos:line="24" pos:column="22">errout<pos:position pos:line="24" pos:column="28"/></name>;<pos:position pos:line="24" pos:column="29"/></goto>
			}<pos:position pos:line="25" pos:column="26"/></block></then></if>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><name><name pos:line="26" pos:column="29">child<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">values<pos:position pos:line="26" pos:column="42"/></name><index pos:line="26" pos:column="42">[<expr><literal type="number" pos:line="26" pos:column="43">0<pos:position pos:line="26" pos:column="44"/></literal></expr>]<pos:position pos:line="26" pos:column="45"/></index></name><operator pos:line="26" pos:column="45">.<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="46">type<pos:position pos:line="26" pos:column="50"/></name> <operator pos:line="26" pos:column="51">!=<pos:position pos:line="26" pos:column="53"/></operator> <name pos:line="26" pos:column="54">OCONFIG_TYPE_STRING<pos:position pos:line="26" pos:column="73"/></name> <operator pos:line="26" pos:column="74">||<pos:position pos:line="26" pos:column="76"/></operator>
			    <name><name pos:line="27" pos:column="29">child<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">-&gt;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="36">values<pos:position pos:line="27" pos:column="42"/></name><index pos:line="27" pos:column="42">[<expr><literal type="number" pos:line="27" pos:column="43">1<pos:position pos:line="27" pos:column="44"/></literal></expr>]<pos:position pos:line="27" pos:column="45"/></index></name><operator pos:line="27" pos:column="45">.<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">type<pos:position pos:line="27" pos:column="50"/></name> <operator pos:line="27" pos:column="51">!=<pos:position pos:line="27" pos:column="53"/></operator> <name pos:line="27" pos:column="54">OCONFIG_TYPE_STRING<pos:position pos:line="27" pos:column="73"/></name></expr>)<pos:position pos:line="27" pos:column="74"/></condition><then pos:line="27" pos:column="74"> <block pos:line="27" pos:column="75">{
				<expr_stmt><expr><call><name pos:line="28" pos:column="33">WARNING<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><literal type="string" pos:line="28" pos:column="41">"kafka properties needs string arguments."<pos:position pos:line="28" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="85"/></expr_stmt>
                <goto pos:line="29" pos:column="17">goto <name pos:line="29" pos:column="22">errout<pos:position pos:line="29" pos:column="28"/></name>;<pos:position pos:line="29" pos:column="29"/></goto>
			}<pos:position pos:line="30" pos:column="26"/></block></then></if>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><operator pos:line="31" pos:column="29">(<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="30">key<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">=<pos:position pos:line="31" pos:column="35"/></operator> <call><name pos:line="31" pos:column="36">strdup<pos:position pos:line="31" pos:column="42"/></name><argument_list pos:line="31" pos:column="42">(<argument><expr><name><name pos:line="31" pos:column="43">child<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">-&gt;<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="50">values<pos:position pos:line="31" pos:column="56"/></name><index pos:line="31" pos:column="56">[<expr><literal type="number" pos:line="31" pos:column="57">0<pos:position pos:line="31" pos:column="58"/></literal></expr>]<pos:position pos:line="31" pos:column="59"/></index></name><operator pos:line="31" pos:column="59">.<pos:position pos:line="31" pos:column="60"/></operator><name><name pos:line="31" pos:column="60">value<pos:position pos:line="31" pos:column="65"/></name><operator pos:line="31" pos:column="65">.<pos:position pos:line="31" pos:column="66"/></operator><name pos:line="31" pos:column="66">string<pos:position pos:line="31" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call><operator pos:line="31" pos:column="73">)<pos:position pos:line="31" pos:column="74"/></operator> <operator pos:line="31" pos:column="75">==<pos:position pos:line="31" pos:column="77"/></operator> <name pos:line="31" pos:column="78">NULL<pos:position pos:line="31" pos:column="82"/></name></expr>)<pos:position pos:line="31" pos:column="83"/></condition><then pos:line="31" pos:column="83"> <block pos:line="31" pos:column="84">{
				<expr_stmt><expr><call><name pos:line="32" pos:column="33">WARNING<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><literal type="string" pos:line="32" pos:column="41">"cannot allocate memory for attribute key."<pos:position pos:line="32" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="86"/></expr_stmt>
                <goto pos:line="33" pos:column="17">goto <name pos:line="33" pos:column="22">errout<pos:position pos:line="33" pos:column="28"/></name>;<pos:position pos:line="33" pos:column="29"/></goto>
			}<pos:position pos:line="34" pos:column="26"/></block></then></if>
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><operator pos:line="35" pos:column="29">(<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">val<pos:position pos:line="35" pos:column="33"/></name> <operator pos:line="35" pos:column="34">=<pos:position pos:line="35" pos:column="35"/></operator> <call><name pos:line="35" pos:column="36">strdup<pos:position pos:line="35" pos:column="42"/></name><argument_list pos:line="35" pos:column="42">(<argument><expr><name><name pos:line="35" pos:column="43">child<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">-&gt;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="50">values<pos:position pos:line="35" pos:column="56"/></name><index pos:line="35" pos:column="56">[<expr><literal type="number" pos:line="35" pos:column="57">1<pos:position pos:line="35" pos:column="58"/></literal></expr>]<pos:position pos:line="35" pos:column="59"/></index></name><operator pos:line="35" pos:column="59">.<pos:position pos:line="35" pos:column="60"/></operator><name><name pos:line="35" pos:column="60">value<pos:position pos:line="35" pos:column="65"/></name><operator pos:line="35" pos:column="65">.<pos:position pos:line="35" pos:column="66"/></operator><name pos:line="35" pos:column="66">string<pos:position pos:line="35" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call><operator pos:line="35" pos:column="73">)<pos:position pos:line="35" pos:column="74"/></operator> <operator pos:line="35" pos:column="75">==<pos:position pos:line="35" pos:column="77"/></operator> <name pos:line="35" pos:column="78">NULL<pos:position pos:line="35" pos:column="82"/></name></expr>)<pos:position pos:line="35" pos:column="83"/></condition><then pos:line="35" pos:column="83"> <block pos:line="35" pos:column="84">{
				<expr_stmt><expr><call><name pos:line="36" pos:column="33">WARNING<pos:position pos:line="36" pos:column="40"/></name><argument_list pos:line="36" pos:column="40">(<argument><expr><literal type="string" pos:line="36" pos:column="41">"cannot allocate memory for attribute value."<pos:position pos:line="36" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="88"/></expr_stmt>
                <goto pos:line="37" pos:column="17">goto <name pos:line="37" pos:column="22">errout<pos:position pos:line="37" pos:column="28"/></name>;<pos:position pos:line="37" pos:column="29"/></goto>
			}<pos:position pos:line="38" pos:column="26"/></block></then></if>
            <expr_stmt><expr><name pos:line="39" pos:column="13">ret<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <call><name pos:line="39" pos:column="19">rd_kafka_conf_set<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><name pos:line="39" pos:column="37">conf<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">key<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="48">val<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="53">errbuf<pos:position pos:line="39" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="61">sizeof<argument_list pos:line="39" pos:column="67">(<argument><expr><name pos:line="39" pos:column="68">errbuf<pos:position pos:line="39" pos:column="74"/></name></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="77"/></expr_stmt>
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><name pos:line="40" pos:column="17">ret<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">!=<pos:position pos:line="40" pos:column="23"/></operator> <name pos:line="40" pos:column="24">RD_KAFKA_CONF_OK<pos:position pos:line="40" pos:column="40"/></name></expr>)<pos:position pos:line="40" pos:column="41"/></condition><then pos:line="40" pos:column="41"> <block pos:line="40" pos:column="42">{
                <expr_stmt><expr><call><name pos:line="41" pos:column="17">WARNING<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><literal type="string" pos:line="41" pos:column="25">"cannot set kafka property %s to %s: %s"<pos:position pos:line="41" pos:column="65"/></literal></expr></argument>,
                        <argument><expr><name pos:line="42" pos:column="25">key<pos:position pos:line="42" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="30">val<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">errbuf<pos:position pos:line="42" pos:column="41"/></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
                <goto pos:line="43" pos:column="17">goto <name pos:line="43" pos:column="22">errout<pos:position pos:line="43" pos:column="28"/></name>;<pos:position pos:line="43" pos:column="29"/></goto>
            }<pos:position pos:line="44" pos:column="14"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">sfree<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">key<pos:position pos:line="45" pos:column="34"/></name></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">sfree<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">val<pos:position pos:line="46" pos:column="34"/></name></expr></argument>)<pos:position pos:line="46" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if></elseif> <else pos:line="47" pos:column="19">else <block pos:line="47" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">WARNING<pos:position pos:line="48" pos:column="32"/></name> <argument_list pos:line="48" pos:column="33">(<argument><expr><literal type="string" pos:line="48" pos:column="34">"write_kafka plugin: Ignoring unknown "<pos:position pos:line="48" pos:column="73"/></literal>
				 <literal type="string" pos:line="49" pos:column="34">"configuration option \"%s\" at top level."<pos:position pos:line="49" pos:column="77"/></literal></expr></argument>,
				 <argument><expr><name><name pos:line="50" pos:column="34">child<pos:position pos:line="50" pos:column="39"/></name><operator pos:line="50" pos:column="39">-&gt;<pos:position pos:line="50" pos:column="44"/></operator><name pos:line="50" pos:column="41">key<pos:position pos:line="50" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></else></if>
	}<pos:position pos:line="52" pos:column="10"/></block></for>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">conf<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">!=<pos:position pos:line="53" pos:column="16"/></operator> <name pos:line="53" pos:column="17">NULL<pos:position pos:line="53" pos:column="21"/></name></expr>)<pos:position pos:line="53" pos:column="22"/></condition><then pos:line="53" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="9">rd_kafka_conf_destroy<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">conf<pos:position pos:line="54" pos:column="35"/></name></expr></argument>)<pos:position pos:line="54" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="37"/></expr_stmt></block></then></if>
    <return pos:line="55" pos:column="5">return <expr><operator pos:line="55" pos:column="12">(<pos:position pos:line="55" pos:column="13"/></operator><literal type="number" pos:line="55" pos:column="13">0<pos:position pos:line="55" pos:column="14"/></literal><operator pos:line="55" pos:column="14">)<pos:position pos:line="55" pos:column="15"/></operator></expr>;<pos:position pos:line="55" pos:column="16"/></return>
 <label><name pos:line="56" pos:column="2">errout<pos:position pos:line="56" pos:column="8"/></name>:<pos:position pos:line="56" pos:column="9"/></label>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">conf<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">!=<pos:position pos:line="57" pos:column="16"/></operator> <name pos:line="57" pos:column="17">NULL<pos:position pos:line="57" pos:column="21"/></name></expr>)<pos:position pos:line="57" pos:column="22"/></condition><then pos:line="57" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="9">rd_kafka_conf_destroy<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><name pos:line="58" pos:column="31">conf<pos:position pos:line="58" pos:column="35"/></name></expr></argument>)<pos:position pos:line="58" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="37"/></expr_stmt></block></then></if>
    <return pos:line="59" pos:column="5">return <expr><operator pos:line="59" pos:column="12">-<pos:position pos:line="59" pos:column="13"/></operator><literal type="number" pos:line="59" pos:column="13">1<pos:position pos:line="59" pos:column="14"/></literal></expr>;<pos:position pos:line="59" pos:column="15"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

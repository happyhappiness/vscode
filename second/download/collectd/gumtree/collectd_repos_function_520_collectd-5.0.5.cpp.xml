<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_520_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">JNIEnv<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">cjni_thread_attach<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list> <comment type="block" pos:line="1" pos:column="42">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cjni_jvm_env_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">cjni_env<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">JNIEnv<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">jvm_env<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* If we're the first thread to access the JVM, we'll have to create it
   * first.. */</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">jvm<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">==<pos:position pos:line="8" pos:column="13"/></operator> <name pos:line="8" pos:column="14">NULL<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
  <block pos:line="9" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">status<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">status<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">cjni_create_jvm<pos:position pos:line="12" pos:column="29"/></name> <argument_list pos:line="12" pos:column="30">()<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">status<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">!=<pos:position pos:line="13" pos:column="18"/></operator> <literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">ERROR<pos:position pos:line="15" pos:column="12"/></name> <argument_list pos:line="15" pos:column="13">(<argument><expr><literal type="string" pos:line="15" pos:column="14">"java plugin: cjni_thread_attach: cjni_create_jvm failed."<pos:position pos:line="15" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="74"/></expr_stmt>
      <return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">NULL<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">)<pos:position pos:line="16" pos:column="20"/></operator></expr>;<pos:position pos:line="16" pos:column="21"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">assert<pos:position pos:line="19" pos:column="9"/></name> <argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">jvm<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">!=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">NULL<pos:position pos:line="19" pos:column="22"/></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><name pos:line="21" pos:column="3">cjni_env<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">pthread_getspecific<pos:position pos:line="21" pos:column="33"/></name> <argument_list pos:line="21" pos:column="34">(<argument><expr><name pos:line="21" pos:column="35">jvm_env_key<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">cjni_env<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">==<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">NULL<pos:position pos:line="22" pos:column="23"/></name></expr>)<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24">
  <block pos:line="23" pos:column="3">{
    <comment type="block" pos:line="24" pos:column="5">/* This pointer is free'd in `cjni_jvm_env_destroy'. */</comment>
    <expr_stmt><expr><name pos:line="25" pos:column="5">cjni_env<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">cjni_jvm_env_t<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">*<pos:position pos:line="25" pos:column="33"/></operator><operator pos:line="25" pos:column="33">)<pos:position pos:line="25" pos:column="34"/></operator> <call><name pos:line="25" pos:column="35">malloc<pos:position pos:line="25" pos:column="41"/></name> <argument_list pos:line="25" pos:column="42">(<argument><expr><sizeof pos:line="25" pos:column="43">sizeof <argument_list pos:line="25" pos:column="50">(<argument><expr><operator pos:line="25" pos:column="51">*<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="52">cjni_env<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">cjni_env<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">==<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">NULL<pos:position pos:line="26" pos:column="25"/></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26">
    <block pos:line="27" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">ERROR<pos:position pos:line="28" pos:column="12"/></name> <argument_list pos:line="28" pos:column="13">(<argument><expr><literal type="string" pos:line="28" pos:column="14">"java plugin: cjni_thread_attach: malloc failed."<pos:position pos:line="28" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><operator pos:line="29" pos:column="14">(<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">NULL<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">)<pos:position pos:line="29" pos:column="20"/></operator></expr>;<pos:position pos:line="29" pos:column="21"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">memset<pos:position pos:line="31" pos:column="11"/></name> <argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">cjni_env<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="23">0<pos:position pos:line="31" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="26">sizeof <argument_list pos:line="31" pos:column="33">(<argument><expr><operator pos:line="31" pos:column="34">*<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="35">cjni_env<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">cjni_env<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">reference_counter<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">=<pos:position pos:line="32" pos:column="34"/></operator> <literal type="number" pos:line="32" pos:column="35">0<pos:position pos:line="32" pos:column="36"/></literal></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">cjni_env<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">jvm_env<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">NULL<pos:position pos:line="33" pos:column="29"/></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">pthread_setspecific<pos:position pos:line="35" pos:column="24"/></name> <argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">jvm_env_key<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">cjni_env<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name><name pos:line="38" pos:column="7">cjni_env<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">reference_counter<pos:position pos:line="38" pos:column="34"/></name></name> <operator pos:line="38" pos:column="35">&gt;<pos:position pos:line="38" pos:column="39"/></operator> <literal type="number" pos:line="38" pos:column="37">0<pos:position pos:line="38" pos:column="38"/></literal></expr>)<pos:position pos:line="38" pos:column="39"/></condition><then pos:line="38" pos:column="39">
  <block pos:line="39" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">cjni_env<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">reference_counter<pos:position pos:line="40" pos:column="32"/></name></name><operator pos:line="40" pos:column="32">++<pos:position pos:line="40" pos:column="34"/></operator></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">jvm_env<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <name><name pos:line="41" pos:column="15">cjni_env<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">-&gt;<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="25">jvm_env<pos:position pos:line="41" pos:column="32"/></name></name></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="42" pos:column="4"/></block></then>
  <else pos:line="43" pos:column="3">else
  <block pos:line="44" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="45" pos:column="5">int<pos:position pos:line="45" pos:column="8"/></name></type> <name pos:line="45" pos:column="9">status<pos:position pos:line="45" pos:column="15"/></name></decl>;<pos:position pos:line="45" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">JavaVMAttachArgs<pos:position pos:line="46" pos:column="21"/></name></type> <name pos:line="46" pos:column="22">args<pos:position pos:line="46" pos:column="26"/></name></decl>;<pos:position pos:line="46" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">assert<pos:position pos:line="48" pos:column="11"/></name> <argument_list pos:line="48" pos:column="12">(<argument><expr><name><name pos:line="48" pos:column="13">cjni_env<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">-&gt;<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="23">jvm_env<pos:position pos:line="48" pos:column="30"/></name></name> <operator pos:line="48" pos:column="31">==<pos:position pos:line="48" pos:column="33"/></operator> <name pos:line="48" pos:column="34">NULL<pos:position pos:line="48" pos:column="38"/></name></expr></argument>)<pos:position pos:line="48" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">memset<pos:position pos:line="50" pos:column="11"/></name> <argument_list pos:line="50" pos:column="12">(<argument><expr><operator pos:line="50" pos:column="13">&amp;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="14">args<pos:position pos:line="50" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="20">0<pos:position pos:line="50" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="23">sizeof <argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">args<pos:position pos:line="50" pos:column="35"/></name></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">args<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">.<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">version<pos:position pos:line="51" pos:column="17"/></name></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <name pos:line="51" pos:column="20">JNI_VERSION_1_2<pos:position pos:line="51" pos:column="35"/></name></expr>;<pos:position pos:line="51" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="53" pos:column="5">status<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <call><name><operator pos:line="53" pos:column="14">(<pos:position pos:line="53" pos:column="15"/></operator><operator pos:line="53" pos:column="15">*<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="16">jvm<pos:position pos:line="53" pos:column="19"/></name><operator pos:line="53" pos:column="19">)<pos:position pos:line="53" pos:column="20"/></operator><operator pos:line="53" pos:column="20">-&gt;<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="22">AttachCurrentThread<pos:position pos:line="53" pos:column="41"/></name></name> <argument_list pos:line="53" pos:column="42">(<argument><expr><name pos:line="53" pos:column="43">jvm<pos:position pos:line="53" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="48">(<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="49">void<pos:position pos:line="53" pos:column="53"/></name> <operator pos:line="53" pos:column="54">*<pos:position pos:line="53" pos:column="55"/></operator><operator pos:line="53" pos:column="55">)<pos:position pos:line="53" pos:column="56"/></operator> <operator pos:line="53" pos:column="57">&amp;<pos:position pos:line="53" pos:column="62"/></operator><name pos:line="53" pos:column="58">jvm_env<pos:position pos:line="53" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="67">(<pos:position pos:line="53" pos:column="68"/></operator><name pos:line="53" pos:column="68">void<pos:position pos:line="53" pos:column="72"/></name> <operator pos:line="53" pos:column="73">*<pos:position pos:line="53" pos:column="74"/></operator><operator pos:line="53" pos:column="74">)<pos:position pos:line="53" pos:column="75"/></operator> <operator pos:line="53" pos:column="76">&amp;<pos:position pos:line="53" pos:column="81"/></operator><name pos:line="53" pos:column="77">args<pos:position pos:line="53" pos:column="81"/></name></expr></argument>)<pos:position pos:line="53" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="83"/></expr_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">status<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">!=<pos:position pos:line="54" pos:column="18"/></operator> <literal type="number" pos:line="54" pos:column="19">0<pos:position pos:line="54" pos:column="20"/></literal></expr>)<pos:position pos:line="54" pos:column="21"/></condition><then pos:line="54" pos:column="21">
    <block pos:line="55" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">ERROR<pos:position pos:line="56" pos:column="12"/></name> <argument_list pos:line="56" pos:column="13">(<argument><expr><literal type="string" pos:line="56" pos:column="14">"java plugin: cjni_thread_attach: AttachCurrentThread failed "<pos:position pos:line="56" pos:column="76"/></literal>
          <literal type="string" pos:line="57" pos:column="11">"with status %i."<pos:position pos:line="57" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="30">status<pos:position pos:line="57" pos:column="36"/></name></expr></argument>)<pos:position pos:line="57" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="38"/></expr_stmt>
      <return pos:line="58" pos:column="7">return <expr><operator pos:line="58" pos:column="14">(<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="15">NULL<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">)<pos:position pos:line="58" pos:column="20"/></operator></expr>;<pos:position pos:line="58" pos:column="21"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="61" pos:column="5">cjni_env<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">-&gt;<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="15">reference_counter<pos:position pos:line="61" pos:column="32"/></name></name> <operator pos:line="61" pos:column="33">=<pos:position pos:line="61" pos:column="34"/></operator> <literal type="number" pos:line="61" pos:column="35">1<pos:position pos:line="61" pos:column="36"/></literal></expr>;<pos:position pos:line="61" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">cjni_env<pos:position pos:line="62" pos:column="13"/></name><operator pos:line="62" pos:column="13">-&gt;<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="15">jvm_env<pos:position pos:line="62" pos:column="22"/></name></name> <operator pos:line="62" pos:column="23">=<pos:position pos:line="62" pos:column="24"/></operator> <name pos:line="62" pos:column="25">jvm_env<pos:position pos:line="62" pos:column="32"/></name></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="65" pos:column="3">DEBUG<pos:position pos:line="65" pos:column="8"/></name> <argument_list pos:line="65" pos:column="9">(<argument><expr><literal type="string" pos:line="65" pos:column="10">"java plugin: cjni_thread_attach: cjni_env-&gt;reference_counter = %i"<pos:position pos:line="65" pos:column="80"/></literal></expr></argument>,
      <argument><expr><name><name pos:line="66" pos:column="7">cjni_env<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">-&gt;<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="17">reference_counter<pos:position pos:line="66" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">assert<pos:position pos:line="67" pos:column="9"/></name> <argument_list pos:line="67" pos:column="10">(<argument><expr><name pos:line="67" pos:column="11">jvm_env<pos:position pos:line="67" pos:column="18"/></name> <operator pos:line="67" pos:column="19">!=<pos:position pos:line="67" pos:column="21"/></operator> <name pos:line="67" pos:column="22">NULL<pos:position pos:line="67" pos:column="26"/></name></expr></argument>)<pos:position pos:line="67" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt>
  <return pos:line="68" pos:column="3">return <expr><operator pos:line="68" pos:column="10">(<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="11">jvm_env<pos:position pos:line="68" pos:column="18"/></name><operator pos:line="68" pos:column="18">)<pos:position pos:line="68" pos:column="19"/></operator></expr>;<pos:position pos:line="68" pos:column="20"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

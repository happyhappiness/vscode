<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_441_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_config_add_host<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">oconfig_item_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ci<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">host_definition_t<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">hd<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Registration stuff. */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">cb_name<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><name pos:line="8" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="8" pos:column="33"/></name></expr>]<pos:position pos:line="8" pos:column="34"/></index></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">user_data_t<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">cb_data<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">timespec<pos:position pos:line="10" pos:column="18"/></name></name></type> <name pos:line="10" pos:column="19">cb_interval<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">hd<pos:position pos:line="12" pos:column="5"/></name> <operator pos:line="12" pos:column="6">=<pos:position pos:line="12" pos:column="7"/></operator> <operator pos:line="12" pos:column="8">(<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">host_definition_t<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></operator><operator pos:line="12" pos:column="28">)<pos:position pos:line="12" pos:column="29"/></operator> <call><name pos:line="12" pos:column="30">malloc<pos:position pos:line="12" pos:column="36"/></name> <argument_list pos:line="12" pos:column="37">(<argument><expr><sizeof pos:line="12" pos:column="38">sizeof <argument_list pos:line="12" pos:column="45">(<argument><expr><name pos:line="12" pos:column="46">host_definition_t<pos:position pos:line="12" pos:column="63"/></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">hd<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">==<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">NULL<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">memset<pos:position pos:line="15" pos:column="9"/></name> <argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">hd<pos:position pos:line="15" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="15">'\0'<pos:position pos:line="15" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="21">sizeof <argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">host_definition_t<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">hd<pos:position pos:line="16" pos:column="5"/></name><operator pos:line="16" pos:column="5">-&gt;<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="7">version<pos:position pos:line="16" pos:column="14"/></name></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">2<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">C_COMPLAIN_INIT<pos:position pos:line="17" pos:column="18"/></name> <argument_list pos:line="17" pos:column="19">(<argument><expr><operator pos:line="17" pos:column="20">&amp;<pos:position pos:line="17" pos:column="25"/></operator><name><name pos:line="17" pos:column="21">hd<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">complaint<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">status<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">cf_util_get_string<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">ci<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="35">&amp;<pos:position pos:line="19" pos:column="40"/></operator><name><name pos:line="19" pos:column="36">hd<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">-&gt;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="40">name<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">status<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">!=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">sfree<pos:position pos:line="22" pos:column="10"/></name> <argument_list pos:line="22" pos:column="11">(<argument><expr><name pos:line="22" pos:column="12">hd<pos:position pos:line="22" pos:column="14"/></name></expr></argument>)<pos:position pos:line="22" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">status<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="26" pos:column="3">hd<pos:position pos:line="26" pos:column="5"/></name><operator pos:line="26" pos:column="5">-&gt;<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="7">sess_handle<pos:position pos:line="26" pos:column="18"/></name></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">NULL<pos:position pos:line="26" pos:column="25"/></name></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">hd<pos:position pos:line="27" pos:column="5"/></name><operator pos:line="27" pos:column="5">-&gt;<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="7">interval<pos:position pos:line="27" pos:column="15"/></name></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>

  <for pos:line="29" pos:column="3">for <control pos:line="29" pos:column="7">(<init><expr><name pos:line="29" pos:column="8">i<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <literal type="number" pos:line="29" pos:column="12">0<pos:position pos:line="29" pos:column="13"/></literal></expr>;<pos:position pos:line="29" pos:column="14"/></init> <condition><expr><name pos:line="29" pos:column="15">i<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">&lt;<pos:position pos:line="29" pos:column="21"/></operator> <name><name pos:line="29" pos:column="19">ci<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">children_num<pos:position pos:line="29" pos:column="35"/></name></name></expr>;<pos:position pos:line="29" pos:column="36"/></condition> <incr><expr><name pos:line="29" pos:column="37">i<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">++<pos:position pos:line="29" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="41"/></control>
  <block pos:line="30" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">oconfig_item_t<pos:position pos:line="31" pos:column="19"/></name> <modifier pos:line="31" pos:column="20">*<pos:position pos:line="31" pos:column="21"/></modifier></type><name pos:line="31" pos:column="21">option<pos:position pos:line="31" pos:column="27"/></name> <init pos:line="31" pos:column="28">= <expr><name><name pos:line="31" pos:column="30">ci<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">children<pos:position pos:line="31" pos:column="42"/></name></name> <operator pos:line="31" pos:column="43">+<pos:position pos:line="31" pos:column="44"/></operator> <name pos:line="31" pos:column="45">i<pos:position pos:line="31" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="47"/></decl_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">status<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <literal type="number" pos:line="32" pos:column="14">0<pos:position pos:line="32" pos:column="15"/></literal></expr>;<pos:position pos:line="32" pos:column="16"/></expr_stmt>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><call><name pos:line="34" pos:column="9">strcasecmp<pos:position pos:line="34" pos:column="19"/></name> <argument_list pos:line="34" pos:column="20">(<argument><expr><literal type="string" pos:line="34" pos:column="21">"Address"<pos:position pos:line="34" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="32">option<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">-&gt;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="40">key<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call> <operator pos:line="34" pos:column="45">==<pos:position pos:line="34" pos:column="47"/></operator> <literal type="number" pos:line="34" pos:column="48">0<pos:position pos:line="34" pos:column="49"/></literal></expr>)<pos:position pos:line="34" pos:column="50"/></condition><then pos:line="34" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">cf_util_get_string<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">option<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="43">&amp;<pos:position pos:line="35" pos:column="48"/></operator><name><name pos:line="35" pos:column="44">hd<pos:position pos:line="35" pos:column="46"/></name><operator pos:line="35" pos:column="46">-&gt;<pos:position pos:line="35" pos:column="51"/></operator><name pos:line="35" pos:column="48">address<pos:position pos:line="35" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt></block></then>
    <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><call><name pos:line="36" pos:column="14">strcasecmp<pos:position pos:line="36" pos:column="24"/></name> <argument_list pos:line="36" pos:column="25">(<argument><expr><literal type="string" pos:line="36" pos:column="26">"Community"<pos:position pos:line="36" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="39">option<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">-&gt;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="47">key<pos:position pos:line="36" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call> <operator pos:line="36" pos:column="52">==<pos:position pos:line="36" pos:column="54"/></operator> <literal type="number" pos:line="36" pos:column="55">0<pos:position pos:line="36" pos:column="56"/></literal></expr>)<pos:position pos:line="36" pos:column="57"/></condition><then pos:line="36" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="7">status<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">cf_util_get_string<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">option<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="43">&amp;<pos:position pos:line="37" pos:column="48"/></operator><name><name pos:line="37" pos:column="44">hd<pos:position pos:line="37" pos:column="46"/></name><operator pos:line="37" pos:column="46">-&gt;<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="48">community<pos:position pos:line="37" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><call><name pos:line="38" pos:column="14">strcasecmp<pos:position pos:line="38" pos:column="24"/></name> <argument_list pos:line="38" pos:column="25">(<argument><expr><literal type="string" pos:line="38" pos:column="26">"Version"<pos:position pos:line="38" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="37">option<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">-&gt;<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="45">key<pos:position pos:line="38" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call> <operator pos:line="38" pos:column="50">==<pos:position pos:line="38" pos:column="52"/></operator> <literal type="number" pos:line="38" pos:column="53">0<pos:position pos:line="38" pos:column="54"/></literal></expr>)<pos:position pos:line="38" pos:column="55"/></condition><then pos:line="38" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="7">status<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">csnmp_config_add_host_version<pos:position pos:line="39" pos:column="45"/></name> <argument_list pos:line="39" pos:column="46">(<argument><expr><name pos:line="39" pos:column="47">hd<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="51">option<pos:position pos:line="39" pos:column="57"/></name></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><call><name pos:line="40" pos:column="14">strcasecmp<pos:position pos:line="40" pos:column="24"/></name> <argument_list pos:line="40" pos:column="25">(<argument><expr><literal type="string" pos:line="40" pos:column="26">"Collect"<pos:position pos:line="40" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="37">option<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">key<pos:position pos:line="40" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call> <operator pos:line="40" pos:column="50">==<pos:position pos:line="40" pos:column="52"/></operator> <literal type="number" pos:line="40" pos:column="53">0<pos:position pos:line="40" pos:column="54"/></literal></expr>)<pos:position pos:line="40" pos:column="55"/></condition><then pos:line="40" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="7">csnmp_config_add_host_collect<pos:position pos:line="41" pos:column="36"/></name> <argument_list pos:line="41" pos:column="37">(<argument><expr><name pos:line="41" pos:column="38">hd<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="42">option<pos:position pos:line="41" pos:column="48"/></name></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="42" pos:column="5">else <if pos:line="42" pos:column="10">if <condition pos:line="42" pos:column="13">(<expr><call><name pos:line="42" pos:column="14">strcasecmp<pos:position pos:line="42" pos:column="24"/></name> <argument_list pos:line="42" pos:column="25">(<argument><expr><literal type="string" pos:line="42" pos:column="26">"Interval"<pos:position pos:line="42" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="38">option<pos:position pos:line="42" pos:column="44"/></name><operator pos:line="42" pos:column="44">-&gt;<pos:position pos:line="42" pos:column="49"/></operator><name pos:line="42" pos:column="46">key<pos:position pos:line="42" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></call> <operator pos:line="42" pos:column="51">==<pos:position pos:line="42" pos:column="53"/></operator> <literal type="number" pos:line="42" pos:column="54">0<pos:position pos:line="42" pos:column="55"/></literal></expr>)<pos:position pos:line="42" pos:column="56"/></condition><then pos:line="42" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="7">cf_util_get_cdtime<pos:position pos:line="43" pos:column="25"/></name> <argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">option<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="35">&amp;<pos:position pos:line="43" pos:column="40"/></operator><name><name pos:line="43" pos:column="36">hd<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">-&gt;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="40">interval<pos:position pos:line="43" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="50"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="44" pos:column="5">else <if pos:line="44" pos:column="10">if <condition pos:line="44" pos:column="13">(<expr><call><name pos:line="44" pos:column="14">strcasecmp<pos:position pos:line="44" pos:column="24"/></name> <argument_list pos:line="44" pos:column="25">(<argument><expr><literal type="string" pos:line="44" pos:column="26">"Username"<pos:position pos:line="44" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="38">option<pos:position pos:line="44" pos:column="44"/></name><operator pos:line="44" pos:column="44">-&gt;<pos:position pos:line="44" pos:column="49"/></operator><name pos:line="44" pos:column="46">key<pos:position pos:line="44" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call> <operator pos:line="44" pos:column="51">==<pos:position pos:line="44" pos:column="53"/></operator> <literal type="number" pos:line="44" pos:column="54">0<pos:position pos:line="44" pos:column="55"/></literal></expr>)<pos:position pos:line="44" pos:column="56"/></condition><then pos:line="44" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="7">status<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <call><name pos:line="45" pos:column="16">cf_util_get_string<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><name pos:line="45" pos:column="35">option<pos:position pos:line="45" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="43">&amp;<pos:position pos:line="45" pos:column="48"/></operator><name><name pos:line="45" pos:column="44">hd<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">-&gt;<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="48">username<pos:position pos:line="45" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><call><name pos:line="46" pos:column="14">strcasecmp<pos:position pos:line="46" pos:column="24"/></name> <argument_list pos:line="46" pos:column="25">(<argument><expr><literal type="string" pos:line="46" pos:column="26">"AuthProtocol"<pos:position pos:line="46" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="42">option<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">-&gt;<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="50">key<pos:position pos:line="46" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call> <operator pos:line="46" pos:column="55">==<pos:position pos:line="46" pos:column="57"/></operator> <literal type="number" pos:line="46" pos:column="58">0<pos:position pos:line="46" pos:column="59"/></literal></expr>)<pos:position pos:line="46" pos:column="60"/></condition><then pos:line="46" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="7">status<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <call><name pos:line="47" pos:column="16">csnmp_config_add_host_auth_protocol<pos:position pos:line="47" pos:column="51"/></name> <argument_list pos:line="47" pos:column="52">(<argument><expr><name pos:line="47" pos:column="53">hd<pos:position pos:line="47" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="57">option<pos:position pos:line="47" pos:column="63"/></name></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="65"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="48" pos:column="5">else <if pos:line="48" pos:column="10">if <condition pos:line="48" pos:column="13">(<expr><call><name pos:line="48" pos:column="14">strcasecmp<pos:position pos:line="48" pos:column="24"/></name> <argument_list pos:line="48" pos:column="25">(<argument><expr><literal type="string" pos:line="48" pos:column="26">"PrivacyProtocol"<pos:position pos:line="48" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="45">option<pos:position pos:line="48" pos:column="51"/></name><operator pos:line="48" pos:column="51">-&gt;<pos:position pos:line="48" pos:column="56"/></operator><name pos:line="48" pos:column="53">key<pos:position pos:line="48" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call> <operator pos:line="48" pos:column="58">==<pos:position pos:line="48" pos:column="60"/></operator> <literal type="number" pos:line="48" pos:column="61">0<pos:position pos:line="48" pos:column="62"/></literal></expr>)<pos:position pos:line="48" pos:column="63"/></condition><then pos:line="48" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">status<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <call><name pos:line="49" pos:column="16">csnmp_config_add_host_priv_protocol<pos:position pos:line="49" pos:column="51"/></name> <argument_list pos:line="49" pos:column="52">(<argument><expr><name pos:line="49" pos:column="53">hd<pos:position pos:line="49" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="57">option<pos:position pos:line="49" pos:column="63"/></name></expr></argument>)<pos:position pos:line="49" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="65"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="50" pos:column="5">else <if pos:line="50" pos:column="10">if <condition pos:line="50" pos:column="13">(<expr><call><name pos:line="50" pos:column="14">strcasecmp<pos:position pos:line="50" pos:column="24"/></name> <argument_list pos:line="50" pos:column="25">(<argument><expr><literal type="string" pos:line="50" pos:column="26">"AuthPassphrase"<pos:position pos:line="50" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="44">option<pos:position pos:line="50" pos:column="50"/></name><operator pos:line="50" pos:column="50">-&gt;<pos:position pos:line="50" pos:column="55"/></operator><name pos:line="50" pos:column="52">key<pos:position pos:line="50" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call> <operator pos:line="50" pos:column="57">==<pos:position pos:line="50" pos:column="59"/></operator> <literal type="number" pos:line="50" pos:column="60">0<pos:position pos:line="50" pos:column="61"/></literal></expr>)<pos:position pos:line="50" pos:column="62"/></condition><then pos:line="50" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="7">status<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <call><name pos:line="51" pos:column="16">cf_util_get_string<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">(<argument><expr><name pos:line="51" pos:column="35">option<pos:position pos:line="51" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="43">&amp;<pos:position pos:line="51" pos:column="48"/></operator><name><name pos:line="51" pos:column="44">hd<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">-&gt;<pos:position pos:line="51" pos:column="51"/></operator><name pos:line="51" pos:column="48">auth_passphrase<pos:position pos:line="51" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="65"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="52" pos:column="5">else <if pos:line="52" pos:column="10">if <condition pos:line="52" pos:column="13">(<expr><call><name pos:line="52" pos:column="14">strcasecmp<pos:position pos:line="52" pos:column="24"/></name> <argument_list pos:line="52" pos:column="25">(<argument><expr><literal type="string" pos:line="52" pos:column="26">"PrivacyPassphrase"<pos:position pos:line="52" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="47">option<pos:position pos:line="52" pos:column="53"/></name><operator pos:line="52" pos:column="53">-&gt;<pos:position pos:line="52" pos:column="58"/></operator><name pos:line="52" pos:column="55">key<pos:position pos:line="52" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call> <operator pos:line="52" pos:column="60">==<pos:position pos:line="52" pos:column="62"/></operator> <literal type="number" pos:line="52" pos:column="63">0<pos:position pos:line="52" pos:column="64"/></literal></expr>)<pos:position pos:line="52" pos:column="65"/></condition><then pos:line="52" pos:column="65">
      <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="7">status<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <call><name pos:line="53" pos:column="16">cf_util_get_string<pos:position pos:line="53" pos:column="34"/></name><argument_list pos:line="53" pos:column="34">(<argument><expr><name pos:line="53" pos:column="35">option<pos:position pos:line="53" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="43">&amp;<pos:position pos:line="53" pos:column="48"/></operator><name><name pos:line="53" pos:column="44">hd<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">-&gt;<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="48">priv_passphrase<pos:position pos:line="53" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="65"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="54" pos:column="5">else <if pos:line="54" pos:column="10">if <condition pos:line="54" pos:column="13">(<expr><call><name pos:line="54" pos:column="14">strcasecmp<pos:position pos:line="54" pos:column="24"/></name> <argument_list pos:line="54" pos:column="25">(<argument><expr><literal type="string" pos:line="54" pos:column="26">"SecurityLevel"<pos:position pos:line="54" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="43">option<pos:position pos:line="54" pos:column="49"/></name><operator pos:line="54" pos:column="49">-&gt;<pos:position pos:line="54" pos:column="54"/></operator><name pos:line="54" pos:column="51">key<pos:position pos:line="54" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="55"/></argument_list></call> <operator pos:line="54" pos:column="56">==<pos:position pos:line="54" pos:column="58"/></operator> <literal type="number" pos:line="54" pos:column="59">0<pos:position pos:line="54" pos:column="60"/></literal></expr>)<pos:position pos:line="54" pos:column="61"/></condition><then pos:line="54" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="7">status<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call><name pos:line="55" pos:column="16">csnmp_config_add_host_security_level<pos:position pos:line="55" pos:column="52"/></name> <argument_list pos:line="55" pos:column="53">(<argument><expr><name pos:line="55" pos:column="54">hd<pos:position pos:line="55" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="58">option<pos:position pos:line="55" pos:column="64"/></name></expr></argument>)<pos:position pos:line="55" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="66"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="56" pos:column="5">else <if pos:line="56" pos:column="10">if <condition pos:line="56" pos:column="13">(<expr><call><name pos:line="56" pos:column="14">strcasecmp<pos:position pos:line="56" pos:column="24"/></name> <argument_list pos:line="56" pos:column="25">(<argument><expr><literal type="string" pos:line="56" pos:column="26">"Context"<pos:position pos:line="56" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="37">option<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">-&gt;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="45">key<pos:position pos:line="56" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call> <operator pos:line="56" pos:column="50">==<pos:position pos:line="56" pos:column="52"/></operator> <literal type="number" pos:line="56" pos:column="53">0<pos:position pos:line="56" pos:column="54"/></literal></expr>)<pos:position pos:line="56" pos:column="55"/></condition><then pos:line="56" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="7">status<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">=<pos:position pos:line="57" pos:column="15"/></operator> <call><name pos:line="57" pos:column="16">cf_util_get_string<pos:position pos:line="57" pos:column="34"/></name><argument_list pos:line="57" pos:column="34">(<argument><expr><name pos:line="57" pos:column="35">option<pos:position pos:line="57" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="43">&amp;<pos:position pos:line="57" pos:column="48"/></operator><name><name pos:line="57" pos:column="44">hd<pos:position pos:line="57" pos:column="46"/></name><operator pos:line="57" pos:column="46">-&gt;<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="48">context<pos:position pos:line="57" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="57"/></expr_stmt></block></then></if></elseif>
    <else pos:line="58" pos:column="5">else
    <block pos:line="59" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">WARNING<pos:position pos:line="60" pos:column="14"/></name> <argument_list pos:line="60" pos:column="15">(<argument><expr><literal type="string" pos:line="60" pos:column="16">"snmp plugin: csnmp_config_add_host: Option `%s' not allowed here."<pos:position pos:line="60" pos:column="83"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="85">option<pos:position pos:line="60" pos:column="91"/></name><operator pos:line="60" pos:column="91">-&gt;<pos:position pos:line="60" pos:column="96"/></operator><name pos:line="60" pos:column="93">key<pos:position pos:line="60" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="98"/></expr_stmt>
      <expr_stmt><expr><name pos:line="61" pos:column="7">status<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <operator pos:line="61" pos:column="16">-<pos:position pos:line="61" pos:column="17"/></operator><literal type="number" pos:line="61" pos:column="17">1<pos:position pos:line="61" pos:column="18"/></literal></expr>;<pos:position pos:line="61" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></else></if>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">status<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">!=<pos:position pos:line="64" pos:column="18"/></operator> <literal type="number" pos:line="64" pos:column="19">0<pos:position pos:line="64" pos:column="20"/></literal></expr>)<pos:position pos:line="64" pos:column="21"/></condition><then pos:line="64" pos:column="21">
      <block type="pseudo"><break pos:line="65" pos:column="7">break;<pos:position pos:line="65" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="66" pos:column="4"/></block></for> <comment type="block" pos:line="66" pos:column="5">/* for (ci-&gt;children) */</comment>

  <while pos:line="68" pos:column="3">while <condition pos:line="68" pos:column="9">(<expr><name pos:line="68" pos:column="10">status<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">==<pos:position pos:line="68" pos:column="19"/></operator> <literal type="number" pos:line="68" pos:column="20">0<pos:position pos:line="68" pos:column="21"/></literal></expr>)<pos:position pos:line="68" pos:column="22"/></condition>
  <block pos:line="69" pos:column="3">{
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name><name pos:line="70" pos:column="9">hd<pos:position pos:line="70" pos:column="11"/></name><operator pos:line="70" pos:column="11">-&gt;<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="13">address<pos:position pos:line="70" pos:column="20"/></name></name> <operator pos:line="70" pos:column="21">==<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="24">NULL<pos:position pos:line="70" pos:column="28"/></name></expr>)<pos:position pos:line="70" pos:column="29"/></condition><then pos:line="70" pos:column="29">
    <block pos:line="71" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="72" pos:column="7">WARNING<pos:position pos:line="72" pos:column="14"/></name> <argument_list pos:line="72" pos:column="15">(<argument><expr><literal type="string" pos:line="72" pos:column="16">"snmp plugin: `Address' not given for host `%s'"<pos:position pos:line="72" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="66">hd<pos:position pos:line="72" pos:column="68"/></name><operator pos:line="72" pos:column="68">-&gt;<pos:position pos:line="72" pos:column="73"/></operator><name pos:line="72" pos:column="70">name<pos:position pos:line="72" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><name pos:line="73" pos:column="7">status<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">=<pos:position pos:line="73" pos:column="15"/></operator> <operator pos:line="73" pos:column="16">-<pos:position pos:line="73" pos:column="17"/></operator><literal type="number" pos:line="73" pos:column="17">1<pos:position pos:line="73" pos:column="18"/></literal></expr>;<pos:position pos:line="73" pos:column="19"/></expr_stmt>
      <break pos:line="74" pos:column="7">break;<pos:position pos:line="74" pos:column="13"/></break>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name><name pos:line="76" pos:column="9">hd<pos:position pos:line="76" pos:column="11"/></name><operator pos:line="76" pos:column="11">-&gt;<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="13">community<pos:position pos:line="76" pos:column="22"/></name></name> <operator pos:line="76" pos:column="23">==<pos:position pos:line="76" pos:column="25"/></operator> <name pos:line="76" pos:column="26">NULL<pos:position pos:line="76" pos:column="30"/></name> <operator pos:line="76" pos:column="31">&amp;&amp;<pos:position pos:line="76" pos:column="41"/></operator> <name><name pos:line="76" pos:column="34">hd<pos:position pos:line="76" pos:column="36"/></name><operator pos:line="76" pos:column="36">-&gt;<pos:position pos:line="76" pos:column="41"/></operator><name pos:line="76" pos:column="38">version<pos:position pos:line="76" pos:column="45"/></name></name> <operator pos:line="76" pos:column="46">&lt;<pos:position pos:line="76" pos:column="50"/></operator> <literal type="number" pos:line="76" pos:column="48">3<pos:position pos:line="76" pos:column="49"/></literal></expr>)<pos:position pos:line="76" pos:column="50"/></condition><then pos:line="76" pos:column="50">
    <block pos:line="77" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">WARNING<pos:position pos:line="78" pos:column="14"/></name> <argument_list pos:line="78" pos:column="15">(<argument><expr><literal type="string" pos:line="78" pos:column="16">"snmp plugin: `Community' not given for host `%s'"<pos:position pos:line="78" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="68">hd<pos:position pos:line="78" pos:column="70"/></name><operator pos:line="78" pos:column="70">-&gt;<pos:position pos:line="78" pos:column="75"/></operator><name pos:line="78" pos:column="72">name<pos:position pos:line="78" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><name pos:line="79" pos:column="7">status<pos:position pos:line="79" pos:column="13"/></name> <operator pos:line="79" pos:column="14">=<pos:position pos:line="79" pos:column="15"/></operator> <operator pos:line="79" pos:column="16">-<pos:position pos:line="79" pos:column="17"/></operator><literal type="number" pos:line="79" pos:column="17">1<pos:position pos:line="79" pos:column="18"/></literal></expr>;<pos:position pos:line="79" pos:column="19"/></expr_stmt>
      <break pos:line="80" pos:column="7">break;<pos:position pos:line="80" pos:column="13"/></break>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name><name pos:line="82" pos:column="9">hd<pos:position pos:line="82" pos:column="11"/></name><operator pos:line="82" pos:column="11">-&gt;<pos:position pos:line="82" pos:column="16"/></operator><name pos:line="82" pos:column="13">version<pos:position pos:line="82" pos:column="20"/></name></name> <operator pos:line="82" pos:column="21">==<pos:position pos:line="82" pos:column="23"/></operator> <literal type="number" pos:line="82" pos:column="24">3<pos:position pos:line="82" pos:column="25"/></literal></expr>)<pos:position pos:line="82" pos:column="26"/></condition><then pos:line="82" pos:column="26">
    <block pos:line="83" pos:column="5">{
      <if pos:line="84" pos:column="7">if <condition pos:line="84" pos:column="10">(<expr><name><name pos:line="84" pos:column="11">hd<pos:position pos:line="84" pos:column="13"/></name><operator pos:line="84" pos:column="13">-&gt;<pos:position pos:line="84" pos:column="18"/></operator><name pos:line="84" pos:column="15">username<pos:position pos:line="84" pos:column="23"/></name></name> <operator pos:line="84" pos:column="24">==<pos:position pos:line="84" pos:column="26"/></operator> <name pos:line="84" pos:column="27">NULL<pos:position pos:line="84" pos:column="31"/></name></expr>)<pos:position pos:line="84" pos:column="32"/></condition><then pos:line="84" pos:column="32">
      <block pos:line="85" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">WARNING<pos:position pos:line="86" pos:column="16"/></name> <argument_list pos:line="86" pos:column="17">(<argument><expr><literal type="string" pos:line="86" pos:column="18">"snmp plugin: `Username' not given for host `%s'"<pos:position pos:line="86" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="69">hd<pos:position pos:line="86" pos:column="71"/></name><operator pos:line="86" pos:column="71">-&gt;<pos:position pos:line="86" pos:column="76"/></operator><name pos:line="86" pos:column="73">name<pos:position pos:line="86" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><name pos:line="87" pos:column="9">status<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <operator pos:line="87" pos:column="18">-<pos:position pos:line="87" pos:column="19"/></operator><literal type="number" pos:line="87" pos:column="19">1<pos:position pos:line="87" pos:column="20"/></literal></expr>;<pos:position pos:line="87" pos:column="21"/></expr_stmt>
        <break pos:line="88" pos:column="9">break;<pos:position pos:line="88" pos:column="15"/></break>
      }<pos:position pos:line="89" pos:column="8"/></block></then></if>
      <if pos:line="90" pos:column="7">if <condition pos:line="90" pos:column="10">(<expr><name><name pos:line="90" pos:column="11">hd<pos:position pos:line="90" pos:column="13"/></name><operator pos:line="90" pos:column="13">-&gt;<pos:position pos:line="90" pos:column="18"/></operator><name pos:line="90" pos:column="15">security_level<pos:position pos:line="90" pos:column="29"/></name></name> <operator pos:line="90" pos:column="30">==<pos:position pos:line="90" pos:column="32"/></operator> <literal type="number" pos:line="90" pos:column="33">0<pos:position pos:line="90" pos:column="34"/></literal></expr>)<pos:position pos:line="90" pos:column="35"/></condition><then pos:line="90" pos:column="35">
      <block pos:line="91" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">WARNING<pos:position pos:line="92" pos:column="16"/></name> <argument_list pos:line="92" pos:column="17">(<argument><expr><literal type="string" pos:line="92" pos:column="18">"snmp plugin: `SecurityLevel' not given for host `%s'"<pos:position pos:line="92" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="74">hd<pos:position pos:line="92" pos:column="76"/></name><operator pos:line="92" pos:column="76">-&gt;<pos:position pos:line="92" pos:column="81"/></operator><name pos:line="92" pos:column="78">name<pos:position pos:line="92" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><name pos:line="93" pos:column="9">status<pos:position pos:line="93" pos:column="15"/></name> <operator pos:line="93" pos:column="16">=<pos:position pos:line="93" pos:column="17"/></operator> <operator pos:line="93" pos:column="18">-<pos:position pos:line="93" pos:column="19"/></operator><literal type="number" pos:line="93" pos:column="19">1<pos:position pos:line="93" pos:column="20"/></literal></expr>;<pos:position pos:line="93" pos:column="21"/></expr_stmt>
        <break pos:line="94" pos:column="9">break;<pos:position pos:line="94" pos:column="15"/></break>
      }<pos:position pos:line="95" pos:column="8"/></block></then></if>
      <if pos:line="96" pos:column="7">if <condition pos:line="96" pos:column="10">(<expr><name><name pos:line="96" pos:column="11">hd<pos:position pos:line="96" pos:column="13"/></name><operator pos:line="96" pos:column="13">-&gt;<pos:position pos:line="96" pos:column="18"/></operator><name pos:line="96" pos:column="15">security_level<pos:position pos:line="96" pos:column="29"/></name></name> <operator pos:line="96" pos:column="30">==<pos:position pos:line="96" pos:column="32"/></operator> <name pos:line="96" pos:column="33">SNMP_SEC_LEVEL_AUTHNOPRIV<pos:position pos:line="96" pos:column="58"/></name> <operator pos:line="96" pos:column="59">||<pos:position pos:line="96" pos:column="61"/></operator> <name><name pos:line="96" pos:column="62">hd<pos:position pos:line="96" pos:column="64"/></name><operator pos:line="96" pos:column="64">-&gt;<pos:position pos:line="96" pos:column="69"/></operator><name pos:line="96" pos:column="66">security_level<pos:position pos:line="96" pos:column="80"/></name></name> <operator pos:line="96" pos:column="81">==<pos:position pos:line="96" pos:column="83"/></operator> <name pos:line="96" pos:column="84">SNMP_SEC_LEVEL_AUTHPRIV<pos:position pos:line="96" pos:column="107"/></name></expr>)<pos:position pos:line="96" pos:column="108"/></condition><then pos:line="96" pos:column="108">
      <block pos:line="97" pos:column="7">{
	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name><name pos:line="98" pos:column="13">hd<pos:position pos:line="98" pos:column="15"/></name><operator pos:line="98" pos:column="15">-&gt;<pos:position pos:line="98" pos:column="20"/></operator><name pos:line="98" pos:column="17">auth_protocol<pos:position pos:line="98" pos:column="30"/></name></name> <operator pos:line="98" pos:column="31">==<pos:position pos:line="98" pos:column="33"/></operator> <name pos:line="98" pos:column="34">NULL<pos:position pos:line="98" pos:column="38"/></name></expr>)<pos:position pos:line="98" pos:column="39"/></condition><then pos:line="98" pos:column="39">
	<block pos:line="99" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="100" pos:column="11">WARNING<pos:position pos:line="100" pos:column="18"/></name> <argument_list pos:line="100" pos:column="19">(<argument><expr><literal type="string" pos:line="100" pos:column="20">"snmp plugin: `AuthProtocol' not given for host `%s'"<pos:position pos:line="100" pos:column="73"/></literal></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="75">hd<pos:position pos:line="100" pos:column="77"/></name><operator pos:line="100" pos:column="77">-&gt;<pos:position pos:line="100" pos:column="82"/></operator><name pos:line="100" pos:column="79">name<pos:position pos:line="100" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="85"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="101" pos:column="11">status<pos:position pos:line="101" pos:column="17"/></name> <operator pos:line="101" pos:column="18">=<pos:position pos:line="101" pos:column="19"/></operator> <operator pos:line="101" pos:column="20">-<pos:position pos:line="101" pos:column="21"/></operator><literal type="number" pos:line="101" pos:column="21">1<pos:position pos:line="101" pos:column="22"/></literal></expr>;<pos:position pos:line="101" pos:column="23"/></expr_stmt>
	  <break pos:line="102" pos:column="11">break;<pos:position pos:line="102" pos:column="17"/></break>
	}<pos:position pos:line="103" pos:column="10"/></block></then></if>
	<if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><name><name pos:line="104" pos:column="13">hd<pos:position pos:line="104" pos:column="15"/></name><operator pos:line="104" pos:column="15">-&gt;<pos:position pos:line="104" pos:column="20"/></operator><name pos:line="104" pos:column="17">auth_passphrase<pos:position pos:line="104" pos:column="32"/></name></name> <operator pos:line="104" pos:column="33">==<pos:position pos:line="104" pos:column="35"/></operator> <name pos:line="104" pos:column="36">NULL<pos:position pos:line="104" pos:column="40"/></name></expr>)<pos:position pos:line="104" pos:column="41"/></condition><then pos:line="104" pos:column="41">
	<block pos:line="105" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="106" pos:column="11">WARNING<pos:position pos:line="106" pos:column="18"/></name> <argument_list pos:line="106" pos:column="19">(<argument><expr><literal type="string" pos:line="106" pos:column="20">"snmp plugin: `AuthPassphrase' not given for host `%s'"<pos:position pos:line="106" pos:column="75"/></literal></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="77">hd<pos:position pos:line="106" pos:column="79"/></name><operator pos:line="106" pos:column="79">-&gt;<pos:position pos:line="106" pos:column="84"/></operator><name pos:line="106" pos:column="81">name<pos:position pos:line="106" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="87"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="107" pos:column="11">status<pos:position pos:line="107" pos:column="17"/></name> <operator pos:line="107" pos:column="18">=<pos:position pos:line="107" pos:column="19"/></operator> <operator pos:line="107" pos:column="20">-<pos:position pos:line="107" pos:column="21"/></operator><literal type="number" pos:line="107" pos:column="21">1<pos:position pos:line="107" pos:column="22"/></literal></expr>;<pos:position pos:line="107" pos:column="23"/></expr_stmt>
	  <break pos:line="108" pos:column="11">break;<pos:position pos:line="108" pos:column="17"/></break>
	}<pos:position pos:line="109" pos:column="10"/></block></then></if>
      }<pos:position pos:line="110" pos:column="8"/></block></then></if>
      <if pos:line="111" pos:column="7">if <condition pos:line="111" pos:column="10">(<expr><name><name pos:line="111" pos:column="11">hd<pos:position pos:line="111" pos:column="13"/></name><operator pos:line="111" pos:column="13">-&gt;<pos:position pos:line="111" pos:column="18"/></operator><name pos:line="111" pos:column="15">security_level<pos:position pos:line="111" pos:column="29"/></name></name> <operator pos:line="111" pos:column="30">==<pos:position pos:line="111" pos:column="32"/></operator> <name pos:line="111" pos:column="33">SNMP_SEC_LEVEL_AUTHPRIV<pos:position pos:line="111" pos:column="56"/></name></expr>)<pos:position pos:line="111" pos:column="57"/></condition><then pos:line="111" pos:column="57">
      <block pos:line="112" pos:column="7">{
	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name><name pos:line="113" pos:column="13">hd<pos:position pos:line="113" pos:column="15"/></name><operator pos:line="113" pos:column="15">-&gt;<pos:position pos:line="113" pos:column="20"/></operator><name pos:line="113" pos:column="17">priv_protocol<pos:position pos:line="113" pos:column="30"/></name></name> <operator pos:line="113" pos:column="31">==<pos:position pos:line="113" pos:column="33"/></operator> <name pos:line="113" pos:column="34">NULL<pos:position pos:line="113" pos:column="38"/></name></expr>)<pos:position pos:line="113" pos:column="39"/></condition><then pos:line="113" pos:column="39">
	<block pos:line="114" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="115" pos:column="11">WARNING<pos:position pos:line="115" pos:column="18"/></name> <argument_list pos:line="115" pos:column="19">(<argument><expr><literal type="string" pos:line="115" pos:column="20">"snmp plugin: `PrivacyProtocol' not given for host `%s'"<pos:position pos:line="115" pos:column="76"/></literal></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="78">hd<pos:position pos:line="115" pos:column="80"/></name><operator pos:line="115" pos:column="80">-&gt;<pos:position pos:line="115" pos:column="85"/></operator><name pos:line="115" pos:column="82">name<pos:position pos:line="115" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="88"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="116" pos:column="11">status<pos:position pos:line="116" pos:column="17"/></name> <operator pos:line="116" pos:column="18">=<pos:position pos:line="116" pos:column="19"/></operator> <operator pos:line="116" pos:column="20">-<pos:position pos:line="116" pos:column="21"/></operator><literal type="number" pos:line="116" pos:column="21">1<pos:position pos:line="116" pos:column="22"/></literal></expr>;<pos:position pos:line="116" pos:column="23"/></expr_stmt>
	  <break pos:line="117" pos:column="11">break;<pos:position pos:line="117" pos:column="17"/></break>
	}<pos:position pos:line="118" pos:column="10"/></block></then></if>
	<if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name><name pos:line="119" pos:column="13">hd<pos:position pos:line="119" pos:column="15"/></name><operator pos:line="119" pos:column="15">-&gt;<pos:position pos:line="119" pos:column="20"/></operator><name pos:line="119" pos:column="17">priv_passphrase<pos:position pos:line="119" pos:column="32"/></name></name> <operator pos:line="119" pos:column="33">==<pos:position pos:line="119" pos:column="35"/></operator> <name pos:line="119" pos:column="36">NULL<pos:position pos:line="119" pos:column="40"/></name></expr>)<pos:position pos:line="119" pos:column="41"/></condition><then pos:line="119" pos:column="41">
	<block pos:line="120" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="121" pos:column="11">WARNING<pos:position pos:line="121" pos:column="18"/></name> <argument_list pos:line="121" pos:column="19">(<argument><expr><literal type="string" pos:line="121" pos:column="20">"snmp plugin: `PrivacyPassphrase' not given for host `%s'"<pos:position pos:line="121" pos:column="78"/></literal></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="80">hd<pos:position pos:line="121" pos:column="82"/></name><operator pos:line="121" pos:column="82">-&gt;<pos:position pos:line="121" pos:column="87"/></operator><name pos:line="121" pos:column="84">name<pos:position pos:line="121" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="90"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="122" pos:column="11">status<pos:position pos:line="122" pos:column="17"/></name> <operator pos:line="122" pos:column="18">=<pos:position pos:line="122" pos:column="19"/></operator> <operator pos:line="122" pos:column="20">-<pos:position pos:line="122" pos:column="21"/></operator><literal type="number" pos:line="122" pos:column="21">1<pos:position pos:line="122" pos:column="22"/></literal></expr>;<pos:position pos:line="122" pos:column="23"/></expr_stmt>
	  <break pos:line="123" pos:column="11">break;<pos:position pos:line="123" pos:column="17"/></break>
	}<pos:position pos:line="124" pos:column="10"/></block></then></if>
      }<pos:position pos:line="125" pos:column="8"/></block></then></if>
    }<pos:position pos:line="126" pos:column="6"/></block></then></if>

    <break pos:line="128" pos:column="5">break;<pos:position pos:line="128" pos:column="11"/></break>
  }<pos:position pos:line="129" pos:column="4"/></block></while> <comment type="block" pos:line="129" pos:column="5">/* while (status == 0) */</comment>

  <if pos:line="131" pos:column="3">if <condition pos:line="131" pos:column="6">(<expr><name pos:line="131" pos:column="7">status<pos:position pos:line="131" pos:column="13"/></name> <operator pos:line="131" pos:column="14">!=<pos:position pos:line="131" pos:column="16"/></operator> <literal type="number" pos:line="131" pos:column="17">0<pos:position pos:line="131" pos:column="18"/></literal></expr>)<pos:position pos:line="131" pos:column="19"/></condition><then pos:line="131" pos:column="19">
  <block pos:line="132" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">csnmp_host_definition_destroy<pos:position pos:line="133" pos:column="34"/></name> <argument_list pos:line="133" pos:column="35">(<argument><expr><name pos:line="133" pos:column="36">hd<pos:position pos:line="133" pos:column="38"/></name></expr></argument>)<pos:position pos:line="133" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="40"/></expr_stmt>
    <return pos:line="134" pos:column="5">return <expr><operator pos:line="134" pos:column="12">(<pos:position pos:line="134" pos:column="13"/></operator><operator pos:line="134" pos:column="13">-<pos:position pos:line="134" pos:column="14"/></operator><literal type="number" pos:line="134" pos:column="14">1<pos:position pos:line="134" pos:column="15"/></literal><operator pos:line="134" pos:column="15">)<pos:position pos:line="134" pos:column="16"/></operator></expr>;<pos:position pos:line="134" pos:column="17"/></return>
  }<pos:position pos:line="135" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="137" pos:column="3">DEBUG<pos:position pos:line="137" pos:column="8"/></name> <argument_list pos:line="137" pos:column="9">(<argument><expr><literal type="string" pos:line="137" pos:column="10">"snmp plugin: hd = { name = %s, address = %s, community = %s, version = %i }"<pos:position pos:line="137" pos:column="87"/></literal></expr></argument>,
      <argument><expr><name><name pos:line="138" pos:column="7">hd<pos:position pos:line="138" pos:column="9"/></name><operator pos:line="138" pos:column="9">-&gt;<pos:position pos:line="138" pos:column="14"/></operator><name pos:line="138" pos:column="11">name<pos:position pos:line="138" pos:column="15"/></name></name></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="17">hd<pos:position pos:line="138" pos:column="19"/></name><operator pos:line="138" pos:column="19">-&gt;<pos:position pos:line="138" pos:column="24"/></operator><name pos:line="138" pos:column="21">address<pos:position pos:line="138" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="30">hd<pos:position pos:line="138" pos:column="32"/></name><operator pos:line="138" pos:column="32">-&gt;<pos:position pos:line="138" pos:column="37"/></operator><name pos:line="138" pos:column="34">community<pos:position pos:line="138" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="45">hd<pos:position pos:line="138" pos:column="47"/></name><operator pos:line="138" pos:column="47">-&gt;<pos:position pos:line="138" pos:column="52"/></operator><name pos:line="138" pos:column="49">version<pos:position pos:line="138" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="138" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="58"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="140" pos:column="3">ssnprintf<pos:position pos:line="140" pos:column="12"/></name> <argument_list pos:line="140" pos:column="13">(<argument><expr><name pos:line="140" pos:column="14">cb_name<pos:position pos:line="140" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="140" pos:column="23">sizeof <argument_list pos:line="140" pos:column="30">(<argument><expr><name pos:line="140" pos:column="31">cb_name<pos:position pos:line="140" pos:column="38"/></name></expr></argument>)<pos:position pos:line="140" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="41">"snmp-%s"<pos:position pos:line="140" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="52">hd<pos:position pos:line="140" pos:column="54"/></name><operator pos:line="140" pos:column="54">-&gt;<pos:position pos:line="140" pos:column="59"/></operator><name pos:line="140" pos:column="56">name<pos:position pos:line="140" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="62"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="142" pos:column="3">memset<pos:position pos:line="142" pos:column="9"/></name> <argument_list pos:line="142" pos:column="10">(<argument><expr><operator pos:line="142" pos:column="11">&amp;<pos:position pos:line="142" pos:column="16"/></operator><name pos:line="142" pos:column="12">cb_data<pos:position pos:line="142" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="21">0<pos:position pos:line="142" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="142" pos:column="24">sizeof <argument_list pos:line="142" pos:column="31">(<argument><expr><name pos:line="142" pos:column="32">cb_data<pos:position pos:line="142" pos:column="39"/></name></expr></argument>)<pos:position pos:line="142" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="142" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="143" pos:column="3">cb_data<pos:position pos:line="143" pos:column="10"/></name><operator pos:line="143" pos:column="10">.<pos:position pos:line="143" pos:column="11"/></operator><name pos:line="143" pos:column="11">data<pos:position pos:line="143" pos:column="15"/></name></name> <operator pos:line="143" pos:column="16">=<pos:position pos:line="143" pos:column="17"/></operator> <name pos:line="143" pos:column="18">hd<pos:position pos:line="143" pos:column="20"/></name></expr>;<pos:position pos:line="143" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="144" pos:column="3">cb_data<pos:position pos:line="144" pos:column="10"/></name><operator pos:line="144" pos:column="10">.<pos:position pos:line="144" pos:column="11"/></operator><name pos:line="144" pos:column="11">free_func<pos:position pos:line="144" pos:column="20"/></name></name> <operator pos:line="144" pos:column="21">=<pos:position pos:line="144" pos:column="22"/></operator> <name pos:line="144" pos:column="23">csnmp_host_definition_destroy<pos:position pos:line="144" pos:column="52"/></name></expr>;<pos:position pos:line="144" pos:column="53"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="146" pos:column="3">CDTIME_T_TO_TIMESPEC<pos:position pos:line="146" pos:column="23"/></name> <argument_list pos:line="146" pos:column="24">(<argument><expr><name><name pos:line="146" pos:column="25">hd<pos:position pos:line="146" pos:column="27"/></name><operator pos:line="146" pos:column="27">-&gt;<pos:position pos:line="146" pos:column="32"/></operator><name pos:line="146" pos:column="29">interval<pos:position pos:line="146" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="39">&amp;<pos:position pos:line="146" pos:column="44"/></operator><name pos:line="146" pos:column="40">cb_interval<pos:position pos:line="146" pos:column="51"/></name></expr></argument>)<pos:position pos:line="146" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="53"/></expr_stmt>

  <expr_stmt><expr><name pos:line="148" pos:column="3">status<pos:position pos:line="148" pos:column="9"/></name> <operator pos:line="148" pos:column="10">=<pos:position pos:line="148" pos:column="11"/></operator> <call><name pos:line="148" pos:column="12">plugin_register_complex_read<pos:position pos:line="148" pos:column="40"/></name> <argument_list pos:line="148" pos:column="41">(<comment type="block" pos:line="148" pos:column="42">/* group = */</comment> <argument><expr><name pos:line="148" pos:column="56">NULL<pos:position pos:line="148" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="62">cb_name<pos:position pos:line="148" pos:column="69"/></name></expr></argument>,
      <argument><expr><name pos:line="149" pos:column="7">csnmp_read_host<pos:position pos:line="149" pos:column="22"/></name></expr></argument>, <comment type="block" pos:line="149" pos:column="24">/* interval = */</comment> <argument><expr><operator pos:line="149" pos:column="41">&amp;<pos:position pos:line="149" pos:column="46"/></operator><name pos:line="149" pos:column="42">cb_interval<pos:position pos:line="149" pos:column="53"/></name></expr></argument>,
      <comment type="block" pos:line="150" pos:column="7">/* user_data = */</comment> <argument><expr><operator pos:line="150" pos:column="25">&amp;<pos:position pos:line="150" pos:column="30"/></operator><name pos:line="150" pos:column="26">cb_data<pos:position pos:line="150" pos:column="33"/></name></expr></argument>)<pos:position pos:line="150" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="35"/></expr_stmt>
  <if pos:line="151" pos:column="3">if <condition pos:line="151" pos:column="6">(<expr><name pos:line="151" pos:column="7">status<pos:position pos:line="151" pos:column="13"/></name> <operator pos:line="151" pos:column="14">!=<pos:position pos:line="151" pos:column="16"/></operator> <literal type="number" pos:line="151" pos:column="17">0<pos:position pos:line="151" pos:column="18"/></literal></expr>)<pos:position pos:line="151" pos:column="19"/></condition><then pos:line="151" pos:column="19">
  <block pos:line="152" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="153" pos:column="5">ERROR<pos:position pos:line="153" pos:column="10"/></name> <argument_list pos:line="153" pos:column="11">(<argument><expr><literal type="string" pos:line="153" pos:column="12">"snmp plugin: Registering complex read function failed."<pos:position pos:line="153" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="154" pos:column="5">csnmp_host_definition_destroy<pos:position pos:line="154" pos:column="34"/></name> <argument_list pos:line="154" pos:column="35">(<argument><expr><name pos:line="154" pos:column="36">hd<pos:position pos:line="154" pos:column="38"/></name></expr></argument>)<pos:position pos:line="154" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="40"/></expr_stmt>
    <return pos:line="155" pos:column="5">return <expr><operator pos:line="155" pos:column="12">(<pos:position pos:line="155" pos:column="13"/></operator><operator pos:line="155" pos:column="13">-<pos:position pos:line="155" pos:column="14"/></operator><literal type="number" pos:line="155" pos:column="14">1<pos:position pos:line="155" pos:column="15"/></literal><operator pos:line="155" pos:column="15">)<pos:position pos:line="155" pos:column="16"/></operator></expr>;<pos:position pos:line="155" pos:column="17"/></return>
  }<pos:position pos:line="156" pos:column="4"/></block></then></if>

  <return pos:line="158" pos:column="3">return <expr><operator pos:line="158" pos:column="10">(<pos:position pos:line="158" pos:column="11"/></operator><literal type="number" pos:line="158" pos:column="11">0<pos:position pos:line="158" pos:column="12"/></literal><operator pos:line="158" pos:column="12">)<pos:position pos:line="158" pos:column="13"/></operator></expr>;<pos:position pos:line="158" pos:column="14"/></return>
}<pos:position pos:line="159" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_485_collectd-4.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hddtemp_init<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">KERNEL_LINUX<pos:position pos:line="3" pos:column="17"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">fh<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">buf<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><literal type="number" pos:line="5" pos:column="18">1024<pos:position pos:line="5" pos:column="22"/></literal></expr>]<pos:position pos:line="5" pos:column="23"/></index></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">buflen<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name><name pos:line="8" pos:column="15">fields<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><literal type="number" pos:line="8" pos:column="22">16<pos:position pos:line="8" pos:column="24"/></literal></expr>]<pos:position pos:line="8" pos:column="25"/></index></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">num_fields<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">major<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">minor<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">name<pos:position pos:line="13" pos:column="19"/></name></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">hddname_t<pos:position pos:line="14" pos:column="18"/></name> <modifier pos:line="14" pos:column="19">*<pos:position pos:line="14" pos:column="20"/></modifier></type><name pos:line="14" pos:column="20">next<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">hddname_t<pos:position pos:line="15" pos:column="18"/></name> <modifier pos:line="15" pos:column="19">*<pos:position pos:line="15" pos:column="20"/></modifier></type><name pos:line="15" pos:column="20">entry<pos:position pos:line="15" pos:column="25"/></name></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">next<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">first_hddname<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
	<while pos:line="18" pos:column="9">while <condition pos:line="18" pos:column="15">(<expr><name pos:line="18" pos:column="16">next<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">!=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition>
	<block pos:line="19" pos:column="9">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">entry<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">next<pos:position pos:line="20" pos:column="29"/></name></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">next<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="24">entry<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">next<pos:position pos:line="21" pos:column="35"/></name></name></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="23" pos:column="17">free<pos:position pos:line="23" pos:column="21"/></name> <argument_list pos:line="23" pos:column="22">(<argument><expr><name><name pos:line="23" pos:column="23">entry<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">name<pos:position pos:line="23" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">free<pos:position pos:line="24" pos:column="21"/></name> <argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">entry<pos:position pos:line="24" pos:column="28"/></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></while>
	<expr_stmt><expr><name pos:line="26" pos:column="9">first_hddname<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">NULL<pos:position pos:line="26" pos:column="29"/></name></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">fh<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">fopen<pos:position pos:line="28" pos:column="24"/></name> <argument_list pos:line="28" pos:column="25">(<argument><expr><literal type="string" pos:line="28" pos:column="26">"/proc/partitions"<pos:position pos:line="28" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="46">"r"<pos:position pos:line="28" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call><operator pos:line="28" pos:column="50">)<pos:position pos:line="28" pos:column="51"/></operator> <operator pos:line="28" pos:column="52">!=<pos:position pos:line="28" pos:column="54"/></operator> <name pos:line="28" pos:column="55">NULL<pos:position pos:line="28" pos:column="59"/></name></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60">
	<block pos:line="29" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">DEBUG<pos:position pos:line="30" pos:column="22"/></name> <argument_list pos:line="30" pos:column="23">(<argument><expr><literal type="string" pos:line="30" pos:column="24">"Looking at /proc/partitions..."<pos:position pos:line="30" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>

		<while pos:line="32" pos:column="17">while <condition pos:line="32" pos:column="23">(<expr><call><name pos:line="32" pos:column="24">fgets<pos:position pos:line="32" pos:column="29"/></name> <argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">buf<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="36">sizeof <argument_list pos:line="32" pos:column="43">(<argument><expr><name pos:line="32" pos:column="44">buf<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">fh<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call> <operator pos:line="32" pos:column="54">!=<pos:position pos:line="32" pos:column="56"/></operator> <name pos:line="32" pos:column="57">NULL<pos:position pos:line="32" pos:column="61"/></name></expr>)<pos:position pos:line="32" pos:column="62"/></condition>
		<block pos:line="33" pos:column="17">{
			<comment type="block" pos:line="34" pos:column="25">/* Delete trailing newlines */</comment>
			<expr_stmt><expr><name pos:line="35" pos:column="25">buflen<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <call><name pos:line="35" pos:column="34">strlen<pos:position pos:line="35" pos:column="40"/></name> <argument_list pos:line="35" pos:column="41">(<argument><expr><name pos:line="35" pos:column="42">buf<pos:position pos:line="35" pos:column="45"/></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt>

			<while pos:line="37" pos:column="25">while <condition pos:line="37" pos:column="31">(<expr><operator pos:line="37" pos:column="32">(<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="33">buflen<pos:position pos:line="37" pos:column="39"/></name> <operator pos:line="37" pos:column="40">&gt;<pos:position pos:line="37" pos:column="44"/></operator> <literal type="number" pos:line="37" pos:column="42">0<pos:position pos:line="37" pos:column="43"/></literal><operator pos:line="37" pos:column="43">)<pos:position pos:line="37" pos:column="44"/></operator> <operator pos:line="37" pos:column="45">&amp;&amp;<pos:position pos:line="37" pos:column="55"/></operator> <operator pos:line="37" pos:column="48">(<pos:position pos:line="37" pos:column="49"/></operator><operator pos:line="37" pos:column="49">(<pos:position pos:line="37" pos:column="50"/></operator><name><name pos:line="37" pos:column="50">buf<pos:position pos:line="37" pos:column="53"/></name><index pos:line="37" pos:column="53">[<expr><name pos:line="37" pos:column="54">buflen<pos:position pos:line="37" pos:column="60"/></name><operator pos:line="37" pos:column="60">-<pos:position pos:line="37" pos:column="61"/></operator><literal type="number" pos:line="37" pos:column="61">1<pos:position pos:line="37" pos:column="62"/></literal></expr>]<pos:position pos:line="37" pos:column="63"/></index></name> <operator pos:line="37" pos:column="64">==<pos:position pos:line="37" pos:column="66"/></operator> <literal type="char" pos:line="37" pos:column="67">'\n'<pos:position pos:line="37" pos:column="71"/></literal><operator pos:line="37" pos:column="71">)<pos:position pos:line="37" pos:column="72"/></operator> <operator pos:line="37" pos:column="73">||<pos:position pos:line="37" pos:column="75"/></operator> <operator pos:line="37" pos:column="76">(<pos:position pos:line="37" pos:column="77"/></operator><name><name pos:line="37" pos:column="77">buf<pos:position pos:line="37" pos:column="80"/></name><index pos:line="37" pos:column="80">[<expr><name pos:line="37" pos:column="81">buflen<pos:position pos:line="37" pos:column="87"/></name><operator pos:line="37" pos:column="87">-<pos:position pos:line="37" pos:column="88"/></operator><literal type="number" pos:line="37" pos:column="88">1<pos:position pos:line="37" pos:column="89"/></literal></expr>]<pos:position pos:line="37" pos:column="90"/></index></name> <operator pos:line="37" pos:column="91">==<pos:position pos:line="37" pos:column="93"/></operator> <literal type="char" pos:line="37" pos:column="94">'\r'<pos:position pos:line="37" pos:column="98"/></literal><operator pos:line="37" pos:column="98">)<pos:position pos:line="37" pos:column="99"/></operator><operator pos:line="37" pos:column="99">)<pos:position pos:line="37" pos:column="100"/></operator></expr>)<pos:position pos:line="37" pos:column="101"/></condition>
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="33">buf<pos:position pos:line="38" pos:column="36"/></name><index pos:line="38" pos:column="36">[<expr><operator pos:line="38" pos:column="37">--<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="39">buflen<pos:position pos:line="38" pos:column="45"/></name></expr>]<pos:position pos:line="38" pos:column="46"/></index></name> <operator pos:line="38" pos:column="47">=<pos:position pos:line="38" pos:column="48"/></operator> <literal type="char" pos:line="38" pos:column="49">'\0'<pos:position pos:line="38" pos:column="53"/></literal></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt></block></while>

			<comment type="block" pos:line="40" pos:column="25">/* We want lines of the form:
			 *
			 *     3     1   77842926 hda1
			 *
			 * ...so, skip everything else. */</comment>
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name pos:line="45" pos:column="29">buflen<pos:position pos:line="45" pos:column="35"/></name> <operator pos:line="45" pos:column="36">==<pos:position pos:line="45" pos:column="38"/></operator> <literal type="number" pos:line="45" pos:column="39">0<pos:position pos:line="45" pos:column="40"/></literal></expr>)<pos:position pos:line="45" pos:column="41"/></condition><then pos:line="45" pos:column="41">
				<block type="pseudo"><continue pos:line="46" pos:column="33">continue;<pos:position pos:line="46" pos:column="42"/></continue></block></then></if>
			
			<expr_stmt><expr><name pos:line="48" pos:column="25">num_fields<pos:position pos:line="48" pos:column="35"/></name> <operator pos:line="48" pos:column="36">=<pos:position pos:line="48" pos:column="37"/></operator> <call><name pos:line="48" pos:column="38">strsplit<pos:position pos:line="48" pos:column="46"/></name> <argument_list pos:line="48" pos:column="47">(<argument><expr><name pos:line="48" pos:column="48">buf<pos:position pos:line="48" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="53">fields<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="61">16<pos:position pos:line="48" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="65"/></expr_stmt>

			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><name pos:line="50" pos:column="29">num_fields<pos:position pos:line="50" pos:column="39"/></name> <operator pos:line="50" pos:column="40">!=<pos:position pos:line="50" pos:column="42"/></operator> <literal type="number" pos:line="50" pos:column="43">4<pos:position pos:line="50" pos:column="44"/></literal></expr>)<pos:position pos:line="50" pos:column="45"/></condition><then pos:line="50" pos:column="45">
				<block type="pseudo"><continue pos:line="51" pos:column="33">continue;<pos:position pos:line="51" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><name pos:line="53" pos:column="25">major<pos:position pos:line="53" pos:column="30"/></name> <operator pos:line="53" pos:column="31">=<pos:position pos:line="53" pos:column="32"/></operator> <call><name pos:line="53" pos:column="33">atoi<pos:position pos:line="53" pos:column="37"/></name> <argument_list pos:line="53" pos:column="38">(<argument><expr><name><name pos:line="53" pos:column="39">fields<pos:position pos:line="53" pos:column="45"/></name><index pos:line="53" pos:column="45">[<expr><literal type="number" pos:line="53" pos:column="46">0<pos:position pos:line="53" pos:column="47"/></literal></expr>]<pos:position pos:line="53" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="54" pos:column="25">minor<pos:position pos:line="54" pos:column="30"/></name> <operator pos:line="54" pos:column="31">=<pos:position pos:line="54" pos:column="32"/></operator> <call><name pos:line="54" pos:column="33">atoi<pos:position pos:line="54" pos:column="37"/></name> <argument_list pos:line="54" pos:column="38">(<argument><expr><name><name pos:line="54" pos:column="39">fields<pos:position pos:line="54" pos:column="45"/></name><index pos:line="54" pos:column="45">[<expr><literal type="number" pos:line="54" pos:column="46">1<pos:position pos:line="54" pos:column="47"/></literal></expr>]<pos:position pos:line="54" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="50"/></expr_stmt>

			<comment type="block" pos:line="56" pos:column="25">/* We try to keep only entries, which may correspond to
			 * physical disks and that may have a corresponding
			 * entry in the hddtemp daemon. Basically, this means
			 * IDE and SCSI. */</comment>
			<switch pos:line="60" pos:column="25">switch <condition pos:line="60" pos:column="32">(<expr><name pos:line="60" pos:column="33">major<pos:position pos:line="60" pos:column="38"/></name></expr>)<pos:position pos:line="60" pos:column="39"/></condition>
			<block pos:line="61" pos:column="25">{
				<comment type="block" pos:line="62" pos:column="33">/* SCSI. */</comment>
				<case pos:line="63" pos:column="33">case <expr><name pos:line="63" pos:column="38">SCSI_DISK0_MAJOR<pos:position pos:line="63" pos:column="54"/></name></expr>:<pos:position pos:line="63" pos:column="55"/></case>
				<case pos:line="64" pos:column="33">case <expr><name pos:line="64" pos:column="38">SCSI_DISK1_MAJOR<pos:position pos:line="64" pos:column="54"/></name></expr>:<pos:position pos:line="64" pos:column="55"/></case>
				<case pos:line="65" pos:column="33">case <expr><name pos:line="65" pos:column="38">SCSI_DISK2_MAJOR<pos:position pos:line="65" pos:column="54"/></name></expr>:<pos:position pos:line="65" pos:column="55"/></case>
				<case pos:line="66" pos:column="33">case <expr><name pos:line="66" pos:column="38">SCSI_DISK3_MAJOR<pos:position pos:line="66" pos:column="54"/></name></expr>:<pos:position pos:line="66" pos:column="55"/></case>
				<case pos:line="67" pos:column="33">case <expr><name pos:line="67" pos:column="38">SCSI_DISK4_MAJOR<pos:position pos:line="67" pos:column="54"/></name></expr>:<pos:position pos:line="67" pos:column="55"/></case>
				<case pos:line="68" pos:column="33">case <expr><name pos:line="68" pos:column="38">SCSI_DISK5_MAJOR<pos:position pos:line="68" pos:column="54"/></name></expr>:<pos:position pos:line="68" pos:column="55"/></case>
				<case pos:line="69" pos:column="33">case <expr><name pos:line="69" pos:column="38">SCSI_DISK6_MAJOR<pos:position pos:line="69" pos:column="54"/></name></expr>:<pos:position pos:line="69" pos:column="55"/></case>
				<case pos:line="70" pos:column="33">case <expr><name pos:line="70" pos:column="38">SCSI_DISK7_MAJOR<pos:position pos:line="70" pos:column="54"/></name></expr>:<pos:position pos:line="70" pos:column="55"/></case>
<cpp:ifdef pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">ifdef<pos:position pos:line="71" pos:column="7"/></cpp:directive> <name pos:line="71" pos:column="8">SCSI_DISK8_MAJOR<pos:position pos:line="71" pos:column="24"/></name></cpp:ifdef>
				<case pos:line="72" pos:column="33">case <expr><name pos:line="72" pos:column="38">SCSI_DISK8_MAJOR<pos:position pos:line="72" pos:column="54"/></name></expr>:<pos:position pos:line="72" pos:column="55"/></case>
				<case pos:line="73" pos:column="33">case <expr><name pos:line="73" pos:column="38">SCSI_DISK9_MAJOR<pos:position pos:line="73" pos:column="54"/></name></expr>:<pos:position pos:line="73" pos:column="55"/></case>
				<case pos:line="74" pos:column="33">case <expr><name pos:line="74" pos:column="38">SCSI_DISK10_MAJOR<pos:position pos:line="74" pos:column="55"/></name></expr>:<pos:position pos:line="74" pos:column="56"/></case>
				<case pos:line="75" pos:column="33">case <expr><name pos:line="75" pos:column="38">SCSI_DISK11_MAJOR<pos:position pos:line="75" pos:column="55"/></name></expr>:<pos:position pos:line="75" pos:column="56"/></case>
				<case pos:line="76" pos:column="33">case <expr><name pos:line="76" pos:column="38">SCSI_DISK12_MAJOR<pos:position pos:line="76" pos:column="55"/></name></expr>:<pos:position pos:line="76" pos:column="56"/></case>
				<case pos:line="77" pos:column="33">case <expr><name pos:line="77" pos:column="38">SCSI_DISK13_MAJOR<pos:position pos:line="77" pos:column="55"/></name></expr>:<pos:position pos:line="77" pos:column="56"/></case>
				<case pos:line="78" pos:column="33">case <expr><name pos:line="78" pos:column="38">SCSI_DISK14_MAJOR<pos:position pos:line="78" pos:column="55"/></name></expr>:<pos:position pos:line="78" pos:column="56"/></case>
				<case pos:line="79" pos:column="33">case <expr><name pos:line="79" pos:column="38">SCSI_DISK15_MAJOR<pos:position pos:line="79" pos:column="55"/></name></expr>:<pos:position pos:line="79" pos:column="56"/></case>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif<pos:position pos:line="80" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="80" pos:column="8">/* SCSI_DISK8_MAJOR */</comment>
					<comment type="block" pos:line="81" pos:column="41">/* SCSI disks minors are multiples of 16.
					 * Keep only those. */</comment>
					<if pos:line="83" pos:column="41">if <condition pos:line="83" pos:column="44">(<expr><name pos:line="83" pos:column="45">minor<pos:position pos:line="83" pos:column="50"/></name> <operator pos:line="83" pos:column="51">%<pos:position pos:line="83" pos:column="52"/></operator> <literal type="number" pos:line="83" pos:column="53">16<pos:position pos:line="83" pos:column="55"/></literal></expr>)<pos:position pos:line="83" pos:column="56"/></condition><then pos:line="83" pos:column="56">
						<block type="pseudo"><continue pos:line="84" pos:column="49">continue;<pos:position pos:line="84" pos:column="58"/></continue></block></then></if>
					<break pos:line="85" pos:column="41">break;<pos:position pos:line="85" pos:column="47"/></break>

				<comment type="block" pos:line="87" pos:column="33">/* IDE. */</comment>
				<case pos:line="88" pos:column="33">case <expr><name pos:line="88" pos:column="38">IDE0_MAJOR<pos:position pos:line="88" pos:column="48"/></name></expr>:<pos:position pos:line="88" pos:column="49"/></case>
				<case pos:line="89" pos:column="33">case <expr><name pos:line="89" pos:column="38">IDE1_MAJOR<pos:position pos:line="89" pos:column="48"/></name></expr>:<pos:position pos:line="89" pos:column="49"/></case>
				<case pos:line="90" pos:column="33">case <expr><name pos:line="90" pos:column="38">IDE2_MAJOR<pos:position pos:line="90" pos:column="48"/></name></expr>:<pos:position pos:line="90" pos:column="49"/></case>
				<case pos:line="91" pos:column="33">case <expr><name pos:line="91" pos:column="38">IDE3_MAJOR<pos:position pos:line="91" pos:column="48"/></name></expr>:<pos:position pos:line="91" pos:column="49"/></case>
				<case pos:line="92" pos:column="33">case <expr><name pos:line="92" pos:column="38">IDE4_MAJOR<pos:position pos:line="92" pos:column="48"/></name></expr>:<pos:position pos:line="92" pos:column="49"/></case>
				<case pos:line="93" pos:column="33">case <expr><name pos:line="93" pos:column="38">IDE5_MAJOR<pos:position pos:line="93" pos:column="48"/></name></expr>:<pos:position pos:line="93" pos:column="49"/></case>
				<case pos:line="94" pos:column="33">case <expr><name pos:line="94" pos:column="38">IDE6_MAJOR<pos:position pos:line="94" pos:column="48"/></name></expr>:<pos:position pos:line="94" pos:column="49"/></case>
				<case pos:line="95" pos:column="33">case <expr><name pos:line="95" pos:column="38">IDE7_MAJOR<pos:position pos:line="95" pos:column="48"/></name></expr>:<pos:position pos:line="95" pos:column="49"/></case>
				<case pos:line="96" pos:column="33">case <expr><name pos:line="96" pos:column="38">IDE8_MAJOR<pos:position pos:line="96" pos:column="48"/></name></expr>:<pos:position pos:line="96" pos:column="49"/></case>
				<case pos:line="97" pos:column="33">case <expr><name pos:line="97" pos:column="38">IDE9_MAJOR<pos:position pos:line="97" pos:column="48"/></name></expr>:<pos:position pos:line="97" pos:column="49"/></case>
					<comment type="block" pos:line="98" pos:column="41">/* IDE disks minors can only be 0 or 64.
					 * Keep only those. */</comment>
					<if pos:line="100" pos:column="41">if<condition pos:line="100" pos:column="43">(<expr><name pos:line="100" pos:column="44">minor<pos:position pos:line="100" pos:column="49"/></name> <operator pos:line="100" pos:column="50">!=<pos:position pos:line="100" pos:column="52"/></operator> <literal type="number" pos:line="100" pos:column="53">0<pos:position pos:line="100" pos:column="54"/></literal> <operator pos:line="100" pos:column="55">&amp;&amp;<pos:position pos:line="100" pos:column="65"/></operator> <name pos:line="100" pos:column="58">minor<pos:position pos:line="100" pos:column="63"/></name> <operator pos:line="100" pos:column="64">!=<pos:position pos:line="100" pos:column="66"/></operator> <literal type="number" pos:line="100" pos:column="67">64<pos:position pos:line="100" pos:column="69"/></literal></expr>)<pos:position pos:line="100" pos:column="70"/></condition><then pos:line="100" pos:column="70">
						<block type="pseudo"><continue pos:line="101" pos:column="49">continue;<pos:position pos:line="101" pos:column="58"/></continue></block></then></if>
					<break pos:line="102" pos:column="41">break;<pos:position pos:line="102" pos:column="47"/></break>

				<comment type="block" pos:line="104" pos:column="33">/* Skip all other majors. */</comment>
				<default pos:line="105" pos:column="33">default:<pos:position pos:line="105" pos:column="41"/></default>
					<expr_stmt><expr><call><name pos:line="106" pos:column="41">DEBUG<pos:position pos:line="106" pos:column="46"/></name> <argument_list pos:line="106" pos:column="47">(<argument><expr><literal type="string" pos:line="106" pos:column="48">"Skipping unknown major %i"<pos:position pos:line="106" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="77">major<pos:position pos:line="106" pos:column="82"/></name></expr></argument>)<pos:position pos:line="106" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="84"/></expr_stmt>
					<continue pos:line="107" pos:column="41">continue;<pos:position pos:line="107" pos:column="50"/></continue>
			}<pos:position pos:line="108" pos:column="26"/></block></switch> <comment type="block" pos:line="108" pos:column="27">/* switch (major) */</comment>

			<if pos:line="110" pos:column="25">if <condition pos:line="110" pos:column="28">(<expr><operator pos:line="110" pos:column="29">(<pos:position pos:line="110" pos:column="30"/></operator><name pos:line="110" pos:column="30">name<pos:position pos:line="110" pos:column="34"/></name> <operator pos:line="110" pos:column="35">=<pos:position pos:line="110" pos:column="36"/></operator> <call><name pos:line="110" pos:column="37">strdup<pos:position pos:line="110" pos:column="43"/></name> <argument_list pos:line="110" pos:column="44">(<argument><expr><name><name pos:line="110" pos:column="45">fields<pos:position pos:line="110" pos:column="51"/></name><index pos:line="110" pos:column="51">[<expr><literal type="number" pos:line="110" pos:column="52">3<pos:position pos:line="110" pos:column="53"/></literal></expr>]<pos:position pos:line="110" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="110" pos:column="55"/></argument_list></call><operator pos:line="110" pos:column="55">)<pos:position pos:line="110" pos:column="56"/></operator> <operator pos:line="110" pos:column="57">==<pos:position pos:line="110" pos:column="59"/></operator> <name pos:line="110" pos:column="60">NULL<pos:position pos:line="110" pos:column="64"/></name></expr>)<pos:position pos:line="110" pos:column="65"/></condition><then pos:line="110" pos:column="65">
			<block pos:line="111" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="112" pos:column="33">ERROR<pos:position pos:line="112" pos:column="38"/></name> <argument_list pos:line="112" pos:column="39">(<argument><expr><literal type="string" pos:line="112" pos:column="40">"hddtemp: strdup(%s) == NULL"<pos:position pos:line="112" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="71">fields<pos:position pos:line="112" pos:column="77"/></name><index pos:line="112" pos:column="77">[<expr><literal type="number" pos:line="112" pos:column="78">3<pos:position pos:line="112" pos:column="79"/></literal></expr>]<pos:position pos:line="112" pos:column="80"/></index></name></expr></argument>)<pos:position pos:line="112" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="82"/></expr_stmt>
				<continue pos:line="113" pos:column="33">continue;<pos:position pos:line="113" pos:column="42"/></continue>
			}<pos:position pos:line="114" pos:column="26"/></block></then></if>

			<if pos:line="116" pos:column="25">if <condition pos:line="116" pos:column="28">(<expr><operator pos:line="116" pos:column="29">(<pos:position pos:line="116" pos:column="30"/></operator><name pos:line="116" pos:column="30">entry<pos:position pos:line="116" pos:column="35"/></name> <operator pos:line="116" pos:column="36">=<pos:position pos:line="116" pos:column="37"/></operator> <operator pos:line="116" pos:column="38">(<pos:position pos:line="116" pos:column="39"/></operator><name pos:line="116" pos:column="39">hddname_t<pos:position pos:line="116" pos:column="48"/></name> <operator pos:line="116" pos:column="49">*<pos:position pos:line="116" pos:column="50"/></operator><operator pos:line="116" pos:column="50">)<pos:position pos:line="116" pos:column="51"/></operator> <call><name pos:line="116" pos:column="52">malloc<pos:position pos:line="116" pos:column="58"/></name> <argument_list pos:line="116" pos:column="59">(<argument><expr><sizeof pos:line="116" pos:column="60">sizeof <argument_list pos:line="116" pos:column="67">(<argument><expr><name pos:line="116" pos:column="68">hddname_t<pos:position pos:line="116" pos:column="77"/></name></expr></argument>)<pos:position pos:line="116" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="116" pos:column="79"/></argument_list></call><operator pos:line="116" pos:column="79">)<pos:position pos:line="116" pos:column="80"/></operator> <operator pos:line="116" pos:column="81">==<pos:position pos:line="116" pos:column="83"/></operator> <name pos:line="116" pos:column="84">NULL<pos:position pos:line="116" pos:column="88"/></name></expr>)<pos:position pos:line="116" pos:column="89"/></condition><then pos:line="116" pos:column="89">
			<block pos:line="117" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="118" pos:column="33">ERROR<pos:position pos:line="118" pos:column="38"/></name> <argument_list pos:line="118" pos:column="39">(<argument><expr><literal type="string" pos:line="118" pos:column="40">"hddtemp: malloc (%u) == NULL"<pos:position pos:line="118" pos:column="70"/></literal></expr></argument>,
						<argument><expr><operator pos:line="119" pos:column="49">(<pos:position pos:line="119" pos:column="50"/></operator><name pos:line="119" pos:column="50">unsigned<pos:position pos:line="119" pos:column="58"/></name> <name pos:line="119" pos:column="59">int<pos:position pos:line="119" pos:column="62"/></name><operator pos:line="119" pos:column="62">)<pos:position pos:line="119" pos:column="63"/></operator> <sizeof pos:line="119" pos:column="64">sizeof <argument_list pos:line="119" pos:column="71">(<argument><expr><name pos:line="119" pos:column="72">hddname_t<pos:position pos:line="119" pos:column="81"/></name></expr></argument>)<pos:position pos:line="119" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="119" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="84"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="120" pos:column="33">free<pos:position pos:line="120" pos:column="37"/></name> <argument_list pos:line="120" pos:column="38">(<argument><expr><name pos:line="120" pos:column="39">name<pos:position pos:line="120" pos:column="43"/></name></expr></argument>)<pos:position pos:line="120" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="45"/></expr_stmt>
				<continue pos:line="121" pos:column="33">continue;<pos:position pos:line="121" pos:column="42"/></continue>
			}<pos:position pos:line="122" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name pos:line="124" pos:column="25">DEBUG<pos:position pos:line="124" pos:column="30"/></name> <argument_list pos:line="124" pos:column="31">(<argument><expr><literal type="string" pos:line="124" pos:column="32">"Found disk: %s (%u:%u)."<pos:position pos:line="124" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="124" pos:column="59">name<pos:position pos:line="124" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="65">major<pos:position pos:line="124" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="72">minor<pos:position pos:line="124" pos:column="77"/></name></expr></argument>)<pos:position pos:line="124" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="79"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="126" pos:column="25">entry<pos:position pos:line="126" pos:column="30"/></name><operator pos:line="126" pos:column="30">-&gt;<pos:position pos:line="126" pos:column="35"/></operator><name pos:line="126" pos:column="32">major<pos:position pos:line="126" pos:column="37"/></name></name> <operator pos:line="126" pos:column="38">=<pos:position pos:line="126" pos:column="39"/></operator> <name pos:line="126" pos:column="40">major<pos:position pos:line="126" pos:column="45"/></name></expr>;<pos:position pos:line="126" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="127" pos:column="25">entry<pos:position pos:line="127" pos:column="30"/></name><operator pos:line="127" pos:column="30">-&gt;<pos:position pos:line="127" pos:column="35"/></operator><name pos:line="127" pos:column="32">minor<pos:position pos:line="127" pos:column="37"/></name></name> <operator pos:line="127" pos:column="38">=<pos:position pos:line="127" pos:column="39"/></operator> <name pos:line="127" pos:column="40">minor<pos:position pos:line="127" pos:column="45"/></name></expr>;<pos:position pos:line="127" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="128" pos:column="25">entry<pos:position pos:line="128" pos:column="30"/></name><operator pos:line="128" pos:column="30">-&gt;<pos:position pos:line="128" pos:column="35"/></operator><name pos:line="128" pos:column="32">name<pos:position pos:line="128" pos:column="36"/></name></name>  <operator pos:line="128" pos:column="38">=<pos:position pos:line="128" pos:column="39"/></operator> <name pos:line="128" pos:column="40">name<pos:position pos:line="128" pos:column="44"/></name></expr>;<pos:position pos:line="128" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="129" pos:column="25">entry<pos:position pos:line="129" pos:column="30"/></name><operator pos:line="129" pos:column="30">-&gt;<pos:position pos:line="129" pos:column="35"/></operator><name pos:line="129" pos:column="32">next<pos:position pos:line="129" pos:column="36"/></name></name>  <operator pos:line="129" pos:column="38">=<pos:position pos:line="129" pos:column="39"/></operator> <name pos:line="129" pos:column="40">NULL<pos:position pos:line="129" pos:column="44"/></name></expr>;<pos:position pos:line="129" pos:column="45"/></expr_stmt>

			<if pos:line="131" pos:column="25">if <condition pos:line="131" pos:column="28">(<expr><name pos:line="131" pos:column="29">first_hddname<pos:position pos:line="131" pos:column="42"/></name> <operator pos:line="131" pos:column="43">==<pos:position pos:line="131" pos:column="45"/></operator> <name pos:line="131" pos:column="46">NULL<pos:position pos:line="131" pos:column="50"/></name></expr>)<pos:position pos:line="131" pos:column="51"/></condition><then pos:line="131" pos:column="51">
			<block pos:line="132" pos:column="25">{
				<expr_stmt><expr><name pos:line="133" pos:column="33">first_hddname<pos:position pos:line="133" pos:column="46"/></name> <operator pos:line="133" pos:column="47">=<pos:position pos:line="133" pos:column="48"/></operator> <name pos:line="133" pos:column="49">entry<pos:position pos:line="133" pos:column="54"/></name></expr>;<pos:position pos:line="133" pos:column="55"/></expr_stmt>
			}<pos:position pos:line="134" pos:column="26"/></block></then>
			<else pos:line="135" pos:column="25">else
			<block pos:line="136" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="137" pos:column="33">entry<pos:position pos:line="137" pos:column="38"/></name><operator pos:line="137" pos:column="38">-&gt;<pos:position pos:line="137" pos:column="43"/></operator><name pos:line="137" pos:column="40">next<pos:position pos:line="137" pos:column="44"/></name></name> <operator pos:line="137" pos:column="45">=<pos:position pos:line="137" pos:column="46"/></operator> <name pos:line="137" pos:column="47">first_hddname<pos:position pos:line="137" pos:column="60"/></name></expr>;<pos:position pos:line="137" pos:column="61"/></expr_stmt>
				<expr_stmt><expr><name pos:line="138" pos:column="33">first_hddname<pos:position pos:line="138" pos:column="46"/></name> <operator pos:line="138" pos:column="47">=<pos:position pos:line="138" pos:column="48"/></operator> <name pos:line="138" pos:column="49">entry<pos:position pos:line="138" pos:column="54"/></name></expr>;<pos:position pos:line="138" pos:column="55"/></expr_stmt>
			}<pos:position pos:line="139" pos:column="26"/></block></else></if>
		}<pos:position pos:line="140" pos:column="18"/></block></while>
		<expr_stmt><expr><call><name pos:line="141" pos:column="17">fclose<pos:position pos:line="141" pos:column="23"/></name> <argument_list pos:line="141" pos:column="24">(<argument><expr><name pos:line="141" pos:column="25">fh<pos:position pos:line="141" pos:column="27"/></name></expr></argument>)<pos:position pos:line="141" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="142" pos:column="10"/></block></then>
<cpp:if pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">if<pos:position pos:line="143" pos:column="4"/></cpp:directive> <expr><name pos:line="143" pos:column="5">COLLECT_DEBUG<pos:position pos:line="143" pos:column="18"/></name></expr></cpp:if>
	<else pos:line="144" pos:column="9">else
	<block pos:line="145" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="146" pos:column="17">char<pos:position pos:line="146" pos:column="21"/></name></type> <name><name pos:line="146" pos:column="22">errbuf<pos:position pos:line="146" pos:column="28"/></name><index pos:line="146" pos:column="28">[<expr><literal type="number" pos:line="146" pos:column="29">1024<pos:position pos:line="146" pos:column="33"/></literal></expr>]<pos:position pos:line="146" pos:column="34"/></index></name></decl>;<pos:position pos:line="146" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="147" pos:column="17">DEBUG<pos:position pos:line="147" pos:column="22"/></name> <argument_list pos:line="147" pos:column="23">(<argument><expr><literal type="string" pos:line="147" pos:column="24">"Could not open /proc/partitions: %s"<pos:position pos:line="147" pos:column="61"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="148" pos:column="33">sstrerror<pos:position pos:line="148" pos:column="42"/></name> <argument_list pos:line="148" pos:column="43">(<argument><expr><name pos:line="148" pos:column="44">errno<pos:position pos:line="148" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="51">errbuf<pos:position pos:line="148" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="148" pos:column="59">sizeof <argument_list pos:line="148" pos:column="66">(<argument><expr><name pos:line="148" pos:column="67">errbuf<pos:position pos:line="148" pos:column="73"/></name></expr></argument>)<pos:position pos:line="148" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="148" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="148" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="149" pos:column="10"/></block></else></if>
<cpp:endif pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">endif<pos:position pos:line="150" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="150" pos:column="8">/* COLLECT_DEBUG */</comment>
<cpp:endif pos:line="151" pos:column="1">#<cpp:directive pos:line="151" pos:column="2">endif<pos:position pos:line="151" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="151" pos:column="8">/* KERNEL_LINUX */</comment>

	<return pos:line="153" pos:column="9">return <expr><operator pos:line="153" pos:column="16">(<pos:position pos:line="153" pos:column="17"/></operator><literal type="number" pos:line="153" pos:column="17">0<pos:position pos:line="153" pos:column="18"/></literal><operator pos:line="153" pos:column="18">)<pos:position pos:line="153" pos:column="19"/></operator></expr>;<pos:position pos:line="153" pos:column="20"/></return>
}<pos:position pos:line="154" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1950_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wt_config_tsd<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">oconfig_item_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ci<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">struct<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">wt_callback<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">cb<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">user_data_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">user_data<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">callback_name<pos:position pos:line="5" pos:column="23"/></name><index pos:line="5" pos:column="23">[<expr><name pos:line="5" pos:column="24">DATA_MAX_NAME_LEN<pos:position pos:line="5" pos:column="41"/></name></expr>]<pos:position pos:line="5" pos:column="42"/></index></name></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">cb<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">malloc<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><sizeof pos:line="8" pos:column="17">sizeof<argument_list pos:line="8" pos:column="23">(<argument><expr><operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">cb<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">cb<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
    <block pos:line="10" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ERROR<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><literal type="string" pos:line="11" pos:column="15">"write_tsdb plugin: malloc failed."<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><operator pos:line="12" pos:column="16">-<pos:position pos:line="12" pos:column="17"/></operator><literal type="number" pos:line="12" pos:column="17">1<pos:position pos:line="12" pos:column="18"/></literal></expr>;<pos:position pos:line="12" pos:column="19"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">memset<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">cb<pos:position pos:line="14" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="19">sizeof<argument_list pos:line="14" pos:column="25">(<argument><expr><operator pos:line="14" pos:column="26">*<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">cb<pos:position pos:line="14" pos:column="29"/></name></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">cb<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">sock_fd<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">-<pos:position pos:line="15" pos:column="20"/></operator><literal type="number" pos:line="15" pos:column="20">1<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">cb<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">node<pos:position pos:line="16" pos:column="13"/></name></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">cb<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">service<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">cb<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">host_tags<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">NULL<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">cb<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">store_rates<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="23">0<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">pthread_mutex_init<pos:position pos:line="21" pos:column="23"/></name> <argument_list pos:line="21" pos:column="24">(<argument><expr><operator pos:line="21" pos:column="25">&amp;<pos:position pos:line="21" pos:column="30"/></operator><name><name pos:line="21" pos:column="26">cb<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">send_lock<pos:position pos:line="21" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">NULL<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>

    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">i<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <literal type="number" pos:line="23" pos:column="14">0<pos:position pos:line="23" pos:column="15"/></literal></expr>;<pos:position pos:line="23" pos:column="16"/></init> <condition><expr><name pos:line="23" pos:column="17">i<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">&lt;<pos:position pos:line="23" pos:column="23"/></operator> <name><name pos:line="23" pos:column="21">ci<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">-&gt;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="25">children_num<pos:position pos:line="23" pos:column="37"/></name></name></expr>;<pos:position pos:line="23" pos:column="38"/></condition> <incr><expr><name pos:line="23" pos:column="39">i<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">++<pos:position pos:line="23" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="43"/></control>
    <block pos:line="24" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">oconfig_item_t<pos:position pos:line="25" pos:column="23"/></name> <modifier pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></modifier></type><name pos:line="25" pos:column="25">child<pos:position pos:line="25" pos:column="30"/></name> <init pos:line="25" pos:column="31">= <expr><name><name pos:line="25" pos:column="33">ci<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">children<pos:position pos:line="25" pos:column="45"/></name></name> <operator pos:line="25" pos:column="46">+<pos:position pos:line="25" pos:column="47"/></operator> <name pos:line="25" pos:column="48">i<pos:position pos:line="25" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="50"/></decl_stmt>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">strcasecmp<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="string" pos:line="27" pos:column="24">"Host"<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="32">child<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">key<pos:position pos:line="27" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call> <operator pos:line="27" pos:column="44">==<pos:position pos:line="27" pos:column="46"/></operator> <literal type="number" pos:line="27" pos:column="47">0<pos:position pos:line="27" pos:column="48"/></literal></expr>)<pos:position pos:line="27" pos:column="49"/></condition><then pos:line="27" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="13">cf_util_get_string<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">child<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="39">&amp;<pos:position pos:line="28" pos:column="44"/></operator><name><name pos:line="28" pos:column="40">cb<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">-&gt;<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="44">node<pos:position pos:line="28" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt></block></then>
        <elseif pos:line="29" pos:column="9">else <if pos:line="29" pos:column="14">if <condition pos:line="29" pos:column="17">(<expr><call><name pos:line="29" pos:column="18">strcasecmp<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"Port"<pos:position pos:line="29" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="37">child<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">key<pos:position pos:line="29" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call> <operator pos:line="29" pos:column="49">==<pos:position pos:line="29" pos:column="51"/></operator> <literal type="number" pos:line="29" pos:column="52">0<pos:position pos:line="29" pos:column="53"/></literal></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="13">cf_util_get_service<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name pos:line="30" pos:column="33">child<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="40">&amp;<pos:position pos:line="30" pos:column="45"/></operator><name><name pos:line="30" pos:column="41">cb<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">-&gt;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="45">service<pos:position pos:line="30" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><call><name pos:line="31" pos:column="18">strcasecmp<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><literal type="string" pos:line="31" pos:column="29">"HostTags"<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="41">child<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">-&gt;<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="48">key<pos:position pos:line="31" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call> <operator pos:line="31" pos:column="53">==<pos:position pos:line="31" pos:column="55"/></operator> <literal type="number" pos:line="31" pos:column="56">0<pos:position pos:line="31" pos:column="57"/></literal></expr>)<pos:position pos:line="31" pos:column="58"/></condition><then pos:line="31" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="13">cf_util_get_string<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">child<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="39">&amp;<pos:position pos:line="32" pos:column="44"/></operator><name><name pos:line="32" pos:column="40">cb<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">host_tags<pos:position pos:line="32" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="33" pos:column="9">else <if pos:line="33" pos:column="14">if <condition pos:line="33" pos:column="17">(<expr><call><name pos:line="33" pos:column="18">strcasecmp<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><literal type="string" pos:line="33" pos:column="29">"StoreRates"<pos:position pos:line="33" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="43">child<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">-&gt;<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="50">key<pos:position pos:line="33" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call> <operator pos:line="33" pos:column="55">==<pos:position pos:line="33" pos:column="57"/></operator> <literal type="number" pos:line="33" pos:column="58">0<pos:position pos:line="33" pos:column="59"/></literal></expr>)<pos:position pos:line="33" pos:column="60"/></condition><then pos:line="33" pos:column="60">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="13">cf_util_get_boolean<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">child<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="40">&amp;<pos:position pos:line="34" pos:column="45"/></operator><name><name pos:line="34" pos:column="41">cb<pos:position pos:line="34" pos:column="43"/></name><operator pos:line="34" pos:column="43">-&gt;<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="45">store_rates<pos:position pos:line="34" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="35" pos:column="9">else <if pos:line="35" pos:column="14">if <condition pos:line="35" pos:column="17">(<expr><call><name pos:line="35" pos:column="18">strcasecmp<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><literal type="string" pos:line="35" pos:column="29">"AlwaysAppendDS"<pos:position pos:line="35" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="47">child<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">-&gt;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="54">key<pos:position pos:line="35" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call> <operator pos:line="35" pos:column="59">==<pos:position pos:line="35" pos:column="61"/></operator> <literal type="number" pos:line="35" pos:column="62">0<pos:position pos:line="35" pos:column="63"/></literal></expr>)<pos:position pos:line="35" pos:column="64"/></condition><then pos:line="35" pos:column="64">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="13">cf_util_get_boolean<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">child<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="40">&amp;<pos:position pos:line="36" pos:column="45"/></operator><name><name pos:line="36" pos:column="41">cb<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">-&gt;<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="45">always_append_ds<pos:position pos:line="36" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="63"/></expr_stmt></block></then></if></elseif>
        <else pos:line="37" pos:column="9">else
        <block pos:line="38" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">ERROR<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><literal type="string" pos:line="39" pos:column="19">"write_tsdb plugin: Invalid configuration "<pos:position pos:line="39" pos:column="62"/></literal>
                  <literal type="string" pos:line="40" pos:column="19">"option: %s."<pos:position pos:line="40" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="34">child<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">-&gt;<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="41">key<pos:position pos:line="40" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></else></if>
    }<pos:position pos:line="42" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ssnprintf<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name pos:line="44" pos:column="15">callback_name<pos:position pos:line="44" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="30">sizeof<argument_list pos:line="44" pos:column="36">(<argument><expr><name pos:line="44" pos:column="37">callback_name<pos:position pos:line="44" pos:column="50"/></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="53">"write_tsdb/%s/%s"<pos:position pos:line="44" pos:column="71"/></literal></expr></argument>,
              <argument><expr><ternary><condition><expr><name><name pos:line="45" pos:column="15">cb<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">-&gt;<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="19">node<pos:position pos:line="45" pos:column="23"/></name></name> <operator pos:line="45" pos:column="24">!=<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">NULL<pos:position pos:line="45" pos:column="31"/></name></expr> ?<pos:position pos:line="45" pos:column="33"/></condition><then pos:line="45" pos:column="33"> <expr><name><name pos:line="45" pos:column="34">cb<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">node<pos:position pos:line="45" pos:column="42"/></name></name></expr> <pos:position pos:line="45" pos:column="43"/></then><else pos:line="45" pos:column="43">: <expr><name pos:line="45" pos:column="45">WT_DEFAULT_NODE<pos:position pos:line="45" pos:column="60"/></name></expr></else></ternary></expr></argument>,
              <argument><expr><ternary><condition><expr><name><name pos:line="46" pos:column="15">cb<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">service<pos:position pos:line="46" pos:column="26"/></name></name> <operator pos:line="46" pos:column="27">!=<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="30">NULL<pos:position pos:line="46" pos:column="34"/></name></expr> ?<pos:position pos:line="46" pos:column="36"/></condition><then pos:line="46" pos:column="36"> <expr><name><name pos:line="46" pos:column="37">cb<pos:position pos:line="46" pos:column="39"/></name><operator pos:line="46" pos:column="39">-&gt;<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="41">service<pos:position pos:line="46" pos:column="48"/></name></name></expr> <pos:position pos:line="46" pos:column="49"/></then><else pos:line="46" pos:column="49">: <expr><name pos:line="46" pos:column="51">WT_DEFAULT_SERVICE<pos:position pos:line="46" pos:column="69"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="46" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="71"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">memset<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><operator pos:line="48" pos:column="12">&amp;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="13">user_data<pos:position pos:line="48" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="24">0<pos:position pos:line="48" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="27">sizeof<argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">user_data<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">user_data<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">.<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="15">data<pos:position pos:line="49" pos:column="19"/></name></name> <operator pos:line="49" pos:column="20">=<pos:position pos:line="49" pos:column="21"/></operator> <name pos:line="49" pos:column="22">cb<pos:position pos:line="49" pos:column="24"/></name></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">user_data<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">.<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="15">free_func<pos:position pos:line="50" pos:column="24"/></name></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <name pos:line="50" pos:column="27">wt_callback_free<pos:position pos:line="50" pos:column="43"/></name></expr>;<pos:position pos:line="50" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">plugin_register_write<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">callback_name<pos:position pos:line="51" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="42">wt_write<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="52">&amp;<pos:position pos:line="51" pos:column="57"/></operator><name pos:line="51" pos:column="53">user_data<pos:position pos:line="51" pos:column="62"/></name></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="64"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="53" pos:column="5">user_data<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">.<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">free_func<pos:position pos:line="53" pos:column="24"/></name></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">NULL<pos:position pos:line="53" pos:column="31"/></name></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">plugin_register_flush<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><name pos:line="54" pos:column="27">callback_name<pos:position pos:line="54" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="42">wt_flush<pos:position pos:line="54" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="52">&amp;<pos:position pos:line="54" pos:column="57"/></operator><name pos:line="54" pos:column="53">user_data<pos:position pos:line="54" pos:column="62"/></name></expr></argument>)<pos:position pos:line="54" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="64"/></expr_stmt>

    <return pos:line="56" pos:column="5">return <expr><literal type="number" pos:line="56" pos:column="12">0<pos:position pos:line="56" pos:column="13"/></literal></expr>;<pos:position pos:line="56" pos:column="14"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

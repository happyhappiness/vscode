<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1499_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">domain_connection_change_handler<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">ipmi_domain_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">domain<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">int<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">err<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="2" pos:column="46">unsigned<pos:position pos:line="2" pos:column="54"/></name> <name pos:line="2" pos:column="55">int<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">conn_num<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="3" pos:column="46">unsigned<pos:position pos:line="3" pos:column="54"/></name> <name pos:line="3" pos:column="55">int<pos:position pos:line="3" pos:column="58"/></name></type> <name pos:line="3" pos:column="59">port_num<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="4" pos:column="46">int<pos:position pos:line="4" pos:column="49"/></name></type> <name pos:line="4" pos:column="50">still_connected<pos:position pos:line="4" pos:column="65"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="5" pos:column="46">void<pos:position pos:line="5" pos:column="50"/></name> <modifier pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></modifier></type><name pos:line="5" pos:column="52">user_data<pos:position pos:line="5" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="62"/></parameter_list> <block pos:line="5" pos:column="63">{

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">DEBUG<pos:position pos:line="7" pos:column="8"/></name><argument_list pos:line="7" pos:column="8">(<argument><expr><literal type="string" pos:line="7" pos:column="9">"domain_connection_change_handler (domain = %p, err = %i, "<pos:position pos:line="7" pos:column="68"/></literal>
        <literal type="string" pos:line="8" pos:column="9">"conn_num = %u, port_num = %u, still_connected = %i, "<pos:position pos:line="8" pos:column="63"/></literal>
        <literal type="string" pos:line="9" pos:column="9">"user_data = %p);"<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>,
        <argument><expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">void<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></operator><operator pos:line="10" pos:column="16">)<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">domain<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="25">err<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="30">conn_num<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">port_num<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">still_connected<pos:position pos:line="10" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="67">user_data<pos:position pos:line="10" pos:column="76"/></name></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="78"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">c_ipmi_instance_t<pos:position pos:line="12" pos:column="20"/></name> <modifier pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></modifier></type><name pos:line="12" pos:column="22">st<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><name pos:line="12" pos:column="27">user_data<pos:position pos:line="12" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">err<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">!=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>)<pos:position pos:line="14" pos:column="16"/></condition><then pos:line="14" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">c_ipmi_error<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">st<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="22">"domain_connection_change_handler"<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="58">err<pos:position pos:line="15" pos:column="61"/></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">!<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">still_connected<pos:position pos:line="17" pos:column="23"/></name></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24"> <block pos:line="17" pos:column="25">{

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">st<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">notify_conn<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">&amp;&amp;<pos:position pos:line="19" pos:column="35"/></operator> <name><name pos:line="19" pos:column="28">st<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">connected<pos:position pos:line="19" pos:column="41"/></name></name> <operator pos:line="19" pos:column="42">&amp;&amp;<pos:position pos:line="19" pos:column="52"/></operator> <name><name pos:line="19" pos:column="45">st<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">init_in_progress<pos:position pos:line="19" pos:column="65"/></name></name> <operator pos:line="19" pos:column="66">==<pos:position pos:line="19" pos:column="68"/></operator> <literal type="number" pos:line="19" pos:column="69">0<pos:position pos:line="19" pos:column="70"/></literal></expr>)<pos:position pos:line="19" pos:column="71"/></condition><then pos:line="19" pos:column="71"> <block pos:line="19" pos:column="72">{
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">notification_t<pos:position pos:line="20" pos:column="21"/></name></type> <name pos:line="20" pos:column="22">n<pos:position pos:line="20" pos:column="23"/></name> <init pos:line="20" pos:column="24">= <expr><call><name pos:line="20" pos:column="26">c_ipmi_notification_init<pos:position pos:line="20" pos:column="50"/></name><argument_list pos:line="20" pos:column="50">(<argument><expr><name pos:line="20" pos:column="51">st<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">NOTIF_FAILURE<pos:position pos:line="20" pos:column="68"/></name></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="70"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="22" pos:column="7">sstrncpy<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name><name pos:line="22" pos:column="16">n<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">.<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">message<pos:position pos:line="22" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="27">"IPMI connection lost"<pos:position pos:line="22" pos:column="49"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="51">sizeof<argument_list pos:line="22" pos:column="57">(<argument><expr><name><name pos:line="22" pos:column="58">n<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">.<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="60">plugin<pos:position pos:line="22" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="24" pos:column="7">plugin_dispatch_notification<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><operator pos:line="24" pos:column="36">&amp;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="37">n<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">st<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">connected<pos:position pos:line="27" pos:column="18"/></name></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <literal type="number" pos:line="27" pos:column="21">0<pos:position pos:line="27" pos:column="22"/></literal></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
    <return pos:line="28" pos:column="5">return;<pos:position pos:line="28" pos:column="12"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name><name pos:line="31" pos:column="7">st<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">notify_conn<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">&amp;&amp;<pos:position pos:line="31" pos:column="33"/></operator> <operator pos:line="31" pos:column="26">!<pos:position pos:line="31" pos:column="27"/></operator><name><name pos:line="31" pos:column="27">st<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">connected<pos:position pos:line="31" pos:column="40"/></name></name> <operator pos:line="31" pos:column="41">&amp;&amp;<pos:position pos:line="31" pos:column="51"/></operator> <name><name pos:line="31" pos:column="44">st<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">-&gt;<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="48">init_in_progress<pos:position pos:line="31" pos:column="64"/></name></name> <operator pos:line="31" pos:column="65">==<pos:position pos:line="31" pos:column="67"/></operator> <literal type="number" pos:line="31" pos:column="68">0<pos:position pos:line="31" pos:column="69"/></literal></expr>)<pos:position pos:line="31" pos:column="70"/></condition><then pos:line="31" pos:column="70"> <block pos:line="31" pos:column="71">{
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">notification_t<pos:position pos:line="32" pos:column="19"/></name></type> <name pos:line="32" pos:column="20">n<pos:position pos:line="32" pos:column="21"/></name> <init pos:line="32" pos:column="22">= <expr><call><name pos:line="32" pos:column="24">c_ipmi_notification_init<pos:position pos:line="32" pos:column="48"/></name><argument_list pos:line="32" pos:column="48">(<argument><expr><name pos:line="32" pos:column="49">st<pos:position pos:line="32" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="53">NOTIF_OKAY<pos:position pos:line="32" pos:column="63"/></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="65"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">sstrncpy<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><name><name pos:line="34" pos:column="14">n<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">.<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">message<pos:position pos:line="34" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="25">"IPMI connection restored"<pos:position pos:line="34" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="53">sizeof<argument_list pos:line="34" pos:column="59">(<argument><expr><name><name pos:line="34" pos:column="60">n<pos:position pos:line="34" pos:column="61"/></name><operator pos:line="34" pos:column="61">.<pos:position pos:line="34" pos:column="62"/></operator><name pos:line="34" pos:column="62">plugin<pos:position pos:line="34" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">plugin_dispatch_notification<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">(<argument><expr><operator pos:line="36" pos:column="34">&amp;<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="35">n<pos:position pos:line="36" pos:column="36"/></name></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="39" pos:column="3">st<pos:position pos:line="39" pos:column="5"/></name><operator pos:line="39" pos:column="5">-&gt;<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="7">connected<pos:position pos:line="39" pos:column="16"/></name></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <literal type="number" pos:line="39" pos:column="19">1<pos:position pos:line="39" pos:column="20"/></literal></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="41" pos:column="3">int<pos:position pos:line="41" pos:column="6"/></name></type> <name pos:line="41" pos:column="7">status<pos:position pos:line="41" pos:column="13"/></name> <init pos:line="41" pos:column="14">= <expr><call><name pos:line="41" pos:column="16">ipmi_domain_add_entity_update_handler<pos:position pos:line="41" pos:column="53"/></name><argument_list pos:line="41" pos:column="53">(
      <argument><expr><name pos:line="42" pos:column="7">domain<pos:position pos:line="42" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="15">domain_entity_update_handler<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <comment type="block" pos:line="42" pos:column="45">/* user data = */</comment> <argument><expr><name pos:line="42" pos:column="63">st<pos:position pos:line="42" pos:column="65"/></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="67"/></decl_stmt>
  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><name pos:line="43" pos:column="7">status<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">!=<pos:position pos:line="43" pos:column="16"/></operator> <literal type="number" pos:line="43" pos:column="17">0<pos:position pos:line="43" pos:column="18"/></literal></expr>)<pos:position pos:line="43" pos:column="19"/></condition><then pos:line="43" pos:column="19"> <block pos:line="43" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">c_ipmi_error<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><name pos:line="44" pos:column="18">st<pos:position pos:line="44" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="22">"ipmi_domain_add_entity_update_handler"<pos:position pos:line="44" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="63">status<pos:position pos:line="44" pos:column="69"/></name></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="71"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="47" pos:column="3">status<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <call><name><name pos:line="47" pos:column="12">st<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">connection<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">-&gt;<pos:position pos:line="47" pos:column="31"/></operator><name pos:line="47" pos:column="28">add_event_handler<pos:position pos:line="47" pos:column="45"/></name></name><argument_list pos:line="47" pos:column="45">(<argument><expr><name><name pos:line="47" pos:column="46">st<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">-&gt;<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="50">connection<pos:position pos:line="47" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="62">smi_event_handler<pos:position pos:line="47" pos:column="79"/></name></expr></argument>,
                                             <argument><expr><operator pos:line="48" pos:column="46">(<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="47">void<pos:position pos:line="48" pos:column="51"/></name> <operator pos:line="48" pos:column="52">*<pos:position pos:line="48" pos:column="53"/></operator><operator pos:line="48" pos:column="53">)<pos:position pos:line="48" pos:column="54"/></operator><name pos:line="48" pos:column="54">domain<pos:position pos:line="48" pos:column="60"/></name></expr></argument>)<pos:position pos:line="48" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="62"/></expr_stmt>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">status<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">!=<pos:position pos:line="50" pos:column="16"/></operator> <literal type="number" pos:line="50" pos:column="17">0<pos:position pos:line="50" pos:column="18"/></literal></expr>)<pos:position pos:line="50" pos:column="19"/></condition><then pos:line="50" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="5">c_ipmi_error<pos:position pos:line="51" pos:column="17"/></name><argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">st<pos:position pos:line="51" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="22">"Failed to register smi event handler"<pos:position pos:line="51" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="62">status<pos:position pos:line="51" pos:column="68"/></name></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="70"/></expr_stmt></block></then></if>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

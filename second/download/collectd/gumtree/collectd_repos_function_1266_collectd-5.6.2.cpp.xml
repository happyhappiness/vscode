<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1266_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mv_config_add_satisfy<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">mv_match_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">m<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="49">/* {{{ */</comment>
                                 <parameter><decl><type><name pos:line="2" pos:column="34">oconfig_item_t<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">ci<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list> <block pos:line="2" pos:column="54">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">(<pos:position pos:line="3" pos:column="8"/></operator><name><name pos:line="3" pos:column="8">ci<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">-&gt;<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="12">values_num<pos:position pos:line="3" pos:column="22"/></name></name> <operator pos:line="3" pos:column="23">!=<pos:position pos:line="3" pos:column="25"/></operator> <literal type="number" pos:line="3" pos:column="26">1<pos:position pos:line="3" pos:column="27"/></literal><operator pos:line="3" pos:column="27">)<pos:position pos:line="3" pos:column="28"/></operator> <operator pos:line="3" pos:column="29">||<pos:position pos:line="3" pos:column="31"/></operator> <operator pos:line="3" pos:column="32">(<pos:position pos:line="3" pos:column="33"/></operator><name><name pos:line="3" pos:column="33">ci<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">-&gt;<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="37">values<pos:position pos:line="3" pos:column="43"/></name><index pos:line="3" pos:column="43">[<expr><literal type="number" pos:line="3" pos:column="44">0<pos:position pos:line="3" pos:column="45"/></literal></expr>]<pos:position pos:line="3" pos:column="46"/></index></name><operator pos:line="3" pos:column="46">.<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="47">type<pos:position pos:line="3" pos:column="51"/></name> <operator pos:line="3" pos:column="52">!=<pos:position pos:line="3" pos:column="54"/></operator> <name pos:line="3" pos:column="55">OCONFIG_TYPE_STRING<pos:position pos:line="3" pos:column="74"/></name><operator pos:line="3" pos:column="74">)<pos:position pos:line="3" pos:column="75"/></operator></expr>)<pos:position pos:line="3" pos:column="76"/></condition><then pos:line="3" pos:column="76"> <block pos:line="3" pos:column="77">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">ERROR<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><literal type="string" pos:line="4" pos:column="11">"`value' match: `%s' needs exactly one string argument."<pos:position pos:line="4" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="69">ci<pos:position pos:line="4" pos:column="71"/></name><operator pos:line="4" pos:column="71">-&gt;<pos:position pos:line="4" pos:column="76"/></operator><name pos:line="4" pos:column="73">key<pos:position pos:line="4" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="78"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><operator pos:line="5" pos:column="13">-<pos:position pos:line="5" pos:column="14"/></operator><literal type="number" pos:line="5" pos:column="14">1<pos:position pos:line="5" pos:column="15"/></literal><operator pos:line="5" pos:column="15">)<pos:position pos:line="5" pos:column="16"/></operator></expr>;<pos:position pos:line="5" pos:column="17"/></return>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">strcasecmp<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><literal type="string" pos:line="8" pos:column="18">"All"<pos:position pos:line="8" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="25">ci<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">values<pos:position pos:line="8" pos:column="35"/></name><index pos:line="8" pos:column="35">[<expr><literal type="number" pos:line="8" pos:column="36">0<pos:position pos:line="8" pos:column="37"/></literal></expr>]<pos:position pos:line="8" pos:column="38"/></index></name><operator pos:line="8" pos:column="38">.<pos:position pos:line="8" pos:column="39"/></operator><name><name pos:line="8" pos:column="39">value<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">.<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">string<pos:position pos:line="8" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call> <operator pos:line="8" pos:column="53">==<pos:position pos:line="8" pos:column="55"/></operator> <literal type="number" pos:line="8" pos:column="56">0<pos:position pos:line="8" pos:column="57"/></literal></expr>)<pos:position pos:line="8" pos:column="58"/></condition><then pos:line="8" pos:column="58">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="5">m<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">satisfy<pos:position pos:line="9" pos:column="15"/></name></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">SATISFY_ALL<pos:position pos:line="9" pos:column="29"/></name></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt></block></then>
  <elseif pos:line="10" pos:column="3">else <if pos:line="10" pos:column="8">if <condition pos:line="10" pos:column="11">(<expr><call><name pos:line="10" pos:column="12">strcasecmp<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><literal type="string" pos:line="10" pos:column="23">"Any"<pos:position pos:line="10" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="30">ci<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">values<pos:position pos:line="10" pos:column="40"/></name><index pos:line="10" pos:column="40">[<expr><literal type="number" pos:line="10" pos:column="41">0<pos:position pos:line="10" pos:column="42"/></literal></expr>]<pos:position pos:line="10" pos:column="43"/></index></name><operator pos:line="10" pos:column="43">.<pos:position pos:line="10" pos:column="44"/></operator><name><name pos:line="10" pos:column="44">value<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">.<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="50">string<pos:position pos:line="10" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call> <operator pos:line="10" pos:column="58">==<pos:position pos:line="10" pos:column="60"/></operator> <literal type="number" pos:line="10" pos:column="61">0<pos:position pos:line="10" pos:column="62"/></literal></expr>)<pos:position pos:line="10" pos:column="63"/></condition><then pos:line="10" pos:column="63">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="5">m<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">satisfy<pos:position pos:line="11" pos:column="15"/></name></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">SATISFY_ANY<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt></block></then></if></elseif>
  <else pos:line="12" pos:column="3">else <block pos:line="12" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><literal type="string" pos:line="13" pos:column="11">"`value' match: Passing `%s' to the `%s' option is invalid. "<pos:position pos:line="13" pos:column="72"/></literal>
          <literal type="string" pos:line="14" pos:column="11">"The argument must either be `All' or `Any'."<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="15" pos:column="11">ci<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">values<pos:position pos:line="15" pos:column="21"/></name><index pos:line="15" pos:column="21">[<expr><literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr>]<pos:position pos:line="15" pos:column="24"/></index></name><operator pos:line="15" pos:column="24">.<pos:position pos:line="15" pos:column="25"/></operator><name><name pos:line="15" pos:column="25">value<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">.<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="31">string<pos:position pos:line="15" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="39">ci<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">key<pos:position pos:line="15" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></else></if>

  <return pos:line="19" pos:column="3">return <expr><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><literal type="number" pos:line="19" pos:column="11">0<pos:position pos:line="19" pos:column="12"/></literal><operator pos:line="19" pos:column="12">)<pos:position pos:line="19" pos:column="13"/></operator></expr>;<pos:position pos:line="19" pos:column="14"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

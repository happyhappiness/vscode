<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_373_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">net_open<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">node<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">service<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type>              <name pos:line="3" pos:column="26">sd<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type>              <name pos:line="4" pos:column="26">status<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">addrinfo<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">ai_return<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">addrinfo<pos:position pos:line="6" pos:column="24"/></name></name> <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">ai_list<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* TODO: Change this to `AF_UNSPEC' if apcupsd can handle IPv6 */</comment>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">addrinfo<pos:position pos:line="9" pos:column="24"/></name></name></type> <name pos:line="9" pos:column="25">ai_hints<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><block pos:line="9" pos:column="36">{
		<expr><operator pos:line="10" pos:column="17">.<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">ai_family<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <name pos:line="10" pos:column="30">AF_INET<pos:position pos:line="10" pos:column="37"/></name></expr>,
		<expr><operator pos:line="11" pos:column="17">.<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">ai_socktype<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="32">SOCK_STREAM<pos:position pos:line="11" pos:column="43"/></name></expr>
	}<pos:position pos:line="12" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">getaddrinfo<pos:position pos:line="14" pos:column="29"/></name> <argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">node<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="37">service<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="46">&amp;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="47">ai_hints<pos:position pos:line="14" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="57">&amp;<pos:position pos:line="14" pos:column="62"/></operator><name pos:line="14" pos:column="58">ai_return<pos:position pos:line="14" pos:column="67"/></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="69"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">status<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">!=<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="23">0<pos:position pos:line="15" pos:column="24"/></literal></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
	<block pos:line="16" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">char<pos:position pos:line="17" pos:column="21"/></name></type> <name><name pos:line="17" pos:column="22">errbuf<pos:position pos:line="17" pos:column="28"/></name><index pos:line="17" pos:column="28">[<expr><literal type="number" pos:line="17" pos:column="29">1024<pos:position pos:line="17" pos:column="33"/></literal></expr>]<pos:position pos:line="17" pos:column="34"/></index></name></decl>;<pos:position pos:line="17" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">INFO<pos:position pos:line="18" pos:column="21"/></name> <argument_list pos:line="18" pos:column="22">(<argument><expr><literal type="string" pos:line="18" pos:column="23">"apcups plugin: getaddrinfo failed: %s"<pos:position pos:line="18" pos:column="62"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="19" pos:column="33">(<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">status<pos:position pos:line="19" pos:column="40"/></name> <operator pos:line="19" pos:column="41">==<pos:position pos:line="19" pos:column="43"/></operator> <name pos:line="19" pos:column="44">EAI_SYSTEM<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">)<pos:position pos:line="19" pos:column="55"/></operator></expr>
				?<pos:position pos:line="20" pos:column="34"/></condition><then pos:line="20" pos:column="34"> <expr><call><name pos:line="20" pos:column="35">sstrerror<pos:position pos:line="20" pos:column="44"/></name> <argument_list pos:line="20" pos:column="45">(<argument><expr><name pos:line="20" pos:column="46">errno<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">errbuf<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="61">sizeof <argument_list pos:line="20" pos:column="68">(<argument><expr><name pos:line="20" pos:column="69">errbuf<pos:position pos:line="20" pos:column="75"/></name></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>
				<pos:position pos:line="21" pos:column="5"/></then><else pos:line="21" pos:column="33">: <expr><call><name pos:line="21" pos:column="35">gai_strerror<pos:position pos:line="21" pos:column="47"/></name> <argument_list pos:line="21" pos:column="48">(<argument><expr><name pos:line="21" pos:column="49">status<pos:position pos:line="21" pos:column="55"/></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">-<pos:position pos:line="22" pos:column="26"/></operator><literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal><operator pos:line="22" pos:column="27">)<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="25" pos:column="9">/* Create socket */</comment>
	<expr_stmt><expr><name pos:line="26" pos:column="9">sd<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <operator pos:line="26" pos:column="14">-<pos:position pos:line="26" pos:column="15"/></operator><literal type="number" pos:line="26" pos:column="15">1<pos:position pos:line="26" pos:column="16"/></literal></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>
	<for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">ai_list<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">ai_return<pos:position pos:line="27" pos:column="33"/></name></expr>;<pos:position pos:line="27" pos:column="34"/></init> <condition><expr><name pos:line="27" pos:column="35">ai_list<pos:position pos:line="27" pos:column="42"/></name> <operator pos:line="27" pos:column="43">!=<pos:position pos:line="27" pos:column="45"/></operator> <name pos:line="27" pos:column="46">NULL<pos:position pos:line="27" pos:column="50"/></name></expr>;<pos:position pos:line="27" pos:column="51"/></condition> <incr><expr><name pos:line="27" pos:column="52">ai_list<pos:position pos:line="27" pos:column="59"/></name> <operator pos:line="27" pos:column="60">=<pos:position pos:line="27" pos:column="61"/></operator> <name><name pos:line="27" pos:column="62">ai_list<pos:position pos:line="27" pos:column="69"/></name><operator pos:line="27" pos:column="69">-&gt;<pos:position pos:line="27" pos:column="74"/></operator><name pos:line="27" pos:column="71">ai_next<pos:position pos:line="27" pos:column="78"/></name></name></expr></incr>)<pos:position pos:line="27" pos:column="79"/></control>
	<block pos:line="28" pos:column="9">{
		<expr_stmt><expr><name pos:line="29" pos:column="17">sd<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <call><name pos:line="29" pos:column="22">socket<pos:position pos:line="29" pos:column="28"/></name> <argument_list pos:line="29" pos:column="29">(<argument><expr><name><name pos:line="29" pos:column="30">ai_list<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">-&gt;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="39">ai_family<pos:position pos:line="29" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="50">ai_list<pos:position pos:line="29" pos:column="57"/></name><operator pos:line="29" pos:column="57">-&gt;<pos:position pos:line="29" pos:column="62"/></operator><name pos:line="29" pos:column="59">ai_socktype<pos:position pos:line="29" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="72">ai_list<pos:position pos:line="29" pos:column="79"/></name><operator pos:line="29" pos:column="79">-&gt;<pos:position pos:line="29" pos:column="84"/></operator><name pos:line="29" pos:column="81">ai_protocol<pos:position pos:line="29" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="94"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">sd<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">&gt;=<pos:position pos:line="30" pos:column="29"/></operator> <literal type="number" pos:line="30" pos:column="27">0<pos:position pos:line="30" pos:column="28"/></literal></expr>)<pos:position pos:line="30" pos:column="29"/></condition><then pos:line="30" pos:column="29">
			<block type="pseudo"><break pos:line="31" pos:column="25">break;<pos:position pos:line="31" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="32" pos:column="10"/></block></for>
	<comment type="block" pos:line="33" pos:column="9">/* `ai_list' still holds the current description of the socket.. */</comment>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">sd<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">&lt;<pos:position pos:line="35" pos:column="20"/></operator> <literal type="number" pos:line="35" pos:column="18">0<pos:position pos:line="35" pos:column="19"/></literal></expr>)<pos:position pos:line="35" pos:column="20"/></condition><then pos:line="35" pos:column="20">
	<block pos:line="36" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">DEBUG<pos:position pos:line="37" pos:column="22"/></name> <argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="string" pos:line="37" pos:column="24">"apcups plugin: Unable to open a socket"<pos:position pos:line="37" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">freeaddrinfo<pos:position pos:line="38" pos:column="29"/></name> <argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">ai_return<pos:position pos:line="38" pos:column="40"/></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
		<return pos:line="39" pos:column="17">return <expr><operator pos:line="39" pos:column="24">(<pos:position pos:line="39" pos:column="25"/></operator><operator pos:line="39" pos:column="25">-<pos:position pos:line="39" pos:column="26"/></operator><literal type="number" pos:line="39" pos:column="26">1<pos:position pos:line="39" pos:column="27"/></literal><operator pos:line="39" pos:column="27">)<pos:position pos:line="39" pos:column="28"/></operator></expr>;<pos:position pos:line="39" pos:column="29"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="42" pos:column="9">status<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <call><name pos:line="42" pos:column="18">connect<pos:position pos:line="42" pos:column="25"/></name> <argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">sd<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="31">ai_list<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">ai_addr<pos:position pos:line="42" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="49">ai_list<pos:position pos:line="42" pos:column="56"/></name><operator pos:line="42" pos:column="56">-&gt;<pos:position pos:line="42" pos:column="61"/></operator><name pos:line="42" pos:column="58">ai_addrlen<pos:position pos:line="42" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="70"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="44" pos:column="9">freeaddrinfo<pos:position pos:line="44" pos:column="21"/></name> <argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">ai_return<pos:position pos:line="44" pos:column="32"/></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">status<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">!=<pos:position pos:line="46" pos:column="22"/></operator> <literal type="number" pos:line="46" pos:column="23">0<pos:position pos:line="46" pos:column="24"/></literal></expr>)<pos:position pos:line="46" pos:column="25"/></condition><then pos:line="46" pos:column="25"> <comment type="block" pos:line="46" pos:column="26">/* `connect(2)' failed */</comment>
	<block pos:line="47" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">char<pos:position pos:line="48" pos:column="21"/></name></type> <name><name pos:line="48" pos:column="22">errbuf<pos:position pos:line="48" pos:column="28"/></name><index pos:line="48" pos:column="28">[<expr><literal type="number" pos:line="48" pos:column="29">1024<pos:position pos:line="48" pos:column="33"/></literal></expr>]<pos:position pos:line="48" pos:column="34"/></index></name></decl>;<pos:position pos:line="48" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">INFO<pos:position pos:line="49" pos:column="21"/></name> <argument_list pos:line="49" pos:column="22">(<argument><expr><literal type="string" pos:line="49" pos:column="23">"apcups plugin: connect failed: %s"<pos:position pos:line="49" pos:column="58"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="50" pos:column="33">sstrerror<pos:position pos:line="50" pos:column="42"/></name> <argument_list pos:line="50" pos:column="43">(<argument><expr><name pos:line="50" pos:column="44">errno<pos:position pos:line="50" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="51">errbuf<pos:position pos:line="50" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="59">sizeof <argument_list pos:line="50" pos:column="66">(<argument><expr><name pos:line="50" pos:column="67">errbuf<pos:position pos:line="50" pos:column="73"/></name></expr></argument>)<pos:position pos:line="50" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">close<pos:position pos:line="51" pos:column="22"/></name> <argument_list pos:line="51" pos:column="23">(<argument><expr><name pos:line="51" pos:column="24">sd<pos:position pos:line="51" pos:column="26"/></name></expr></argument>)<pos:position pos:line="51" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>
		<return pos:line="52" pos:column="17">return <expr><operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><operator pos:line="52" pos:column="25">-<pos:position pos:line="52" pos:column="26"/></operator><literal type="number" pos:line="52" pos:column="26">1<pos:position pos:line="52" pos:column="27"/></literal><operator pos:line="52" pos:column="27">)<pos:position pos:line="52" pos:column="28"/></operator></expr>;<pos:position pos:line="52" pos:column="29"/></return>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">DEBUG<pos:position pos:line="55" pos:column="14"/></name> <argument_list pos:line="55" pos:column="15">(<argument><expr><literal type="string" pos:line="55" pos:column="16">"apcups plugin: Done opening a socket %i"<pos:position pos:line="55" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="59">sd<pos:position pos:line="55" pos:column="61"/></name></expr></argument>)<pos:position pos:line="55" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="63"/></expr_stmt>

	<return pos:line="57" pos:column="9">return <expr><operator pos:line="57" pos:column="16">(<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="17">sd<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">)<pos:position pos:line="57" pos:column="20"/></operator></expr>;<pos:position pos:line="57" pos:column="21"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_466_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ovs_stats_update_iface<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">yajl_val<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">iface<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <block pos:line="1" pos:column="51">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><operator pos:line="2" pos:column="7">!<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">iface<pos:position pos:line="2" pos:column="13"/></name> <operator pos:line="2" pos:column="14">||<pos:position pos:line="2" pos:column="16"/></operator> <operator pos:line="2" pos:column="17">!<pos:position pos:line="2" pos:column="18"/></operator><call><name pos:line="2" pos:column="18">YAJL_IS_OBJECT<pos:position pos:line="2" pos:column="32"/></name><argument_list pos:line="2" pos:column="32">(<argument><expr><name pos:line="2" pos:column="33">iface<pos:position pos:line="2" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="2" pos:column="40"/></condition><then pos:line="2" pos:column="40"> <block pos:line="2" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">ERROR<pos:position pos:line="3" pos:column="10"/></name><argument_list pos:line="3" pos:column="10">(<argument><expr><literal type="string" pos:line="3" pos:column="11">"ovs_stats plugin: incorrect JSON port data"<pos:position pos:line="3" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="57"/></expr_stmt>
    <return pos:line="4" pos:column="5">return <expr><operator pos:line="4" pos:column="12">-<pos:position pos:line="4" pos:column="13"/></operator><literal type="number" pos:line="4" pos:column="13">1<pos:position pos:line="4" pos:column="14"/></literal></expr>;<pos:position pos:line="4" pos:column="15"/></return>
  }<pos:position pos:line="5" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">yajl_val<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">row<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><call><name pos:line="7" pos:column="18">ovs_utils_get_value_by_key<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">iface<pos:position pos:line="7" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="52">"new"<pos:position pos:line="7" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="59"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">row<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">||<pos:position pos:line="8" pos:column="14"/></operator> <operator pos:line="8" pos:column="15">!<pos:position pos:line="8" pos:column="16"/></operator><call><name pos:line="8" pos:column="16">YAJL_IS_OBJECT<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">row<pos:position pos:line="8" pos:column="34"/></name></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">yajl_val<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">iface_name<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><call><name pos:line="11" pos:column="25">ovs_utils_get_value_by_key<pos:position pos:line="11" pos:column="51"/></name><argument_list pos:line="11" pos:column="51">(<argument><expr><name pos:line="11" pos:column="52">row<pos:position pos:line="11" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="57">"name"<pos:position pos:line="11" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="65"/></decl_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">iface_name<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">||<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="22">!<pos:position pos:line="12" pos:column="23"/></operator><call><name pos:line="12" pos:column="23">YAJL_IS_STRING<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">iface_name<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="15" pos:column="3">port_list_t<pos:position pos:line="15" pos:column="14"/></name> <modifier pos:line="15" pos:column="15">*<pos:position pos:line="15" pos:column="16"/></modifier></type><name pos:line="15" pos:column="16">port<pos:position pos:line="15" pos:column="20"/></name> <init pos:line="15" pos:column="21">= <expr><call><name pos:line="15" pos:column="23">ovs_stats_get_port_by_name<pos:position pos:line="15" pos:column="49"/></name><argument_list pos:line="15" pos:column="49">(<argument><expr><call><name pos:line="15" pos:column="50">YAJL_GET_STRING<pos:position pos:line="15" pos:column="65"/></name><argument_list pos:line="15" pos:column="65">(<argument><expr><name pos:line="15" pos:column="66">iface_name<pos:position pos:line="15" pos:column="76"/></name></expr></argument>)<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="79"/></decl_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">port<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">==<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">NULL<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="19" pos:column="3">yajl_val<pos:position pos:line="19" pos:column="11"/></name></type> <name pos:line="19" pos:column="12">iface_stats<pos:position pos:line="19" pos:column="23"/></name> <init pos:line="19" pos:column="24">= <expr><call><name pos:line="19" pos:column="26">ovs_utils_get_value_by_key<pos:position pos:line="19" pos:column="52"/></name><argument_list pos:line="19" pos:column="52">(<argument><expr><name pos:line="19" pos:column="53">row<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="58">"statistics"<pos:position pos:line="19" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="72"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">yajl_val<pos:position pos:line="20" pos:column="11"/></name></type> <name pos:line="20" pos:column="12">iface_ext_ids<pos:position pos:line="20" pos:column="25"/></name> <init pos:line="20" pos:column="26">= <expr><call><name pos:line="20" pos:column="28">ovs_utils_get_value_by_key<pos:position pos:line="20" pos:column="54"/></name><argument_list pos:line="20" pos:column="54">(<argument><expr><name pos:line="20" pos:column="55">row<pos:position pos:line="20" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="60">"external_ids"<pos:position pos:line="20" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="76"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">yajl_val<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">iface_uuid<pos:position pos:line="21" pos:column="22"/></name> <init pos:line="21" pos:column="23">= <expr><call><name pos:line="21" pos:column="25">ovs_utils_get_value_by_key<pos:position pos:line="21" pos:column="51"/></name><argument_list pos:line="21" pos:column="51">(<argument><expr><name pos:line="21" pos:column="52">row<pos:position pos:line="21" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="57">"_uuid"<pos:position pos:line="21" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="66"/></decl_stmt>
  <comment type="block" pos:line="22" pos:column="3">/*
   * {
        "statistics": [
          "map",
          [
            [
              "collisions",
              0
            ],
            . . .
            [
              "tx_packets",
              0
            ]
          ]
        ]
      }
   Check that statistics is an array with 2 elements
   */</comment>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name pos:line="41" pos:column="7">iface_stats<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">&amp;&amp;<pos:position pos:line="41" pos:column="29"/></operator> <call><name pos:line="41" pos:column="22">YAJL_IS_ARRAY<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><name pos:line="41" pos:column="36">iface_stats<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call> <operator pos:line="41" pos:column="49">&amp;&amp;<pos:position pos:line="41" pos:column="59"/></operator>
      <call><name pos:line="42" pos:column="7">YAJL_GET_ARRAY<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">iface_stats<pos:position pos:line="42" pos:column="33"/></name></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></call><operator pos:line="42" pos:column="34">-&gt;<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="36">len<pos:position pos:line="42" pos:column="39"/></name> <operator pos:line="42" pos:column="40">==<pos:position pos:line="42" pos:column="42"/></operator> <literal type="number" pos:line="42" pos:column="43">2<pos:position pos:line="42" pos:column="44"/></literal></expr>)<pos:position pos:line="42" pos:column="45"/></condition><then pos:line="42" pos:column="45">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="5">ovs_stats_update_iface_stats<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><name pos:line="43" pos:column="34">port<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="40">YAJL_GET_ARRAY<pos:position pos:line="43" pos:column="54"/></name><argument_list pos:line="43" pos:column="54">(<argument><expr><name pos:line="43" pos:column="55">iface_stats<pos:position pos:line="43" pos:column="66"/></name></expr></argument>)<pos:position pos:line="43" pos:column="67"/></argument_list></call><operator pos:line="43" pos:column="67">-&gt;<pos:position pos:line="43" pos:column="72"/></operator><name><name pos:line="43" pos:column="69">values<pos:position pos:line="43" pos:column="75"/></name><index pos:line="43" pos:column="75">[<expr><literal type="number" pos:line="43" pos:column="76">1<pos:position pos:line="43" pos:column="77"/></literal></expr>]<pos:position pos:line="43" pos:column="78"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="80"/></expr_stmt></block></then></if>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">iface_ext_ids<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">&amp;&amp;<pos:position pos:line="44" pos:column="31"/></operator> <call><name pos:line="44" pos:column="24">YAJL_IS_ARRAY<pos:position pos:line="44" pos:column="37"/></name><argument_list pos:line="44" pos:column="37">(<argument><expr><name pos:line="44" pos:column="38">iface_ext_ids<pos:position pos:line="44" pos:column="51"/></name></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="53"/></condition><then pos:line="44" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="5">ovs_stats_update_iface_ext_ids<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">port<pos:position pos:line="45" pos:column="40"/></name></expr></argument>,
                                   <argument><expr><call><name pos:line="46" pos:column="36">YAJL_GET_ARRAY<pos:position pos:line="46" pos:column="50"/></name><argument_list pos:line="46" pos:column="50">(<argument><expr><name pos:line="46" pos:column="51">iface_ext_ids<pos:position pos:line="46" pos:column="64"/></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call><operator pos:line="46" pos:column="65">-&gt;<pos:position pos:line="46" pos:column="70"/></operator><name><name pos:line="46" pos:column="67">values<pos:position pos:line="46" pos:column="73"/></name><index pos:line="46" pos:column="73">[<expr><literal type="number" pos:line="46" pos:column="74">1<pos:position pos:line="46" pos:column="75"/></literal></expr>]<pos:position pos:line="46" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="46" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="78"/></expr_stmt></block></then></if>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">iface_uuid<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">&amp;&amp;<pos:position pos:line="47" pos:column="28"/></operator> <call><name pos:line="47" pos:column="21">YAJL_IS_ARRAY<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">iface_uuid<pos:position pos:line="47" pos:column="45"/></name></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call> <operator pos:line="47" pos:column="47">&amp;&amp;<pos:position pos:line="47" pos:column="57"/></operator>
      <call><name pos:line="48" pos:column="7">YAJL_GET_ARRAY<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">iface_uuid<pos:position pos:line="48" pos:column="32"/></name></expr></argument>)<pos:position pos:line="48" pos:column="33"/></argument_list></call><operator pos:line="48" pos:column="33">-&gt;<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="35">len<pos:position pos:line="48" pos:column="38"/></name> <operator pos:line="48" pos:column="39">==<pos:position pos:line="48" pos:column="41"/></operator> <literal type="number" pos:line="48" pos:column="42">2<pos:position pos:line="48" pos:column="43"/></literal></expr>)<pos:position pos:line="48" pos:column="44"/></condition><then pos:line="48" pos:column="44">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="5">sstrncpy<pos:position pos:line="49" pos:column="13"/></name><argument_list pos:line="49" pos:column="13">(<argument><expr><name><name pos:line="49" pos:column="14">port<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">-&gt;<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="20">iface_uuid<pos:position pos:line="49" pos:column="30"/></name></name></expr></argument>,
             <argument><expr><call><name pos:line="50" pos:column="14">YAJL_GET_STRING<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><call><name pos:line="50" pos:column="30">YAJL_GET_ARRAY<pos:position pos:line="50" pos:column="44"/></name><argument_list pos:line="50" pos:column="44">(<argument><expr><name pos:line="50" pos:column="45">iface_uuid<pos:position pos:line="50" pos:column="55"/></name></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call><operator pos:line="50" pos:column="56">-&gt;<pos:position pos:line="50" pos:column="61"/></operator><name><name pos:line="50" pos:column="58">values<pos:position pos:line="50" pos:column="64"/></name><index pos:line="50" pos:column="64">[<expr><literal type="number" pos:line="50" pos:column="65">1<pos:position pos:line="50" pos:column="66"/></literal></expr>]<pos:position pos:line="50" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr></argument>,
             <argument><expr><sizeof pos:line="51" pos:column="14">sizeof<argument_list pos:line="51" pos:column="20">(<argument><expr><name><name pos:line="51" pos:column="21">port<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">iface_uuid<pos:position pos:line="51" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt></block></then></if>

  <return pos:line="53" pos:column="3">return <expr><literal type="number" pos:line="53" pos:column="10">0<pos:position pos:line="53" pos:column="11"/></literal></expr>;<pos:position pos:line="53" pos:column="12"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

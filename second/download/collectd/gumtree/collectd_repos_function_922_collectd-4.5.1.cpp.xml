<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_922_collectd-4.5.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_dispatch_values<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">value_list_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">vl<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">c_complain_t<pos:position pos:line="3" pos:column="28"/></name></type> <name pos:line="3" pos:column="29">no_write_complaint<pos:position pos:line="3" pos:column="47"/></name> <init pos:line="3" pos:column="48">= <expr><name pos:line="3" pos:column="50">C_COMPLAIN_INIT<pos:position pos:line="3" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="66"/></decl_stmt>

	<function_decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> (<modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier><name pos:line="5" pos:column="15">callback<pos:position pos:line="5" pos:column="23"/></name>) <parameter_list pos:line="5" pos:column="25">(<parameter><decl><type><specifier pos:line="5" pos:column="26">const<pos:position pos:line="5" pos:column="31"/></specifier> <name pos:line="5" pos:column="32">data_set_t<pos:position pos:line="5" pos:column="42"/></name> <modifier pos:line="5" pos:column="43">*<pos:position pos:line="5" pos:column="44"/></modifier></type></decl></parameter>, <parameter><decl><type><specifier pos:line="5" pos:column="46">const<pos:position pos:line="5" pos:column="51"/></specifier> <name pos:line="5" pos:column="52">value_list_t<pos:position pos:line="5" pos:column="64"/></name> <modifier pos:line="5" pos:column="65">*<pos:position pos:line="5" pos:column="66"/></modifier></type></decl></parameter>)<pos:position pos:line="5" pos:column="67"/></parameter_list>;<pos:position pos:line="5" pos:column="68"/></function_decl>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">data_set_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">ds<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">llentry_t<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">le<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">vl<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">==<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">NULL<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator> <operator pos:line="9" pos:column="26">||<pos:position pos:line="9" pos:column="28"/></operator> <operator pos:line="9" pos:column="29">(<pos:position pos:line="9" pos:column="30"/></operator><operator pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></operator><name><name pos:line="9" pos:column="31">vl<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">type<pos:position pos:line="9" pos:column="39"/></name></name> <operator pos:line="9" pos:column="40">==<pos:position pos:line="9" pos:column="42"/></operator> <literal type="char" pos:line="9" pos:column="43">'\0'<pos:position pos:line="9" pos:column="47"/></literal><operator pos:line="9" pos:column="47">)<pos:position pos:line="9" pos:column="48"/></operator></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block pos:line="9" pos:column="50">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">ERROR<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"plugin_dispatch_values: Invalid value list."<pos:position pos:line="10" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">list_write<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">==<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">NULL<pos:position pos:line="14" pos:column="31"/></name></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">c_complain_once<pos:position pos:line="15" pos:column="32"/></name> <argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">LOG_WARNING<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="47">&amp;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="48">no_write_complaint<pos:position pos:line="15" pos:column="66"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="16" pos:column="33">"plugin_dispatch_values: No write callback has been "<pos:position pos:line="16" pos:column="86"/></literal>
				<literal type="string" pos:line="17" pos:column="33">"registered. Please load at least one output plugin, "<pos:position pos:line="17" pos:column="87"/></literal>
				<literal type="string" pos:line="18" pos:column="33">"if you want the collected data to be stored."<pos:position pos:line="18" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="81"/></expr_stmt></block></then></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">data_sets<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">==<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">NULL<pos:position pos:line="20" pos:column="30"/></name></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31">
	<block pos:line="21" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">ERROR<pos:position pos:line="22" pos:column="22"/></name> <argument_list pos:line="22" pos:column="23">(<argument><expr><literal type="string" pos:line="22" pos:column="24">"plugin_dispatch_values: No data sets registered. "<pos:position pos:line="22" pos:column="75"/></literal>
				<literal type="string" pos:line="23" pos:column="33">"Could the types database be read? Check "<pos:position pos:line="23" pos:column="75"/></literal>
				<literal type="string" pos:line="24" pos:column="33">"your `TypesDB' setting!"<pos:position pos:line="24" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="60"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><operator pos:line="25" pos:column="24">(<pos:position pos:line="25" pos:column="25"/></operator><operator pos:line="25" pos:column="25">-<pos:position pos:line="25" pos:column="26"/></operator><literal type="number" pos:line="25" pos:column="26">1<pos:position pos:line="25" pos:column="27"/></literal><operator pos:line="25" pos:column="27">)<pos:position pos:line="25" pos:column="28"/></operator></expr>;<pos:position pos:line="25" pos:column="29"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">c_avl_get<pos:position pos:line="28" pos:column="22"/></name> <argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">data_sets<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="35">vl<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">-&gt;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="39">type<pos:position pos:line="28" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="45">(<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="46">void<pos:position pos:line="28" pos:column="50"/></name> <operator pos:line="28" pos:column="51">*<pos:position pos:line="28" pos:column="52"/></operator><operator pos:line="28" pos:column="52">)<pos:position pos:line="28" pos:column="53"/></operator> <operator pos:line="28" pos:column="54">&amp;<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="55">ds<pos:position pos:line="28" pos:column="57"/></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call> <operator pos:line="28" pos:column="59">!=<pos:position pos:line="28" pos:column="61"/></operator> <literal type="number" pos:line="28" pos:column="62">0<pos:position pos:line="28" pos:column="63"/></literal></expr>)<pos:position pos:line="28" pos:column="64"/></condition><then pos:line="28" pos:column="64">
	<block pos:line="29" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">INFO<pos:position pos:line="30" pos:column="21"/></name> <argument_list pos:line="30" pos:column="22">(<argument><expr><literal type="string" pos:line="30" pos:column="23">"plugin_dispatch_values: Dataset not found: %s"<pos:position pos:line="30" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="72">vl<pos:position pos:line="30" pos:column="74"/></name><operator pos:line="30" pos:column="74">-&gt;<pos:position pos:line="30" pos:column="79"/></operator><name pos:line="30" pos:column="76">type<pos:position pos:line="30" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="82"/></expr_stmt>
		<return pos:line="31" pos:column="17">return <expr><operator pos:line="31" pos:column="24">(<pos:position pos:line="31" pos:column="25"/></operator><operator pos:line="31" pos:column="25">-<pos:position pos:line="31" pos:column="26"/></operator><literal type="number" pos:line="31" pos:column="26">1<pos:position pos:line="31" pos:column="27"/></literal><operator pos:line="31" pos:column="27">)<pos:position pos:line="31" pos:column="28"/></operator></expr>;<pos:position pos:line="31" pos:column="29"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="34" pos:column="9">DEBUG<pos:position pos:line="34" pos:column="14"/></name> <argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="string" pos:line="34" pos:column="16">"plugin_dispatch_values: time = %u; interval = %i; "<pos:position pos:line="34" pos:column="68"/></literal>
			<literal type="string" pos:line="35" pos:column="25">"host = %s; "<pos:position pos:line="35" pos:column="38"/></literal>
			<literal type="string" pos:line="36" pos:column="25">"plugin = %s; plugin_instance = %s; "<pos:position pos:line="36" pos:column="62"/></literal>
			<literal type="string" pos:line="37" pos:column="25">"type = %s; type_instance = %s;"<pos:position pos:line="37" pos:column="57"/></literal></expr></argument>,
			<argument><expr><operator pos:line="38" pos:column="25">(<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">unsigned<pos:position pos:line="38" pos:column="34"/></name> <name pos:line="38" pos:column="35">int<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">)<pos:position pos:line="38" pos:column="39"/></operator> <name><name pos:line="38" pos:column="40">vl<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">-&gt;<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="44">time<pos:position pos:line="38" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="50">vl<pos:position pos:line="38" pos:column="52"/></name><operator pos:line="38" pos:column="52">-&gt;<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="54">interval<pos:position pos:line="38" pos:column="62"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="39" pos:column="25">vl<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">host<pos:position pos:line="39" pos:column="33"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="40" pos:column="25">vl<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">plugin<pos:position pos:line="40" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="37">vl<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">-&gt;<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="41">plugin_instance<pos:position pos:line="40" pos:column="56"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="41" pos:column="25">vl<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">type<pos:position pos:line="41" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="35">vl<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">type_instance<pos:position pos:line="41" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>

<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><name pos:line="43" pos:column="5">COLLECT_DEBUG<pos:position pos:line="43" pos:column="18"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">assert<pos:position pos:line="44" pos:column="15"/></name> <argument_list pos:line="44" pos:column="16">(<argument><expr><literal type="number" pos:line="44" pos:column="17">0<pos:position pos:line="44" pos:column="18"/></literal> <operator pos:line="44" pos:column="19">==<pos:position pos:line="44" pos:column="21"/></operator> <call><name pos:line="44" pos:column="22">strcmp<pos:position pos:line="44" pos:column="28"/></name> <argument_list pos:line="44" pos:column="29">(<argument><expr><name><name pos:line="44" pos:column="30">ds<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">type<pos:position pos:line="44" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="40">vl<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">type<pos:position pos:line="44" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
<cpp:else pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">else<pos:position pos:line="45" pos:column="6"/></cpp:directive></cpp:else>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><literal type="number" pos:line="46" pos:column="13">0<pos:position pos:line="46" pos:column="14"/></literal> <operator pos:line="46" pos:column="15">!=<pos:position pos:line="46" pos:column="17"/></operator> <call><name pos:line="46" pos:column="18">strcmp<pos:position pos:line="46" pos:column="24"/></name> <argument_list pos:line="46" pos:column="25">(<argument><expr><name><name pos:line="46" pos:column="26">ds<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">type<pos:position pos:line="46" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="36">vl<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">type<pos:position pos:line="46" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="46"/></condition><then pos:line="46" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="17">WARNING<pos:position pos:line="47" pos:column="24"/></name> <argument_list pos:line="47" pos:column="25">(<argument><expr><literal type="string" pos:line="47" pos:column="26">"plugin_dispatch_values: (ds-&gt;type = %s) != (vl-&gt;type = %s)"<pos:position pos:line="47" pos:column="92"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="48" pos:column="33">ds<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">type<pos:position pos:line="48" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="43">vl<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">-&gt;<pos:position pos:line="48" pos:column="50"/></operator><name pos:line="48" pos:column="47">type<pos:position pos:line="48" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt></block></then></if>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">if<pos:position pos:line="51" pos:column="4"/></cpp:directive> <expr><name pos:line="51" pos:column="5">COLLECT_DEBUG<pos:position pos:line="51" pos:column="18"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">assert<pos:position pos:line="52" pos:column="15"/></name> <argument_list pos:line="52" pos:column="16">(<argument><expr><name><name pos:line="52" pos:column="17">ds<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">-&gt;<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="21">ds_num<pos:position pos:line="52" pos:column="27"/></name></name> <operator pos:line="52" pos:column="28">==<pos:position pos:line="52" pos:column="30"/></operator> <name><name pos:line="52" pos:column="31">vl<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">-&gt;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="35">values_len<pos:position pos:line="52" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="47"/></expr_stmt>
<cpp:else pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">else<pos:position pos:line="53" pos:column="6"/></cpp:directive></cpp:else>
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">ds<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">-&gt;<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="17">ds_num<pos:position pos:line="54" pos:column="23"/></name></name> <operator pos:line="54" pos:column="24">!=<pos:position pos:line="54" pos:column="26"/></operator> <name><name pos:line="54" pos:column="27">vl<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">-&gt;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="31">values_len<pos:position pos:line="54" pos:column="41"/></name></name></expr>)<pos:position pos:line="54" pos:column="42"/></condition><then pos:line="54" pos:column="42">
	<block pos:line="55" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">ERROR<pos:position pos:line="56" pos:column="22"/></name> <argument_list pos:line="56" pos:column="23">(<argument><expr><literal type="string" pos:line="56" pos:column="24">"plugin_dispatch_values: ds-&gt;type = %s: "<pos:position pos:line="56" pos:column="68"/></literal>
				<literal type="string" pos:line="57" pos:column="33">"(ds-&gt;ds_num = %i) != "<pos:position pos:line="57" pos:column="59"/></literal>
				<literal type="string" pos:line="58" pos:column="33">"(vl-&gt;values_len = %i)"<pos:position pos:line="58" pos:column="59"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="59" pos:column="33">ds<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">-&gt;<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="37">type<pos:position pos:line="59" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="43">ds<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">-&gt;<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="47">ds_num<pos:position pos:line="59" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="55">vl<pos:position pos:line="59" pos:column="57"/></name><operator pos:line="59" pos:column="57">-&gt;<pos:position pos:line="59" pos:column="62"/></operator><name pos:line="59" pos:column="59">values_len<pos:position pos:line="59" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="71"/></expr_stmt>
		<return pos:line="60" pos:column="17">return <expr><operator pos:line="60" pos:column="24">(<pos:position pos:line="60" pos:column="25"/></operator><operator pos:line="60" pos:column="25">-<pos:position pos:line="60" pos:column="26"/></operator><literal type="number" pos:line="60" pos:column="26">1<pos:position pos:line="60" pos:column="27"/></literal><operator pos:line="60" pos:column="27">)<pos:position pos:line="60" pos:column="28"/></operator></expr>;<pos:position pos:line="60" pos:column="29"/></return>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name pos:line="64" pos:column="9">escape_slashes<pos:position pos:line="64" pos:column="23"/></name> <argument_list pos:line="64" pos:column="24">(<argument><expr><name><name pos:line="64" pos:column="25">vl<pos:position pos:line="64" pos:column="27"/></name><operator pos:line="64" pos:column="27">-&gt;<pos:position pos:line="64" pos:column="32"/></operator><name pos:line="64" pos:column="29">host<pos:position pos:line="64" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="35">sizeof <argument_list pos:line="64" pos:column="42">(<argument><expr><name><name pos:line="64" pos:column="43">vl<pos:position pos:line="64" pos:column="45"/></name><operator pos:line="64" pos:column="45">-&gt;<pos:position pos:line="64" pos:column="50"/></operator><name pos:line="64" pos:column="47">host<pos:position pos:line="64" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">escape_slashes<pos:position pos:line="65" pos:column="23"/></name> <argument_list pos:line="65" pos:column="24">(<argument><expr><name><name pos:line="65" pos:column="25">vl<pos:position pos:line="65" pos:column="27"/></name><operator pos:line="65" pos:column="27">-&gt;<pos:position pos:line="65" pos:column="32"/></operator><name pos:line="65" pos:column="29">plugin<pos:position pos:line="65" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="37">sizeof <argument_list pos:line="65" pos:column="44">(<argument><expr><name><name pos:line="65" pos:column="45">vl<pos:position pos:line="65" pos:column="47"/></name><operator pos:line="65" pos:column="47">-&gt;<pos:position pos:line="65" pos:column="52"/></operator><name pos:line="65" pos:column="49">plugin<pos:position pos:line="65" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">escape_slashes<pos:position pos:line="66" pos:column="23"/></name> <argument_list pos:line="66" pos:column="24">(<argument><expr><name><name pos:line="66" pos:column="25">vl<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">-&gt;<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="29">plugin_instance<pos:position pos:line="66" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="46">sizeof <argument_list pos:line="66" pos:column="53">(<argument><expr><name><name pos:line="66" pos:column="54">vl<pos:position pos:line="66" pos:column="56"/></name><operator pos:line="66" pos:column="56">-&gt;<pos:position pos:line="66" pos:column="61"/></operator><name pos:line="66" pos:column="58">plugin_instance<pos:position pos:line="66" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="76"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">escape_slashes<pos:position pos:line="67" pos:column="23"/></name> <argument_list pos:line="67" pos:column="24">(<argument><expr><name><name pos:line="67" pos:column="25">vl<pos:position pos:line="67" pos:column="27"/></name><operator pos:line="67" pos:column="27">-&gt;<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="29">type<pos:position pos:line="67" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="35">sizeof <argument_list pos:line="67" pos:column="42">(<argument><expr><name><name pos:line="67" pos:column="43">vl<pos:position pos:line="67" pos:column="45"/></name><operator pos:line="67" pos:column="45">-&gt;<pos:position pos:line="67" pos:column="50"/></operator><name pos:line="67" pos:column="47">type<pos:position pos:line="67" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="67" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">escape_slashes<pos:position pos:line="68" pos:column="23"/></name> <argument_list pos:line="68" pos:column="24">(<argument><expr><name><name pos:line="68" pos:column="25">vl<pos:position pos:line="68" pos:column="27"/></name><operator pos:line="68" pos:column="27">-&gt;<pos:position pos:line="68" pos:column="32"/></operator><name pos:line="68" pos:column="29">type_instance<pos:position pos:line="68" pos:column="42"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="44">sizeof <argument_list pos:line="68" pos:column="51">(<argument><expr><name><name pos:line="68" pos:column="52">vl<pos:position pos:line="68" pos:column="54"/></name><operator pos:line="68" pos:column="54">-&gt;<pos:position pos:line="68" pos:column="59"/></operator><name pos:line="68" pos:column="56">type_instance<pos:position pos:line="68" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="68" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="72"/></expr_stmt>

	<comment type="block" pos:line="70" pos:column="9">/* Update the value cache */</comment>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">uc_update<pos:position pos:line="71" pos:column="18"/></name> <argument_list pos:line="71" pos:column="19">(<argument><expr><name pos:line="71" pos:column="20">ds<pos:position pos:line="71" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="24">vl<pos:position pos:line="71" pos:column="26"/></name></expr></argument>)<pos:position pos:line="71" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="72" pos:column="9">ut_check_threshold<pos:position pos:line="72" pos:column="27"/></name> <argument_list pos:line="72" pos:column="28">(<argument><expr><name pos:line="72" pos:column="29">ds<pos:position pos:line="72" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="33">vl<pos:position pos:line="72" pos:column="35"/></name></expr></argument>)<pos:position pos:line="72" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><name pos:line="74" pos:column="9">le<pos:position pos:line="74" pos:column="11"/></name> <operator pos:line="74" pos:column="12">=<pos:position pos:line="74" pos:column="13"/></operator> <call><name pos:line="74" pos:column="14">llist_head<pos:position pos:line="74" pos:column="24"/></name> <argument_list pos:line="74" pos:column="25">(<argument><expr><name pos:line="74" pos:column="26">list_write<pos:position pos:line="74" pos:column="36"/></name></expr></argument>)<pos:position pos:line="74" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="38"/></expr_stmt>
	<while pos:line="75" pos:column="9">while <condition pos:line="75" pos:column="15">(<expr><name pos:line="75" pos:column="16">le<pos:position pos:line="75" pos:column="18"/></name> <operator pos:line="75" pos:column="19">!=<pos:position pos:line="75" pos:column="21"/></operator> <name pos:line="75" pos:column="22">NULL<pos:position pos:line="75" pos:column="26"/></name></expr>)<pos:position pos:line="75" pos:column="27"/></condition>
	<block pos:line="76" pos:column="9">{
		<expr_stmt><expr><name pos:line="77" pos:column="17">callback<pos:position pos:line="77" pos:column="25"/></name> <operator pos:line="77" pos:column="26">=<pos:position pos:line="77" pos:column="27"/></operator> <operator pos:line="77" pos:column="28">(<pos:position pos:line="77" pos:column="29"/></operator><call><call><name pos:line="77" pos:column="29">int<pos:position pos:line="77" pos:column="32"/></name> <argument_list pos:line="77" pos:column="33">(<argument><expr><operator pos:line="77" pos:column="34">*<pos:position pos:line="77" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="77" pos:column="36"/></argument_list></call> <argument_list pos:line="77" pos:column="37">(<argument><expr><specifier pos:line="77" pos:column="38">const<pos:position pos:line="77" pos:column="43"/></specifier> <name pos:line="77" pos:column="44">data_set_t<pos:position pos:line="77" pos:column="54"/></name> <operator pos:line="77" pos:column="55">*<pos:position pos:line="77" pos:column="56"/></operator></expr></argument>, <argument><expr><specifier pos:line="77" pos:column="58">const<pos:position pos:line="77" pos:column="63"/></specifier> <name pos:line="77" pos:column="64">value_list_t<pos:position pos:line="77" pos:column="76"/></name> <operator pos:line="77" pos:column="77">*<pos:position pos:line="77" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="77" pos:column="79"/></argument_list></call><operator pos:line="77" pos:column="79">)<pos:position pos:line="77" pos:column="80"/></operator> <name><name pos:line="77" pos:column="81">le<pos:position pos:line="77" pos:column="83"/></name><operator pos:line="77" pos:column="83">-&gt;<pos:position pos:line="77" pos:column="88"/></operator><name pos:line="77" pos:column="85">value<pos:position pos:line="77" pos:column="90"/></name></name></expr>;<pos:position pos:line="77" pos:column="91"/></expr_stmt>
		<expr_stmt><expr><call pos:line="78" pos:column="17">(<modifier pos:line="78" pos:column="18">*<pos:position pos:line="78" pos:column="19"/></modifier><name pos:line="78" pos:column="19">callback<pos:position pos:line="78" pos:column="27"/></name>) <argument_list pos:line="78" pos:column="29">(<argument><expr><name pos:line="78" pos:column="30">ds<pos:position pos:line="78" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="34">vl<pos:position pos:line="78" pos:column="36"/></name></expr></argument>)<pos:position pos:line="78" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="38"/></expr_stmt>

		<expr_stmt><expr><name pos:line="80" pos:column="17">le<pos:position pos:line="80" pos:column="19"/></name> <operator pos:line="80" pos:column="20">=<pos:position pos:line="80" pos:column="21"/></operator> <name><name pos:line="80" pos:column="22">le<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">-&gt;<pos:position pos:line="80" pos:column="29"/></operator><name pos:line="80" pos:column="26">next<pos:position pos:line="80" pos:column="30"/></name></name></expr>;<pos:position pos:line="80" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="81" pos:column="10"/></block></while>

	<return pos:line="83" pos:column="9">return <expr><operator pos:line="83" pos:column="16">(<pos:position pos:line="83" pos:column="17"/></operator><literal type="number" pos:line="83" pos:column="17">0<pos:position pos:line="83" pos:column="18"/></literal><operator pos:line="83" pos:column="18">)<pos:position pos:line="83" pos:column="19"/></operator></expr>;<pos:position pos:line="83" pos:column="20"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

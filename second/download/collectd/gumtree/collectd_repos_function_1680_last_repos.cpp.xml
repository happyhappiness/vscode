<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1680_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">snmp_agent_free_table_columns<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">table_definition_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">td<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list> <block pos:line="1" pos:column="67">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name><name pos:line="2" pos:column="7">td<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">-&gt;<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="11">columns<pos:position pos:line="2" pos:column="18"/></name></name> <operator pos:line="2" pos:column="19">==<pos:position pos:line="2" pos:column="21"/></operator> <name pos:line="2" pos:column="22">NULL<pos:position pos:line="2" pos:column="26"/></name></expr>)<pos:position pos:line="2" pos:column="27"/></condition><then pos:line="2" pos:column="27">
    <block type="pseudo"><return pos:line="3" pos:column="5">return;<pos:position pos:line="3" pos:column="12"/></return></block></then></if>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><decl><type><name pos:line="5" pos:column="8">llentry_t<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">de<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name pos:line="5" pos:column="24">llist_head<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name><name pos:line="5" pos:column="35">td<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">-&gt;<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="39">columns<pos:position pos:line="5" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></init> <condition><expr><name pos:line="5" pos:column="49">de<pos:position pos:line="5" pos:column="51"/></name> <operator pos:line="5" pos:column="52">!=<pos:position pos:line="5" pos:column="54"/></operator> <name pos:line="5" pos:column="55">NULL<pos:position pos:line="5" pos:column="59"/></name></expr>;<pos:position pos:line="5" pos:column="60"/></condition> <incr><expr><name pos:line="5" pos:column="61">de<pos:position pos:line="5" pos:column="63"/></name> <operator pos:line="5" pos:column="64">=<pos:position pos:line="5" pos:column="65"/></operator> <name><name pos:line="5" pos:column="66">de<pos:position pos:line="5" pos:column="68"/></name><operator pos:line="5" pos:column="68">-&gt;<pos:position pos:line="5" pos:column="73"/></operator><name pos:line="5" pos:column="70">next<pos:position pos:line="5" pos:column="74"/></name></name></expr></incr>)<pos:position pos:line="5" pos:column="75"/></control> <block pos:line="5" pos:column="76">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">data_definition_t<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">dd<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name><name pos:line="6" pos:column="29">de<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="33">value<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">td<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">index_oid<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">oid_len<pos:position pos:line="8" pos:column="30"/></name></name></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31"> <block pos:line="8" pos:column="32">{
      <decl_stmt><decl><type><name pos:line="9" pos:column="7">int<pos:position pos:line="9" pos:column="10"/></name> <modifier pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></modifier></type><name pos:line="9" pos:column="12">index<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">char<pos:position pos:line="10" pos:column="11"/></name> <modifier pos:line="10" pos:column="12">*<pos:position pos:line="10" pos:column="13"/></modifier></type><name pos:line="10" pos:column="13">instance<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>

      <decl_stmt><decl><type><name pos:line="12" pos:column="7">c_avl_iterator_t<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">iter<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><call><name pos:line="12" pos:column="32">c_avl_get_iterator<pos:position pos:line="12" pos:column="50"/></name><argument_list pos:line="12" pos:column="50">(<argument><expr><name><name pos:line="12" pos:column="51">td<pos:position pos:line="12" pos:column="53"/></name><operator pos:line="12" pos:column="53">-&gt;<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="55">index_instance<pos:position pos:line="12" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="71"/></decl_stmt>
      <while pos:line="13" pos:column="7">while <condition pos:line="13" pos:column="13">(<expr><call><name pos:line="13" pos:column="14">c_avl_iterator_next<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">iter<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="40">(<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">void<pos:position pos:line="13" pos:column="45"/></name> <operator pos:line="13" pos:column="46">*<pos:position pos:line="13" pos:column="47"/></operator><operator pos:line="13" pos:column="47">)<pos:position pos:line="13" pos:column="48"/></operator><operator pos:line="13" pos:column="48">&amp;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="49">index<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="56">(<pos:position pos:line="13" pos:column="57"/></operator><name pos:line="13" pos:column="57">void<pos:position pos:line="13" pos:column="61"/></name> <operator pos:line="13" pos:column="62">*<pos:position pos:line="13" pos:column="63"/></operator><operator pos:line="13" pos:column="63">)<pos:position pos:line="13" pos:column="64"/></operator><operator pos:line="13" pos:column="64">&amp;<pos:position pos:line="13" pos:column="69"/></operator><name pos:line="13" pos:column="65">instance<pos:position pos:line="13" pos:column="73"/></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call> <operator pos:line="13" pos:column="75">==<pos:position pos:line="13" pos:column="77"/></operator>
             <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>)<pos:position pos:line="14" pos:column="16"/></condition> <block pos:line="14" pos:column="17">{
        <for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><decl><type><name pos:line="15" pos:column="14">size_t<pos:position pos:line="15" pos:column="20"/></name></type> <name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><literal type="number" pos:line="15" pos:column="25">0<pos:position pos:line="15" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="27"/></init> <condition><expr><name pos:line="15" pos:column="28">i<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">&lt;<pos:position pos:line="15" pos:column="34"/></operator> <name><name pos:line="15" pos:column="32">dd<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">oids_len<pos:position pos:line="15" pos:column="44"/></name></name></expr>;<pos:position pos:line="15" pos:column="45"/></condition> <incr><expr><name pos:line="15" pos:column="46">i<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">++<pos:position pos:line="15" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="50"/></control>
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="11">snmp_agent_unregister_oid_index<pos:position pos:line="16" pos:column="42"/></name><argument_list pos:line="16" pos:column="42">(<argument><expr><operator pos:line="16" pos:column="43">&amp;<pos:position pos:line="16" pos:column="48"/></operator><name><name pos:line="16" pos:column="44">dd<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">-&gt;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="48">oids<pos:position pos:line="16" pos:column="52"/></name><index pos:line="16" pos:column="52">[<expr><name pos:line="16" pos:column="53">i<pos:position pos:line="16" pos:column="54"/></name></expr>]<pos:position pos:line="16" pos:column="55"/></index></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="57">*<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="58">index<pos:position pos:line="16" pos:column="63"/></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt></block></for>
      }<pos:position pos:line="17" pos:column="8"/></block></while>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">c_avl_iterator_destroy<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">iter<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <else pos:line="19" pos:column="7">else <block pos:line="19" pos:column="12">{
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">char<pos:position pos:line="20" pos:column="11"/></name> <modifier pos:line="20" pos:column="12">*<pos:position pos:line="20" pos:column="13"/></modifier></type><name pos:line="20" pos:column="13">instance<pos:position pos:line="20" pos:column="21"/></name></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>

      <decl_stmt><decl><type><name pos:line="22" pos:column="7">c_avl_iterator_t<pos:position pos:line="22" pos:column="23"/></name> <modifier pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></modifier></type><name pos:line="22" pos:column="25">iter<pos:position pos:line="22" pos:column="29"/></name> <init pos:line="22" pos:column="30">= <expr><call><name pos:line="22" pos:column="32">c_avl_get_iterator<pos:position pos:line="22" pos:column="50"/></name><argument_list pos:line="22" pos:column="50">(<argument><expr><name><name pos:line="22" pos:column="51">dd<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">-&gt;<pos:position pos:line="22" pos:column="58"/></operator><name pos:line="22" pos:column="55">table<pos:position pos:line="22" pos:column="60"/></name><operator pos:line="22" pos:column="60">-&gt;<pos:position pos:line="22" pos:column="65"/></operator><name pos:line="22" pos:column="62">instance_index<pos:position pos:line="22" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="78"/></decl_stmt>
      <while pos:line="23" pos:column="7">while <condition pos:line="23" pos:column="13">(<expr><call><name pos:line="23" pos:column="14">c_avl_iterator_next<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">iter<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="40">(<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="41">void<pos:position pos:line="23" pos:column="45"/></name> <operator pos:line="23" pos:column="46">*<pos:position pos:line="23" pos:column="47"/></operator><operator pos:line="23" pos:column="47">)<pos:position pos:line="23" pos:column="48"/></operator><operator pos:line="23" pos:column="48">&amp;<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="49">instance<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="59">(<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="60">void<pos:position pos:line="23" pos:column="64"/></name> <operator pos:line="23" pos:column="65">*<pos:position pos:line="23" pos:column="66"/></operator><operator pos:line="23" pos:column="66">)<pos:position pos:line="23" pos:column="67"/></operator><operator pos:line="23" pos:column="67">&amp;<pos:position pos:line="23" pos:column="72"/></operator><name pos:line="23" pos:column="68">instance<pos:position pos:line="23" pos:column="76"/></name></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call> <operator pos:line="23" pos:column="78">==<pos:position pos:line="23" pos:column="80"/></operator>
             <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>)<pos:position pos:line="24" pos:column="16"/></condition> <block pos:line="24" pos:column="17">{
        <for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><decl><type><name pos:line="25" pos:column="14">size_t<pos:position pos:line="25" pos:column="20"/></name></type> <name pos:line="25" pos:column="21">i<pos:position pos:line="25" pos:column="22"/></name> <init pos:line="25" pos:column="23">= <expr><literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="27"/></init> <condition><expr><name pos:line="25" pos:column="28">i<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">&lt;<pos:position pos:line="25" pos:column="34"/></operator> <name><name pos:line="25" pos:column="32">dd<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">oids_len<pos:position pos:line="25" pos:column="44"/></name></name></expr>;<pos:position pos:line="25" pos:column="45"/></condition> <incr><expr><name pos:line="25" pos:column="46">i<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">++<pos:position pos:line="25" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="50"/></control>
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="11">snmp_agent_unregister_oid_string<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><operator pos:line="26" pos:column="44">&amp;<pos:position pos:line="26" pos:column="49"/></operator><name><name pos:line="26" pos:column="45">dd<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">-&gt;<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="49">oids<pos:position pos:line="26" pos:column="53"/></name><index pos:line="26" pos:column="53">[<expr><name pos:line="26" pos:column="54">i<pos:position pos:line="26" pos:column="55"/></name></expr>]<pos:position pos:line="26" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="58">instance<pos:position pos:line="26" pos:column="66"/></name></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt></block></for>
      }<pos:position pos:line="27" pos:column="8"/></block></while>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">c_avl_iterator_destroy<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">iter<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">snmp_agent_free_data<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><operator pos:line="31" pos:column="26">&amp;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="27">dd<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">llist_destroy<pos:position pos:line="34" pos:column="16"/></name><argument_list pos:line="34" pos:column="16">(<argument><expr><name><name pos:line="34" pos:column="17">td<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">-&gt;<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="21">columns<pos:position pos:line="34" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">td<pos:position pos:line="35" pos:column="5"/></name><operator pos:line="35" pos:column="5">-&gt;<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="7">columns<pos:position pos:line="35" pos:column="14"/></name></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">NULL<pos:position pos:line="35" pos:column="21"/></name></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_285.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_check<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">lcc_connection_t<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">connection<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">gauge_t<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">values<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name>   <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier><modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">values_names<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type>   <name pos:line="6" pos:column="18">values_num<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">address<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><literal type="number" pos:line="7" pos:column="22">1024<pos:position pos:line="7" pos:column="26"/></literal></expr>]<pos:position pos:line="7" pos:column="27"/></index></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">ident_str<pos:position pos:line="8" pos:column="23"/></name><index pos:line="8" pos:column="23">[<expr><literal type="number" pos:line="8" pos:column="24">1024<pos:position pos:line="8" pos:column="28"/></literal></expr>]<pos:position pos:line="8" pos:column="29"/></index></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">lcc_identifier_t<pos:position pos:line="9" pos:column="25"/></name></type> <name pos:line="9" pos:column="26">ident<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">i<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">status<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">snprintf<pos:position pos:line="13" pos:column="17"/></name> <argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">address<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="28">sizeof <argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">address<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="46">"unix:%s"<pos:position pos:line="13" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="57">socket_file_g<pos:position pos:line="13" pos:column="70"/></name></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">address<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><sizeof pos:line="14" pos:column="17">sizeof <argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">address<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></sizeof> <operator pos:line="14" pos:column="34">-<pos:position pos:line="14" pos:column="35"/></operator> <literal type="number" pos:line="14" pos:column="36">1<pos:position pos:line="14" pos:column="37"/></literal></expr>]<pos:position pos:line="14" pos:column="38"/></index></name> <operator pos:line="14" pos:column="39">=<pos:position pos:line="14" pos:column="40"/></operator> <literal type="number" pos:line="14" pos:column="41">0<pos:position pos:line="14" pos:column="42"/></literal></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">snprintf<pos:position pos:line="16" pos:column="17"/></name> <argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">ident_str<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="30">sizeof <argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">ident_str<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="50">"%s/%s"<pos:position pos:line="16" pos:column="57"/></literal></expr></argument>,
			<argument><expr><name pos:line="17" pos:column="25">hostname_g<pos:position pos:line="17" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="37">value_string_g<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">ident_str<pos:position pos:line="18" pos:column="18"/></name><index pos:line="18" pos:column="18">[<expr><sizeof pos:line="18" pos:column="19">sizeof <argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">ident_str<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></sizeof> <operator pos:line="18" pos:column="38">-<pos:position pos:line="18" pos:column="39"/></operator> <literal type="number" pos:line="18" pos:column="40">1<pos:position pos:line="18" pos:column="41"/></literal></expr>]<pos:position pos:line="18" pos:column="42"/></index></name> <operator pos:line="18" pos:column="43">=<pos:position pos:line="18" pos:column="44"/></operator> <literal type="number" pos:line="18" pos:column="45">0<pos:position pos:line="18" pos:column="46"/></literal></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><name pos:line="20" pos:column="9">connection<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">NULL<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">status<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">lcc_connect<pos:position pos:line="21" pos:column="29"/></name> <argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">address<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="41">connection<pos:position pos:line="21" pos:column="51"/></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">status<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">!=<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="23">0<pos:position pos:line="22" pos:column="24"/></literal></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25">
	<block pos:line="23" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">printf<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">(<argument><expr><literal type="string" pos:line="24" pos:column="25">"ERROR: Connecting to daemon at %s failed.\n"<pos:position pos:line="24" pos:column="70"/></literal></expr></argument>,
				<argument><expr><name pos:line="25" pos:column="33">socket_file_g<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">RET_CRITICAL<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">)<pos:position pos:line="26" pos:column="38"/></operator></expr>;<pos:position pos:line="26" pos:column="39"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="29" pos:column="9">memset<pos:position pos:line="29" pos:column="15"/></name> <argument_list pos:line="29" pos:column="16">(<argument><expr><operator pos:line="29" pos:column="17">&amp;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="18">ident<pos:position pos:line="29" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="25">0<pos:position pos:line="29" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="28">sizeof <argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">ident<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">lcc_string_to_identifier<pos:position pos:line="30" pos:column="42"/></name> <argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">connection<pos:position pos:line="30" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="56">&amp;<pos:position pos:line="30" pos:column="61"/></operator><name pos:line="30" pos:column="57">ident<pos:position pos:line="30" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="64">ident_str<pos:position pos:line="30" pos:column="73"/></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="75"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">status<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">!=<pos:position pos:line="31" pos:column="22"/></operator> <literal type="number" pos:line="31" pos:column="23">0<pos:position pos:line="31" pos:column="24"/></literal></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25">
	<block pos:line="32" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">printf<pos:position pos:line="33" pos:column="23"/></name> <argument_list pos:line="33" pos:column="24">(<argument><expr><literal type="string" pos:line="33" pos:column="25">"ERROR: Creating an identifier failed: %s.\n"<pos:position pos:line="33" pos:column="70"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="34" pos:column="33">lcc_strerror<pos:position pos:line="34" pos:column="45"/></name> <argument_list pos:line="34" pos:column="46">(<argument><expr><name pos:line="34" pos:column="47">connection<pos:position pos:line="34" pos:column="57"/></name></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">LCC_DESTROY<pos:position pos:line="35" pos:column="28"/></name> <argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">connection<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
		<return pos:line="36" pos:column="17">return <expr><operator pos:line="36" pos:column="24">(<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">RET_CRITICAL<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">)<pos:position pos:line="36" pos:column="38"/></operator></expr>;<pos:position pos:line="36" pos:column="39"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="39" pos:column="9">status<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">lcc_getval<pos:position pos:line="39" pos:column="28"/></name> <argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">connection<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="42">&amp;<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="43">ident<pos:position pos:line="39" pos:column="48"/></name></expr></argument>,
			<argument><expr><operator pos:line="40" pos:column="25">&amp;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="26">values_num<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="38">&amp;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="39">values<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="47">&amp;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="48">values_names<pos:position pos:line="40" pos:column="60"/></name></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="62"/></expr_stmt>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">status<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">!=<pos:position pos:line="41" pos:column="22"/></operator> <literal type="number" pos:line="41" pos:column="23">0<pos:position pos:line="41" pos:column="24"/></literal></expr>)<pos:position pos:line="41" pos:column="25"/></condition><then pos:line="41" pos:column="25">
	<block pos:line="42" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">printf<pos:position pos:line="43" pos:column="23"/></name> <argument_list pos:line="43" pos:column="24">(<argument><expr><literal type="string" pos:line="43" pos:column="25">"ERROR: Retrieving values from the daemon failed: %s.\n"<pos:position pos:line="43" pos:column="81"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="44" pos:column="33">lcc_strerror<pos:position pos:line="44" pos:column="45"/></name> <argument_list pos:line="44" pos:column="46">(<argument><expr><name pos:line="44" pos:column="47">connection<pos:position pos:line="44" pos:column="57"/></name></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">LCC_DESTROY<pos:position pos:line="45" pos:column="28"/></name> <argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">connection<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
		<return pos:line="46" pos:column="17">return <expr><operator pos:line="46" pos:column="24">(<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="25">RET_CRITICAL<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">)<pos:position pos:line="46" pos:column="38"/></operator></expr>;<pos:position pos:line="46" pos:column="39"/></return>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">LCC_DESTROY<pos:position pos:line="49" pos:column="20"/></name> <argument_list pos:line="49" pos:column="21">(<argument><expr><name pos:line="49" pos:column="22">connection<pos:position pos:line="49" pos:column="32"/></name></expr></argument>)<pos:position pos:line="49" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><name pos:line="51" pos:column="9">status<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <call><name pos:line="51" pos:column="18">filter_ds<pos:position pos:line="51" pos:column="27"/></name> <argument_list pos:line="51" pos:column="28">(<argument><expr><operator pos:line="51" pos:column="29">&amp;<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="30">values_num<pos:position pos:line="51" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="42">&amp;<pos:position pos:line="51" pos:column="47"/></operator><name pos:line="51" pos:column="43">values<pos:position pos:line="51" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="51">&amp;<pos:position pos:line="51" pos:column="56"/></operator><name pos:line="51" pos:column="52">values_names<pos:position pos:line="51" pos:column="64"/></name></expr></argument>)<pos:position pos:line="51" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="66"/></expr_stmt>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">status<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">!=<pos:position pos:line="52" pos:column="22"/></operator> <name pos:line="52" pos:column="23">RET_OKAY<pos:position pos:line="52" pos:column="31"/></name></expr>)<pos:position pos:line="52" pos:column="32"/></condition><then pos:line="52" pos:column="32">
		<block type="pseudo"><return pos:line="53" pos:column="17">return <expr><operator pos:line="53" pos:column="24">(<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="25">status<pos:position pos:line="53" pos:column="31"/></name><operator pos:line="53" pos:column="31">)<pos:position pos:line="53" pos:column="32"/></operator></expr>;<pos:position pos:line="53" pos:column="33"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="55" pos:column="9">status<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <name pos:line="55" pos:column="18">RET_UNKNOWN<pos:position pos:line="55" pos:column="29"/></name></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">consolitation_g<pos:position pos:line="56" pos:column="28"/></name> <operator pos:line="56" pos:column="29">==<pos:position pos:line="56" pos:column="31"/></operator> <name pos:line="56" pos:column="32">CON_NONE<pos:position pos:line="56" pos:column="40"/></name></expr>)<pos:position pos:line="56" pos:column="41"/></condition><then pos:line="56" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="17">status<pos:position pos:line="57" pos:column="23"/></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator>  <call><name pos:line="57" pos:column="27">do_check_con_none<pos:position pos:line="57" pos:column="44"/></name> <argument_list pos:line="57" pos:column="45">(<argument><expr><name pos:line="57" pos:column="46">values_num<pos:position pos:line="57" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="58">values<pos:position pos:line="57" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="66">values_names<pos:position pos:line="57" pos:column="78"/></name></expr></argument>)<pos:position pos:line="57" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="80"/></expr_stmt></block></then>
	<elseif pos:line="58" pos:column="9">else <if pos:line="58" pos:column="14">if <condition pos:line="58" pos:column="17">(<expr><name pos:line="58" pos:column="18">consolitation_g<pos:position pos:line="58" pos:column="33"/></name> <operator pos:line="58" pos:column="34">==<pos:position pos:line="58" pos:column="36"/></operator> <name pos:line="58" pos:column="37">CON_AVERAGE<pos:position pos:line="58" pos:column="48"/></name></expr>)<pos:position pos:line="58" pos:column="49"/></condition><then pos:line="58" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="17">status<pos:position pos:line="59" pos:column="23"/></name> <operator pos:line="59" pos:column="24">=<pos:position pos:line="59" pos:column="25"/></operator>  <call><name pos:line="59" pos:column="27">do_check_con_average<pos:position pos:line="59" pos:column="47"/></name> <argument_list pos:line="59" pos:column="48">(<argument><expr><name pos:line="59" pos:column="49">values_num<pos:position pos:line="59" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="61">values<pos:position pos:line="59" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="69">values_names<pos:position pos:line="59" pos:column="81"/></name></expr></argument>)<pos:position pos:line="59" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="83"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="60" pos:column="9">else <if pos:line="60" pos:column="14">if <condition pos:line="60" pos:column="17">(<expr><name pos:line="60" pos:column="18">consolitation_g<pos:position pos:line="60" pos:column="33"/></name> <operator pos:line="60" pos:column="34">==<pos:position pos:line="60" pos:column="36"/></operator> <name pos:line="60" pos:column="37">CON_SUM<pos:position pos:line="60" pos:column="44"/></name></expr>)<pos:position pos:line="60" pos:column="45"/></condition><then pos:line="60" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="17">status<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <call><name pos:line="61" pos:column="26">do_check_con_sum<pos:position pos:line="61" pos:column="42"/></name> <argument_list pos:line="61" pos:column="43">(<argument><expr><name pos:line="61" pos:column="44">values_num<pos:position pos:line="61" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="56">values<pos:position pos:line="61" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="64">values_names<pos:position pos:line="61" pos:column="76"/></name></expr></argument>)<pos:position pos:line="61" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="78"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="62" pos:column="9">else <if pos:line="62" pos:column="14">if <condition pos:line="62" pos:column="17">(<expr><name pos:line="62" pos:column="18">consolitation_g<pos:position pos:line="62" pos:column="33"/></name> <operator pos:line="62" pos:column="34">==<pos:position pos:line="62" pos:column="36"/></operator> <name pos:line="62" pos:column="37">CON_PERCENTAGE<pos:position pos:line="62" pos:column="51"/></name></expr>)<pos:position pos:line="62" pos:column="52"/></condition><then pos:line="62" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="17">status<pos:position pos:line="63" pos:column="23"/></name> <operator pos:line="63" pos:column="24">=<pos:position pos:line="63" pos:column="25"/></operator> <call><name pos:line="63" pos:column="26">do_check_con_percentage<pos:position pos:line="63" pos:column="49"/></name> <argument_list pos:line="63" pos:column="50">(<argument><expr><name pos:line="63" pos:column="51">values_num<pos:position pos:line="63" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="63">values<pos:position pos:line="63" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="71">values_names<pos:position pos:line="63" pos:column="83"/></name></expr></argument>)<pos:position pos:line="63" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="85"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="65" pos:column="9">free<pos:position pos:line="65" pos:column="13"/></name> <argument_list pos:line="65" pos:column="14">(<argument><expr><name pos:line="65" pos:column="15">values<pos:position pos:line="65" pos:column="21"/></name></expr></argument>)<pos:position pos:line="65" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="23"/></expr_stmt>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">values_names<pos:position pos:line="66" pos:column="25"/></name> <operator pos:line="66" pos:column="26">!=<pos:position pos:line="66" pos:column="28"/></operator> <name pos:line="66" pos:column="29">NULL<pos:position pos:line="66" pos:column="33"/></name></expr>)<pos:position pos:line="66" pos:column="34"/></condition><then pos:line="66" pos:column="34">
		<block type="pseudo"><for pos:line="67" pos:column="17">for <control pos:line="67" pos:column="21">(<init><expr><name pos:line="67" pos:column="22">i<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <literal type="number" pos:line="67" pos:column="26">0<pos:position pos:line="67" pos:column="27"/></literal></expr>;<pos:position pos:line="67" pos:column="28"/></init> <condition><expr><name pos:line="67" pos:column="29">i<pos:position pos:line="67" pos:column="30"/></name> <operator pos:line="67" pos:column="31">&lt;<pos:position pos:line="67" pos:column="35"/></operator> <name pos:line="67" pos:column="33">values_num<pos:position pos:line="67" pos:column="43"/></name></expr>;<pos:position pos:line="67" pos:column="44"/></condition> <incr><expr><name pos:line="67" pos:column="45">i<pos:position pos:line="67" pos:column="46"/></name><operator pos:line="67" pos:column="46">++<pos:position pos:line="67" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="49"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="25">free<pos:position pos:line="68" pos:column="29"/></name> <argument_list pos:line="68" pos:column="30">(<argument><expr><name><name pos:line="68" pos:column="31">values_names<pos:position pos:line="68" pos:column="43"/></name><index pos:line="68" pos:column="43">[<expr><name pos:line="68" pos:column="44">i<pos:position pos:line="68" pos:column="45"/></name></expr>]<pos:position pos:line="68" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="68" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="48"/></expr_stmt></block></for></block></then></if>
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">free<pos:position pos:line="69" pos:column="13"/></name> <argument_list pos:line="69" pos:column="14">(<argument><expr><name pos:line="69" pos:column="15">values_names<pos:position pos:line="69" pos:column="27"/></name></expr></argument>)<pos:position pos:line="69" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="29"/></expr_stmt>

	<return pos:line="71" pos:column="9">return <expr><operator pos:line="71" pos:column="16">(<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="17">status<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">)<pos:position pos:line="71" pos:column="24"/></operator></expr>;<pos:position pos:line="71" pos:column="25"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1275_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">marshal_ident<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">value_list_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">vl<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">collectd<pos:position pos:line="1" pos:column="59"/></name><operator pos:line="1" pos:column="59">::<pos:position pos:line="1" pos:column="61"/></operator><name pos:line="1" pos:column="61">types<pos:position pos:line="1" pos:column="66"/></name><operator pos:line="1" pos:column="66">::<pos:position pos:line="1" pos:column="68"/></operator><name pos:line="1" pos:column="68">Identifier<pos:position pos:line="1" pos:column="78"/></name></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">msg<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="3" pos:column="9">msg<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">-&gt;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="14">set_host<pos:position pos:line="3" pos:column="22"/></name></name><argument_list pos:line="3" pos:column="22">(<argument><expr><name><name pos:line="3" pos:column="23">vl<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">-&gt;<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="27">host<pos:position pos:line="3" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4" pos:column="9">msg<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">-&gt;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="14">set_plugin<pos:position pos:line="4" pos:column="24"/></name></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name><name pos:line="4" pos:column="25">vl<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">plugin<pos:position pos:line="4" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="37"/></expr_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">vl<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">plugin_instance<pos:position pos:line="5" pos:column="32"/></name><index pos:line="5" pos:column="32">[<expr><literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr>]<pos:position pos:line="5" pos:column="35"/></index></name> <operator pos:line="5" pos:column="36">!=<pos:position pos:line="5" pos:column="38"/></operator> <literal type="char" pos:line="5" pos:column="39">'\0'<pos:position pos:line="5" pos:column="43"/></literal></expr>)<pos:position pos:line="5" pos:column="44"/></condition><then pos:line="5" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name><name pos:line="6" pos:column="17">msg<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">set_plugin_instance<pos:position pos:line="6" pos:column="41"/></name></name><argument_list pos:line="6" pos:column="41">(<argument><expr><name><name pos:line="6" pos:column="42">vl<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">plugin_instance<pos:position pos:line="6" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="63"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name><name pos:line="7" pos:column="9">msg<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">set_type<pos:position pos:line="7" pos:column="22"/></name></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name><name pos:line="7" pos:column="23">vl<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">type<pos:position pos:line="7" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">vl<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">type_instance<pos:position pos:line="8" pos:column="30"/></name><index pos:line="8" pos:column="30">[<expr><literal type="number" pos:line="8" pos:column="31">0<pos:position pos:line="8" pos:column="32"/></literal></expr>]<pos:position pos:line="8" pos:column="33"/></index></name> <operator pos:line="8" pos:column="34">!=<pos:position pos:line="8" pos:column="36"/></operator> <literal type="char" pos:line="8" pos:column="37">'\0'<pos:position pos:line="8" pos:column="41"/></literal></expr>)<pos:position pos:line="8" pos:column="42"/></condition><then pos:line="8" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="17">msg<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">set_type_instance<pos:position pos:line="9" pos:column="39"/></name></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name><name pos:line="9" pos:column="40">vl<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">-&gt;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="44">type_instance<pos:position pos:line="9" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt></block></then></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

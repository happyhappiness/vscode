<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2121_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">udb_result_submit<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">udb_result_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">r<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
                             <parameter><decl><type><name pos:line="2" pos:column="30">udb_result_preparation_area_t<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">r_area<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="3" pos:column="30">udb_query_t<pos:position pos:line="3" pos:column="41"/></name> <specifier pos:line="3" pos:column="42">const<pos:position pos:line="3" pos:column="47"/></specifier> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">q<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="4" pos:column="30">udb_query_preparation_area_t<pos:position pos:line="4" pos:column="58"/></name> <modifier pos:line="4" pos:column="59">*<pos:position pos:line="4" pos:column="60"/></modifier></type><name pos:line="4" pos:column="60">q_area<pos:position pos:line="4" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="67"/></parameter_list> <block pos:line="4" pos:column="68">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">value_list_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">vl<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">r<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">!=<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr></argument>)<pos:position pos:line="7" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name><name pos:line="8" pos:column="10">r_area<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">ds<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">!=<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">NULL<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">assert<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">size_t<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">)<pos:position pos:line="9" pos:column="19"/></operator><name><name pos:line="9" pos:column="19">r_area<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">ds<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">ds_num<pos:position pos:line="9" pos:column="37"/></name></name><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator> <operator pos:line="9" pos:column="39">==<pos:position pos:line="9" pos:column="41"/></operator> <name><name pos:line="9" pos:column="42">r<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">-&gt;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="45">values_num<pos:position pos:line="9" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">assert<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><name><name pos:line="10" pos:column="10">r<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">values_num<pos:position pos:line="10" pos:column="23"/></name></name> <operator pos:line="10" pos:column="24">&gt;<pos:position pos:line="10" pos:column="28"/></operator> <literal type="number" pos:line="10" pos:column="26">0<pos:position pos:line="10" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">vl<pos:position pos:line="12" pos:column="5"/></name><operator pos:line="12" pos:column="5">.<pos:position pos:line="12" pos:column="6"/></operator><name pos:line="12" pos:column="6">values<pos:position pos:line="12" pos:column="12"/></name></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">calloc<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name><name pos:line="12" pos:column="22">r<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">values_num<pos:position pos:line="12" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="37">sizeof<argument_list pos:line="12" pos:column="43">(<argument><expr><operator pos:line="12" pos:column="44">*<pos:position pos:line="12" pos:column="45"/></operator><name><name pos:line="12" pos:column="45">vl<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">.<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">values<pos:position pos:line="12" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name><name pos:line="13" pos:column="7">vl<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">.<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">values<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">==<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">NULL<pos:position pos:line="13" pos:column="24"/></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <block pos:line="13" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"db query utils: calloc failed."<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">-<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">1<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">vl<pos:position pos:line="17" pos:column="5"/></name><operator pos:line="17" pos:column="5">.<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">values_len<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name><name pos:line="17" pos:column="19">r_area<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">ds<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">ds_num<pos:position pos:line="17" pos:column="37"/></name></name></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>

  <for pos:line="19" pos:column="3">for <control pos:line="19" pos:column="7">(<init><decl><type><name pos:line="19" pos:column="8">size_t<pos:position pos:line="19" pos:column="14"/></name></type> <name pos:line="19" pos:column="15">i<pos:position pos:line="19" pos:column="16"/></name> <init pos:line="19" pos:column="17">= <expr><literal type="number" pos:line="19" pos:column="19">0<pos:position pos:line="19" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="21"/></init> <condition><expr><name pos:line="19" pos:column="22">i<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">&lt;<pos:position pos:line="19" pos:column="28"/></operator> <name><name pos:line="19" pos:column="26">r<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">values_num<pos:position pos:line="19" pos:column="39"/></name></name></expr>;<pos:position pos:line="19" pos:column="40"/></condition> <incr><expr><name pos:line="19" pos:column="41">i<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">++<pos:position pos:line="19" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="45"/></control> <block pos:line="19" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name> <modifier pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></modifier></type><name pos:line="20" pos:column="11">value_str<pos:position pos:line="20" pos:column="20"/></name> <init pos:line="20" pos:column="21">= <expr><name><name pos:line="20" pos:column="23">r_area<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">values_buffer<pos:position pos:line="20" pos:column="44"/></name><index pos:line="20" pos:column="44">[<expr><name pos:line="20" pos:column="45">i<pos:position pos:line="20" pos:column="46"/></name></expr>]<pos:position pos:line="20" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="20" pos:column="48"/></decl_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><literal type="number" pos:line="22" pos:column="9">0<pos:position pos:line="22" pos:column="10"/></literal> <operator pos:line="22" pos:column="11">!=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">parse_value<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">value_str<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="37">&amp;<pos:position pos:line="22" pos:column="42"/></operator><name><name pos:line="22" pos:column="38">vl<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">.<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">values<pos:position pos:line="22" pos:column="47"/></name><index pos:line="22" pos:column="47">[<expr><name pos:line="22" pos:column="48">i<pos:position pos:line="22" pos:column="49"/></name></expr>]<pos:position pos:line="22" pos:column="50"/></index></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="52">r_area<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">-&gt;<pos:position pos:line="22" pos:column="63"/></operator><name pos:line="22" pos:column="60">ds<pos:position pos:line="22" pos:column="62"/></name><operator pos:line="22" pos:column="62">-&gt;<pos:position pos:line="22" pos:column="67"/></operator><name pos:line="22" pos:column="64">ds<pos:position pos:line="22" pos:column="66"/></name><index pos:line="22" pos:column="66">[<expr><name pos:line="22" pos:column="67">i<pos:position pos:line="22" pos:column="68"/></name></expr>]<pos:position pos:line="22" pos:column="69"/></index></name><operator pos:line="22" pos:column="69">.<pos:position pos:line="22" pos:column="70"/></operator><name pos:line="22" pos:column="70">type<pos:position pos:line="22" pos:column="74"/></name></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="76"/></condition><then pos:line="22" pos:column="76"> <block pos:line="22" pos:column="77">{
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">ERROR<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><literal type="string" pos:line="23" pos:column="13">"db query utils: udb_result_submit: Parsing `%s' as %s failed."<pos:position pos:line="23" pos:column="76"/></literal></expr></argument>,
            <argument><expr><name pos:line="24" pos:column="13">value_str<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="24">DS_TYPE_TO_STRING<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><expr><name><name pos:line="24" pos:column="42">r_area<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">-&gt;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="50">ds<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">-&gt;<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="54">ds<pos:position pos:line="24" pos:column="56"/></name><index pos:line="24" pos:column="56">[<expr><name pos:line="24" pos:column="57">i<pos:position pos:line="24" pos:column="58"/></name></expr>]<pos:position pos:line="24" pos:column="59"/></index></name><operator pos:line="24" pos:column="59">.<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="60">type<pos:position pos:line="24" pos:column="64"/></name></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name pos:line="25" pos:column="7">errno<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">EINVAL<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">free<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name><name pos:line="26" pos:column="12">vl<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">.<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">values<pos:position pos:line="26" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
      <return pos:line="27" pos:column="7">return <expr><operator pos:line="27" pos:column="14">-<pos:position pos:line="27" pos:column="15"/></operator><literal type="number" pos:line="27" pos:column="15">1<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
  }<pos:position pos:line="29" pos:column="4"/></block></for>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name><name pos:line="31" pos:column="7">q_area<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">interval<pos:position pos:line="31" pos:column="23"/></name></name> <operator pos:line="31" pos:column="24">&gt;<pos:position pos:line="31" pos:column="28"/></operator> <literal type="number" pos:line="31" pos:column="26">0<pos:position pos:line="31" pos:column="27"/></literal></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="5">vl<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">.<pos:position pos:line="32" pos:column="8"/></operator><name pos:line="32" pos:column="8">interval<pos:position pos:line="32" pos:column="16"/></name></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name><name pos:line="32" pos:column="19">q_area<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">interval<pos:position pos:line="32" pos:column="35"/></name></name></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">sstrncpy<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><name><name pos:line="34" pos:column="12">vl<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">.<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">host<pos:position pos:line="34" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="21">q_area<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">host<pos:position pos:line="34" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="35">sizeof<argument_list pos:line="34" pos:column="41">(<argument><expr><name><name pos:line="34" pos:column="42">vl<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">.<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="45">host<pos:position pos:line="34" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">sstrncpy<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><name><name pos:line="35" pos:column="12">vl<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">.<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">plugin<pos:position pos:line="35" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="23">q_area<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">plugin<pos:position pos:line="35" pos:column="37"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="39">sizeof<argument_list pos:line="35" pos:column="45">(<argument><expr><name><name pos:line="35" pos:column="46">vl<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">.<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="49">plugin<pos:position pos:line="35" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">sstrncpy<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><name><name pos:line="36" pos:column="12">vl<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">.<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">type<pos:position pos:line="36" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="21">r<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">type<pos:position pos:line="36" pos:column="28"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="30">sizeof<argument_list pos:line="36" pos:column="36">(<argument><expr><name><name pos:line="36" pos:column="37">vl<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">.<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="40">type<pos:position pos:line="36" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="38" pos:column="3">/* Set vl.plugin_instance */</comment>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name><name pos:line="39" pos:column="7">q<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">-&gt;<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="10">plugin_instance_from<pos:position pos:line="39" pos:column="30"/></name></name> <operator pos:line="39" pos:column="31">!=<pos:position pos:line="39" pos:column="33"/></operator> <name pos:line="39" pos:column="34">NULL<pos:position pos:line="39" pos:column="38"/></name></expr>)<pos:position pos:line="39" pos:column="39"/></condition><then pos:line="39" pos:column="39"> <block pos:line="39" pos:column="40">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">sstrncpy<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><name><name pos:line="40" pos:column="14">vl<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">.<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">plugin_instance<pos:position pos:line="40" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="34">r_area<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">-&gt;<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="42">plugin_instance<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>,
             <argument><expr><sizeof pos:line="41" pos:column="14">sizeof<argument_list pos:line="41" pos:column="20">(<argument><expr><name><name pos:line="41" pos:column="21">vl<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">.<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">plugin_instance<pos:position pos:line="41" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="42" pos:column="4"/></block></then> <else pos:line="42" pos:column="5">else <block pos:line="42" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">sstrncpy<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">(<argument><expr><name><name pos:line="43" pos:column="14">vl<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">.<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">plugin_instance<pos:position pos:line="43" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="34">q_area<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">db_name<pos:position pos:line="43" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="51">sizeof<argument_list pos:line="43" pos:column="57">(<argument><expr><name><name pos:line="43" pos:column="58">vl<pos:position pos:line="43" pos:column="60"/></name><operator pos:line="43" pos:column="60">.<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="61">plugin_instance<pos:position pos:line="43" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="79"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="46" pos:column="3">/* Set vl.type_instance {{{ */</comment>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name><name pos:line="47" pos:column="7">r<pos:position pos:line="47" pos:column="8"/></name><operator pos:line="47" pos:column="8">-&gt;<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="10">instances_num<pos:position pos:line="47" pos:column="23"/></name></name> <operator pos:line="47" pos:column="24">==<pos:position pos:line="47" pos:column="26"/></operator> <literal type="number" pos:line="47" pos:column="27">0<pos:position pos:line="47" pos:column="28"/></literal></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29"> <block pos:line="47" pos:column="30">{
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">r<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">instance_prefix<pos:position pos:line="48" pos:column="27"/></name></name> <operator pos:line="48" pos:column="28">==<pos:position pos:line="48" pos:column="30"/></operator> <name pos:line="48" pos:column="31">NULL<pos:position pos:line="48" pos:column="35"/></name></expr>)<pos:position pos:line="48" pos:column="36"/></condition><then pos:line="48" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="7">vl<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">.<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">type_instance<pos:position pos:line="49" pos:column="23"/></name><index pos:line="49" pos:column="23">[<expr><literal type="number" pos:line="49" pos:column="24">0<pos:position pos:line="49" pos:column="25"/></literal></expr>]<pos:position pos:line="49" pos:column="26"/></index></name> <operator pos:line="49" pos:column="27">=<pos:position pos:line="49" pos:column="28"/></operator> <literal type="number" pos:line="49" pos:column="29">0<pos:position pos:line="49" pos:column="30"/></literal></expr>;<pos:position pos:line="49" pos:column="31"/></expr_stmt></block></then>
    <else pos:line="50" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="7">sstrncpy<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><name><name pos:line="51" pos:column="16">vl<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">.<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="19">type_instance<pos:position pos:line="51" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="34">r<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">-&gt;<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="37">instance_prefix<pos:position pos:line="51" pos:column="52"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="54">sizeof<argument_list pos:line="51" pos:column="60">(<argument><expr><name><name pos:line="51" pos:column="61">vl<pos:position pos:line="51" pos:column="63"/></name><operator pos:line="51" pos:column="63">.<pos:position pos:line="51" pos:column="64"/></operator><name pos:line="51" pos:column="64">type_instance<pos:position pos:line="51" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="80"/></expr_stmt></block></else></if>
  }<pos:position pos:line="52" pos:column="4"/></block></then> <else pos:line="52" pos:column="5">else <comment type="block" pos:line="52" pos:column="10">/* if ((r-&gt;instances_num &gt; 0) */</comment>
  <block pos:line="53" pos:column="3">{
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name><name pos:line="54" pos:column="9">r<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">instance_prefix<pos:position pos:line="54" pos:column="27"/></name></name> <operator pos:line="54" pos:column="28">==<pos:position pos:line="54" pos:column="30"/></operator> <name pos:line="54" pos:column="31">NULL<pos:position pos:line="54" pos:column="35"/></name></expr>)<pos:position pos:line="54" pos:column="36"/></condition><then pos:line="54" pos:column="36"> <block pos:line="54" pos:column="37">{
      <decl_stmt><decl><type><name pos:line="55" pos:column="7">int<pos:position pos:line="55" pos:column="10"/></name></type> <name pos:line="55" pos:column="11">status<pos:position pos:line="55" pos:column="17"/></name> <init pos:line="55" pos:column="18">= <expr><call><name pos:line="55" pos:column="20">strjoin<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><name><name pos:line="55" pos:column="28">vl<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">.<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="31">type_instance<pos:position pos:line="55" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="46">sizeof<argument_list pos:line="55" pos:column="52">(<argument><expr><name><name pos:line="55" pos:column="53">vl<pos:position pos:line="55" pos:column="55"/></name><operator pos:line="55" pos:column="55">.<pos:position pos:line="55" pos:column="56"/></operator><name pos:line="55" pos:column="56">type_instance<pos:position pos:line="55" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></sizeof></expr></argument>,
                           <argument><expr><name><name pos:line="56" pos:column="28">r_area<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">-&gt;<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="36">instances_buffer<pos:position pos:line="56" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="54">r<pos:position pos:line="56" pos:column="55"/></name><operator pos:line="56" pos:column="55">-&gt;<pos:position pos:line="56" pos:column="60"/></operator><name pos:line="56" pos:column="57">instances_num<pos:position pos:line="56" pos:column="70"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="72">"-"<pos:position pos:line="56" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="77"/></decl_stmt>
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><name pos:line="57" pos:column="11">status<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">&lt;<pos:position pos:line="57" pos:column="22"/></operator> <literal type="number" pos:line="57" pos:column="20">0<pos:position pos:line="57" pos:column="21"/></literal></expr>)<pos:position pos:line="57" pos:column="22"/></condition><then pos:line="57" pos:column="22"> <block pos:line="57" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">ERROR<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(
            <argument><expr><literal type="string" pos:line="59" pos:column="13">"udb_result_submit: creating type_instance failed with status %d."<pos:position pos:line="59" pos:column="79"/></literal></expr></argument>,
            <argument><expr><name pos:line="60" pos:column="13">status<pos:position pos:line="60" pos:column="19"/></name></expr></argument>)<pos:position pos:line="60" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="21"/></expr_stmt>
        <return pos:line="61" pos:column="9">return <expr><name pos:line="61" pos:column="16">status<pos:position pos:line="61" pos:column="22"/></name></expr>;<pos:position pos:line="61" pos:column="23"/></return>
      }<pos:position pos:line="62" pos:column="8"/></block></then></if>
    }<pos:position pos:line="63" pos:column="6"/></block></then> <else pos:line="63" pos:column="7">else <block pos:line="63" pos:column="12">{
      <decl_stmt><decl><type><name pos:line="64" pos:column="7">char<pos:position pos:line="64" pos:column="11"/></name></type> <name><name pos:line="64" pos:column="12">tmp<pos:position pos:line="64" pos:column="15"/></name><index pos:line="64" pos:column="15">[<expr><name pos:line="64" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="64" pos:column="33"/></name></expr>]<pos:position pos:line="64" pos:column="34"/></index></name></decl>;<pos:position pos:line="64" pos:column="35"/></decl_stmt>

      <decl_stmt><decl><type><name pos:line="66" pos:column="7">int<pos:position pos:line="66" pos:column="10"/></name></type> <name pos:line="66" pos:column="11">status<pos:position pos:line="66" pos:column="17"/></name> <init pos:line="66" pos:column="18">= <expr><call><name pos:line="66" pos:column="20">strjoin<pos:position pos:line="66" pos:column="27"/></name><argument_list pos:line="66" pos:column="27">(<argument><expr><name pos:line="66" pos:column="28">tmp<pos:position pos:line="66" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="33">sizeof<argument_list pos:line="66" pos:column="39">(<argument><expr><name pos:line="66" pos:column="40">tmp<pos:position pos:line="66" pos:column="43"/></name></expr></argument>)<pos:position pos:line="66" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="46">r_area<pos:position pos:line="66" pos:column="52"/></name><operator pos:line="66" pos:column="52">-&gt;<pos:position pos:line="66" pos:column="57"/></operator><name pos:line="66" pos:column="54">instances_buffer<pos:position pos:line="66" pos:column="70"/></name></name></expr></argument>,
                           <argument><expr><name><name pos:line="67" pos:column="28">r<pos:position pos:line="67" pos:column="29"/></name><operator pos:line="67" pos:column="29">-&gt;<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="31">instances_num<pos:position pos:line="67" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="46">"-"<pos:position pos:line="67" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="51"/></decl_stmt>
      <if pos:line="68" pos:column="7">if <condition pos:line="68" pos:column="10">(<expr><name pos:line="68" pos:column="11">status<pos:position pos:line="68" pos:column="17"/></name> <operator pos:line="68" pos:column="18">&lt;<pos:position pos:line="68" pos:column="22"/></operator> <literal type="number" pos:line="68" pos:column="20">0<pos:position pos:line="68" pos:column="21"/></literal></expr>)<pos:position pos:line="68" pos:column="22"/></condition><then pos:line="68" pos:column="22"> <block pos:line="68" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">ERROR<pos:position pos:line="69" pos:column="14"/></name><argument_list pos:line="69" pos:column="14">(
            <argument><expr><literal type="string" pos:line="70" pos:column="13">"udb_result_submit: creating type_instance failed with status %d."<pos:position pos:line="70" pos:column="79"/></literal></expr></argument>,
            <argument><expr><name pos:line="71" pos:column="13">status<pos:position pos:line="71" pos:column="19"/></name></expr></argument>)<pos:position pos:line="71" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="21"/></expr_stmt>
        <return pos:line="72" pos:column="9">return <expr><name pos:line="72" pos:column="16">status<pos:position pos:line="72" pos:column="22"/></name></expr>;<pos:position pos:line="72" pos:column="23"/></return>
      }<pos:position pos:line="73" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="74" pos:column="7">tmp<pos:position pos:line="74" pos:column="10"/></name><index pos:line="74" pos:column="10">[<expr><sizeof pos:line="74" pos:column="11">sizeof<argument_list pos:line="74" pos:column="17">(<argument><expr><name pos:line="74" pos:column="18">tmp<pos:position pos:line="74" pos:column="21"/></name></expr></argument>)<pos:position pos:line="74" pos:column="22"/></argument_list></sizeof> <operator pos:line="74" pos:column="23">-<pos:position pos:line="74" pos:column="24"/></operator> <literal type="number" pos:line="74" pos:column="25">1<pos:position pos:line="74" pos:column="26"/></literal></expr>]<pos:position pos:line="74" pos:column="27"/></index></name> <operator pos:line="74" pos:column="28">=<pos:position pos:line="74" pos:column="29"/></operator> <literal type="number" pos:line="74" pos:column="30">0<pos:position pos:line="74" pos:column="31"/></literal></expr>;<pos:position pos:line="74" pos:column="32"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="76" pos:column="7">snprintf<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><name><name pos:line="76" pos:column="16">vl<pos:position pos:line="76" pos:column="18"/></name><operator pos:line="76" pos:column="18">.<pos:position pos:line="76" pos:column="19"/></operator><name pos:line="76" pos:column="19">type_instance<pos:position pos:line="76" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="34">sizeof<argument_list pos:line="76" pos:column="40">(<argument><expr><name><name pos:line="76" pos:column="41">vl<pos:position pos:line="76" pos:column="43"/></name><operator pos:line="76" pos:column="43">.<pos:position pos:line="76" pos:column="44"/></operator><name pos:line="76" pos:column="44">type_instance<pos:position pos:line="76" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="60">"%s-%s"<pos:position pos:line="76" pos:column="67"/></literal></expr></argument>,
               <argument><expr><name><name pos:line="77" pos:column="16">r<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">-&gt;<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="19">instance_prefix<pos:position pos:line="77" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="36">tmp<pos:position pos:line="77" pos:column="39"/></name></expr></argument>)<pos:position pos:line="77" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></else></if>
  }<pos:position pos:line="79" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="80" pos:column="3">vl<pos:position pos:line="80" pos:column="5"/></name><operator pos:line="80" pos:column="5">.<pos:position pos:line="80" pos:column="6"/></operator><name pos:line="80" pos:column="6">type_instance<pos:position pos:line="80" pos:column="19"/></name><index pos:line="80" pos:column="19">[<expr><sizeof pos:line="80" pos:column="20">sizeof<argument_list pos:line="80" pos:column="26">(<argument><expr><name><name pos:line="80" pos:column="27">vl<pos:position pos:line="80" pos:column="29"/></name><operator pos:line="80" pos:column="29">.<pos:position pos:line="80" pos:column="30"/></operator><name pos:line="80" pos:column="30">type_instance<pos:position pos:line="80" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="44"/></argument_list></sizeof> <operator pos:line="80" pos:column="45">-<pos:position pos:line="80" pos:column="46"/></operator> <literal type="number" pos:line="80" pos:column="47">1<pos:position pos:line="80" pos:column="48"/></literal></expr>]<pos:position pos:line="80" pos:column="49"/></index></name> <operator pos:line="80" pos:column="50">=<pos:position pos:line="80" pos:column="51"/></operator> <literal type="number" pos:line="80" pos:column="52">0<pos:position pos:line="80" pos:column="53"/></literal></expr>;<pos:position pos:line="80" pos:column="54"/></expr_stmt>
  <comment type="block" pos:line="81" pos:column="3">/* }}} */</comment>

  <comment type="block" pos:line="83" pos:column="3">/* Annotate meta data. {{{ */</comment>
  <if pos:line="84" pos:column="3">if <condition pos:line="84" pos:column="6">(<expr><name><name pos:line="84" pos:column="7">r<pos:position pos:line="84" pos:column="8"/></name><operator pos:line="84" pos:column="8">-&gt;<pos:position pos:line="84" pos:column="13"/></operator><name pos:line="84" pos:column="10">metadata_num<pos:position pos:line="84" pos:column="22"/></name></name> <operator pos:line="84" pos:column="23">&gt;<pos:position pos:line="84" pos:column="27"/></operator> <literal type="number" pos:line="84" pos:column="25">0<pos:position pos:line="84" pos:column="26"/></literal></expr>)<pos:position pos:line="84" pos:column="27"/></condition><then pos:line="84" pos:column="27"> <block pos:line="84" pos:column="28">{
    <expr_stmt><expr><name><name pos:line="85" pos:column="5">vl<pos:position pos:line="85" pos:column="7"/></name><operator pos:line="85" pos:column="7">.<pos:position pos:line="85" pos:column="8"/></operator><name pos:line="85" pos:column="8">meta<pos:position pos:line="85" pos:column="12"/></name></name> <operator pos:line="85" pos:column="13">=<pos:position pos:line="85" pos:column="14"/></operator> <call><name pos:line="85" pos:column="15">meta_data_create<pos:position pos:line="85" pos:column="31"/></name><argument_list pos:line="85" pos:column="31">()<pos:position pos:line="85" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="34"/></expr_stmt>
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><name><name pos:line="86" pos:column="9">vl<pos:position pos:line="86" pos:column="11"/></name><operator pos:line="86" pos:column="11">.<pos:position pos:line="86" pos:column="12"/></operator><name pos:line="86" pos:column="12">meta<pos:position pos:line="86" pos:column="16"/></name></name> <operator pos:line="86" pos:column="17">==<pos:position pos:line="86" pos:column="19"/></operator> <name pos:line="86" pos:column="20">NULL<pos:position pos:line="86" pos:column="24"/></name></expr>)<pos:position pos:line="86" pos:column="25"/></condition><then pos:line="86" pos:column="25"> <block pos:line="86" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">ERROR<pos:position pos:line="87" pos:column="12"/></name><argument_list pos:line="87" pos:column="12">(<argument><expr><literal type="string" pos:line="87" pos:column="13">"db query utils:: meta_data_create failed."<pos:position pos:line="87" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="58"/></expr_stmt>
      <return pos:line="88" pos:column="7">return <expr><operator pos:line="88" pos:column="14">-<pos:position pos:line="88" pos:column="15"/></operator><name pos:line="88" pos:column="15">ENOMEM<pos:position pos:line="88" pos:column="21"/></name></expr>;<pos:position pos:line="88" pos:column="22"/></return>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>

    <for pos:line="91" pos:column="5">for <control pos:line="91" pos:column="9">(<init><decl><type><name pos:line="91" pos:column="10">size_t<pos:position pos:line="91" pos:column="16"/></name></type> <name pos:line="91" pos:column="17">i<pos:position pos:line="91" pos:column="18"/></name> <init pos:line="91" pos:column="19">= <expr><literal type="number" pos:line="91" pos:column="21">0<pos:position pos:line="91" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="91" pos:column="23"/></init> <condition><expr><name pos:line="91" pos:column="24">i<pos:position pos:line="91" pos:column="25"/></name> <operator pos:line="91" pos:column="26">&lt;<pos:position pos:line="91" pos:column="30"/></operator> <name><name pos:line="91" pos:column="28">r<pos:position pos:line="91" pos:column="29"/></name><operator pos:line="91" pos:column="29">-&gt;<pos:position pos:line="91" pos:column="34"/></operator><name pos:line="91" pos:column="31">metadata_num<pos:position pos:line="91" pos:column="43"/></name></name></expr>;<pos:position pos:line="91" pos:column="44"/></condition> <incr><expr><name pos:line="91" pos:column="45">i<pos:position pos:line="91" pos:column="46"/></name><operator pos:line="91" pos:column="46">++<pos:position pos:line="91" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="91" pos:column="49"/></control> <block pos:line="91" pos:column="50">{
      <decl_stmt><decl><type><name pos:line="92" pos:column="7">int<pos:position pos:line="92" pos:column="10"/></name></type> <name pos:line="92" pos:column="11">status<pos:position pos:line="92" pos:column="17"/></name> <init pos:line="92" pos:column="18">= <expr><call><name pos:line="92" pos:column="20">meta_data_add_string<pos:position pos:line="92" pos:column="40"/></name><argument_list pos:line="92" pos:column="40">(<argument><expr><name><name pos:line="92" pos:column="41">vl<pos:position pos:line="92" pos:column="43"/></name><operator pos:line="92" pos:column="43">.<pos:position pos:line="92" pos:column="44"/></operator><name pos:line="92" pos:column="44">meta<pos:position pos:line="92" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="50">r<pos:position pos:line="92" pos:column="51"/></name><operator pos:line="92" pos:column="51">-&gt;<pos:position pos:line="92" pos:column="56"/></operator><name pos:line="92" pos:column="53">metadata<pos:position pos:line="92" pos:column="61"/></name><index pos:line="92" pos:column="61">[<expr><name pos:line="92" pos:column="62">i<pos:position pos:line="92" pos:column="63"/></name></expr>]<pos:position pos:line="92" pos:column="64"/></index></name></expr></argument>,
                                        <argument><expr><name><name pos:line="93" pos:column="41">r_area<pos:position pos:line="93" pos:column="47"/></name><operator pos:line="93" pos:column="47">-&gt;<pos:position pos:line="93" pos:column="52"/></operator><name pos:line="93" pos:column="49">metadata_buffer<pos:position pos:line="93" pos:column="64"/></name><index pos:line="93" pos:column="64">[<expr><name pos:line="93" pos:column="65">i<pos:position pos:line="93" pos:column="66"/></name></expr>]<pos:position pos:line="93" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="93" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="93" pos:column="69"/></decl_stmt>
      <if pos:line="94" pos:column="7">if <condition pos:line="94" pos:column="10">(<expr><name pos:line="94" pos:column="11">status<pos:position pos:line="94" pos:column="17"/></name> <operator pos:line="94" pos:column="18">!=<pos:position pos:line="94" pos:column="20"/></operator> <literal type="number" pos:line="94" pos:column="21">0<pos:position pos:line="94" pos:column="22"/></literal></expr>)<pos:position pos:line="94" pos:column="23"/></condition><then pos:line="94" pos:column="23"> <block pos:line="94" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">ERROR<pos:position pos:line="95" pos:column="14"/></name><argument_list pos:line="95" pos:column="14">(<argument><expr><literal type="string" pos:line="95" pos:column="15">"db query utils:: meta_data_add_string failed."<pos:position pos:line="95" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">meta_data_destroy<pos:position pos:line="96" pos:column="26"/></name><argument_list pos:line="96" pos:column="26">(<argument><expr><name><name pos:line="96" pos:column="27">vl<pos:position pos:line="96" pos:column="29"/></name><operator pos:line="96" pos:column="29">.<pos:position pos:line="96" pos:column="30"/></operator><name pos:line="96" pos:column="30">meta<pos:position pos:line="96" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="97" pos:column="9">vl<pos:position pos:line="97" pos:column="11"/></name><operator pos:line="97" pos:column="11">.<pos:position pos:line="97" pos:column="12"/></operator><name pos:line="97" pos:column="12">meta<pos:position pos:line="97" pos:column="16"/></name></name> <operator pos:line="97" pos:column="17">=<pos:position pos:line="97" pos:column="18"/></operator> <name pos:line="97" pos:column="19">NULL<pos:position pos:line="97" pos:column="23"/></name></expr>;<pos:position pos:line="97" pos:column="24"/></expr_stmt>
        <return pos:line="98" pos:column="9">return <expr><name pos:line="98" pos:column="16">status<pos:position pos:line="98" pos:column="22"/></name></expr>;<pos:position pos:line="98" pos:column="23"/></return>
      }<pos:position pos:line="99" pos:column="8"/></block></then></if>
    }<pos:position pos:line="100" pos:column="6"/></block></for>
  }<pos:position pos:line="101" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="102" pos:column="3">/* }}} */</comment>

  <expr_stmt><expr><call><name pos:line="104" pos:column="3">plugin_dispatch_values<pos:position pos:line="104" pos:column="25"/></name><argument_list pos:line="104" pos:column="25">(<argument><expr><operator pos:line="104" pos:column="26">&amp;<pos:position pos:line="104" pos:column="31"/></operator><name pos:line="104" pos:column="27">vl<pos:position pos:line="104" pos:column="29"/></name></expr></argument>)<pos:position pos:line="104" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="31"/></expr_stmt>

  <if pos:line="106" pos:column="3">if <condition pos:line="106" pos:column="6">(<expr><name><name pos:line="106" pos:column="7">r<pos:position pos:line="106" pos:column="8"/></name><operator pos:line="106" pos:column="8">-&gt;<pos:position pos:line="106" pos:column="13"/></operator><name pos:line="106" pos:column="10">metadata_num<pos:position pos:line="106" pos:column="22"/></name></name> <operator pos:line="106" pos:column="23">&gt;<pos:position pos:line="106" pos:column="27"/></operator> <literal type="number" pos:line="106" pos:column="25">0<pos:position pos:line="106" pos:column="26"/></literal></expr>)<pos:position pos:line="106" pos:column="27"/></condition><then pos:line="106" pos:column="27"> <block pos:line="106" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">meta_data_destroy<pos:position pos:line="107" pos:column="22"/></name><argument_list pos:line="107" pos:column="22">(<argument><expr><name><name pos:line="107" pos:column="23">vl<pos:position pos:line="107" pos:column="25"/></name><operator pos:line="107" pos:column="25">.<pos:position pos:line="107" pos:column="26"/></operator><name pos:line="107" pos:column="26">meta<pos:position pos:line="107" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="108" pos:column="5">vl<pos:position pos:line="108" pos:column="7"/></name><operator pos:line="108" pos:column="7">.<pos:position pos:line="108" pos:column="8"/></operator><name pos:line="108" pos:column="8">meta<pos:position pos:line="108" pos:column="12"/></name></name> <operator pos:line="108" pos:column="13">=<pos:position pos:line="108" pos:column="14"/></operator> <name pos:line="108" pos:column="15">NULL<pos:position pos:line="108" pos:column="19"/></name></expr>;<pos:position pos:line="108" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="109" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="110" pos:column="3">sfree<pos:position pos:line="110" pos:column="8"/></name><argument_list pos:line="110" pos:column="8">(<argument><expr><name><name pos:line="110" pos:column="9">vl<pos:position pos:line="110" pos:column="11"/></name><operator pos:line="110" pos:column="11">.<pos:position pos:line="110" pos:column="12"/></operator><name pos:line="110" pos:column="12">values<pos:position pos:line="110" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="20"/></expr_stmt>
  <return pos:line="111" pos:column="3">return <expr><literal type="number" pos:line="111" pos:column="10">0<pos:position pos:line="111" pos:column="11"/></literal></expr>;<pos:position pos:line="111" pos:column="12"/></return>
}<pos:position pos:line="112" pos:column="2"/></block></function></unit>

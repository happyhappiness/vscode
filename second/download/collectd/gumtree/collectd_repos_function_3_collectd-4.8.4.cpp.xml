<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_3_collectd-4.8.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">argz_next<pos:position pos:line="2" pos:column="10"/></name> <parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">char<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type><name pos:line="2" pos:column="18">argz<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="24">size_t<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">argz_len<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">entry<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">assert<pos:position pos:line="4" pos:column="9"/></name> <argument_list pos:line="4" pos:column="10">(<argument><expr><operator pos:line="4" pos:column="11">(<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">argz<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">&amp;&amp;<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="20">argz_len<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">)<pos:position pos:line="4" pos:column="29"/></operator> <operator pos:line="4" pos:column="30">||<pos:position pos:line="4" pos:column="32"/></operator> <operator pos:line="4" pos:column="33">(<pos:position pos:line="4" pos:column="34"/></operator><operator pos:line="4" pos:column="34">!<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">argz<pos:position pos:line="4" pos:column="39"/></name> <operator pos:line="4" pos:column="40">&amp;&amp;<pos:position pos:line="4" pos:column="50"/></operator> <operator pos:line="4" pos:column="43">!<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">argz_len<pos:position pos:line="4" pos:column="52"/></name><operator pos:line="4" pos:column="52">)<pos:position pos:line="4" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="55"/></expr_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">entry<pos:position pos:line="6" pos:column="12"/></name></expr>)<pos:position pos:line="6" pos:column="13"/></condition><then pos:line="6" pos:column="13">
    <block pos:line="7" pos:column="5">{
      <comment type="block" pos:line="8" pos:column="7">/* Either ARGZ/ARGZ_LEN is empty, or ENTRY points into an address
	 within the ARGZ vector.  */</comment>
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">assert<pos:position pos:line="10" pos:column="13"/></name> <argument_list pos:line="10" pos:column="14">(<argument><expr><operator pos:line="10" pos:column="15">(<pos:position pos:line="10" pos:column="16"/></operator><operator pos:line="10" pos:column="16">!<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">argz<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">&amp;&amp;<pos:position pos:line="10" pos:column="32"/></operator> <operator pos:line="10" pos:column="25">!<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">argz_len<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">)<pos:position pos:line="10" pos:column="35"/></operator>
	      <operator pos:line="11" pos:column="15">||<pos:position pos:line="11" pos:column="17"/></operator> <operator pos:line="11" pos:column="18">(<pos:position pos:line="11" pos:column="19"/></operator><operator pos:line="11" pos:column="19">(<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">argz<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">&lt;=<pos:position pos:line="11" pos:column="30"/></operator> <name pos:line="11" pos:column="28">entry<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">)<pos:position pos:line="11" pos:column="34"/></operator> <operator pos:line="11" pos:column="35">&amp;&amp;<pos:position pos:line="11" pos:column="45"/></operator> <operator pos:line="11" pos:column="38">(<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">entry<pos:position pos:line="11" pos:column="44"/></name> <operator pos:line="11" pos:column="45">&lt;<pos:position pos:line="11" pos:column="49"/></operator> <operator pos:line="11" pos:column="47">(<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">argz<pos:position pos:line="11" pos:column="52"/></name> <operator pos:line="11" pos:column="53">+<pos:position pos:line="11" pos:column="54"/></operator> <name pos:line="11" pos:column="55">argz_len<pos:position pos:line="11" pos:column="63"/></name><operator pos:line="11" pos:column="63">)<pos:position pos:line="11" pos:column="64"/></operator><operator pos:line="11" pos:column="64">)<pos:position pos:line="11" pos:column="65"/></operator><operator pos:line="11" pos:column="65">)<pos:position pos:line="11" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></expr_stmt>

      <comment type="block" pos:line="13" pos:column="7">/* Move to the char immediately after the terminating
	 '\0' of ENTRY.  */</comment>
      <expr_stmt><expr><name pos:line="15" pos:column="7">entry<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <literal type="number" pos:line="15" pos:column="15">1<pos:position pos:line="15" pos:column="16"/></literal><operator pos:line="15" pos:column="16">+<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">strchr<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">entry<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="33">EOS_CHAR<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>

      <comment type="block" pos:line="17" pos:column="7">/* Return either the new ENTRY, or else NULL if ARGZ is
	 exhausted.  */</comment>
      <return pos:line="19" pos:column="7">return <expr><ternary><condition><expr><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">entry<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">&gt;=<pos:position pos:line="19" pos:column="26"/></operator> <name pos:line="19" pos:column="24">argz<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">+<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">argz_len<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">)<pos:position pos:line="19" pos:column="40"/></operator></expr> ?<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42"> <expr><literal type="number" pos:line="19" pos:column="43">0<pos:position pos:line="19" pos:column="44"/></literal></expr> <pos:position pos:line="19" pos:column="45"/></then><else pos:line="19" pos:column="45">: <expr><operator pos:line="19" pos:column="47">(<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="48">char<pos:position pos:line="19" pos:column="52"/></name> <operator pos:line="19" pos:column="53">*<pos:position pos:line="19" pos:column="54"/></operator><operator pos:line="19" pos:column="54">)<pos:position pos:line="19" pos:column="55"/></operator> <name pos:line="19" pos:column="56">entry<pos:position pos:line="19" pos:column="61"/></name></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="62"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then>
  <else pos:line="21" pos:column="3">else
    <block pos:line="22" pos:column="5">{
      <comment type="block" pos:line="23" pos:column="7">/* This should probably be flagged as a programmer error,
	 since starting an argz_next loop with the iterator set
	 to ARGZ is safer.  To preserve semantics, handle the NULL
	 case by returning the start of ARGZ (if any).  */</comment>
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name pos:line="27" pos:column="11">argz_len<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">&gt;<pos:position pos:line="27" pos:column="24"/></operator> <literal type="number" pos:line="27" pos:column="22">0<pos:position pos:line="27" pos:column="23"/></literal></expr>)<pos:position pos:line="27" pos:column="24"/></condition><then pos:line="27" pos:column="24">
	<block type="pseudo"><return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">argz<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></return></block></then>
      <else pos:line="29" pos:column="7">else
	<block type="pseudo"><return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return></block></else></if>
    }<pos:position pos:line="31" pos:column="6"/></block></else></if>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

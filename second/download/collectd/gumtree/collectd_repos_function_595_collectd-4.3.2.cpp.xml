<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_595_collectd-4.3.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_value_plugindir<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">oconfig_item_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">ci<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">assert<pos:position pos:line="3" pos:column="15"/></name> <argument_list pos:line="3" pos:column="16">(<argument><expr><call><name pos:line="3" pos:column="17">strcasecmp<pos:position pos:line="3" pos:column="27"/></name> <argument_list pos:line="3" pos:column="28">(<argument><expr><name><name pos:line="3" pos:column="29">ci<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">-&gt;<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="33">key<pos:position pos:line="3" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="38">"PluginDir"<pos:position pos:line="3" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="50"/></argument_list></call> <operator pos:line="3" pos:column="51">==<pos:position pos:line="3" pos:column="53"/></operator> <literal type="number" pos:line="3" pos:column="54">0<pos:position pos:line="3" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="57"/></expr_stmt>
	
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">ci<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">values_num<pos:position pos:line="5" pos:column="27"/></name></name> <operator pos:line="5" pos:column="28">!=<pos:position pos:line="5" pos:column="30"/></operator> <literal type="number" pos:line="5" pos:column="31">1<pos:position pos:line="5" pos:column="32"/></literal></expr>)<pos:position pos:line="5" pos:column="33"/></condition><then pos:line="5" pos:column="33">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><operator pos:line="6" pos:column="25">-<pos:position pos:line="6" pos:column="26"/></operator><literal type="number" pos:line="6" pos:column="26">1<pos:position pos:line="6" pos:column="27"/></literal><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator></expr>;<pos:position pos:line="6" pos:column="29"/></return></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">ci<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">values<pos:position pos:line="7" pos:column="23"/></name><index pos:line="7" pos:column="23">[<expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>]<pos:position pos:line="7" pos:column="26"/></index></name><operator pos:line="7" pos:column="26">.<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">type<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">!=<pos:position pos:line="7" pos:column="34"/></operator> <name pos:line="7" pos:column="35">OCONFIG_TYPE_STRING<pos:position pos:line="7" pos:column="54"/></name></expr>)<pos:position pos:line="7" pos:column="55"/></condition><then pos:line="7" pos:column="55">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><operator pos:line="8" pos:column="25">-<pos:position pos:line="8" pos:column="26"/></operator><literal type="number" pos:line="8" pos:column="26">1<pos:position pos:line="8" pos:column="27"/></literal><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator></expr>;<pos:position pos:line="8" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">plugin_set_dir<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><name><name pos:line="10" pos:column="25">ci<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">values<pos:position pos:line="10" pos:column="35"/></name><index pos:line="10" pos:column="35">[<expr><literal type="number" pos:line="10" pos:column="36">0<pos:position pos:line="10" pos:column="37"/></literal></expr>]<pos:position pos:line="10" pos:column="38"/></index></name><operator pos:line="10" pos:column="38">.<pos:position pos:line="10" pos:column="39"/></operator><name><name pos:line="10" pos:column="39">value<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">.<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">string<pos:position pos:line="10" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
	<return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal><operator pos:line="11" pos:column="18">)<pos:position pos:line="11" pos:column="19"/></operator></expr>;<pos:position pos:line="11" pos:column="20"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

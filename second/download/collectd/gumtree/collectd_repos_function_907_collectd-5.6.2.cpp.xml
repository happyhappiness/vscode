<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_907_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">turbostat_config<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">key<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">value<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list> <block pos:line="1" pos:column="65">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">long<pos:position pos:line="2" pos:column="7"/></name> <name pos:line="2" pos:column="8">unsigned<pos:position pos:line="2" pos:column="16"/></name> <name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">tmp_val<pos:position pos:line="2" pos:column="28"/></name></decl>;<pos:position pos:line="2" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">end<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">strcasecmp<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><literal type="string" pos:line="5" pos:column="18">"CoreCstates"<pos:position pos:line="5" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">key<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call> <operator pos:line="5" pos:column="38">==<pos:position pos:line="5" pos:column="40"/></operator> <literal type="number" pos:line="5" pos:column="41">0<pos:position pos:line="5" pos:column="42"/></literal></expr>)<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43"> <block pos:line="5" pos:column="44">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">tmp_val<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">strtoul<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">value<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="30">&amp;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="31">end<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="36">0<pos:position pos:line="6" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">end<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">!=<pos:position pos:line="7" pos:column="16"/></operator> <literal type="char" pos:line="7" pos:column="17">'\0'<pos:position pos:line="7" pos:column="21"/></literal> <operator pos:line="7" pos:column="22">||<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="25">tmp_val<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">&gt;<pos:position pos:line="7" pos:column="37"/></operator> <name pos:line="7" pos:column="35">UINT_MAX<pos:position pos:line="7" pos:column="43"/></name></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44"> <block pos:line="7" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">ERROR<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="string" pos:line="8" pos:column="13">"turbostat plugin: Invalid CoreCstates '%s'"<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="59">value<pos:position pos:line="8" pos:column="64"/></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="66"/></expr_stmt>
      <return pos:line="9" pos:column="7">return <expr><operator pos:line="9" pos:column="14">-<pos:position pos:line="9" pos:column="15"/></operator><literal type="number" pos:line="9" pos:column="15">1<pos:position pos:line="9" pos:column="16"/></literal></expr>;<pos:position pos:line="9" pos:column="17"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="11" pos:column="5">config_core_cstate<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <operator pos:line="11" pos:column="26">(<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">unsigned<pos:position pos:line="11" pos:column="35"/></name> <name pos:line="11" pos:column="36">int<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">)<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="40">tmp_val<pos:position pos:line="11" pos:column="47"/></name></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">apply_config_core_cstate<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">=<pos:position pos:line="12" pos:column="31"/></operator> <literal type="number" pos:line="12" pos:column="32">1<pos:position pos:line="12" pos:column="33"/></literal></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then> <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><call><name pos:line="13" pos:column="14">strcasecmp<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><literal type="string" pos:line="13" pos:column="25">"PackageCstates"<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="43">key<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call> <operator pos:line="13" pos:column="48">==<pos:position pos:line="13" pos:column="50"/></operator> <literal type="number" pos:line="13" pos:column="51">0<pos:position pos:line="13" pos:column="52"/></literal></expr>)<pos:position pos:line="13" pos:column="53"/></condition><then pos:line="13" pos:column="53"> <block pos:line="13" pos:column="54">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">tmp_val<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">strtoul<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">value<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="31">end<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="36">0<pos:position pos:line="14" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">end<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">!=<pos:position pos:line="15" pos:column="16"/></operator> <literal type="char" pos:line="15" pos:column="17">'\0'<pos:position pos:line="15" pos:column="21"/></literal> <operator pos:line="15" pos:column="22">||<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">tmp_val<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">&gt;<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="35">UINT_MAX<pos:position pos:line="15" pos:column="43"/></name></expr>)<pos:position pos:line="15" pos:column="44"/></condition><then pos:line="15" pos:column="44"> <block pos:line="15" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">ERROR<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><literal type="string" pos:line="16" pos:column="13">"turbostat plugin: Invalid PackageCstates '%s'"<pos:position pos:line="16" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="62">value<pos:position pos:line="16" pos:column="67"/></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt>
      <return pos:line="17" pos:column="7">return <expr><operator pos:line="17" pos:column="14">-<pos:position pos:line="17" pos:column="15"/></operator><literal type="number" pos:line="17" pos:column="15">1<pos:position pos:line="17" pos:column="16"/></literal></expr>;<pos:position pos:line="17" pos:column="17"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="19" pos:column="5">config_pkg_cstate<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <operator pos:line="19" pos:column="25">(<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">unsigned<pos:position pos:line="19" pos:column="34"/></name> <name pos:line="19" pos:column="35">int<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">)<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="39">tmp_val<pos:position pos:line="19" pos:column="46"/></name></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">apply_config_pkg_cstate<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <literal type="number" pos:line="20" pos:column="31">1<pos:position pos:line="20" pos:column="32"/></literal></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if></elseif> <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><call><name pos:line="21" pos:column="14">strcasecmp<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><literal type="string" pos:line="21" pos:column="25">"SystemManagementInterrupt"<pos:position pos:line="21" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="54">key<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call> <operator pos:line="21" pos:column="59">==<pos:position pos:line="21" pos:column="61"/></operator> <literal type="number" pos:line="21" pos:column="62">0<pos:position pos:line="21" pos:column="63"/></literal></expr>)<pos:position pos:line="21" pos:column="64"/></condition><then pos:line="21" pos:column="64"> <block pos:line="21" pos:column="65">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">config_smi<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">IS_TRUE<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">value<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">apply_config_smi<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <literal type="number" pos:line="23" pos:column="24">1<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if></elseif> <elseif pos:line="24" pos:column="5">else <if pos:line="24" pos:column="10">if <condition pos:line="24" pos:column="13">(<expr><call><name pos:line="24" pos:column="14">strcasecmp<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><literal type="string" pos:line="24" pos:column="25">"DigitalTemperatureSensor"<pos:position pos:line="24" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">key<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call> <operator pos:line="24" pos:column="58">==<pos:position pos:line="24" pos:column="60"/></operator> <literal type="number" pos:line="24" pos:column="61">0<pos:position pos:line="24" pos:column="62"/></literal></expr>)<pos:position pos:line="24" pos:column="63"/></condition><then pos:line="24" pos:column="63"> <block pos:line="24" pos:column="64">{
    <expr_stmt><expr><name pos:line="25" pos:column="5">config_dts<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">IS_TRUE<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">value<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">apply_config_dts<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <literal type="number" pos:line="26" pos:column="24">1<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if></elseif> <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><call><name pos:line="27" pos:column="14">strcasecmp<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><literal type="string" pos:line="27" pos:column="25">"PackageThermalManagement"<pos:position pos:line="27" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="53">key<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call> <operator pos:line="27" pos:column="58">==<pos:position pos:line="27" pos:column="60"/></operator> <literal type="number" pos:line="27" pos:column="61">0<pos:position pos:line="27" pos:column="62"/></literal></expr>)<pos:position pos:line="27" pos:column="63"/></condition><then pos:line="27" pos:column="63"> <block pos:line="27" pos:column="64">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">config_ptm<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">IS_TRUE<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">value<pos:position pos:line="28" pos:column="31"/></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">apply_config_ptm<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="24">1<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if></elseif> <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><call><name pos:line="30" pos:column="14">strcasecmp<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><literal type="string" pos:line="30" pos:column="25">"RunningAveragePowerLimit"<pos:position pos:line="30" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="53">key<pos:position pos:line="30" pos:column="56"/></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call> <operator pos:line="30" pos:column="58">==<pos:position pos:line="30" pos:column="60"/></operator> <literal type="number" pos:line="30" pos:column="61">0<pos:position pos:line="30" pos:column="62"/></literal></expr>)<pos:position pos:line="30" pos:column="63"/></condition><then pos:line="30" pos:column="63"> <block pos:line="30" pos:column="64">{
    <expr_stmt><expr><name pos:line="31" pos:column="5">tmp_val<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <call><name pos:line="31" pos:column="15">strtoul<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">value<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="30">&amp;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="31">end<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="36">0<pos:position pos:line="31" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">*<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">end<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">!=<pos:position pos:line="32" pos:column="16"/></operator> <literal type="char" pos:line="32" pos:column="17">'\0'<pos:position pos:line="32" pos:column="21"/></literal> <operator pos:line="32" pos:column="22">||<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">tmp_val<pos:position pos:line="32" pos:column="32"/></name> <operator pos:line="32" pos:column="33">&gt;<pos:position pos:line="32" pos:column="37"/></operator> <name pos:line="32" pos:column="35">UINT_MAX<pos:position pos:line="32" pos:column="43"/></name></expr>)<pos:position pos:line="32" pos:column="44"/></condition><then pos:line="32" pos:column="44"> <block pos:line="32" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">ERROR<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><literal type="string" pos:line="33" pos:column="13">"turbostat plugin: Invalid RunningAveragePowerLimit '%s'"<pos:position pos:line="33" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="72">value<pos:position pos:line="33" pos:column="77"/></name></expr></argument>)<pos:position pos:line="33" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="79"/></expr_stmt>
      <return pos:line="34" pos:column="7">return <expr><operator pos:line="34" pos:column="14">-<pos:position pos:line="34" pos:column="15"/></operator><literal type="number" pos:line="34" pos:column="15">1<pos:position pos:line="34" pos:column="16"/></literal></expr>;<pos:position pos:line="34" pos:column="17"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="36" pos:column="5">config_rapl<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <operator pos:line="36" pos:column="19">(<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">unsigned<pos:position pos:line="36" pos:column="28"/></name> <name pos:line="36" pos:column="29">int<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">)<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="33">tmp_val<pos:position pos:line="36" pos:column="40"/></name></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">apply_config_rapl<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">=<pos:position pos:line="37" pos:column="24"/></operator> <literal type="number" pos:line="37" pos:column="25">1<pos:position pos:line="37" pos:column="26"/></literal></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if></elseif> <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><call><name pos:line="38" pos:column="14">strcasecmp<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><literal type="string" pos:line="38" pos:column="25">"TCCActivationTemp"<pos:position pos:line="38" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">key<pos:position pos:line="38" pos:column="49"/></name></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call> <operator pos:line="38" pos:column="51">==<pos:position pos:line="38" pos:column="53"/></operator> <literal type="number" pos:line="38" pos:column="54">0<pos:position pos:line="38" pos:column="55"/></literal></expr>)<pos:position pos:line="38" pos:column="56"/></condition><then pos:line="38" pos:column="56"> <block pos:line="38" pos:column="57">{
    <expr_stmt><expr><name pos:line="39" pos:column="5">tmp_val<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <call><name pos:line="39" pos:column="15">strtoul<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><name pos:line="39" pos:column="23">value<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="30">&amp;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="31">end<pos:position pos:line="39" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="36">0<pos:position pos:line="39" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">*<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">end<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">!=<pos:position pos:line="40" pos:column="16"/></operator> <literal type="char" pos:line="40" pos:column="17">'\0'<pos:position pos:line="40" pos:column="21"/></literal> <operator pos:line="40" pos:column="22">||<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="25">tmp_val<pos:position pos:line="40" pos:column="32"/></name> <operator pos:line="40" pos:column="33">&gt;<pos:position pos:line="40" pos:column="37"/></operator> <name pos:line="40" pos:column="35">UINT_MAX<pos:position pos:line="40" pos:column="43"/></name></expr>)<pos:position pos:line="40" pos:column="44"/></condition><then pos:line="40" pos:column="44"> <block pos:line="40" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">ERROR<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><literal type="string" pos:line="41" pos:column="13">"turbostat plugin: Invalid TCCActivationTemp '%s'"<pos:position pos:line="41" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="65">value<pos:position pos:line="41" pos:column="70"/></name></expr></argument>)<pos:position pos:line="41" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="72"/></expr_stmt>
      <return pos:line="42" pos:column="7">return <expr><operator pos:line="42" pos:column="14">-<pos:position pos:line="42" pos:column="15"/></operator><literal type="number" pos:line="42" pos:column="15">1<pos:position pos:line="42" pos:column="16"/></literal></expr>;<pos:position pos:line="42" pos:column="17"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="44" pos:column="5">tcc_activation_temp<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <operator pos:line="44" pos:column="27">(<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">unsigned<pos:position pos:line="44" pos:column="36"/></name> <name pos:line="44" pos:column="37">int<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">)<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="41">tmp_val<pos:position pos:line="44" pos:column="48"/></name></expr>;<pos:position pos:line="44" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if></elseif> <else pos:line="45" pos:column="5">else <block pos:line="45" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">ERROR<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><literal type="string" pos:line="46" pos:column="11">"turbostat plugin: Invalid configuration option '%s'"<pos:position pos:line="46" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="66">key<pos:position pos:line="46" pos:column="69"/></name></expr></argument>)<pos:position pos:line="46" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="71"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><operator pos:line="47" pos:column="12">-<pos:position pos:line="47" pos:column="13"/></operator><literal type="number" pos:line="47" pos:column="13">1<pos:position pos:line="47" pos:column="14"/></literal></expr>;<pos:position pos:line="47" pos:column="15"/></return>
  }<pos:position pos:line="48" pos:column="4"/></block></else></if>
  <return pos:line="49" pos:column="3">return <expr><literal type="number" pos:line="49" pos:column="10">0<pos:position pos:line="49" pos:column="11"/></literal></expr>;<pos:position pos:line="49" pos:column="12"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

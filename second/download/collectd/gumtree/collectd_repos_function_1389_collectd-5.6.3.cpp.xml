<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1389_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dns_child_callback<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">rfc1035_header_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">dns<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list> <block pos:line="1" pos:column="61">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name><name pos:line="2" pos:column="7">dns<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">-&gt;<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="12">qr<pos:position pos:line="2" pos:column="14"/></name></name> <operator pos:line="2" pos:column="15">==<pos:position pos:line="2" pos:column="17"/></operator> <literal type="number" pos:line="2" pos:column="18">0<pos:position pos:line="2" pos:column="19"/></literal></expr>)<pos:position pos:line="2" pos:column="20"/></condition><then pos:line="2" pos:column="20"> <block pos:line="2" pos:column="21">{
    <comment type="block" pos:line="3" pos:column="5">/* This is a query */</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">skip<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">select_numeric_qtype<pos:position pos:line="5" pos:column="30"/></name></expr>)<pos:position pos:line="5" pos:column="31"/></condition><then pos:line="5" pos:column="31"> <block pos:line="5" pos:column="32">{
      <decl_stmt><decl><type><specifier pos:line="6" pos:column="7">const<pos:position pos:line="6" pos:column="12"/></specifier> <name pos:line="6" pos:column="13">char<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">str<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><call><name pos:line="6" pos:column="25">qtype_str<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name><name pos:line="6" pos:column="35">dns<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">-&gt;<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="40">qtype<pos:position pos:line="6" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>
      <if pos:line="7" pos:column="7">if <condition pos:line="7" pos:column="10">(<expr><operator pos:line="7" pos:column="11">(<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">str<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">==<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">NULL<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">)<pos:position pos:line="7" pos:column="24"/></operator> <operator pos:line="7" pos:column="25">||<pos:position pos:line="7" pos:column="27"/></operator> <operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><name><name pos:line="7" pos:column="29">str<pos:position pos:line="7" pos:column="32"/></name><index pos:line="7" pos:column="32">[<expr><literal type="number" pos:line="7" pos:column="33">0<pos:position pos:line="7" pos:column="34"/></literal></expr>]<pos:position pos:line="7" pos:column="35"/></index></name> <operator pos:line="7" pos:column="36">==<pos:position pos:line="7" pos:column="38"/></operator> <literal type="char" pos:line="7" pos:column="39">'#'<pos:position pos:line="7" pos:column="42"/></literal><operator pos:line="7" pos:column="42">)<pos:position pos:line="7" pos:column="43"/></operator></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">skip<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt></block></then></if>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">pthread_mutex_lock<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><operator pos:line="11" pos:column="24">&amp;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="25">traffic_mutex<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">tr_queries<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">+=<pos:position pos:line="12" pos:column="18"/></operator> <name><name pos:line="12" pos:column="19">dns<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">length<pos:position pos:line="12" pos:column="30"/></name></name></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">pthread_mutex_unlock<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><operator pos:line="13" pos:column="26">&amp;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="27">traffic_mutex<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">skip<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">==<pos:position pos:line="15" pos:column="16"/></operator> <literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19"> <block pos:line="15" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">pthread_mutex_lock<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="27">qtype_mutex<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">counter_list_add<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><operator pos:line="17" pos:column="24">&amp;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="25">qtype_list<pos:position pos:line="17" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="37">dns<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">-&gt;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="42">qtype<pos:position pos:line="17" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="49">1<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">pthread_mutex_unlock<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="29">qtype_mutex<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></then> <else pos:line="20" pos:column="5">else <block pos:line="20" pos:column="10">{
    <comment type="block" pos:line="21" pos:column="5">/* This is a reply */</comment>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">pthread_mutex_lock<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><operator pos:line="22" pos:column="24">&amp;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="25">traffic_mutex<pos:position pos:line="22" pos:column="38"/></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">tr_responses<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">+=<pos:position pos:line="23" pos:column="20"/></operator> <name><name pos:line="23" pos:column="21">dns<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">length<pos:position pos:line="23" pos:column="32"/></name></name></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">pthread_mutex_unlock<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><operator pos:line="24" pos:column="26">&amp;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="27">traffic_mutex<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">pthread_mutex_lock<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><operator pos:line="26" pos:column="24">&amp;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="25">rcode_mutex<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">counter_list_add<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><operator pos:line="27" pos:column="22">&amp;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="23">rcode_list<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="35">dns<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">rcode<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="47">1<pos:position pos:line="27" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">pthread_mutex_unlock<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><operator pos:line="28" pos:column="26">&amp;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="27">rcode_mutex<pos:position pos:line="28" pos:column="38"/></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="31" pos:column="3">/* FIXME: Are queries, replies or both interesting? */</comment>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">pthread_mutex_lock<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><operator pos:line="32" pos:column="22">&amp;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="23">opcode_mutex<pos:position pos:line="32" pos:column="35"/></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">counter_list_add<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><operator pos:line="33" pos:column="20">&amp;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="21">opcode_list<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="34">dns<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">-&gt;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="39">opcode<pos:position pos:line="33" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="47">1<pos:position pos:line="33" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">pthread_mutex_unlock<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><operator pos:line="34" pos:column="24">&amp;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="25">opcode_mutex<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_944_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_cpuacct_procs<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">dirname<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">cgroup_name<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">void<pos:position pos:line="2" pos:column="9"/></name> <modifier pos:line="2" pos:column="10">*<pos:position pos:line="2" pos:column="11"/></modifier></type><name pos:line="2" pos:column="11">user_data<pos:position pos:line="2" pos:column="20"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">abs_path<pos:position pos:line="4" pos:column="22"/></name><index pos:line="4" pos:column="22">[<expr><name pos:line="4" pos:column="23">PATH_MAX<pos:position pos:line="4" pos:column="31"/></name></expr>]<pos:position pos:line="4" pos:column="32"/></index></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">stat<pos:position pos:line="5" pos:column="20"/></name></name></type> <name pos:line="5" pos:column="21">statbuf<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">buf<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><literal type="number" pos:line="6" pos:column="18">1024<pos:position pos:line="6" pos:column="22"/></literal></expr>]<pos:position pos:line="6" pos:column="23"/></index></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">status<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">FILE<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">fh<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">ignorelist_match<pos:position pos:line="11" pos:column="29"/></name> <argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">il_cgroup<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">cgroup_name<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="55"/></condition><then pos:line="11" pos:column="55">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal><operator pos:line="12" pos:column="26">)<pos:position pos:line="12" pos:column="27"/></operator></expr>;<pos:position pos:line="12" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">ssnprintf<pos:position pos:line="14" pos:column="18"/></name> <argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">abs_path<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="30">sizeof <argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">abs_path<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="49">"%s/%s"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="58">dirname<pos:position pos:line="14" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="67">cgroup_name<pos:position pos:line="14" pos:column="78"/></name></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="80"/></expr_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">status<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">lstat<pos:position pos:line="16" pos:column="23"/></name> <argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">abs_path<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="35">&amp;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="36">statbuf<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">status<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">!=<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="23">0<pos:position pos:line="17" pos:column="24"/></literal></expr>)<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25">
	<block pos:line="18" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">ERROR<pos:position pos:line="19" pos:column="22"/></name> <argument_list pos:line="19" pos:column="23">(<argument><expr><literal type="string" pos:line="19" pos:column="24">"cgroups plugin: stat (\"%s\") failed."<pos:position pos:line="19" pos:column="63"/></literal></expr></argument>,
				<argument><expr><name pos:line="20" pos:column="33">abs_path<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><operator pos:line="21" pos:column="25">-<pos:position pos:line="21" pos:column="26"/></operator><literal type="number" pos:line="21" pos:column="26">1<pos:position pos:line="21" pos:column="27"/></literal><operator pos:line="21" pos:column="27">)<pos:position pos:line="21" pos:column="28"/></operator></expr>;<pos:position pos:line="21" pos:column="29"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="24" pos:column="9">/* We are only interested in directories, so skip everything else. */</comment>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><call><name pos:line="25" pos:column="14">S_ISDIR<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><name><name pos:line="25" pos:column="23">statbuf<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">.<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="31">st_mode<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40">
		<block type="pseudo"><return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><literal type="number" pos:line="26" pos:column="25">0<pos:position pos:line="26" pos:column="26"/></literal><operator pos:line="26" pos:column="26">)<pos:position pos:line="26" pos:column="27"/></operator></expr>;<pos:position pos:line="26" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">ssnprintf<pos:position pos:line="28" pos:column="18"/></name> <argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">abs_path<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="30">sizeof <argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">abs_path<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="49">"%s/%s/cpuacct.stat"<pos:position pos:line="28" pos:column="69"/></literal></expr></argument>,
			<argument><expr><name pos:line="29" pos:column="25">dirname<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">cgroup_name<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">fh<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <call><name pos:line="30" pos:column="14">fopen<pos:position pos:line="30" pos:column="19"/></name> <argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">abs_path<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="31">"r"<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">fh<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">==<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">NULL<pos:position pos:line="31" pos:column="23"/></name></expr>)<pos:position pos:line="31" pos:column="24"/></condition><then pos:line="31" pos:column="24">
	<block pos:line="32" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="33" pos:column="17">char<pos:position pos:line="33" pos:column="21"/></name></type> <name><name pos:line="33" pos:column="22">errbuf<pos:position pos:line="33" pos:column="28"/></name><index pos:line="33" pos:column="28">[<expr><literal type="number" pos:line="33" pos:column="29">1024<pos:position pos:line="33" pos:column="33"/></literal></expr>]<pos:position pos:line="33" pos:column="34"/></index></name></decl>;<pos:position pos:line="33" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">ERROR<pos:position pos:line="34" pos:column="22"/></name> <argument_list pos:line="34" pos:column="23">(<argument><expr><literal type="string" pos:line="34" pos:column="24">"cgroups plugin: fopen (\"%s\") failed: %s"<pos:position pos:line="34" pos:column="67"/></literal></expr></argument>,
				<argument><expr><name pos:line="35" pos:column="33">abs_path<pos:position pos:line="35" pos:column="41"/></name></expr></argument>,
				<argument><expr><call><name pos:line="36" pos:column="33">sstrerror<pos:position pos:line="36" pos:column="42"/></name> <argument_list pos:line="36" pos:column="43">(<argument><expr><name pos:line="36" pos:column="44">errno<pos:position pos:line="36" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">errbuf<pos:position pos:line="36" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="59">sizeof <argument_list pos:line="36" pos:column="66">(<argument><expr><name pos:line="36" pos:column="67">errbuf<pos:position pos:line="36" pos:column="73"/></name></expr></argument>)<pos:position pos:line="36" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="77"/></expr_stmt>
		<return pos:line="37" pos:column="17">return <expr><operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><operator pos:line="37" pos:column="25">-<pos:position pos:line="37" pos:column="26"/></operator><literal type="number" pos:line="37" pos:column="26">1<pos:position pos:line="37" pos:column="27"/></literal><operator pos:line="37" pos:column="27">)<pos:position pos:line="37" pos:column="28"/></operator></expr>;<pos:position pos:line="37" pos:column="29"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<while pos:line="40" pos:column="9">while <condition pos:line="40" pos:column="15">(<expr><call><name pos:line="40" pos:column="16">fgets<pos:position pos:line="40" pos:column="21"/></name> <argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">buf<pos:position pos:line="40" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="28">sizeof <argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">buf<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="40" pos:column="42">fh<pos:position pos:line="40" pos:column="44"/></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call> <operator pos:line="40" pos:column="46">!=<pos:position pos:line="40" pos:column="48"/></operator> <name pos:line="40" pos:column="49">NULL<pos:position pos:line="40" pos:column="53"/></name></expr>)<pos:position pos:line="40" pos:column="54"/></condition>
	<block pos:line="41" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="42" pos:column="17">char<pos:position pos:line="42" pos:column="21"/></name> <modifier pos:line="42" pos:column="22">*<pos:position pos:line="42" pos:column="23"/></modifier></type><name><name pos:line="42" pos:column="23">fields<pos:position pos:line="42" pos:column="29"/></name><index pos:line="42" pos:column="29">[<expr><literal type="number" pos:line="42" pos:column="30">8<pos:position pos:line="42" pos:column="31"/></literal></expr>]<pos:position pos:line="42" pos:column="32"/></index></name></decl>;<pos:position pos:line="42" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="43" pos:column="17">int<pos:position pos:line="43" pos:column="20"/></name></type> <name pos:line="43" pos:column="21">numfields<pos:position pos:line="43" pos:column="30"/></name> <init pos:line="43" pos:column="31">= <expr><literal type="number" pos:line="43" pos:column="33">0<pos:position pos:line="43" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="43" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="44" pos:column="17">char<pos:position pos:line="44" pos:column="21"/></name> <modifier pos:line="44" pos:column="22">*<pos:position pos:line="44" pos:column="23"/></modifier></type><name pos:line="44" pos:column="23">key<pos:position pos:line="44" pos:column="26"/></name></decl>;<pos:position pos:line="44" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="45" pos:column="17">size_t<pos:position pos:line="45" pos:column="23"/></name></type> <name pos:line="45" pos:column="24">key_len<pos:position pos:line="45" pos:column="31"/></name></decl>;<pos:position pos:line="45" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">value_t<pos:position pos:line="46" pos:column="24"/></name></type> <name pos:line="46" pos:column="25">value<pos:position pos:line="46" pos:column="30"/></name></decl>;<pos:position pos:line="46" pos:column="31"/></decl_stmt>

		<comment type="block" pos:line="48" pos:column="17">/* Expected format:
		 *
		 *   user: 12345
		 *   system: 23456
		 *
		 * Or:
		 *
		 *   user 12345
		 *   system 23456
		 */</comment>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">strstripnewline<pos:position pos:line="58" pos:column="32"/></name> <argument_list pos:line="58" pos:column="33">(<argument><expr><name pos:line="58" pos:column="34">buf<pos:position pos:line="58" pos:column="37"/></name></expr></argument>)<pos:position pos:line="58" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="59" pos:column="17">numfields<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <call><name pos:line="59" pos:column="29">strsplit<pos:position pos:line="59" pos:column="37"/></name> <argument_list pos:line="59" pos:column="38">(<argument><expr><name pos:line="59" pos:column="39">buf<pos:position pos:line="59" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">fields<pos:position pos:line="59" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="52">STATIC_ARRAY_SIZE<pos:position pos:line="59" pos:column="69"/></name> <argument_list pos:line="59" pos:column="70">(<argument><expr><name pos:line="59" pos:column="71">fields<pos:position pos:line="59" pos:column="77"/></name></expr></argument>)<pos:position pos:line="59" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="80"/></expr_stmt>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">numfields<pos:position pos:line="60" pos:column="30"/></name> <operator pos:line="60" pos:column="31">!=<pos:position pos:line="60" pos:column="33"/></operator> <literal type="number" pos:line="60" pos:column="34">2<pos:position pos:line="60" pos:column="35"/></literal></expr>)<pos:position pos:line="60" pos:column="36"/></condition><then pos:line="60" pos:column="36">
			<block type="pseudo"><continue pos:line="61" pos:column="25">continue;<pos:position pos:line="61" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="63" pos:column="17">key<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">=<pos:position pos:line="63" pos:column="22"/></operator> <name><name pos:line="63" pos:column="23">fields<pos:position pos:line="63" pos:column="29"/></name><index pos:line="63" pos:column="29">[<expr><literal type="number" pos:line="63" pos:column="30">0<pos:position pos:line="63" pos:column="31"/></literal></expr>]<pos:position pos:line="63" pos:column="32"/></index></name></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="64" pos:column="17">key_len<pos:position pos:line="64" pos:column="24"/></name> <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <call><name pos:line="64" pos:column="27">strlen<pos:position pos:line="64" pos:column="33"/></name> <argument_list pos:line="64" pos:column="34">(<argument><expr><name pos:line="64" pos:column="35">key<pos:position pos:line="64" pos:column="38"/></name></expr></argument>)<pos:position pos:line="64" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="40"/></expr_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">key_len<pos:position pos:line="65" pos:column="28"/></name> <operator pos:line="65" pos:column="29">&lt;<pos:position pos:line="65" pos:column="33"/></operator> <literal type="number" pos:line="65" pos:column="31">2<pos:position pos:line="65" pos:column="32"/></literal></expr>)<pos:position pos:line="65" pos:column="33"/></condition><then pos:line="65" pos:column="33">
			<block type="pseudo"><continue pos:line="66" pos:column="25">continue;<pos:position pos:line="66" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="68" pos:column="17">/* Strip colon off the first column, if found */</comment>
		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><name><name pos:line="69" pos:column="21">key<pos:position pos:line="69" pos:column="24"/></name><index pos:line="69" pos:column="24">[<expr><name pos:line="69" pos:column="25">key_len<pos:position pos:line="69" pos:column="32"/></name> <operator pos:line="69" pos:column="33">-<pos:position pos:line="69" pos:column="34"/></operator> <literal type="number" pos:line="69" pos:column="35">1<pos:position pos:line="69" pos:column="36"/></literal></expr>]<pos:position pos:line="69" pos:column="37"/></index></name> <operator pos:line="69" pos:column="38">==<pos:position pos:line="69" pos:column="40"/></operator> <literal type="char" pos:line="69" pos:column="41">':'<pos:position pos:line="69" pos:column="44"/></literal></expr>)<pos:position pos:line="69" pos:column="45"/></condition><then pos:line="69" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="70" pos:column="25">key<pos:position pos:line="70" pos:column="28"/></name><index pos:line="70" pos:column="28">[<expr><name pos:line="70" pos:column="29">key_len<pos:position pos:line="70" pos:column="36"/></name> <operator pos:line="70" pos:column="37">-<pos:position pos:line="70" pos:column="38"/></operator> <literal type="number" pos:line="70" pos:column="39">1<pos:position pos:line="70" pos:column="40"/></literal></expr>]<pos:position pos:line="70" pos:column="41"/></index></name> <operator pos:line="70" pos:column="42">=<pos:position pos:line="70" pos:column="43"/></operator> <literal type="number" pos:line="70" pos:column="44">0<pos:position pos:line="70" pos:column="45"/></literal></expr>;<pos:position pos:line="70" pos:column="46"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="72" pos:column="17">status<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">=<pos:position pos:line="72" pos:column="25"/></operator> <call><name pos:line="72" pos:column="26">parse_value<pos:position pos:line="72" pos:column="37"/></name> <argument_list pos:line="72" pos:column="38">(<argument><expr><name><name pos:line="72" pos:column="39">fields<pos:position pos:line="72" pos:column="45"/></name><index pos:line="72" pos:column="45">[<expr><literal type="number" pos:line="72" pos:column="46">1<pos:position pos:line="72" pos:column="47"/></literal></expr>]<pos:position pos:line="72" pos:column="48"/></index></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="50">&amp;<pos:position pos:line="72" pos:column="55"/></operator><name pos:line="72" pos:column="51">value<pos:position pos:line="72" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="58">DS_TYPE_DERIVE<pos:position pos:line="72" pos:column="72"/></name></expr></argument>)<pos:position pos:line="72" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="74"/></expr_stmt>
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">status<pos:position pos:line="73" pos:column="27"/></name> <operator pos:line="73" pos:column="28">!=<pos:position pos:line="73" pos:column="30"/></operator> <literal type="number" pos:line="73" pos:column="31">0<pos:position pos:line="73" pos:column="32"/></literal></expr>)<pos:position pos:line="73" pos:column="33"/></condition><then pos:line="73" pos:column="33">
			<block type="pseudo"><continue pos:line="74" pos:column="25">continue;<pos:position pos:line="74" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="76" pos:column="17">cgroups_submit_one<pos:position pos:line="76" pos:column="35"/></name> <argument_list pos:line="76" pos:column="36">(<argument><expr><name pos:line="76" pos:column="37">cgroup_name<pos:position pos:line="76" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="50">key<pos:position pos:line="76" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="55">value<pos:position pos:line="76" pos:column="60"/></name></expr></argument>)<pos:position pos:line="76" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="77" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="79" pos:column="9">fclose<pos:position pos:line="79" pos:column="15"/></name> <argument_list pos:line="79" pos:column="16">(<argument><expr><name pos:line="79" pos:column="17">fh<pos:position pos:line="79" pos:column="19"/></name></expr></argument>)<pos:position pos:line="79" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="21"/></expr_stmt>
	<return pos:line="80" pos:column="9">return <expr><operator pos:line="80" pos:column="16">(<pos:position pos:line="80" pos:column="17"/></operator><literal type="number" pos:line="80" pos:column="17">0<pos:position pos:line="80" pos:column="18"/></literal><operator pos:line="80" pos:column="18">)<pos:position pos:line="80" pos:column="19"/></operator></expr>;<pos:position pos:line="80" pos:column="20"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

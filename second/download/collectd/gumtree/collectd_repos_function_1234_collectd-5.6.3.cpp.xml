<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1234_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">chrony_init_seq<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> <block pos:line="1" pos:column="34">{
  <comment type="block" pos:line="2" pos:column="3">/* Initialize the sequence number generator from /dev/urandom */</comment>
  <comment type="block" pos:line="3" pos:column="3">/* Fallbacks: /dev/random and time(NULL) */</comment>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">fh<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Try urandom */</comment>
  <expr_stmt><expr><name pos:line="8" pos:column="3">fh<pos:position pos:line="8" pos:column="5"/></name> <operator pos:line="8" pos:column="6">=<pos:position pos:line="8" pos:column="7"/></operator> <call><name pos:line="8" pos:column="8">open<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">URAND_DEVICE_PATH<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="32">O_RDONLY<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">fh<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">&gt;=<pos:position pos:line="9" pos:column="15"/></operator> <literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal></expr>)<pos:position pos:line="9" pos:column="15"/></condition><then pos:line="9" pos:column="15"> <block pos:line="9" pos:column="16">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ssize_t<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">rc<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><call><name pos:line="10" pos:column="18">read<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">fh<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="27">&amp;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="28">g_chrony_rand<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="43">sizeof<argument_list pos:line="10" pos:column="49">(<argument><expr><name pos:line="10" pos:column="50">g_chrony_rand<pos:position pos:line="10" pos:column="63"/></name></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="66"/></decl_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">rc<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">!=<pos:position pos:line="11" pos:column="14"/></operator> <sizeof pos:line="11" pos:column="15">sizeof<argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">g_chrony_rand<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></sizeof></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37"> <block pos:line="11" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">ERROR<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">PLUGIN_NAME<pos:position pos:line="12" pos:column="24"/></name> <literal type="string" pos:line="12" pos:column="25">": Reading from random source \'%s\'failed: %s (%d)"<pos:position pos:line="12" pos:column="77"/></literal></expr></argument>,
            <argument><expr><name pos:line="13" pos:column="13">URAND_DEVICE_PATH<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="32">strerror<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">errno<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">errno<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">close<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">fh<pos:position pos:line="14" pos:column="15"/></name></expr></argument>)<pos:position pos:line="14" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
      <return pos:line="15" pos:column="7">return <expr><name pos:line="15" pos:column="14">CHRONY_RC_FAIL<pos:position pos:line="15" pos:column="28"/></name></expr>;<pos:position pos:line="15" pos:column="29"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">close<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">fh<pos:position pos:line="17" pos:column="13"/></name></expr></argument>)<pos:position pos:line="17" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">DEBUG<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">PLUGIN_NAME<pos:position pos:line="18" pos:column="22"/></name> <literal type="string" pos:line="18" pos:column="23">": Seeding RNG from "<pos:position pos:line="18" pos:column="44"/></literal> <name pos:line="18" pos:column="45">URAND_DEVICE_PATH<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then> <else pos:line="19" pos:column="5">else <block pos:line="19" pos:column="10">{
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">errno<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">==<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">ENOENT<pos:position pos:line="20" pos:column="24"/></name></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25"> <block pos:line="20" pos:column="26">{
      <comment type="block" pos:line="21" pos:column="7">/* URAND_DEVICE_PATH device not found. Try RAND_DEVICE_PATH as fall-back
       */</comment>
      <expr_stmt><expr><name pos:line="23" pos:column="7">fh<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">open<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">RAND_DEVICE_PATH<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">O_RDONLY<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><name pos:line="24" pos:column="11">fh<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">&gt;=<pos:position pos:line="24" pos:column="19"/></operator> <literal type="number" pos:line="24" pos:column="17">0<pos:position pos:line="24" pos:column="18"/></literal></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19"> <block pos:line="24" pos:column="20">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">ssize_t<pos:position pos:line="25" pos:column="16"/></name></type> <name pos:line="25" pos:column="17">rc<pos:position pos:line="25" pos:column="19"/></name> <init pos:line="25" pos:column="20">= <expr><call><name pos:line="25" pos:column="22">read<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">fh<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="31">&amp;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="32">g_chrony_rand<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="47">sizeof<argument_list pos:line="25" pos:column="53">(<argument><expr><name pos:line="25" pos:column="54">g_chrony_rand<pos:position pos:line="25" pos:column="67"/></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="70"/></decl_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">rc<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">!=<pos:position pos:line="26" pos:column="18"/></operator> <sizeof pos:line="26" pos:column="19">sizeof<argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">g_chrony_rand<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></sizeof></expr>)<pos:position pos:line="26" pos:column="41"/></condition><then pos:line="26" pos:column="41"> <block pos:line="26" pos:column="42">{
          <expr_stmt><expr><call><name pos:line="27" pos:column="11">ERROR<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">PLUGIN_NAME<pos:position pos:line="27" pos:column="28"/></name>
                <literal type="string" pos:line="28" pos:column="17">": Reading from random source \'%s\'failed: %s (%d)"<pos:position pos:line="28" pos:column="69"/></literal></expr></argument>,
                <argument><expr><name pos:line="29" pos:column="17">RAND_DEVICE_PATH<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="35">strerror<pos:position pos:line="29" pos:column="43"/></name><argument_list pos:line="29" pos:column="43">(<argument><expr><name pos:line="29" pos:column="44">errno<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="52">errno<pos:position pos:line="29" pos:column="57"/></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="30" pos:column="11">close<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">(<argument><expr><name pos:line="30" pos:column="17">fh<pos:position pos:line="30" pos:column="19"/></name></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
          <return pos:line="31" pos:column="11">return <expr><name pos:line="31" pos:column="18">CHRONY_RC_FAIL<pos:position pos:line="31" pos:column="32"/></name></expr>;<pos:position pos:line="31" pos:column="33"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">close<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">fh<pos:position pos:line="33" pos:column="17"/></name></expr></argument>)<pos:position pos:line="33" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">DEBUG<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">PLUGIN_NAME<pos:position pos:line="34" pos:column="26"/></name> <literal type="string" pos:line="34" pos:column="27">": Seeding RNG from "<pos:position pos:line="34" pos:column="48"/></literal> <name pos:line="34" pos:column="49">RAND_DEVICE_PATH<pos:position pos:line="34" pos:column="65"/></name></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt>
      }<pos:position pos:line="35" pos:column="8"/></block></then> <else pos:line="35" pos:column="9">else <block pos:line="35" pos:column="14">{
        <comment type="block" pos:line="36" pos:column="9">/* Error opening RAND_DEVICE_PATH. Try time(NULL) as fall-back */</comment>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">DEBUG<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">PLUGIN_NAME<pos:position pos:line="37" pos:column="26"/></name> <literal type="string" pos:line="37" pos:column="27">": Seeding RNG from time(NULL)"<pos:position pos:line="37" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="38" pos:column="9">g_chrony_rand<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <call><name pos:line="38" pos:column="25">time<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">NULL<pos:position pos:line="38" pos:column="34"/></name></expr></argument>)<pos:position pos:line="38" pos:column="35"/></argument_list></call> <operator pos:line="38" pos:column="36">^<pos:position pos:line="38" pos:column="37"/></operator> <call><name pos:line="38" pos:column="38">getpid<pos:position pos:line="38" pos:column="44"/></name><argument_list pos:line="38" pos:column="44">()<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
      }<pos:position pos:line="39" pos:column="8"/></block></else></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then> <else pos:line="40" pos:column="7">else <block pos:line="40" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">ERROR<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">PLUGIN_NAME<pos:position pos:line="41" pos:column="24"/></name> <literal type="string" pos:line="41" pos:column="25">": Opening random source \'%s\' failed: %s (%d)"<pos:position pos:line="41" pos:column="73"/></literal></expr></argument>,
            <argument><expr><name pos:line="42" pos:column="13">URAND_DEVICE_PATH<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="32">strerror<pos:position pos:line="42" pos:column="40"/></name><argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">errno<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="42" pos:column="49">errno<pos:position pos:line="42" pos:column="54"/></name></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="56"/></expr_stmt>
      <return pos:line="43" pos:column="7">return <expr><name pos:line="43" pos:column="14">CHRONY_RC_FAIL<pos:position pos:line="43" pos:column="28"/></name></expr>;<pos:position pos:line="43" pos:column="29"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></else></if>
  }<pos:position pos:line="45" pos:column="4"/></block></else></if>

  <return pos:line="47" pos:column="3">return <expr><name pos:line="47" pos:column="10">CHRONY_RC_OK<pos:position pos:line="47" pos:column="22"/></name></expr>;<pos:position pos:line="47" pos:column="23"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

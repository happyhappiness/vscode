<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_86_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_perf_events<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">virDomainPtr<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">domain<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">virDomainStatsRecordPtr<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">stats<pos:position pos:line="2" pos:column="33"/></name> <init pos:line="2" pos:column="34">= <expr><name pos:line="2" pos:column="36">NULL<pos:position pos:line="2" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="41"/></decl_stmt>
  <comment type="block" pos:line="3" pos:column="3">/* virDomainListGetStats requires a NULL terminated list of domains */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">virDomainPtr<pos:position pos:line="4" pos:column="15"/></name></type> <name><name pos:line="4" pos:column="16">domain_array<pos:position pos:line="4" pos:column="28"/></name><index pos:line="4" pos:column="28">[]<pos:position pos:line="4" pos:column="30"/></index></name> <init pos:line="4" pos:column="31">= <expr><block pos:line="4" pos:column="33">{<expr><name pos:line="4" pos:column="34">domain<pos:position pos:line="4" pos:column="40"/></name></expr>, <expr><name pos:line="4" pos:column="42">NULL<pos:position pos:line="4" pos:column="46"/></name></expr>}<pos:position pos:line="4" pos:column="47"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">=
      <expr><call><name pos:line="7" pos:column="7">virDomainListGetStats<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">domain_array<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="43">VIR_DOMAIN_STATS_PERF<pos:position pos:line="7" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="66">&amp;<pos:position pos:line="7" pos:column="71"/></operator><name pos:line="7" pos:column="67">stats<pos:position pos:line="7" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="74">0<pos:position pos:line="7" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="77"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">==<pos:position pos:line="8" pos:column="16"/></operator> <operator pos:line="8" pos:column="17">-<pos:position pos:line="8" pos:column="18"/></operator><literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20"> <block pos:line="8" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ERROR<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="string" pos:line="9" pos:column="11">"virt plugin: virDomainListGetStats failed with status %i."<pos:position pos:line="9" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="72">status<pos:position pos:line="9" pos:column="78"/></name></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="80"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">status<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <for pos:line="13" pos:column="3">for <control pos:line="13" pos:column="7">(<init><decl><type><name pos:line="13" pos:column="8">int<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">i<pos:position pos:line="13" pos:column="13"/></name> <init pos:line="13" pos:column="14">= <expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="18"/></init> <condition><expr><name pos:line="13" pos:column="19">i<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">&lt;<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="23">status<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></condition> <incr><expr><operator pos:line="13" pos:column="31">++<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">i<pos:position pos:line="13" pos:column="34"/></name></expr></incr>)<pos:position pos:line="13" pos:column="35"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="5">perf_submit<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name><name pos:line="14" pos:column="17">stats<pos:position pos:line="14" pos:column="22"/></name><index pos:line="14" pos:column="22">[<expr><name pos:line="14" pos:column="23">i<pos:position pos:line="14" pos:column="24"/></name></expr>]<pos:position pos:line="14" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt></block></for>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">virDomainStatsRecordListFree<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">stats<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
  <return pos:line="17" pos:column="3">return <expr><literal type="number" pos:line="17" pos:column="10">0<pos:position pos:line="17" pos:column="11"/></literal></expr>;<pos:position pos:line="17" pos:column="12"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

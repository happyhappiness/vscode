<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_427_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">battery_read<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <comment type="block" pos:line="1" pos:column="31">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">gauge_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">current<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">NAN<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt> <comment type="block" pos:line="3" pos:column="26">/* Current in A */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">gauge_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">voltage<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NAN<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt> <comment type="block" pos:line="4" pos:column="26">/* Voltage in V */</comment>

  <comment type="block" pos:line="6" pos:column="3">/* We only get the charged capacity as a percentage from
   * IOPowerSources. IOKit, on the other hand, only reports the full
   * capacity. We use the two to calculate the current charged capacity. */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">gauge_t<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">charge_rel<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><name pos:line="9" pos:column="24">NAN<pos:position pos:line="9" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>      <comment type="block" pos:line="9" pos:column="34">/* Current charge in percent */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">gauge_t<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">capacity_charged<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>      <comment type="block" pos:line="10" pos:column="34">/* Charged capacity */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">gauge_t<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">capacity_full<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><name pos:line="11" pos:column="27">NAN<pos:position pos:line="11" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>   <comment type="block" pos:line="11" pos:column="34">/* Total capacity */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">gauge_t<pos:position pos:line="12" pos:column="10"/></name></type> <name pos:line="12" pos:column="11">capacity_design<pos:position pos:line="12" pos:column="26"/></name> <init pos:line="12" pos:column="27">= <expr><name pos:line="12" pos:column="29">NAN<pos:position pos:line="12" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt> <comment type="block" pos:line="12" pos:column="34">/* Full design capacity */</comment>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">query_statefs<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><call><name pos:line="15" pos:column="12">battery_read_statefs<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">()<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></return></block></then></if>

<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><name pos:line="17" pos:column="5">HAVE_IOKIT_PS_IOPOWERSOURCES_H<pos:position pos:line="17" pos:column="35"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">get_via_io_power_sources<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="29">charge_rel<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="41">&amp;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="42">current<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="51">&amp;<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="52">voltage<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">if<pos:position pos:line="20" pos:column="4"/></cpp:directive> <expr><name pos:line="20" pos:column="5">HAVE_IOKIT_IOKITLIB_H<pos:position pos:line="20" pos:column="26"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">get_via_generic_iokit<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><operator pos:line="21" pos:column="25">&amp;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="26">capacity_full<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="41">&amp;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="42">capacity_design<pos:position pos:line="21" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="59">&amp;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="60">current<pos:position pos:line="21" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="69">&amp;<pos:position pos:line="21" pos:column="74"/></operator><name pos:line="21" pos:column="70">voltage<pos:position pos:line="21" pos:column="77"/></name></expr></argument>)<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="79"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="24" pos:column="3">capacity_charged<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">charge_rel<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">*<pos:position pos:line="24" pos:column="34"/></operator> <name pos:line="24" pos:column="35">capacity_full<pos:position pos:line="24" pos:column="48"/></name> <operator pos:line="24" pos:column="49">/<pos:position pos:line="24" pos:column="50"/></operator> <literal type="number" pos:line="24" pos:column="51">100.0<pos:position pos:line="24" pos:column="56"/></literal></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">submit_capacity<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><literal type="string" pos:line="25" pos:column="19">"0"<pos:position pos:line="25" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="24">capacity_charged<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="42">capacity_full<pos:position pos:line="25" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="57">capacity_design<pos:position pos:line="25" pos:column="72"/></name></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="74"/></expr_stmt>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><operator pos:line="27" pos:column="7">!<pos:position pos:line="27" pos:column="8"/></operator><call><name pos:line="27" pos:column="8">isnan<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><name pos:line="27" pos:column="14">current<pos:position pos:line="27" pos:column="21"/></name></expr></argument>)<pos:position pos:line="27" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="23"/></condition><then pos:line="27" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="5">battery_submit<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><literal type="string" pos:line="28" pos:column="20">"0"<pos:position pos:line="28" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="25">"current"<pos:position pos:line="28" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">current<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt></block></then></if>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><operator pos:line="29" pos:column="7">!<pos:position pos:line="29" pos:column="8"/></operator><call><name pos:line="29" pos:column="8">isnan<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">voltage<pos:position pos:line="29" pos:column="21"/></name></expr></argument>)<pos:position pos:line="29" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="5">battery_submit<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><literal type="string" pos:line="30" pos:column="20">"0"<pos:position pos:line="30" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="25">"voltage"<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="36">voltage<pos:position pos:line="30" pos:column="43"/></name></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt></block></then></if>

  <return pos:line="32" pos:column="3">return <expr><operator pos:line="32" pos:column="10">(<pos:position pos:line="32" pos:column="11"/></operator><literal type="number" pos:line="32" pos:column="11">0<pos:position pos:line="32" pos:column="12"/></literal><operator pos:line="32" pos:column="12">)<pos:position pos:line="32" pos:column="13"/></operator></expr>;<pos:position pos:line="32" pos:column="14"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_981_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">notification2hv<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">pTHX_<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">notification_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">n<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">HV<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">hash<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <block pos:line="1" pos:column="63">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">NULL<pos:position pos:line="2" pos:column="11"/></name> <operator pos:line="2" pos:column="12">==<pos:position pos:line="2" pos:column="14"/></operator> <call><name pos:line="2" pos:column="15">hv_store<pos:position pos:line="2" pos:column="23"/></name><argument_list pos:line="2" pos:column="23">(<argument><expr><name pos:line="2" pos:column="24">hash<pos:position pos:line="2" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2" pos:column="30">"severity"<pos:position pos:line="2" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="2" pos:column="42">8<pos:position pos:line="2" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="2" pos:column="45">newSViv<pos:position pos:line="2" pos:column="52"/></name><argument_list pos:line="2" pos:column="52">(<argument><expr><name><name pos:line="2" pos:column="53">n<pos:position pos:line="2" pos:column="54"/></name><operator pos:line="2" pos:column="54">-&gt;<pos:position pos:line="2" pos:column="59"/></operator><name pos:line="2" pos:column="56">severity<pos:position pos:line="2" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="2" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="2" pos:column="67">0<pos:position pos:line="2" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="2" pos:column="70"/></condition><then pos:line="2" pos:column="70">
    <block type="pseudo"><return pos:line="3" pos:column="5">return <expr><operator pos:line="3" pos:column="12">-<pos:position pos:line="3" pos:column="13"/></operator><literal type="number" pos:line="3" pos:column="13">1<pos:position pos:line="3" pos:column="14"/></literal></expr>;<pos:position pos:line="3" pos:column="15"/></return></block></then></if>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><literal type="number" pos:line="5" pos:column="7">0<pos:position pos:line="5" pos:column="8"/></literal> <operator pos:line="5" pos:column="9">!=<pos:position pos:line="5" pos:column="11"/></operator> <name><name pos:line="5" pos:column="12">n<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">time<pos:position pos:line="5" pos:column="19"/></name></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20"> <block pos:line="5" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">double<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">t<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><call><name pos:line="6" pos:column="16">CDTIME_T_TO_DOUBLE<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name><name pos:line="6" pos:column="35">n<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">time<pos:position pos:line="6" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">NULL<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <call><name pos:line="7" pos:column="17">hv_store<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">hash<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="32">"time"<pos:position pos:line="7" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="40">4<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="43">newSVnv<pos:position pos:line="7" pos:column="50"/></name><argument_list pos:line="7" pos:column="50">(<argument><expr><name pos:line="7" pos:column="51">t<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="55">0<pos:position pos:line="7" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="58"/></condition><then pos:line="7" pos:column="58">
      <block type="pseudo"><return pos:line="8" pos:column="7">return <expr><operator pos:line="8" pos:column="14">-<pos:position pos:line="8" pos:column="15"/></operator><literal type="number" pos:line="8" pos:column="15">1<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></return></block></then></if>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><literal type="char" pos:line="11" pos:column="7">'\0'<pos:position pos:line="11" pos:column="11"/></literal> <operator pos:line="11" pos:column="12">!=<pos:position pos:line="11" pos:column="14"/></operator> <operator pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></operator><name><name pos:line="11" pos:column="16">n<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">message<pos:position pos:line="11" pos:column="26"/></name></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27">
    <block type="pseudo"><if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">NULL<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">==<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">hv_store<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">hash<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"message"<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="43">7<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="46">newSVpv<pos:position pos:line="12" pos:column="53"/></name><argument_list pos:line="12" pos:column="53">(<argument><expr><name><name pos:line="12" pos:column="54">n<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">-&gt;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="57">message<pos:position pos:line="12" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="66">0<pos:position pos:line="12" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="70">0<pos:position pos:line="12" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="73"/></condition><then pos:line="12" pos:column="73">
      <block type="pseudo"><return pos:line="13" pos:column="7">return <expr><operator pos:line="13" pos:column="14">-<pos:position pos:line="13" pos:column="15"/></operator><literal type="number" pos:line="13" pos:column="15">1<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></return></block></then></if></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><literal type="char" pos:line="15" pos:column="7">'\0'<pos:position pos:line="15" pos:column="11"/></literal> <operator pos:line="15" pos:column="12">!=<pos:position pos:line="15" pos:column="14"/></operator> <operator pos:line="15" pos:column="15">*<pos:position pos:line="15" pos:column="16"/></operator><name><name pos:line="15" pos:column="16">n<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">host<pos:position pos:line="15" pos:column="23"/></name></name></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24">
    <block type="pseudo"><if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">NULL<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">==<pos:position pos:line="16" pos:column="16"/></operator> <call><name pos:line="16" pos:column="17">hv_store<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">hash<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="32">"host"<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="40">4<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="43">newSVpv<pos:position pos:line="16" pos:column="50"/></name><argument_list pos:line="16" pos:column="50">(<argument><expr><name><name pos:line="16" pos:column="51">n<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">-&gt;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="54">host<pos:position pos:line="16" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="60">0<pos:position pos:line="16" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="64">0<pos:position pos:line="16" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="67"/></condition><then pos:line="16" pos:column="67">
      <block type="pseudo"><return pos:line="17" pos:column="7">return <expr><operator pos:line="17" pos:column="14">-<pos:position pos:line="17" pos:column="15"/></operator><literal type="number" pos:line="17" pos:column="15">1<pos:position pos:line="17" pos:column="16"/></literal></expr>;<pos:position pos:line="17" pos:column="17"/></return></block></then></if></block></then></if>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><literal type="char" pos:line="19" pos:column="7">'\0'<pos:position pos:line="19" pos:column="11"/></literal> <operator pos:line="19" pos:column="12">!=<pos:position pos:line="19" pos:column="14"/></operator> <operator pos:line="19" pos:column="15">*<pos:position pos:line="19" pos:column="16"/></operator><name><name pos:line="19" pos:column="16">n<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">plugin<pos:position pos:line="19" pos:column="25"/></name></name></expr>)<pos:position pos:line="19" pos:column="26"/></condition><then pos:line="19" pos:column="26">
    <block type="pseudo"><if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">NULL<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">==<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">hv_store<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">hash<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="32">"plugin"<pos:position pos:line="20" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="42">6<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="45">newSVpv<pos:position pos:line="20" pos:column="52"/></name><argument_list pos:line="20" pos:column="52">(<argument><expr><name><name pos:line="20" pos:column="53">n<pos:position pos:line="20" pos:column="54"/></name><operator pos:line="20" pos:column="54">-&gt;<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="56">plugin<pos:position pos:line="20" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="64">0<pos:position pos:line="20" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="68">0<pos:position pos:line="20" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="71"/></condition><then pos:line="20" pos:column="71">
      <block type="pseudo"><return pos:line="21" pos:column="7">return <expr><operator pos:line="21" pos:column="14">-<pos:position pos:line="21" pos:column="15"/></operator><literal type="number" pos:line="21" pos:column="15">1<pos:position pos:line="21" pos:column="16"/></literal></expr>;<pos:position pos:line="21" pos:column="17"/></return></block></then></if></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><literal type="char" pos:line="23" pos:column="7">'\0'<pos:position pos:line="23" pos:column="11"/></literal> <operator pos:line="23" pos:column="12">!=<pos:position pos:line="23" pos:column="14"/></operator> <operator pos:line="23" pos:column="15">*<pos:position pos:line="23" pos:column="16"/></operator><name><name pos:line="23" pos:column="16">n<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">plugin_instance<pos:position pos:line="23" pos:column="34"/></name></name></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35">
    <block type="pseudo"><if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">NULL<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">==<pos:position pos:line="24" pos:column="16"/></operator> <call><name pos:line="24" pos:column="17">hv_store<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">hash<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="32">"plugin_instance"<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="51">15<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>,
                         <argument><expr><call><name pos:line="25" pos:column="26">newSVpv<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><name><name pos:line="25" pos:column="34">n<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">plugin_instance<pos:position pos:line="25" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="54">0<pos:position pos:line="25" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="58">0<pos:position pos:line="25" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="61"/></condition><then pos:line="25" pos:column="61">
      <block type="pseudo"><return pos:line="26" pos:column="7">return <expr><operator pos:line="26" pos:column="14">-<pos:position pos:line="26" pos:column="15"/></operator><literal type="number" pos:line="26" pos:column="15">1<pos:position pos:line="26" pos:column="16"/></literal></expr>;<pos:position pos:line="26" pos:column="17"/></return></block></then></if></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><literal type="char" pos:line="28" pos:column="7">'\0'<pos:position pos:line="28" pos:column="11"/></literal> <operator pos:line="28" pos:column="12">!=<pos:position pos:line="28" pos:column="14"/></operator> <operator pos:line="28" pos:column="15">*<pos:position pos:line="28" pos:column="16"/></operator><name><name pos:line="28" pos:column="16">n<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">type<pos:position pos:line="28" pos:column="23"/></name></name></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24">
    <block type="pseudo"><if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">NULL<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">==<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">hv_store<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">hash<pos:position pos:line="29" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="32">"type"<pos:position pos:line="29" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="40">4<pos:position pos:line="29" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="43">newSVpv<pos:position pos:line="29" pos:column="50"/></name><argument_list pos:line="29" pos:column="50">(<argument><expr><name><name pos:line="29" pos:column="51">n<pos:position pos:line="29" pos:column="52"/></name><operator pos:line="29" pos:column="52">-&gt;<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="54">type<pos:position pos:line="29" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="60">0<pos:position pos:line="29" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="64">0<pos:position pos:line="29" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="67"/></condition><then pos:line="29" pos:column="67">
      <block type="pseudo"><return pos:line="30" pos:column="7">return <expr><operator pos:line="30" pos:column="14">-<pos:position pos:line="30" pos:column="15"/></operator><literal type="number" pos:line="30" pos:column="15">1<pos:position pos:line="30" pos:column="16"/></literal></expr>;<pos:position pos:line="30" pos:column="17"/></return></block></then></if></block></then></if>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><literal type="char" pos:line="32" pos:column="7">'\0'<pos:position pos:line="32" pos:column="11"/></literal> <operator pos:line="32" pos:column="12">!=<pos:position pos:line="32" pos:column="14"/></operator> <operator pos:line="32" pos:column="15">*<pos:position pos:line="32" pos:column="16"/></operator><name><name pos:line="32" pos:column="16">n<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">type_instance<pos:position pos:line="32" pos:column="32"/></name></name></expr>)<pos:position pos:line="32" pos:column="33"/></condition><then pos:line="32" pos:column="33">
    <block type="pseudo"><if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">NULL<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">==<pos:position pos:line="33" pos:column="16"/></operator>
        <call><name pos:line="34" pos:column="9">hv_store<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">hash<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="24">"type_instance"<pos:position pos:line="34" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="41">13<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="45">newSVpv<pos:position pos:line="34" pos:column="52"/></name><argument_list pos:line="34" pos:column="52">(<argument><expr><name><name pos:line="34" pos:column="53">n<pos:position pos:line="34" pos:column="54"/></name><operator pos:line="34" pos:column="54">-&gt;<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="56">type_instance<pos:position pos:line="34" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="71">0<pos:position pos:line="34" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="75">0<pos:position pos:line="34" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="78"/></condition><then pos:line="34" pos:column="78">
      <block type="pseudo"><return pos:line="35" pos:column="7">return <expr><operator pos:line="35" pos:column="14">-<pos:position pos:line="35" pos:column="15"/></operator><literal type="number" pos:line="35" pos:column="15">1<pos:position pos:line="35" pos:column="16"/></literal></expr>;<pos:position pos:line="35" pos:column="17"/></return></block></then></if></block></then></if>

  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><name pos:line="37" pos:column="7">NULL<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">!=<pos:position pos:line="37" pos:column="14"/></operator> <name><name pos:line="37" pos:column="15">n<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">meta<pos:position pos:line="37" pos:column="22"/></name></name></expr>)<pos:position pos:line="37" pos:column="23"/></condition><then pos:line="37" pos:column="23"> <block pos:line="37" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">AV<pos:position pos:line="38" pos:column="7"/></name> <modifier pos:line="38" pos:column="8">*<pos:position pos:line="38" pos:column="9"/></modifier></type><name pos:line="38" pos:column="9">meta<pos:position pos:line="38" pos:column="13"/></name> <init pos:line="38" pos:column="14">= <expr><call><name pos:line="38" pos:column="16">newAV<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">()<pos:position pos:line="38" pos:column="23"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="24"/></decl_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><literal type="number" pos:line="39" pos:column="10">0<pos:position pos:line="39" pos:column="11"/></literal> <operator pos:line="39" pos:column="12">!=<pos:position pos:line="39" pos:column="14"/></operator> <macro><name pos:line="39" pos:column="15">notification_meta2av<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument pos:line="39" pos:column="36">aTHX_ n-&gt;meta<pos:position pos:line="39" pos:column="49"/></argument>, <argument pos:line="39" pos:column="51">meta<pos:position pos:line="39" pos:column="55"/></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></macro><operator pos:line="39" pos:column="56">)<pos:position pos:line="39" pos:column="57"/></operator> <operator pos:line="39" pos:column="58">||<pos:position pos:line="39" pos:column="60"/></operator>
        <operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">NULL<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">==<pos:position pos:line="40" pos:column="17"/></operator> <call><name pos:line="40" pos:column="18">hv_store<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">hash<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="33">"meta"<pos:position pos:line="40" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="41">4<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="44">newRV_noinc<pos:position pos:line="40" pos:column="55"/></name><argument_list pos:line="40" pos:column="55">(<argument><expr><operator pos:line="40" pos:column="56">(<pos:position pos:line="40" pos:column="57"/></operator><name pos:line="40" pos:column="57">SV<pos:position pos:line="40" pos:column="59"/></name> <operator pos:line="40" pos:column="60">*<pos:position pos:line="40" pos:column="61"/></operator><operator pos:line="40" pos:column="61">)<pos:position pos:line="40" pos:column="62"/></operator><name pos:line="40" pos:column="62">meta<pos:position pos:line="40" pos:column="66"/></name></expr></argument>)<pos:position pos:line="40" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="69">0<pos:position pos:line="40" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="71"/></argument_list></call><operator pos:line="40" pos:column="71">)<pos:position pos:line="40" pos:column="72"/></operator></expr>)<pos:position pos:line="40" pos:column="73"/></condition><then pos:line="40" pos:column="73"> <block pos:line="40" pos:column="74">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">av_clear<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">meta<pos:position pos:line="41" pos:column="20"/></name></expr></argument>)<pos:position pos:line="41" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">av_undef<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">meta<pos:position pos:line="42" pos:column="20"/></name></expr></argument>)<pos:position pos:line="42" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
      <return pos:line="43" pos:column="7">return <expr><operator pos:line="43" pos:column="14">-<pos:position pos:line="43" pos:column="15"/></operator><literal type="number" pos:line="43" pos:column="15">1<pos:position pos:line="43" pos:column="16"/></literal></expr>;<pos:position pos:line="43" pos:column="17"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>
  <return pos:line="46" pos:column="3">return <expr><literal type="number" pos:line="46" pos:column="10">0<pos:position pos:line="46" pos:column="11"/></literal></expr>;<pos:position pos:line="46" pos:column="12"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1709_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">statsd_metric_submit_unsafe<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">name<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="2" pos:column="40">statsd_metric_t<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">metric<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list> <comment type="block" pos:line="2" pos:column="65">/* {{{ */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">value_list_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">vl<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="6" pos:column="3">vl<pos:position pos:line="6" pos:column="5"/></name><operator pos:line="6" pos:column="5">.<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">values<pos:position pos:line="6" pos:column="12"/></name></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <operator pos:line="6" pos:column="15">&amp;<pos:position pos:line="6" pos:column="20"/></operator><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">value_t<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">)<pos:position pos:line="6" pos:column="25"/></operator><block pos:line="6" pos:column="25">{<expr><operator pos:line="6" pos:column="26">.<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">gauge<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">=<pos:position pos:line="6" pos:column="34"/></operator> <name pos:line="6" pos:column="35">NAN<pos:position pos:line="6" pos:column="38"/></name></expr>}<pos:position pos:line="6" pos:column="39"/></block></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">vl<pos:position pos:line="7" pos:column="5"/></name><operator pos:line="7" pos:column="5">.<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">values_len<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <literal type="number" pos:line="7" pos:column="19">1<pos:position pos:line="7" pos:column="20"/></literal></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">sstrncpy<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name><name pos:line="8" pos:column="12">vl<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">plugin<pos:position pos:line="8" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"statsd"<pos:position pos:line="8" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="33">sizeof<argument_list pos:line="8" pos:column="39">(<argument><expr><name><name pos:line="8" pos:column="40">vl<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">.<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="43">plugin<pos:position pos:line="8" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">metric<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">type<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">==<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">STATSD_GAUGE<pos:position pos:line="10" pos:column="35"/></name></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">sstrncpy<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name><name pos:line="11" pos:column="14">vl<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">type<pos:position pos:line="11" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"gauge"<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="32">sizeof<argument_list pos:line="11" pos:column="38">(<argument><expr><name><name pos:line="11" pos:column="39">vl<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">.<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">type<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt></block></then>
  <elseif pos:line="12" pos:column="3">else <if pos:line="12" pos:column="8">if <condition pos:line="12" pos:column="11">(<expr><name><name pos:line="12" pos:column="12">metric<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">type<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">==<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">STATSD_TIMER<pos:position pos:line="12" pos:column="40"/></name></expr>)<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="5">sstrncpy<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name><name pos:line="13" pos:column="14">vl<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">.<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">type<pos:position pos:line="13" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="23">"latency"<pos:position pos:line="13" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="34">sizeof<argument_list pos:line="13" pos:column="40">(<argument><expr><name><name pos:line="13" pos:column="41">vl<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">.<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="44">type<pos:position pos:line="13" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="14" pos:column="3">else <if pos:line="14" pos:column="8">if <condition pos:line="14" pos:column="11">(<expr><name><name pos:line="14" pos:column="12">metric<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">type<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">==<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">STATSD_SET<pos:position pos:line="14" pos:column="38"/></name></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">sstrncpy<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name><name pos:line="15" pos:column="14">vl<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">.<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">type<pos:position pos:line="15" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"objects"<pos:position pos:line="15" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="34">sizeof<argument_list pos:line="15" pos:column="40">(<argument><expr><name><name pos:line="15" pos:column="41">vl<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">.<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="44">type<pos:position pos:line="15" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt></block></then></if></elseif>
  <else pos:line="16" pos:column="3">else <comment type="block" pos:line="16" pos:column="8">/* if (metric-&gt;type == STATSD_COUNTER) */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="5">sstrncpy<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name><name pos:line="17" pos:column="14">vl<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">.<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">type<pos:position pos:line="17" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"derive"<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="33">sizeof<argument_list pos:line="17" pos:column="39">(<argument><expr><name><name pos:line="17" pos:column="40">vl<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">.<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">type<pos:position pos:line="17" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">sstrncpy<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name><name pos:line="19" pos:column="12">vl<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">.<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">type_instance<pos:position pos:line="19" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">name<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="36">sizeof<argument_list pos:line="19" pos:column="42">(<argument><expr><name><name pos:line="19" pos:column="43">vl<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">type_instance<pos:position pos:line="19" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name><name pos:line="21" pos:column="7">metric<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">type<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">==<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="23">STATSD_GAUGE<pos:position pos:line="21" pos:column="35"/></name></expr>)<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="5">vl<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">.<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">values<pos:position pos:line="22" pos:column="14"/></name><index pos:line="22" pos:column="14">[<expr><literal type="number" pos:line="22" pos:column="15">0<pos:position pos:line="22" pos:column="16"/></literal></expr>]<pos:position pos:line="22" pos:column="17"/></index></name><operator pos:line="22" pos:column="17">.<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">gauge<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <operator pos:line="22" pos:column="26">(<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">gauge_t<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">)<pos:position pos:line="22" pos:column="35"/></operator><name><name pos:line="22" pos:column="35">metric<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">value<pos:position pos:line="22" pos:column="48"/></name></name></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt></block></then>
  <elseif pos:line="23" pos:column="3">else <if pos:line="23" pos:column="8">if <condition pos:line="23" pos:column="11">(<expr><name><name pos:line="23" pos:column="12">metric<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">type<pos:position pos:line="23" pos:column="24"/></name></name> <operator pos:line="23" pos:column="25">==<pos:position pos:line="23" pos:column="27"/></operator> <name pos:line="23" pos:column="28">STATSD_TIMER<pos:position pos:line="23" pos:column="40"/></name></expr>)<pos:position pos:line="23" pos:column="41"/></condition><then pos:line="23" pos:column="41"> <block pos:line="23" pos:column="42">{
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">_Bool<pos:position pos:line="24" pos:column="10"/></name></type> <name pos:line="24" pos:column="11">have_events<pos:position pos:line="24" pos:column="22"/></name> <init pos:line="24" pos:column="23">= <expr><operator pos:line="24" pos:column="25">(<pos:position pos:line="24" pos:column="26"/></operator><name><name pos:line="24" pos:column="26">metric<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">-&gt;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="34">updates_num<pos:position pos:line="24" pos:column="45"/></name></name> <operator pos:line="24" pos:column="46">&gt;<pos:position pos:line="24" pos:column="50"/></operator> <literal type="number" pos:line="24" pos:column="48">0<pos:position pos:line="24" pos:column="49"/></literal><operator pos:line="24" pos:column="49">)<pos:position pos:line="24" pos:column="50"/></operator></expr></init></decl>;<pos:position pos:line="24" pos:column="51"/></decl_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* Make sure all timer metrics share the *same* timestamp. */</comment>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">vl<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">.<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">time<pos:position pos:line="27" pos:column="12"/></name></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <call><name pos:line="27" pos:column="15">cdtime<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">()<pos:position pos:line="27" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">ssnprintf<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name><name pos:line="29" pos:column="15">vl<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">type_instance<pos:position pos:line="29" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="33">sizeof<argument_list pos:line="29" pos:column="39">(<argument><expr><name><name pos:line="29" pos:column="40">vl<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">.<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="43">type_instance<pos:position pos:line="29" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="59">"%s-average"<pos:position pos:line="29" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="73">name<pos:position pos:line="29" pos:column="77"/></name></expr></argument>)<pos:position pos:line="29" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">vl<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">.<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">values<pos:position pos:line="30" pos:column="14"/></name><index pos:line="30" pos:column="14">[<expr><literal type="number" pos:line="30" pos:column="15">0<pos:position pos:line="30" pos:column="16"/></literal></expr>]<pos:position pos:line="30" pos:column="17"/></index></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">gauge<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator>
        <ternary><condition><expr><name pos:line="31" pos:column="9">have_events<pos:position pos:line="31" pos:column="20"/></name></expr>
            ?<pos:position pos:line="32" pos:column="14"/></condition><then pos:line="32" pos:column="14"> <expr><call><name pos:line="32" pos:column="15">CDTIME_T_TO_DOUBLE<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><call><name pos:line="32" pos:column="34">latency_counter_get_average<pos:position pos:line="32" pos:column="61"/></name><argument_list pos:line="32" pos:column="61">(<argument><expr><name><name pos:line="32" pos:column="62">metric<pos:position pos:line="32" pos:column="68"/></name><operator pos:line="32" pos:column="68">-&gt;<pos:position pos:line="32" pos:column="73"/></operator><name pos:line="32" pos:column="70">latency<pos:position pos:line="32" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="79"/></argument_list></call></expr>
            <pos:position pos:line="33" pos:column="13"/></then><else pos:line="33" pos:column="13">: <expr><name pos:line="33" pos:column="15">NAN<pos:position pos:line="33" pos:column="18"/></name></expr></else></ternary></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">plugin_dispatch_values<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><operator pos:line="34" pos:column="28">&amp;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="29">vl<pos:position pos:line="34" pos:column="31"/></name></expr></argument>)<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">conf_timer_lower<pos:position pos:line="36" pos:column="25"/></name></expr>)<pos:position pos:line="36" pos:column="26"/></condition><then pos:line="36" pos:column="26"> <block pos:line="36" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">ssnprintf<pos:position pos:line="37" pos:column="16"/></name><argument_list pos:line="37" pos:column="16">(<argument><expr><name><name pos:line="37" pos:column="17">vl<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">.<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">type_instance<pos:position pos:line="37" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="35">sizeof<argument_list pos:line="37" pos:column="41">(<argument><expr><name><name pos:line="37" pos:column="42">vl<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">.<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="45">type_instance<pos:position pos:line="37" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="61">"%s-lower"<pos:position pos:line="37" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="73">name<pos:position pos:line="37" pos:column="77"/></name></expr></argument>)<pos:position pos:line="37" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="38" pos:column="7">vl<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">.<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">values<pos:position pos:line="38" pos:column="16"/></name><index pos:line="38" pos:column="16">[<expr><literal type="number" pos:line="38" pos:column="17">0<pos:position pos:line="38" pos:column="18"/></literal></expr>]<pos:position pos:line="38" pos:column="19"/></index></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">gauge<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator>
          <ternary><condition><expr><name pos:line="39" pos:column="11">have_events<pos:position pos:line="39" pos:column="22"/></name></expr>
              ?<pos:position pos:line="40" pos:column="16"/></condition><then pos:line="40" pos:column="16"> <expr><call><name pos:line="40" pos:column="17">CDTIME_T_TO_DOUBLE<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><call><name pos:line="40" pos:column="36">latency_counter_get_min<pos:position pos:line="40" pos:column="59"/></name><argument_list pos:line="40" pos:column="59">(<argument><expr><name><name pos:line="40" pos:column="60">metric<pos:position pos:line="40" pos:column="66"/></name><operator pos:line="40" pos:column="66">-&gt;<pos:position pos:line="40" pos:column="71"/></operator><name pos:line="40" pos:column="68">latency<pos:position pos:line="40" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call></expr>
              <pos:position pos:line="41" pos:column="15"/></then><else pos:line="41" pos:column="15">: <expr><name pos:line="41" pos:column="17">NAN<pos:position pos:line="41" pos:column="20"/></name></expr></else></ternary></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">plugin_dispatch_values<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><operator pos:line="42" pos:column="30">&amp;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="31">vl<pos:position pos:line="42" pos:column="33"/></name></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">conf_timer_upper<pos:position pos:line="45" pos:column="25"/></name></expr>)<pos:position pos:line="45" pos:column="26"/></condition><then pos:line="45" pos:column="26"> <block pos:line="45" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">ssnprintf<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name><name pos:line="46" pos:column="17">vl<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">.<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="20">type_instance<pos:position pos:line="46" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="35">sizeof<argument_list pos:line="46" pos:column="41">(<argument><expr><name><name pos:line="46" pos:column="42">vl<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">.<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="45">type_instance<pos:position pos:line="46" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="61">"%s-upper"<pos:position pos:line="46" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="73">name<pos:position pos:line="46" pos:column="77"/></name></expr></argument>)<pos:position pos:line="46" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">vl<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">.<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">values<pos:position pos:line="47" pos:column="16"/></name><index pos:line="47" pos:column="16">[<expr><literal type="number" pos:line="47" pos:column="17">0<pos:position pos:line="47" pos:column="18"/></literal></expr>]<pos:position pos:line="47" pos:column="19"/></index></name><operator pos:line="47" pos:column="19">.<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">gauge<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">=<pos:position pos:line="47" pos:column="27"/></operator>
          <ternary><condition><expr><name pos:line="48" pos:column="11">have_events<pos:position pos:line="48" pos:column="22"/></name></expr>
              ?<pos:position pos:line="49" pos:column="16"/></condition><then pos:line="49" pos:column="16"> <expr><call><name pos:line="49" pos:column="17">CDTIME_T_TO_DOUBLE<pos:position pos:line="49" pos:column="35"/></name><argument_list pos:line="49" pos:column="35">(<argument><expr><call><name pos:line="49" pos:column="36">latency_counter_get_max<pos:position pos:line="49" pos:column="59"/></name><argument_list pos:line="49" pos:column="59">(<argument><expr><name><name pos:line="49" pos:column="60">metric<pos:position pos:line="49" pos:column="66"/></name><operator pos:line="49" pos:column="66">-&gt;<pos:position pos:line="49" pos:column="71"/></operator><name pos:line="49" pos:column="68">latency<pos:position pos:line="49" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="77"/></argument_list></call></expr>
              <pos:position pos:line="50" pos:column="15"/></then><else pos:line="50" pos:column="15">: <expr><name pos:line="50" pos:column="17">NAN<pos:position pos:line="50" pos:column="20"/></name></expr></else></ternary></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">plugin_dispatch_values<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><operator pos:line="51" pos:column="30">&amp;<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="31">vl<pos:position pos:line="51" pos:column="33"/></name></expr></argument>)<pos:position pos:line="51" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">conf_timer_sum<pos:position pos:line="54" pos:column="23"/></name></expr>)<pos:position pos:line="54" pos:column="24"/></condition><then pos:line="54" pos:column="24"> <block pos:line="54" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">ssnprintf<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name><name pos:line="55" pos:column="17">vl<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">.<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="20">type_instance<pos:position pos:line="55" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="35">sizeof<argument_list pos:line="55" pos:column="41">(<argument><expr><name><name pos:line="55" pos:column="42">vl<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">.<pos:position pos:line="55" pos:column="45"/></operator><name pos:line="55" pos:column="45">type_instance<pos:position pos:line="55" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="61">"%s-sum"<pos:position pos:line="55" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="71">name<pos:position pos:line="55" pos:column="75"/></name></expr></argument>)<pos:position pos:line="55" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="56" pos:column="7">vl<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">.<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">values<pos:position pos:line="56" pos:column="16"/></name><index pos:line="56" pos:column="16">[<expr><literal type="number" pos:line="56" pos:column="17">0<pos:position pos:line="56" pos:column="18"/></literal></expr>]<pos:position pos:line="56" pos:column="19"/></index></name><operator pos:line="56" pos:column="19">.<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">gauge<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">=<pos:position pos:line="56" pos:column="27"/></operator>
          <ternary><condition><expr><name pos:line="57" pos:column="11">have_events<pos:position pos:line="57" pos:column="22"/></name></expr>
              ?<pos:position pos:line="58" pos:column="16"/></condition><then pos:line="58" pos:column="16"> <expr><call><name pos:line="58" pos:column="17">CDTIME_T_TO_DOUBLE<pos:position pos:line="58" pos:column="35"/></name><argument_list pos:line="58" pos:column="35">(<argument><expr><call><name pos:line="58" pos:column="36">latency_counter_get_sum<pos:position pos:line="58" pos:column="59"/></name><argument_list pos:line="58" pos:column="59">(<argument><expr><name><name pos:line="58" pos:column="60">metric<pos:position pos:line="58" pos:column="66"/></name><operator pos:line="58" pos:column="66">-&gt;<pos:position pos:line="58" pos:column="71"/></operator><name pos:line="58" pos:column="68">latency<pos:position pos:line="58" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="77"/></argument_list></call></expr>
              <pos:position pos:line="59" pos:column="15"/></then><else pos:line="59" pos:column="15">: <expr><name pos:line="59" pos:column="17">NAN<pos:position pos:line="59" pos:column="20"/></name></expr></else></ternary></expr>;<pos:position pos:line="59" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">plugin_dispatch_values<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><operator pos:line="60" pos:column="30">&amp;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="31">vl<pos:position pos:line="60" pos:column="33"/></name></expr></argument>)<pos:position pos:line="60" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <for pos:line="63" pos:column="5">for <control pos:line="63" pos:column="9">(<init><decl><type><name pos:line="63" pos:column="10">size_t<pos:position pos:line="63" pos:column="16"/></name></type> <name pos:line="63" pos:column="17">i<pos:position pos:line="63" pos:column="18"/></name> <init pos:line="63" pos:column="19">= <expr><literal type="number" pos:line="63" pos:column="21">0<pos:position pos:line="63" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="63" pos:column="23"/></init> <condition><expr><name pos:line="63" pos:column="24">i<pos:position pos:line="63" pos:column="25"/></name> <operator pos:line="63" pos:column="26">&lt;<pos:position pos:line="63" pos:column="30"/></operator> <name pos:line="63" pos:column="28">conf_timer_percentile_num<pos:position pos:line="63" pos:column="53"/></name></expr>;<pos:position pos:line="63" pos:column="54"/></condition> <incr><expr><name pos:line="63" pos:column="55">i<pos:position pos:line="63" pos:column="56"/></name><operator pos:line="63" pos:column="56">++<pos:position pos:line="63" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="63" pos:column="59"/></control> <block pos:line="63" pos:column="60">{
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">ssnprintf<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><name><name pos:line="64" pos:column="17">vl<pos:position pos:line="64" pos:column="19"/></name><operator pos:line="64" pos:column="19">.<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="20">type_instance<pos:position pos:line="64" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="35">sizeof<argument_list pos:line="64" pos:column="41">(<argument><expr><name><name pos:line="64" pos:column="42">vl<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">.<pos:position pos:line="64" pos:column="45"/></operator><name pos:line="64" pos:column="45">type_instance<pos:position pos:line="64" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="59"/></argument_list></sizeof></expr></argument>,
                <argument><expr><literal type="string" pos:line="65" pos:column="17">"%s-percentile-%.0f"<pos:position pos:line="65" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="39">name<pos:position pos:line="65" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="45">conf_timer_percentile<pos:position pos:line="65" pos:column="66"/></name><index pos:line="65" pos:column="66">[<expr><name pos:line="65" pos:column="67">i<pos:position pos:line="65" pos:column="68"/></name></expr>]<pos:position pos:line="65" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="65" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="66" pos:column="7">vl<pos:position pos:line="66" pos:column="9"/></name><operator pos:line="66" pos:column="9">.<pos:position pos:line="66" pos:column="10"/></operator><name pos:line="66" pos:column="10">values<pos:position pos:line="66" pos:column="16"/></name><index pos:line="66" pos:column="16">[<expr><literal type="number" pos:line="66" pos:column="17">0<pos:position pos:line="66" pos:column="18"/></literal></expr>]<pos:position pos:line="66" pos:column="19"/></index></name><operator pos:line="66" pos:column="19">.<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="20">gauge<pos:position pos:line="66" pos:column="25"/></name> <operator pos:line="66" pos:column="26">=<pos:position pos:line="66" pos:column="27"/></operator>
          <ternary><condition><expr><name pos:line="67" pos:column="11">have_events<pos:position pos:line="67" pos:column="22"/></name></expr> ?<pos:position pos:line="67" pos:column="24"/></condition><then pos:line="67" pos:column="24"> <expr><call><name pos:line="67" pos:column="25">CDTIME_T_TO_DOUBLE<pos:position pos:line="67" pos:column="43"/></name><argument_list pos:line="67" pos:column="43">(<argument><expr><call><name pos:line="67" pos:column="44">latency_counter_get_percentile<pos:position pos:line="67" pos:column="74"/></name><argument_list pos:line="67" pos:column="74">(
                            <argument><expr><name><name pos:line="68" pos:column="29">metric<pos:position pos:line="68" pos:column="35"/></name><operator pos:line="68" pos:column="35">-&gt;<pos:position pos:line="68" pos:column="40"/></operator><name pos:line="68" pos:column="37">latency<pos:position pos:line="68" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="46">conf_timer_percentile<pos:position pos:line="68" pos:column="67"/></name><index pos:line="68" pos:column="67">[<expr><name pos:line="68" pos:column="68">i<pos:position pos:line="68" pos:column="69"/></name></expr>]<pos:position pos:line="68" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="68" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="72"/></argument_list></call></expr>
                      <pos:position pos:line="69" pos:column="23"/></then><else pos:line="69" pos:column="23">: <expr><name pos:line="69" pos:column="25">NAN<pos:position pos:line="69" pos:column="28"/></name></expr></else></ternary></expr>;<pos:position pos:line="69" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">plugin_dispatch_values<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><operator pos:line="70" pos:column="30">&amp;<pos:position pos:line="70" pos:column="35"/></operator><name pos:line="70" pos:column="31">vl<pos:position pos:line="70" pos:column="33"/></name></expr></argument>)<pos:position pos:line="70" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></for>

    <comment type="block" pos:line="73" pos:column="5">/* Keep this at the end, since vl.type is set to "gauge" here. The
     * vl.type's above are implicitly set to "latency". */</comment>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name pos:line="75" pos:column="9">conf_timer_count<pos:position pos:line="75" pos:column="25"/></name></expr>)<pos:position pos:line="75" pos:column="26"/></condition><then pos:line="75" pos:column="26"> <block pos:line="75" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">sstrncpy<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><name><name pos:line="76" pos:column="16">vl<pos:position pos:line="76" pos:column="18"/></name><operator pos:line="76" pos:column="18">.<pos:position pos:line="76" pos:column="19"/></operator><name pos:line="76" pos:column="19">type<pos:position pos:line="76" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="25">"gauge"<pos:position pos:line="76" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="34">sizeof<argument_list pos:line="76" pos:column="40">(<argument><expr><name><name pos:line="76" pos:column="41">vl<pos:position pos:line="76" pos:column="43"/></name><operator pos:line="76" pos:column="43">.<pos:position pos:line="76" pos:column="44"/></operator><name pos:line="76" pos:column="44">type<pos:position pos:line="76" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">ssnprintf<pos:position pos:line="77" pos:column="16"/></name><argument_list pos:line="77" pos:column="16">(<argument><expr><name><name pos:line="77" pos:column="17">vl<pos:position pos:line="77" pos:column="19"/></name><operator pos:line="77" pos:column="19">.<pos:position pos:line="77" pos:column="20"/></operator><name pos:line="77" pos:column="20">type_instance<pos:position pos:line="77" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="35">sizeof<argument_list pos:line="77" pos:column="41">(<argument><expr><name><name pos:line="77" pos:column="42">vl<pos:position pos:line="77" pos:column="44"/></name><operator pos:line="77" pos:column="44">.<pos:position pos:line="77" pos:column="45"/></operator><name pos:line="77" pos:column="45">type_instance<pos:position pos:line="77" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="61">"%s-count"<pos:position pos:line="77" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="73">name<pos:position pos:line="77" pos:column="77"/></name></expr></argument>)<pos:position pos:line="77" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="78" pos:column="7">vl<pos:position pos:line="78" pos:column="9"/></name><operator pos:line="78" pos:column="9">.<pos:position pos:line="78" pos:column="10"/></operator><name pos:line="78" pos:column="10">values<pos:position pos:line="78" pos:column="16"/></name><index pos:line="78" pos:column="16">[<expr><literal type="number" pos:line="78" pos:column="17">0<pos:position pos:line="78" pos:column="18"/></literal></expr>]<pos:position pos:line="78" pos:column="19"/></index></name><operator pos:line="78" pos:column="19">.<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="20">gauge<pos:position pos:line="78" pos:column="25"/></name> <operator pos:line="78" pos:column="26">=<pos:position pos:line="78" pos:column="27"/></operator> <call><name pos:line="78" pos:column="28">latency_counter_get_num<pos:position pos:line="78" pos:column="51"/></name><argument_list pos:line="78" pos:column="51">(<argument><expr><name><name pos:line="78" pos:column="52">metric<pos:position pos:line="78" pos:column="58"/></name><operator pos:line="78" pos:column="58">-&gt;<pos:position pos:line="78" pos:column="63"/></operator><name pos:line="78" pos:column="60">latency<pos:position pos:line="78" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">plugin_dispatch_values<pos:position pos:line="79" pos:column="29"/></name><argument_list pos:line="79" pos:column="29">(<argument><expr><operator pos:line="79" pos:column="30">&amp;<pos:position pos:line="79" pos:column="35"/></operator><name pos:line="79" pos:column="31">vl<pos:position pos:line="79" pos:column="33"/></name></expr></argument>)<pos:position pos:line="79" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="82" pos:column="5">latency_counter_reset<pos:position pos:line="82" pos:column="26"/></name><argument_list pos:line="82" pos:column="26">(<argument><expr><name><name pos:line="82" pos:column="27">metric<pos:position pos:line="82" pos:column="33"/></name><operator pos:line="82" pos:column="33">-&gt;<pos:position pos:line="82" pos:column="38"/></operator><name pos:line="82" pos:column="35">latency<pos:position pos:line="82" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="44"/></expr_stmt>
    <return pos:line="83" pos:column="5">return <expr><operator pos:line="83" pos:column="12">(<pos:position pos:line="83" pos:column="13"/></operator><literal type="number" pos:line="83" pos:column="13">0<pos:position pos:line="83" pos:column="14"/></literal><operator pos:line="83" pos:column="14">)<pos:position pos:line="83" pos:column="15"/></operator></expr>;<pos:position pos:line="83" pos:column="16"/></return>
  }<pos:position pos:line="84" pos:column="4"/></block></then></if></elseif> <elseif pos:line="84" pos:column="5">else <if pos:line="84" pos:column="10">if <condition pos:line="84" pos:column="13">(<expr><name><name pos:line="84" pos:column="14">metric<pos:position pos:line="84" pos:column="20"/></name><operator pos:line="84" pos:column="20">-&gt;<pos:position pos:line="84" pos:column="25"/></operator><name pos:line="84" pos:column="22">type<pos:position pos:line="84" pos:column="26"/></name></name> <operator pos:line="84" pos:column="27">==<pos:position pos:line="84" pos:column="29"/></operator> <name pos:line="84" pos:column="30">STATSD_SET<pos:position pos:line="84" pos:column="40"/></name></expr>)<pos:position pos:line="84" pos:column="41"/></condition><then pos:line="84" pos:column="41"> <block pos:line="84" pos:column="42">{
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name><name pos:line="85" pos:column="9">metric<pos:position pos:line="85" pos:column="15"/></name><operator pos:line="85" pos:column="15">-&gt;<pos:position pos:line="85" pos:column="20"/></operator><name pos:line="85" pos:column="17">set<pos:position pos:line="85" pos:column="20"/></name></name> <operator pos:line="85" pos:column="21">==<pos:position pos:line="85" pos:column="23"/></operator> <name pos:line="85" pos:column="24">NULL<pos:position pos:line="85" pos:column="28"/></name></expr>)<pos:position pos:line="85" pos:column="29"/></condition><then pos:line="85" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="86" pos:column="7">vl<pos:position pos:line="86" pos:column="9"/></name><operator pos:line="86" pos:column="9">.<pos:position pos:line="86" pos:column="10"/></operator><name pos:line="86" pos:column="10">values<pos:position pos:line="86" pos:column="16"/></name><index pos:line="86" pos:column="16">[<expr><literal type="number" pos:line="86" pos:column="17">0<pos:position pos:line="86" pos:column="18"/></literal></expr>]<pos:position pos:line="86" pos:column="19"/></index></name><operator pos:line="86" pos:column="19">.<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="20">gauge<pos:position pos:line="86" pos:column="25"/></name> <operator pos:line="86" pos:column="26">=<pos:position pos:line="86" pos:column="27"/></operator> <literal type="number" pos:line="86" pos:column="28">0.0<pos:position pos:line="86" pos:column="31"/></literal></expr>;<pos:position pos:line="86" pos:column="32"/></expr_stmt></block></then>
    <else pos:line="87" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="88" pos:column="7">vl<pos:position pos:line="88" pos:column="9"/></name><operator pos:line="88" pos:column="9">.<pos:position pos:line="88" pos:column="10"/></operator><name pos:line="88" pos:column="10">values<pos:position pos:line="88" pos:column="16"/></name><index pos:line="88" pos:column="16">[<expr><literal type="number" pos:line="88" pos:column="17">0<pos:position pos:line="88" pos:column="18"/></literal></expr>]<pos:position pos:line="88" pos:column="19"/></index></name><operator pos:line="88" pos:column="19">.<pos:position pos:line="88" pos:column="20"/></operator><name pos:line="88" pos:column="20">gauge<pos:position pos:line="88" pos:column="25"/></name> <operator pos:line="88" pos:column="26">=<pos:position pos:line="88" pos:column="27"/></operator> <operator pos:line="88" pos:column="28">(<pos:position pos:line="88" pos:column="29"/></operator><name pos:line="88" pos:column="29">gauge_t<pos:position pos:line="88" pos:column="36"/></name><operator pos:line="88" pos:column="36">)<pos:position pos:line="88" pos:column="37"/></operator><call><name pos:line="88" pos:column="37">c_avl_size<pos:position pos:line="88" pos:column="47"/></name><argument_list pos:line="88" pos:column="47">(<argument><expr><name><name pos:line="88" pos:column="48">metric<pos:position pos:line="88" pos:column="54"/></name><operator pos:line="88" pos:column="54">-&gt;<pos:position pos:line="88" pos:column="59"/></operator><name pos:line="88" pos:column="56">set<pos:position pos:line="88" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="61"/></expr_stmt></block></else></if>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if></elseif> <else pos:line="89" pos:column="5">else <block pos:line="89" pos:column="10">{ <comment type="block" pos:line="89" pos:column="12">/* STATSD_COUNTER */</comment>
    <decl_stmt><decl><type><name pos:line="90" pos:column="5">gauge_t<pos:position pos:line="90" pos:column="12"/></name></type> <name pos:line="90" pos:column="13">delta<pos:position pos:line="90" pos:column="18"/></name> <init pos:line="90" pos:column="19">= <expr><call><name pos:line="90" pos:column="21">nearbyint<pos:position pos:line="90" pos:column="30"/></name><argument_list pos:line="90" pos:column="30">(<argument><expr><name><name pos:line="90" pos:column="31">metric<pos:position pos:line="90" pos:column="37"/></name><operator pos:line="90" pos:column="37">-&gt;<pos:position pos:line="90" pos:column="42"/></operator><name pos:line="90" pos:column="39">value<pos:position pos:line="90" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="90" pos:column="46"/></decl_stmt>

    <comment type="block" pos:line="92" pos:column="5">/* Etsy's statsd writes counters as two metrics: a rate and the change since
     * the last write. Since collectd does not reset its DERIVE metrics to zero,
     * this makes little sense, but we're dispatching a "count" metric here
     * anyway - if requested by the user - for compatibility reasons. */</comment>
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name pos:line="96" pos:column="9">conf_counter_sum<pos:position pos:line="96" pos:column="25"/></name></expr>)<pos:position pos:line="96" pos:column="26"/></condition><then pos:line="96" pos:column="26"> <block pos:line="96" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">sstrncpy<pos:position pos:line="97" pos:column="15"/></name><argument_list pos:line="97" pos:column="15">(<argument><expr><name><name pos:line="97" pos:column="16">vl<pos:position pos:line="97" pos:column="18"/></name><operator pos:line="97" pos:column="18">.<pos:position pos:line="97" pos:column="19"/></operator><name pos:line="97" pos:column="19">type<pos:position pos:line="97" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="25">"count"<pos:position pos:line="97" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="34">sizeof<argument_list pos:line="97" pos:column="40">(<argument><expr><name><name pos:line="97" pos:column="41">vl<pos:position pos:line="97" pos:column="43"/></name><operator pos:line="97" pos:column="43">.<pos:position pos:line="97" pos:column="44"/></operator><name pos:line="97" pos:column="44">type<pos:position pos:line="97" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="98" pos:column="7">vl<pos:position pos:line="98" pos:column="9"/></name><operator pos:line="98" pos:column="9">.<pos:position pos:line="98" pos:column="10"/></operator><name pos:line="98" pos:column="10">values<pos:position pos:line="98" pos:column="16"/></name><index pos:line="98" pos:column="16">[<expr><literal type="number" pos:line="98" pos:column="17">0<pos:position pos:line="98" pos:column="18"/></literal></expr>]<pos:position pos:line="98" pos:column="19"/></index></name><operator pos:line="98" pos:column="19">.<pos:position pos:line="98" pos:column="20"/></operator><name pos:line="98" pos:column="20">gauge<pos:position pos:line="98" pos:column="25"/></name> <operator pos:line="98" pos:column="26">=<pos:position pos:line="98" pos:column="27"/></operator> <name pos:line="98" pos:column="28">delta<pos:position pos:line="98" pos:column="33"/></name></expr>;<pos:position pos:line="98" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="99" pos:column="7">plugin_dispatch_values<pos:position pos:line="99" pos:column="29"/></name><argument_list pos:line="99" pos:column="29">(<argument><expr><operator pos:line="99" pos:column="30">&amp;<pos:position pos:line="99" pos:column="35"/></operator><name pos:line="99" pos:column="31">vl<pos:position pos:line="99" pos:column="33"/></name></expr></argument>)<pos:position pos:line="99" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="35"/></expr_stmt>

      <comment type="block" pos:line="101" pos:column="7">/* restore vl.type */</comment>
      <expr_stmt><expr><call><name pos:line="102" pos:column="7">sstrncpy<pos:position pos:line="102" pos:column="15"/></name><argument_list pos:line="102" pos:column="15">(<argument><expr><name><name pos:line="102" pos:column="16">vl<pos:position pos:line="102" pos:column="18"/></name><operator pos:line="102" pos:column="18">.<pos:position pos:line="102" pos:column="19"/></operator><name pos:line="102" pos:column="19">type<pos:position pos:line="102" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="25">"derive"<pos:position pos:line="102" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="102" pos:column="35">sizeof<argument_list pos:line="102" pos:column="41">(<argument><expr><name><name pos:line="102" pos:column="42">vl<pos:position pos:line="102" pos:column="44"/></name><operator pos:line="102" pos:column="44">.<pos:position pos:line="102" pos:column="45"/></operator><name pos:line="102" pos:column="45">type<pos:position pos:line="102" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="102" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="105" pos:column="5">/* Rather than resetting value to zero, subtract delta so we correctly keep
     * track of residuals. */</comment>
    <expr_stmt><expr><name><name pos:line="107" pos:column="5">metric<pos:position pos:line="107" pos:column="11"/></name><operator pos:line="107" pos:column="11">-&gt;<pos:position pos:line="107" pos:column="16"/></operator><name pos:line="107" pos:column="13">value<pos:position pos:line="107" pos:column="18"/></name></name> <operator pos:line="107" pos:column="19">-=<pos:position pos:line="107" pos:column="21"/></operator> <name pos:line="107" pos:column="22">delta<pos:position pos:line="107" pos:column="27"/></name></expr>;<pos:position pos:line="107" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="108" pos:column="5">metric<pos:position pos:line="108" pos:column="11"/></name><operator pos:line="108" pos:column="11">-&gt;<pos:position pos:line="108" pos:column="16"/></operator><name pos:line="108" pos:column="13">counter<pos:position pos:line="108" pos:column="20"/></name></name> <operator pos:line="108" pos:column="21">+=<pos:position pos:line="108" pos:column="23"/></operator> <operator pos:line="108" pos:column="24">(<pos:position pos:line="108" pos:column="25"/></operator><name pos:line="108" pos:column="25">derive_t<pos:position pos:line="108" pos:column="33"/></name><operator pos:line="108" pos:column="33">)<pos:position pos:line="108" pos:column="34"/></operator><name pos:line="108" pos:column="34">delta<pos:position pos:line="108" pos:column="39"/></name></expr>;<pos:position pos:line="108" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="110" pos:column="5">vl<pos:position pos:line="110" pos:column="7"/></name><operator pos:line="110" pos:column="7">.<pos:position pos:line="110" pos:column="8"/></operator><name pos:line="110" pos:column="8">values<pos:position pos:line="110" pos:column="14"/></name><index pos:line="110" pos:column="14">[<expr><literal type="number" pos:line="110" pos:column="15">0<pos:position pos:line="110" pos:column="16"/></literal></expr>]<pos:position pos:line="110" pos:column="17"/></index></name><operator pos:line="110" pos:column="17">.<pos:position pos:line="110" pos:column="18"/></operator><name pos:line="110" pos:column="18">derive<pos:position pos:line="110" pos:column="24"/></name> <operator pos:line="110" pos:column="25">=<pos:position pos:line="110" pos:column="26"/></operator> <name><name pos:line="110" pos:column="27">metric<pos:position pos:line="110" pos:column="33"/></name><operator pos:line="110" pos:column="33">-&gt;<pos:position pos:line="110" pos:column="38"/></operator><name pos:line="110" pos:column="35">counter<pos:position pos:line="110" pos:column="42"/></name></name></expr>;<pos:position pos:line="110" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="111" pos:column="4"/></block></else></if>

  <return pos:line="113" pos:column="3">return <expr><operator pos:line="113" pos:column="10">(<pos:position pos:line="113" pos:column="11"/></operator><call><name pos:line="113" pos:column="11">plugin_dispatch_values<pos:position pos:line="113" pos:column="33"/></name><argument_list pos:line="113" pos:column="33">(<argument><expr><operator pos:line="113" pos:column="34">&amp;<pos:position pos:line="113" pos:column="39"/></operator><name pos:line="113" pos:column="35">vl<pos:position pos:line="113" pos:column="37"/></name></expr></argument>)<pos:position pos:line="113" pos:column="38"/></argument_list></call><operator pos:line="113" pos:column="38">)<pos:position pos:line="113" pos:column="39"/></operator></expr>;<pos:position pos:line="113" pos:column="40"/></return>
}<pos:position pos:line="114" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_975_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">av2data_set<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">pTHX_<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">AV<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">array<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">name<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">data_set_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">ds<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list> <block pos:line="1" pos:column="69">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">len<pos:position pos:line="2" pos:column="10"/></name></decl>;<pos:position pos:line="2" pos:column="11"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">(<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">NULL<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">array<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">)<pos:position pos:line="4" pos:column="22"/></operator> <operator pos:line="4" pos:column="23">||<pos:position pos:line="4" pos:column="25"/></operator> <operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name> <operator pos:line="4" pos:column="32">==<pos:position pos:line="4" pos:column="34"/></operator> <name pos:line="4" pos:column="35">name<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">)<pos:position pos:line="4" pos:column="40"/></operator> <operator pos:line="4" pos:column="41">||<pos:position pos:line="4" pos:column="43"/></operator> <operator pos:line="4" pos:column="44">(<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">NULL<pos:position pos:line="4" pos:column="49"/></name> <operator pos:line="4" pos:column="50">==<pos:position pos:line="4" pos:column="52"/></operator> <name pos:line="4" pos:column="53">ds<pos:position pos:line="4" pos:column="55"/></name><operator pos:line="4" pos:column="55">)<pos:position pos:line="4" pos:column="56"/></operator></expr>)<pos:position pos:line="4" pos:column="57"/></condition><then pos:line="4" pos:column="57">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">-<pos:position pos:line="5" pos:column="13"/></operator><literal type="number" pos:line="5" pos:column="13">1<pos:position pos:line="5" pos:column="14"/></literal></expr>;<pos:position pos:line="5" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="7" pos:column="3">len<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">av_len<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">array<pos:position pos:line="7" pos:column="21"/></name></expr></argument>)<pos:position pos:line="7" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">-<pos:position pos:line="9" pos:column="8"/></operator><literal type="number" pos:line="9" pos:column="8">1<pos:position pos:line="9" pos:column="9"/></literal> <operator pos:line="9" pos:column="10">==<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">len<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17"> <block pos:line="9" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">log_err<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="string" pos:line="10" pos:column="13">"av2data_set: Invalid data set."<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">ds<pos:position pos:line="14" pos:column="5"/></name><operator pos:line="14" pos:column="5">-&gt;<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="7">ds<pos:position pos:line="14" pos:column="9"/></name></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">smalloc<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><operator pos:line="14" pos:column="20">(<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">len<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">+<pos:position pos:line="14" pos:column="26"/></operator> <literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal><operator pos:line="14" pos:column="28">)<pos:position pos:line="14" pos:column="29"/></operator> <operator pos:line="14" pos:column="30">*<pos:position pos:line="14" pos:column="31"/></operator> <sizeof pos:line="14" pos:column="32">sizeof<argument_list pos:line="14" pos:column="38">(<argument><expr><operator pos:line="14" pos:column="39">*<pos:position pos:line="14" pos:column="40"/></operator><name><name pos:line="14" pos:column="40">ds<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">ds<pos:position pos:line="14" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">ds<pos:position pos:line="15" pos:column="5"/></name><operator pos:line="15" pos:column="5">-&gt;<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="7">ds_num<pos:position pos:line="15" pos:column="13"/></name></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">len<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">+<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="22">1<pos:position pos:line="15" pos:column="23"/></literal></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>

  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><decl><type><name pos:line="17" pos:column="8">int<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">i<pos:position pos:line="17" pos:column="13"/></name> <init pos:line="17" pos:column="14">= <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="18"/></init> <condition><expr><name pos:line="17" pos:column="19">i<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">&lt;=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="24">len<pos:position pos:line="17" pos:column="27"/></name></expr>;<pos:position pos:line="17" pos:column="28"/></condition> <incr><expr><operator pos:line="17" pos:column="29">++<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">i<pos:position pos:line="17" pos:column="32"/></name></expr></incr>)<pos:position pos:line="17" pos:column="33"/></control> <block pos:line="17" pos:column="34">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">SV<pos:position pos:line="18" pos:column="7"/></name> <modifier pos:line="18" pos:column="8">*<pos:position pos:line="18" pos:column="9"/></modifier><modifier pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></modifier></type><name pos:line="18" pos:column="10">elem<pos:position pos:line="18" pos:column="14"/></name> <init pos:line="18" pos:column="15">= <expr><call><name pos:line="18" pos:column="17">av_fetch<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">array<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">i<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="36">0<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="39"/></decl_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">NULL<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">==<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">elem<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22"> <block pos:line="20" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">log_err<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><literal type="string" pos:line="21" pos:column="15">"av2data_set: Failed to fetch data source %i."<pos:position pos:line="21" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="63">i<pos:position pos:line="21" pos:column="64"/></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="66"/></expr_stmt>
      <return pos:line="22" pos:column="7">return <expr><operator pos:line="22" pos:column="14">-<pos:position pos:line="22" pos:column="15"/></operator><literal type="number" pos:line="22" pos:column="15">1<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><call><name pos:line="25" pos:column="11">SvROK<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><operator pos:line="25" pos:column="17">*<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">elem<pos:position pos:line="25" pos:column="22"/></name></expr></argument>)<pos:position pos:line="25" pos:column="23"/></argument_list></call> <operator pos:line="25" pos:column="24">&amp;&amp;<pos:position pos:line="25" pos:column="34"/></operator> <operator pos:line="25" pos:column="27">(<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">SVt_PVHV<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">==<pos:position pos:line="25" pos:column="39"/></operator> <call><name pos:line="25" pos:column="40">SvTYPE<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">(<argument><expr><call><name pos:line="25" pos:column="47">SvRV<pos:position pos:line="25" pos:column="51"/></name><argument_list pos:line="25" pos:column="51">(<argument><expr><operator pos:line="25" pos:column="52">*<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="53">elem<pos:position pos:line="25" pos:column="57"/></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call><operator pos:line="25" pos:column="59">)<pos:position pos:line="25" pos:column="60"/></operator><operator pos:line="25" pos:column="60">)<pos:position pos:line="25" pos:column="61"/></operator></expr>)<pos:position pos:line="25" pos:column="62"/></condition><then pos:line="25" pos:column="62"> <block pos:line="25" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">log_err<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><literal type="string" pos:line="26" pos:column="15">"av2data_set: Invalid data source."<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>
      <return pos:line="27" pos:column="7">return <expr><operator pos:line="27" pos:column="14">-<pos:position pos:line="27" pos:column="15"/></operator><literal type="number" pos:line="27" pos:column="15">1<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">-<pos:position pos:line="30" pos:column="10"/></operator><literal type="number" pos:line="30" pos:column="10">1<pos:position pos:line="30" pos:column="11"/></literal> <operator pos:line="30" pos:column="12">==<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">hv2data_source<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><macro><name pos:line="30" pos:column="30">aTHX_<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument pos:line="30" pos:column="36">HV *<pos:position pos:line="30" pos:column="40"/></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></macro> <call><name pos:line="30" pos:column="42">SvRV<pos:position pos:line="30" pos:column="46"/></name><argument_list pos:line="30" pos:column="46">(<argument><expr><operator pos:line="30" pos:column="47">*<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="48">elem<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="30" pos:column="55">&amp;<pos:position pos:line="30" pos:column="60"/></operator><name><name pos:line="30" pos:column="56">ds<pos:position pos:line="30" pos:column="58"/></name><operator pos:line="30" pos:column="58">-&gt;<pos:position pos:line="30" pos:column="63"/></operator><name pos:line="30" pos:column="60">ds<pos:position pos:line="30" pos:column="62"/></name><index pos:line="30" pos:column="62">[<expr><name pos:line="30" pos:column="63">i<pos:position pos:line="30" pos:column="64"/></name></expr>]<pos:position pos:line="30" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="67"/></condition><then pos:line="30" pos:column="67">
      <block type="pseudo"><return pos:line="31" pos:column="7">return <expr><operator pos:line="31" pos:column="14">-<pos:position pos:line="31" pos:column="15"/></operator><literal type="number" pos:line="31" pos:column="15">1<pos:position pos:line="31" pos:column="16"/></literal></expr>;<pos:position pos:line="31" pos:column="17"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">log_debug<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><literal type="string" pos:line="33" pos:column="15">"av2data_set: "<pos:position pos:line="33" pos:column="30"/></literal>
              <literal type="string" pos:line="34" pos:column="15">"DS.name = \"%s\", DS.type = %i, DS.min = %f, DS.max = %f"<pos:position pos:line="34" pos:column="73"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="35" pos:column="15">ds<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">-&gt;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="19">ds<pos:position pos:line="35" pos:column="21"/></name><index pos:line="35" pos:column="21">[<expr><name pos:line="35" pos:column="22">i<pos:position pos:line="35" pos:column="23"/></name></expr>]<pos:position pos:line="35" pos:column="24"/></index></name><operator pos:line="35" pos:column="24">.<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">name<pos:position pos:line="35" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="31">ds<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">-&gt;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="35">ds<pos:position pos:line="35" pos:column="37"/></name><index pos:line="35" pos:column="37">[<expr><name pos:line="35" pos:column="38">i<pos:position pos:line="35" pos:column="39"/></name></expr>]<pos:position pos:line="35" pos:column="40"/></index></name><operator pos:line="35" pos:column="40">.<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="41">type<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="47">ds<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">-&gt;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="51">ds<pos:position pos:line="35" pos:column="53"/></name><index pos:line="35" pos:column="53">[<expr><name pos:line="35" pos:column="54">i<pos:position pos:line="35" pos:column="55"/></name></expr>]<pos:position pos:line="35" pos:column="56"/></index></name><operator pos:line="35" pos:column="56">.<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="57">min<pos:position pos:line="35" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="62">ds<pos:position pos:line="35" pos:column="64"/></name><operator pos:line="35" pos:column="64">-&gt;<pos:position pos:line="35" pos:column="69"/></operator><name pos:line="35" pos:column="66">ds<pos:position pos:line="35" pos:column="68"/></name><index pos:line="35" pos:column="68">[<expr><name pos:line="35" pos:column="69">i<pos:position pos:line="35" pos:column="70"/></name></expr>]<pos:position pos:line="35" pos:column="71"/></index></name><operator pos:line="35" pos:column="71">.<pos:position pos:line="35" pos:column="72"/></operator><name pos:line="35" pos:column="72">max<pos:position pos:line="35" pos:column="75"/></name></expr></argument>)<pos:position pos:line="35" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">sstrncpy<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><name><name pos:line="38" pos:column="12">ds<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">type<pos:position pos:line="38" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="22">name<pos:position pos:line="38" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="28">sizeof<argument_list pos:line="38" pos:column="34">(<argument><expr><name><name pos:line="38" pos:column="35">ds<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">type<pos:position pos:line="38" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="46"/></expr_stmt>
  <return pos:line="39" pos:column="3">return <expr><literal type="number" pos:line="39" pos:column="10">0<pos:position pos:line="39" pos:column="11"/></literal></expr>;<pos:position pos:line="39" pos:column="12"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

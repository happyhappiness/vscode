<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1332_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wh_write<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">data_set_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ds<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">value_list_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">vl<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="68">/* {{{ */</comment>
                <parameter><decl><type><name pos:line="2" pos:column="17">user_data_t<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">user_data<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">wh_callback_t<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">cb<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">user_data<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">==<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31">
                <block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><operator pos:line="8" pos:column="25">-<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">EINVAL<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator></expr>;<pos:position pos:line="8" pos:column="34"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="10" pos:column="9">cb<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name><name pos:line="10" pos:column="14">user_data<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">data<pos:position pos:line="10" pos:column="29"/></name></name></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">cb<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">format<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">==<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="27">WH_FORMAT_JSON<pos:position pos:line="12" pos:column="41"/></name></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42">
                <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">status<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <call><name pos:line="13" pos:column="26">wh_write_json<pos:position pos:line="13" pos:column="39"/></name> <argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">ds<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">vl<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">cb<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt></block></then>
        <else pos:line="14" pos:column="9">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">status<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">wh_write_command<pos:position pos:line="15" pos:column="42"/></name> <argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">ds<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">vl<pos:position pos:line="15" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="52">cb<pos:position pos:line="15" pos:column="54"/></name></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt></block></else></if>

        <return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">status<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">)<pos:position pos:line="17" pos:column="24"/></operator></expr>;<pos:position pos:line="17" pos:column="25"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

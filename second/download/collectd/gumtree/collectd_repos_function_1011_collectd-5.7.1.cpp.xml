<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1011_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hv2notification<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">pTHX_<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">HV<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">hash<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">notification_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">n<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <block pos:line="1" pos:column="63">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">SV<pos:position pos:line="2" pos:column="5"/></name> <modifier pos:line="2" pos:column="6">*<pos:position pos:line="2" pos:column="7"/></modifier><modifier pos:line="2" pos:column="7">*<pos:position pos:line="2" pos:column="8"/></modifier></type><name pos:line="2" pos:column="8">tmp<pos:position pos:line="2" pos:column="11"/></name> <init pos:line="2" pos:column="12">= <expr><name pos:line="2" pos:column="14">NULL<pos:position pos:line="2" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="19"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">(<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">NULL<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">hash<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">)<pos:position pos:line="4" pos:column="21"/></operator> <operator pos:line="4" pos:column="22">||<pos:position pos:line="4" pos:column="24"/></operator> <operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">NULL<pos:position pos:line="4" pos:column="30"/></name> <operator pos:line="4" pos:column="31">==<pos:position pos:line="4" pos:column="33"/></operator> <name pos:line="4" pos:column="34">n<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">)<pos:position pos:line="4" pos:column="36"/></operator></expr>)<pos:position pos:line="4" pos:column="37"/></condition><then pos:line="4" pos:column="37">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">-<pos:position pos:line="5" pos:column="13"/></operator><literal type="number" pos:line="5" pos:column="13">1<pos:position pos:line="5" pos:column="14"/></literal></expr>;<pos:position pos:line="5" pos:column="15"/></return></block></then></if>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">NULL<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">!=<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">(<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">tmp<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <call><name pos:line="7" pos:column="22">hv_fetch<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">hash<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="37">"severity"<pos:position pos:line="7" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="49">8<pos:position pos:line="7" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="52">0<pos:position pos:line="7" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call><operator pos:line="7" pos:column="54">)<pos:position pos:line="7" pos:column="55"/></operator></expr>)<pos:position pos:line="7" pos:column="56"/></condition><then pos:line="7" pos:column="56">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="5">n<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">-&gt;<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="8">severity<pos:position pos:line="8" pos:column="16"/></name></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">SvIV<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">tmp<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt></block></then>
  <else pos:line="9" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="5">n<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">severity<pos:position pos:line="10" pos:column="16"/></name></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">NOTIF_FAILURE<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt></block></else></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">NULL<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">!=<pos:position pos:line="12" pos:column="14"/></operator> <operator pos:line="12" pos:column="15">(<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">tmp<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <call><name pos:line="12" pos:column="22">hv_fetch<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">hash<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="37">"time"<pos:position pos:line="12" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="45">4<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="48">0<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call><operator pos:line="12" pos:column="50">)<pos:position pos:line="12" pos:column="51"/></operator></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52"> <block pos:line="12" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">double<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">t<pos:position pos:line="13" pos:column="13"/></name> <init pos:line="13" pos:column="14">= <expr><call><name pos:line="13" pos:column="16">SvNV<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">tmp<pos:position pos:line="13" pos:column="25"/></name></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">n<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">time<pos:position pos:line="14" pos:column="12"/></name></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">DOUBLE_TO_CDTIME_T<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">t<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then> <else pos:line="15" pos:column="5">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="5">n<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">time<pos:position pos:line="16" pos:column="12"/></name></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">cdtime<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">()<pos:position pos:line="16" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt></block></else></if>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">NULL<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">!=<pos:position pos:line="18" pos:column="14"/></operator> <operator pos:line="18" pos:column="15">(<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">tmp<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <call><name pos:line="18" pos:column="22">hv_fetch<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">hash<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="37">"message"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="48">7<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="51">0<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call><operator pos:line="18" pos:column="53">)<pos:position pos:line="18" pos:column="54"/></operator></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">sstrncpy<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name><name pos:line="19" pos:column="14">n<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">message<pos:position pos:line="19" pos:column="24"/></name></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="26">SvPV_nolen<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><operator pos:line="19" pos:column="37">*<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">tmp<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="44">sizeof<argument_list pos:line="19" pos:column="50">(<argument><expr><name><name pos:line="19" pos:column="51">n<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">-&gt;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="54">message<pos:position pos:line="19" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">NULL<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">!=<pos:position pos:line="21" pos:column="14"/></operator> <operator pos:line="21" pos:column="15">(<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">tmp<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">hv_fetch<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">hash<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="37">"host"<pos:position pos:line="21" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="45">4<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="48">0<pos:position pos:line="21" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call><operator pos:line="21" pos:column="50">)<pos:position pos:line="21" pos:column="51"/></operator></expr>)<pos:position pos:line="21" pos:column="52"/></condition><then pos:line="21" pos:column="52">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">sstrncpy<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name><name pos:line="22" pos:column="14">n<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">host<pos:position pos:line="22" pos:column="21"/></name></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="23">SvPV_nolen<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><operator pos:line="22" pos:column="34">*<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">tmp<pos:position pos:line="22" pos:column="38"/></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="41">sizeof<argument_list pos:line="22" pos:column="47">(<argument><expr><name><name pos:line="22" pos:column="48">n<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">-&gt;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="51">host<pos:position pos:line="22" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt></block></then>
  <else pos:line="23" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">sstrncpy<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name><name pos:line="24" pos:column="14">n<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">host<pos:position pos:line="24" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="23">hostname_g<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="35">sizeof<argument_list pos:line="24" pos:column="41">(<argument><expr><name><name pos:line="24" pos:column="42">n<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">host<pos:position pos:line="24" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt></block></else></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">NULL<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">!=<pos:position pos:line="26" pos:column="14"/></operator> <operator pos:line="26" pos:column="15">(<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">tmp<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">hv_fetch<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">hash<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="37">"plugin"<pos:position pos:line="26" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="47">6<pos:position pos:line="26" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="50">0<pos:position pos:line="26" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call><operator pos:line="26" pos:column="52">)<pos:position pos:line="26" pos:column="53"/></operator></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">sstrncpy<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><name><name pos:line="27" pos:column="14">n<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">plugin<pos:position pos:line="27" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="25">SvPV_nolen<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><operator pos:line="27" pos:column="36">*<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="37">tmp<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="43">sizeof<argument_list pos:line="27" pos:column="49">(<argument><expr><name><name pos:line="27" pos:column="50">n<pos:position pos:line="27" pos:column="51"/></name><operator pos:line="27" pos:column="51">-&gt;<pos:position pos:line="27" pos:column="56"/></operator><name pos:line="27" pos:column="53">plugin<pos:position pos:line="27" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt></block></then></if>

  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">NULL<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">!=<pos:position pos:line="29" pos:column="14"/></operator> <operator pos:line="29" pos:column="15">(<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">tmp<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <call><name pos:line="29" pos:column="22">hv_fetch<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">hash<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="37">"plugin_instance"<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="56">15<pos:position pos:line="29" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="60">0<pos:position pos:line="29" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call><operator pos:line="29" pos:column="62">)<pos:position pos:line="29" pos:column="63"/></operator></expr>)<pos:position pos:line="29" pos:column="64"/></condition><then pos:line="29" pos:column="64">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="5">sstrncpy<pos:position pos:line="30" pos:column="13"/></name><argument_list pos:line="30" pos:column="13">(<argument><expr><name><name pos:line="30" pos:column="14">n<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">plugin_instance<pos:position pos:line="30" pos:column="32"/></name></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="34">SvPV_nolen<pos:position pos:line="30" pos:column="44"/></name><argument_list pos:line="30" pos:column="44">(<argument><expr><operator pos:line="30" pos:column="45">*<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="46">tmp<pos:position pos:line="30" pos:column="49"/></name></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="52">sizeof<argument_list pos:line="30" pos:column="58">(<argument><expr><name><name pos:line="30" pos:column="59">n<pos:position pos:line="30" pos:column="60"/></name><operator pos:line="30" pos:column="60">-&gt;<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="62">plugin_instance<pos:position pos:line="30" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="80"/></expr_stmt></block></then></if>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">NULL<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">!=<pos:position pos:line="32" pos:column="14"/></operator> <operator pos:line="32" pos:column="15">(<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">tmp<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">hv_fetch<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">hash<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="37">"type"<pos:position pos:line="32" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="45">4<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="48">0<pos:position pos:line="32" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call><operator pos:line="32" pos:column="50">)<pos:position pos:line="32" pos:column="51"/></operator></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="5">sstrncpy<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><name><name pos:line="33" pos:column="14">n<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">type<pos:position pos:line="33" pos:column="21"/></name></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="23">SvPV_nolen<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><operator pos:line="33" pos:column="34">*<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">tmp<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="41">sizeof<argument_list pos:line="33" pos:column="47">(<argument><expr><name><name pos:line="33" pos:column="48">n<pos:position pos:line="33" pos:column="49"/></name><operator pos:line="33" pos:column="49">-&gt;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="51">type<pos:position pos:line="33" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt></block></then></if>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">NULL<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">!=<pos:position pos:line="35" pos:column="14"/></operator> <operator pos:line="35" pos:column="15">(<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">tmp<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <call><name pos:line="35" pos:column="22">hv_fetch<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">hash<pos:position pos:line="35" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="37">"type_instance"<pos:position pos:line="35" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="54">13<pos:position pos:line="35" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="58">0<pos:position pos:line="35" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call><operator pos:line="35" pos:column="60">)<pos:position pos:line="35" pos:column="61"/></operator></expr>)<pos:position pos:line="35" pos:column="62"/></condition><then pos:line="35" pos:column="62">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="5">sstrncpy<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><name><name pos:line="36" pos:column="14">n<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">type_instance<pos:position pos:line="36" pos:column="30"/></name></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="32">SvPV_nolen<pos:position pos:line="36" pos:column="42"/></name><argument_list pos:line="36" pos:column="42">(<argument><expr><operator pos:line="36" pos:column="43">*<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="44">tmp<pos:position pos:line="36" pos:column="47"/></name></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="50">sizeof<argument_list pos:line="36" pos:column="56">(<argument><expr><name><name pos:line="36" pos:column="57">n<pos:position pos:line="36" pos:column="58"/></name><operator pos:line="36" pos:column="58">-&gt;<pos:position pos:line="36" pos:column="63"/></operator><name pos:line="36" pos:column="60">type_instance<pos:position pos:line="36" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="76"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="38" pos:column="3">n<pos:position pos:line="38" pos:column="4"/></name><operator pos:line="38" pos:column="4">-&gt;<pos:position pos:line="38" pos:column="9"/></operator><name pos:line="38" pos:column="6">meta<pos:position pos:line="38" pos:column="10"/></name></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <name pos:line="38" pos:column="13">NULL<pos:position pos:line="38" pos:column="17"/></name></expr>;<pos:position pos:line="38" pos:column="18"/></expr_stmt>
  <while pos:line="39" pos:column="3">while <condition pos:line="39" pos:column="9">(<expr><name pos:line="39" pos:column="10">NULL<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">!=<pos:position pos:line="39" pos:column="17"/></operator> <operator pos:line="39" pos:column="18">(<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">tmp<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <call><name pos:line="39" pos:column="25">hv_fetch<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><name pos:line="39" pos:column="34">hash<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="40">"meta"<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="48">4<pos:position pos:line="39" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="51">0<pos:position pos:line="39" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call><operator pos:line="39" pos:column="53">)<pos:position pos:line="39" pos:column="54"/></operator></expr>)<pos:position pos:line="39" pos:column="55"/></condition> <block pos:line="39" pos:column="56">{
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><operator pos:line="40" pos:column="10">(<pos:position pos:line="40" pos:column="11"/></operator><call><name pos:line="40" pos:column="11">SvROK<pos:position pos:line="40" pos:column="16"/></name><argument_list pos:line="40" pos:column="16">(<argument><expr><operator pos:line="40" pos:column="17">*<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">tmp<pos:position pos:line="40" pos:column="21"/></name></expr></argument>)<pos:position pos:line="40" pos:column="22"/></argument_list></call> <operator pos:line="40" pos:column="23">&amp;&amp;<pos:position pos:line="40" pos:column="33"/></operator> <operator pos:line="40" pos:column="26">(<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="27">SVt_PVAV<pos:position pos:line="40" pos:column="35"/></name> <operator pos:line="40" pos:column="36">==<pos:position pos:line="40" pos:column="38"/></operator> <call><name pos:line="40" pos:column="39">SvTYPE<pos:position pos:line="40" pos:column="45"/></name><argument_list pos:line="40" pos:column="45">(<argument><expr><call><name pos:line="40" pos:column="46">SvRV<pos:position pos:line="40" pos:column="50"/></name><argument_list pos:line="40" pos:column="50">(<argument><expr><operator pos:line="40" pos:column="51">*<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="52">tmp<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></call><operator pos:line="40" pos:column="57">)<pos:position pos:line="40" pos:column="58"/></operator><operator pos:line="40" pos:column="58">)<pos:position pos:line="40" pos:column="59"/></operator></expr>)<pos:position pos:line="40" pos:column="60"/></condition><then pos:line="40" pos:column="60"> <block pos:line="40" pos:column="61">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">log_warn<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="string" pos:line="41" pos:column="16">"hv2notification: Ignoring invalid meta information."<pos:position pos:line="41" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="71"/></expr_stmt>
      <break pos:line="42" pos:column="7">break;<pos:position pos:line="42" pos:column="13"/></break>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><literal type="number" pos:line="45" pos:column="9">0<pos:position pos:line="45" pos:column="10"/></literal> <operator pos:line="45" pos:column="11">!=<pos:position pos:line="45" pos:column="13"/></operator> <call><name pos:line="45" pos:column="14">av2notification_meta<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><macro><name pos:line="45" pos:column="35">aTHX_<pos:position pos:line="45" pos:column="40"/></name><argument_list pos:line="45" pos:column="40">(<argument pos:line="45" pos:column="41">AV *<pos:position pos:line="45" pos:column="45"/></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></macro> <call><name pos:line="45" pos:column="47">SvRV<pos:position pos:line="45" pos:column="51"/></name><argument_list pos:line="45" pos:column="51">(<argument><expr><operator pos:line="45" pos:column="52">*<pos:position pos:line="45" pos:column="53"/></operator><name pos:line="45" pos:column="53">tmp<pos:position pos:line="45" pos:column="56"/></name></expr></argument>)<pos:position pos:line="45" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="45" pos:column="59">&amp;<pos:position pos:line="45" pos:column="64"/></operator><name><name pos:line="45" pos:column="60">n<pos:position pos:line="45" pos:column="61"/></name><operator pos:line="45" pos:column="61">-&gt;<pos:position pos:line="45" pos:column="66"/></operator><name pos:line="45" pos:column="63">meta<pos:position pos:line="45" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="69"/></condition><then pos:line="45" pos:column="69"> <block pos:line="45" pos:column="70">{
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">plugin_notification_meta_free<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name><name pos:line="46" pos:column="37">n<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">meta<pos:position pos:line="46" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">n<pos:position pos:line="47" pos:column="8"/></name><operator pos:line="47" pos:column="8">-&gt;<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="10">meta<pos:position pos:line="47" pos:column="14"/></name></name> <operator pos:line="47" pos:column="15">=<pos:position pos:line="47" pos:column="16"/></operator> <name pos:line="47" pos:column="17">NULL<pos:position pos:line="47" pos:column="21"/></name></expr>;<pos:position pos:line="47" pos:column="22"/></expr_stmt>
      <return pos:line="48" pos:column="7">return <expr><operator pos:line="48" pos:column="14">-<pos:position pos:line="48" pos:column="15"/></operator><literal type="number" pos:line="48" pos:column="15">1<pos:position pos:line="48" pos:column="16"/></literal></expr>;<pos:position pos:line="48" pos:column="17"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <break pos:line="50" pos:column="5">break;<pos:position pos:line="50" pos:column="11"/></break>
  }<pos:position pos:line="51" pos:column="4"/></block></while>
  <return pos:line="52" pos:column="3">return <expr><literal type="number" pos:line="52" pos:column="10">0<pos:position pos:line="52" pos:column="11"/></literal></expr>;<pos:position pos:line="52" pos:column="12"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

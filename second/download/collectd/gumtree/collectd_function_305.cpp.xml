<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_305.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">oconfig_item_t<pos:position pos:line="1" pos:column="15"/></name> <modifier pos:line="1" pos:column="16">*<pos:position pos:line="1" pos:column="17"/></modifier></type><name pos:line="1" pos:column="17">oconfig_clone<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">oconfig_item_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">ci_orig<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">oconfig_item_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">ci_copy<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">ci_copy<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">oconfig_item_t<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></operator><operator pos:line="5" pos:column="30">)<pos:position pos:line="5" pos:column="31"/></operator> <call><name pos:line="5" pos:column="32">malloc<pos:position pos:line="5" pos:column="38"/></name> <argument_list pos:line="5" pos:column="39">(<argument><expr><sizeof pos:line="5" pos:column="40">sizeof <argument_list pos:line="5" pos:column="47">(<argument><expr><operator pos:line="5" pos:column="48">*<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="49">ci_copy<pos:position pos:line="5" pos:column="56"/></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="59"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">ci_copy<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">==<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">fprintf<pos:position pos:line="8" pos:column="12"/></name> <argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">stderr<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="22">"malloc failed.\n"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">NULL<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">)<pos:position pos:line="9" pos:column="18"/></operator></expr>;<pos:position pos:line="9" pos:column="19"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">memset<pos:position pos:line="11" pos:column="9"/></name> <argument_list pos:line="11" pos:column="10">(<argument><expr><name pos:line="11" pos:column="11">ci_copy<pos:position pos:line="11" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="23">sizeof <argument_list pos:line="11" pos:column="30">(<argument><expr><operator pos:line="11" pos:column="31">*<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">ci_copy<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">ci_copy<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">values<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">NULL<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">ci_copy<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">parent<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">NULL<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">ci_copy<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">children<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">NULL<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="16" pos:column="3">ci_copy<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">key<pos:position pos:line="16" pos:column="15"/></name></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">strdup<pos:position pos:line="16" pos:column="24"/></name> <argument_list pos:line="16" pos:column="25">(<argument><expr><name><name pos:line="16" pos:column="26">ci_orig<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">key<pos:position pos:line="16" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name><name pos:line="17" pos:column="7">ci_copy<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">key<pos:position pos:line="17" pos:column="19"/></name></name> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">NULL<pos:position pos:line="17" pos:column="27"/></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">fprintf<pos:position pos:line="19" pos:column="12"/></name> <argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">stderr<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="22">"strdup failed.\n"<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">free<pos:position pos:line="20" pos:column="9"/></name> <argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">ci_copy<pos:position pos:line="20" pos:column="18"/></name></expr></argument>)<pos:position pos:line="20" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">NULL<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">)<pos:position pos:line="21" pos:column="18"/></operator></expr>;<pos:position pos:line="21" pos:column="19"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name><name pos:line="24" pos:column="7">ci_orig<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">values_num<pos:position pos:line="24" pos:column="26"/></name></name> <operator pos:line="24" pos:column="27">&gt;<pos:position pos:line="24" pos:column="31"/></operator> <literal type="number" pos:line="24" pos:column="29">0<pos:position pos:line="24" pos:column="30"/></literal></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31"> <comment type="block" pos:line="24" pos:column="32">/* {{{ */</comment>
  <block pos:line="25" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">i<pos:position pos:line="26" pos:column="10"/></name></decl>;<pos:position pos:line="26" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">ci_copy<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">values<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <operator pos:line="28" pos:column="23">(<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">oconfig_value_t<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">*<pos:position pos:line="28" pos:column="41"/></operator><operator pos:line="28" pos:column="41">)<pos:position pos:line="28" pos:column="42"/></operator> <call><name pos:line="28" pos:column="43">calloc<pos:position pos:line="28" pos:column="49"/></name> <argument_list pos:line="28" pos:column="50">(<argument><expr><name><name pos:line="28" pos:column="51">ci_orig<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">values_num<pos:position pos:line="28" pos:column="70"/></name></name></expr></argument>,
	<argument><expr><sizeof pos:line="29" pos:column="9">sizeof <argument_list pos:line="29" pos:column="16">(<argument><expr><operator pos:line="29" pos:column="17">*<pos:position pos:line="29" pos:column="18"/></operator><name><name pos:line="29" pos:column="18">ci_copy<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">values<pos:position pos:line="29" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name><name pos:line="30" pos:column="9">ci_copy<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">values<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">==<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">NULL<pos:position pos:line="30" pos:column="32"/></name></expr>)<pos:position pos:line="30" pos:column="33"/></condition><then pos:line="30" pos:column="33">
    <block pos:line="31" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">fprintf<pos:position pos:line="32" pos:column="14"/></name> <argument_list pos:line="32" pos:column="15">(<argument><expr><name pos:line="32" pos:column="16">stderr<pos:position pos:line="32" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="24">"calloc failed.\n"<pos:position pos:line="32" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">free<pos:position pos:line="33" pos:column="11"/></name> <argument_list pos:line="33" pos:column="12">(<argument><expr><name><name pos:line="33" pos:column="13">ci_copy<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">key<pos:position pos:line="33" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">free<pos:position pos:line="34" pos:column="11"/></name> <argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">ci_copy<pos:position pos:line="34" pos:column="20"/></name></expr></argument>)<pos:position pos:line="34" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>
      <return pos:line="35" pos:column="7">return <expr><operator pos:line="35" pos:column="14">(<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">NULL<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">)<pos:position pos:line="35" pos:column="20"/></operator></expr>;<pos:position pos:line="35" pos:column="21"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">ci_copy<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">values_num<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <name><name pos:line="37" pos:column="27">ci_orig<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">values_num<pos:position pos:line="37" pos:column="46"/></name></name></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>

    <for pos:line="39" pos:column="5">for <control pos:line="39" pos:column="9">(<init><expr><name pos:line="39" pos:column="10">i<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <literal type="number" pos:line="39" pos:column="14">0<pos:position pos:line="39" pos:column="15"/></literal></expr>;<pos:position pos:line="39" pos:column="16"/></init> <condition><expr><name pos:line="39" pos:column="17">i<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">&lt;<pos:position pos:line="39" pos:column="23"/></operator> <name><name pos:line="39" pos:column="21">ci_copy<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">values_num<pos:position pos:line="39" pos:column="40"/></name></name></expr>;<pos:position pos:line="39" pos:column="41"/></condition> <incr><expr><name pos:line="39" pos:column="42">i<pos:position pos:line="39" pos:column="43"/></name><operator pos:line="39" pos:column="43">++<pos:position pos:line="39" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="46"/></control>
    <block pos:line="40" pos:column="5">{
       <expr_stmt><expr><name><name pos:line="41" pos:column="8">ci_copy<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">values<pos:position pos:line="41" pos:column="23"/></name><index pos:line="41" pos:column="23">[<expr><name pos:line="41" pos:column="24">i<pos:position pos:line="41" pos:column="25"/></name></expr>]<pos:position pos:line="41" pos:column="26"/></index></name><operator pos:line="41" pos:column="26">.<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">type<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <name><name pos:line="41" pos:column="34">ci_orig<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">-&gt;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="43">values<pos:position pos:line="41" pos:column="49"/></name><index pos:line="41" pos:column="49">[<expr><name pos:line="41" pos:column="50">i<pos:position pos:line="41" pos:column="51"/></name></expr>]<pos:position pos:line="41" pos:column="52"/></index></name><operator pos:line="41" pos:column="52">.<pos:position pos:line="41" pos:column="53"/></operator><name pos:line="41" pos:column="53">type<pos:position pos:line="41" pos:column="57"/></name></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>
       <if pos:line="42" pos:column="8">if <condition pos:line="42" pos:column="11">(<expr><name><name pos:line="42" pos:column="12">ci_copy<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">-&gt;<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="21">values<pos:position pos:line="42" pos:column="27"/></name><index pos:line="42" pos:column="27">[<expr><name pos:line="42" pos:column="28">i<pos:position pos:line="42" pos:column="29"/></name></expr>]<pos:position pos:line="42" pos:column="30"/></index></name><operator pos:line="42" pos:column="30">.<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">type<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">==<pos:position pos:line="42" pos:column="38"/></operator> <name pos:line="42" pos:column="39">OCONFIG_TYPE_STRING<pos:position pos:line="42" pos:column="58"/></name></expr>)<pos:position pos:line="42" pos:column="59"/></condition><then pos:line="42" pos:column="59">
       <block pos:line="43" pos:column="8">{
	 <expr_stmt><expr><name><name pos:line="44" pos:column="10">ci_copy<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">values<pos:position pos:line="44" pos:column="25"/></name><index pos:line="44" pos:column="25">[<expr><name pos:line="44" pos:column="26">i<pos:position pos:line="44" pos:column="27"/></name></expr>]<pos:position pos:line="44" pos:column="28"/></index></name><operator pos:line="44" pos:column="28">.<pos:position pos:line="44" pos:column="29"/></operator><name><name pos:line="44" pos:column="29">value<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">.<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="35">string<pos:position pos:line="44" pos:column="41"/></name></name>
	   <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <call><name pos:line="45" pos:column="14">strdup<pos:position pos:line="45" pos:column="20"/></name> <argument_list pos:line="45" pos:column="21">(<argument><expr><name><name pos:line="45" pos:column="22">ci_orig<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">-&gt;<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="31">values<pos:position pos:line="45" pos:column="37"/></name><index pos:line="45" pos:column="37">[<expr><name pos:line="45" pos:column="38">i<pos:position pos:line="45" pos:column="39"/></name></expr>]<pos:position pos:line="45" pos:column="40"/></index></name><operator pos:line="45" pos:column="40">.<pos:position pos:line="45" pos:column="41"/></operator><name><name pos:line="45" pos:column="41">value<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">.<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="47">string<pos:position pos:line="45" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt>
	 <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><name><name pos:line="46" pos:column="14">ci_copy<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">-&gt;<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="23">values<pos:position pos:line="46" pos:column="29"/></name><index pos:line="46" pos:column="29">[<expr><name pos:line="46" pos:column="30">i<pos:position pos:line="46" pos:column="31"/></name></expr>]<pos:position pos:line="46" pos:column="32"/></index></name><operator pos:line="46" pos:column="32">.<pos:position pos:line="46" pos:column="33"/></operator><name><name pos:line="46" pos:column="33">value<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">.<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="39">string<pos:position pos:line="46" pos:column="45"/></name></name> <operator pos:line="46" pos:column="46">==<pos:position pos:line="46" pos:column="48"/></operator> <name pos:line="46" pos:column="49">NULL<pos:position pos:line="46" pos:column="53"/></name></expr>)<pos:position pos:line="46" pos:column="54"/></condition><then pos:line="46" pos:column="54">
	 <block pos:line="47" pos:column="10">{
	   <expr_stmt><expr><call><name pos:line="48" pos:column="12">fprintf<pos:position pos:line="48" pos:column="19"/></name> <argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">stderr<pos:position pos:line="48" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="29">"strdup failed.\n"<pos:position pos:line="48" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt>
	   <expr_stmt><expr><call><name pos:line="49" pos:column="12">oconfig_free<pos:position pos:line="49" pos:column="24"/></name> <argument_list pos:line="49" pos:column="25">(<argument><expr><name pos:line="49" pos:column="26">ci_copy<pos:position pos:line="49" pos:column="33"/></name></expr></argument>)<pos:position pos:line="49" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="35"/></expr_stmt>
	   <return pos:line="50" pos:column="12">return <expr><operator pos:line="50" pos:column="19">(<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="20">NULL<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">)<pos:position pos:line="50" pos:column="25"/></operator></expr>;<pos:position pos:line="50" pos:column="26"/></return>
	 }<pos:position pos:line="51" pos:column="11"/></block></then></if>
       }<pos:position pos:line="52" pos:column="9"/></block></then>
       <else pos:line="53" pos:column="8">else <comment type="block" pos:line="53" pos:column="13">/* ci_copy-&gt;values[i].type != OCONFIG_TYPE_STRING) */</comment>
       <block pos:line="54" pos:column="8">{
	 <expr_stmt><expr><name><name pos:line="55" pos:column="10">ci_copy<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="19">values<pos:position pos:line="55" pos:column="25"/></name><index pos:line="55" pos:column="25">[<expr><name pos:line="55" pos:column="26">i<pos:position pos:line="55" pos:column="27"/></name></expr>]<pos:position pos:line="55" pos:column="28"/></index></name><operator pos:line="55" pos:column="28">.<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="29">value<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">=<pos:position pos:line="55" pos:column="36"/></operator> <name><name pos:line="55" pos:column="37">ci_orig<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">-&gt;<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="46">values<pos:position pos:line="55" pos:column="52"/></name><index pos:line="55" pos:column="52">[<expr><name pos:line="55" pos:column="53">i<pos:position pos:line="55" pos:column="54"/></name></expr>]<pos:position pos:line="55" pos:column="55"/></index></name><operator pos:line="55" pos:column="55">.<pos:position pos:line="55" pos:column="56"/></operator><name pos:line="55" pos:column="56">value<pos:position pos:line="55" pos:column="61"/></name></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt>
       }<pos:position pos:line="56" pos:column="9"/></block></else></if>
    }<pos:position pos:line="57" pos:column="6"/></block></for>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if> <comment type="block" pos:line="58" pos:column="5">/* }}} if (ci_orig-&gt;values_num &gt; 0) */</comment>

  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><name><name pos:line="60" pos:column="7">ci_orig<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">-&gt;<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="16">children_num<pos:position pos:line="60" pos:column="28"/></name></name> <operator pos:line="60" pos:column="29">&gt;<pos:position pos:line="60" pos:column="33"/></operator> <literal type="number" pos:line="60" pos:column="31">0<pos:position pos:line="60" pos:column="32"/></literal></expr>)<pos:position pos:line="60" pos:column="33"/></condition><then pos:line="60" pos:column="33"> <comment type="block" pos:line="60" pos:column="34">/* {{{ */</comment>
  <block pos:line="61" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">int<pos:position pos:line="62" pos:column="8"/></name></type> <name pos:line="62" pos:column="9">i<pos:position pos:line="62" pos:column="10"/></name></decl>;<pos:position pos:line="62" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="64" pos:column="5">ci_copy<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">-&gt;<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="14">children<pos:position pos:line="64" pos:column="22"/></name></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <operator pos:line="64" pos:column="25">(<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="26">oconfig_item_t<pos:position pos:line="64" pos:column="40"/></name> <operator pos:line="64" pos:column="41">*<pos:position pos:line="64" pos:column="42"/></operator><operator pos:line="64" pos:column="42">)<pos:position pos:line="64" pos:column="43"/></operator> <call><name pos:line="64" pos:column="44">calloc<pos:position pos:line="64" pos:column="50"/></name> <argument_list pos:line="64" pos:column="51">(<argument><expr><name><name pos:line="64" pos:column="52">ci_orig<pos:position pos:line="64" pos:column="59"/></name><operator pos:line="64" pos:column="59">-&gt;<pos:position pos:line="64" pos:column="64"/></operator><name pos:line="64" pos:column="61">children_num<pos:position pos:line="64" pos:column="73"/></name></name></expr></argument>,
	<argument><expr><sizeof pos:line="65" pos:column="9">sizeof <argument_list pos:line="65" pos:column="16">(<argument><expr><operator pos:line="65" pos:column="17">*<pos:position pos:line="65" pos:column="18"/></operator><name><name pos:line="65" pos:column="18">ci_copy<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">-&gt;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="27">children<pos:position pos:line="65" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="38"/></expr_stmt>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name><name pos:line="66" pos:column="9">ci_copy<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">children<pos:position pos:line="66" pos:column="26"/></name></name> <operator pos:line="66" pos:column="27">==<pos:position pos:line="66" pos:column="29"/></operator> <name pos:line="66" pos:column="30">NULL<pos:position pos:line="66" pos:column="34"/></name></expr>)<pos:position pos:line="66" pos:column="35"/></condition><then pos:line="66" pos:column="35">
    <block pos:line="67" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">fprintf<pos:position pos:line="68" pos:column="14"/></name> <argument_list pos:line="68" pos:column="15">(<argument><expr><name pos:line="68" pos:column="16">stderr<pos:position pos:line="68" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="24">"calloc failed.\n"<pos:position pos:line="68" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">oconfig_free<pos:position pos:line="69" pos:column="19"/></name> <argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">ci_copy<pos:position pos:line="69" pos:column="28"/></name></expr></argument>)<pos:position pos:line="69" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt>
      <return pos:line="70" pos:column="7">return <expr><operator pos:line="70" pos:column="14">(<pos:position pos:line="70" pos:column="15"/></operator><name pos:line="70" pos:column="15">NULL<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">)<pos:position pos:line="70" pos:column="20"/></operator></expr>;<pos:position pos:line="70" pos:column="21"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="72" pos:column="5">ci_copy<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">-&gt;<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="14">children_num<pos:position pos:line="72" pos:column="26"/></name></name> <operator pos:line="72" pos:column="27">=<pos:position pos:line="72" pos:column="28"/></operator> <name><name pos:line="72" pos:column="29">ci_orig<pos:position pos:line="72" pos:column="36"/></name><operator pos:line="72" pos:column="36">-&gt;<pos:position pos:line="72" pos:column="41"/></operator><name pos:line="72" pos:column="38">children_num<pos:position pos:line="72" pos:column="50"/></name></name></expr>;<pos:position pos:line="72" pos:column="51"/></expr_stmt>

    <for pos:line="74" pos:column="5">for <control pos:line="74" pos:column="9">(<init><expr><name pos:line="74" pos:column="10">i<pos:position pos:line="74" pos:column="11"/></name> <operator pos:line="74" pos:column="12">=<pos:position pos:line="74" pos:column="13"/></operator> <literal type="number" pos:line="74" pos:column="14">0<pos:position pos:line="74" pos:column="15"/></literal></expr>;<pos:position pos:line="74" pos:column="16"/></init> <condition><expr><name pos:line="74" pos:column="17">i<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">&lt;<pos:position pos:line="74" pos:column="23"/></operator> <name><name pos:line="74" pos:column="21">ci_copy<pos:position pos:line="74" pos:column="28"/></name><operator pos:line="74" pos:column="28">-&gt;<pos:position pos:line="74" pos:column="33"/></operator><name pos:line="74" pos:column="30">children_num<pos:position pos:line="74" pos:column="42"/></name></name></expr>;<pos:position pos:line="74" pos:column="43"/></condition> <incr><expr><name pos:line="74" pos:column="44">i<pos:position pos:line="74" pos:column="45"/></name><operator pos:line="74" pos:column="45">++<pos:position pos:line="74" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="74" pos:column="48"/></control>
    <block pos:line="75" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="76" pos:column="7">oconfig_item_t<pos:position pos:line="76" pos:column="21"/></name> <modifier pos:line="76" pos:column="22">*<pos:position pos:line="76" pos:column="23"/></modifier></type><name pos:line="76" pos:column="23">child<pos:position pos:line="76" pos:column="28"/></name></decl>;<pos:position pos:line="76" pos:column="29"/></decl_stmt>
      
      <expr_stmt><expr><name pos:line="78" pos:column="7">child<pos:position pos:line="78" pos:column="12"/></name> <operator pos:line="78" pos:column="13">=<pos:position pos:line="78" pos:column="14"/></operator> <call><name pos:line="78" pos:column="15">oconfig_clone<pos:position pos:line="78" pos:column="28"/></name> <argument_list pos:line="78" pos:column="29">(<argument><expr><name><name pos:line="78" pos:column="30">ci_orig<pos:position pos:line="78" pos:column="37"/></name><operator pos:line="78" pos:column="37">-&gt;<pos:position pos:line="78" pos:column="42"/></operator><name pos:line="78" pos:column="39">children<pos:position pos:line="78" pos:column="47"/></name></name> <operator pos:line="78" pos:column="48">+<pos:position pos:line="78" pos:column="49"/></operator> <name pos:line="78" pos:column="50">i<pos:position pos:line="78" pos:column="51"/></name></expr></argument>)<pos:position pos:line="78" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="53"/></expr_stmt>
      <if pos:line="79" pos:column="7">if <condition pos:line="79" pos:column="10">(<expr><name pos:line="79" pos:column="11">child<pos:position pos:line="79" pos:column="16"/></name> <operator pos:line="79" pos:column="17">==<pos:position pos:line="79" pos:column="19"/></operator> <name pos:line="79" pos:column="20">NULL<pos:position pos:line="79" pos:column="24"/></name></expr>)<pos:position pos:line="79" pos:column="25"/></condition><then pos:line="79" pos:column="25">
      <block pos:line="80" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="81" pos:column="9">oconfig_free<pos:position pos:line="81" pos:column="21"/></name> <argument_list pos:line="81" pos:column="22">(<argument><expr><name pos:line="81" pos:column="23">ci_copy<pos:position pos:line="81" pos:column="30"/></name></expr></argument>)<pos:position pos:line="81" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="32"/></expr_stmt>
	<return pos:line="82" pos:column="9">return <expr><operator pos:line="82" pos:column="16">(<pos:position pos:line="82" pos:column="17"/></operator><name pos:line="82" pos:column="17">NULL<pos:position pos:line="82" pos:column="21"/></name><operator pos:line="82" pos:column="21">)<pos:position pos:line="82" pos:column="22"/></operator></expr>;<pos:position pos:line="82" pos:column="23"/></return>
      }<pos:position pos:line="83" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="84" pos:column="7">child<pos:position pos:line="84" pos:column="12"/></name><operator pos:line="84" pos:column="12">-&gt;<pos:position pos:line="84" pos:column="17"/></operator><name pos:line="84" pos:column="14">parent<pos:position pos:line="84" pos:column="20"/></name></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <name pos:line="84" pos:column="23">ci_copy<pos:position pos:line="84" pos:column="30"/></name></expr>;<pos:position pos:line="84" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="85" pos:column="7">ci_copy<pos:position pos:line="85" pos:column="14"/></name><operator pos:line="85" pos:column="14">-&gt;<pos:position pos:line="85" pos:column="19"/></operator><name pos:line="85" pos:column="16">children<pos:position pos:line="85" pos:column="24"/></name><index pos:line="85" pos:column="24">[<expr><name pos:line="85" pos:column="25">i<pos:position pos:line="85" pos:column="26"/></name></expr>]<pos:position pos:line="85" pos:column="27"/></index></name> <operator pos:line="85" pos:column="28">=<pos:position pos:line="85" pos:column="29"/></operator> <operator pos:line="85" pos:column="30">*<pos:position pos:line="85" pos:column="31"/></operator><name pos:line="85" pos:column="31">child<pos:position pos:line="85" pos:column="36"/></name></expr>;<pos:position pos:line="85" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="86" pos:column="7">free<pos:position pos:line="86" pos:column="11"/></name> <argument_list pos:line="86" pos:column="12">(<argument><expr><name pos:line="86" pos:column="13">child<pos:position pos:line="86" pos:column="18"/></name></expr></argument>)<pos:position pos:line="86" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></for> <comment type="block" pos:line="87" pos:column="7">/* for (i = 0; i &lt; ci_copy-&gt;children_num; i++) */</comment>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if> <comment type="block" pos:line="88" pos:column="5">/* }}} if (ci_orig-&gt;children_num &gt; 0) */</comment>

  <return pos:line="90" pos:column="3">return <expr><operator pos:line="90" pos:column="10">(<pos:position pos:line="90" pos:column="11"/></operator><name pos:line="90" pos:column="11">ci_copy<pos:position pos:line="90" pos:column="18"/></name><operator pos:line="90" pos:column="18">)<pos:position pos:line="90" pos:column="19"/></operator></expr>;<pos:position pos:line="90" pos:column="20"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

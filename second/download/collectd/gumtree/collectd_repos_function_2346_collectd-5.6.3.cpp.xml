<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2346_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">subst_string<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">buf<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">size_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">buflen<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">string<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                   <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">needle<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">replacement<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list> <block pos:line="2" pos:column="65">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">needle_len<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">i<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">buf<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">==<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">)<pos:position pos:line="6" pos:column="20"/></operator> <operator pos:line="6" pos:column="21">||<pos:position pos:line="6" pos:column="23"/></operator> <operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">string<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">==<pos:position pos:line="6" pos:column="34"/></operator> <name pos:line="6" pos:column="35">NULL<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">)<pos:position pos:line="6" pos:column="40"/></operator> <operator pos:line="6" pos:column="41">||<pos:position pos:line="6" pos:column="43"/></operator> <operator pos:line="6" pos:column="44">(<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="45">needle<pos:position pos:line="6" pos:column="51"/></name> <operator pos:line="6" pos:column="52">==<pos:position pos:line="6" pos:column="54"/></operator> <name pos:line="6" pos:column="55">NULL<pos:position pos:line="6" pos:column="59"/></name><operator pos:line="6" pos:column="59">)<pos:position pos:line="6" pos:column="60"/></operator> <operator pos:line="6" pos:column="61">||<pos:position pos:line="6" pos:column="63"/></operator>
      <operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">replacement<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">==<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">)<pos:position pos:line="7" pos:column="28"/></operator></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">)<pos:position pos:line="8" pos:column="18"/></operator></expr>;<pos:position pos:line="8" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">needle_len<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">strlen<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">needle<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">sstrncpy<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">buf<pos:position pos:line="11" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="17">string<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">buflen<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* Limit the loop to prevent endless loops. */</comment>
  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init><expr><name pos:line="14" pos:column="8">i<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></init> <condition><expr><name pos:line="14" pos:column="15">i<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&lt;<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="19">buflen<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></condition> <incr><expr><name pos:line="14" pos:column="27">i<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">++<pos:position pos:line="14" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="31"/></control> <block pos:line="14" pos:column="32">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name></type> <name><name pos:line="15" pos:column="10">temp<pos:position pos:line="15" pos:column="14"/></name><index pos:line="15" pos:column="14">[<expr><name pos:line="15" pos:column="15">buflen<pos:position pos:line="15" pos:column="21"/></name></expr>]<pos:position pos:line="15" pos:column="22"/></index></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">begin_ptr<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">size_t<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">begin<pos:position pos:line="17" pos:column="17"/></name></decl>;<pos:position pos:line="17" pos:column="18"/></decl_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* Find `needle' in `buf'. */</comment>
    <expr_stmt><expr><name pos:line="20" pos:column="5">begin_ptr<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">strstr<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">buf<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="29">needle<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">begin_ptr<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">==<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">NULL<pos:position pos:line="21" pos:column="26"/></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27">
      <block type="pseudo"><break pos:line="22" pos:column="7">break;<pos:position pos:line="22" pos:column="13"/></break></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/* Calculate the start offset. */</comment>
    <expr_stmt><expr><name pos:line="25" pos:column="5">begin<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <name pos:line="25" pos:column="13">begin_ptr<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">-<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">buf<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* Substitute the region using `subst'. The result is stored in
     * `temp'. */</comment>
    <expr_stmt><expr><name pos:line="29" pos:column="5">begin_ptr<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator>
        <call><name pos:line="30" pos:column="9">subst<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><name pos:line="30" pos:column="15">temp<pos:position pos:line="30" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="21">buflen<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="29">buf<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">begin<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">begin<pos:position pos:line="30" pos:column="46"/></name> <operator pos:line="30" pos:column="47">+<pos:position pos:line="30" pos:column="48"/></operator> <name pos:line="30" pos:column="49">needle_len<pos:position pos:line="30" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="61">replacement<pos:position pos:line="30" pos:column="72"/></name></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="74"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">begin_ptr<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">==<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">NULL<pos:position pos:line="31" pos:column="26"/></name></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27"> <block pos:line="31" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">WARNING<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><literal type="string" pos:line="32" pos:column="15">"subst_string: subst failed."<pos:position pos:line="32" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>
      <break pos:line="33" pos:column="7">break;<pos:position pos:line="33" pos:column="13"/></break>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="36" pos:column="5">/* Copy the new string in `temp' to `buf' for the next round. */</comment>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">strncpy<pos:position pos:line="37" pos:column="12"/></name><argument_list pos:line="37" pos:column="12">(<argument><expr><name pos:line="37" pos:column="13">buf<pos:position pos:line="37" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="18">temp<pos:position pos:line="37" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="24">buflen<pos:position pos:line="37" pos:column="30"/></name></expr></argument>)<pos:position pos:line="37" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></for>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">i<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">&gt;=<pos:position pos:line="40" pos:column="14"/></operator> <name pos:line="40" pos:column="12">buflen<pos:position pos:line="40" pos:column="18"/></name></expr>)<pos:position pos:line="40" pos:column="19"/></condition><then pos:line="40" pos:column="19"> <block pos:line="40" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">WARNING<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><literal type="string" pos:line="41" pos:column="13">"subst_string: Loop exited after %zu iterations: "<pos:position pos:line="41" pos:column="63"/></literal>
            <literal type="string" pos:line="42" pos:column="13">"string = %s; needle = %s; replacement = %s;"<pos:position pos:line="42" pos:column="58"/></literal></expr></argument>,
            <argument><expr><name pos:line="43" pos:column="13">i<pos:position pos:line="43" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="16">string<pos:position pos:line="43" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="24">needle<pos:position pos:line="43" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="32">replacement<pos:position pos:line="43" pos:column="43"/></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <return pos:line="46" pos:column="3">return <expr><operator pos:line="46" pos:column="10">(<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">buf<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">)<pos:position pos:line="46" pos:column="15"/></operator></expr>;<pos:position pos:line="46" pos:column="16"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1105_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">multi2_read<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">name<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">FILE<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">fh<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <block pos:line="1" pos:column="52">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buffer<pos:position pos:line="2" pos:column="14"/></name><index pos:line="2" pos:column="14">[<expr><literal type="number" pos:line="2" pos:column="15">1024<pos:position pos:line="2" pos:column="19"/></literal></expr>]<pos:position pos:line="2" pos:column="20"/></index></name></decl>;<pos:position pos:line="2" pos:column="21"/></decl_stmt>
  <comment type="block" pos:line="3" pos:column="3">/* OpenVPN-2.4 has 11 fields of data + 2 fields for "HEADER" and "CLIENT_LIST"
   * So, set array size to 20 elements, to support future extensions.
   */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name><name pos:line="6" pos:column="9">fields<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[<expr><literal type="number" pos:line="6" pos:column="16">20<pos:position pos:line="6" pos:column="18"/></literal></expr>]<pos:position pos:line="6" pos:column="19"/></index></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">max_fields<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><call><name pos:line="7" pos:column="26">STATIC_ARRAY_SIZE<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><name pos:line="7" pos:column="44">fields<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">long<pos:position pos:line="8" pos:column="7"/></name> <name pos:line="8" pos:column="8">long<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">sum_users<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">_Bool<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">found_header<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">idx_cname<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">idx_bytes_recv<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">idx_bytes_sent<pos:position pos:line="13" pos:column="21"/></name> <init pos:line="13" pos:column="22">= <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">columns<pos:position pos:line="14" pos:column="14"/></name> <init pos:line="14" pos:column="15">= <expr><literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>

  <while pos:line="16" pos:column="3">while <condition pos:line="16" pos:column="9">(<expr><call><name pos:line="16" pos:column="10">fgets<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">buffer<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="24">sizeof<argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">buffer<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">fh<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call> <operator pos:line="16" pos:column="44">!=<pos:position pos:line="16" pos:column="46"/></operator> <name pos:line="16" pos:column="47">NULL<pos:position pos:line="16" pos:column="51"/></name></expr>)<pos:position pos:line="16" pos:column="52"/></condition> <block pos:line="16" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">fields_num<pos:position pos:line="17" pos:column="19"/></name> <init pos:line="17" pos:column="20">= <expr><call><name pos:line="17" pos:column="22">openvpn_strsplit<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">buffer<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">fields<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">max_fields<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="67"/></decl_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* Try to find section header */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">found_header<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">==<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27"> <block pos:line="20" pos:column="28">{
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name pos:line="21" pos:column="11">fields_num<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">&lt;<pos:position pos:line="21" pos:column="26"/></operator> <literal type="number" pos:line="21" pos:column="24">2<pos:position pos:line="21" pos:column="25"/></literal></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26">
        <block type="pseudo"><continue pos:line="22" pos:column="9">continue;<pos:position pos:line="22" pos:column="18"/></continue></block></then></if>
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><call><name pos:line="23" pos:column="11">strcmp<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name><name pos:line="23" pos:column="18">fields<pos:position pos:line="23" pos:column="24"/></name><index pos:line="23" pos:column="24">[<expr><literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal></expr>]<pos:position pos:line="23" pos:column="27"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="29">"HEADER"<pos:position pos:line="23" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call> <operator pos:line="23" pos:column="39">!=<pos:position pos:line="23" pos:column="41"/></operator> <literal type="number" pos:line="23" pos:column="42">0<pos:position pos:line="23" pos:column="43"/></literal></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44">
        <block type="pseudo"><continue pos:line="24" pos:column="9">continue;<pos:position pos:line="24" pos:column="18"/></continue></block></then></if>
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><call><name pos:line="25" pos:column="11">strcmp<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name><name pos:line="25" pos:column="18">fields<pos:position pos:line="25" pos:column="24"/></name><index pos:line="25" pos:column="24">[<expr><literal type="number" pos:line="25" pos:column="25">1<pos:position pos:line="25" pos:column="26"/></literal></expr>]<pos:position pos:line="25" pos:column="27"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="29">"CLIENT_LIST"<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call> <operator pos:line="25" pos:column="44">!=<pos:position pos:line="25" pos:column="46"/></operator> <literal type="number" pos:line="25" pos:column="47">0<pos:position pos:line="25" pos:column="48"/></literal></expr>)<pos:position pos:line="25" pos:column="49"/></condition><then pos:line="25" pos:column="49">
        <block type="pseudo"><continue pos:line="26" pos:column="9">continue;<pos:position pos:line="26" pos:column="18"/></continue></block></then></if>

      <for pos:line="28" pos:column="7">for <control pos:line="28" pos:column="11">(<init><decl><type><name pos:line="28" pos:column="12">int<pos:position pos:line="28" pos:column="15"/></name></type> <name pos:line="28" pos:column="16">i<pos:position pos:line="28" pos:column="17"/></name> <init pos:line="28" pos:column="18">= <expr><literal type="number" pos:line="28" pos:column="20">2<pos:position pos:line="28" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="22"/></init> <condition><expr><name pos:line="28" pos:column="23">i<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">&lt;<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="27">fields_num<pos:position pos:line="28" pos:column="37"/></name></expr>;<pos:position pos:line="28" pos:column="38"/></condition> <incr><expr><name pos:line="28" pos:column="39">i<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">++<pos:position pos:line="28" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="43"/></control> <block pos:line="28" pos:column="44">{
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name pos:line="29" pos:column="13">strcmp<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name><name pos:line="29" pos:column="20">fields<pos:position pos:line="29" pos:column="26"/></name><index pos:line="29" pos:column="26">[<expr><name pos:line="29" pos:column="27">i<pos:position pos:line="29" pos:column="28"/></name></expr>]<pos:position pos:line="29" pos:column="29"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="31">"Common Name"<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call> <operator pos:line="29" pos:column="46">==<pos:position pos:line="29" pos:column="48"/></operator> <literal type="number" pos:line="29" pos:column="49">0<pos:position pos:line="29" pos:column="50"/></literal></expr>)<pos:position pos:line="29" pos:column="51"/></condition><then pos:line="29" pos:column="51"> <block pos:line="29" pos:column="52">{
          <expr_stmt><expr><name pos:line="30" pos:column="11">idx_cname<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">i<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">-<pos:position pos:line="30" pos:column="26"/></operator> <literal type="number" pos:line="30" pos:column="27">1<pos:position pos:line="30" pos:column="28"/></literal></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then> <elseif pos:line="31" pos:column="11">else <if pos:line="31" pos:column="16">if <condition pos:line="31" pos:column="19">(<expr><call><name pos:line="31" pos:column="20">strcmp<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name><name pos:line="31" pos:column="27">fields<pos:position pos:line="31" pos:column="33"/></name><index pos:line="31" pos:column="33">[<expr><name pos:line="31" pos:column="34">i<pos:position pos:line="31" pos:column="35"/></name></expr>]<pos:position pos:line="31" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="38">"Bytes Received"<pos:position pos:line="31" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></call> <operator pos:line="31" pos:column="56">==<pos:position pos:line="31" pos:column="58"/></operator> <literal type="number" pos:line="31" pos:column="59">0<pos:position pos:line="31" pos:column="60"/></literal></expr>)<pos:position pos:line="31" pos:column="61"/></condition><then pos:line="31" pos:column="61"> <block pos:line="31" pos:column="62">{
          <expr_stmt><expr><name pos:line="32" pos:column="11">idx_bytes_recv<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="28">i<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">-<pos:position pos:line="32" pos:column="31"/></operator> <literal type="number" pos:line="32" pos:column="32">1<pos:position pos:line="32" pos:column="33"/></literal></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if></elseif> <elseif pos:line="33" pos:column="11">else <if pos:line="33" pos:column="16">if <condition pos:line="33" pos:column="19">(<expr><call><name pos:line="33" pos:column="20">strcmp<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name><name pos:line="33" pos:column="27">fields<pos:position pos:line="33" pos:column="33"/></name><index pos:line="33" pos:column="33">[<expr><name pos:line="33" pos:column="34">i<pos:position pos:line="33" pos:column="35"/></name></expr>]<pos:position pos:line="33" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="38">"Bytes Sent"<pos:position pos:line="33" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call> <operator pos:line="33" pos:column="52">==<pos:position pos:line="33" pos:column="54"/></operator> <literal type="number" pos:line="33" pos:column="55">0<pos:position pos:line="33" pos:column="56"/></literal></expr>)<pos:position pos:line="33" pos:column="57"/></condition><then pos:line="33" pos:column="57"> <block pos:line="33" pos:column="58">{
          <expr_stmt><expr><name pos:line="34" pos:column="11">idx_bytes_sent<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">i<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">-<pos:position pos:line="34" pos:column="31"/></operator> <literal type="number" pos:line="34" pos:column="32">1<pos:position pos:line="34" pos:column="33"/></literal></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif></if>
      }<pos:position pos:line="36" pos:column="8"/></block></for>

      <expr_stmt><expr><call><name pos:line="38" pos:column="7">DEBUG<pos:position pos:line="38" pos:column="12"/></name><argument_list pos:line="38" pos:column="12">(<argument><expr><literal type="string" pos:line="38" pos:column="13">"openvpn plugin: found MULTI v2/v3 HEADER. "<pos:position pos:line="38" pos:column="57"/></literal>
            <literal type="string" pos:line="39" pos:column="13">"Column idx: cname: %d, bytes_recv: %d, bytes_sent: %d"<pos:position pos:line="39" pos:column="68"/></literal></expr></argument>,
            <argument><expr><name pos:line="40" pos:column="13">idx_cname<pos:position pos:line="40" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="24">idx_bytes_recv<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="40">idx_bytes_sent<pos:position pos:line="40" pos:column="54"/></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>

      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><name pos:line="42" pos:column="11">idx_cname<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">==<pos:position pos:line="42" pos:column="23"/></operator> <literal type="number" pos:line="42" pos:column="24">0<pos:position pos:line="42" pos:column="25"/></literal> <operator pos:line="42" pos:column="26">||<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="29">idx_bytes_recv<pos:position pos:line="42" pos:column="43"/></name> <operator pos:line="42" pos:column="44">==<pos:position pos:line="42" pos:column="46"/></operator> <literal type="number" pos:line="42" pos:column="47">0<pos:position pos:line="42" pos:column="48"/></literal> <operator pos:line="42" pos:column="49">||<pos:position pos:line="42" pos:column="51"/></operator> <name pos:line="42" pos:column="52">idx_bytes_sent<pos:position pos:line="42" pos:column="66"/></name> <operator pos:line="42" pos:column="67">==<pos:position pos:line="42" pos:column="69"/></operator> <literal type="number" pos:line="42" pos:column="70">0<pos:position pos:line="42" pos:column="71"/></literal></expr>)<pos:position pos:line="42" pos:column="72"/></condition><then pos:line="42" pos:column="72">
        <block type="pseudo"><break pos:line="43" pos:column="9">break;<pos:position pos:line="43" pos:column="15"/></break></block></then></if>

      <comment type="block" pos:line="45" pos:column="7">/* Data row has 1 field ("HEADER") less than header row */</comment>
      <expr_stmt><expr><name pos:line="46" pos:column="7">columns<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <name pos:line="46" pos:column="17">fields_num<pos:position pos:line="46" pos:column="27"/></name> <operator pos:line="46" pos:column="28">-<pos:position pos:line="46" pos:column="29"/></operator> <literal type="number" pos:line="46" pos:column="30">1<pos:position pos:line="46" pos:column="31"/></literal></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>

      <expr_stmt><expr><name pos:line="48" pos:column="7">found_header<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <literal type="number" pos:line="48" pos:column="22">1<pos:position pos:line="48" pos:column="23"/></literal></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt>
      <continue pos:line="49" pos:column="7">continue;<pos:position pos:line="49" pos:column="16"/></continue>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="52" pos:column="5">/* Header already found. Check if the line is the section data.
     * If no match, then section was finished and there is no more data.
     * Empty section is OK too.
     */</comment>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">fields_num<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">==<pos:position pos:line="56" pos:column="22"/></operator> <literal type="number" pos:line="56" pos:column="23">0<pos:position pos:line="56" pos:column="24"/></literal> <operator pos:line="56" pos:column="25">||<pos:position pos:line="56" pos:column="27"/></operator> <call><name pos:line="56" pos:column="28">strcmp<pos:position pos:line="56" pos:column="34"/></name><argument_list pos:line="56" pos:column="34">(<argument><expr><name><name pos:line="56" pos:column="35">fields<pos:position pos:line="56" pos:column="41"/></name><index pos:line="56" pos:column="41">[<expr><literal type="number" pos:line="56" pos:column="42">0<pos:position pos:line="56" pos:column="43"/></literal></expr>]<pos:position pos:line="56" pos:column="44"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="46">"CLIENT_LIST"<pos:position pos:line="56" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="60"/></argument_list></call> <operator pos:line="56" pos:column="61">!=<pos:position pos:line="56" pos:column="63"/></operator> <literal type="number" pos:line="56" pos:column="64">0<pos:position pos:line="56" pos:column="65"/></literal></expr>)<pos:position pos:line="56" pos:column="66"/></condition><then pos:line="56" pos:column="66">
      <block type="pseudo"><break pos:line="57" pos:column="7">break;<pos:position pos:line="57" pos:column="13"/></break></block></then></if>

    <comment type="block" pos:line="59" pos:column="5">/* Check if the data line fields count matches header line. */</comment>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">fields_num<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">!=<pos:position pos:line="60" pos:column="22"/></operator> <name pos:line="60" pos:column="23">columns<pos:position pos:line="60" pos:column="30"/></name></expr>)<pos:position pos:line="60" pos:column="31"/></condition><then pos:line="60" pos:column="31"> <block pos:line="60" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">ERROR<pos:position pos:line="61" pos:column="12"/></name><argument_list pos:line="61" pos:column="12">(<argument><expr><literal type="string" pos:line="61" pos:column="13">"openvpn plugin: File format error in instance %s: Fields count "<pos:position pos:line="61" pos:column="78"/></literal>
            <literal type="string" pos:line="62" pos:column="13">"mismatch."<pos:position pos:line="62" pos:column="24"/></literal></expr></argument>,
            <argument><expr><name pos:line="63" pos:column="13">name<pos:position pos:line="63" pos:column="17"/></name></expr></argument>)<pos:position pos:line="63" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="19"/></expr_stmt>
      <return pos:line="64" pos:column="7">return <expr><operator pos:line="64" pos:column="14">-<pos:position pos:line="64" pos:column="15"/></operator><literal type="number" pos:line="64" pos:column="15">1<pos:position pos:line="64" pos:column="16"/></literal></expr>;<pos:position pos:line="64" pos:column="17"/></return>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="67" pos:column="5">DEBUG<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><literal type="string" pos:line="67" pos:column="11">"openvpn plugin: found MULTI v2/v3 CLIENT_LIST. "<pos:position pos:line="67" pos:column="60"/></literal>
          <literal type="string" pos:line="68" pos:column="11">"Columns: cname: %s, bytes_recv: %s, bytes_sent: %s"<pos:position pos:line="68" pos:column="63"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="69" pos:column="11">fields<pos:position pos:line="69" pos:column="17"/></name><index pos:line="69" pos:column="17">[<expr><name pos:line="69" pos:column="18">idx_cname<pos:position pos:line="69" pos:column="27"/></name></expr>]<pos:position pos:line="69" pos:column="28"/></index></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="30">fields<pos:position pos:line="69" pos:column="36"/></name><index pos:line="69" pos:column="36">[<expr><name pos:line="69" pos:column="37">idx_bytes_recv<pos:position pos:line="69" pos:column="51"/></name></expr>]<pos:position pos:line="69" pos:column="52"/></index></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="54">fields<pos:position pos:line="69" pos:column="60"/></name><index pos:line="69" pos:column="60">[<expr><name pos:line="69" pos:column="61">idx_bytes_sent<pos:position pos:line="69" pos:column="75"/></name></expr>]<pos:position pos:line="69" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="69" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="78"/></expr_stmt>

    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">collect_user_count<pos:position pos:line="71" pos:column="27"/></name></expr>)<pos:position pos:line="71" pos:column="28"/></condition><then pos:line="71" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="7">sum_users<pos:position pos:line="72" pos:column="16"/></name> <operator pos:line="72" pos:column="17">+=<pos:position pos:line="72" pos:column="19"/></operator> <literal type="number" pos:line="72" pos:column="20">1<pos:position pos:line="72" pos:column="21"/></literal></expr>;<pos:position pos:line="72" pos:column="22"/></expr_stmt></block></then></if>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">collect_individual_users<pos:position pos:line="74" pos:column="33"/></name></expr>)<pos:position pos:line="74" pos:column="34"/></condition><then pos:line="74" pos:column="34"> <block pos:line="74" pos:column="35">{
      <if pos:line="75" pos:column="7">if <condition pos:line="75" pos:column="10">(<expr><name pos:line="75" pos:column="11">new_naming_schema<pos:position pos:line="75" pos:column="28"/></name></expr>)<pos:position pos:line="75" pos:column="29"/></condition><then pos:line="75" pos:column="29"> <block pos:line="75" pos:column="30">{
        <comment type="block" pos:line="76" pos:column="9">/* plugin inst = file name, type inst = fields[1] */</comment>
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">iostats_submit<pos:position pos:line="77" pos:column="23"/></name><argument_list pos:line="77" pos:column="23">(<argument><expr><name pos:line="77" pos:column="24">name<pos:position pos:line="77" pos:column="28"/></name></expr></argument>,                           <comment type="block" pos:line="77" pos:column="56">/* vpn instance     */</comment>
                       <argument><expr><name><name pos:line="78" pos:column="24">fields<pos:position pos:line="78" pos:column="30"/></name><index pos:line="78" pos:column="30">[<expr><name pos:line="78" pos:column="31">idx_cname<pos:position pos:line="78" pos:column="40"/></name></expr>]<pos:position pos:line="78" pos:column="41"/></index></name></expr></argument>,              <comment type="block" pos:line="78" pos:column="56">/* "Common Name"    */</comment>
                       <argument><expr><call><name pos:line="79" pos:column="24">atoll<pos:position pos:line="79" pos:column="29"/></name><argument_list pos:line="79" pos:column="29">(<argument><expr><name><name pos:line="79" pos:column="30">fields<pos:position pos:line="79" pos:column="36"/></name><index pos:line="79" pos:column="36">[<expr><name pos:line="79" pos:column="37">idx_bytes_recv<pos:position pos:line="79" pos:column="51"/></name></expr>]<pos:position pos:line="79" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="79" pos:column="53"/></argument_list></call></expr></argument>,  <comment type="block" pos:line="79" pos:column="56">/* "Bytes Received" */</comment>
                       <argument><expr><call><name pos:line="80" pos:column="24">atoll<pos:position pos:line="80" pos:column="29"/></name><argument_list pos:line="80" pos:column="29">(<argument><expr><name><name pos:line="80" pos:column="30">fields<pos:position pos:line="80" pos:column="36"/></name><index pos:line="80" pos:column="36">[<expr><name pos:line="80" pos:column="37">idx_bytes_sent<pos:position pos:line="80" pos:column="51"/></name></expr>]<pos:position pos:line="80" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="80" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="55"/></expr_stmt> <comment type="block" pos:line="80" pos:column="56">/* "Bytes Sent"     */</comment>
      }<pos:position pos:line="81" pos:column="8"/></block></then> <else pos:line="81" pos:column="9">else <block pos:line="81" pos:column="14">{
        <comment type="block" pos:line="82" pos:column="9">/* plugin inst = fields[idx_cname], type inst = "" */</comment>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">iostats_submit<pos:position pos:line="83" pos:column="23"/></name><argument_list pos:line="83" pos:column="23">(<argument><expr><name><name pos:line="83" pos:column="24">fields<pos:position pos:line="83" pos:column="30"/></name><index pos:line="83" pos:column="30">[<expr><name pos:line="83" pos:column="31">idx_cname<pos:position pos:line="83" pos:column="40"/></name></expr>]<pos:position pos:line="83" pos:column="41"/></index></name></expr></argument>, <comment type="block" pos:line="83" pos:column="43">/*              "Common Name"    */</comment>
                       <argument><expr><name pos:line="84" pos:column="24">NULL<pos:position pos:line="84" pos:column="28"/></name></expr></argument>,              <comment type="block" pos:line="84" pos:column="43">/* unused when in multimode      */</comment>
                       <argument><expr><call><name pos:line="85" pos:column="24">atoll<pos:position pos:line="85" pos:column="29"/></name><argument_list pos:line="85" pos:column="29">(<argument><expr><name><name pos:line="85" pos:column="30">fields<pos:position pos:line="85" pos:column="36"/></name><index pos:line="85" pos:column="36">[<expr><name pos:line="85" pos:column="37">idx_bytes_recv<pos:position pos:line="85" pos:column="51"/></name></expr>]<pos:position pos:line="85" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="53"/></argument_list></call></expr></argument>,  <comment type="block" pos:line="85" pos:column="56">/* "Bytes Received" */</comment>
                       <argument><expr><call><name pos:line="86" pos:column="24">atoll<pos:position pos:line="86" pos:column="29"/></name><argument_list pos:line="86" pos:column="29">(<argument><expr><name><name pos:line="86" pos:column="30">fields<pos:position pos:line="86" pos:column="36"/></name><index pos:line="86" pos:column="36">[<expr><name pos:line="86" pos:column="37">idx_bytes_sent<pos:position pos:line="86" pos:column="51"/></name></expr>]<pos:position pos:line="86" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="86" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="55"/></expr_stmt> <comment type="block" pos:line="86" pos:column="56">/* "Bytes Sent"     */</comment>
      }<pos:position pos:line="87" pos:column="8"/></block></else></if>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>
  }<pos:position pos:line="89" pos:column="4"/></block></while>

  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><call><name pos:line="91" pos:column="7">ferror<pos:position pos:line="91" pos:column="13"/></name><argument_list pos:line="91" pos:column="13">(<argument><expr><name pos:line="91" pos:column="14">fh<pos:position pos:line="91" pos:column="16"/></name></expr></argument>)<pos:position pos:line="91" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="18"/></condition><then pos:line="91" pos:column="18">
    <block type="pseudo"><return pos:line="92" pos:column="5">return <expr><operator pos:line="92" pos:column="12">-<pos:position pos:line="92" pos:column="13"/></operator><literal type="number" pos:line="92" pos:column="13">1<pos:position pos:line="92" pos:column="14"/></literal></expr>;<pos:position pos:line="92" pos:column="15"/></return></block></then></if>

  <if pos:line="94" pos:column="3">if <condition pos:line="94" pos:column="6">(<expr><name pos:line="94" pos:column="7">found_header<pos:position pos:line="94" pos:column="19"/></name> <operator pos:line="94" pos:column="20">==<pos:position pos:line="94" pos:column="22"/></operator> <literal type="number" pos:line="94" pos:column="23">0<pos:position pos:line="94" pos:column="24"/></literal></expr>)<pos:position pos:line="94" pos:column="25"/></condition><then pos:line="94" pos:column="25"> <block pos:line="94" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">NOTICE<pos:position pos:line="95" pos:column="11"/></name><argument_list pos:line="95" pos:column="11">(<argument><expr><literal type="string" pos:line="95" pos:column="12">"openvpn plugin: Unknown file format in instance %s, please "<pos:position pos:line="95" pos:column="73"/></literal>
           <literal type="string" pos:line="96" pos:column="12">"report this as bug. Make sure to include "<pos:position pos:line="96" pos:column="55"/></literal>
           <literal type="string" pos:line="97" pos:column="12">"your status file, so the plugin can "<pos:position pos:line="97" pos:column="50"/></literal>
           <literal type="string" pos:line="98" pos:column="12">"be adapted."<pos:position pos:line="98" pos:column="25"/></literal></expr></argument>,
           <argument><expr><name pos:line="99" pos:column="12">name<pos:position pos:line="99" pos:column="16"/></name></expr></argument>)<pos:position pos:line="99" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="18"/></expr_stmt>
    <return pos:line="100" pos:column="5">return <expr><operator pos:line="100" pos:column="12">-<pos:position pos:line="100" pos:column="13"/></operator><literal type="number" pos:line="100" pos:column="13">1<pos:position pos:line="100" pos:column="14"/></literal></expr>;<pos:position pos:line="100" pos:column="15"/></return>
  }<pos:position pos:line="101" pos:column="4"/></block></then></if>

  <if pos:line="103" pos:column="3">if <condition pos:line="103" pos:column="6">(<expr><name pos:line="103" pos:column="7">collect_user_count<pos:position pos:line="103" pos:column="25"/></name></expr>)<pos:position pos:line="103" pos:column="26"/></condition><then pos:line="103" pos:column="26"> <block pos:line="103" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">numusers_submit<pos:position pos:line="104" pos:column="20"/></name><argument_list pos:line="104" pos:column="20">(<argument><expr><name pos:line="104" pos:column="21">name<pos:position pos:line="104" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="27">name<pos:position pos:line="104" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="33">sum_users<pos:position pos:line="104" pos:column="42"/></name></expr></argument>)<pos:position pos:line="104" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="105" pos:column="4"/></block></then></if>

  <return pos:line="107" pos:column="3">return <expr><literal type="number" pos:line="107" pos:column="10">0<pos:position pos:line="107" pos:column="11"/></literal></expr>;<pos:position pos:line="107" pos:column="12"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

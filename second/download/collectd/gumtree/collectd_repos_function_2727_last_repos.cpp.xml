<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2727_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">c_avl_node_t<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">c_avl_node_next<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">c_avl_node_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">n<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <block pos:line="1" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">c_avl_node_t<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">r<pos:position pos:line="2" pos:column="18"/></name></decl>;<pos:position pos:line="2" pos:column="19"/></decl_stmt> <comment type="block" pos:line="2" pos:column="20">/* return node */</comment>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">n<pos:position pos:line="4" pos:column="8"/></name> <operator pos:line="4" pos:column="9">==<pos:position pos:line="4" pos:column="11"/></operator> <name pos:line="4" pos:column="12">NULL<pos:position pos:line="4" pos:column="16"/></name></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17"> <block pos:line="4" pos:column="18">{
    <return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">NULL<pos:position pos:line="5" pos:column="16"/></name></expr>;<pos:position pos:line="5" pos:column="17"/></return>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="8" pos:column="3">/* If we can't descent any further, we have to backtrack to the first
   * parent that's bigger than we, i. e. who's _left_ child we are. */</comment>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">n<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">right<pos:position pos:line="10" pos:column="15"/></name></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">NULL<pos:position pos:line="10" pos:column="23"/></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24"> <block pos:line="10" pos:column="25">{
    <expr_stmt><expr><name pos:line="11" pos:column="5">r<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <name><name pos:line="11" pos:column="9">n<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">parent<pos:position pos:line="11" pos:column="18"/></name></name></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">r<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">!=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">NULL<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator> <operator pos:line="12" pos:column="24">&amp;&amp;<pos:position pos:line="12" pos:column="34"/></operator> <operator pos:line="12" pos:column="27">(<pos:position pos:line="12" pos:column="28"/></operator><name><name pos:line="12" pos:column="28">r<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">parent<pos:position pos:line="12" pos:column="37"/></name></name> <operator pos:line="12" pos:column="38">!=<pos:position pos:line="12" pos:column="40"/></operator> <name pos:line="12" pos:column="41">NULL<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">)<pos:position pos:line="12" pos:column="46"/></operator></expr>)<pos:position pos:line="12" pos:column="47"/></condition> <block pos:line="12" pos:column="48">{
      <if pos:line="13" pos:column="7">if <condition pos:line="13" pos:column="10">(<expr><name><name pos:line="13" pos:column="11">r<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">left<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">==<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">n<pos:position pos:line="13" pos:column="23"/></name></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24">
        <block type="pseudo"><break pos:line="14" pos:column="9">break;<pos:position pos:line="14" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="15" pos:column="7">n<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <name pos:line="15" pos:column="11">r<pos:position pos:line="15" pos:column="12"/></name></expr>;<pos:position pos:line="15" pos:column="13"/></expr_stmt>
      <expr_stmt><expr><name pos:line="16" pos:column="7">r<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <name><name pos:line="16" pos:column="11">n<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">parent<pos:position pos:line="16" pos:column="20"/></name></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></while>

    <comment type="block" pos:line="19" pos:column="5">/* n-&gt;right == NULL &amp;&amp; r == NULL =&gt; t is root and has no next
     * r-&gt;left != n =&gt; r-&gt;right = n =&gt; r-&gt;parent == NULL */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">r<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">==<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">NULL<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator> <operator pos:line="21" pos:column="21">||<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><name><name pos:line="21" pos:column="25">r<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">left<pos:position pos:line="21" pos:column="32"/></name></name> <operator pos:line="21" pos:column="33">!=<pos:position pos:line="21" pos:column="35"/></operator> <name pos:line="21" pos:column="36">n<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">)<pos:position pos:line="21" pos:column="38"/></operator></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39"> <block pos:line="21" pos:column="40">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">assert<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">r<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">==<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">NULL<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">)<pos:position pos:line="22" pos:column="25"/></operator> <operator pos:line="22" pos:column="26">||<pos:position pos:line="22" pos:column="28"/></operator> <operator pos:line="22" pos:column="29">(<pos:position pos:line="22" pos:column="30"/></operator><name><name pos:line="22" pos:column="30">r<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">parent<pos:position pos:line="22" pos:column="39"/></name></name> <operator pos:line="22" pos:column="40">==<pos:position pos:line="22" pos:column="42"/></operator> <name pos:line="22" pos:column="43">NULL<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">)<pos:position pos:line="22" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><name pos:line="23" pos:column="14">NULL<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then> <else pos:line="24" pos:column="7">else <block pos:line="24" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">assert<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name><name pos:line="25" pos:column="14">r<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">left<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">==<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">n<pos:position pos:line="25" pos:column="26"/></name></expr></argument>)<pos:position pos:line="25" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
      <return pos:line="26" pos:column="7">return <expr><name pos:line="26" pos:column="14">r<pos:position pos:line="26" pos:column="15"/></name></expr>;<pos:position pos:line="26" pos:column="16"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></else></if>
  }<pos:position pos:line="28" pos:column="4"/></block></then> <else pos:line="28" pos:column="5">else <block pos:line="28" pos:column="10">{
    <expr_stmt><expr><name pos:line="29" pos:column="5">r<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">=<pos:position pos:line="29" pos:column="8"/></operator> <name><name pos:line="29" pos:column="9">n<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">right<pos:position pos:line="29" pos:column="17"/></name></name></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt>
    <while pos:line="30" pos:column="5">while <condition pos:line="30" pos:column="11">(<expr><name><name pos:line="30" pos:column="12">r<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">left<pos:position pos:line="30" pos:column="19"/></name></name> <operator pos:line="30" pos:column="20">!=<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">NULL<pos:position pos:line="30" pos:column="27"/></name></expr>)<pos:position pos:line="30" pos:column="28"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">r<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <name><name pos:line="31" pos:column="11">r<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">left<pos:position pos:line="31" pos:column="18"/></name></name></expr>;<pos:position pos:line="31" pos:column="19"/></expr_stmt></block></while>
  }<pos:position pos:line="32" pos:column="4"/></block></else></if>

  <return pos:line="34" pos:column="3">return <expr><name pos:line="34" pos:column="10">r<pos:position pos:line="34" pos:column="11"/></name></expr>;<pos:position pos:line="34" pos:column="12"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1361_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fhcount_config<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">key<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">value<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <block pos:line="1" pos:column="63">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name> <init pos:line="2" pos:column="11">= <expr><operator pos:line="2" pos:column="13">-<pos:position pos:line="2" pos:column="14"/></operator><literal type="number" pos:line="2" pos:column="14">1<pos:position pos:line="2" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><call><name pos:line="4" pos:column="7">strcasecmp<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">key<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="23">"ValuesAbsolute"<pos:position pos:line="4" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call> <operator pos:line="4" pos:column="41">==<pos:position pos:line="4" pos:column="43"/></operator> <literal type="number" pos:line="4" pos:column="44">0<pos:position pos:line="4" pos:column="45"/></literal></expr>)<pos:position pos:line="4" pos:column="46"/></condition><then pos:line="4" pos:column="46"> <block pos:line="4" pos:column="47">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">IS_TRUE<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">value<pos:position pos:line="5" pos:column="22"/></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24"> <block pos:line="5" pos:column="25">{
      <expr_stmt><expr><name pos:line="6" pos:column="7">values_absolute<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then> <else pos:line="7" pos:column="7">else <block pos:line="7" pos:column="12">{
      <expr_stmt><expr><name pos:line="8" pos:column="7">values_absolute<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="11" pos:column="5">ret<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <literal type="number" pos:line="11" pos:column="11">0<pos:position pos:line="11" pos:column="12"/></literal></expr>;<pos:position pos:line="11" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then> <elseif pos:line="12" pos:column="5">else <if pos:line="12" pos:column="10">if <condition pos:line="12" pos:column="13">(<expr><call><name pos:line="12" pos:column="14">strcasecmp<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">key<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="30">"ValuesPercentage"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call> <operator pos:line="12" pos:column="50">==<pos:position pos:line="12" pos:column="52"/></operator> <literal type="number" pos:line="12" pos:column="53">0<pos:position pos:line="12" pos:column="54"/></literal></expr>)<pos:position pos:line="12" pos:column="55"/></condition><then pos:line="12" pos:column="55"> <block pos:line="12" pos:column="56">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">IS_TRUE<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">value<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24"> <block pos:line="13" pos:column="25">{
      <expr_stmt><expr><name pos:line="14" pos:column="7">values_percentage<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <else pos:line="15" pos:column="7">else <block pos:line="15" pos:column="12">{
      <expr_stmt><expr><name pos:line="16" pos:column="7">values_percentage<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="19" pos:column="5">ret<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <literal type="number" pos:line="19" pos:column="11">0<pos:position pos:line="19" pos:column="12"/></literal></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="22" pos:column="3">return<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">ret<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">)<pos:position pos:line="22" pos:column="14"/></operator></expr>;<pos:position pos:line="22" pos:column="15"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

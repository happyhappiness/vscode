<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2659_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sread<pos:position pos:line="1" pos:column="10"/></name><parameter_list pos:line="1" pos:column="10">(<parameter><decl><type><name pos:line="1" pos:column="11">int<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">fd<pos:position pos:line="1" pos:column="17"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="19">void<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">buf<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="30">size_t<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">count<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list> <block pos:line="1" pos:column="44">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">ptr<pos:position pos:line="2" pos:column="12"/></name></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">nleft<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ssize_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">status<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">ptr<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">char<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></operator><operator pos:line="6" pos:column="16">)<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">buf<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">nleft<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <name pos:line="7" pos:column="11">count<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>

  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><name pos:line="9" pos:column="10">nleft<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">&gt;<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>)<pos:position pos:line="9" pos:column="20"/></condition> <block pos:line="9" pos:column="21">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">status<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">read<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">fd<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="23">(<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">void<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">*<pos:position pos:line="10" pos:column="30"/></operator><operator pos:line="10" pos:column="30">)<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">ptr<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">nleft<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">status<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&lt;<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal><operator pos:line="12" pos:column="20">)<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="22">&amp;&amp;<pos:position pos:line="12" pos:column="32"/></operator> <operator pos:line="12" pos:column="25">(<pos:position pos:line="12" pos:column="26"/></operator><operator pos:line="12" pos:column="26">(<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">errno<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">==<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">EAGAIN<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">)<pos:position pos:line="12" pos:column="43"/></operator> <operator pos:line="12" pos:column="44">||<pos:position pos:line="12" pos:column="46"/></operator> <operator pos:line="12" pos:column="47">(<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">errno<pos:position pos:line="12" pos:column="53"/></name> <operator pos:line="12" pos:column="54">==<pos:position pos:line="12" pos:column="56"/></operator> <name pos:line="12" pos:column="57">EINTR<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">)<pos:position pos:line="12" pos:column="63"/></operator><operator pos:line="12" pos:column="63">)<pos:position pos:line="12" pos:column="64"/></operator></expr>)<pos:position pos:line="12" pos:column="65"/></condition><then pos:line="12" pos:column="65">
      <block type="pseudo"><continue pos:line="13" pos:column="7">continue;<pos:position pos:line="13" pos:column="16"/></continue></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">status<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">&lt;<pos:position pos:line="15" pos:column="20"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>)<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><name pos:line="16" pos:column="14">status<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">status<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">DEBUG<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><literal type="string" pos:line="19" pos:column="13">"Received EOF from fd %i. "<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">fd<pos:position pos:line="19" pos:column="44"/></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>
      <return pos:line="20" pos:column="7">return <expr><operator pos:line="20" pos:column="14">-<pos:position pos:line="20" pos:column="15"/></operator><literal type="number" pos:line="20" pos:column="15">1<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">assert<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><literal type="number" pos:line="23" pos:column="13">0<pos:position pos:line="23" pos:column="14"/></literal> <operator pos:line="23" pos:column="15">&gt;<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="17">status<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">)<pos:position pos:line="23" pos:column="24"/></operator> <operator pos:line="23" pos:column="25">||<pos:position pos:line="23" pos:column="27"/></operator> <operator pos:line="23" pos:column="28">(<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">nleft<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">&gt;=<pos:position pos:line="23" pos:column="40"/></operator> <operator pos:line="23" pos:column="38">(<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="39">size_t<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">)<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="46">status<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">)<pos:position pos:line="23" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><name pos:line="25" pos:column="5">nleft<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <name pos:line="25" pos:column="13">nleft<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">-<pos:position pos:line="25" pos:column="20"/></operator> <operator pos:line="25" pos:column="21">(<pos:position pos:line="25" pos:column="22"/></operator><operator pos:line="25" pos:column="22">(<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">size_t<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">)<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">status<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">)<pos:position pos:line="25" pos:column="37"/></operator></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">ptr<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <name pos:line="26" pos:column="11">ptr<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">+<pos:position pos:line="26" pos:column="16"/></operator> <operator pos:line="26" pos:column="17">(<pos:position pos:line="26" pos:column="18"/></operator><operator pos:line="26" pos:column="18">(<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">size_t<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">)<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">status<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">)<pos:position pos:line="26" pos:column="33"/></operator></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></while>

  <return pos:line="29" pos:column="3">return <expr><literal type="number" pos:line="29" pos:column="10">0<pos:position pos:line="29" pos:column="11"/></literal></expr>;<pos:position pos:line="29" pos:column="12"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2010_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">cpy_oconfig_to_pyconfig<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">oconfig_item_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">ci<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">PyObject<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">parent<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list> <block pos:line="1" pos:column="80">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">PyObject<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">item<pos:position pos:line="2" pos:column="17"/></name></decl>, <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="20">values<pos:position pos:line="2" pos:column="26"/></name></decl>, <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="29">children<pos:position pos:line="2" pos:column="37"/></name></decl>, <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="40">tmp<pos:position pos:line="2" pos:column="43"/></name></decl>;<pos:position pos:line="2" pos:column="44"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">parent<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">==<pos:position pos:line="4" pos:column="16"/></operator> <name pos:line="4" pos:column="17">NULL<pos:position pos:line="4" pos:column="21"/></name></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="5">parent<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <name pos:line="5" pos:column="14">Py_None<pos:position pos:line="5" pos:column="21"/></name></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="7" pos:column="3">values<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <call><name pos:line="7" pos:column="12">PyTuple_New<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name><name pos:line="7" pos:column="24">ci<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">values_num<pos:position pos:line="7" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt> <comment type="block" pos:line="7" pos:column="41">/* New reference. */</comment>
  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><decl><type><name pos:line="8" pos:column="8">int<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">i<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="18"/></init> <condition><expr><name pos:line="8" pos:column="19">i<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">&lt;<pos:position pos:line="8" pos:column="25"/></operator> <name><name pos:line="8" pos:column="23">ci<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">values_num<pos:position pos:line="8" pos:column="37"/></name></name></expr>;<pos:position pos:line="8" pos:column="38"/></condition> <incr><expr><operator pos:line="8" pos:column="39">++<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">i<pos:position pos:line="8" pos:column="42"/></name></expr></incr>)<pos:position pos:line="8" pos:column="43"/></control> <block pos:line="8" pos:column="44">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">ci<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">values<pos:position pos:line="9" pos:column="19"/></name><index pos:line="9" pos:column="19">[<expr><name pos:line="9" pos:column="20">i<pos:position pos:line="9" pos:column="21"/></name></expr>]<pos:position pos:line="9" pos:column="22"/></index></name><operator pos:line="9" pos:column="22">.<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">type<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">==<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="31">OCONFIG_TYPE_STRING<pos:position pos:line="9" pos:column="50"/></name></expr>)<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51"> <block pos:line="9" pos:column="52">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">PyTuple_SET_ITEM<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">values<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">i<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="35">cpy_string_to_unicode_or_bytes<pos:position pos:line="10" pos:column="65"/></name><argument_list pos:line="10" pos:column="65">(
                                      <argument><expr><name><name pos:line="11" pos:column="39">ci<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">-&gt;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="43">values<pos:position pos:line="11" pos:column="49"/></name><index pos:line="11" pos:column="49">[<expr><name pos:line="11" pos:column="50">i<pos:position pos:line="11" pos:column="51"/></name></expr>]<pos:position pos:line="11" pos:column="52"/></index></name><operator pos:line="11" pos:column="52">.<pos:position pos:line="11" pos:column="53"/></operator><name><name pos:line="11" pos:column="53">value<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">.<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="59">string<pos:position pos:line="11" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">(<expr><name><name pos:line="12" pos:column="16">ci<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">values<pos:position pos:line="12" pos:column="26"/></name><index pos:line="12" pos:column="26">[<expr><name pos:line="12" pos:column="27">i<pos:position pos:line="12" pos:column="28"/></name></expr>]<pos:position pos:line="12" pos:column="29"/></index></name><operator pos:line="12" pos:column="29">.<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">type<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">==<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="38">OCONFIG_TYPE_NUMBER<pos:position pos:line="12" pos:column="57"/></name></expr>)<pos:position pos:line="12" pos:column="58"/></condition><then pos:line="12" pos:column="58"> <block pos:line="12" pos:column="59">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">PyTuple_SET_ITEM<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">values<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">i<pos:position pos:line="13" pos:column="33"/></name></expr></argument>,
                       <argument><expr><call><name pos:line="14" pos:column="24">PyFloat_FromDouble<pos:position pos:line="14" pos:column="42"/></name><argument_list pos:line="14" pos:column="42">(<argument><expr><name><name pos:line="14" pos:column="43">ci<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">values<pos:position pos:line="14" pos:column="53"/></name><index pos:line="14" pos:column="53">[<expr><name pos:line="14" pos:column="54">i<pos:position pos:line="14" pos:column="55"/></name></expr>]<pos:position pos:line="14" pos:column="56"/></index></name><operator pos:line="14" pos:column="56">.<pos:position pos:line="14" pos:column="57"/></operator><name><name pos:line="14" pos:column="57">value<pos:position pos:line="14" pos:column="62"/></name><operator pos:line="14" pos:column="62">.<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="63">number<pos:position pos:line="14" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if></elseif> <elseif pos:line="15" pos:column="7">else <if pos:line="15" pos:column="12">if <condition pos:line="15" pos:column="15">(<expr><name><name pos:line="15" pos:column="16">ci<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">values<pos:position pos:line="15" pos:column="26"/></name><index pos:line="15" pos:column="26">[<expr><name pos:line="15" pos:column="27">i<pos:position pos:line="15" pos:column="28"/></name></expr>]<pos:position pos:line="15" pos:column="29"/></index></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">type<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">==<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="38">OCONFIG_TYPE_BOOLEAN<pos:position pos:line="15" pos:column="58"/></name></expr>)<pos:position pos:line="15" pos:column="59"/></condition><then pos:line="15" pos:column="59"> <block pos:line="15" pos:column="60">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">PyTuple_SET_ITEM<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">values<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="32">i<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="35">PyBool_FromLong<pos:position pos:line="16" pos:column="50"/></name><argument_list pos:line="16" pos:column="50">(<argument><expr><name><name pos:line="16" pos:column="51">ci<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">-&gt;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="55">values<pos:position pos:line="16" pos:column="61"/></name><index pos:line="16" pos:column="61">[<expr><name pos:line="16" pos:column="62">i<pos:position pos:line="16" pos:column="63"/></name></expr>]<pos:position pos:line="16" pos:column="64"/></index></name><operator pos:line="16" pos:column="64">.<pos:position pos:line="16" pos:column="65"/></operator><name><name pos:line="16" pos:column="65">value<pos:position pos:line="16" pos:column="70"/></name><operator pos:line="16" pos:column="70">.<pos:position pos:line="16" pos:column="71"/></operator><name pos:line="16" pos:column="71">boolean<pos:position pos:line="16" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="18" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="20" pos:column="3">tmp<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name pos:line="20" pos:column="9">cpy_string_to_unicode_or_bytes<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><name><name pos:line="20" pos:column="40">ci<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">key<pos:position pos:line="20" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">item<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <call><name pos:line="21" pos:column="10">PyObject_CallFunction<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><operator pos:line="21" pos:column="32">(<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">void<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">*<pos:position pos:line="21" pos:column="39"/></operator><operator pos:line="21" pos:column="39">)<pos:position pos:line="21" pos:column="40"/></operator><operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="41">ConfigType<pos:position pos:line="21" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="53">"NONO"<pos:position pos:line="21" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="61">tmp<pos:position pos:line="21" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="66">parent<pos:position pos:line="21" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="74">values<pos:position pos:line="21" pos:column="80"/></name></expr></argument>,
                               <argument><expr><name pos:line="22" pos:column="32">Py_None<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">item<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">==<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">NULL<pos:position pos:line="23" pos:column="19"/></name></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">NULL<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="25" pos:column="3">children<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">PyTuple_New<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name><name pos:line="25" pos:column="26">ci<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">children_num<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt> <comment type="block" pos:line="25" pos:column="45">/* New reference. */</comment>
  <for pos:line="26" pos:column="3">for <control pos:line="26" pos:column="7">(<init><decl><type><name pos:line="26" pos:column="8">int<pos:position pos:line="26" pos:column="11"/></name></type> <name pos:line="26" pos:column="12">i<pos:position pos:line="26" pos:column="13"/></name> <init pos:line="26" pos:column="14">= <expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="18"/></init> <condition><expr><name pos:line="26" pos:column="19">i<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">&lt;<pos:position pos:line="26" pos:column="25"/></operator> <name><name pos:line="26" pos:column="23">ci<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">children_num<pos:position pos:line="26" pos:column="39"/></name></name></expr>;<pos:position pos:line="26" pos:column="40"/></condition> <incr><expr><operator pos:line="26" pos:column="41">++<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="43">i<pos:position pos:line="26" pos:column="44"/></name></expr></incr>)<pos:position pos:line="26" pos:column="45"/></control> <block pos:line="26" pos:column="46">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">PyTuple_SET_ITEM<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">children<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">i<pos:position pos:line="27" pos:column="33"/></name></expr></argument>,
                     <argument><expr><call><name pos:line="28" pos:column="22">cpy_oconfig_to_pyconfig<pos:position pos:line="28" pos:column="45"/></name><argument_list pos:line="28" pos:column="45">(<argument><expr><name><name pos:line="28" pos:column="46">ci<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">children<pos:position pos:line="28" pos:column="58"/></name></name> <operator pos:line="28" pos:column="59">+<pos:position pos:line="28" pos:column="60"/></operator> <name pos:line="28" pos:column="61">i<pos:position pos:line="28" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="64">item<pos:position pos:line="28" pos:column="68"/></name></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="71"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></for>
  <expr_stmt><expr><name pos:line="30" pos:column="3">tmp<pos:position pos:line="30" pos:column="6"/></name> <operator pos:line="30" pos:column="7">=<pos:position pos:line="30" pos:column="8"/></operator> <operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">Config<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">*<pos:position pos:line="30" pos:column="19"/></operator><operator pos:line="30" pos:column="19">)<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">item<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">)<pos:position pos:line="30" pos:column="25"/></operator><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">children<pos:position pos:line="30" pos:column="35"/></name></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="31" pos:column="3">(<pos:position pos:line="31" pos:column="4"/></operator><operator pos:line="31" pos:column="4">(<pos:position pos:line="31" pos:column="5"/></operator><name pos:line="31" pos:column="5">Config<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">*<pos:position pos:line="31" pos:column="13"/></operator><operator pos:line="31" pos:column="13">)<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">item<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">)<pos:position pos:line="31" pos:column="19"/></operator><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">children<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="32">children<pos:position pos:line="31" pos:column="40"/></name></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">Py_XDECREF<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><name pos:line="32" pos:column="14">tmp<pos:position pos:line="32" pos:column="17"/></name></expr></argument>)<pos:position pos:line="32" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="19"/></expr_stmt>
  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">item<pos:position pos:line="33" pos:column="14"/></name></expr>;<pos:position pos:line="33" pos:column="15"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_467_collectd-4.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">cu_mount_t<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">cu_mount_listmntent<pos:position pos:line="1" pos:column="39"/></name> <parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">void<pos:position pos:line="1" pos:column="45"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">cu_mount_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">last<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><operator pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="29">list<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">tabmntent<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">p<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">mntent<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">mnt<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">tabmntent<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">mntlist<pos:position pos:line="7" pos:column="34"/></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
	<if pos:line="8" pos:column="9">if<condition pos:line="8" pos:column="11">(<expr><call><name pos:line="8" pos:column="12">listmntent<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="24">mntlist<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">COLLECTD_MNTTAB<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="50">NULL<pos:position pos:line="8" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="56">NULL<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call> <operator pos:line="8" pos:column="62">&lt;<pos:position pos:line="8" pos:column="66"/></operator> <literal type="number" pos:line="8" pos:column="64">0<pos:position pos:line="8" pos:column="65"/></literal></expr>)<pos:position pos:line="8" pos:column="66"/></condition><then pos:line="8" pos:column="66"> <block pos:line="8" pos:column="67">{
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">COLLECT_DEBUG<pos:position pos:line="9" pos:column="18"/></name></expr></cpp:if>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">char<pos:position pos:line="10" pos:column="21"/></name></type> <name><name pos:line="10" pos:column="22">errbuf<pos:position pos:line="10" pos:column="28"/></name><index pos:line="10" pos:column="28">[<expr><literal type="number" pos:line="10" pos:column="29">1024<pos:position pos:line="10" pos:column="33"/></literal></expr>]<pos:position pos:line="10" pos:column="34"/></index></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">DEBUG<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><literal type="string" pos:line="11" pos:column="23">"utils_mount: calling listmntent() failed: %s"<pos:position pos:line="11" pos:column="69"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="12" pos:column="33">sstrerror<pos:position pos:line="12" pos:column="42"/></name> <argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">errno<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="51">errbuf<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="59">sizeof <argument_list pos:line="12" pos:column="66">(<argument><expr><name pos:line="12" pos:column="67">errbuf<pos:position pos:line="12" pos:column="73"/></name></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="13" pos:column="8">/* COLLECT_DEBUG */</comment>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<for pos:line="16" pos:column="9">for<control pos:line="16" pos:column="12">(<init><expr><name pos:line="16" pos:column="13">p<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">mntlist<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></init> <condition><expr><name pos:line="16" pos:column="26">p<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></condition> <incr><expr><name pos:line="16" pos:column="29">p<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <name><name pos:line="16" pos:column="33">p<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">next<pos:position pos:line="16" pos:column="40"/></name></name></expr></incr>)<pos:position pos:line="16" pos:column="41"/></control> <block pos:line="16" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">char<pos:position pos:line="17" pos:column="21"/></name> <modifier pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></modifier></type><name pos:line="17" pos:column="23">loop<pos:position pos:line="17" pos:column="27"/></name> <init pos:line="17" pos:column="28">= <expr><name pos:line="17" pos:column="30">NULL<pos:position pos:line="17" pos:column="34"/></name></expr></init></decl>, <modifier pos:line="17" pos:column="36">*<pos:position pos:line="17" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="17" pos:column="37">device<pos:position pos:line="17" pos:column="43"/></name> <init pos:line="17" pos:column="44">= <expr><name pos:line="17" pos:column="46">NULL<pos:position pos:line="17" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="51"/></decl_stmt>

		<expr_stmt><expr><name pos:line="19" pos:column="17">mnt<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <name><name pos:line="19" pos:column="23">p<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">ment<pos:position pos:line="19" pos:column="30"/></name></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">loop<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <call><name pos:line="20" pos:column="24">cu_mount_getoptionvalue<pos:position pos:line="20" pos:column="47"/></name><argument_list pos:line="20" pos:column="47">(<argument><expr><name><name pos:line="20" pos:column="48">mnt<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">mnt_opts<pos:position pos:line="20" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="63">"loop="<pos:position pos:line="20" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="72"/></expr_stmt>
		<if pos:line="21" pos:column="17">if<condition pos:line="21" pos:column="19">(<expr><name pos:line="21" pos:column="20">loop<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">==<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">NULL<pos:position pos:line="21" pos:column="32"/></name></expr>)<pos:position pos:line="21" pos:column="33"/></condition><then pos:line="21" pos:column="33"> <block pos:line="21" pos:column="34">{   <comment type="block" pos:line="21" pos:column="38">/* no loop= mount */</comment>
			<expr_stmt><expr><name pos:line="22" pos:column="25">device<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">=<pos:position pos:line="22" pos:column="33"/></operator> <call><name pos:line="22" pos:column="34">get_device_name<pos:position pos:line="22" pos:column="49"/></name><argument_list pos:line="22" pos:column="49">(<argument><expr><name><name pos:line="22" pos:column="50">mnt<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">-&gt;<pos:position pos:line="22" pos:column="58"/></operator><name pos:line="22" pos:column="55">mnt_fsname<pos:position pos:line="22" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
			<if pos:line="23" pos:column="25">if<condition pos:line="23" pos:column="27">(<expr><name pos:line="23" pos:column="28">device<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">==<pos:position pos:line="23" pos:column="37"/></operator> <name pos:line="23" pos:column="38">NULL<pos:position pos:line="23" pos:column="42"/></name></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43"> <block pos:line="23" pos:column="44">{
				<expr_stmt><expr><call><name pos:line="24" pos:column="33">DEBUG<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><literal type="string" pos:line="24" pos:column="39">"utils_mount: can't get devicename for fs (%s) %s (%s)"<pos:position pos:line="24" pos:column="94"/></literal>
					<literal type="string" pos:line="25" pos:column="41">": ignored"<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="54">mnt<pos:position pos:line="25" pos:column="57"/></name><operator pos:line="25" pos:column="57">-&gt;<pos:position pos:line="25" pos:column="62"/></operator><name pos:line="25" pos:column="59">mnt_type<pos:position pos:line="25" pos:column="67"/></name></name></expr></argument>,
					<argument><expr><name><name pos:line="26" pos:column="41">mnt<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">-&gt;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="46">mnt_dir<pos:position pos:line="26" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="55">mnt<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">-&gt;<pos:position pos:line="26" pos:column="63"/></operator><name pos:line="26" pos:column="60">mnt_fsname<pos:position pos:line="26" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="72"/></expr_stmt>
				<continue pos:line="27" pos:column="33">continue;<pos:position pos:line="27" pos:column="42"/></continue>
			}<pos:position pos:line="28" pos:column="26"/></block></then></if>
		}<pos:position pos:line="29" pos:column="18"/></block></then> <else pos:line="29" pos:column="19">else <block pos:line="29" pos:column="24">{
			<expr_stmt><expr><name pos:line="30" pos:column="25">device<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">=<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">loop<pos:position pos:line="30" pos:column="38"/></name></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></else></if>
		<if pos:line="32" pos:column="17">if<condition pos:line="32" pos:column="19">(<expr><operator pos:line="32" pos:column="20">*<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">list<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">==<pos:position pos:line="32" pos:column="28"/></operator> <name pos:line="32" pos:column="29">NULL<pos:position pos:line="32" pos:column="33"/></name></expr>)<pos:position pos:line="32" pos:column="34"/></condition><then pos:line="32" pos:column="34"> <block pos:line="32" pos:column="35">{
			<expr_stmt><expr><operator pos:line="33" pos:column="25">*<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">list<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <operator pos:line="33" pos:column="33">(<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="34">cu_mount_t<pos:position pos:line="33" pos:column="44"/></name> <operator pos:line="33" pos:column="45">*<pos:position pos:line="33" pos:column="46"/></operator><operator pos:line="33" pos:column="46">)<pos:position pos:line="33" pos:column="47"/></operator><call><name pos:line="33" pos:column="47">smalloc<pos:position pos:line="33" pos:column="54"/></name><argument_list pos:line="33" pos:column="54">(<argument><expr><sizeof pos:line="33" pos:column="55">sizeof<argument_list pos:line="33" pos:column="61">(<argument><expr><name pos:line="33" pos:column="62">cu_mount_t<pos:position pos:line="33" pos:column="72"/></name></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name pos:line="34" pos:column="25">last<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">=<pos:position pos:line="34" pos:column="31"/></operator> <operator pos:line="34" pos:column="32">*<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="33">list<pos:position pos:line="34" pos:column="37"/></name></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></then> <else pos:line="35" pos:column="19">else <block pos:line="35" pos:column="24">{
			<while pos:line="36" pos:column="25">while<condition pos:line="36" pos:column="30">(<expr><name><name pos:line="36" pos:column="31">last<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">-&gt;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="37">next<pos:position pos:line="36" pos:column="41"/></name></name> <operator pos:line="36" pos:column="42">!=<pos:position pos:line="36" pos:column="44"/></operator> <name pos:line="36" pos:column="45">NULL<pos:position pos:line="36" pos:column="49"/></name></expr>)<pos:position pos:line="36" pos:column="50"/></condition> <block pos:line="36" pos:column="51">{ <comment type="block" pos:line="36" pos:column="53">/* is last really last? */</comment>
				<expr_stmt><expr><name pos:line="37" pos:column="33">last<pos:position pos:line="37" pos:column="37"/></name> <operator pos:line="37" pos:column="38">=<pos:position pos:line="37" pos:column="39"/></operator> <name><name pos:line="37" pos:column="40">last<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">-&gt;<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="46">next<pos:position pos:line="37" pos:column="50"/></name></name></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="38" pos:column="26"/></block></while>
			<expr_stmt><expr><name><name pos:line="39" pos:column="25">last<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">next<pos:position pos:line="39" pos:column="35"/></name></name> <operator pos:line="39" pos:column="36">=<pos:position pos:line="39" pos:column="37"/></operator> <operator pos:line="39" pos:column="38">(<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="39">cu_mount_t<pos:position pos:line="39" pos:column="49"/></name> <operator pos:line="39" pos:column="50">*<pos:position pos:line="39" pos:column="51"/></operator><operator pos:line="39" pos:column="51">)<pos:position pos:line="39" pos:column="52"/></operator><call><name pos:line="39" pos:column="52">smalloc<pos:position pos:line="39" pos:column="59"/></name><argument_list pos:line="39" pos:column="59">(<argument><expr><sizeof pos:line="39" pos:column="60">sizeof<argument_list pos:line="39" pos:column="66">(<argument><expr><name pos:line="39" pos:column="67">cu_mount_t<pos:position pos:line="39" pos:column="77"/></name></expr></argument>)<pos:position pos:line="39" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><name pos:line="40" pos:column="25">last<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">=<pos:position pos:line="40" pos:column="31"/></operator> <name><name pos:line="40" pos:column="32">last<pos:position pos:line="40" pos:column="36"/></name><operator pos:line="40" pos:column="36">-&gt;<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="38">next<pos:position pos:line="40" pos:column="42"/></name></name></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="42" pos:column="17">last<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">dir<pos:position pos:line="42" pos:column="26"/></name></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <call><name pos:line="42" pos:column="29">sstrdup<pos:position pos:line="42" pos:column="36"/></name><argument_list pos:line="42" pos:column="36">(<argument><expr><name><name pos:line="42" pos:column="37">mnt<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">mnt_dir<pos:position pos:line="42" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">last<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">spec_device<pos:position pos:line="43" pos:column="34"/></name></name> <operator pos:line="43" pos:column="35">=<pos:position pos:line="43" pos:column="36"/></operator> <call><name pos:line="43" pos:column="37">sstrdup<pos:position pos:line="43" pos:column="44"/></name><argument_list pos:line="43" pos:column="44">(<argument><expr><name><name pos:line="43" pos:column="45">mnt<pos:position pos:line="43" pos:column="48"/></name><operator pos:line="43" pos:column="48">-&gt;<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="50">mnt_fsname<pos:position pos:line="43" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="44" pos:column="17">last<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">device<pos:position pos:line="44" pos:column="29"/></name></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <name pos:line="44" pos:column="32">device<pos:position pos:line="44" pos:column="38"/></name></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="45" pos:column="17">last<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">type<pos:position pos:line="45" pos:column="27"/></name></name> <operator pos:line="45" pos:column="28">=<pos:position pos:line="45" pos:column="29"/></operator> <call><name pos:line="45" pos:column="30">sstrdup<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name><name pos:line="45" pos:column="38">mnt<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">-&gt;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="43">mnt_type<pos:position pos:line="45" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="46" pos:column="17">last<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">-&gt;<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="23">options<pos:position pos:line="46" pos:column="30"/></name></name> <operator pos:line="46" pos:column="31">=<pos:position pos:line="46" pos:column="32"/></operator> <call><name pos:line="46" pos:column="33">sstrdup<pos:position pos:line="46" pos:column="40"/></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name><name pos:line="46" pos:column="41">mnt<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">-&gt;<pos:position pos:line="46" pos:column="49"/></operator><name pos:line="46" pos:column="46">mnt_opts<pos:position pos:line="46" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="47" pos:column="17">last<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">-&gt;<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="23">next<pos:position pos:line="47" pos:column="27"/></name></name> <operator pos:line="47" pos:column="28">=<pos:position pos:line="47" pos:column="29"/></operator> <name pos:line="47" pos:column="30">NULL<pos:position pos:line="47" pos:column="34"/></name></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></for> <comment type="block" pos:line="48" pos:column="11">/* for(p = mntlist; p; p = p-&gt;next) */</comment>

	<return pos:line="50" pos:column="9">return<expr><operator pos:line="50" pos:column="15">(<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="16">last<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">)<pos:position pos:line="50" pos:column="21"/></operator></expr>;<pos:position pos:line="50" pos:column="22"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

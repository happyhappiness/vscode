<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1578_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">as_read<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list> <block pos:line="1" pos:column="26">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">kern_return_t<pos:position pos:line="2" pos:column="16"/></name></type> <name pos:line="2" pos:column="17">status<pos:position pos:line="2" pos:column="23"/></name></decl>;<pos:position pos:line="2" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">io_iterator_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">iterator<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">io_object_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">io_obj<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CFMutableDictionaryRef<pos:position pos:line="5" pos:column="25"/></name></type> <name pos:line="5" pos:column="26">prop_dict<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CFTypeRef<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">property<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">type<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><literal type="number" pos:line="8" pos:column="13">128<pos:position pos:line="8" pos:column="16"/></literal></expr>]<pos:position pos:line="8" pos:column="17"/></index></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">inst<pos:position pos:line="9" pos:column="12"/></name><index pos:line="9" pos:column="12">[<expr><literal type="number" pos:line="9" pos:column="13">128<pos:position pos:line="9" pos:column="16"/></literal></expr>]<pos:position pos:line="9" pos:column="17"/></index></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">value_int<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">double<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">value_double<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">io_master_port<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">||<pos:position pos:line="12" pos:column="25"/></operator> <operator pos:line="12" pos:column="26">(<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">io_master_port<pos:position pos:line="12" pos:column="41"/></name> <operator pos:line="12" pos:column="42">==<pos:position pos:line="12" pos:column="44"/></operator> <name pos:line="12" pos:column="45">MACH_PORT_NULL<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">)<pos:position pos:line="12" pos:column="60"/></operator></expr>)<pos:position pos:line="12" pos:column="61"/></condition><then pos:line="12" pos:column="61">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">status<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">IOServiceGetMatchingServices<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">(
      <argument><expr><name pos:line="16" pos:column="7">io_master_port<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="23">IOServiceNameMatching<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><literal type="string" pos:line="16" pos:column="45">"IOHWSensor"<pos:position pos:line="16" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="16" pos:column="60">&amp;<pos:position pos:line="16" pos:column="65"/></operator><name pos:line="16" pos:column="61">iterator<pos:position pos:line="16" pos:column="69"/></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">status<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">!=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">kIOReturnSuccess<pos:position pos:line="17" pos:column="33"/></name></expr>)<pos:position pos:line="17" pos:column="34"/></condition><then pos:line="17" pos:column="34"> <block pos:line="17" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"IOServiceGetMatchingServices failed: %s"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="54">mach_error_string<pos:position pos:line="18" pos:column="71"/></name><argument_list pos:line="18" pos:column="71">(<argument><expr><name pos:line="18" pos:column="72">status<pos:position pos:line="18" pos:column="78"/></name></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="81"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <while pos:line="22" pos:column="3">while <condition pos:line="22" pos:column="9">(<expr><operator pos:line="22" pos:column="10">(<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">io_obj<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <call><name pos:line="22" pos:column="20">IOIteratorNext<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">iterator<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call><operator pos:line="22" pos:column="44">)<pos:position pos:line="22" pos:column="45"/></operator></expr>)<pos:position pos:line="22" pos:column="46"/></condition> <block pos:line="22" pos:column="47">{
    <expr_stmt><expr><name pos:line="23" pos:column="5">prop_dict<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">status<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">IORegistryEntryCreateCFProperties<pos:position pos:line="24" pos:column="47"/></name><argument_list pos:line="24" pos:column="47">(
        <argument><expr><name pos:line="25" pos:column="9">io_obj<pos:position pos:line="25" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="17">&amp;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="18">prop_dict<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="29">kCFAllocatorDefault<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">kNilOptions<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">status<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">!=<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">kIOReturnSuccess<pos:position pos:line="26" pos:column="35"/></name></expr>)<pos:position pos:line="26" pos:column="36"/></condition><then pos:line="26" pos:column="36"> <block pos:line="26" pos:column="37">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">DEBUG<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="string" pos:line="27" pos:column="13">"IORegistryEntryCreateCFProperties failed: %s"<pos:position pos:line="27" pos:column="59"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="28" pos:column="13">mach_error_string<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">status<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
      <continue pos:line="29" pos:column="7">continue;<pos:position pos:line="29" pos:column="16"/></continue>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/* Copy the sensor type. */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">property<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">NULL<pos:position pos:line="33" pos:column="20"/></name></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">!<pos:position pos:line="34" pos:column="10"/></operator><call><name pos:line="34" pos:column="10">CFDictionaryGetValueIfPresent<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">prop_dict<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="51">CFSTR<pos:position pos:line="34" pos:column="56"/></name><argument_list pos:line="34" pos:column="56">(<argument><expr><literal type="string" pos:line="34" pos:column="57">"type"<pos:position pos:line="34" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="34" pos:column="66">&amp;<pos:position pos:line="34" pos:column="71"/></operator><name pos:line="34" pos:column="67">property<pos:position pos:line="34" pos:column="75"/></name></expr></argument>)<pos:position pos:line="34" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="77"/></condition><then pos:line="34" pos:column="77">
      <block type="pseudo"><continue pos:line="35" pos:column="7">continue;<pos:position pos:line="35" pos:column="16"/></continue></block></then></if>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><call><name pos:line="36" pos:column="9">CFGetTypeID<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><name pos:line="36" pos:column="21">property<pos:position pos:line="36" pos:column="29"/></name></expr></argument>)<pos:position pos:line="36" pos:column="30"/></argument_list></call> <operator pos:line="36" pos:column="31">!=<pos:position pos:line="36" pos:column="33"/></operator> <call><name pos:line="36" pos:column="34">CFStringGetTypeID<pos:position pos:line="36" pos:column="51"/></name><argument_list pos:line="36" pos:column="51">()<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="54"/></condition><then pos:line="36" pos:column="54">
      <block type="pseudo"><continue pos:line="37" pos:column="7">continue;<pos:position pos:line="37" pos:column="16"/></continue></block></then></if>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><call><name pos:line="38" pos:column="10">CFStringGetCString<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">property<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="39">type<pos:position pos:line="38" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="45">sizeof<argument_list pos:line="38" pos:column="51">(<argument><expr><name pos:line="38" pos:column="52">type<pos:position pos:line="38" pos:column="56"/></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></sizeof></expr></argument>,
                            <argument><expr><name pos:line="39" pos:column="29">kCFStringEncodingASCII<pos:position pos:line="39" pos:column="51"/></name></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="53"/></condition><then pos:line="39" pos:column="53">
      <block type="pseudo"><continue pos:line="40" pos:column="7">continue;<pos:position pos:line="40" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">type<pos:position pos:line="41" pos:column="9"/></name><index pos:line="41" pos:column="9">[<expr><sizeof pos:line="41" pos:column="10">sizeof<argument_list pos:line="41" pos:column="16">(<argument><expr><name pos:line="41" pos:column="17">type<pos:position pos:line="41" pos:column="21"/></name></expr></argument>)<pos:position pos:line="41" pos:column="22"/></argument_list></sizeof> <operator pos:line="41" pos:column="23">-<pos:position pos:line="41" pos:column="24"/></operator> <literal type="number" pos:line="41" pos:column="25">1<pos:position pos:line="41" pos:column="26"/></literal></expr>]<pos:position pos:line="41" pos:column="27"/></index></name> <operator pos:line="41" pos:column="28">=<pos:position pos:line="41" pos:column="29"/></operator> <literal type="char" pos:line="41" pos:column="30">'\0'<pos:position pos:line="41" pos:column="34"/></literal></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* Copy the sensor location. This will be used as `instance'. */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">property<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <name pos:line="44" pos:column="16">NULL<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><call><name pos:line="45" pos:column="10">CFDictionaryGetValueIfPresent<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">(<argument><expr><name pos:line="45" pos:column="40">prop_dict<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="51">CFSTR<pos:position pos:line="45" pos:column="56"/></name><argument_list pos:line="45" pos:column="56">(<argument><expr><literal type="string" pos:line="45" pos:column="57">"location"<pos:position pos:line="45" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="45" pos:column="70">&amp;<pos:position pos:line="45" pos:column="75"/></operator><name pos:line="45" pos:column="71">property<pos:position pos:line="45" pos:column="79"/></name></expr></argument>)<pos:position pos:line="45" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="81"/></condition><then pos:line="45" pos:column="81">
      <block type="pseudo"><continue pos:line="46" pos:column="7">continue;<pos:position pos:line="46" pos:column="16"/></continue></block></then></if>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name pos:line="47" pos:column="9">CFGetTypeID<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">property<pos:position pos:line="47" pos:column="29"/></name></expr></argument>)<pos:position pos:line="47" pos:column="30"/></argument_list></call> <operator pos:line="47" pos:column="31">!=<pos:position pos:line="47" pos:column="33"/></operator> <call><name pos:line="47" pos:column="34">CFStringGetTypeID<pos:position pos:line="47" pos:column="51"/></name><argument_list pos:line="47" pos:column="51">()<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="54"/></condition><then pos:line="47" pos:column="54">
      <block type="pseudo"><continue pos:line="48" pos:column="7">continue;<pos:position pos:line="48" pos:column="16"/></continue></block></then></if>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">!<pos:position pos:line="49" pos:column="10"/></operator><call><name pos:line="49" pos:column="10">CFStringGetCString<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name pos:line="49" pos:column="29">property<pos:position pos:line="49" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="39">inst<pos:position pos:line="49" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="45">sizeof<argument_list pos:line="49" pos:column="51">(<argument><expr><name pos:line="49" pos:column="52">inst<pos:position pos:line="49" pos:column="56"/></name></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></sizeof></expr></argument>,
                            <argument><expr><name pos:line="50" pos:column="29">kCFStringEncodingASCII<pos:position pos:line="50" pos:column="51"/></name></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="53"/></condition><then pos:line="50" pos:column="53">
      <block type="pseudo"><continue pos:line="51" pos:column="7">continue;<pos:position pos:line="51" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">inst<pos:position pos:line="52" pos:column="9"/></name><index pos:line="52" pos:column="9">[<expr><sizeof pos:line="52" pos:column="10">sizeof<argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">inst<pos:position pos:line="52" pos:column="21"/></name></expr></argument>)<pos:position pos:line="52" pos:column="22"/></argument_list></sizeof> <operator pos:line="52" pos:column="23">-<pos:position pos:line="52" pos:column="24"/></operator> <literal type="number" pos:line="52" pos:column="25">1<pos:position pos:line="52" pos:column="26"/></literal></expr>]<pos:position pos:line="52" pos:column="27"/></index></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <literal type="char" pos:line="52" pos:column="30">'\0'<pos:position pos:line="52" pos:column="34"/></literal></expr>;<pos:position pos:line="52" pos:column="35"/></expr_stmt>
    <for pos:line="53" pos:column="5">for <control pos:line="53" pos:column="9">(<init><decl><type><name pos:line="53" pos:column="10">int<pos:position pos:line="53" pos:column="13"/></name></type> <name pos:line="53" pos:column="14">i<pos:position pos:line="53" pos:column="15"/></name> <init pos:line="53" pos:column="16">= <expr><literal type="number" pos:line="53" pos:column="18">0<pos:position pos:line="53" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="53" pos:column="20"/></init> <condition><expr><name pos:line="53" pos:column="21">i<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">&lt;<pos:position pos:line="53" pos:column="27"/></operator> <literal type="number" pos:line="53" pos:column="25">128<pos:position pos:line="53" pos:column="28"/></literal></expr>;<pos:position pos:line="53" pos:column="29"/></condition> <incr><expr><name pos:line="53" pos:column="30">i<pos:position pos:line="53" pos:column="31"/></name><operator pos:line="53" pos:column="31">++<pos:position pos:line="53" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="53" pos:column="34"/></control> <block pos:line="53" pos:column="35">{
      <if pos:line="54" pos:column="7">if <condition pos:line="54" pos:column="10">(<expr><name><name pos:line="54" pos:column="11">inst<pos:position pos:line="54" pos:column="15"/></name><index pos:line="54" pos:column="15">[<expr><name pos:line="54" pos:column="16">i<pos:position pos:line="54" pos:column="17"/></name></expr>]<pos:position pos:line="54" pos:column="18"/></index></name> <operator pos:line="54" pos:column="19">==<pos:position pos:line="54" pos:column="21"/></operator> <literal type="char" pos:line="54" pos:column="22">'\0'<pos:position pos:line="54" pos:column="26"/></literal></expr>)<pos:position pos:line="54" pos:column="27"/></condition><then pos:line="54" pos:column="27">
        <block type="pseudo"><break pos:line="55" pos:column="9">break;<pos:position pos:line="55" pos:column="15"/></break></block></then>
      <elseif pos:line="56" pos:column="7">else <if pos:line="56" pos:column="12">if <condition pos:line="56" pos:column="15">(<expr><call><name pos:line="56" pos:column="16">isalnum<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><name><name pos:line="56" pos:column="24">inst<pos:position pos:line="56" pos:column="28"/></name><index pos:line="56" pos:column="28">[<expr><name pos:line="56" pos:column="29">i<pos:position pos:line="56" pos:column="30"/></name></expr>]<pos:position pos:line="56" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="33"/></condition><then pos:line="56" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="9">inst<pos:position pos:line="57" pos:column="13"/></name><index pos:line="57" pos:column="13">[<expr><name pos:line="57" pos:column="14">i<pos:position pos:line="57" pos:column="15"/></name></expr>]<pos:position pos:line="57" pos:column="16"/></index></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <operator pos:line="57" pos:column="19">(<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="20">char<pos:position pos:line="57" pos:column="24"/></name><operator pos:line="57" pos:column="24">)<pos:position pos:line="57" pos:column="25"/></operator><call><name pos:line="57" pos:column="25">tolower<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name><name pos:line="57" pos:column="33">inst<pos:position pos:line="57" pos:column="37"/></name><index pos:line="57" pos:column="37">[<expr><name pos:line="57" pos:column="38">i<pos:position pos:line="57" pos:column="39"/></name></expr>]<pos:position pos:line="57" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="42"/></expr_stmt></block></then></if></elseif>
      <else pos:line="58" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="59" pos:column="9">inst<pos:position pos:line="59" pos:column="13"/></name><index pos:line="59" pos:column="13">[<expr><name pos:line="59" pos:column="14">i<pos:position pos:line="59" pos:column="15"/></name></expr>]<pos:position pos:line="59" pos:column="16"/></index></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <literal type="char" pos:line="59" pos:column="19">'_'<pos:position pos:line="59" pos:column="22"/></literal></expr>;<pos:position pos:line="59" pos:column="23"/></expr_stmt></block></else></if>
    }<pos:position pos:line="60" pos:column="6"/></block></for>

    <comment type="block" pos:line="62" pos:column="5">/* Get the actual value. Some computation, based on the `type'
     * is neccessary. */</comment>
    <expr_stmt><expr><name pos:line="64" pos:column="5">property<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <name pos:line="64" pos:column="16">NULL<pos:position pos:line="64" pos:column="20"/></name></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><operator pos:line="65" pos:column="9">!<pos:position pos:line="65" pos:column="10"/></operator><call><name pos:line="65" pos:column="10">CFDictionaryGetValueIfPresent<pos:position pos:line="65" pos:column="39"/></name><argument_list pos:line="65" pos:column="39">(<argument><expr><name pos:line="65" pos:column="40">prop_dict<pos:position pos:line="65" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="51">CFSTR<pos:position pos:line="65" pos:column="56"/></name><argument_list pos:line="65" pos:column="56">(<argument><expr><literal type="string" pos:line="65" pos:column="57">"current-value"<pos:position pos:line="65" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="73"/></argument_list></call></expr></argument>,
                                       <argument><expr><operator pos:line="66" pos:column="40">&amp;<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="41">property<pos:position pos:line="66" pos:column="49"/></name></expr></argument>)<pos:position pos:line="66" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="51"/></condition><then pos:line="66" pos:column="51">
      <block type="pseudo"><continue pos:line="67" pos:column="7">continue;<pos:position pos:line="67" pos:column="16"/></continue></block></then></if>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><call><name pos:line="68" pos:column="9">CFGetTypeID<pos:position pos:line="68" pos:column="20"/></name><argument_list pos:line="68" pos:column="20">(<argument><expr><name pos:line="68" pos:column="21">property<pos:position pos:line="68" pos:column="29"/></name></expr></argument>)<pos:position pos:line="68" pos:column="30"/></argument_list></call> <operator pos:line="68" pos:column="31">!=<pos:position pos:line="68" pos:column="33"/></operator> <call><name pos:line="68" pos:column="34">CFNumberGetTypeID<pos:position pos:line="68" pos:column="51"/></name><argument_list pos:line="68" pos:column="51">()<pos:position pos:line="68" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="54"/></condition><then pos:line="68" pos:column="54">
      <block type="pseudo"><continue pos:line="69" pos:column="7">continue;<pos:position pos:line="69" pos:column="16"/></continue></block></then></if>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><operator pos:line="70" pos:column="9">!<pos:position pos:line="70" pos:column="10"/></operator><call><name pos:line="70" pos:column="10">CFNumberGetValue<pos:position pos:line="70" pos:column="26"/></name><argument_list pos:line="70" pos:column="26">(<argument><expr><name pos:line="70" pos:column="27">property<pos:position pos:line="70" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="37">kCFNumberIntType<pos:position pos:line="70" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="55">&amp;<pos:position pos:line="70" pos:column="60"/></operator><name pos:line="70" pos:column="56">value_int<pos:position pos:line="70" pos:column="65"/></name></expr></argument>)<pos:position pos:line="70" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="67"/></condition><then pos:line="70" pos:column="67">
      <block type="pseudo"><continue pos:line="71" pos:column="7">continue;<pos:position pos:line="71" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="73" pos:column="5">/* Found e.g. in the 1.5GHz PowerBooks */</comment>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><call><name pos:line="74" pos:column="9">strcmp<pos:position pos:line="74" pos:column="15"/></name><argument_list pos:line="74" pos:column="15">(<argument><expr><name pos:line="74" pos:column="16">type<pos:position pos:line="74" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="22">"temperature"<pos:position pos:line="74" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="36"/></argument_list></call> <operator pos:line="74" pos:column="37">==<pos:position pos:line="74" pos:column="39"/></operator> <literal type="number" pos:line="74" pos:column="40">0<pos:position pos:line="74" pos:column="41"/></literal></expr>)<pos:position pos:line="74" pos:column="42"/></condition><then pos:line="74" pos:column="42"> <block pos:line="74" pos:column="43">{
      <expr_stmt><expr><name pos:line="75" pos:column="7">value_double<pos:position pos:line="75" pos:column="19"/></name> <operator pos:line="75" pos:column="20">=<pos:position pos:line="75" pos:column="21"/></operator> <operator pos:line="75" pos:column="22">(<pos:position pos:line="75" pos:column="23"/></operator><operator pos:line="75" pos:column="23">(<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="24">double<pos:position pos:line="75" pos:column="30"/></name><operator pos:line="75" pos:column="30">)<pos:position pos:line="75" pos:column="31"/></operator><name pos:line="75" pos:column="31">value_int<pos:position pos:line="75" pos:column="40"/></name><operator pos:line="75" pos:column="40">)<pos:position pos:line="75" pos:column="41"/></operator> <operator pos:line="75" pos:column="42">/<pos:position pos:line="75" pos:column="43"/></operator> <literal type="number" pos:line="75" pos:column="44">65536.0<pos:position pos:line="75" pos:column="51"/></literal></expr>;<pos:position pos:line="75" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">sstrncpy<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><name pos:line="76" pos:column="16">type<pos:position pos:line="76" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="22">"temperature"<pos:position pos:line="76" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="37">sizeof<argument_list pos:line="76" pos:column="43">(<argument><expr><name pos:line="76" pos:column="44">type<pos:position pos:line="76" pos:column="48"/></name></expr></argument>)<pos:position pos:line="76" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then> <elseif pos:line="77" pos:column="7">else <if pos:line="77" pos:column="12">if <condition pos:line="77" pos:column="15">(<expr><call><name pos:line="77" pos:column="16">strcmp<pos:position pos:line="77" pos:column="22"/></name><argument_list pos:line="77" pos:column="22">(<argument><expr><name pos:line="77" pos:column="23">type<pos:position pos:line="77" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="29">"temp"<pos:position pos:line="77" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="36"/></argument_list></call> <operator pos:line="77" pos:column="37">==<pos:position pos:line="77" pos:column="39"/></operator> <literal type="number" pos:line="77" pos:column="40">0<pos:position pos:line="77" pos:column="41"/></literal></expr>)<pos:position pos:line="77" pos:column="42"/></condition><then pos:line="77" pos:column="42"> <block pos:line="77" pos:column="43">{
      <expr_stmt><expr><name pos:line="78" pos:column="7">value_double<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">=<pos:position pos:line="78" pos:column="21"/></operator> <operator pos:line="78" pos:column="22">(<pos:position pos:line="78" pos:column="23"/></operator><operator pos:line="78" pos:column="23">(<pos:position pos:line="78" pos:column="24"/></operator><name pos:line="78" pos:column="24">double<pos:position pos:line="78" pos:column="30"/></name><operator pos:line="78" pos:column="30">)<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="31">value_int<pos:position pos:line="78" pos:column="40"/></name><operator pos:line="78" pos:column="40">)<pos:position pos:line="78" pos:column="41"/></operator> <operator pos:line="78" pos:column="42">/<pos:position pos:line="78" pos:column="43"/></operator> <literal type="number" pos:line="78" pos:column="44">10.0<pos:position pos:line="78" pos:column="48"/></literal></expr>;<pos:position pos:line="78" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">sstrncpy<pos:position pos:line="79" pos:column="15"/></name><argument_list pos:line="79" pos:column="15">(<argument><expr><name pos:line="79" pos:column="16">type<pos:position pos:line="79" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="22">"temperature"<pos:position pos:line="79" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="37">sizeof<argument_list pos:line="79" pos:column="43">(<argument><expr><name pos:line="79" pos:column="44">type<pos:position pos:line="79" pos:column="48"/></name></expr></argument>)<pos:position pos:line="79" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if></elseif> <elseif pos:line="80" pos:column="7">else <if pos:line="80" pos:column="12">if <condition pos:line="80" pos:column="15">(<expr><call><name pos:line="80" pos:column="16">strcmp<pos:position pos:line="80" pos:column="22"/></name><argument_list pos:line="80" pos:column="22">(<argument><expr><name pos:line="80" pos:column="23">type<pos:position pos:line="80" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="29">"fanspeed"<pos:position pos:line="80" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="40"/></argument_list></call> <operator pos:line="80" pos:column="41">==<pos:position pos:line="80" pos:column="43"/></operator> <literal type="number" pos:line="80" pos:column="44">0<pos:position pos:line="80" pos:column="45"/></literal></expr>)<pos:position pos:line="80" pos:column="46"/></condition><then pos:line="80" pos:column="46"> <block pos:line="80" pos:column="47">{
      <expr_stmt><expr><name pos:line="81" pos:column="7">value_double<pos:position pos:line="81" pos:column="19"/></name> <operator pos:line="81" pos:column="20">=<pos:position pos:line="81" pos:column="21"/></operator> <operator pos:line="81" pos:column="22">(<pos:position pos:line="81" pos:column="23"/></operator><operator pos:line="81" pos:column="23">(<pos:position pos:line="81" pos:column="24"/></operator><name pos:line="81" pos:column="24">double<pos:position pos:line="81" pos:column="30"/></name><operator pos:line="81" pos:column="30">)<pos:position pos:line="81" pos:column="31"/></operator><name pos:line="81" pos:column="31">value_int<pos:position pos:line="81" pos:column="40"/></name><operator pos:line="81" pos:column="40">)<pos:position pos:line="81" pos:column="41"/></operator> <operator pos:line="81" pos:column="42">/<pos:position pos:line="81" pos:column="43"/></operator> <literal type="number" pos:line="81" pos:column="44">65536.0<pos:position pos:line="81" pos:column="51"/></literal></expr>;<pos:position pos:line="81" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">sstrncpy<pos:position pos:line="82" pos:column="15"/></name><argument_list pos:line="82" pos:column="15">(<argument><expr><name pos:line="82" pos:column="16">type<pos:position pos:line="82" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="22">"fanspeed"<pos:position pos:line="82" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="34">sizeof<argument_list pos:line="82" pos:column="40">(<argument><expr><name pos:line="82" pos:column="41">type<pos:position pos:line="82" pos:column="45"/></name></expr></argument>)<pos:position pos:line="82" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if></elseif> <elseif pos:line="83" pos:column="7">else <if pos:line="83" pos:column="12">if <condition pos:line="83" pos:column="15">(<expr><call><name pos:line="83" pos:column="16">strcmp<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><name pos:line="83" pos:column="23">type<pos:position pos:line="83" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="29">"voltage"<pos:position pos:line="83" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="39"/></argument_list></call> <operator pos:line="83" pos:column="40">==<pos:position pos:line="83" pos:column="42"/></operator> <literal type="number" pos:line="83" pos:column="43">0<pos:position pos:line="83" pos:column="44"/></literal></expr>)<pos:position pos:line="83" pos:column="45"/></condition><then pos:line="83" pos:column="45"> <block pos:line="83" pos:column="46">{
      <comment type="block" pos:line="84" pos:column="7">/* Leave this to the battery plugin. */</comment>
      <continue pos:line="85" pos:column="7">continue;<pos:position pos:line="85" pos:column="16"/></continue>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if></elseif> <elseif pos:line="86" pos:column="7">else <if pos:line="86" pos:column="12">if <condition pos:line="86" pos:column="15">(<expr><call><name pos:line="86" pos:column="16">strcmp<pos:position pos:line="86" pos:column="22"/></name><argument_list pos:line="86" pos:column="22">(<argument><expr><name pos:line="86" pos:column="23">type<pos:position pos:line="86" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="29">"adc"<pos:position pos:line="86" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="35"/></argument_list></call> <operator pos:line="86" pos:column="36">==<pos:position pos:line="86" pos:column="38"/></operator> <literal type="number" pos:line="86" pos:column="39">0<pos:position pos:line="86" pos:column="40"/></literal></expr>)<pos:position pos:line="86" pos:column="41"/></condition><then pos:line="86" pos:column="41"> <block pos:line="86" pos:column="42">{
      <expr_stmt><expr><name pos:line="87" pos:column="7">value_double<pos:position pos:line="87" pos:column="19"/></name> <operator pos:line="87" pos:column="20">=<pos:position pos:line="87" pos:column="21"/></operator> <operator pos:line="87" pos:column="22">(<pos:position pos:line="87" pos:column="23"/></operator><operator pos:line="87" pos:column="23">(<pos:position pos:line="87" pos:column="24"/></operator><name pos:line="87" pos:column="24">double<pos:position pos:line="87" pos:column="30"/></name><operator pos:line="87" pos:column="30">)<pos:position pos:line="87" pos:column="31"/></operator><name pos:line="87" pos:column="31">value_int<pos:position pos:line="87" pos:column="40"/></name><operator pos:line="87" pos:column="40">)<pos:position pos:line="87" pos:column="41"/></operator> <operator pos:line="87" pos:column="42">/<pos:position pos:line="87" pos:column="43"/></operator> <literal type="number" pos:line="87" pos:column="44">10.0<pos:position pos:line="87" pos:column="48"/></literal></expr>;<pos:position pos:line="87" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">sstrncpy<pos:position pos:line="88" pos:column="15"/></name><argument_list pos:line="88" pos:column="15">(<argument><expr><name pos:line="88" pos:column="16">type<pos:position pos:line="88" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="22">"fanspeed"<pos:position pos:line="88" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="88" pos:column="34">sizeof<argument_list pos:line="88" pos:column="40">(<argument><expr><name pos:line="88" pos:column="41">type<pos:position pos:line="88" pos:column="45"/></name></expr></argument>)<pos:position pos:line="88" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="88" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if></elseif> <else pos:line="89" pos:column="7">else <block pos:line="89" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="90" pos:column="7">DEBUG<pos:position pos:line="90" pos:column="12"/></name><argument_list pos:line="90" pos:column="12">(<argument><expr><literal type="string" pos:line="90" pos:column="13">"apple_sensors: Read unknown sensor type: %s"<pos:position pos:line="90" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="60">type<pos:position pos:line="90" pos:column="64"/></name></expr></argument>)<pos:position pos:line="90" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><name pos:line="91" pos:column="7">value_double<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">=<pos:position pos:line="91" pos:column="21"/></operator> <operator pos:line="91" pos:column="22">(<pos:position pos:line="91" pos:column="23"/></operator><name pos:line="91" pos:column="23">double<pos:position pos:line="91" pos:column="29"/></name><operator pos:line="91" pos:column="29">)<pos:position pos:line="91" pos:column="30"/></operator><name pos:line="91" pos:column="30">value_int<pos:position pos:line="91" pos:column="39"/></name></expr>;<pos:position pos:line="91" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="94" pos:column="5">as_submit<pos:position pos:line="94" pos:column="14"/></name><argument_list pos:line="94" pos:column="14">(<argument><expr><name pos:line="94" pos:column="15">type<pos:position pos:line="94" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="21">inst<pos:position pos:line="94" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="27">value_double<pos:position pos:line="94" pos:column="39"/></name></expr></argument>)<pos:position pos:line="94" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="96" pos:column="5">CFRelease<pos:position pos:line="96" pos:column="14"/></name><argument_list pos:line="96" pos:column="14">(<argument><expr><name pos:line="96" pos:column="15">prop_dict<pos:position pos:line="96" pos:column="24"/></name></expr></argument>)<pos:position pos:line="96" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">IOObjectRelease<pos:position pos:line="97" pos:column="20"/></name><argument_list pos:line="97" pos:column="20">(<argument><expr><name pos:line="97" pos:column="21">io_obj<pos:position pos:line="97" pos:column="27"/></name></expr></argument>)<pos:position pos:line="97" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="98" pos:column="4"/></block></while> <comment type="block" pos:line="98" pos:column="5">/* while (iterator) */</comment>

  <expr_stmt><expr><call><name pos:line="100" pos:column="3">IOObjectRelease<pos:position pos:line="100" pos:column="18"/></name><argument_list pos:line="100" pos:column="18">(<argument><expr><name pos:line="100" pos:column="19">iterator<pos:position pos:line="100" pos:column="27"/></name></expr></argument>)<pos:position pos:line="100" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="29"/></expr_stmt>

  <return pos:line="102" pos:column="3">return <expr><operator pos:line="102" pos:column="10">(<pos:position pos:line="102" pos:column="11"/></operator><literal type="number" pos:line="102" pos:column="11">0<pos:position pos:line="102" pos:column="12"/></literal><operator pos:line="102" pos:column="12">)<pos:position pos:line="102" pos:column="13"/></operator></expr>;<pos:position pos:line="102" pos:column="14"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

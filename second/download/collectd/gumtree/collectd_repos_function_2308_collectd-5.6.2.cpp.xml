<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2308_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">llist_t<pos:position pos:line="1" pos:column="8"/></name> <modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type><name pos:line="1" pos:column="10">llist_create<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list> <block pos:line="1" pos:column="29">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">llist_t<pos:position pos:line="2" pos:column="10"/></name> <modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier></type><name pos:line="2" pos:column="12">ret<pos:position pos:line="2" pos:column="15"/></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name pos:line="4" pos:column="3">ret<pos:position pos:line="4" pos:column="6"/></name> <operator pos:line="4" pos:column="7">=<pos:position pos:line="4" pos:column="8"/></operator> <call><name pos:line="4" pos:column="9">calloc<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><literal type="number" pos:line="4" pos:column="16">1<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="19">sizeof<argument_list pos:line="4" pos:column="25">(<argument><expr><operator pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">ret<pos:position pos:line="4" pos:column="30"/></name></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="33"/></expr_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">ret<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <name pos:line="5" pos:column="14">NULL<pos:position pos:line="5" pos:column="18"/></name></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">NULL<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">)<pos:position pos:line="6" pos:column="18"/></operator></expr>;<pos:position pos:line="6" pos:column="19"/></return></block></then></if>

  <return pos:line="8" pos:column="3">return <expr><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">ret<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">)<pos:position pos:line="8" pos:column="15"/></operator></expr>;<pos:position pos:line="8" pos:column="16"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2241_collectd-5.5.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_identifier_vl<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">str<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">value_list_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">vl<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list> <comment type="block" pos:line="1" pos:column="61">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">str_copy<pos:position pos:line="3" pos:column="22"/></name><index pos:line="3" pos:column="22">[<expr><literal type="number" pos:line="3" pos:column="23">6<pos:position pos:line="3" pos:column="24"/></literal> <operator pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></operator> <name pos:line="3" pos:column="27">DATA_MAX_NAME_LEN<pos:position pos:line="3" pos:column="44"/></name></expr>]<pos:position pos:line="3" pos:column="45"/></index></name></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">host<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">NULL<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">plugin<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">plugin_instance<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><name pos:line="6" pos:column="33">NULL<pos:position pos:line="6" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">type<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">type_instance<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">NULL<pos:position pos:line="8" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">status<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">str<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">==<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">NULL<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator> <operator pos:line="11" pos:column="27">||<pos:position pos:line="11" pos:column="29"/></operator> <operator pos:line="11" pos:column="30">(<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">vl<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">==<pos:position pos:line="11" pos:column="36"/></operator> <name pos:line="11" pos:column="37">NULL<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">)<pos:position pos:line="11" pos:column="42"/></operator></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">EINVAL<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">)<pos:position pos:line="12" pos:column="32"/></operator></expr>;<pos:position pos:line="12" pos:column="33"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">sstrncpy<pos:position pos:line="14" pos:column="17"/></name> <argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">str_copy<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="29">str<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="34">sizeof <argument_list pos:line="14" pos:column="41">(<argument><expr><name pos:line="14" pos:column="42">str_copy<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">status<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">parse_identifier<pos:position pos:line="16" pos:column="34"/></name> <argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">str_copy<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="46">&amp;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="47">host<pos:position pos:line="16" pos:column="51"/></name></expr></argument>,
			<argument><expr><operator pos:line="17" pos:column="25">&amp;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="26">plugin<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="34">&amp;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="35">plugin_instance<pos:position pos:line="17" pos:column="50"/></name></expr></argument>,
			<argument><expr><operator pos:line="18" pos:column="25">&amp;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="26">type<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="32">&amp;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="33">type_instance<pos:position pos:line="18" pos:column="46"/></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">status<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">!=<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="23">0<pos:position pos:line="19" pos:column="24"/></literal></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25">
		<block type="pseudo"><return pos:line="20" pos:column="17">return <expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">status<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">)<pos:position pos:line="20" pos:column="32"/></operator></expr>;<pos:position pos:line="20" pos:column="33"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">sstrncpy<pos:position pos:line="22" pos:column="17"/></name> <argument_list pos:line="22" pos:column="18">(<argument><expr><name><name pos:line="22" pos:column="19">vl<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">host<pos:position pos:line="22" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="29">host<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="35">sizeof <argument_list pos:line="22" pos:column="42">(<argument><expr><name><name pos:line="22" pos:column="43">vl<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">host<pos:position pos:line="22" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">sstrncpy<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">(<argument><expr><name><name pos:line="23" pos:column="19">vl<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">plugin<pos:position pos:line="23" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="31">plugin<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="39">sizeof <argument_list pos:line="23" pos:column="46">(<argument><expr><name><name pos:line="23" pos:column="47">vl<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">-&gt;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="51">plugin<pos:position pos:line="23" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">sstrncpy<pos:position pos:line="24" pos:column="17"/></name> <argument_list pos:line="24" pos:column="18">(<argument><expr><name><name pos:line="24" pos:column="19">vl<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">plugin_instance<pos:position pos:line="24" pos:column="38"/></name></name></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="25" pos:column="25">(<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">plugin_instance<pos:position pos:line="25" pos:column="41"/></name> <operator pos:line="25" pos:column="42">!=<pos:position pos:line="25" pos:column="44"/></operator> <name pos:line="25" pos:column="45">NULL<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">)<pos:position pos:line="25" pos:column="50"/></operator></expr> ?<pos:position pos:line="25" pos:column="52"/></condition><then pos:line="25" pos:column="52"> <expr><name pos:line="25" pos:column="53">plugin_instance<pos:position pos:line="25" pos:column="68"/></name></expr> <pos:position pos:line="25" pos:column="69"/></then><else pos:line="25" pos:column="69">: <expr><literal type="string" pos:line="25" pos:column="71">""<pos:position pos:line="25" pos:column="73"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><sizeof pos:line="26" pos:column="25">sizeof <argument_list pos:line="26" pos:column="32">(<argument><expr><name><name pos:line="26" pos:column="33">vl<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">plugin_instance<pos:position pos:line="26" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">sstrncpy<pos:position pos:line="27" pos:column="17"/></name> <argument_list pos:line="27" pos:column="18">(<argument><expr><name><name pos:line="27" pos:column="19">vl<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">type<pos:position pos:line="27" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="29">type<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="35">sizeof <argument_list pos:line="27" pos:column="42">(<argument><expr><name><name pos:line="27" pos:column="43">vl<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">-&gt;<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="47">type<pos:position pos:line="27" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">sstrncpy<pos:position pos:line="28" pos:column="17"/></name> <argument_list pos:line="28" pos:column="18">(<argument><expr><name><name pos:line="28" pos:column="19">vl<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">type_instance<pos:position pos:line="28" pos:column="36"/></name></name></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="29" pos:column="25">(<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">type_instance<pos:position pos:line="29" pos:column="39"/></name> <operator pos:line="29" pos:column="40">!=<pos:position pos:line="29" pos:column="42"/></operator> <name pos:line="29" pos:column="43">NULL<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">)<pos:position pos:line="29" pos:column="48"/></operator></expr> ?<pos:position pos:line="29" pos:column="50"/></condition><then pos:line="29" pos:column="50"> <expr><name pos:line="29" pos:column="51">type_instance<pos:position pos:line="29" pos:column="64"/></name></expr> <pos:position pos:line="29" pos:column="65"/></then><else pos:line="29" pos:column="65">: <expr><literal type="string" pos:line="29" pos:column="67">""<pos:position pos:line="29" pos:column="69"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><sizeof pos:line="30" pos:column="25">sizeof <argument_list pos:line="30" pos:column="32">(<argument><expr><name><name pos:line="30" pos:column="33">vl<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">type_instance<pos:position pos:line="30" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>

	<return pos:line="32" pos:column="9">return <expr><operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><literal type="number" pos:line="32" pos:column="17">0<pos:position pos:line="32" pos:column="18"/></literal><operator pos:line="32" pos:column="18">)<pos:position pos:line="32" pos:column="19"/></operator></expr>;<pos:position pos:line="32" pos:column="20"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1782_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">uint32_t<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ntpd_get_refclock_id<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">info_peer_summary<pos:position pos:line="1" pos:column="63"/></name></name> <specifier pos:line="1" pos:column="64">const<pos:position pos:line="1" pos:column="69"/></specifier> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">peer_info<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint32_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">addr<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name pos:line="3" pos:column="25">ntohl<pos:position pos:line="3" pos:column="30"/></name> <argument_list pos:line="3" pos:column="31">(<argument><expr><name><name pos:line="3" pos:column="32">peer_info<pos:position pos:line="3" pos:column="41"/></name><operator pos:line="3" pos:column="41">-&gt;<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="43">srcadr<pos:position pos:line="3" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">uint32_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">refclock_id<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><operator pos:line="4" pos:column="32">(<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">addr<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">&gt;&gt;<pos:position pos:line="4" pos:column="43"/></operator> <literal type="number" pos:line="4" pos:column="41">8<pos:position pos:line="4" pos:column="42"/></literal><operator pos:line="4" pos:column="42">)<pos:position pos:line="4" pos:column="43"/></operator> <operator pos:line="4" pos:column="44">&amp;<pos:position pos:line="4" pos:column="49"/></operator> <literal type="number" pos:line="4" pos:column="46">0x00FF<pos:position pos:line="4" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>

	<return pos:line="6" pos:column="9">return <expr><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">refclock_id<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">)<pos:position pos:line="6" pos:column="29"/></operator></expr>;<pos:position pos:line="6" pos:column="30"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

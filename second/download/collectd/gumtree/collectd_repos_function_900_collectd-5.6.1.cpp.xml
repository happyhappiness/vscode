<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_900_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">initialize_counters<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">void<pos:position pos:line="2" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init><decl><type><name pos:line="4" pos:column="14">unsigned<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">int<pos:position pos:line="4" pos:column="26"/></name></type> <name pos:line="4" pos:column="27">cpu_id<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><literal type="number" pos:line="4" pos:column="36">0<pos:position pos:line="4" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></init> <condition><expr><name pos:line="4" pos:column="39">cpu_id<pos:position pos:line="4" pos:column="45"/></name> <operator pos:line="4" pos:column="46">&lt;=<pos:position pos:line="4" pos:column="51"/></operator> <name><name pos:line="4" pos:column="49">topology<pos:position pos:line="4" pos:column="57"/></name><operator pos:line="4" pos:column="57">.<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="58">max_cpu_id<pos:position pos:line="4" pos:column="68"/></name></name></expr>;<pos:position pos:line="4" pos:column="69"/></condition> <incr><expr><operator pos:line="4" pos:column="70">++<pos:position pos:line="4" pos:column="72"/></operator><name pos:line="4" pos:column="72">cpu_id<pos:position pos:line="4" pos:column="78"/></name></expr></incr>)<pos:position pos:line="4" pos:column="79"/></control> <block pos:line="4" pos:column="80">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><call><name pos:line="5" pos:column="21">cpu_is_not_present<pos:position pos:line="5" pos:column="39"/></name><argument_list pos:line="5" pos:column="39">(<argument><expr><name pos:line="5" pos:column="40">cpu_id<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48">
			<block type="pseudo"><continue pos:line="6" pos:column="25">continue;<pos:position pos:line="6" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">init_counter<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">EVEN_COUNTERS<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">cpu_id<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">init_counter<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">ODD_COUNTERS<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">cpu_id<pos:position pos:line="8" pos:column="50"/></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">init_counter<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">DELTA_COUNTERS<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">cpu_id<pos:position pos:line="9" pos:column="52"/></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></for>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_971_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pb_add_socket<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">pinba_socket_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">s<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="46">/* {{{ */</comment>
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name><name pos:line="2" pos:column="11">struct<pos:position pos:line="2" pos:column="17"/></name> <name pos:line="2" pos:column="18">addrinfo<pos:position pos:line="2" pos:column="26"/></name></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">ai<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">fd<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">tmp<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">s<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">fd_num<pos:position pos:line="8" pos:column="16"/></name></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">PINBA_MAX_SOCKETS<pos:position pos:line="8" pos:column="37"/></name></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">WARNING<pos:position pos:line="10" pos:column="12"/></name> <argument_list pos:line="10" pos:column="13">(<argument><expr><literal type="string" pos:line="10" pos:column="14">"pinba plugin: Sorry, you have hit the built-in limit of "<pos:position pos:line="10" pos:column="72"/></literal>
        <literal type="string" pos:line="11" pos:column="9">"%i sockets. Please complain to the collectd developers so we can "<pos:position pos:line="11" pos:column="76"/></literal>
        <literal type="string" pos:line="12" pos:column="9">"raise the limit."<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="29">PINBA_MAX_SOCKETS<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">fd<pos:position pos:line="16" pos:column="5"/></name> <operator pos:line="16" pos:column="6">=<pos:position pos:line="16" pos:column="7"/></operator> <call><name pos:line="16" pos:column="8">socket<pos:position pos:line="16" pos:column="14"/></name> <argument_list pos:line="16" pos:column="15">(<argument><expr><name><name pos:line="16" pos:column="16">ai<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">ai_family<pos:position pos:line="16" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="31">ai<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">ai_socktype<pos:position pos:line="16" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="48">ai<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">ai_protocol<pos:position pos:line="16" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">fd<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">&lt;<pos:position pos:line="17" pos:column="14"/></operator> <literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>)<pos:position pos:line="17" pos:column="14"/></condition><then pos:line="17" pos:column="14">
  <block pos:line="18" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name></type> <name><name pos:line="19" pos:column="10">errbuf<pos:position pos:line="19" pos:column="16"/></name><index pos:line="19" pos:column="16">[<expr><literal type="number" pos:line="19" pos:column="17">1024<pos:position pos:line="19" pos:column="21"/></literal></expr>]<pos:position pos:line="19" pos:column="22"/></index></name></decl>;<pos:position pos:line="19" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ERROR<pos:position pos:line="20" pos:column="10"/></name> <argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="string" pos:line="20" pos:column="12">"pinba plugin: socket(2) failed: %s"<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="21" pos:column="9">sstrerror<pos:position pos:line="21" pos:column="18"/></name> <argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">errno<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="27">errbuf<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="35">sizeof <argument_list pos:line="21" pos:column="42">(<argument><expr><name pos:line="21" pos:column="43">errbuf<pos:position pos:line="21" pos:column="49"/></name></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><literal type="number" pos:line="22" pos:column="13">0<pos:position pos:line="22" pos:column="14"/></literal><operator pos:line="22" pos:column="14">)<pos:position pos:line="22" pos:column="15"/></operator></expr>;<pos:position pos:line="22" pos:column="16"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="25" pos:column="3">tmp<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <literal type="number" pos:line="25" pos:column="9">1<pos:position pos:line="25" pos:column="10"/></literal></expr>;<pos:position pos:line="25" pos:column="11"/></expr_stmt>
  <expr_stmt><expr><name pos:line="26" pos:column="3">status<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <call><name pos:line="26" pos:column="12">setsockopt<pos:position pos:line="26" pos:column="22"/></name> <argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">fd<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="28">SOL_SOCKET<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">SO_REUSEADDR<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="54">&amp;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="55">tmp<pos:position pos:line="26" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="60">sizeof <argument_list pos:line="26" pos:column="67">(<argument><expr><name pos:line="26" pos:column="68">tmp<pos:position pos:line="26" pos:column="71"/></name></expr></argument>)<pos:position pos:line="26" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="74"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">status<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">!=<pos:position pos:line="27" pos:column="16"/></operator> <literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19">
  <block pos:line="28" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">char<pos:position pos:line="29" pos:column="9"/></name></type> <name><name pos:line="29" pos:column="10">errbuf<pos:position pos:line="29" pos:column="16"/></name><index pos:line="29" pos:column="16">[<expr><literal type="number" pos:line="29" pos:column="17">1024<pos:position pos:line="29" pos:column="21"/></literal></expr>]<pos:position pos:line="29" pos:column="22"/></index></name></decl>;<pos:position pos:line="29" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">WARNING<pos:position pos:line="30" pos:column="12"/></name> <argument_list pos:line="30" pos:column="13">(<argument><expr><literal type="string" pos:line="30" pos:column="14">"pinba plugin: setsockopt(SO_REUSEADDR) failed: %s"<pos:position pos:line="30" pos:column="65"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="31" pos:column="9">sstrerror<pos:position pos:line="31" pos:column="18"/></name> <argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">errno<pos:position pos:line="31" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="27">errbuf<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="35">sizeof <argument_list pos:line="31" pos:column="42">(<argument><expr><name pos:line="31" pos:column="43">errbuf<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="34" pos:column="3">status<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <call><name pos:line="34" pos:column="12">bind<pos:position pos:line="34" pos:column="16"/></name> <argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">fd<pos:position pos:line="34" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="22">ai<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">ai_addr<pos:position pos:line="34" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="35">ai<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">ai_addrlen<pos:position pos:line="34" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">!=<pos:position pos:line="35" pos:column="16"/></operator> <literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19">
  <block pos:line="36" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">char<pos:position pos:line="37" pos:column="9"/></name></type> <name><name pos:line="37" pos:column="10">errbuf<pos:position pos:line="37" pos:column="16"/></name><index pos:line="37" pos:column="16">[<expr><literal type="number" pos:line="37" pos:column="17">1024<pos:position pos:line="37" pos:column="21"/></literal></expr>]<pos:position pos:line="37" pos:column="22"/></index></name></decl>;<pos:position pos:line="37" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">ERROR<pos:position pos:line="38" pos:column="10"/></name> <argument_list pos:line="38" pos:column="11">(<argument><expr><literal type="string" pos:line="38" pos:column="12">"pinba plugin: bind(2) failed: %s"<pos:position pos:line="38" pos:column="46"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="39" pos:column="9">sstrerror<pos:position pos:line="39" pos:column="18"/></name> <argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">errno<pos:position pos:line="39" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="27">errbuf<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="35">sizeof <argument_list pos:line="39" pos:column="42">(<argument><expr><name pos:line="39" pos:column="43">errbuf<pos:position pos:line="39" pos:column="49"/></name></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="53"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><literal type="number" pos:line="40" pos:column="13">0<pos:position pos:line="40" pos:column="14"/></literal><operator pos:line="40" pos:column="14">)<pos:position pos:line="40" pos:column="15"/></operator></expr>;<pos:position pos:line="40" pos:column="16"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="43" pos:column="3">s<pos:position pos:line="43" pos:column="4"/></name><operator pos:line="43" pos:column="4">-&gt;<pos:position pos:line="43" pos:column="9"/></operator><name pos:line="43" pos:column="6">fd<pos:position pos:line="43" pos:column="8"/></name><index pos:line="43" pos:column="8">[<expr><name><name pos:line="43" pos:column="9">s<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">fd_num<pos:position pos:line="43" pos:column="18"/></name></name></expr>]<pos:position pos:line="43" pos:column="19"/></index></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">fd<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="25">fd<pos:position pos:line="43" pos:column="27"/></name></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">s<pos:position pos:line="44" pos:column="4"/></name><operator pos:line="44" pos:column="4">-&gt;<pos:position pos:line="44" pos:column="9"/></operator><name pos:line="44" pos:column="6">fd<pos:position pos:line="44" pos:column="8"/></name><index pos:line="44" pos:column="8">[<expr><name><name pos:line="44" pos:column="9">s<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">fd_num<pos:position pos:line="44" pos:column="18"/></name></name></expr>]<pos:position pos:line="44" pos:column="19"/></index></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">events<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <name pos:line="44" pos:column="29">POLLIN<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">|<pos:position pos:line="44" pos:column="37"/></operator> <name pos:line="44" pos:column="38">POLLPRI<pos:position pos:line="44" pos:column="45"/></name></expr>;<pos:position pos:line="44" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">s<pos:position pos:line="45" pos:column="4"/></name><operator pos:line="45" pos:column="4">-&gt;<pos:position pos:line="45" pos:column="9"/></operator><name pos:line="45" pos:column="6">fd<pos:position pos:line="45" pos:column="8"/></name><index pos:line="45" pos:column="8">[<expr><name><name pos:line="45" pos:column="9">s<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">fd_num<pos:position pos:line="45" pos:column="18"/></name></name></expr>]<pos:position pos:line="45" pos:column="19"/></index></name><operator pos:line="45" pos:column="19">.<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="20">revents<pos:position pos:line="45" pos:column="27"/></name> <operator pos:line="45" pos:column="28">=<pos:position pos:line="45" pos:column="29"/></operator> <literal type="number" pos:line="45" pos:column="30">0<pos:position pos:line="45" pos:column="31"/></literal></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="46" pos:column="3">s<pos:position pos:line="46" pos:column="4"/></name><operator pos:line="46" pos:column="4">-&gt;<pos:position pos:line="46" pos:column="9"/></operator><name pos:line="46" pos:column="6">fd_num<pos:position pos:line="46" pos:column="12"/></name></name><operator pos:line="46" pos:column="12">++<pos:position pos:line="46" pos:column="14"/></operator></expr>;<pos:position pos:line="46" pos:column="15"/></expr_stmt>

  <return pos:line="48" pos:column="3">return <expr><operator pos:line="48" pos:column="10">(<pos:position pos:line="48" pos:column="11"/></operator><literal type="number" pos:line="48" pos:column="11">0<pos:position pos:line="48" pos:column="12"/></literal><operator pos:line="48" pos:column="12">)<pos:position pos:line="48" pos:column="13"/></operator></expr>;<pos:position pos:line="48" pos:column="14"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_720_collectd-4.4.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csv_create_file<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">filename<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">data_set_t<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">ds<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">csv<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">check_create_dir<pos:position pos:line="6" pos:column="29"/></name> <argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">filename<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="41"/></condition><then pos:line="6" pos:column="41">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><operator pos:line="7" pos:column="25">-<pos:position pos:line="7" pos:column="26"/></operator><literal type="number" pos:line="7" pos:column="26">1<pos:position pos:line="7" pos:column="27"/></literal><operator pos:line="7" pos:column="27">)<pos:position pos:line="7" pos:column="28"/></operator></expr>;<pos:position pos:line="7" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">csv<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">fopen<pos:position pos:line="9" pos:column="20"/></name> <argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">filename<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="32">"w"<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">csv<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25">
	<block pos:line="11" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name></type> <name><name pos:line="12" pos:column="22">errbuf<pos:position pos:line="12" pos:column="28"/></name><index pos:line="12" pos:column="28">[<expr><literal type="number" pos:line="12" pos:column="29">1024<pos:position pos:line="12" pos:column="33"/></literal></expr>]<pos:position pos:line="12" pos:column="34"/></index></name></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">ERROR<pos:position pos:line="13" pos:column="22"/></name> <argument_list pos:line="13" pos:column="23">(<argument><expr><literal type="string" pos:line="13" pos:column="24">"csv plugin: fopen (%s) failed: %s"<pos:position pos:line="13" pos:column="59"/></literal></expr></argument>,
				<argument><expr><name pos:line="14" pos:column="33">filename<pos:position pos:line="14" pos:column="41"/></name></expr></argument>,
				<argument><expr><call><name pos:line="15" pos:column="33">sstrerror<pos:position pos:line="15" pos:column="42"/></name> <argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">errno<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="51">errbuf<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="59">sizeof <argument_list pos:line="15" pos:column="66">(<argument><expr><name pos:line="15" pos:column="67">errbuf<pos:position pos:line="15" pos:column="73"/></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="77"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator></expr>;<pos:position pos:line="16" pos:column="29"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">fprintf<pos:position pos:line="19" pos:column="16"/></name> <argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">csv<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"epoch"<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></init> <condition><expr><name pos:line="20" pos:column="21">i<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name><name pos:line="20" pos:column="25">ds<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">ds_num<pos:position pos:line="20" pos:column="35"/></name></name></expr>;<pos:position pos:line="20" pos:column="36"/></condition> <incr><expr><name pos:line="20" pos:column="37">i<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">++<pos:position pos:line="20" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="41"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">fprintf<pos:position pos:line="21" pos:column="24"/></name> <argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">csv<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="31">",%s"<pos:position pos:line="21" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="38">ds<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">ds<pos:position pos:line="21" pos:column="44"/></name><index pos:line="21" pos:column="44">[<expr><name pos:line="21" pos:column="45">i<pos:position pos:line="21" pos:column="46"/></name></expr>]<pos:position pos:line="21" pos:column="47"/></index></name><operator pos:line="21" pos:column="47">.<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="48">name<pos:position pos:line="21" pos:column="52"/></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">fprintf<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">csv<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="23">"\n"<pos:position pos:line="23" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">fclose<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">csv<pos:position pos:line="24" pos:column="20"/></name></expr></argument>)<pos:position pos:line="24" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>

	<return pos:line="26" pos:column="9">return <expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

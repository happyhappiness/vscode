<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_200_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cu_rrd_create_file<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">filename<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="46">/* {{{ */</comment>
                       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">data_set_t<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">ds<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">value_list_t<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">vl<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                       <parameter><decl><type><specifier pos:line="3" pos:column="24">const<pos:position pos:line="3" pos:column="29"/></specifier> <name pos:line="3" pos:column="30">rrdcreate_config_t<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">cfg<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="54"/></parameter_list> <block pos:line="3" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier><modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">argv<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">argc<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier><modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">rra_def<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rra_num<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier><modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">ds_def<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><name pos:line="8" pos:column="19">NULL<pos:position pos:line="8" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">ds_num<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">time_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">last_up<pos:position pos:line="11" pos:column="17"/></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">unsigned<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">long<pos:position pos:line="12" pos:column="16"/></name></type> <name pos:line="12" pos:column="17">stepsize<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><call><name pos:line="14" pos:column="7">check_create_dir<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">filename<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal><operator pos:line="15" pos:column="15">)<pos:position pos:line="15" pos:column="16"/></operator></expr>;<pos:position pos:line="15" pos:column="17"/></return></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">rra_num<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">rra_get<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="27">rra_def<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">vl<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">cfg<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call><operator pos:line="17" pos:column="44">)<pos:position pos:line="17" pos:column="45"/></operator> <operator pos:line="17" pos:column="46">&lt;<pos:position pos:line="17" pos:column="50"/></operator> <literal type="number" pos:line="17" pos:column="48">1<pos:position pos:line="17" pos:column="49"/></literal></expr>)<pos:position pos:line="17" pos:column="50"/></condition><then pos:line="17" pos:column="50"> <block pos:line="17" pos:column="51">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"cu_rrd_create_file failed: Could not calculate RRAs"<pos:position pos:line="18" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">(<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">ds_num<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">ds_get<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><operator pos:line="22" pos:column="24">&amp;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="25">ds_def<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="33">ds<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">vl<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">cfg<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call><operator pos:line="22" pos:column="45">)<pos:position pos:line="22" pos:column="46"/></operator> <operator pos:line="22" pos:column="47">&lt;<pos:position pos:line="22" pos:column="51"/></operator> <literal type="number" pos:line="22" pos:column="49">1<pos:position pos:line="22" pos:column="50"/></literal></expr>)<pos:position pos:line="22" pos:column="51"/></condition><then pos:line="22" pos:column="51"> <block pos:line="22" pos:column="52">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"cu_rrd_create_file failed: Could not calculate DSes"<pos:position pos:line="23" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">rra_free<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">rra_num<pos:position pos:line="24" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="23">rra_def<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><operator pos:line="25" pos:column="13">-<pos:position pos:line="25" pos:column="14"/></operator><literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal><operator pos:line="25" pos:column="15">)<pos:position pos:line="25" pos:column="16"/></operator></expr>;<pos:position pos:line="25" pos:column="17"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="28" pos:column="3">argc<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <name pos:line="28" pos:column="10">ds_num<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">+<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">rra_num<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><operator pos:line="30" pos:column="7">(<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">argv<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">malloc<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><sizeof pos:line="30" pos:column="22">sizeof<argument_list pos:line="30" pos:column="28">(<argument><expr><operator pos:line="30" pos:column="29">*<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">argv<pos:position pos:line="30" pos:column="34"/></name></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></sizeof> <operator pos:line="30" pos:column="36">*<pos:position pos:line="30" pos:column="37"/></operator> <operator pos:line="30" pos:column="38">(<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">argc<pos:position pos:line="30" pos:column="43"/></name> <operator pos:line="30" pos:column="44">+<pos:position pos:line="30" pos:column="45"/></operator> <literal type="number" pos:line="30" pos:column="46">1<pos:position pos:line="30" pos:column="47"/></literal><operator pos:line="30" pos:column="47">)<pos:position pos:line="30" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call><operator pos:line="30" pos:column="49">)<pos:position pos:line="30" pos:column="50"/></operator> <operator pos:line="30" pos:column="51">==<pos:position pos:line="30" pos:column="53"/></operator> <name pos:line="30" pos:column="54">NULL<pos:position pos:line="30" pos:column="58"/></name></expr>)<pos:position pos:line="30" pos:column="59"/></condition><then pos:line="30" pos:column="59"> <block pos:line="30" pos:column="60">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">char<pos:position pos:line="31" pos:column="9"/></name></type> <name><name pos:line="31" pos:column="10">errbuf<pos:position pos:line="31" pos:column="16"/></name><index pos:line="31" pos:column="16">[<expr><literal type="number" pos:line="31" pos:column="17">1024<pos:position pos:line="31" pos:column="21"/></literal></expr>]<pos:position pos:line="31" pos:column="22"/></index></name></decl>;<pos:position pos:line="31" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">ERROR<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><literal type="string" pos:line="32" pos:column="11">"cu_rrd_create_file failed: %s"<pos:position pos:line="32" pos:column="42"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="33" pos:column="11">sstrerror<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">errno<pos:position pos:line="33" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="28">errbuf<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="36">sizeof<argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">errbuf<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">rra_free<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><name pos:line="34" pos:column="14">rra_num<pos:position pos:line="34" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="23">rra_def<pos:position pos:line="34" pos:column="30"/></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">ds_free<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><name pos:line="35" pos:column="13">ds_num<pos:position pos:line="35" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="21">ds_def<pos:position pos:line="35" pos:column="27"/></name></expr></argument>)<pos:position pos:line="35" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><operator pos:line="36" pos:column="13">-<pos:position pos:line="36" pos:column="14"/></operator><literal type="number" pos:line="36" pos:column="14">1<pos:position pos:line="36" pos:column="15"/></literal><operator pos:line="36" pos:column="15">)<pos:position pos:line="36" pos:column="16"/></operator></expr>;<pos:position pos:line="36" pos:column="17"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="39" pos:column="3">memcpy<pos:position pos:line="39" pos:column="9"/></name><argument_list pos:line="39" pos:column="9">(<argument><expr><name pos:line="39" pos:column="10">argv<pos:position pos:line="39" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="16">ds_def<pos:position pos:line="39" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="24">ds_num<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">*<pos:position pos:line="39" pos:column="32"/></operator> <sizeof pos:line="39" pos:column="33">sizeof<argument_list pos:line="39" pos:column="39">(<argument><expr><name pos:line="39" pos:column="40">char<pos:position pos:line="39" pos:column="44"/></name> <operator pos:line="39" pos:column="45">*<pos:position pos:line="39" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">memcpy<pos:position pos:line="40" pos:column="9"/></name><argument_list pos:line="40" pos:column="9">(<argument><expr><name pos:line="40" pos:column="10">argv<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">+<pos:position pos:line="40" pos:column="16"/></operator> <name pos:line="40" pos:column="17">ds_num<pos:position pos:line="40" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="25">rra_def<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="34">rra_num<pos:position pos:line="40" pos:column="41"/></name> <operator pos:line="40" pos:column="42">*<pos:position pos:line="40" pos:column="43"/></operator> <sizeof pos:line="40" pos:column="44">sizeof<argument_list pos:line="40" pos:column="50">(<argument><expr><name pos:line="40" pos:column="51">char<pos:position pos:line="40" pos:column="55"/></name> <operator pos:line="40" pos:column="56">*<pos:position pos:line="40" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="41" pos:column="3">argv<pos:position pos:line="41" pos:column="7"/></name><index pos:line="41" pos:column="7">[<expr><name pos:line="41" pos:column="8">ds_num<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">+<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">rra_num<pos:position pos:line="41" pos:column="24"/></name></expr>]<pos:position pos:line="41" pos:column="25"/></index></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="28">NULL<pos:position pos:line="41" pos:column="32"/></name></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><name pos:line="43" pos:column="3">last_up<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <call><name pos:line="43" pos:column="13">CDTIME_T_TO_TIME_T<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name><name pos:line="43" pos:column="32">vl<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">-&gt;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="36">time<pos:position pos:line="43" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">last_up<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">&lt;=<pos:position pos:line="44" pos:column="20"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="5">last_up<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <call><name pos:line="45" pos:column="15">time<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><name pos:line="45" pos:column="20">NULL<pos:position pos:line="45" pos:column="24"/></name></expr></argument>)<pos:position pos:line="45" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="46" pos:column="3">last_up<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">-=<pos:position pos:line="46" pos:column="13"/></operator> <literal type="number" pos:line="46" pos:column="14">1<pos:position pos:line="46" pos:column="15"/></literal></expr>;<pos:position pos:line="46" pos:column="16"/></expr_stmt>

  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name><name pos:line="48" pos:column="7">cfg<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">stepsize<pos:position pos:line="48" pos:column="20"/></name></name> <operator pos:line="48" pos:column="21">&gt;<pos:position pos:line="48" pos:column="25"/></operator> <literal type="number" pos:line="48" pos:column="23">0<pos:position pos:line="48" pos:column="24"/></literal></expr>)<pos:position pos:line="48" pos:column="25"/></condition><then pos:line="48" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="5">stepsize<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <name><name pos:line="49" pos:column="16">cfg<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">-&gt;<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="21">stepsize<pos:position pos:line="49" pos:column="29"/></name></name></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt></block></then>
  <else pos:line="50" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="5">stepsize<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <operator pos:line="51" pos:column="16">(<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="17">unsigned<pos:position pos:line="51" pos:column="25"/></name> <name pos:line="51" pos:column="26">long<pos:position pos:line="51" pos:column="30"/></name><operator pos:line="51" pos:column="30">)<pos:position pos:line="51" pos:column="31"/></operator><call><name pos:line="51" pos:column="31">CDTIME_T_TO_TIME_T<pos:position pos:line="51" pos:column="49"/></name><argument_list pos:line="51" pos:column="49">(<argument><expr><name><name pos:line="51" pos:column="50">vl<pos:position pos:line="51" pos:column="52"/></name><operator pos:line="51" pos:column="52">-&gt;<pos:position pos:line="51" pos:column="57"/></operator><name pos:line="51" pos:column="54">interval<pos:position pos:line="51" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="64"/></expr_stmt></block></else></if>

  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name><name pos:line="53" pos:column="7">cfg<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">async<pos:position pos:line="53" pos:column="17"/></name></name></expr>)<pos:position pos:line="53" pos:column="18"/></condition><then pos:line="53" pos:column="18"> <block pos:line="53" pos:column="19">{
    <expr_stmt><expr><name pos:line="54" pos:column="5">status<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <call><name pos:line="54" pos:column="14">srrd_create_async<pos:position pos:line="54" pos:column="31"/></name><argument_list pos:line="54" pos:column="31">(<argument><expr><name pos:line="54" pos:column="32">filename<pos:position pos:line="54" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="42">stepsize<pos:position pos:line="54" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="52">last_up<pos:position pos:line="54" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="61">argc<pos:position pos:line="54" pos:column="65"/></name></expr></argument>,
                               <argument><expr><operator pos:line="55" pos:column="32">(<pos:position pos:line="55" pos:column="33"/></operator><specifier pos:line="55" pos:column="33">const<pos:position pos:line="55" pos:column="38"/></specifier> <name pos:line="55" pos:column="39">char<pos:position pos:line="55" pos:column="43"/></name> <operator pos:line="55" pos:column="44">*<pos:position pos:line="55" pos:column="45"/></operator><operator pos:line="55" pos:column="45">*<pos:position pos:line="55" pos:column="46"/></operator><operator pos:line="55" pos:column="46">)<pos:position pos:line="55" pos:column="47"/></operator><name pos:line="55" pos:column="47">argv<pos:position pos:line="55" pos:column="51"/></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="53"/></expr_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">status<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">!=<pos:position pos:line="56" pos:column="18"/></operator> <literal type="number" pos:line="56" pos:column="19">0<pos:position pos:line="56" pos:column="20"/></literal></expr>)<pos:position pos:line="56" pos:column="21"/></condition><then pos:line="56" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="7">WARNING<pos:position pos:line="57" pos:column="14"/></name><argument_list pos:line="57" pos:column="14">(<argument><expr><literal type="string" pos:line="57" pos:column="15">"cu_rrd_create_file: srrd_create_async (%s) "<pos:position pos:line="57" pos:column="60"/></literal>
              <literal type="string" pos:line="58" pos:column="15">"returned status %i."<pos:position pos:line="58" pos:column="36"/></literal></expr></argument>,
              <argument><expr><name pos:line="59" pos:column="15">filename<pos:position pos:line="59" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="25">status<pos:position pos:line="59" pos:column="31"/></name></expr></argument>)<pos:position pos:line="59" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="33"/></expr_stmt></block></then></if>
  }<pos:position pos:line="60" pos:column="4"/></block></then> <else pos:line="60" pos:column="5">else <comment type="block" pos:line="60" pos:column="10">/* synchronous */</comment>
  <block pos:line="61" pos:column="3">{
    <expr_stmt><expr><name pos:line="62" pos:column="5">status<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <call><name pos:line="62" pos:column="14">lock_file<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><name pos:line="62" pos:column="24">filename<pos:position pos:line="62" pos:column="32"/></name></expr></argument>)<pos:position pos:line="62" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">status<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">!=<pos:position pos:line="63" pos:column="18"/></operator> <literal type="number" pos:line="63" pos:column="19">0<pos:position pos:line="63" pos:column="20"/></literal></expr>)<pos:position pos:line="63" pos:column="21"/></condition><then pos:line="63" pos:column="21"> <block pos:line="63" pos:column="22">{
      <if pos:line="64" pos:column="7">if <condition pos:line="64" pos:column="10">(<expr><name pos:line="64" pos:column="11">status<pos:position pos:line="64" pos:column="17"/></name> <operator pos:line="64" pos:column="18">==<pos:position pos:line="64" pos:column="20"/></operator> <name pos:line="64" pos:column="21">EEXIST<pos:position pos:line="64" pos:column="27"/></name></expr>)<pos:position pos:line="64" pos:column="28"/></condition><then pos:line="64" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="9">NOTICE<pos:position pos:line="65" pos:column="15"/></name><argument_list pos:line="65" pos:column="15">(<argument><expr><literal type="string" pos:line="65" pos:column="16">"cu_rrd_create_file: File \"%s\" is already being created."<pos:position pos:line="65" pos:column="75"/></literal></expr></argument>,
               <argument><expr><name pos:line="66" pos:column="16">filename<pos:position pos:line="66" pos:column="24"/></name></expr></argument>)<pos:position pos:line="66" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="26"/></expr_stmt></block></then>
      <else pos:line="67" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="9">ERROR<pos:position pos:line="68" pos:column="14"/></name><argument_list pos:line="68" pos:column="14">(<argument><expr><literal type="string" pos:line="68" pos:column="15">"cu_rrd_create_file: Unable to lock file \"%s\"."<pos:position pos:line="68" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="66">filename<pos:position pos:line="68" pos:column="74"/></name></expr></argument>)<pos:position pos:line="68" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="76"/></expr_stmt></block></else></if>
    }<pos:position pos:line="69" pos:column="6"/></block></then> <else pos:line="69" pos:column="7">else <block pos:line="69" pos:column="12">{
      <expr_stmt><expr><name pos:line="70" pos:column="7">status<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator>
          <call><name pos:line="71" pos:column="11">srrd_create<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><name pos:line="71" pos:column="23">filename<pos:position pos:line="71" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="33">stepsize<pos:position pos:line="71" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="43">last_up<pos:position pos:line="71" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="52">argc<pos:position pos:line="71" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="58">(<pos:position pos:line="71" pos:column="59"/></operator><specifier pos:line="71" pos:column="59">const<pos:position pos:line="71" pos:column="64"/></specifier> <name pos:line="71" pos:column="65">char<pos:position pos:line="71" pos:column="69"/></name> <operator pos:line="71" pos:column="70">*<pos:position pos:line="71" pos:column="71"/></operator><operator pos:line="71" pos:column="71">*<pos:position pos:line="71" pos:column="72"/></operator><operator pos:line="71" pos:column="72">)<pos:position pos:line="71" pos:column="73"/></operator><name pos:line="71" pos:column="73">argv<pos:position pos:line="71" pos:column="77"/></name></expr></argument>)<pos:position pos:line="71" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="79"/></expr_stmt>

      <if pos:line="73" pos:column="7">if <condition pos:line="73" pos:column="10">(<expr><name pos:line="73" pos:column="11">status<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">!=<pos:position pos:line="73" pos:column="20"/></operator> <literal type="number" pos:line="73" pos:column="21">0<pos:position pos:line="73" pos:column="22"/></literal></expr>)<pos:position pos:line="73" pos:column="23"/></condition><then pos:line="73" pos:column="23"> <block pos:line="73" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">WARNING<pos:position pos:line="74" pos:column="16"/></name><argument_list pos:line="74" pos:column="16">(<argument><expr><literal type="string" pos:line="74" pos:column="17">"cu_rrd_create_file: srrd_create (%s) returned status %i."<pos:position pos:line="74" pos:column="75"/></literal></expr></argument>,
                <argument><expr><name pos:line="75" pos:column="17">filename<pos:position pos:line="75" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="27">status<pos:position pos:line="75" pos:column="33"/></name></expr></argument>)<pos:position pos:line="75" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="76" pos:column="8"/></block></then> <else pos:line="76" pos:column="9">else <block pos:line="76" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">DEBUG<pos:position pos:line="77" pos:column="14"/></name><argument_list pos:line="77" pos:column="14">(<argument><expr><literal type="string" pos:line="77" pos:column="15">"cu_rrd_create_file: Successfully created RRD file \"%s\"."<pos:position pos:line="77" pos:column="74"/></literal></expr></argument>,
              <argument><expr><name pos:line="78" pos:column="15">filename<pos:position pos:line="78" pos:column="23"/></name></expr></argument>)<pos:position pos:line="78" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="79" pos:column="8"/></block></else></if>
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">unlock_file<pos:position pos:line="80" pos:column="18"/></name><argument_list pos:line="80" pos:column="18">(<argument><expr><name pos:line="80" pos:column="19">filename<pos:position pos:line="80" pos:column="27"/></name></expr></argument>)<pos:position pos:line="80" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></else></if>
  }<pos:position pos:line="82" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="84" pos:column="3">free<pos:position pos:line="84" pos:column="7"/></name><argument_list pos:line="84" pos:column="7">(<argument><expr><name pos:line="84" pos:column="8">argv<pos:position pos:line="84" pos:column="12"/></name></expr></argument>)<pos:position pos:line="84" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">ds_free<pos:position pos:line="85" pos:column="10"/></name><argument_list pos:line="85" pos:column="10">(<argument><expr><name pos:line="85" pos:column="11">ds_num<pos:position pos:line="85" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="19">ds_def<pos:position pos:line="85" pos:column="25"/></name></expr></argument>)<pos:position pos:line="85" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">rra_free<pos:position pos:line="86" pos:column="11"/></name><argument_list pos:line="86" pos:column="11">(<argument><expr><name pos:line="86" pos:column="12">rra_num<pos:position pos:line="86" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="21">rra_def<pos:position pos:line="86" pos:column="28"/></name></expr></argument>)<pos:position pos:line="86" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="30"/></expr_stmt>

  <return pos:line="88" pos:column="3">return <expr><operator pos:line="88" pos:column="10">(<pos:position pos:line="88" pos:column="11"/></operator><name pos:line="88" pos:column="11">status<pos:position pos:line="88" pos:column="17"/></name><operator pos:line="88" pos:column="17">)<pos:position pos:line="88" pos:column="18"/></operator></expr>;<pos:position pos:line="88" pos:column="19"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_707_collectd-4.4.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">handle_flush<pos:position pos:line="1" pos:column="17"/></name> <parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">FILE<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">fh<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">fields<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">fields_num<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">success<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">error<pos:position pos:line="4" pos:column="18"/></name>   <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">timeout<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><operator pos:line="6" pos:column="23">-<pos:position pos:line="6" pos:column="24"/></operator><literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">1<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></init> <condition><expr><name pos:line="10" pos:column="21">i<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&lt;<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="25">fields_num<pos:position pos:line="10" pos:column="35"/></name></expr>;<pos:position pos:line="10" pos:column="36"/></condition> <incr><expr><name pos:line="10" pos:column="37">i<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">++<pos:position pos:line="10" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="41"/></control>
	<block pos:line="11" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name> <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier></type><name pos:line="12" pos:column="23">option<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><name><name pos:line="12" pos:column="32">fields<pos:position pos:line="12" pos:column="38"/></name><index pos:line="12" pos:column="38">[<expr><name pos:line="12" pos:column="39">i<pos:position pos:line="12" pos:column="40"/></name></expr>]<pos:position pos:line="12" pos:column="41"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type>   <name pos:line="13" pos:column="23">status<pos:position pos:line="13" pos:column="29"/></name> <init pos:line="13" pos:column="30">= <expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><call><name pos:line="15" pos:column="21">strncasecmp<pos:position pos:line="15" pos:column="32"/></name> <argument_list pos:line="15" pos:column="33">(<argument><expr><literal type="string" pos:line="15" pos:column="34">"plugin="<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="45">option<pos:position pos:line="15" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="53">strlen<pos:position pos:line="15" pos:column="59"/></name> <argument_list pos:line="15" pos:column="60">(<argument><expr><literal type="string" pos:line="15" pos:column="61">"plugin="<pos:position pos:line="15" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call> <operator pos:line="15" pos:column="73">==<pos:position pos:line="15" pos:column="75"/></operator> <literal type="number" pos:line="15" pos:column="76">0<pos:position pos:line="15" pos:column="77"/></literal></expr>)<pos:position pos:line="15" pos:column="78"/></condition><then pos:line="15" pos:column="78">
		<block pos:line="16" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="17" pos:column="25">char<pos:position pos:line="17" pos:column="29"/></name> <modifier pos:line="17" pos:column="30">*<pos:position pos:line="17" pos:column="31"/></modifier></type><name pos:line="17" pos:column="31">plugin<pos:position pos:line="17" pos:column="37"/></name> <init pos:line="17" pos:column="38">= <expr><name pos:line="17" pos:column="40">option<pos:position pos:line="17" pos:column="46"/></name> <operator pos:line="17" pos:column="47">+<pos:position pos:line="17" pos:column="48"/></operator> <call><name pos:line="17" pos:column="49">strlen<pos:position pos:line="17" pos:column="55"/></name> <argument_list pos:line="17" pos:column="56">(<argument><expr><literal type="string" pos:line="17" pos:column="57">"plugin="<pos:position pos:line="17" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="68"/></decl_stmt>

			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><literal type="number" pos:line="19" pos:column="29">0<pos:position pos:line="19" pos:column="30"/></literal> <operator pos:line="19" pos:column="31">==<pos:position pos:line="19" pos:column="33"/></operator> <call><name pos:line="19" pos:column="34">plugin_flush_one<pos:position pos:line="19" pos:column="50"/></name> <argument_list pos:line="19" pos:column="51">(<argument><expr><name pos:line="19" pos:column="52">timeout<pos:position pos:line="19" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="61">plugin<pos:position pos:line="19" pos:column="67"/></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="69"/></condition><then pos:line="19" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="33">++<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">success<pos:position pos:line="20" pos:column="42"/></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt></block></then>
			<else pos:line="21" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="33">++<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">error<pos:position pos:line="22" pos:column="40"/></name></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt></block></else></if>
		}<pos:position pos:line="23" pos:column="18"/></block></then>
		<elseif pos:line="24" pos:column="17">else <if pos:line="24" pos:column="22">if <condition pos:line="24" pos:column="25">(<expr><call><name pos:line="24" pos:column="26">strncasecmp<pos:position pos:line="24" pos:column="37"/></name> <argument_list pos:line="24" pos:column="38">(<argument><expr><literal type="string" pos:line="24" pos:column="39">"timeout="<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">option<pos:position pos:line="24" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="59">strlen<pos:position pos:line="24" pos:column="65"/></name> <argument_list pos:line="24" pos:column="66">(<argument><expr><literal type="string" pos:line="24" pos:column="67">"timeout="<pos:position pos:line="24" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="79"/></argument_list></call> <operator pos:line="24" pos:column="80">==<pos:position pos:line="24" pos:column="82"/></operator> <literal type="number" pos:line="24" pos:column="83">0<pos:position pos:line="24" pos:column="84"/></literal></expr>)<pos:position pos:line="24" pos:column="85"/></condition><then pos:line="24" pos:column="85">
		<block pos:line="25" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="26" pos:column="25">char<pos:position pos:line="26" pos:column="29"/></name> <modifier pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></modifier></type><name pos:line="26" pos:column="31">endptr<pos:position pos:line="26" pos:column="37"/></name> <init pos:line="26" pos:column="38">= <expr><name pos:line="26" pos:column="40">NULL<pos:position pos:line="26" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="45"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="27" pos:column="25">char<pos:position pos:line="27" pos:column="29"/></name> <modifier pos:line="27" pos:column="30">*<pos:position pos:line="27" pos:column="31"/></modifier></type><name pos:line="27" pos:column="31">value<pos:position pos:line="27" pos:column="36"/></name>  <init pos:line="27" pos:column="38">= <expr><name pos:line="27" pos:column="40">option<pos:position pos:line="27" pos:column="46"/></name> <operator pos:line="27" pos:column="47">+<pos:position pos:line="27" pos:column="48"/></operator> <call><name pos:line="27" pos:column="49">strlen<pos:position pos:line="27" pos:column="55"/></name> <argument_list pos:line="27" pos:column="56">(<argument><expr><literal type="string" pos:line="27" pos:column="57">"timeout="<pos:position pos:line="27" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="69"/></decl_stmt>

			<expr_stmt><expr><name pos:line="29" pos:column="25">errno<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <literal type="number" pos:line="29" pos:column="33">0<pos:position pos:line="29" pos:column="34"/></literal></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">timeout<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">=<pos:position pos:line="30" pos:column="34"/></operator> <call><name pos:line="30" pos:column="35">strtol<pos:position pos:line="30" pos:column="41"/></name> <argument_list pos:line="30" pos:column="42">(<argument><expr><name pos:line="30" pos:column="43">value<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="50">&amp;<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="51">endptr<pos:position pos:line="30" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="59">0<pos:position pos:line="30" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt>

			<if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><operator pos:line="32" pos:column="29">(<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">endptr<pos:position pos:line="32" pos:column="36"/></name> <operator pos:line="32" pos:column="37">==<pos:position pos:line="32" pos:column="39"/></operator> <name pos:line="32" pos:column="40">value<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">)<pos:position pos:line="32" pos:column="46"/></operator> <operator pos:line="32" pos:column="47">||<pos:position pos:line="32" pos:column="49"/></operator> <operator pos:line="32" pos:column="50">(<pos:position pos:line="32" pos:column="51"/></operator><literal type="number" pos:line="32" pos:column="51">0<pos:position pos:line="32" pos:column="52"/></literal> <operator pos:line="32" pos:column="53">!=<pos:position pos:line="32" pos:column="55"/></operator> <name pos:line="32" pos:column="56">errno<pos:position pos:line="32" pos:column="61"/></name><operator pos:line="32" pos:column="61">)<pos:position pos:line="32" pos:column="62"/></operator></expr>)<pos:position pos:line="32" pos:column="63"/></condition><then pos:line="32" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="33">status<pos:position pos:line="33" pos:column="39"/></name> <operator pos:line="33" pos:column="40">=<pos:position pos:line="33" pos:column="41"/></operator> <operator pos:line="33" pos:column="42">-<pos:position pos:line="33" pos:column="43"/></operator><literal type="number" pos:line="33" pos:column="43">1<pos:position pos:line="33" pos:column="44"/></literal></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt></block></then>
			<elseif pos:line="34" pos:column="25">else <if pos:line="34" pos:column="30">if <condition pos:line="34" pos:column="33">(<expr><literal type="number" pos:line="34" pos:column="34">0<pos:position pos:line="34" pos:column="35"/></literal> <operator pos:line="34" pos:column="36">&gt;=<pos:position pos:line="34" pos:column="41"/></operator> <name pos:line="34" pos:column="39">timeout<pos:position pos:line="34" pos:column="46"/></name></expr>)<pos:position pos:line="34" pos:column="47"/></condition><then pos:line="34" pos:column="47">
				<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="33">timeout<pos:position pos:line="35" pos:column="40"/></name> <operator pos:line="35" pos:column="41">=<pos:position pos:line="35" pos:column="42"/></operator> <operator pos:line="35" pos:column="43">-<pos:position pos:line="35" pos:column="44"/></operator><literal type="number" pos:line="35" pos:column="44">1<pos:position pos:line="35" pos:column="45"/></literal></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if></elseif>
		<else pos:line="37" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="25">status<pos:position pos:line="38" pos:column="31"/></name> <operator pos:line="38" pos:column="32">=<pos:position pos:line="38" pos:column="33"/></operator> <operator pos:line="38" pos:column="34">-<pos:position pos:line="38" pos:column="35"/></operator><literal type="number" pos:line="38" pos:column="35">1<pos:position pos:line="38" pos:column="36"/></literal></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt></block></else></if>

		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">status<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">!=<pos:position pos:line="40" pos:column="30"/></operator> <literal type="number" pos:line="40" pos:column="31">0<pos:position pos:line="40" pos:column="32"/></literal></expr>)<pos:position pos:line="40" pos:column="33"/></condition><then pos:line="40" pos:column="33">
		<block pos:line="41" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">print_to_socket<pos:position pos:line="42" pos:column="40"/></name> <argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">fh<pos:position pos:line="42" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="46">"-1 Cannot parse option %s\n"<pos:position pos:line="42" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="77">option<pos:position pos:line="42" pos:column="83"/></name></expr></argument>)<pos:position pos:line="42" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="85"/></expr_stmt>
			<return pos:line="43" pos:column="25">return <expr><operator pos:line="43" pos:column="32">(<pos:position pos:line="43" pos:column="33"/></operator><operator pos:line="43" pos:column="33">-<pos:position pos:line="43" pos:column="34"/></operator><literal type="number" pos:line="43" pos:column="34">1<pos:position pos:line="43" pos:column="35"/></literal><operator pos:line="43" pos:column="35">)<pos:position pos:line="43" pos:column="36"/></operator></expr>;<pos:position pos:line="43" pos:column="37"/></return>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block></for>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">(<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">success<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">+<pos:position pos:line="47" pos:column="23"/></operator> <name pos:line="47" pos:column="24">error<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">)<pos:position pos:line="47" pos:column="30"/></operator> <operator pos:line="47" pos:column="31">&gt;<pos:position pos:line="47" pos:column="35"/></operator> <literal type="number" pos:line="47" pos:column="33">0<pos:position pos:line="47" pos:column="34"/></literal></expr>)<pos:position pos:line="47" pos:column="35"/></condition><then pos:line="47" pos:column="35">
	<block pos:line="48" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">print_to_socket<pos:position pos:line="49" pos:column="32"/></name> <argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">fh<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="38">"0 Done: %i successful, %i errors\n"<pos:position pos:line="49" pos:column="74"/></literal></expr></argument>,
				<argument><expr><name pos:line="50" pos:column="33">success<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="42">error<pos:position pos:line="50" pos:column="47"/></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then>
	<else pos:line="52" pos:column="9">else
	<block pos:line="53" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">plugin_flush_all<pos:position pos:line="54" pos:column="33"/></name> <argument_list pos:line="54" pos:column="34">(<argument><expr><name pos:line="54" pos:column="35">timeout<pos:position pos:line="54" pos:column="42"/></name></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">print_to_socket<pos:position pos:line="55" pos:column="32"/></name> <argument_list pos:line="55" pos:column="33">(<argument><expr><name pos:line="55" pos:column="34">fh<pos:position pos:line="55" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="38">"0 Done\n"<pos:position pos:line="55" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="56" pos:column="10"/></block></else></if>

	<return pos:line="58" pos:column="9">return <expr><operator pos:line="58" pos:column="16">(<pos:position pos:line="58" pos:column="17"/></operator><literal type="number" pos:line="58" pos:column="17">0<pos:position pos:line="58" pos:column="18"/></literal><operator pos:line="58" pos:column="18">)<pos:position pos:line="58" pos:column="19"/></operator></expr>;<pos:position pos:line="58" pos:column="20"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_582_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fc_free_targets<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">fc_target_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">t<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <comment type="block" pos:line="1" pos:column="46">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">t<pos:position pos:line="3" pos:column="8"/></name> <operator pos:line="3" pos:column="9">==<pos:position pos:line="3" pos:column="11"/></operator> <name pos:line="3" pos:column="12">NULL<pos:position pos:line="3" pos:column="16"/></name></expr>)<pos:position pos:line="3" pos:column="17"/></condition><then pos:line="3" pos:column="17">
    <block type="pseudo"><return pos:line="4" pos:column="5">return;<pos:position pos:line="4" pos:column="12"/></return></block></then></if>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">t<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">proc<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">destroy<pos:position pos:line="6" pos:column="22"/></name></name> <operator pos:line="6" pos:column="23">!=<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">NULL<pos:position pos:line="6" pos:column="30"/></name></expr>)<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call pos:line="7" pos:column="5">(<modifier pos:line="7" pos:column="6">*<pos:position pos:line="7" pos:column="7"/></modifier><name><name pos:line="7" pos:column="7">t<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">-&gt;<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="10">proc<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">.<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">destroy<pos:position pos:line="7" pos:column="22"/></name></name>) <argument_list pos:line="7" pos:column="24">(<argument><expr><operator pos:line="7" pos:column="25">&amp;<pos:position pos:line="7" pos:column="30"/></operator><name><name pos:line="7" pos:column="26">t<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">user_data<pos:position pos:line="7" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt></block></then>
  <elseif pos:line="8" pos:column="3">else <if pos:line="8" pos:column="8">if <condition pos:line="8" pos:column="11">(<expr><name><name pos:line="8" pos:column="12">t<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">user_data<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">!=<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">NULL<pos:position pos:line="8" pos:column="32"/></name></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name> <argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="string" pos:line="10" pos:column="12">"Filter sybsystem: fc_free_targets: There is user data, but no "<pos:position pos:line="10" pos:column="76"/></literal>
        <literal type="string" pos:line="11" pos:column="9">"destroy functions has been specified. "<pos:position pos:line="11" pos:column="49"/></literal>
        <literal type="string" pos:line="12" pos:column="9">"Memory will probably be lost!"<pos:position pos:line="12" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if></elseif></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">t<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">next<pos:position pos:line="15" pos:column="14"/></name></name> <operator pos:line="15" pos:column="15">!=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">NULL<pos:position pos:line="15" pos:column="22"/></name></expr>)<pos:position pos:line="15" pos:column="23"/></condition><then pos:line="15" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="5">fc_free_targets<pos:position pos:line="16" pos:column="20"/></name> <argument_list pos:line="16" pos:column="21">(<argument><expr><name><name pos:line="16" pos:column="22">t<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">next<pos:position pos:line="16" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">free<pos:position pos:line="18" pos:column="7"/></name> <argument_list pos:line="18" pos:column="8">(<argument><expr><name pos:line="18" pos:column="9">t<pos:position pos:line="18" pos:column="10"/></name></expr></argument>)<pos:position pos:line="18" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="12"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_541_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">BMP085_read<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">double<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">pressure<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">double<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">temperature<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <block pos:line="1" pos:column="63">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">__s32<pos:position pos:line="2" pos:column="8"/></name></type> <name pos:line="2" pos:column="9">res<pos:position pos:line="2" pos:column="12"/></name></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">__u8<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">measBuff<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><literal type="number" pos:line="3" pos:column="17">3<pos:position pos:line="3" pos:column="18"/></literal></expr>]<pos:position pos:line="3" pos:column="19"/></index></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">adc_pressure<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">long<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">adc_temperature<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">errbuf<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><literal type="number" pos:line="8" pos:column="15">1024<pos:position pos:line="8" pos:column="19"/></literal></expr>]<pos:position pos:line="8" pos:column="20"/></index></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* start conversion of temperature */</comment>
  <expr_stmt><expr><name pos:line="11" pos:column="3">res<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">i2c_smbus_write_byte_data<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">i2c_bus_fd<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="47">BMP085_ADDR_CTRL_REG<pos:position pos:line="11" pos:column="67"/></name></expr></argument>,
                                  <argument><expr><name pos:line="12" pos:column="35">BMP085_CMD_CONVERT_TEMP<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">res<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">&lt;<pos:position pos:line="13" pos:column="15"/></operator> <literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal></expr>)<pos:position pos:line="13" pos:column="15"/></condition><then pos:line="13" pos:column="15"> <block pos:line="13" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"barometer: BMP085_read - problem requesting temperature conversion: "<pos:position pos:line="14" pos:column="81"/></literal>
          <literal type="string" pos:line="15" pos:column="11">"%s"<pos:position pos:line="15" pos:column="15"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="16" pos:column="11">sstrerror<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">errno<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">errbuf<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="36">sizeof<argument_list pos:line="16" pos:column="42">(<argument><expr><name pos:line="16" pos:column="43">errbuf<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><literal type="number" pos:line="17" pos:column="12">1<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">usleep<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name pos:line="20" pos:column="10">BMP085_TIME_CNV_TEMP<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt> <comment type="block" pos:line="20" pos:column="33">/* wait for the conversion */</comment>

  <expr_stmt><expr><name pos:line="22" pos:column="3">res<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator>
      <call><name pos:line="23" pos:column="7">i2c_smbus_read_i2c_block_data<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">i2c_bus_fd<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">BMP085_ADDR_CONV<pos:position pos:line="23" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="67">2<pos:position pos:line="23" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="70">measBuff<pos:position pos:line="23" pos:column="78"/></name></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="80"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">res<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">&lt;<pos:position pos:line="24" pos:column="15"/></operator> <literal type="number" pos:line="24" pos:column="13">0<pos:position pos:line="24" pos:column="14"/></literal></expr>)<pos:position pos:line="24" pos:column="15"/></condition><then pos:line="24" pos:column="15"> <block pos:line="24" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">ERROR<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><literal type="string" pos:line="25" pos:column="11">"barometer: BMP085_read - problem reading temperature data: %s"<pos:position pos:line="25" pos:column="74"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="26" pos:column="11">sstrerror<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">errno<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="28">errbuf<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="36">sizeof<argument_list pos:line="26" pos:column="42">(<argument><expr><name pos:line="26" pos:column="43">errbuf<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><literal type="number" pos:line="27" pos:column="12">1<pos:position pos:line="27" pos:column="13"/></literal></expr>;<pos:position pos:line="27" pos:column="14"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="30" pos:column="3">adc_temperature<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <operator pos:line="30" pos:column="21">(<pos:position pos:line="30" pos:column="22"/></operator><operator pos:line="30" pos:column="22">(<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">unsigned<pos:position pos:line="30" pos:column="31"/></name> <name pos:line="30" pos:column="32">short<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">)<pos:position pos:line="30" pos:column="38"/></operator><name><name pos:line="30" pos:column="38">measBuff<pos:position pos:line="30" pos:column="46"/></name><index pos:line="30" pos:column="46">[<expr><literal type="number" pos:line="30" pos:column="47">0<pos:position pos:line="30" pos:column="48"/></literal></expr>]<pos:position pos:line="30" pos:column="49"/></index></name> <operator pos:line="30" pos:column="50">&lt;&lt;<pos:position pos:line="30" pos:column="58"/></operator> <literal type="number" pos:line="30" pos:column="53">8<pos:position pos:line="30" pos:column="54"/></literal><operator pos:line="30" pos:column="54">)<pos:position pos:line="30" pos:column="55"/></operator> <operator pos:line="30" pos:column="56">+<pos:position pos:line="30" pos:column="57"/></operator> <name><name pos:line="30" pos:column="58">measBuff<pos:position pos:line="30" pos:column="66"/></name><index pos:line="30" pos:column="66">[<expr><literal type="number" pos:line="30" pos:column="67">1<pos:position pos:line="30" pos:column="68"/></literal></expr>]<pos:position pos:line="30" pos:column="69"/></index></name></expr>;<pos:position pos:line="30" pos:column="70"/></expr_stmt>

  <comment type="block" pos:line="32" pos:column="3">/* get presure */</comment>
  <expr_stmt><expr><name pos:line="33" pos:column="3">res<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <call><name pos:line="33" pos:column="9">i2c_smbus_write_byte_data<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><name pos:line="33" pos:column="35">i2c_bus_fd<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">BMP085_ADDR_CTRL_REG<pos:position pos:line="33" pos:column="67"/></name></expr></argument>,
                                  <argument><expr><name pos:line="34" pos:column="35">bmp085_cmdCnvPress<pos:position pos:line="34" pos:column="53"/></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="55"/></expr_stmt>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">res<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">&lt;<pos:position pos:line="35" pos:column="15"/></operator> <literal type="number" pos:line="35" pos:column="13">0<pos:position pos:line="35" pos:column="14"/></literal></expr>)<pos:position pos:line="35" pos:column="15"/></condition><then pos:line="35" pos:column="15"> <block pos:line="35" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">ERROR<pos:position pos:line="36" pos:column="10"/></name><argument_list pos:line="36" pos:column="10">(<argument><expr><literal type="string" pos:line="36" pos:column="11">"barometer: BMP085_read - problem requesting pressure conversion: %s"<pos:position pos:line="36" pos:column="80"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="37" pos:column="11">sstrerror<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">errno<pos:position pos:line="37" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="28">errbuf<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="36">sizeof<argument_list pos:line="37" pos:column="42">(<argument><expr><name pos:line="37" pos:column="43">errbuf<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><literal type="number" pos:line="38" pos:column="12">1<pos:position pos:line="38" pos:column="13"/></literal></expr>;<pos:position pos:line="38" pos:column="14"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="41" pos:column="3">usleep<pos:position pos:line="41" pos:column="9"/></name><argument_list pos:line="41" pos:column="9">(<argument><expr><name pos:line="41" pos:column="10">bmp085_timeCnvPress<pos:position pos:line="41" pos:column="29"/></name></expr></argument>)<pos:position pos:line="41" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt> <comment type="block" pos:line="41" pos:column="32">/* wait for the conversion */</comment>

  <expr_stmt><expr><name pos:line="43" pos:column="3">res<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator>
      <call><name pos:line="44" pos:column="7">i2c_smbus_read_i2c_block_data<pos:position pos:line="44" pos:column="36"/></name><argument_list pos:line="44" pos:column="36">(<argument><expr><name pos:line="44" pos:column="37">i2c_bus_fd<pos:position pos:line="44" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="49">BMP085_ADDR_CONV<pos:position pos:line="44" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="67">3<pos:position pos:line="44" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="70">measBuff<pos:position pos:line="44" pos:column="78"/></name></expr></argument>)<pos:position pos:line="44" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="80"/></expr_stmt>
  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><name pos:line="45" pos:column="7">res<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">&lt;<pos:position pos:line="45" pos:column="15"/></operator> <literal type="number" pos:line="45" pos:column="13">0<pos:position pos:line="45" pos:column="14"/></literal></expr>)<pos:position pos:line="45" pos:column="15"/></condition><then pos:line="45" pos:column="15"> <block pos:line="45" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">ERROR<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><literal type="string" pos:line="46" pos:column="11">"barometer: BMP085_read - problem reading pressure data: %s"<pos:position pos:line="46" pos:column="71"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="47" pos:column="11">sstrerror<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">errno<pos:position pos:line="47" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="28">errbuf<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="36">sizeof<argument_list pos:line="47" pos:column="42">(<argument><expr><name pos:line="47" pos:column="43">errbuf<pos:position pos:line="47" pos:column="49"/></name></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt>
    <return pos:line="48" pos:column="5">return <expr><literal type="number" pos:line="48" pos:column="12">1<pos:position pos:line="48" pos:column="13"/></literal></expr>;<pos:position pos:line="48" pos:column="14"/></return>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="51" pos:column="3">adc_pressure<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <call pos:line="51" pos:column="18">(<name pos:line="51" pos:column="19">long<pos:position pos:line="51" pos:column="23"/></name>)<argument_list pos:line="51" pos:column="24">(<argument><expr><operator pos:line="51" pos:column="25">(<pos:position pos:line="51" pos:column="26"/></operator><operator pos:line="51" pos:column="26">(<pos:position pos:line="51" pos:column="27"/></operator><operator pos:line="51" pos:column="27">(<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="28">ulong<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">)<pos:position pos:line="51" pos:column="34"/></operator><name><name pos:line="51" pos:column="34">measBuff<pos:position pos:line="51" pos:column="42"/></name><index pos:line="51" pos:column="42">[<expr><literal type="number" pos:line="51" pos:column="43">0<pos:position pos:line="51" pos:column="44"/></literal></expr>]<pos:position pos:line="51" pos:column="45"/></index></name> <operator pos:line="51" pos:column="46">&lt;&lt;<pos:position pos:line="51" pos:column="54"/></operator> <literal type="number" pos:line="51" pos:column="49">16<pos:position pos:line="51" pos:column="51"/></literal><operator pos:line="51" pos:column="51">)<pos:position pos:line="51" pos:column="52"/></operator> <operator pos:line="51" pos:column="53">|<pos:position pos:line="51" pos:column="54"/></operator>
                         <operator pos:line="52" pos:column="26">(<pos:position pos:line="52" pos:column="27"/></operator><operator pos:line="52" pos:column="27">(<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">ulong<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">)<pos:position pos:line="52" pos:column="34"/></operator><name><name pos:line="52" pos:column="34">measBuff<pos:position pos:line="52" pos:column="42"/></name><index pos:line="52" pos:column="42">[<expr><literal type="number" pos:line="52" pos:column="43">1<pos:position pos:line="52" pos:column="44"/></literal></expr>]<pos:position pos:line="52" pos:column="45"/></index></name> <operator pos:line="52" pos:column="46">&lt;&lt;<pos:position pos:line="52" pos:column="54"/></operator> <literal type="number" pos:line="52" pos:column="49">8<pos:position pos:line="52" pos:column="50"/></literal><operator pos:line="52" pos:column="50">)<pos:position pos:line="52" pos:column="51"/></operator> <operator pos:line="52" pos:column="52">|<pos:position pos:line="52" pos:column="53"/></operator> <operator pos:line="52" pos:column="54">(<pos:position pos:line="52" pos:column="55"/></operator><name pos:line="52" pos:column="55">ulong<pos:position pos:line="52" pos:column="60"/></name><operator pos:line="52" pos:column="60">)<pos:position pos:line="52" pos:column="61"/></operator><name><name pos:line="52" pos:column="61">measBuff<pos:position pos:line="52" pos:column="69"/></name><index pos:line="52" pos:column="69">[<expr><literal type="number" pos:line="52" pos:column="70">2<pos:position pos:line="52" pos:column="71"/></literal></expr>]<pos:position pos:line="52" pos:column="72"/></index></name><operator pos:line="52" pos:column="72">)<pos:position pos:line="52" pos:column="73"/></operator> <operator pos:line="52" pos:column="74">&gt;&gt;<pos:position pos:line="52" pos:column="79"/></operator>
                        <operator pos:line="53" pos:column="25">(<pos:position pos:line="53" pos:column="26"/></operator><literal type="number" pos:line="53" pos:column="26">8<pos:position pos:line="53" pos:column="27"/></literal> <operator pos:line="53" pos:column="28">-<pos:position pos:line="53" pos:column="29"/></operator> <name pos:line="53" pos:column="30">bmp085_oversampling<pos:position pos:line="53" pos:column="49"/></name><operator pos:line="53" pos:column="49">)<pos:position pos:line="53" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="53" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="52"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">DEBUG<pos:position pos:line="55" pos:column="8"/></name><argument_list pos:line="55" pos:column="8">(<argument><expr><literal type="string" pos:line="55" pos:column="9">"barometer: BMP085_read - raw pressure ADC value = %ld, "<pos:position pos:line="55" pos:column="66"/></literal>
        <literal type="string" pos:line="56" pos:column="9">"raw temperature ADC value = %ld"<pos:position pos:line="56" pos:column="42"/></literal></expr></argument>,
        <argument><expr><name pos:line="57" pos:column="9">adc_pressure<pos:position pos:line="57" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="23">adc_temperature<pos:position pos:line="57" pos:column="38"/></name></expr></argument>)<pos:position pos:line="57" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="59" pos:column="3">BMP085_convert_adc_to_real<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><name pos:line="59" pos:column="30">adc_pressure<pos:position pos:line="59" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">adc_temperature<pos:position pos:line="59" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="61">pressure<pos:position pos:line="59" pos:column="69"/></name></expr></argument>,
                             <argument><expr><name pos:line="60" pos:column="30">temperature<pos:position pos:line="60" pos:column="41"/></name></expr></argument>)<pos:position pos:line="60" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="43"/></expr_stmt>

  <return pos:line="62" pos:column="3">return <expr><literal type="number" pos:line="62" pos:column="10">0<pos:position pos:line="62" pos:column="11"/></literal></expr>;<pos:position pos:line="62" pos:column="12"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

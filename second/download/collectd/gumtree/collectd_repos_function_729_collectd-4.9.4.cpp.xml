<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_729_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">av2notification_meta<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">pTHX_<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">AV<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">array<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">notification_meta_t<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier><modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">meta<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">notification_meta_t<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier><modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">m<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">meta<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name pos:line="5" pos:column="19">av_len<pos:position pos:line="5" pos:column="25"/></name> <argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">array<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></init> <condition><expr><name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;=<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="26">len<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></condition> <incr><expr><operator pos:line="8" pos:column="31">++<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">i<pos:position pos:line="8" pos:column="34"/></name></expr></incr>)<pos:position pos:line="8" pos:column="35"/></control> <block pos:line="8" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">SV<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier><modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">tmp<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><call><name pos:line="9" pos:column="28">av_fetch<pos:position pos:line="9" pos:column="36"/></name> <argument_list pos:line="9" pos:column="37">(<argument><expr><name pos:line="9" pos:column="38">array<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">i<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="48">0<pos:position pos:line="9" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">HV<pos:position pos:line="10" pos:column="19"/></name>  <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">hash<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">NULL<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">==<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">tmp<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><operator pos:line="13" pos:column="32">-<pos:position pos:line="13" pos:column="33"/></operator><literal type="number" pos:line="13" pos:column="33">1<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></return></block></then></if>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator> <operator pos:line="15" pos:column="23">(<pos:position pos:line="15" pos:column="24"/></operator><call><name pos:line="15" pos:column="24">SvROK<pos:position pos:line="15" pos:column="29"/></name> <argument_list pos:line="15" pos:column="30">(<argument><expr><operator pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">tmp<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call> <operator pos:line="15" pos:column="37">&amp;&amp;<pos:position pos:line="15" pos:column="47"/></operator> <operator pos:line="15" pos:column="40">(<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="41">SVt_PVHV<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">==<pos:position pos:line="15" pos:column="52"/></operator> <call><name pos:line="15" pos:column="53">SvTYPE<pos:position pos:line="15" pos:column="59"/></name> <argument_list pos:line="15" pos:column="60">(<argument><expr><call><name pos:line="15" pos:column="61">SvRV<pos:position pos:line="15" pos:column="65"/></name> <argument_list pos:line="15" pos:column="66">(<argument><expr><operator pos:line="15" pos:column="67">*<pos:position pos:line="15" pos:column="68"/></operator><name pos:line="15" pos:column="68">tmp<pos:position pos:line="15" pos:column="71"/></name></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call><operator pos:line="15" pos:column="73">)<pos:position pos:line="15" pos:column="74"/></operator><operator pos:line="15" pos:column="74">)<pos:position pos:line="15" pos:column="75"/></operator></expr>)<pos:position pos:line="15" pos:column="76"/></condition><then pos:line="15" pos:column="76"> <block pos:line="15" pos:column="77">{
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">log_warn<pos:position pos:line="16" pos:column="33"/></name> <argument_list pos:line="16" pos:column="34">(<argument><expr><literal type="string" pos:line="16" pos:column="35">"av2notification_meta: Skipping invalid "<pos:position pos:line="16" pos:column="76"/></literal>
					<literal type="string" pos:line="17" pos:column="41">"meta information."<pos:position pos:line="17" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
			<continue pos:line="18" pos:column="25">continue;<pos:position pos:line="18" pos:column="34"/></continue>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="21" pos:column="17">hash<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">HV<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">*<pos:position pos:line="21" pos:column="29"/></operator><operator pos:line="21" pos:column="29">)<pos:position pos:line="21" pos:column="30"/></operator><call><name pos:line="21" pos:column="30">SvRV<pos:position pos:line="21" pos:column="34"/></name> <argument_list pos:line="21" pos:column="35">(<argument><expr><operator pos:line="21" pos:column="36">*<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="37">tmp<pos:position pos:line="21" pos:column="40"/></name></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>

		<expr_stmt><expr><operator pos:line="23" pos:column="17">*<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">m<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <operator pos:line="23" pos:column="22">(<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">notification_meta_t<pos:position pos:line="23" pos:column="42"/></name> <operator pos:line="23" pos:column="43">*<pos:position pos:line="23" pos:column="44"/></operator><operator pos:line="23" pos:column="44">)<pos:position pos:line="23" pos:column="45"/></operator><call><name pos:line="23" pos:column="45">smalloc<pos:position pos:line="23" pos:column="52"/></name> <argument_list pos:line="23" pos:column="53">(<argument><expr><sizeof pos:line="23" pos:column="54">sizeof <argument_list pos:line="23" pos:column="61">(<argument><expr><operator pos:line="23" pos:column="62">*<pos:position pos:line="23" pos:column="63"/></operator><operator pos:line="23" pos:column="63">*<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="64">m<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">NULL<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">==<pos:position pos:line="25" pos:column="28"/></operator> <operator pos:line="25" pos:column="29">(<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">tmp<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">=<pos:position pos:line="25" pos:column="35"/></operator> <call><name pos:line="25" pos:column="36">hv_fetch<pos:position pos:line="25" pos:column="44"/></name> <argument_list pos:line="25" pos:column="45">(<argument><expr><name pos:line="25" pos:column="46">hash<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="52">"name"<pos:position pos:line="25" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="60">4<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="63">0<pos:position pos:line="25" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call><operator pos:line="25" pos:column="65">)<pos:position pos:line="25" pos:column="66"/></operator></expr>)<pos:position pos:line="25" pos:column="67"/></condition><then pos:line="25" pos:column="67"> <block pos:line="25" pos:column="68">{
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">log_warn<pos:position pos:line="26" pos:column="33"/></name> <argument_list pos:line="26" pos:column="34">(<argument><expr><literal type="string" pos:line="26" pos:column="35">"av2notification_meta: Skipping invalid "<pos:position pos:line="26" pos:column="76"/></literal>
					<literal type="string" pos:line="27" pos:column="41">"meta information."<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">free<pos:position pos:line="28" pos:column="29"/></name> <argument_list pos:line="28" pos:column="30">(<argument><expr><operator pos:line="28" pos:column="31">*<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">m<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
			<continue pos:line="29" pos:column="25">continue;<pos:position pos:line="29" pos:column="34"/></continue>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">sstrncpy<pos:position pos:line="31" pos:column="25"/></name> <argument_list pos:line="31" pos:column="26">(<argument><expr><name><operator pos:line="31" pos:column="27">(<pos:position pos:line="31" pos:column="28"/></operator><operator pos:line="31" pos:column="28">*<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">m<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">)<pos:position pos:line="31" pos:column="31"/></operator><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">name<pos:position pos:line="31" pos:column="37"/></name></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="39">SvPV_nolen<pos:position pos:line="31" pos:column="49"/></name> <argument_list pos:line="31" pos:column="50">(<argument><expr><operator pos:line="31" pos:column="51">*<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="52">tmp<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="58">sizeof <argument_list pos:line="31" pos:column="65">(<argument><expr><name><operator pos:line="31" pos:column="66">(<pos:position pos:line="31" pos:column="67"/></operator><operator pos:line="31" pos:column="67">*<pos:position pos:line="31" pos:column="68"/></operator><name pos:line="31" pos:column="68">m<pos:position pos:line="31" pos:column="69"/></name><operator pos:line="31" pos:column="69">)<pos:position pos:line="31" pos:column="70"/></operator><operator pos:line="31" pos:column="70">-&gt;<pos:position pos:line="31" pos:column="75"/></operator><name pos:line="31" pos:column="72">name<pos:position pos:line="31" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="79"/></expr_stmt>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">NULL<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">==<pos:position pos:line="33" pos:column="28"/></operator> <operator pos:line="33" pos:column="29">(<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">tmp<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">=<pos:position pos:line="33" pos:column="35"/></operator> <call><name pos:line="33" pos:column="36">hv_fetch<pos:position pos:line="33" pos:column="44"/></name> <argument_list pos:line="33" pos:column="45">(<argument><expr><name pos:line="33" pos:column="46">hash<pos:position pos:line="33" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="52">"value"<pos:position pos:line="33" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="61">5<pos:position pos:line="33" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="64">0<pos:position pos:line="33" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call><operator pos:line="33" pos:column="66">)<pos:position pos:line="33" pos:column="67"/></operator></expr>)<pos:position pos:line="33" pos:column="68"/></condition><then pos:line="33" pos:column="68"> <block pos:line="33" pos:column="69">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">log_warn<pos:position pos:line="34" pos:column="33"/></name> <argument_list pos:line="34" pos:column="34">(<argument><expr><literal type="string" pos:line="34" pos:column="35">"av2notification_meta: Skipping invalid "<pos:position pos:line="34" pos:column="76"/></literal>
					<literal type="string" pos:line="35" pos:column="41">"meta information."<pos:position pos:line="35" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">free<pos:position pos:line="36" pos:column="29"/></name> <argument_list pos:line="36" pos:column="30">(<argument><expr><name><operator pos:line="36" pos:column="31">(<pos:position pos:line="36" pos:column="32"/></operator><operator pos:line="36" pos:column="32">*<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="33">m<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">)<pos:position pos:line="36" pos:column="35"/></operator><operator pos:line="36" pos:column="35">-&gt;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="37">name<pos:position pos:line="36" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">free<pos:position pos:line="37" pos:column="29"/></name> <argument_list pos:line="37" pos:column="30">(<argument><expr><operator pos:line="37" pos:column="31">*<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">m<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
			<continue pos:line="38" pos:column="25">continue;<pos:position pos:line="38" pos:column="34"/></continue>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><call><name pos:line="41" pos:column="21">SvNOK<pos:position pos:line="41" pos:column="26"/></name> <argument_list pos:line="41" pos:column="27">(<argument><expr><operator pos:line="41" pos:column="28">*<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="29">tmp<pos:position pos:line="41" pos:column="32"/></name></expr></argument>)<pos:position pos:line="41" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34"> <block pos:line="41" pos:column="35">{
			<expr_stmt><expr><name><operator pos:line="42" pos:column="25">(<pos:position pos:line="42" pos:column="26"/></operator><operator pos:line="42" pos:column="26">*<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">m<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">)<pos:position pos:line="42" pos:column="29"/></operator><operator pos:line="42" pos:column="29">-&gt;<pos:position pos:line="42" pos:column="34"/></operator><name><name pos:line="42" pos:column="31">nm_value<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">.<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="40">nm_double<pos:position pos:line="42" pos:column="49"/></name></name></name> <operator pos:line="42" pos:column="50">=<pos:position pos:line="42" pos:column="51"/></operator> <call><name pos:line="42" pos:column="52">SvNVX<pos:position pos:line="42" pos:column="57"/></name> <argument_list pos:line="42" pos:column="58">(<argument><expr><operator pos:line="42" pos:column="59">*<pos:position pos:line="42" pos:column="60"/></operator><name pos:line="42" pos:column="60">tmp<pos:position pos:line="42" pos:column="63"/></name></expr></argument>)<pos:position pos:line="42" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name><operator pos:line="43" pos:column="25">(<pos:position pos:line="43" pos:column="26"/></operator><operator pos:line="43" pos:column="26">*<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="27">m<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">)<pos:position pos:line="43" pos:column="29"/></operator><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">type<pos:position pos:line="43" pos:column="35"/></name></name> <operator pos:line="43" pos:column="36">=<pos:position pos:line="43" pos:column="37"/></operator> <name pos:line="43" pos:column="38">NM_TYPE_DOUBLE<pos:position pos:line="43" pos:column="52"/></name></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then>
		<elseif pos:line="45" pos:column="17">else <if pos:line="45" pos:column="22">if <condition pos:line="45" pos:column="25">(<expr><call><name pos:line="45" pos:column="26">SvUOK<pos:position pos:line="45" pos:column="31"/></name> <argument_list pos:line="45" pos:column="32">(<argument><expr><operator pos:line="45" pos:column="33">*<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="34">tmp<pos:position pos:line="45" pos:column="37"/></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="39"/></condition><then pos:line="45" pos:column="39"> <block pos:line="45" pos:column="40">{
			<expr_stmt><expr><name><operator pos:line="46" pos:column="25">(<pos:position pos:line="46" pos:column="26"/></operator><operator pos:line="46" pos:column="26">*<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="27">m<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">)<pos:position pos:line="46" pos:column="29"/></operator><operator pos:line="46" pos:column="29">-&gt;<pos:position pos:line="46" pos:column="34"/></operator><name><name pos:line="46" pos:column="31">nm_value<pos:position pos:line="46" pos:column="39"/></name><operator pos:line="46" pos:column="39">.<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="40">nm_unsigned_int<pos:position pos:line="46" pos:column="55"/></name></name></name> <operator pos:line="46" pos:column="56">=<pos:position pos:line="46" pos:column="57"/></operator> <call><name pos:line="46" pos:column="58">SvUVX<pos:position pos:line="46" pos:column="63"/></name> <argument_list pos:line="46" pos:column="64">(<argument><expr><operator pos:line="46" pos:column="65">*<pos:position pos:line="46" pos:column="66"/></operator><name pos:line="46" pos:column="66">tmp<pos:position pos:line="46" pos:column="69"/></name></expr></argument>)<pos:position pos:line="46" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><name><operator pos:line="47" pos:column="25">(<pos:position pos:line="47" pos:column="26"/></operator><operator pos:line="47" pos:column="26">*<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="27">m<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">)<pos:position pos:line="47" pos:column="29"/></operator><operator pos:line="47" pos:column="29">-&gt;<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="31">type<pos:position pos:line="47" pos:column="35"/></name></name> <operator pos:line="47" pos:column="36">=<pos:position pos:line="47" pos:column="37"/></operator> <name pos:line="47" pos:column="38">NM_TYPE_UNSIGNED_INT<pos:position pos:line="47" pos:column="58"/></name></expr>;<pos:position pos:line="47" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="49" pos:column="17">else <if pos:line="49" pos:column="22">if <condition pos:line="49" pos:column="25">(<expr><call><name pos:line="49" pos:column="26">SvIOK<pos:position pos:line="49" pos:column="31"/></name> <argument_list pos:line="49" pos:column="32">(<argument><expr><operator pos:line="49" pos:column="33">*<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="34">tmp<pos:position pos:line="49" pos:column="37"/></name></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="39"/></condition><then pos:line="49" pos:column="39"> <block pos:line="49" pos:column="40">{
			<expr_stmt><expr><name><operator pos:line="50" pos:column="25">(<pos:position pos:line="50" pos:column="26"/></operator><operator pos:line="50" pos:column="26">*<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="27">m<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">)<pos:position pos:line="50" pos:column="29"/></operator><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name><name pos:line="50" pos:column="31">nm_value<pos:position pos:line="50" pos:column="39"/></name><operator pos:line="50" pos:column="39">.<pos:position pos:line="50" pos:column="40"/></operator><name pos:line="50" pos:column="40">nm_signed_int<pos:position pos:line="50" pos:column="53"/></name></name></name> <operator pos:line="50" pos:column="54">=<pos:position pos:line="50" pos:column="55"/></operator> <call><name pos:line="50" pos:column="56">SvIVX<pos:position pos:line="50" pos:column="61"/></name> <argument_list pos:line="50" pos:column="62">(<argument><expr><operator pos:line="50" pos:column="63">*<pos:position pos:line="50" pos:column="64"/></operator><name pos:line="50" pos:column="64">tmp<pos:position pos:line="50" pos:column="67"/></name></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name><operator pos:line="51" pos:column="25">(<pos:position pos:line="51" pos:column="26"/></operator><operator pos:line="51" pos:column="26">*<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="27">m<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">)<pos:position pos:line="51" pos:column="29"/></operator><operator pos:line="51" pos:column="29">-&gt;<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="31">type<pos:position pos:line="51" pos:column="35"/></name></name> <operator pos:line="51" pos:column="36">=<pos:position pos:line="51" pos:column="37"/></operator> <name pos:line="51" pos:column="38">NM_TYPE_SIGNED_INT<pos:position pos:line="51" pos:column="56"/></name></expr>;<pos:position pos:line="51" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if></elseif>
		<else pos:line="53" pos:column="17">else <block pos:line="53" pos:column="22">{
			<expr_stmt><expr><name><operator pos:line="54" pos:column="25">(<pos:position pos:line="54" pos:column="26"/></operator><operator pos:line="54" pos:column="26">*<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="27">m<pos:position pos:line="54" pos:column="28"/></name><operator pos:line="54" pos:column="28">)<pos:position pos:line="54" pos:column="29"/></operator><operator pos:line="54" pos:column="29">-&gt;<pos:position pos:line="54" pos:column="34"/></operator><name><name pos:line="54" pos:column="31">nm_value<pos:position pos:line="54" pos:column="39"/></name><operator pos:line="54" pos:column="39">.<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="40">nm_string<pos:position pos:line="54" pos:column="49"/></name></name></name> <operator pos:line="54" pos:column="50">=<pos:position pos:line="54" pos:column="51"/></operator> <call><name pos:line="54" pos:column="52">sstrdup<pos:position pos:line="54" pos:column="59"/></name> <argument_list pos:line="54" pos:column="60">(<argument><expr><call><name pos:line="54" pos:column="61">SvPV_nolen<pos:position pos:line="54" pos:column="71"/></name> <argument_list pos:line="54" pos:column="72">(<argument><expr><operator pos:line="54" pos:column="73">*<pos:position pos:line="54" pos:column="74"/></operator><name pos:line="54" pos:column="74">tmp<pos:position pos:line="54" pos:column="77"/></name></expr></argument>)<pos:position pos:line="54" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><name><operator pos:line="55" pos:column="25">(<pos:position pos:line="55" pos:column="26"/></operator><operator pos:line="55" pos:column="26">*<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="27">m<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">)<pos:position pos:line="55" pos:column="29"/></operator><operator pos:line="55" pos:column="29">-&gt;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="31">type<pos:position pos:line="55" pos:column="35"/></name></name> <operator pos:line="55" pos:column="36">=<pos:position pos:line="55" pos:column="37"/></operator> <name pos:line="55" pos:column="38">NM_TYPE_STRING<pos:position pos:line="55" pos:column="52"/></name></expr>;<pos:position pos:line="55" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="56" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name><operator pos:line="58" pos:column="17">(<pos:position pos:line="58" pos:column="18"/></operator><operator pos:line="58" pos:column="18">*<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="19">m<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">)<pos:position pos:line="58" pos:column="21"/></operator><operator pos:line="58" pos:column="21">-&gt;<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="23">next<pos:position pos:line="58" pos:column="27"/></name></name> <operator pos:line="58" pos:column="28">=<pos:position pos:line="58" pos:column="29"/></operator> <name pos:line="58" pos:column="30">NULL<pos:position pos:line="58" pos:column="34"/></name></expr>;<pos:position pos:line="58" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="59" pos:column="17">m<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <operator pos:line="59" pos:column="21">&amp;<pos:position pos:line="59" pos:column="26"/></operator><operator pos:line="59" pos:column="22">(<pos:position pos:line="59" pos:column="23"/></operator><name><operator pos:line="59" pos:column="23">(<pos:position pos:line="59" pos:column="24"/></operator><operator pos:line="59" pos:column="24">*<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="25">m<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">)<pos:position pos:line="59" pos:column="27"/></operator><operator pos:line="59" pos:column="27">-&gt;<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="29">next<pos:position pos:line="59" pos:column="33"/></name></name><operator pos:line="59" pos:column="33">)<pos:position pos:line="59" pos:column="34"/></operator></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></for>
	<return pos:line="61" pos:column="9">return <expr><literal type="number" pos:line="61" pos:column="16">0<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

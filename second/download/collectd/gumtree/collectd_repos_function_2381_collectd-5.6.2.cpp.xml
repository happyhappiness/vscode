<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2381_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">escape_string<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">buffer<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">size_t<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">buffer_size<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list> <block pos:line="1" pos:column="53">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">temp<pos:position pos:line="2" pos:column="13"/></name></decl>;<pos:position pos:line="2" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">j<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* Check if we need to escape at all first */</comment>
  <expr_stmt><expr><name pos:line="6" pos:column="3">temp<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <call><name pos:line="6" pos:column="10">strpbrk<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">buffer<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="26">" \t\"\\"<pos:position pos:line="6" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">temp<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal><operator pos:line="8" pos:column="14">)<pos:position pos:line="8" pos:column="15"/></operator></expr>;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">buffer_size<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">&lt;<pos:position pos:line="10" pos:column="23"/></operator> <literal type="number" pos:line="10" pos:column="21">3<pos:position pos:line="10" pos:column="22"/></literal></expr>)<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">EINVAL<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">)<pos:position pos:line="11" pos:column="20"/></operator></expr>;<pos:position pos:line="11" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">temp<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">calloc<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><literal type="number" pos:line="13" pos:column="17">1<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">buffer_size<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">temp<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">==<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">NULL<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">ENOMEM<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">)<pos:position pos:line="15" pos:column="20"/></operator></expr>;<pos:position pos:line="15" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="17" pos:column="3">temp<pos:position pos:line="17" pos:column="7"/></name><index pos:line="17" pos:column="7">[<expr><literal type="number" pos:line="17" pos:column="8">0<pos:position pos:line="17" pos:column="9"/></literal></expr>]<pos:position pos:line="17" pos:column="10"/></index></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <literal type="char" pos:line="17" pos:column="13">'"'<pos:position pos:line="17" pos:column="16"/></literal></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">j<pos:position pos:line="18" pos:column="4"/></name> <operator pos:line="18" pos:column="5">=<pos:position pos:line="18" pos:column="6"/></operator> <literal type="number" pos:line="18" pos:column="7">1<pos:position pos:line="18" pos:column="8"/></literal></expr>;<pos:position pos:line="18" pos:column="9"/></expr_stmt>

  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init><decl><type><name pos:line="20" pos:column="8">size_t<pos:position pos:line="20" pos:column="14"/></name></type> <name pos:line="20" pos:column="15">i<pos:position pos:line="20" pos:column="16"/></name> <init pos:line="20" pos:column="17">= <expr><literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="21"/></init> <condition><expr><name pos:line="20" pos:column="22">i<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">&lt;<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="26">buffer_size<pos:position pos:line="20" pos:column="37"/></name></expr>;<pos:position pos:line="20" pos:column="38"/></condition> <incr><expr><name pos:line="20" pos:column="39">i<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">++<pos:position pos:line="20" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="43"/></control> <block pos:line="20" pos:column="44">{
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">buffer<pos:position pos:line="21" pos:column="15"/></name><index pos:line="21" pos:column="15">[<expr><name pos:line="21" pos:column="16">i<pos:position pos:line="21" pos:column="17"/></name></expr>]<pos:position pos:line="21" pos:column="18"/></index></name> <operator pos:line="21" pos:column="19">==<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24"> <block pos:line="21" pos:column="25">{
      <break pos:line="22" pos:column="7">break;<pos:position pos:line="22" pos:column="13"/></break>
    }<pos:position pos:line="23" pos:column="6"/></block></then> <elseif pos:line="23" pos:column="7">else <if pos:line="23" pos:column="12">if <condition pos:line="23" pos:column="15">(<expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name><name pos:line="23" pos:column="17">buffer<pos:position pos:line="23" pos:column="23"/></name><index pos:line="23" pos:column="23">[<expr><name pos:line="23" pos:column="24">i<pos:position pos:line="23" pos:column="25"/></name></expr>]<pos:position pos:line="23" pos:column="26"/></index></name> <operator pos:line="23" pos:column="27">==<pos:position pos:line="23" pos:column="29"/></operator> <literal type="char" pos:line="23" pos:column="30">'"'<pos:position pos:line="23" pos:column="33"/></literal><operator pos:line="23" pos:column="33">)<pos:position pos:line="23" pos:column="34"/></operator> <operator pos:line="23" pos:column="35">||<pos:position pos:line="23" pos:column="37"/></operator> <operator pos:line="23" pos:column="38">(<pos:position pos:line="23" pos:column="39"/></operator><name><name pos:line="23" pos:column="39">buffer<pos:position pos:line="23" pos:column="45"/></name><index pos:line="23" pos:column="45">[<expr><name pos:line="23" pos:column="46">i<pos:position pos:line="23" pos:column="47"/></name></expr>]<pos:position pos:line="23" pos:column="48"/></index></name> <operator pos:line="23" pos:column="49">==<pos:position pos:line="23" pos:column="51"/></operator> <literal type="char" pos:line="23" pos:column="52">'\\'<pos:position pos:line="23" pos:column="56"/></literal><operator pos:line="23" pos:column="56">)<pos:position pos:line="23" pos:column="57"/></operator></expr>)<pos:position pos:line="23" pos:column="58"/></condition><then pos:line="23" pos:column="58"> <block pos:line="23" pos:column="59">{
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><name pos:line="24" pos:column="11">j<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">&gt;<pos:position pos:line="24" pos:column="17"/></operator> <operator pos:line="24" pos:column="15">(<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">buffer_size<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">-<pos:position pos:line="24" pos:column="29"/></operator> <literal type="number" pos:line="24" pos:column="30">4<pos:position pos:line="24" pos:column="31"/></literal><operator pos:line="24" pos:column="31">)<pos:position pos:line="24" pos:column="32"/></operator></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33">
        <block type="pseudo"><break pos:line="25" pos:column="9">break;<pos:position pos:line="25" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name><name pos:line="26" pos:column="7">temp<pos:position pos:line="26" pos:column="11"/></name><index pos:line="26" pos:column="11">[<expr><name pos:line="26" pos:column="12">j<pos:position pos:line="26" pos:column="13"/></name></expr>]<pos:position pos:line="26" pos:column="14"/></index></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <literal type="char" pos:line="26" pos:column="17">'\\'<pos:position pos:line="26" pos:column="21"/></literal></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="27" pos:column="7">temp<pos:position pos:line="27" pos:column="11"/></name><index pos:line="27" pos:column="11">[<expr><name pos:line="27" pos:column="12">j<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">+<pos:position pos:line="27" pos:column="15"/></operator> <literal type="number" pos:line="27" pos:column="16">1<pos:position pos:line="27" pos:column="17"/></literal></expr>]<pos:position pos:line="27" pos:column="18"/></index></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name><name pos:line="27" pos:column="21">buffer<pos:position pos:line="27" pos:column="27"/></name><index pos:line="27" pos:column="27">[<expr><name pos:line="27" pos:column="28">i<pos:position pos:line="27" pos:column="29"/></name></expr>]<pos:position pos:line="27" pos:column="30"/></index></name></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">j<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">+=<pos:position pos:line="28" pos:column="11"/></operator> <literal type="number" pos:line="28" pos:column="12">2<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if></elseif> <else pos:line="29" pos:column="7">else <block pos:line="29" pos:column="12">{
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name pos:line="30" pos:column="11">j<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">&gt;<pos:position pos:line="30" pos:column="17"/></operator> <operator pos:line="30" pos:column="15">(<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">buffer_size<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">-<pos:position pos:line="30" pos:column="29"/></operator> <literal type="number" pos:line="30" pos:column="30">3<pos:position pos:line="30" pos:column="31"/></literal><operator pos:line="30" pos:column="31">)<pos:position pos:line="30" pos:column="32"/></operator></expr>)<pos:position pos:line="30" pos:column="33"/></condition><then pos:line="30" pos:column="33">
        <block type="pseudo"><break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">temp<pos:position pos:line="32" pos:column="11"/></name><index pos:line="32" pos:column="11">[<expr><name pos:line="32" pos:column="12">j<pos:position pos:line="32" pos:column="13"/></name></expr>]<pos:position pos:line="32" pos:column="14"/></index></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <name><name pos:line="32" pos:column="17">buffer<pos:position pos:line="32" pos:column="23"/></name><index pos:line="32" pos:column="23">[<expr><name pos:line="32" pos:column="24">i<pos:position pos:line="32" pos:column="25"/></name></expr>]<pos:position pos:line="32" pos:column="26"/></index></name></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name pos:line="33" pos:column="7">j<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">++<pos:position pos:line="33" pos:column="10"/></operator></expr>;<pos:position pos:line="33" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>
  }<pos:position pos:line="35" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">assert<pos:position pos:line="37" pos:column="9"/></name><argument_list pos:line="37" pos:column="9">(<argument><expr><operator pos:line="37" pos:column="10">(<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="11">j<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">+<pos:position pos:line="37" pos:column="14"/></operator> <literal type="number" pos:line="37" pos:column="15">1<pos:position pos:line="37" pos:column="16"/></literal><operator pos:line="37" pos:column="16">)<pos:position pos:line="37" pos:column="17"/></operator> <operator pos:line="37" pos:column="18">&lt;<pos:position pos:line="37" pos:column="22"/></operator> <name pos:line="37" pos:column="20">buffer_size<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="38" pos:column="3">temp<pos:position pos:line="38" pos:column="7"/></name><index pos:line="38" pos:column="7">[<expr><name pos:line="38" pos:column="8">j<pos:position pos:line="38" pos:column="9"/></name></expr>]<pos:position pos:line="38" pos:column="10"/></index></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <literal type="char" pos:line="38" pos:column="13">'"'<pos:position pos:line="38" pos:column="16"/></literal></expr>;<pos:position pos:line="38" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">temp<pos:position pos:line="39" pos:column="7"/></name><index pos:line="39" pos:column="7">[<expr><name pos:line="39" pos:column="8">j<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">+<pos:position pos:line="39" pos:column="11"/></operator> <literal type="number" pos:line="39" pos:column="12">1<pos:position pos:line="39" pos:column="13"/></literal></expr>]<pos:position pos:line="39" pos:column="14"/></index></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <literal type="number" pos:line="39" pos:column="17">0<pos:position pos:line="39" pos:column="18"/></literal></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="41" pos:column="3">sstrncpy<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name pos:line="41" pos:column="12">buffer<pos:position pos:line="41" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="20">temp<pos:position pos:line="41" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="26">buffer_size<pos:position pos:line="41" pos:column="37"/></name></expr></argument>)<pos:position pos:line="41" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">sfree<pos:position pos:line="42" pos:column="8"/></name><argument_list pos:line="42" pos:column="8">(<argument><expr><name pos:line="42" pos:column="9">temp<pos:position pos:line="42" pos:column="13"/></name></expr></argument>)<pos:position pos:line="42" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="15"/></expr_stmt>
  <return pos:line="43" pos:column="3">return <expr><operator pos:line="43" pos:column="10">(<pos:position pos:line="43" pos:column="11"/></operator><literal type="number" pos:line="43" pos:column="11">0<pos:position pos:line="43" pos:column="12"/></literal><operator pos:line="43" pos:column="12">)<pos:position pos:line="43" pos:column="13"/></operator></expr>;<pos:position pos:line="43" pos:column="14"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

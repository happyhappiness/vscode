<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1550_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tbl_result_dispatch<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">tbl_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">tbl<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">tbl_result_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">res<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier><modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">fields<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">size_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">fields_num<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list> <block pos:line="2" pos:column="51">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">vl<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">value_t<pos:position pos:line="4" pos:column="10"/></name></type> <name><name pos:line="4" pos:column="11">values<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><name><name pos:line="4" pos:column="18">res<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">-&gt;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="23">values_num<pos:position pos:line="4" pos:column="33"/></name></name></expr>]<pos:position pos:line="4" pos:column="34"/></index></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name pos:line="6" pos:column="10">NULL<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">!=<pos:position pos:line="6" pos:column="17"/></operator> <name><name pos:line="6" pos:column="18">res<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">ds<pos:position pos:line="6" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name><name pos:line="7" pos:column="10">res<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">values_num<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">==<pos:position pos:line="7" pos:column="28"/></operator> <name><name pos:line="7" pos:column="29">res<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">ds<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">ds_num<pos:position pos:line="7" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><decl><type><name pos:line="9" pos:column="8">size_t<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></init> <condition><expr><name pos:line="9" pos:column="22">i<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&lt;<pos:position pos:line="9" pos:column="28"/></operator> <name><name pos:line="9" pos:column="26">res<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">values_num<pos:position pos:line="9" pos:column="41"/></name></name></expr>;<pos:position pos:line="9" pos:column="42"/></condition> <incr><expr><operator pos:line="9" pos:column="43">++<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="45">i<pos:position pos:line="9" pos:column="46"/></name></expr></incr>)<pos:position pos:line="9" pos:column="47"/></control> <block pos:line="9" pos:column="48">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">value<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name><name pos:line="12" pos:column="12">res<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">values<pos:position pos:line="12" pos:column="23"/></name><index pos:line="12" pos:column="23">[<expr><name pos:line="12" pos:column="24">i<pos:position pos:line="12" pos:column="25"/></name></expr>]<pos:position pos:line="12" pos:column="26"/></index></name> <operator pos:line="12" pos:column="27">&lt;<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="29">fields_num<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">value<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name><name pos:line="13" pos:column="13">fields<pos:position pos:line="13" pos:column="19"/></name><index pos:line="13" pos:column="19">[<expr><name><name pos:line="13" pos:column="20">res<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">values<pos:position pos:line="13" pos:column="31"/></name><index pos:line="13" pos:column="31">[<expr><name pos:line="13" pos:column="32">i<pos:position pos:line="13" pos:column="33"/></name></expr>]<pos:position pos:line="13" pos:column="34"/></index></name></expr>]<pos:position pos:line="13" pos:column="35"/></index></name></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><literal type="number" pos:line="15" pos:column="9">0<pos:position pos:line="15" pos:column="10"/></literal> <operator pos:line="15" pos:column="11">!=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">parse_value<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">value<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="33">&amp;<pos:position pos:line="15" pos:column="38"/></operator><name><name pos:line="15" pos:column="34">values<pos:position pos:line="15" pos:column="40"/></name><index pos:line="15" pos:column="40">[<expr><name pos:line="15" pos:column="41">i<pos:position pos:line="15" pos:column="42"/></name></expr>]<pos:position pos:line="15" pos:column="43"/></index></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="45">res<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">-&gt;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="50">ds<pos:position pos:line="15" pos:column="52"/></name><operator pos:line="15" pos:column="52">-&gt;<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="54">ds<pos:position pos:line="15" pos:column="56"/></name><index pos:line="15" pos:column="56">[<expr><name pos:line="15" pos:column="57">i<pos:position pos:line="15" pos:column="58"/></name></expr>]<pos:position pos:line="15" pos:column="59"/></index></name><operator pos:line="15" pos:column="59">.<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="60">type<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="66"/></condition><then pos:line="15" pos:column="66">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">-<pos:position pos:line="16" pos:column="15"/></operator><literal type="number" pos:line="16" pos:column="15">1<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></return></block></then></if>
  }<pos:position pos:line="17" pos:column="4"/></block></for>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">vl<pos:position pos:line="19" pos:column="5"/></name><operator pos:line="19" pos:column="5">.<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">values<pos:position pos:line="19" pos:column="12"/></name></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">values<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">vl<pos:position pos:line="20" pos:column="5"/></name><operator pos:line="20" pos:column="5">.<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">values_len<pos:position pos:line="20" pos:column="16"/></name></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <call><name pos:line="20" pos:column="19">STATIC_ARRAY_SIZE<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name pos:line="20" pos:column="37">values<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">sstrncpy<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name><name pos:line="22" pos:column="12">vl<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">.<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">plugin<pos:position pos:line="22" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"table"<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="32">sizeof<argument_list pos:line="22" pos:column="38">(<argument><expr><name><name pos:line="22" pos:column="39">vl<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">.<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="42">plugin<pos:position pos:line="22" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">sstrncpy<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><name><name pos:line="23" pos:column="12">vl<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">.<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">plugin_instance<pos:position pos:line="23" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="32">tbl<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">instance<pos:position pos:line="23" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="47">sizeof<argument_list pos:line="23" pos:column="53">(<argument><expr><name><name pos:line="23" pos:column="54">vl<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">.<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="57">plugin_instance<pos:position pos:line="23" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">sstrncpy<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name><name pos:line="24" pos:column="12">vl<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">.<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">type<pos:position pos:line="24" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="21">res<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">type<pos:position pos:line="24" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="32">sizeof<argument_list pos:line="24" pos:column="38">(<argument><expr><name><name pos:line="24" pos:column="39">vl<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">.<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">type<pos:position pos:line="24" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><literal type="number" pos:line="26" pos:column="7">0<pos:position pos:line="26" pos:column="8"/></literal> <operator pos:line="26" pos:column="9">==<pos:position pos:line="26" pos:column="11"/></operator> <name><name pos:line="26" pos:column="12">res<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">instances_num<pos:position pos:line="26" pos:column="30"/></name></name></expr>)<pos:position pos:line="26" pos:column="31"/></condition><then pos:line="26" pos:column="31"> <block pos:line="26" pos:column="32">{
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">NULL<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">!=<pos:position pos:line="27" pos:column="16"/></operator> <name><name pos:line="27" pos:column="17">res<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">instance_prefix<pos:position pos:line="27" pos:column="37"/></name></name></expr>)<pos:position pos:line="27" pos:column="38"/></condition><then pos:line="27" pos:column="38">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">sstrncpy<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name><name pos:line="28" pos:column="16">vl<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">.<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">type_instance<pos:position pos:line="28" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="34">res<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">-&gt;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="39">instance_prefix<pos:position pos:line="28" pos:column="54"/></name></name></expr></argument>,
               <argument><expr><sizeof pos:line="29" pos:column="16">sizeof<argument_list pos:line="29" pos:column="22">(<argument><expr><name><name pos:line="29" pos:column="23">vl<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">.<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">type_instance<pos:position pos:line="29" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt></block></then></if>
  }<pos:position pos:line="30" pos:column="4"/></block></then> <else pos:line="30" pos:column="5">else <block pos:line="30" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">char<pos:position pos:line="31" pos:column="9"/></name> <modifier pos:line="31" pos:column="10">*<pos:position pos:line="31" pos:column="11"/></modifier></type><name><name pos:line="31" pos:column="11">instances<pos:position pos:line="31" pos:column="20"/></name><index pos:line="31" pos:column="20">[<expr><name><name pos:line="31" pos:column="21">res<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">instances_num<pos:position pos:line="31" pos:column="39"/></name></name></expr>]<pos:position pos:line="31" pos:column="40"/></index></name></decl>;<pos:position pos:line="31" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">char<pos:position pos:line="32" pos:column="9"/></name></type> <name><name pos:line="32" pos:column="10">instances_str<pos:position pos:line="32" pos:column="23"/></name><index pos:line="32" pos:column="23">[<expr><name pos:line="32" pos:column="24">DATA_MAX_NAME_LEN<pos:position pos:line="32" pos:column="41"/></name></expr>]<pos:position pos:line="32" pos:column="42"/></index></name></decl>;<pos:position pos:line="32" pos:column="43"/></decl_stmt>

    <for pos:line="34" pos:column="5">for <control pos:line="34" pos:column="9">(<init><decl><type><name pos:line="34" pos:column="10">size_t<pos:position pos:line="34" pos:column="16"/></name></type> <name pos:line="34" pos:column="17">i<pos:position pos:line="34" pos:column="18"/></name> <init pos:line="34" pos:column="19">= <expr><literal type="number" pos:line="34" pos:column="21">0<pos:position pos:line="34" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="34" pos:column="23"/></init> <condition><expr><name pos:line="34" pos:column="24">i<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">&lt;<pos:position pos:line="34" pos:column="30"/></operator> <name><name pos:line="34" pos:column="28">res<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">instances_num<pos:position pos:line="34" pos:column="46"/></name></name></expr>;<pos:position pos:line="34" pos:column="47"/></condition> <incr><expr><operator pos:line="34" pos:column="48">++<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="50">i<pos:position pos:line="34" pos:column="51"/></name></expr></incr>)<pos:position pos:line="34" pos:column="52"/></control> <block pos:line="34" pos:column="53">{
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">assert<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name><name pos:line="35" pos:column="14">res<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">-&gt;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="19">instances<pos:position pos:line="35" pos:column="28"/></name><index pos:line="35" pos:column="28">[<expr><name pos:line="35" pos:column="29">i<pos:position pos:line="35" pos:column="30"/></name></expr>]<pos:position pos:line="35" pos:column="31"/></index></name> <operator pos:line="35" pos:column="32">&lt;<pos:position pos:line="35" pos:column="36"/></operator> <name pos:line="35" pos:column="34">fields_num<pos:position pos:line="35" pos:column="44"/></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="36" pos:column="7">instances<pos:position pos:line="36" pos:column="16"/></name><index pos:line="36" pos:column="16">[<expr><name pos:line="36" pos:column="17">i<pos:position pos:line="36" pos:column="18"/></name></expr>]<pos:position pos:line="36" pos:column="19"/></index></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name><name pos:line="36" pos:column="22">fields<pos:position pos:line="36" pos:column="28"/></name><index pos:line="36" pos:column="28">[<expr><name><name pos:line="36" pos:column="29">res<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">instances<pos:position pos:line="36" pos:column="43"/></name><index pos:line="36" pos:column="43">[<expr><name pos:line="36" pos:column="44">i<pos:position pos:line="36" pos:column="45"/></name></expr>]<pos:position pos:line="36" pos:column="46"/></index></name></expr>]<pos:position pos:line="36" pos:column="47"/></index></name></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">strjoin<pos:position pos:line="39" pos:column="12"/></name><argument_list pos:line="39" pos:column="12">(<argument><expr><name pos:line="39" pos:column="13">instances_str<pos:position pos:line="39" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="28">sizeof<argument_list pos:line="39" pos:column="34">(<argument><expr><name pos:line="39" pos:column="35">instances_str<pos:position pos:line="39" pos:column="48"/></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="39" pos:column="51">instances<pos:position pos:line="39" pos:column="60"/></name></expr></argument>,
            <argument><expr><call><name pos:line="40" pos:column="13">STATIC_ARRAY_SIZE<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">instances<pos:position pos:line="40" pos:column="40"/></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="43">"-"<pos:position pos:line="40" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">instances_str<pos:position pos:line="41" pos:column="18"/></name><index pos:line="41" pos:column="18">[<expr><sizeof pos:line="41" pos:column="19">sizeof<argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">instances_str<pos:position pos:line="41" pos:column="39"/></name></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></sizeof> <operator pos:line="41" pos:column="41">-<pos:position pos:line="41" pos:column="42"/></operator> <literal type="number" pos:line="41" pos:column="43">1<pos:position pos:line="41" pos:column="44"/></literal></expr>]<pos:position pos:line="41" pos:column="45"/></index></name> <operator pos:line="41" pos:column="46">=<pos:position pos:line="41" pos:column="47"/></operator> <literal type="char" pos:line="41" pos:column="48">'\0'<pos:position pos:line="41" pos:column="52"/></literal></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="43" pos:column="5">vl<pos:position pos:line="43" pos:column="7"/></name><operator pos:line="43" pos:column="7">.<pos:position pos:line="43" pos:column="8"/></operator><name pos:line="43" pos:column="8">type_instance<pos:position pos:line="43" pos:column="21"/></name><index pos:line="43" pos:column="21">[<expr><sizeof pos:line="43" pos:column="22">sizeof<argument_list pos:line="43" pos:column="28">(<argument><expr><name><name pos:line="43" pos:column="29">vl<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">.<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="32">type_instance<pos:position pos:line="43" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></sizeof> <operator pos:line="43" pos:column="47">-<pos:position pos:line="43" pos:column="48"/></operator> <literal type="number" pos:line="43" pos:column="49">1<pos:position pos:line="43" pos:column="50"/></literal></expr>]<pos:position pos:line="43" pos:column="51"/></index></name> <operator pos:line="43" pos:column="52">=<pos:position pos:line="43" pos:column="53"/></operator> <literal type="char" pos:line="43" pos:column="54">'\0'<pos:position pos:line="43" pos:column="58"/></literal></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">NULL<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">==<pos:position pos:line="44" pos:column="16"/></operator> <name><name pos:line="44" pos:column="17">res<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">instance_prefix<pos:position pos:line="44" pos:column="37"/></name></name></expr>)<pos:position pos:line="44" pos:column="38"/></condition><then pos:line="44" pos:column="38">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="7">strncpy<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name><name pos:line="45" pos:column="15">vl<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">.<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">type_instance<pos:position pos:line="45" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="33">instances_str<pos:position pos:line="45" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="48">sizeof<argument_list pos:line="45" pos:column="54">(<argument><expr><name><name pos:line="45" pos:column="55">vl<pos:position pos:line="45" pos:column="57"/></name><operator pos:line="45" pos:column="57">.<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="58">type_instance<pos:position pos:line="45" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="74"/></expr_stmt></block></then>
    <else pos:line="46" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="7">snprintf<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><name><name pos:line="47" pos:column="16">vl<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">.<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">type_instance<pos:position pos:line="47" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="34">sizeof<argument_list pos:line="47" pos:column="40">(<argument><expr><name><name pos:line="47" pos:column="41">vl<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">.<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="44">type_instance<pos:position pos:line="47" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="60">"%s-%s"<pos:position pos:line="47" pos:column="67"/></literal></expr></argument>,
               <argument><expr><name><name pos:line="48" pos:column="16">res<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">-&gt;<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="21">instance_prefix<pos:position pos:line="48" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="38">instances_str<pos:position pos:line="48" pos:column="51"/></name></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt></block></else></if>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><literal type="char" pos:line="50" pos:column="9">'\0'<pos:position pos:line="50" pos:column="13"/></literal> <operator pos:line="50" pos:column="14">!=<pos:position pos:line="50" pos:column="16"/></operator> <name><name pos:line="50" pos:column="17">vl<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">.<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="20">type_instance<pos:position pos:line="50" pos:column="33"/></name><index pos:line="50" pos:column="33">[<expr><sizeof pos:line="50" pos:column="34">sizeof<argument_list pos:line="50" pos:column="40">(<argument><expr><name><name pos:line="50" pos:column="41">vl<pos:position pos:line="50" pos:column="43"/></name><operator pos:line="50" pos:column="43">.<pos:position pos:line="50" pos:column="44"/></operator><name pos:line="50" pos:column="44">type_instance<pos:position pos:line="50" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="58"/></argument_list></sizeof> <operator pos:line="50" pos:column="59">-<pos:position pos:line="50" pos:column="60"/></operator> <literal type="number" pos:line="50" pos:column="61">1<pos:position pos:line="50" pos:column="62"/></literal></expr>]<pos:position pos:line="50" pos:column="63"/></index></name></expr>)<pos:position pos:line="50" pos:column="64"/></condition><then pos:line="50" pos:column="64"> <block pos:line="50" pos:column="65">{
      <expr_stmt><expr><name><name pos:line="51" pos:column="7">vl<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">.<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">type_instance<pos:position pos:line="51" pos:column="23"/></name><index pos:line="51" pos:column="23">[<expr><sizeof pos:line="51" pos:column="24">sizeof<argument_list pos:line="51" pos:column="30">(<argument><expr><name><name pos:line="51" pos:column="31">vl<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">.<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="34">type_instance<pos:position pos:line="51" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="48"/></argument_list></sizeof> <operator pos:line="51" pos:column="49">-<pos:position pos:line="51" pos:column="50"/></operator> <literal type="number" pos:line="51" pos:column="51">1<pos:position pos:line="51" pos:column="52"/></literal></expr>]<pos:position pos:line="51" pos:column="53"/></index></name> <operator pos:line="51" pos:column="54">=<pos:position pos:line="51" pos:column="55"/></operator> <literal type="char" pos:line="51" pos:column="56">'\0'<pos:position pos:line="51" pos:column="60"/></literal></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">log_warn<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="string" pos:line="52" pos:column="16">"Truncated type instance: %s."<pos:position pos:line="52" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="48">vl<pos:position pos:line="52" pos:column="50"/></name><operator pos:line="52" pos:column="50">.<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="51">type_instance<pos:position pos:line="52" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
  }<pos:position pos:line="54" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">plugin_dispatch_values<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><operator pos:line="56" pos:column="26">&amp;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="27">vl<pos:position pos:line="56" pos:column="29"/></name></expr></argument>)<pos:position pos:line="56" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
  <return pos:line="57" pos:column="3">return <expr><literal type="number" pos:line="57" pos:column="10">0<pos:position pos:line="57" pos:column="11"/></literal></expr>;<pos:position pos:line="57" pos:column="12"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

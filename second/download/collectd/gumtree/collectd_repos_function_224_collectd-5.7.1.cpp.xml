<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_224_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lv_read<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list> <block pos:line="1" pos:column="26">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">time_t<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">t<pos:position pos:line="2" pos:column="11"/></name></decl>;<pos:position pos:line="2" pos:column="12"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">conn<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">==<pos:position pos:line="4" pos:column="14"/></operator> <name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
    <comment type="block" pos:line="5" pos:column="5">/* `conn_string == NULL' is acceptable. */</comment>
    <expr_stmt><expr><name pos:line="6" pos:column="5">conn<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">virConnectOpenReadOnly<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">conn_string<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">conn<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22"> <block pos:line="7" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">c_complain<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">LOG_ERR<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="27">&amp;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="28">conn_complain<pos:position pos:line="8" pos:column="41"/></name></expr></argument>,
                 <argument><expr><name pos:line="9" pos:column="18">PLUGIN_NAME<pos:position pos:line="9" pos:column="29"/></name> <literal type="string" pos:line="9" pos:column="30">" plugin: Unable to connect: "<pos:position pos:line="9" pos:column="60"/></literal>
                             <literal type="string" pos:line="10" pos:column="30">"virConnectOpenReadOnly failed."<pos:position pos:line="10" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt>
      <return pos:line="11" pos:column="7">return <expr><operator pos:line="11" pos:column="14">-<pos:position pos:line="11" pos:column="15"/></operator><literal type="number" pos:line="11" pos:column="15">1<pos:position pos:line="11" pos:column="16"/></literal></expr>;<pos:position pos:line="11" pos:column="17"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">c_release<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">LOG_NOTICE<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="25">&amp;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="26">conn_complain<pos:position pos:line="14" pos:column="39"/></name></expr></argument>,
            <argument><expr><name pos:line="15" pos:column="13">PLUGIN_NAME<pos:position pos:line="15" pos:column="24"/></name> <literal type="string" pos:line="15" pos:column="25">" plugin: Connection established."<pos:position pos:line="15" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">time<pos:position pos:line="17" pos:column="7"/></name><argument_list pos:line="17" pos:column="7">(<argument><expr><operator pos:line="17" pos:column="8">&amp;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="9">t<pos:position pos:line="17" pos:column="10"/></name></expr></argument>)<pos:position pos:line="17" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="12"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Need to refresh domain or device lists? */</comment>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">(<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">last_refresh<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">==<pos:position pos:line="20" pos:column="23"/></operator> <operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">time_t<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">)<pos:position pos:line="20" pos:column="32"/></operator><literal type="number" pos:line="20" pos:column="32">0<pos:position pos:line="20" pos:column="33"/></literal><operator pos:line="20" pos:column="33">)<pos:position pos:line="20" pos:column="34"/></operator> <operator pos:line="20" pos:column="35">||<pos:position pos:line="20" pos:column="37"/></operator>
      <operator pos:line="21" pos:column="7">(<pos:position pos:line="21" pos:column="8"/></operator><operator pos:line="21" pos:column="8">(<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">interval<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">&gt;<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="20">0<pos:position pos:line="21" pos:column="21"/></literal><operator pos:line="21" pos:column="21">)<pos:position pos:line="21" pos:column="22"/></operator> <operator pos:line="21" pos:column="23">&amp;&amp;<pos:position pos:line="21" pos:column="33"/></operator> <operator pos:line="21" pos:column="26">(<pos:position pos:line="21" pos:column="27"/></operator><operator pos:line="21" pos:column="27">(<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">last_refresh<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">+<pos:position pos:line="21" pos:column="42"/></operator> <name pos:line="21" pos:column="43">interval<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">)<pos:position pos:line="21" pos:column="52"/></operator> <operator pos:line="21" pos:column="53">&lt;=<pos:position pos:line="21" pos:column="58"/></operator> <name pos:line="21" pos:column="56">t<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">)<pos:position pos:line="21" pos:column="58"/></operator><operator pos:line="21" pos:column="58">)<pos:position pos:line="21" pos:column="59"/></operator></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60"> <block pos:line="21" pos:column="61">{
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">refresh_lists<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">()<pos:position pos:line="22" pos:column="24"/></argument_list></call> <operator pos:line="22" pos:column="25">!=<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr>)<pos:position pos:line="22" pos:column="30"/></condition><then pos:line="22" pos:column="30"> <block pos:line="22" pos:column="31">{
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><name pos:line="23" pos:column="11">conn<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">!=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">NULL<pos:position pos:line="23" pos:column="23"/></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="9">virConnectClose<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">conn<pos:position pos:line="24" pos:column="29"/></name></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="25" pos:column="7">conn<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <name pos:line="25" pos:column="14">NULL<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
      <return pos:line="26" pos:column="7">return <expr><operator pos:line="26" pos:column="14">-<pos:position pos:line="26" pos:column="15"/></operator><literal type="number" pos:line="26" pos:column="15">1<pos:position pos:line="26" pos:column="16"/></literal></expr>;<pos:position pos:line="26" pos:column="17"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="28" pos:column="5">last_refresh<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">t<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="31" pos:column="5">0<pos:position pos:line="31" pos:column="6"/></literal></expr></cpp:if>
    for (int i = 0; i &lt; nr_domains; ++i)
        fprintf (stderr, "domain %s\n", virDomainGetName (domains[i]));
    for (int i = 0; i &lt; nr_block_devices; ++i)
        fprintf  (stderr, "block device %d %s:%s\n",
                  i, virDomainGetName (block_devices[i].dom),
                  block_devices[i].path);
    for (int i = 0; i &lt; nr_interface_devices; ++i)
        fprintf (stderr, "interface device %d %s:%s\n",
                 i, virDomainGetName (interface_devices[i].dom),
                 interface_devices[i].path);
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="44" pos:column="3">/* Get CPU usage, memory, VCPU usage for each domain. */</comment>
  <for pos:line="45" pos:column="3">for <control pos:line="45" pos:column="7">(<init><decl><type><name pos:line="45" pos:column="8">int<pos:position pos:line="45" pos:column="11"/></name></type> <name pos:line="45" pos:column="12">i<pos:position pos:line="45" pos:column="13"/></name> <init pos:line="45" pos:column="14">= <expr><literal type="number" pos:line="45" pos:column="16">0<pos:position pos:line="45" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="45" pos:column="18"/></init> <condition><expr><name pos:line="45" pos:column="19">i<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">&lt;<pos:position pos:line="45" pos:column="25"/></operator> <name pos:line="45" pos:column="23">nr_domains<pos:position pos:line="45" pos:column="33"/></name></expr>;<pos:position pos:line="45" pos:column="34"/></condition> <incr><expr><operator pos:line="45" pos:column="35">++<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="37">i<pos:position pos:line="45" pos:column="38"/></name></expr></incr>)<pos:position pos:line="45" pos:column="39"/></control> <block pos:line="45" pos:column="40">{
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">virDomainInfo<pos:position pos:line="46" pos:column="18"/></name></type> <name pos:line="46" pos:column="19">info<pos:position pos:line="46" pos:column="23"/></name></decl>;<pos:position pos:line="46" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="47" pos:column="5">virVcpuInfoPtr<pos:position pos:line="47" pos:column="19"/></name></type> <name pos:line="47" pos:column="20">vinfo<pos:position pos:line="47" pos:column="25"/></name> <init pos:line="47" pos:column="26">= <expr><name pos:line="47" pos:column="28">NULL<pos:position pos:line="47" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="48" pos:column="5">virDomainMemoryStatPtr<pos:position pos:line="48" pos:column="27"/></name></type> <name pos:line="48" pos:column="28">minfo<pos:position pos:line="48" pos:column="33"/></name> <init pos:line="48" pos:column="34">= <expr><name pos:line="48" pos:column="36">NULL<pos:position pos:line="48" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="48" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="49" pos:column="5">int<pos:position pos:line="49" pos:column="8"/></name></type> <name pos:line="49" pos:column="9">status<pos:position pos:line="49" pos:column="15"/></name></decl>;<pos:position pos:line="49" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="51" pos:column="5">status<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <call><name pos:line="51" pos:column="14">virDomainGetInfo<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><name><name pos:line="51" pos:column="31">domains<pos:position pos:line="51" pos:column="38"/></name><index pos:line="51" pos:column="38">[<expr><name pos:line="51" pos:column="39">i<pos:position pos:line="51" pos:column="40"/></name></expr>]<pos:position pos:line="51" pos:column="41"/></index></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="43">&amp;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="44">info<pos:position pos:line="51" pos:column="48"/></name></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="50"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">status<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">!=<pos:position pos:line="52" pos:column="18"/></operator> <literal type="number" pos:line="52" pos:column="19">0<pos:position pos:line="52" pos:column="20"/></literal></expr>)<pos:position pos:line="52" pos:column="21"/></condition><then pos:line="52" pos:column="21"> <block pos:line="52" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">ERROR<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><name pos:line="53" pos:column="13">PLUGIN_NAME<pos:position pos:line="53" pos:column="24"/></name> <literal type="string" pos:line="53" pos:column="25">" plugin: virDomainGetInfo failed with status %i."<pos:position pos:line="53" pos:column="75"/></literal></expr></argument>,
            <argument><expr><name pos:line="54" pos:column="13">status<pos:position pos:line="54" pos:column="19"/></name></expr></argument>)<pos:position pos:line="54" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="21"/></expr_stmt>
      <continue pos:line="55" pos:column="7">continue;<pos:position pos:line="55" pos:column="16"/></continue>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name><name pos:line="58" pos:column="9">info<pos:position pos:line="58" pos:column="13"/></name><operator pos:line="58" pos:column="13">.<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">state<pos:position pos:line="58" pos:column="19"/></name></name> <operator pos:line="58" pos:column="20">!=<pos:position pos:line="58" pos:column="22"/></operator> <name pos:line="58" pos:column="23">VIR_DOMAIN_RUNNING<pos:position pos:line="58" pos:column="41"/></name></expr>)<pos:position pos:line="58" pos:column="42"/></condition><then pos:line="58" pos:column="42"> <block pos:line="58" pos:column="43">{
      <comment type="block" pos:line="59" pos:column="7">/* only gather stats for running domains */</comment>
      <continue pos:line="60" pos:column="7">continue;<pos:position pos:line="60" pos:column="16"/></continue>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">cpu_submit<pos:position pos:line="63" pos:column="15"/></name><argument_list pos:line="63" pos:column="15">(<argument><expr><name><name pos:line="63" pos:column="16">info<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">.<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="21">cpuTime<pos:position pos:line="63" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="30">domains<pos:position pos:line="63" pos:column="37"/></name><index pos:line="63" pos:column="37">[<expr><name pos:line="63" pos:column="38">i<pos:position pos:line="63" pos:column="39"/></name></expr>]<pos:position pos:line="63" pos:column="40"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="42">"virt_cpu_total"<pos:position pos:line="63" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">memory_submit<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">(<argument><expr><operator pos:line="64" pos:column="19">(<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="20">gauge_t<pos:position pos:line="64" pos:column="27"/></name><operator pos:line="64" pos:column="27">)<pos:position pos:line="64" pos:column="28"/></operator><name><name pos:line="64" pos:column="28">info<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">.<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="33">memory<pos:position pos:line="64" pos:column="39"/></name></name> <operator pos:line="64" pos:column="40">*<pos:position pos:line="64" pos:column="41"/></operator> <literal type="number" pos:line="64" pos:column="42">1024<pos:position pos:line="64" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="48">domains<pos:position pos:line="64" pos:column="55"/></name><index pos:line="64" pos:column="55">[<expr><name pos:line="64" pos:column="56">i<pos:position pos:line="64" pos:column="57"/></name></expr>]<pos:position pos:line="64" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="64" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><name pos:line="66" pos:column="5">vinfo<pos:position pos:line="66" pos:column="10"/></name> <operator pos:line="66" pos:column="11">=<pos:position pos:line="66" pos:column="12"/></operator> <call><name pos:line="66" pos:column="13">malloc<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><name><name pos:line="66" pos:column="20">info<pos:position pos:line="66" pos:column="24"/></name><operator pos:line="66" pos:column="24">.<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="25">nrVirtCpu<pos:position pos:line="66" pos:column="34"/></name></name> <operator pos:line="66" pos:column="35">*<pos:position pos:line="66" pos:column="36"/></operator> <sizeof pos:line="66" pos:column="37">sizeof<argument_list pos:line="66" pos:column="43">(<argument><expr><name><name pos:line="66" pos:column="44">vinfo<pos:position pos:line="66" pos:column="49"/></name><index pos:line="66" pos:column="49">[<expr><literal type="number" pos:line="66" pos:column="50">0<pos:position pos:line="66" pos:column="51"/></literal></expr>]<pos:position pos:line="66" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="55"/></expr_stmt>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">vinfo<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">==<pos:position pos:line="67" pos:column="17"/></operator> <name pos:line="67" pos:column="18">NULL<pos:position pos:line="67" pos:column="22"/></name></expr>)<pos:position pos:line="67" pos:column="23"/></condition><then pos:line="67" pos:column="23"> <block pos:line="67" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">ERROR<pos:position pos:line="68" pos:column="12"/></name><argument_list pos:line="68" pos:column="12">(<argument><expr><name pos:line="68" pos:column="13">PLUGIN_NAME<pos:position pos:line="68" pos:column="24"/></name> <literal type="string" pos:line="68" pos:column="25">" plugin: malloc failed."<pos:position pos:line="68" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="52"/></expr_stmt>
      <continue pos:line="69" pos:column="7">continue;<pos:position pos:line="69" pos:column="16"/></continue>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="72" pos:column="5">status<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <call><name pos:line="72" pos:column="14">virDomainGetVcpus<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><name><name pos:line="72" pos:column="32">domains<pos:position pos:line="72" pos:column="39"/></name><index pos:line="72" pos:column="39">[<expr><name pos:line="72" pos:column="40">i<pos:position pos:line="72" pos:column="41"/></name></expr>]<pos:position pos:line="72" pos:column="42"/></index></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="44">vinfo<pos:position pos:line="72" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="51">info<pos:position pos:line="72" pos:column="55"/></name><operator pos:line="72" pos:column="55">.<pos:position pos:line="72" pos:column="56"/></operator><name pos:line="72" pos:column="56">nrVirtCpu<pos:position pos:line="72" pos:column="65"/></name></name></expr></argument>,
                               <comment type="block" pos:line="73" pos:column="32">/* cpu map = */</comment> <argument><expr><name pos:line="73" pos:column="48">NULL<pos:position pos:line="73" pos:column="52"/></name></expr></argument>, <comment type="block" pos:line="73" pos:column="54">/* cpu map length = */</comment> <argument><expr><literal type="number" pos:line="73" pos:column="77">0<pos:position pos:line="73" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="80"/></expr_stmt>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">status<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">&lt;<pos:position pos:line="74" pos:column="20"/></operator> <literal type="number" pos:line="74" pos:column="18">0<pos:position pos:line="74" pos:column="19"/></literal></expr>)<pos:position pos:line="74" pos:column="20"/></condition><then pos:line="74" pos:column="20"> <block pos:line="74" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">ERROR<pos:position pos:line="75" pos:column="12"/></name><argument_list pos:line="75" pos:column="12">(<argument><expr><name pos:line="75" pos:column="13">PLUGIN_NAME<pos:position pos:line="75" pos:column="24"/></name> <literal type="string" pos:line="75" pos:column="25">" plugin: virDomainGetVcpus failed with status %i."<pos:position pos:line="75" pos:column="76"/></literal></expr></argument>,
            <argument><expr><name pos:line="76" pos:column="13">status<pos:position pos:line="76" pos:column="19"/></name></expr></argument>)<pos:position pos:line="76" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">sfree<pos:position pos:line="77" pos:column="12"/></name><argument_list pos:line="77" pos:column="12">(<argument><expr><name pos:line="77" pos:column="13">vinfo<pos:position pos:line="77" pos:column="18"/></name></expr></argument>)<pos:position pos:line="77" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="20"/></expr_stmt>
      <continue pos:line="78" pos:column="7">continue;<pos:position pos:line="78" pos:column="16"/></continue>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>

    <for pos:line="81" pos:column="5">for <control pos:line="81" pos:column="9">(<init><decl><type><name pos:line="81" pos:column="10">int<pos:position pos:line="81" pos:column="13"/></name></type> <name pos:line="81" pos:column="14">j<pos:position pos:line="81" pos:column="15"/></name> <init pos:line="81" pos:column="16">= <expr><literal type="number" pos:line="81" pos:column="18">0<pos:position pos:line="81" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="81" pos:column="20"/></init> <condition><expr><name pos:line="81" pos:column="21">j<pos:position pos:line="81" pos:column="22"/></name> <operator pos:line="81" pos:column="23">&lt;<pos:position pos:line="81" pos:column="27"/></operator> <name><name pos:line="81" pos:column="25">info<pos:position pos:line="81" pos:column="29"/></name><operator pos:line="81" pos:column="29">.<pos:position pos:line="81" pos:column="30"/></operator><name pos:line="81" pos:column="30">nrVirtCpu<pos:position pos:line="81" pos:column="39"/></name></name></expr>;<pos:position pos:line="81" pos:column="40"/></condition> <incr><expr><operator pos:line="81" pos:column="41">++<pos:position pos:line="81" pos:column="43"/></operator><name pos:line="81" pos:column="43">j<pos:position pos:line="81" pos:column="44"/></name></expr></incr>)<pos:position pos:line="81" pos:column="45"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="7">vcpu_submit<pos:position pos:line="82" pos:column="18"/></name><argument_list pos:line="82" pos:column="18">(<argument><expr><name><name pos:line="82" pos:column="19">vinfo<pos:position pos:line="82" pos:column="24"/></name><index pos:line="82" pos:column="24">[<expr><name pos:line="82" pos:column="25">j<pos:position pos:line="82" pos:column="26"/></name></expr>]<pos:position pos:line="82" pos:column="27"/></index></name><operator pos:line="82" pos:column="27">.<pos:position pos:line="82" pos:column="28"/></operator><name pos:line="82" pos:column="28">cpuTime<pos:position pos:line="82" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="37">domains<pos:position pos:line="82" pos:column="44"/></name><index pos:line="82" pos:column="44">[<expr><name pos:line="82" pos:column="45">i<pos:position pos:line="82" pos:column="46"/></name></expr>]<pos:position pos:line="82" pos:column="47"/></index></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="49">vinfo<pos:position pos:line="82" pos:column="54"/></name><index pos:line="82" pos:column="54">[<expr><name pos:line="82" pos:column="55">j<pos:position pos:line="82" pos:column="56"/></name></expr>]<pos:position pos:line="82" pos:column="57"/></index></name><operator pos:line="82" pos:column="57">.<pos:position pos:line="82" pos:column="58"/></operator><name pos:line="82" pos:column="58">number<pos:position pos:line="82" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="66">"virt_vcpu"<pos:position pos:line="82" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="79"/></expr_stmt></block></for>

    <expr_stmt><expr><call><name pos:line="84" pos:column="5">sfree<pos:position pos:line="84" pos:column="10"/></name><argument_list pos:line="84" pos:column="10">(<argument><expr><name pos:line="84" pos:column="11">vinfo<pos:position pos:line="84" pos:column="16"/></name></expr></argument>)<pos:position pos:line="84" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="86" pos:column="5">minfo<pos:position pos:line="86" pos:column="10"/></name> <operator pos:line="86" pos:column="11">=<pos:position pos:line="86" pos:column="12"/></operator>
        <call><name pos:line="87" pos:column="9">malloc<pos:position pos:line="87" pos:column="15"/></name><argument_list pos:line="87" pos:column="15">(<argument><expr><name pos:line="87" pos:column="16">VIR_DOMAIN_MEMORY_STAT_NR<pos:position pos:line="87" pos:column="41"/></name> <operator pos:line="87" pos:column="42">*<pos:position pos:line="87" pos:column="43"/></operator> <sizeof pos:line="87" pos:column="44">sizeof<argument_list pos:line="87" pos:column="50">(<argument><expr><name pos:line="87" pos:column="51">virDomainMemoryStatStruct<pos:position pos:line="87" pos:column="76"/></name></expr></argument>)<pos:position pos:line="87" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="87" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="79"/></expr_stmt>
    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">minfo<pos:position pos:line="88" pos:column="14"/></name> <operator pos:line="88" pos:column="15">==<pos:position pos:line="88" pos:column="17"/></operator> <name pos:line="88" pos:column="18">NULL<pos:position pos:line="88" pos:column="22"/></name></expr>)<pos:position pos:line="88" pos:column="23"/></condition><then pos:line="88" pos:column="23"> <block pos:line="88" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">ERROR<pos:position pos:line="89" pos:column="12"/></name><argument_list pos:line="89" pos:column="12">(<argument><expr><literal type="string" pos:line="89" pos:column="13">"virt plugin: malloc failed."<pos:position pos:line="89" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="44"/></expr_stmt>
      <continue pos:line="90" pos:column="7">continue;<pos:position pos:line="90" pos:column="16"/></continue>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="93" pos:column="5">status<pos:position pos:line="93" pos:column="11"/></name> <operator pos:line="93" pos:column="12">=<pos:position pos:line="93" pos:column="13"/></operator>
        <call><name pos:line="94" pos:column="9">virDomainMemoryStats<pos:position pos:line="94" pos:column="29"/></name><argument_list pos:line="94" pos:column="29">(<argument><expr><name><name pos:line="94" pos:column="30">domains<pos:position pos:line="94" pos:column="37"/></name><index pos:line="94" pos:column="37">[<expr><name pos:line="94" pos:column="38">i<pos:position pos:line="94" pos:column="39"/></name></expr>]<pos:position pos:line="94" pos:column="40"/></index></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="42">minfo<pos:position pos:line="94" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="49">VIR_DOMAIN_MEMORY_STAT_NR<pos:position pos:line="94" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="76">0<pos:position pos:line="94" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="79"/></expr_stmt>

    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name pos:line="96" pos:column="9">status<pos:position pos:line="96" pos:column="15"/></name> <operator pos:line="96" pos:column="16">&lt;<pos:position pos:line="96" pos:column="20"/></operator> <literal type="number" pos:line="96" pos:column="18">0<pos:position pos:line="96" pos:column="19"/></literal></expr>)<pos:position pos:line="96" pos:column="20"/></condition><then pos:line="96" pos:column="20"> <block pos:line="96" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">ERROR<pos:position pos:line="97" pos:column="12"/></name><argument_list pos:line="97" pos:column="12">(<argument><expr><literal type="string" pos:line="97" pos:column="13">"virt plugin: virDomainMemoryStats failed with status %i."<pos:position pos:line="97" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="73">status<pos:position pos:line="97" pos:column="79"/></name></expr></argument>)<pos:position pos:line="97" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="81"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">sfree<pos:position pos:line="98" pos:column="12"/></name><argument_list pos:line="98" pos:column="12">(<argument><expr><name pos:line="98" pos:column="13">minfo<pos:position pos:line="98" pos:column="18"/></name></expr></argument>)<pos:position pos:line="98" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="20"/></expr_stmt>
      <continue pos:line="99" pos:column="7">continue;<pos:position pos:line="99" pos:column="16"/></continue>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

    <for pos:line="102" pos:column="5">for <control pos:line="102" pos:column="9">(<init><decl><type><name pos:line="102" pos:column="10">int<pos:position pos:line="102" pos:column="13"/></name></type> <name pos:line="102" pos:column="14">j<pos:position pos:line="102" pos:column="15"/></name> <init pos:line="102" pos:column="16">= <expr><literal type="number" pos:line="102" pos:column="18">0<pos:position pos:line="102" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="102" pos:column="20"/></init> <condition><expr><name pos:line="102" pos:column="21">j<pos:position pos:line="102" pos:column="22"/></name> <operator pos:line="102" pos:column="23">&lt;<pos:position pos:line="102" pos:column="27"/></operator> <name pos:line="102" pos:column="25">status<pos:position pos:line="102" pos:column="31"/></name></expr>;<pos:position pos:line="102" pos:column="32"/></condition> <incr><expr><name pos:line="102" pos:column="33">j<pos:position pos:line="102" pos:column="34"/></name><operator pos:line="102" pos:column="34">++<pos:position pos:line="102" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="102" pos:column="37"/></control> <block pos:line="102" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="103" pos:column="7">memory_stats_submit<pos:position pos:line="103" pos:column="26"/></name><argument_list pos:line="103" pos:column="26">(<argument><expr><operator pos:line="103" pos:column="27">(<pos:position pos:line="103" pos:column="28"/></operator><name pos:line="103" pos:column="28">gauge_t<pos:position pos:line="103" pos:column="35"/></name><operator pos:line="103" pos:column="35">)<pos:position pos:line="103" pos:column="36"/></operator><name><name pos:line="103" pos:column="36">minfo<pos:position pos:line="103" pos:column="41"/></name><index pos:line="103" pos:column="41">[<expr><name pos:line="103" pos:column="42">j<pos:position pos:line="103" pos:column="43"/></name></expr>]<pos:position pos:line="103" pos:column="44"/></index></name><operator pos:line="103" pos:column="44">.<pos:position pos:line="103" pos:column="45"/></operator><name pos:line="103" pos:column="45">val<pos:position pos:line="103" pos:column="48"/></name> <operator pos:line="103" pos:column="49">*<pos:position pos:line="103" pos:column="50"/></operator> <literal type="number" pos:line="103" pos:column="51">1024<pos:position pos:line="103" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="57">domains<pos:position pos:line="103" pos:column="64"/></name><index pos:line="103" pos:column="64">[<expr><name pos:line="103" pos:column="65">i<pos:position pos:line="103" pos:column="66"/></name></expr>]<pos:position pos:line="103" pos:column="67"/></index></name></expr></argument>,
                          <argument><expr><name><name pos:line="104" pos:column="27">minfo<pos:position pos:line="104" pos:column="32"/></name><index pos:line="104" pos:column="32">[<expr><name pos:line="104" pos:column="33">j<pos:position pos:line="104" pos:column="34"/></name></expr>]<pos:position pos:line="104" pos:column="35"/></index></name><operator pos:line="104" pos:column="35">.<pos:position pos:line="104" pos:column="36"/></operator><name pos:line="104" pos:column="36">tag<pos:position pos:line="104" pos:column="39"/></name></expr></argument>)<pos:position pos:line="104" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="107" pos:column="5">sfree<pos:position pos:line="107" pos:column="10"/></name><argument_list pos:line="107" pos:column="10">(<argument><expr><name pos:line="107" pos:column="11">minfo<pos:position pos:line="107" pos:column="16"/></name></expr></argument>)<pos:position pos:line="107" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block></for>

  <comment type="block" pos:line="110" pos:column="3">/* Get block device stats for each domain. */</comment>
  <for pos:line="111" pos:column="3">for <control pos:line="111" pos:column="7">(<init><decl><type><name pos:line="111" pos:column="8">int<pos:position pos:line="111" pos:column="11"/></name></type> <name pos:line="111" pos:column="12">i<pos:position pos:line="111" pos:column="13"/></name> <init pos:line="111" pos:column="14">= <expr><literal type="number" pos:line="111" pos:column="16">0<pos:position pos:line="111" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="111" pos:column="18"/></init> <condition><expr><name pos:line="111" pos:column="19">i<pos:position pos:line="111" pos:column="20"/></name> <operator pos:line="111" pos:column="21">&lt;<pos:position pos:line="111" pos:column="25"/></operator> <name pos:line="111" pos:column="23">nr_block_devices<pos:position pos:line="111" pos:column="39"/></name></expr>;<pos:position pos:line="111" pos:column="40"/></condition> <incr><expr><operator pos:line="111" pos:column="41">++<pos:position pos:line="111" pos:column="43"/></operator><name pos:line="111" pos:column="43">i<pos:position pos:line="111" pos:column="44"/></name></expr></incr>)<pos:position pos:line="111" pos:column="45"/></control> <block pos:line="111" pos:column="46">{
    <decl_stmt><decl><type><name><name pos:line="112" pos:column="5">struct<pos:position pos:line="112" pos:column="11"/></name> <name pos:line="112" pos:column="12">_virDomainBlockStats<pos:position pos:line="112" pos:column="32"/></name></name></type> <name pos:line="112" pos:column="33">stats<pos:position pos:line="112" pos:column="38"/></name></decl>;<pos:position pos:line="112" pos:column="39"/></decl_stmt>

    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><call><name pos:line="114" pos:column="9">virDomainBlockStats<pos:position pos:line="114" pos:column="28"/></name><argument_list pos:line="114" pos:column="28">(<argument><expr><name><name pos:line="114" pos:column="29">block_devices<pos:position pos:line="114" pos:column="42"/></name><index pos:line="114" pos:column="42">[<expr><name pos:line="114" pos:column="43">i<pos:position pos:line="114" pos:column="44"/></name></expr>]<pos:position pos:line="114" pos:column="45"/></index></name><operator pos:line="114" pos:column="45">.<pos:position pos:line="114" pos:column="46"/></operator><name pos:line="114" pos:column="46">dom<pos:position pos:line="114" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="51">block_devices<pos:position pos:line="114" pos:column="64"/></name><index pos:line="114" pos:column="64">[<expr><name pos:line="114" pos:column="65">i<pos:position pos:line="114" pos:column="66"/></name></expr>]<pos:position pos:line="114" pos:column="67"/></index></name><operator pos:line="114" pos:column="67">.<pos:position pos:line="114" pos:column="68"/></operator><name pos:line="114" pos:column="68">path<pos:position pos:line="114" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="74">&amp;<pos:position pos:line="114" pos:column="79"/></operator><name pos:line="114" pos:column="75">stats<pos:position pos:line="114" pos:column="80"/></name></expr></argument>,
                            <argument><expr><sizeof pos:line="115" pos:column="29">sizeof <name pos:line="115" pos:column="36">stats<pos:position pos:line="115" pos:column="41"/></name></sizeof></expr></argument>)<pos:position pos:line="115" pos:column="42"/></argument_list></call> <operator pos:line="115" pos:column="43">!=<pos:position pos:line="115" pos:column="45"/></operator> <literal type="number" pos:line="115" pos:column="46">0<pos:position pos:line="115" pos:column="47"/></literal></expr>)<pos:position pos:line="115" pos:column="48"/></condition><then pos:line="115" pos:column="48">
      <block type="pseudo"><continue pos:line="116" pos:column="7">continue;<pos:position pos:line="116" pos:column="16"/></continue></block></then></if>

    <decl_stmt><decl><type><name pos:line="118" pos:column="5">char<pos:position pos:line="118" pos:column="9"/></name> <modifier pos:line="118" pos:column="10">*<pos:position pos:line="118" pos:column="11"/></modifier></type><name pos:line="118" pos:column="11">type_instance<pos:position pos:line="118" pos:column="24"/></name> <init pos:line="118" pos:column="25">= <expr><name pos:line="118" pos:column="27">NULL<pos:position pos:line="118" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="118" pos:column="32"/></decl_stmt>
    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><name pos:line="119" pos:column="9">blockdevice_format_basename<pos:position pos:line="119" pos:column="36"/></name> <operator pos:line="119" pos:column="37">&amp;&amp;<pos:position pos:line="119" pos:column="47"/></operator> <name pos:line="119" pos:column="40">blockdevice_format<pos:position pos:line="119" pos:column="58"/></name> <operator pos:line="119" pos:column="59">==<pos:position pos:line="119" pos:column="61"/></operator> <name pos:line="119" pos:column="62">source<pos:position pos:line="119" pos:column="68"/></name></expr>)<pos:position pos:line="119" pos:column="69"/></condition><then pos:line="119" pos:column="69">
      <block type="pseudo"><expr_stmt><expr><name pos:line="120" pos:column="7">type_instance<pos:position pos:line="120" pos:column="20"/></name> <operator pos:line="120" pos:column="21">=<pos:position pos:line="120" pos:column="22"/></operator> <call><name pos:line="120" pos:column="23">strdup<pos:position pos:line="120" pos:column="29"/></name><argument_list pos:line="120" pos:column="29">(<argument><expr><call><name pos:line="120" pos:column="30">basename<pos:position pos:line="120" pos:column="38"/></name><argument_list pos:line="120" pos:column="38">(<argument><expr><name><name pos:line="120" pos:column="39">block_devices<pos:position pos:line="120" pos:column="52"/></name><index pos:line="120" pos:column="52">[<expr><name pos:line="120" pos:column="53">i<pos:position pos:line="120" pos:column="54"/></name></expr>]<pos:position pos:line="120" pos:column="55"/></index></name><operator pos:line="120" pos:column="55">.<pos:position pos:line="120" pos:column="56"/></operator><name pos:line="120" pos:column="56">path<pos:position pos:line="120" pos:column="60"/></name></expr></argument>)<pos:position pos:line="120" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="120" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="63"/></expr_stmt></block></then>
    <else pos:line="121" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="122" pos:column="7">type_instance<pos:position pos:line="122" pos:column="20"/></name> <operator pos:line="122" pos:column="21">=<pos:position pos:line="122" pos:column="22"/></operator> <call><name pos:line="122" pos:column="23">strdup<pos:position pos:line="122" pos:column="29"/></name><argument_list pos:line="122" pos:column="29">(<argument><expr><name><name pos:line="122" pos:column="30">block_devices<pos:position pos:line="122" pos:column="43"/></name><index pos:line="122" pos:column="43">[<expr><name pos:line="122" pos:column="44">i<pos:position pos:line="122" pos:column="45"/></name></expr>]<pos:position pos:line="122" pos:column="46"/></index></name><operator pos:line="122" pos:column="46">.<pos:position pos:line="122" pos:column="47"/></operator><name pos:line="122" pos:column="47">path<pos:position pos:line="122" pos:column="51"/></name></expr></argument>)<pos:position pos:line="122" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="53"/></expr_stmt></block></else></if>

    <if pos:line="124" pos:column="5">if <condition pos:line="124" pos:column="8">(<expr><operator pos:line="124" pos:column="9">(<pos:position pos:line="124" pos:column="10"/></operator><name><name pos:line="124" pos:column="10">stats<pos:position pos:line="124" pos:column="15"/></name><operator pos:line="124" pos:column="15">.<pos:position pos:line="124" pos:column="16"/></operator><name pos:line="124" pos:column="16">rd_req<pos:position pos:line="124" pos:column="22"/></name></name> <operator pos:line="124" pos:column="23">!=<pos:position pos:line="124" pos:column="25"/></operator> <operator pos:line="124" pos:column="26">-<pos:position pos:line="124" pos:column="27"/></operator><literal type="number" pos:line="124" pos:column="27">1<pos:position pos:line="124" pos:column="28"/></literal><operator pos:line="124" pos:column="28">)<pos:position pos:line="124" pos:column="29"/></operator> <operator pos:line="124" pos:column="30">&amp;&amp;<pos:position pos:line="124" pos:column="40"/></operator> <operator pos:line="124" pos:column="33">(<pos:position pos:line="124" pos:column="34"/></operator><name><name pos:line="124" pos:column="34">stats<pos:position pos:line="124" pos:column="39"/></name><operator pos:line="124" pos:column="39">.<pos:position pos:line="124" pos:column="40"/></operator><name pos:line="124" pos:column="40">wr_req<pos:position pos:line="124" pos:column="46"/></name></name> <operator pos:line="124" pos:column="47">!=<pos:position pos:line="124" pos:column="49"/></operator> <operator pos:line="124" pos:column="50">-<pos:position pos:line="124" pos:column="51"/></operator><literal type="number" pos:line="124" pos:column="51">1<pos:position pos:line="124" pos:column="52"/></literal><operator pos:line="124" pos:column="52">)<pos:position pos:line="124" pos:column="53"/></operator></expr>)<pos:position pos:line="124" pos:column="54"/></condition><then pos:line="124" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="125" pos:column="7">submit_derive2<pos:position pos:line="125" pos:column="21"/></name><argument_list pos:line="125" pos:column="21">(<argument><expr><literal type="string" pos:line="125" pos:column="22">"disk_ops"<pos:position pos:line="125" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="125" pos:column="34">(<pos:position pos:line="125" pos:column="35"/></operator><name pos:line="125" pos:column="35">derive_t<pos:position pos:line="125" pos:column="43"/></name><operator pos:line="125" pos:column="43">)<pos:position pos:line="125" pos:column="44"/></operator><name><name pos:line="125" pos:column="44">stats<pos:position pos:line="125" pos:column="49"/></name><operator pos:line="125" pos:column="49">.<pos:position pos:line="125" pos:column="50"/></operator><name pos:line="125" pos:column="50">rd_req<pos:position pos:line="125" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="58">(<pos:position pos:line="125" pos:column="59"/></operator><name pos:line="125" pos:column="59">derive_t<pos:position pos:line="125" pos:column="67"/></name><operator pos:line="125" pos:column="67">)<pos:position pos:line="125" pos:column="68"/></operator><name><name pos:line="125" pos:column="68">stats<pos:position pos:line="125" pos:column="73"/></name><operator pos:line="125" pos:column="73">.<pos:position pos:line="125" pos:column="74"/></operator><name pos:line="125" pos:column="74">wr_req<pos:position pos:line="125" pos:column="80"/></name></name></expr></argument>,
                     <argument><expr><name><name pos:line="126" pos:column="22">block_devices<pos:position pos:line="126" pos:column="35"/></name><index pos:line="126" pos:column="35">[<expr><name pos:line="126" pos:column="36">i<pos:position pos:line="126" pos:column="37"/></name></expr>]<pos:position pos:line="126" pos:column="38"/></index></name><operator pos:line="126" pos:column="38">.<pos:position pos:line="126" pos:column="39"/></operator><name pos:line="126" pos:column="39">dom<pos:position pos:line="126" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="44">type_instance<pos:position pos:line="126" pos:column="57"/></name></expr></argument>)<pos:position pos:line="126" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="59"/></expr_stmt></block></then></if>

    <if pos:line="128" pos:column="5">if <condition pos:line="128" pos:column="8">(<expr><operator pos:line="128" pos:column="9">(<pos:position pos:line="128" pos:column="10"/></operator><name><name pos:line="128" pos:column="10">stats<pos:position pos:line="128" pos:column="15"/></name><operator pos:line="128" pos:column="15">.<pos:position pos:line="128" pos:column="16"/></operator><name pos:line="128" pos:column="16">rd_bytes<pos:position pos:line="128" pos:column="24"/></name></name> <operator pos:line="128" pos:column="25">!=<pos:position pos:line="128" pos:column="27"/></operator> <operator pos:line="128" pos:column="28">-<pos:position pos:line="128" pos:column="29"/></operator><literal type="number" pos:line="128" pos:column="29">1<pos:position pos:line="128" pos:column="30"/></literal><operator pos:line="128" pos:column="30">)<pos:position pos:line="128" pos:column="31"/></operator> <operator pos:line="128" pos:column="32">&amp;&amp;<pos:position pos:line="128" pos:column="42"/></operator> <operator pos:line="128" pos:column="35">(<pos:position pos:line="128" pos:column="36"/></operator><name><name pos:line="128" pos:column="36">stats<pos:position pos:line="128" pos:column="41"/></name><operator pos:line="128" pos:column="41">.<pos:position pos:line="128" pos:column="42"/></operator><name pos:line="128" pos:column="42">wr_bytes<pos:position pos:line="128" pos:column="50"/></name></name> <operator pos:line="128" pos:column="51">!=<pos:position pos:line="128" pos:column="53"/></operator> <operator pos:line="128" pos:column="54">-<pos:position pos:line="128" pos:column="55"/></operator><literal type="number" pos:line="128" pos:column="55">1<pos:position pos:line="128" pos:column="56"/></literal><operator pos:line="128" pos:column="56">)<pos:position pos:line="128" pos:column="57"/></operator></expr>)<pos:position pos:line="128" pos:column="58"/></condition><then pos:line="128" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="129" pos:column="7">submit_derive2<pos:position pos:line="129" pos:column="21"/></name><argument_list pos:line="129" pos:column="21">(<argument><expr><literal type="string" pos:line="129" pos:column="22">"disk_octets"<pos:position pos:line="129" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="129" pos:column="37">(<pos:position pos:line="129" pos:column="38"/></operator><name pos:line="129" pos:column="38">derive_t<pos:position pos:line="129" pos:column="46"/></name><operator pos:line="129" pos:column="46">)<pos:position pos:line="129" pos:column="47"/></operator><name><name pos:line="129" pos:column="47">stats<pos:position pos:line="129" pos:column="52"/></name><operator pos:line="129" pos:column="52">.<pos:position pos:line="129" pos:column="53"/></operator><name pos:line="129" pos:column="53">rd_bytes<pos:position pos:line="129" pos:column="61"/></name></name></expr></argument>,
                     <argument><expr><operator pos:line="130" pos:column="22">(<pos:position pos:line="130" pos:column="23"/></operator><name pos:line="130" pos:column="23">derive_t<pos:position pos:line="130" pos:column="31"/></name><operator pos:line="130" pos:column="31">)<pos:position pos:line="130" pos:column="32"/></operator><name><name pos:line="130" pos:column="32">stats<pos:position pos:line="130" pos:column="37"/></name><operator pos:line="130" pos:column="37">.<pos:position pos:line="130" pos:column="38"/></operator><name pos:line="130" pos:column="38">wr_bytes<pos:position pos:line="130" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="48">block_devices<pos:position pos:line="130" pos:column="61"/></name><index pos:line="130" pos:column="61">[<expr><name pos:line="130" pos:column="62">i<pos:position pos:line="130" pos:column="63"/></name></expr>]<pos:position pos:line="130" pos:column="64"/></index></name><operator pos:line="130" pos:column="64">.<pos:position pos:line="130" pos:column="65"/></operator><name pos:line="130" pos:column="65">dom<pos:position pos:line="130" pos:column="68"/></name></expr></argument>,
                     <argument><expr><name pos:line="131" pos:column="22">type_instance<pos:position pos:line="131" pos:column="35"/></name></expr></argument>)<pos:position pos:line="131" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="37"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="133" pos:column="5">sfree<pos:position pos:line="133" pos:column="10"/></name><argument_list pos:line="133" pos:column="10">(<argument><expr><name pos:line="133" pos:column="11">type_instance<pos:position pos:line="133" pos:column="24"/></name></expr></argument>)<pos:position pos:line="133" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="134" pos:column="4"/></block></for> <comment type="block" pos:line="134" pos:column="5">/* for (nr_block_devices) */</comment>

  <comment type="block" pos:line="136" pos:column="3">/* Get interface stats for each domain. */</comment>
  <for pos:line="137" pos:column="3">for <control pos:line="137" pos:column="7">(<init><decl><type><name pos:line="137" pos:column="8">int<pos:position pos:line="137" pos:column="11"/></name></type> <name pos:line="137" pos:column="12">i<pos:position pos:line="137" pos:column="13"/></name> <init pos:line="137" pos:column="14">= <expr><literal type="number" pos:line="137" pos:column="16">0<pos:position pos:line="137" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="137" pos:column="18"/></init> <condition><expr><name pos:line="137" pos:column="19">i<pos:position pos:line="137" pos:column="20"/></name> <operator pos:line="137" pos:column="21">&lt;<pos:position pos:line="137" pos:column="25"/></operator> <name pos:line="137" pos:column="23">nr_interface_devices<pos:position pos:line="137" pos:column="43"/></name></expr>;<pos:position pos:line="137" pos:column="44"/></condition> <incr><expr><operator pos:line="137" pos:column="45">++<pos:position pos:line="137" pos:column="47"/></operator><name pos:line="137" pos:column="47">i<pos:position pos:line="137" pos:column="48"/></name></expr></incr>)<pos:position pos:line="137" pos:column="49"/></control> <block pos:line="137" pos:column="50">{
    <decl_stmt><decl><type><name><name pos:line="138" pos:column="5">struct<pos:position pos:line="138" pos:column="11"/></name> <name pos:line="138" pos:column="12">_virDomainInterfaceStats<pos:position pos:line="138" pos:column="36"/></name></name></type> <name pos:line="138" pos:column="37">stats<pos:position pos:line="138" pos:column="42"/></name></decl>;<pos:position pos:line="138" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="139" pos:column="5">char<pos:position pos:line="139" pos:column="9"/></name> <modifier pos:line="139" pos:column="10">*<pos:position pos:line="139" pos:column="11"/></modifier></type><name pos:line="139" pos:column="11">display_name<pos:position pos:line="139" pos:column="23"/></name> <init pos:line="139" pos:column="24">= <expr><name pos:line="139" pos:column="26">NULL<pos:position pos:line="139" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="139" pos:column="31"/></decl_stmt>

    <switch pos:line="141" pos:column="5">switch <condition pos:line="141" pos:column="12">(<expr><name pos:line="141" pos:column="13">interface_format<pos:position pos:line="141" pos:column="29"/></name></expr>)<pos:position pos:line="141" pos:column="30"/></condition> <block pos:line="141" pos:column="31">{
    <case pos:line="142" pos:column="5">case <expr><name pos:line="142" pos:column="10">if_address<pos:position pos:line="142" pos:column="20"/></name></expr>:<pos:position pos:line="142" pos:column="21"/></case>
      <expr_stmt><expr><name pos:line="143" pos:column="7">display_name<pos:position pos:line="143" pos:column="19"/></name> <operator pos:line="143" pos:column="20">=<pos:position pos:line="143" pos:column="21"/></operator> <name><name pos:line="143" pos:column="22">interface_devices<pos:position pos:line="143" pos:column="39"/></name><index pos:line="143" pos:column="39">[<expr><name pos:line="143" pos:column="40">i<pos:position pos:line="143" pos:column="41"/></name></expr>]<pos:position pos:line="143" pos:column="42"/></index></name><operator pos:line="143" pos:column="42">.<pos:position pos:line="143" pos:column="43"/></operator><name pos:line="143" pos:column="43">address<pos:position pos:line="143" pos:column="50"/></name></expr>;<pos:position pos:line="143" pos:column="51"/></expr_stmt>
      <break pos:line="144" pos:column="7">break;<pos:position pos:line="144" pos:column="13"/></break>
    <case pos:line="145" pos:column="5">case <expr><name pos:line="145" pos:column="10">if_number<pos:position pos:line="145" pos:column="19"/></name></expr>:<pos:position pos:line="145" pos:column="20"/></case>
      <expr_stmt><expr><name pos:line="146" pos:column="7">display_name<pos:position pos:line="146" pos:column="19"/></name> <operator pos:line="146" pos:column="20">=<pos:position pos:line="146" pos:column="21"/></operator> <name><name pos:line="146" pos:column="22">interface_devices<pos:position pos:line="146" pos:column="39"/></name><index pos:line="146" pos:column="39">[<expr><name pos:line="146" pos:column="40">i<pos:position pos:line="146" pos:column="41"/></name></expr>]<pos:position pos:line="146" pos:column="42"/></index></name><operator pos:line="146" pos:column="42">.<pos:position pos:line="146" pos:column="43"/></operator><name pos:line="146" pos:column="43">number<pos:position pos:line="146" pos:column="49"/></name></expr>;<pos:position pos:line="146" pos:column="50"/></expr_stmt>
      <break pos:line="147" pos:column="7">break;<pos:position pos:line="147" pos:column="13"/></break>
    <case pos:line="148" pos:column="5">case <expr><name pos:line="148" pos:column="10">if_name<pos:position pos:line="148" pos:column="17"/></name></expr>:<pos:position pos:line="148" pos:column="18"/></case>
    <default pos:line="149" pos:column="5">default:<pos:position pos:line="149" pos:column="13"/></default>
      <expr_stmt><expr><name pos:line="150" pos:column="7">display_name<pos:position pos:line="150" pos:column="19"/></name> <operator pos:line="150" pos:column="20">=<pos:position pos:line="150" pos:column="21"/></operator> <name><name pos:line="150" pos:column="22">interface_devices<pos:position pos:line="150" pos:column="39"/></name><index pos:line="150" pos:column="39">[<expr><name pos:line="150" pos:column="40">i<pos:position pos:line="150" pos:column="41"/></name></expr>]<pos:position pos:line="150" pos:column="42"/></index></name><operator pos:line="150" pos:column="42">.<pos:position pos:line="150" pos:column="43"/></operator><name pos:line="150" pos:column="43">path<pos:position pos:line="150" pos:column="47"/></name></expr>;<pos:position pos:line="150" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="151" pos:column="6"/></block></switch>

    <if pos:line="153" pos:column="5">if <condition pos:line="153" pos:column="8">(<expr><call><name pos:line="153" pos:column="9">virDomainInterfaceStats<pos:position pos:line="153" pos:column="32"/></name><argument_list pos:line="153" pos:column="32">(<argument><expr><name><name pos:line="153" pos:column="33">interface_devices<pos:position pos:line="153" pos:column="50"/></name><index pos:line="153" pos:column="50">[<expr><name pos:line="153" pos:column="51">i<pos:position pos:line="153" pos:column="52"/></name></expr>]<pos:position pos:line="153" pos:column="53"/></index></name><operator pos:line="153" pos:column="53">.<pos:position pos:line="153" pos:column="54"/></operator><name pos:line="153" pos:column="54">dom<pos:position pos:line="153" pos:column="57"/></name></expr></argument>,
                                <argument><expr><name><name pos:line="154" pos:column="33">interface_devices<pos:position pos:line="154" pos:column="50"/></name><index pos:line="154" pos:column="50">[<expr><name pos:line="154" pos:column="51">i<pos:position pos:line="154" pos:column="52"/></name></expr>]<pos:position pos:line="154" pos:column="53"/></index></name><operator pos:line="154" pos:column="53">.<pos:position pos:line="154" pos:column="54"/></operator><name pos:line="154" pos:column="54">path<pos:position pos:line="154" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="154" pos:column="60">&amp;<pos:position pos:line="154" pos:column="65"/></operator><name pos:line="154" pos:column="61">stats<pos:position pos:line="154" pos:column="66"/></name></expr></argument>,
                                <argument><expr><sizeof pos:line="155" pos:column="33">sizeof <name pos:line="155" pos:column="40">stats<pos:position pos:line="155" pos:column="45"/></name></sizeof></expr></argument>)<pos:position pos:line="155" pos:column="46"/></argument_list></call> <operator pos:line="155" pos:column="47">!=<pos:position pos:line="155" pos:column="49"/></operator> <literal type="number" pos:line="155" pos:column="50">0<pos:position pos:line="155" pos:column="51"/></literal></expr>)<pos:position pos:line="155" pos:column="52"/></condition><then pos:line="155" pos:column="52">
      <block type="pseudo"><continue pos:line="156" pos:column="7">continue;<pos:position pos:line="156" pos:column="16"/></continue></block></then></if>

    <if pos:line="158" pos:column="5">if <condition pos:line="158" pos:column="8">(<expr><operator pos:line="158" pos:column="9">(<pos:position pos:line="158" pos:column="10"/></operator><name><name pos:line="158" pos:column="10">stats<pos:position pos:line="158" pos:column="15"/></name><operator pos:line="158" pos:column="15">.<pos:position pos:line="158" pos:column="16"/></operator><name pos:line="158" pos:column="16">rx_bytes<pos:position pos:line="158" pos:column="24"/></name></name> <operator pos:line="158" pos:column="25">!=<pos:position pos:line="158" pos:column="27"/></operator> <operator pos:line="158" pos:column="28">-<pos:position pos:line="158" pos:column="29"/></operator><literal type="number" pos:line="158" pos:column="29">1<pos:position pos:line="158" pos:column="30"/></literal><operator pos:line="158" pos:column="30">)<pos:position pos:line="158" pos:column="31"/></operator> <operator pos:line="158" pos:column="32">&amp;&amp;<pos:position pos:line="158" pos:column="42"/></operator> <operator pos:line="158" pos:column="35">(<pos:position pos:line="158" pos:column="36"/></operator><name><name pos:line="158" pos:column="36">stats<pos:position pos:line="158" pos:column="41"/></name><operator pos:line="158" pos:column="41">.<pos:position pos:line="158" pos:column="42"/></operator><name pos:line="158" pos:column="42">tx_bytes<pos:position pos:line="158" pos:column="50"/></name></name> <operator pos:line="158" pos:column="51">!=<pos:position pos:line="158" pos:column="53"/></operator> <operator pos:line="158" pos:column="54">-<pos:position pos:line="158" pos:column="55"/></operator><literal type="number" pos:line="158" pos:column="55">1<pos:position pos:line="158" pos:column="56"/></literal><operator pos:line="158" pos:column="56">)<pos:position pos:line="158" pos:column="57"/></operator></expr>)<pos:position pos:line="158" pos:column="58"/></condition><then pos:line="158" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="159" pos:column="7">submit_derive2<pos:position pos:line="159" pos:column="21"/></name><argument_list pos:line="159" pos:column="21">(<argument><expr><literal type="string" pos:line="159" pos:column="22">"if_octets"<pos:position pos:line="159" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="159" pos:column="35">(<pos:position pos:line="159" pos:column="36"/></operator><name pos:line="159" pos:column="36">derive_t<pos:position pos:line="159" pos:column="44"/></name><operator pos:line="159" pos:column="44">)<pos:position pos:line="159" pos:column="45"/></operator><name><name pos:line="159" pos:column="45">stats<pos:position pos:line="159" pos:column="50"/></name><operator pos:line="159" pos:column="50">.<pos:position pos:line="159" pos:column="51"/></operator><name pos:line="159" pos:column="51">rx_bytes<pos:position pos:line="159" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><operator pos:line="160" pos:column="22">(<pos:position pos:line="160" pos:column="23"/></operator><name pos:line="160" pos:column="23">derive_t<pos:position pos:line="160" pos:column="31"/></name><operator pos:line="160" pos:column="31">)<pos:position pos:line="160" pos:column="32"/></operator><name><name pos:line="160" pos:column="32">stats<pos:position pos:line="160" pos:column="37"/></name><operator pos:line="160" pos:column="37">.<pos:position pos:line="160" pos:column="38"/></operator><name pos:line="160" pos:column="38">tx_bytes<pos:position pos:line="160" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="160" pos:column="48">interface_devices<pos:position pos:line="160" pos:column="65"/></name><index pos:line="160" pos:column="65">[<expr><name pos:line="160" pos:column="66">i<pos:position pos:line="160" pos:column="67"/></name></expr>]<pos:position pos:line="160" pos:column="68"/></index></name><operator pos:line="160" pos:column="68">.<pos:position pos:line="160" pos:column="69"/></operator><name pos:line="160" pos:column="69">dom<pos:position pos:line="160" pos:column="72"/></name></expr></argument>,
                     <argument><expr><name pos:line="161" pos:column="22">display_name<pos:position pos:line="161" pos:column="34"/></name></expr></argument>)<pos:position pos:line="161" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="36"/></expr_stmt></block></then></if>

    <if pos:line="163" pos:column="5">if <condition pos:line="163" pos:column="8">(<expr><operator pos:line="163" pos:column="9">(<pos:position pos:line="163" pos:column="10"/></operator><name><name pos:line="163" pos:column="10">stats<pos:position pos:line="163" pos:column="15"/></name><operator pos:line="163" pos:column="15">.<pos:position pos:line="163" pos:column="16"/></operator><name pos:line="163" pos:column="16">rx_packets<pos:position pos:line="163" pos:column="26"/></name></name> <operator pos:line="163" pos:column="27">!=<pos:position pos:line="163" pos:column="29"/></operator> <operator pos:line="163" pos:column="30">-<pos:position pos:line="163" pos:column="31"/></operator><literal type="number" pos:line="163" pos:column="31">1<pos:position pos:line="163" pos:column="32"/></literal><operator pos:line="163" pos:column="32">)<pos:position pos:line="163" pos:column="33"/></operator> <operator pos:line="163" pos:column="34">&amp;&amp;<pos:position pos:line="163" pos:column="44"/></operator> <operator pos:line="163" pos:column="37">(<pos:position pos:line="163" pos:column="38"/></operator><name><name pos:line="163" pos:column="38">stats<pos:position pos:line="163" pos:column="43"/></name><operator pos:line="163" pos:column="43">.<pos:position pos:line="163" pos:column="44"/></operator><name pos:line="163" pos:column="44">tx_packets<pos:position pos:line="163" pos:column="54"/></name></name> <operator pos:line="163" pos:column="55">!=<pos:position pos:line="163" pos:column="57"/></operator> <operator pos:line="163" pos:column="58">-<pos:position pos:line="163" pos:column="59"/></operator><literal type="number" pos:line="163" pos:column="59">1<pos:position pos:line="163" pos:column="60"/></literal><operator pos:line="163" pos:column="60">)<pos:position pos:line="163" pos:column="61"/></operator></expr>)<pos:position pos:line="163" pos:column="62"/></condition><then pos:line="163" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="164" pos:column="7">submit_derive2<pos:position pos:line="164" pos:column="21"/></name><argument_list pos:line="164" pos:column="21">(<argument><expr><literal type="string" pos:line="164" pos:column="22">"if_packets"<pos:position pos:line="164" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="164" pos:column="36">(<pos:position pos:line="164" pos:column="37"/></operator><name pos:line="164" pos:column="37">derive_t<pos:position pos:line="164" pos:column="45"/></name><operator pos:line="164" pos:column="45">)<pos:position pos:line="164" pos:column="46"/></operator><name><name pos:line="164" pos:column="46">stats<pos:position pos:line="164" pos:column="51"/></name><operator pos:line="164" pos:column="51">.<pos:position pos:line="164" pos:column="52"/></operator><name pos:line="164" pos:column="52">rx_packets<pos:position pos:line="164" pos:column="62"/></name></name></expr></argument>,
                     <argument><expr><operator pos:line="165" pos:column="22">(<pos:position pos:line="165" pos:column="23"/></operator><name pos:line="165" pos:column="23">derive_t<pos:position pos:line="165" pos:column="31"/></name><operator pos:line="165" pos:column="31">)<pos:position pos:line="165" pos:column="32"/></operator><name><name pos:line="165" pos:column="32">stats<pos:position pos:line="165" pos:column="37"/></name><operator pos:line="165" pos:column="37">.<pos:position pos:line="165" pos:column="38"/></operator><name pos:line="165" pos:column="38">tx_packets<pos:position pos:line="165" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="50">interface_devices<pos:position pos:line="165" pos:column="67"/></name><index pos:line="165" pos:column="67">[<expr><name pos:line="165" pos:column="68">i<pos:position pos:line="165" pos:column="69"/></name></expr>]<pos:position pos:line="165" pos:column="70"/></index></name><operator pos:line="165" pos:column="70">.<pos:position pos:line="165" pos:column="71"/></operator><name pos:line="165" pos:column="71">dom<pos:position pos:line="165" pos:column="74"/></name></expr></argument>,
                     <argument><expr><name pos:line="166" pos:column="22">display_name<pos:position pos:line="166" pos:column="34"/></name></expr></argument>)<pos:position pos:line="166" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="36"/></expr_stmt></block></then></if>

    <if pos:line="168" pos:column="5">if <condition pos:line="168" pos:column="8">(<expr><operator pos:line="168" pos:column="9">(<pos:position pos:line="168" pos:column="10"/></operator><name><name pos:line="168" pos:column="10">stats<pos:position pos:line="168" pos:column="15"/></name><operator pos:line="168" pos:column="15">.<pos:position pos:line="168" pos:column="16"/></operator><name pos:line="168" pos:column="16">rx_errs<pos:position pos:line="168" pos:column="23"/></name></name> <operator pos:line="168" pos:column="24">!=<pos:position pos:line="168" pos:column="26"/></operator> <operator pos:line="168" pos:column="27">-<pos:position pos:line="168" pos:column="28"/></operator><literal type="number" pos:line="168" pos:column="28">1<pos:position pos:line="168" pos:column="29"/></literal><operator pos:line="168" pos:column="29">)<pos:position pos:line="168" pos:column="30"/></operator> <operator pos:line="168" pos:column="31">&amp;&amp;<pos:position pos:line="168" pos:column="41"/></operator> <operator pos:line="168" pos:column="34">(<pos:position pos:line="168" pos:column="35"/></operator><name><name pos:line="168" pos:column="35">stats<pos:position pos:line="168" pos:column="40"/></name><operator pos:line="168" pos:column="40">.<pos:position pos:line="168" pos:column="41"/></operator><name pos:line="168" pos:column="41">tx_errs<pos:position pos:line="168" pos:column="48"/></name></name> <operator pos:line="168" pos:column="49">!=<pos:position pos:line="168" pos:column="51"/></operator> <operator pos:line="168" pos:column="52">-<pos:position pos:line="168" pos:column="53"/></operator><literal type="number" pos:line="168" pos:column="53">1<pos:position pos:line="168" pos:column="54"/></literal><operator pos:line="168" pos:column="54">)<pos:position pos:line="168" pos:column="55"/></operator></expr>)<pos:position pos:line="168" pos:column="56"/></condition><then pos:line="168" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="169" pos:column="7">submit_derive2<pos:position pos:line="169" pos:column="21"/></name><argument_list pos:line="169" pos:column="21">(<argument><expr><literal type="string" pos:line="169" pos:column="22">"if_errors"<pos:position pos:line="169" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="169" pos:column="35">(<pos:position pos:line="169" pos:column="36"/></operator><name pos:line="169" pos:column="36">derive_t<pos:position pos:line="169" pos:column="44"/></name><operator pos:line="169" pos:column="44">)<pos:position pos:line="169" pos:column="45"/></operator><name><name pos:line="169" pos:column="45">stats<pos:position pos:line="169" pos:column="50"/></name><operator pos:line="169" pos:column="50">.<pos:position pos:line="169" pos:column="51"/></operator><name pos:line="169" pos:column="51">rx_errs<pos:position pos:line="169" pos:column="58"/></name></name></expr></argument>,
                     <argument><expr><operator pos:line="170" pos:column="22">(<pos:position pos:line="170" pos:column="23"/></operator><name pos:line="170" pos:column="23">derive_t<pos:position pos:line="170" pos:column="31"/></name><operator pos:line="170" pos:column="31">)<pos:position pos:line="170" pos:column="32"/></operator><name><name pos:line="170" pos:column="32">stats<pos:position pos:line="170" pos:column="37"/></name><operator pos:line="170" pos:column="37">.<pos:position pos:line="170" pos:column="38"/></operator><name pos:line="170" pos:column="38">tx_errs<pos:position pos:line="170" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="170" pos:column="47">interface_devices<pos:position pos:line="170" pos:column="64"/></name><index pos:line="170" pos:column="64">[<expr><name pos:line="170" pos:column="65">i<pos:position pos:line="170" pos:column="66"/></name></expr>]<pos:position pos:line="170" pos:column="67"/></index></name><operator pos:line="170" pos:column="67">.<pos:position pos:line="170" pos:column="68"/></operator><name pos:line="170" pos:column="68">dom<pos:position pos:line="170" pos:column="71"/></name></expr></argument>,
                     <argument><expr><name pos:line="171" pos:column="22">display_name<pos:position pos:line="171" pos:column="34"/></name></expr></argument>)<pos:position pos:line="171" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="36"/></expr_stmt></block></then></if>

    <if pos:line="173" pos:column="5">if <condition pos:line="173" pos:column="8">(<expr><operator pos:line="173" pos:column="9">(<pos:position pos:line="173" pos:column="10"/></operator><name><name pos:line="173" pos:column="10">stats<pos:position pos:line="173" pos:column="15"/></name><operator pos:line="173" pos:column="15">.<pos:position pos:line="173" pos:column="16"/></operator><name pos:line="173" pos:column="16">rx_drop<pos:position pos:line="173" pos:column="23"/></name></name> <operator pos:line="173" pos:column="24">!=<pos:position pos:line="173" pos:column="26"/></operator> <operator pos:line="173" pos:column="27">-<pos:position pos:line="173" pos:column="28"/></operator><literal type="number" pos:line="173" pos:column="28">1<pos:position pos:line="173" pos:column="29"/></literal><operator pos:line="173" pos:column="29">)<pos:position pos:line="173" pos:column="30"/></operator> <operator pos:line="173" pos:column="31">&amp;&amp;<pos:position pos:line="173" pos:column="41"/></operator> <operator pos:line="173" pos:column="34">(<pos:position pos:line="173" pos:column="35"/></operator><name><name pos:line="173" pos:column="35">stats<pos:position pos:line="173" pos:column="40"/></name><operator pos:line="173" pos:column="40">.<pos:position pos:line="173" pos:column="41"/></operator><name pos:line="173" pos:column="41">tx_drop<pos:position pos:line="173" pos:column="48"/></name></name> <operator pos:line="173" pos:column="49">!=<pos:position pos:line="173" pos:column="51"/></operator> <operator pos:line="173" pos:column="52">-<pos:position pos:line="173" pos:column="53"/></operator><literal type="number" pos:line="173" pos:column="53">1<pos:position pos:line="173" pos:column="54"/></literal><operator pos:line="173" pos:column="54">)<pos:position pos:line="173" pos:column="55"/></operator></expr>)<pos:position pos:line="173" pos:column="56"/></condition><then pos:line="173" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="174" pos:column="7">submit_derive2<pos:position pos:line="174" pos:column="21"/></name><argument_list pos:line="174" pos:column="21">(<argument><expr><literal type="string" pos:line="174" pos:column="22">"if_dropped"<pos:position pos:line="174" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="174" pos:column="36">(<pos:position pos:line="174" pos:column="37"/></operator><name pos:line="174" pos:column="37">derive_t<pos:position pos:line="174" pos:column="45"/></name><operator pos:line="174" pos:column="45">)<pos:position pos:line="174" pos:column="46"/></operator><name><name pos:line="174" pos:column="46">stats<pos:position pos:line="174" pos:column="51"/></name><operator pos:line="174" pos:column="51">.<pos:position pos:line="174" pos:column="52"/></operator><name pos:line="174" pos:column="52">rx_drop<pos:position pos:line="174" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><operator pos:line="175" pos:column="22">(<pos:position pos:line="175" pos:column="23"/></operator><name pos:line="175" pos:column="23">derive_t<pos:position pos:line="175" pos:column="31"/></name><operator pos:line="175" pos:column="31">)<pos:position pos:line="175" pos:column="32"/></operator><name><name pos:line="175" pos:column="32">stats<pos:position pos:line="175" pos:column="37"/></name><operator pos:line="175" pos:column="37">.<pos:position pos:line="175" pos:column="38"/></operator><name pos:line="175" pos:column="38">tx_drop<pos:position pos:line="175" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="175" pos:column="47">interface_devices<pos:position pos:line="175" pos:column="64"/></name><index pos:line="175" pos:column="64">[<expr><name pos:line="175" pos:column="65">i<pos:position pos:line="175" pos:column="66"/></name></expr>]<pos:position pos:line="175" pos:column="67"/></index></name><operator pos:line="175" pos:column="67">.<pos:position pos:line="175" pos:column="68"/></operator><name pos:line="175" pos:column="68">dom<pos:position pos:line="175" pos:column="71"/></name></expr></argument>,
                     <argument><expr><name pos:line="176" pos:column="22">display_name<pos:position pos:line="176" pos:column="34"/></name></expr></argument>)<pos:position pos:line="176" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="36"/></expr_stmt></block></then></if>
  }<pos:position pos:line="177" pos:column="4"/></block></for> <comment type="block" pos:line="177" pos:column="5">/* for (nr_interface_devices) */</comment>

  <return pos:line="179" pos:column="3">return <expr><literal type="number" pos:line="179" pos:column="10">0<pos:position pos:line="179" pos:column="11"/></literal></expr>;<pos:position pos:line="179" pos:column="12"/></return>
}<pos:position pos:line="180" pos:column="2"/></block></function></unit>

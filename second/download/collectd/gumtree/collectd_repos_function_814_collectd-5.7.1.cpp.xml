<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_814_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">redis_init<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list> <comment type="block" pos:line="1" pos:column="29">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">redis_node_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">rn<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><block pos:line="3" pos:column="21">{<expr><operator pos:line="3" pos:column="22">.<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">name<pos:position pos:line="3" pos:column="27"/></name> <operator pos:line="3" pos:column="28">=<pos:position pos:line="3" pos:column="29"/></operator> <literal type="string" pos:line="3" pos:column="30">"default"<pos:position pos:line="3" pos:column="39"/></literal></expr>,
                     <expr><operator pos:line="4" pos:column="22">.<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">host<pos:position pos:line="4" pos:column="27"/></name> <operator pos:line="4" pos:column="28">=<pos:position pos:line="4" pos:column="29"/></operator> <name pos:line="4" pos:column="30">REDIS_DEF_HOST<pos:position pos:line="4" pos:column="44"/></name></expr>,
                     <expr><operator pos:line="5" pos:column="22">.<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">port<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">=<pos:position pos:line="5" pos:column="29"/></operator> <name pos:line="5" pos:column="30">REDIS_DEF_PORT<pos:position pos:line="5" pos:column="44"/></name></expr>,
                     <expr><operator pos:line="6" pos:column="22">.<pos:position pos:line="6" pos:column="23"/></operator><name><name pos:line="6" pos:column="23">timeout<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">.<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">tv_sec<pos:position pos:line="6" pos:column="37"/></name></name> <operator pos:line="6" pos:column="38">=<pos:position pos:line="6" pos:column="39"/></operator> <literal type="number" pos:line="6" pos:column="40">0<pos:position pos:line="6" pos:column="41"/></literal></expr>,
                     <expr><operator pos:line="7" pos:column="22">.<pos:position pos:line="7" pos:column="23"/></operator><name><name pos:line="7" pos:column="23">timeout<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">.<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">tv_usec<pos:position pos:line="7" pos:column="38"/></name></name> <operator pos:line="7" pos:column="39">=<pos:position pos:line="7" pos:column="40"/></operator> <name pos:line="7" pos:column="41">REDIS_DEF_TIMEOUT<pos:position pos:line="7" pos:column="58"/></name></expr>,
                     <expr><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">next<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr>}<pos:position pos:line="8" pos:column="35"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">nodes_head<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">==<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">redis_node_add<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><operator pos:line="11" pos:column="20">&amp;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="21">rn<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt></block></then></if>

  <return pos:line="13" pos:column="3">return <expr><operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><literal type="number" pos:line="13" pos:column="11">0<pos:position pos:line="13" pos:column="12"/></literal><operator pos:line="13" pos:column="12">)<pos:position pos:line="13" pos:column="13"/></operator></expr>;<pos:position pos:line="13" pos:column="14"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

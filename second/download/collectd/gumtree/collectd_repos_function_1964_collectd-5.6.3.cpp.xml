<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1964_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cmc_config_add_page<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">oconfig_item_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">ci<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <comment type="block" pos:line="1" pos:column="52">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">web_page_t<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">page<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name><name pos:line="6" pos:column="8">ci<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">values_num<pos:position pos:line="6" pos:column="22"/></name></name> <operator pos:line="6" pos:column="23">!=<pos:position pos:line="6" pos:column="25"/></operator> <literal type="number" pos:line="6" pos:column="26">1<pos:position pos:line="6" pos:column="27"/></literal><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator> <operator pos:line="6" pos:column="29">||<pos:position pos:line="6" pos:column="31"/></operator> <operator pos:line="6" pos:column="32">(<pos:position pos:line="6" pos:column="33"/></operator><name><name pos:line="6" pos:column="33">ci<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">values<pos:position pos:line="6" pos:column="43"/></name><index pos:line="6" pos:column="43">[<expr><literal type="number" pos:line="6" pos:column="44">0<pos:position pos:line="6" pos:column="45"/></literal></expr>]<pos:position pos:line="6" pos:column="46"/></index></name><operator pos:line="6" pos:column="46">.<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="47">type<pos:position pos:line="6" pos:column="51"/></name> <operator pos:line="6" pos:column="52">!=<pos:position pos:line="6" pos:column="54"/></operator> <name pos:line="6" pos:column="55">OCONFIG_TYPE_STRING<pos:position pos:line="6" pos:column="74"/></name><operator pos:line="6" pos:column="74">)<pos:position pos:line="6" pos:column="75"/></operator></expr>)<pos:position pos:line="6" pos:column="76"/></condition><then pos:line="6" pos:column="76"> <block pos:line="6" pos:column="77">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">WARNING<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(
        <argument><expr><literal type="string" pos:line="8" pos:column="9">"memcachec plugin: `Page' blocks need exactly one string argument."<pos:position pos:line="8" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="78"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal><operator pos:line="9" pos:column="15">)<pos:position pos:line="9" pos:column="16"/></operator></expr>;<pos:position pos:line="9" pos:column="17"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">page<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <call><name pos:line="12" pos:column="10">calloc<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><literal type="number" pos:line="12" pos:column="17">1<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="20">sizeof<argument_list pos:line="12" pos:column="26">(<argument><expr><operator pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">page<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">page<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">==<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">NULL<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20"> <block pos:line="13" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"memcachec plugin: calloc failed."<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal><operator pos:line="15" pos:column="15">)<pos:position pos:line="15" pos:column="16"/></operator></expr>;<pos:position pos:line="15" pos:column="17"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">page<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">server<pos:position pos:line="17" pos:column="15"/></name></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">NULL<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">page<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">key<pos:position pos:line="18" pos:column="12"/></name></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">NULL<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="20" pos:column="3">page<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">instance<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <call><name pos:line="20" pos:column="20">strdup<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name><name pos:line="20" pos:column="27">ci<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">values<pos:position pos:line="20" pos:column="37"/></name><index pos:line="20" pos:column="37">[<expr><literal type="number" pos:line="20" pos:column="38">0<pos:position pos:line="20" pos:column="39"/></literal></expr>]<pos:position pos:line="20" pos:column="40"/></index></name><operator pos:line="20" pos:column="40">.<pos:position pos:line="20" pos:column="41"/></operator><name><name pos:line="20" pos:column="41">value<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">.<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="47">string<pos:position pos:line="20" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name><name pos:line="21" pos:column="7">page<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">instance<pos:position pos:line="21" pos:column="21"/></name></name> <operator pos:line="21" pos:column="22">==<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">NULL<pos:position pos:line="21" pos:column="29"/></name></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30"> <block pos:line="21" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">ERROR<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><literal type="string" pos:line="22" pos:column="11">"memcachec plugin: strdup failed."<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">sfree<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><name pos:line="23" pos:column="11">page<pos:position pos:line="23" pos:column="15"/></name></expr></argument>)<pos:position pos:line="23" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">-<pos:position pos:line="24" pos:column="14"/></operator><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal><operator pos:line="24" pos:column="15">)<pos:position pos:line="24" pos:column="16"/></operator></expr>;<pos:position pos:line="24" pos:column="17"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="27" pos:column="3">/* Process all children */</comment>
  <expr_stmt><expr><name pos:line="28" pos:column="3">status<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></expr_stmt>
  <for pos:line="29" pos:column="3">for <control pos:line="29" pos:column="7">(<init><decl><type><name pos:line="29" pos:column="8">int<pos:position pos:line="29" pos:column="11"/></name></type> <name pos:line="29" pos:column="12">i<pos:position pos:line="29" pos:column="13"/></name> <init pos:line="29" pos:column="14">= <expr><literal type="number" pos:line="29" pos:column="16">0<pos:position pos:line="29" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="18"/></init> <condition><expr><name pos:line="29" pos:column="19">i<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">&lt;<pos:position pos:line="29" pos:column="25"/></operator> <name><name pos:line="29" pos:column="23">ci<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">children_num<pos:position pos:line="29" pos:column="39"/></name></name></expr>;<pos:position pos:line="29" pos:column="40"/></condition> <incr><expr><name pos:line="29" pos:column="41">i<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">++<pos:position pos:line="29" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="45"/></control> <block pos:line="29" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">oconfig_item_t<pos:position pos:line="30" pos:column="19"/></name> <modifier pos:line="30" pos:column="20">*<pos:position pos:line="30" pos:column="21"/></modifier></type><name pos:line="30" pos:column="21">child<pos:position pos:line="30" pos:column="26"/></name> <init pos:line="30" pos:column="27">= <expr><name><name pos:line="30" pos:column="29">ci<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">children<pos:position pos:line="30" pos:column="41"/></name></name> <operator pos:line="30" pos:column="42">+<pos:position pos:line="30" pos:column="43"/></operator> <name pos:line="30" pos:column="44">i<pos:position pos:line="30" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="46"/></decl_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">strcasecmp<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="string" pos:line="32" pos:column="20">"Server"<pos:position pos:line="32" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="30">child<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">key<pos:position pos:line="32" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call> <operator pos:line="32" pos:column="42">==<pos:position pos:line="32" pos:column="44"/></operator> <literal type="number" pos:line="32" pos:column="45">0<pos:position pos:line="32" pos:column="46"/></literal></expr>)<pos:position pos:line="32" pos:column="47"/></condition><then pos:line="32" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">cmc_config_add_string<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><literal type="string" pos:line="33" pos:column="38">"Server"<pos:position pos:line="33" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="48">&amp;<pos:position pos:line="33" pos:column="53"/></operator><name><name pos:line="33" pos:column="49">page<pos:position pos:line="33" pos:column="53"/></name><operator pos:line="33" pos:column="53">-&gt;<pos:position pos:line="33" pos:column="58"/></operator><name pos:line="33" pos:column="55">server<pos:position pos:line="33" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="63">child<pos:position pos:line="33" pos:column="68"/></name></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt></block></then>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><call><name pos:line="34" pos:column="14">strcasecmp<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><literal type="string" pos:line="34" pos:column="25">"Key"<pos:position pos:line="34" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="32">child<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">key<pos:position pos:line="34" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call> <operator pos:line="34" pos:column="44">==<pos:position pos:line="34" pos:column="46"/></operator> <literal type="number" pos:line="34" pos:column="47">0<pos:position pos:line="34" pos:column="48"/></literal></expr>)<pos:position pos:line="34" pos:column="49"/></condition><then pos:line="34" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">cmc_config_add_string<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><literal type="string" pos:line="35" pos:column="38">"Key"<pos:position pos:line="35" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="45">&amp;<pos:position pos:line="35" pos:column="50"/></operator><name><name pos:line="35" pos:column="46">page<pos:position pos:line="35" pos:column="50"/></name><operator pos:line="35" pos:column="50">-&gt;<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="52">key<pos:position pos:line="35" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="57">child<pos:position pos:line="35" pos:column="62"/></name></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="64"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><call><name pos:line="36" pos:column="14">strcasecmp<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><literal type="string" pos:line="36" pos:column="25">"Match"<pos:position pos:line="36" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="34">child<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">-&gt;<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="41">key<pos:position pos:line="36" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call> <operator pos:line="36" pos:column="46">==<pos:position pos:line="36" pos:column="48"/></operator> <literal type="number" pos:line="36" pos:column="49">0<pos:position pos:line="36" pos:column="50"/></literal></expr>)<pos:position pos:line="36" pos:column="51"/></condition><then pos:line="36" pos:column="51">
      <comment type="block" pos:line="37" pos:column="7">/* Be liberal with failing matches =&gt; don't set `status'. */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">cmc_config_add_match<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name pos:line="38" pos:column="28">page<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="34">child<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt></block></then></if></elseif>
    <else pos:line="39" pos:column="5">else <block pos:line="39" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">WARNING<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><literal type="string" pos:line="40" pos:column="15">"memcachec plugin: Option `%s' not allowed here."<pos:position pos:line="40" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="66">child<pos:position pos:line="40" pos:column="71"/></name><operator pos:line="40" pos:column="71">-&gt;<pos:position pos:line="40" pos:column="76"/></operator><name pos:line="40" pos:column="73">key<pos:position pos:line="40" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><name pos:line="41" pos:column="7">status<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <operator pos:line="41" pos:column="16">-<pos:position pos:line="41" pos:column="17"/></operator><literal type="number" pos:line="41" pos:column="17">1<pos:position pos:line="41" pos:column="18"/></literal></expr>;<pos:position pos:line="41" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></else></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">status<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">!=<pos:position pos:line="44" pos:column="18"/></operator> <literal type="number" pos:line="44" pos:column="19">0<pos:position pos:line="44" pos:column="20"/></literal></expr>)<pos:position pos:line="44" pos:column="21"/></condition><then pos:line="44" pos:column="21">
      <block type="pseudo"><break pos:line="45" pos:column="7">break;<pos:position pos:line="45" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="46" pos:column="4"/></block></for> <comment type="block" pos:line="46" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <comment type="block" pos:line="48" pos:column="3">/* Additionial sanity checks and libmemcached initialization. */</comment>
  <while pos:line="49" pos:column="3">while <condition pos:line="49" pos:column="9">(<expr><name pos:line="49" pos:column="10">status<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">==<pos:position pos:line="49" pos:column="19"/></operator> <literal type="number" pos:line="49" pos:column="20">0<pos:position pos:line="49" pos:column="21"/></literal></expr>)<pos:position pos:line="49" pos:column="22"/></condition> <block pos:line="49" pos:column="23">{
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">page<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">-&gt;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="15">server<pos:position pos:line="50" pos:column="21"/></name></name> <operator pos:line="50" pos:column="22">==<pos:position pos:line="50" pos:column="24"/></operator> <name pos:line="50" pos:column="25">NULL<pos:position pos:line="50" pos:column="29"/></name></expr>)<pos:position pos:line="50" pos:column="30"/></condition><then pos:line="50" pos:column="30"> <block pos:line="50" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">WARNING<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><literal type="string" pos:line="51" pos:column="15">"memcachec plugin: `Server' missing in `Page' block."<pos:position pos:line="51" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><name pos:line="52" pos:column="7">status<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <operator pos:line="52" pos:column="16">-<pos:position pos:line="52" pos:column="17"/></operator><literal type="number" pos:line="52" pos:column="17">1<pos:position pos:line="52" pos:column="18"/></literal></expr>;<pos:position pos:line="52" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">page<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">-&gt;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="15">key<pos:position pos:line="55" pos:column="18"/></name></name> <operator pos:line="55" pos:column="19">==<pos:position pos:line="55" pos:column="21"/></operator> <name pos:line="55" pos:column="22">NULL<pos:position pos:line="55" pos:column="26"/></name></expr>)<pos:position pos:line="55" pos:column="27"/></condition><then pos:line="55" pos:column="27"> <block pos:line="55" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">WARNING<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><literal type="string" pos:line="56" pos:column="15">"memcachec plugin: `Key' missing in `Page' block."<pos:position pos:line="56" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name pos:line="57" pos:column="7">status<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">=<pos:position pos:line="57" pos:column="15"/></operator> <operator pos:line="57" pos:column="16">-<pos:position pos:line="57" pos:column="17"/></operator><literal type="number" pos:line="57" pos:column="17">1<pos:position pos:line="57" pos:column="18"/></literal></expr>;<pos:position pos:line="57" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name><name pos:line="60" pos:column="9">page<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">-&gt;<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="15">matches<pos:position pos:line="60" pos:column="22"/></name></name> <operator pos:line="60" pos:column="23">==<pos:position pos:line="60" pos:column="25"/></operator> <name pos:line="60" pos:column="26">NULL<pos:position pos:line="60" pos:column="30"/></name></expr>)<pos:position pos:line="60" pos:column="31"/></condition><then pos:line="60" pos:column="31"> <block pos:line="60" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">assert<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><name><name pos:line="61" pos:column="14">page<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">-&gt;<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="20">instance<pos:position pos:line="61" pos:column="28"/></name></name> <operator pos:line="61" pos:column="29">!=<pos:position pos:line="61" pos:column="31"/></operator> <name pos:line="61" pos:column="32">NULL<pos:position pos:line="61" pos:column="36"/></name></expr></argument>)<pos:position pos:line="61" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">WARNING<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><literal type="string" pos:line="62" pos:column="15">"memcachec plugin: No (valid) `Match' block "<pos:position pos:line="62" pos:column="60"/></literal>
              <literal type="string" pos:line="63" pos:column="15">"within `Page' block `%s'."<pos:position pos:line="63" pos:column="42"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="64" pos:column="15">page<pos:position pos:line="64" pos:column="19"/></name><operator pos:line="64" pos:column="19">-&gt;<pos:position pos:line="64" pos:column="24"/></operator><name pos:line="64" pos:column="21">instance<pos:position pos:line="64" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="65" pos:column="7">status<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <operator pos:line="65" pos:column="16">-<pos:position pos:line="65" pos:column="17"/></operator><literal type="number" pos:line="65" pos:column="17">1<pos:position pos:line="65" pos:column="18"/></literal></expr>;<pos:position pos:line="65" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name pos:line="68" pos:column="9">status<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">==<pos:position pos:line="68" pos:column="18"/></operator> <literal type="number" pos:line="68" pos:column="19">0<pos:position pos:line="68" pos:column="20"/></literal></expr>)<pos:position pos:line="68" pos:column="21"/></condition><then pos:line="68" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="7">status<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">=<pos:position pos:line="69" pos:column="15"/></operator> <call><name pos:line="69" pos:column="16">cmc_page_init_memc<pos:position pos:line="69" pos:column="34"/></name><argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">page<pos:position pos:line="69" pos:column="39"/></name></expr></argument>)<pos:position pos:line="69" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="41"/></expr_stmt></block></then></if>

    <break pos:line="71" pos:column="5">break;<pos:position pos:line="71" pos:column="11"/></break>
  }<pos:position pos:line="72" pos:column="4"/></block></while> <comment type="block" pos:line="72" pos:column="5">/* while (status == 0) */</comment>

  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><name pos:line="74" pos:column="7">status<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">!=<pos:position pos:line="74" pos:column="16"/></operator> <literal type="number" pos:line="74" pos:column="17">0<pos:position pos:line="74" pos:column="18"/></literal></expr>)<pos:position pos:line="74" pos:column="19"/></condition><then pos:line="74" pos:column="19"> <block pos:line="74" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">cmc_web_page_free<pos:position pos:line="75" pos:column="22"/></name><argument_list pos:line="75" pos:column="22">(<argument><expr><name pos:line="75" pos:column="23">page<pos:position pos:line="75" pos:column="27"/></name></expr></argument>)<pos:position pos:line="75" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="29"/></expr_stmt>
    <return pos:line="76" pos:column="5">return <expr><operator pos:line="76" pos:column="12">(<pos:position pos:line="76" pos:column="13"/></operator><name pos:line="76" pos:column="13">status<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">)<pos:position pos:line="76" pos:column="20"/></operator></expr>;<pos:position pos:line="76" pos:column="21"/></return>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="79" pos:column="3">/* Add the new page to the linked list */</comment>
  <if pos:line="80" pos:column="3">if <condition pos:line="80" pos:column="6">(<expr><name pos:line="80" pos:column="7">pages_g<pos:position pos:line="80" pos:column="14"/></name> <operator pos:line="80" pos:column="15">==<pos:position pos:line="80" pos:column="17"/></operator> <name pos:line="80" pos:column="18">NULL<pos:position pos:line="80" pos:column="22"/></name></expr>)<pos:position pos:line="80" pos:column="23"/></condition><then pos:line="80" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="5">pages_g<pos:position pos:line="81" pos:column="12"/></name> <operator pos:line="81" pos:column="13">=<pos:position pos:line="81" pos:column="14"/></operator> <name pos:line="81" pos:column="15">page<pos:position pos:line="81" pos:column="19"/></name></expr>;<pos:position pos:line="81" pos:column="20"/></expr_stmt></block></then>
  <else pos:line="82" pos:column="3">else <block pos:line="82" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="83" pos:column="5">web_page_t<pos:position pos:line="83" pos:column="15"/></name> <modifier pos:line="83" pos:column="16">*<pos:position pos:line="83" pos:column="17"/></modifier></type><name pos:line="83" pos:column="17">prev<pos:position pos:line="83" pos:column="21"/></name></decl>;<pos:position pos:line="83" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name pos:line="85" pos:column="5">prev<pos:position pos:line="85" pos:column="9"/></name> <operator pos:line="85" pos:column="10">=<pos:position pos:line="85" pos:column="11"/></operator> <name pos:line="85" pos:column="12">pages_g<pos:position pos:line="85" pos:column="19"/></name></expr>;<pos:position pos:line="85" pos:column="20"/></expr_stmt>
    <while pos:line="86" pos:column="5">while <condition pos:line="86" pos:column="11">(<expr><name><name pos:line="86" pos:column="12">prev<pos:position pos:line="86" pos:column="16"/></name><operator pos:line="86" pos:column="16">-&gt;<pos:position pos:line="86" pos:column="21"/></operator><name pos:line="86" pos:column="18">next<pos:position pos:line="86" pos:column="22"/></name></name> <operator pos:line="86" pos:column="23">!=<pos:position pos:line="86" pos:column="25"/></operator> <name pos:line="86" pos:column="26">NULL<pos:position pos:line="86" pos:column="30"/></name></expr>)<pos:position pos:line="86" pos:column="31"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="7">prev<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <name><name pos:line="87" pos:column="14">prev<pos:position pos:line="87" pos:column="18"/></name><operator pos:line="87" pos:column="18">-&gt;<pos:position pos:line="87" pos:column="23"/></operator><name pos:line="87" pos:column="20">next<pos:position pos:line="87" pos:column="24"/></name></name></expr>;<pos:position pos:line="87" pos:column="25"/></expr_stmt></block></while>
    <expr_stmt><expr><name><name pos:line="88" pos:column="5">prev<pos:position pos:line="88" pos:column="9"/></name><operator pos:line="88" pos:column="9">-&gt;<pos:position pos:line="88" pos:column="14"/></operator><name pos:line="88" pos:column="11">next<pos:position pos:line="88" pos:column="15"/></name></name> <operator pos:line="88" pos:column="16">=<pos:position pos:line="88" pos:column="17"/></operator> <name pos:line="88" pos:column="18">page<pos:position pos:line="88" pos:column="22"/></name></expr>;<pos:position pos:line="88" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="89" pos:column="4"/></block></else></if>

  <return pos:line="91" pos:column="3">return <expr><operator pos:line="91" pos:column="10">(<pos:position pos:line="91" pos:column="11"/></operator><literal type="number" pos:line="91" pos:column="11">0<pos:position pos:line="91" pos:column="12"/></literal><operator pos:line="91" pos:column="12">)<pos:position pos:line="91" pos:column="13"/></operator></expr>;<pos:position pos:line="91" pos:column="14"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_409_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">disk_init<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <block pos:line="1" pos:column="28">{
<cpp:if pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">if<pos:position pos:line="2" pos:column="4"/></cpp:directive> <expr><name pos:line="2" pos:column="5">HAVE_IOKIT_IOKITLIB_H<pos:position pos:line="2" pos:column="26"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">kern_return_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">status<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">io_master_port<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">!=<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="25">MACH_PORT_NULL<pos:position pos:line="5" pos:column="39"/></name></expr>)<pos:position pos:line="5" pos:column="40"/></condition><then pos:line="5" pos:column="40"> <block pos:line="5" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">mach_port_deallocate<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><call><name pos:line="6" pos:column="26">mach_task_self<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">()<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="44">io_master_port<pos:position pos:line="6" pos:column="58"/></name></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">io_master_port<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">MACH_PORT_NULL<pos:position pos:line="7" pos:column="36"/></name></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">status<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">IOMasterPort<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">MACH_PORT_NULL<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="41">&amp;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="42">io_master_port<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">status<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">!=<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">kIOReturnSuccess<pos:position pos:line="11" pos:column="33"/></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <block pos:line="11" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"IOMasterPort failed: %s"<pos:position pos:line="12" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="38">mach_error_string<pos:position pos:line="12" pos:column="55"/></name><argument_list pos:line="12" pos:column="55">(<argument><expr><name pos:line="12" pos:column="56">status<pos:position pos:line="12" pos:column="62"/></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">io_master_port<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">MACH_PORT_NULL<pos:position pos:line="13" pos:column="36"/></name></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
<comment type="block" pos:line="16" pos:column="1">/* #endif HAVE_IOKIT_IOKITLIB_H */</comment>

<cpp:elif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">elif<pos:position pos:line="18" pos:column="6"/></cpp:directive> <expr><name pos:line="18" pos:column="7">KERNEL_LINUX<pos:position pos:line="18" pos:column="19"/></name></expr></cpp:elif>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">HAVE_LIBUDEV<pos:position pos:line="19" pos:column="17"/></name></expr></cpp:if>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">conf_udev_name_attr<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">!=<pos:position pos:line="20" pos:column="29"/></operator> <name pos:line="20" pos:column="30">NULL<pos:position pos:line="20" pos:column="34"/></name></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35"> <block pos:line="20" pos:column="36">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">handle_udev<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">udev_new<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">()<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">handle_udev<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">==<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr>)<pos:position pos:line="22" pos:column="29"/></condition><then pos:line="22" pos:column="29"> <block pos:line="22" pos:column="30">{
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">ERROR<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><literal type="string" pos:line="23" pos:column="13">"disk plugin: udev_new() failed!"<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><operator pos:line="24" pos:column="14">(<pos:position pos:line="24" pos:column="15"/></operator><operator pos:line="24" pos:column="15">-<pos:position pos:line="24" pos:column="16"/></operator><literal type="number" pos:line="24" pos:column="16">1<pos:position pos:line="24" pos:column="17"/></literal><operator pos:line="24" pos:column="17">)<pos:position pos:line="24" pos:column="18"/></operator></expr>;<pos:position pos:line="24" pos:column="19"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="27" pos:column="8">/* HAVE_LIBUDEV */</comment>
<comment type="block" pos:line="28" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">elif<pos:position pos:line="30" pos:column="6"/></cpp:directive> <expr><name pos:line="30" pos:column="7">KERNEL_FREEBSD<pos:position pos:line="30" pos:column="21"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="31" pos:column="3">int<pos:position pos:line="31" pos:column="6"/></name></type> <name pos:line="31" pos:column="7">rv<pos:position pos:line="31" pos:column="9"/></name></decl>;<pos:position pos:line="31" pos:column="10"/></decl_stmt>

  <expr_stmt><expr><name pos:line="33" pos:column="3">rv<pos:position pos:line="33" pos:column="5"/></name> <operator pos:line="33" pos:column="6">=<pos:position pos:line="33" pos:column="7"/></operator> <call><name pos:line="33" pos:column="8">geom_gettree<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><operator pos:line="33" pos:column="21">&amp;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="22">geom_tree<pos:position pos:line="33" pos:column="31"/></name></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">rv<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">!=<pos:position pos:line="34" pos:column="12"/></operator> <literal type="number" pos:line="34" pos:column="13">0<pos:position pos:line="34" pos:column="14"/></literal></expr>)<pos:position pos:line="34" pos:column="15"/></condition><then pos:line="34" pos:column="15"> <block pos:line="34" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">ERROR<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><literal type="string" pos:line="35" pos:column="11">"geom_gettree() failed, returned %d"<pos:position pos:line="35" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">rv<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><operator pos:line="36" pos:column="13">-<pos:position pos:line="36" pos:column="14"/></operator><literal type="number" pos:line="36" pos:column="14">1<pos:position pos:line="36" pos:column="15"/></literal><operator pos:line="36" pos:column="15">)<pos:position pos:line="36" pos:column="16"/></operator></expr>;<pos:position pos:line="36" pos:column="17"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="38" pos:column="3">rv<pos:position pos:line="38" pos:column="5"/></name> <operator pos:line="38" pos:column="6">=<pos:position pos:line="38" pos:column="7"/></operator> <call><name pos:line="38" pos:column="8">geom_stats_open<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">()<pos:position pos:line="38" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">rv<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">!=<pos:position pos:line="39" pos:column="12"/></operator> <literal type="number" pos:line="39" pos:column="13">0<pos:position pos:line="39" pos:column="14"/></literal></expr>)<pos:position pos:line="39" pos:column="15"/></condition><then pos:line="39" pos:column="15"> <block pos:line="39" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ERROR<pos:position pos:line="40" pos:column="10"/></name><argument_list pos:line="40" pos:column="10">(<argument><expr><literal type="string" pos:line="40" pos:column="11">"geom_stats_open() failed, returned %d"<pos:position pos:line="40" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">rv<pos:position pos:line="40" pos:column="54"/></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><operator pos:line="41" pos:column="13">-<pos:position pos:line="41" pos:column="14"/></operator><literal type="number" pos:line="41" pos:column="14">1<pos:position pos:line="41" pos:column="15"/></literal><operator pos:line="41" pos:column="15">)<pos:position pos:line="41" pos:column="16"/></operator></expr>;<pos:position pos:line="41" pos:column="17"/></return>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>
<comment type="block" pos:line="43" pos:column="1">/* #endif KERNEL_FREEBSD */</comment>

<cpp:elif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">elif<pos:position pos:line="45" pos:column="6"/></cpp:directive> <expr><name pos:line="45" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="45" pos:column="20"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="46" pos:column="3">kstat_t<pos:position pos:line="46" pos:column="10"/></name> <modifier pos:line="46" pos:column="11">*<pos:position pos:line="46" pos:column="12"/></modifier></type><name pos:line="46" pos:column="12">ksp_chain<pos:position pos:line="46" pos:column="21"/></name></decl>;<pos:position pos:line="46" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="48" pos:column="3">numdisk<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <literal type="number" pos:line="48" pos:column="13">0<pos:position pos:line="48" pos:column="14"/></literal></expr>;<pos:position pos:line="48" pos:column="15"/></expr_stmt>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">kc<pos:position pos:line="50" pos:column="9"/></name> <operator pos:line="50" pos:column="10">==<pos:position pos:line="50" pos:column="12"/></operator> <name pos:line="50" pos:column="13">NULL<pos:position pos:line="50" pos:column="17"/></name></expr>)<pos:position pos:line="50" pos:column="18"/></condition><then pos:line="50" pos:column="18">
    <block type="pseudo"><return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><operator pos:line="51" pos:column="13">-<pos:position pos:line="51" pos:column="14"/></operator><literal type="number" pos:line="51" pos:column="14">1<pos:position pos:line="51" pos:column="15"/></literal><operator pos:line="51" pos:column="15">)<pos:position pos:line="51" pos:column="16"/></operator></expr>;<pos:position pos:line="51" pos:column="17"/></return></block></then></if>

  <for pos:line="53" pos:column="3">for <control pos:line="53" pos:column="7">(<init><expr><name pos:line="53" pos:column="8">numdisk<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <literal type="number" pos:line="53" pos:column="18">0<pos:position pos:line="53" pos:column="19"/></literal></expr><operator pos:line="53" pos:column="19">,<pos:position pos:line="53" pos:column="20"/></operator> <expr><name pos:line="53" pos:column="21">ksp_chain<pos:position pos:line="53" pos:column="30"/></name> <operator pos:line="53" pos:column="31">=<pos:position pos:line="53" pos:column="32"/></operator> <name><name pos:line="53" pos:column="33">kc<pos:position pos:line="53" pos:column="35"/></name><operator pos:line="53" pos:column="35">-&gt;<pos:position pos:line="53" pos:column="40"/></operator><name pos:line="53" pos:column="37">kc_chain<pos:position pos:line="53" pos:column="45"/></name></name></expr>;<pos:position pos:line="53" pos:column="46"/></init>
       <condition><expr><operator pos:line="54" pos:column="8">(<pos:position pos:line="54" pos:column="9"/></operator><name pos:line="54" pos:column="9">numdisk<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">&lt;<pos:position pos:line="54" pos:column="21"/></operator> <name pos:line="54" pos:column="19">MAX_NUMDISK<pos:position pos:line="54" pos:column="30"/></name><operator pos:line="54" pos:column="30">)<pos:position pos:line="54" pos:column="31"/></operator> <operator pos:line="54" pos:column="32">&amp;&amp;<pos:position pos:line="54" pos:column="42"/></operator> <operator pos:line="54" pos:column="35">(<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="36">ksp_chain<pos:position pos:line="54" pos:column="45"/></name> <operator pos:line="54" pos:column="46">!=<pos:position pos:line="54" pos:column="48"/></operator> <name pos:line="54" pos:column="49">NULL<pos:position pos:line="54" pos:column="53"/></name><operator pos:line="54" pos:column="53">)<pos:position pos:line="54" pos:column="54"/></operator></expr>;<pos:position pos:line="54" pos:column="55"/></condition>
       <incr><expr><name pos:line="55" pos:column="8">ksp_chain<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <name><name pos:line="55" pos:column="20">ksp_chain<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">-&gt;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="31">ks_next<pos:position pos:line="55" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="55" pos:column="39"/></control> <block pos:line="55" pos:column="40">{
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name pos:line="56" pos:column="9">strncmp<pos:position pos:line="56" pos:column="16"/></name><argument_list pos:line="56" pos:column="16">(<argument><expr><name><name pos:line="56" pos:column="17">ksp_chain<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">-&gt;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="28">ks_class<pos:position pos:line="56" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="38">"disk"<pos:position pos:line="56" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="46">4<pos:position pos:line="56" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call> <operator pos:line="56" pos:column="49">&amp;&amp;<pos:position pos:line="56" pos:column="59"/></operator>
        <call><name pos:line="57" pos:column="9">strncmp<pos:position pos:line="57" pos:column="16"/></name><argument_list pos:line="57" pos:column="16">(<argument><expr><name><name pos:line="57" pos:column="17">ksp_chain<pos:position pos:line="57" pos:column="26"/></name><operator pos:line="57" pos:column="26">-&gt;<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="28">ks_class<pos:position pos:line="57" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="38">"partition"<pos:position pos:line="57" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="51">9<pos:position pos:line="57" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="54"/></condition><then pos:line="57" pos:column="54">
      <block type="pseudo"><continue pos:line="58" pos:column="7">continue;<pos:position pos:line="58" pos:column="16"/></continue></block></then></if>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name><name pos:line="59" pos:column="9">ksp_chain<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">-&gt;<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="20">ks_type<pos:position pos:line="59" pos:column="27"/></name></name> <operator pos:line="59" pos:column="28">!=<pos:position pos:line="59" pos:column="30"/></operator> <name pos:line="59" pos:column="31">KSTAT_TYPE_IO<pos:position pos:line="59" pos:column="44"/></name></expr>)<pos:position pos:line="59" pos:column="45"/></condition><then pos:line="59" pos:column="45">
      <block type="pseudo"><continue pos:line="60" pos:column="7">continue;<pos:position pos:line="60" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">ksp<pos:position pos:line="61" pos:column="8"/></name><index pos:line="61" pos:column="8">[<expr><name pos:line="61" pos:column="9">numdisk<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">++<pos:position pos:line="61" pos:column="18"/></operator></expr>]<pos:position pos:line="61" pos:column="19"/></index></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <name pos:line="61" pos:column="22">ksp_chain<pos:position pos:line="61" pos:column="31"/></name></expr>;<pos:position pos:line="61" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></for>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="63" pos:column="8">/* HAVE_LIBKSTAT */</comment>

  <return pos:line="65" pos:column="3">return <expr><operator pos:line="65" pos:column="10">(<pos:position pos:line="65" pos:column="11"/></operator><literal type="number" pos:line="65" pos:column="11">0<pos:position pos:line="65" pos:column="12"/></literal><operator pos:line="65" pos:column="12">)<pos:position pos:line="65" pos:column="13"/></operator></expr>;<pos:position pos:line="65" pos:column="14"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

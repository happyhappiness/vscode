<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_40_collectd-4.3.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">sys_dyld_init<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">()<pos:position pos:line="2" pos:column="16"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">retCode<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">err<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">_dyld_present<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">()<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="30"/></condition><then pos:line="6" pos:column="30"> <block pos:line="6" pos:column="31">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">retCode<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></then>
	<else pos:line="9" pos:column="9">else <block pos:line="9" pos:column="14">{
      <expr_stmt><expr><name pos:line="10" pos:column="7">err<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">_dyld_func_lookup<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><literal type="string" pos:line="10" pos:column="31">"__dyld_NSAddImage"<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>,<argument><expr><operator pos:line="10" pos:column="51">(<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="52">unsigned<pos:position pos:line="10" pos:column="60"/></name> <name pos:line="10" pos:column="61">long<pos:position pos:line="10" pos:column="65"/></name><operator pos:line="10" pos:column="65">*<pos:position pos:line="10" pos:column="66"/></operator><operator pos:line="10" pos:column="66">)<pos:position pos:line="10" pos:column="67"/></operator><operator pos:line="10" pos:column="67">&amp;<pos:position pos:line="10" pos:column="72"/></operator><name pos:line="10" pos:column="68">ltdl_NSAddImage<pos:position pos:line="10" pos:column="83"/></name></expr></argument>)<pos:position pos:line="10" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="85"/></expr_stmt>
      <expr_stmt><expr><name pos:line="11" pos:column="7">err<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <call><name pos:line="11" pos:column="13">_dyld_func_lookup<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><literal type="string" pos:line="11" pos:column="31">"__dyld_NSLookupSymbolInImage"<pos:position pos:line="11" pos:column="61"/></literal></expr></argument>,<argument><expr><operator pos:line="11" pos:column="62">(<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="63">unsigned<pos:position pos:line="11" pos:column="71"/></name> <name pos:line="11" pos:column="72">long<pos:position pos:line="11" pos:column="76"/></name><operator pos:line="11" pos:column="76">*<pos:position pos:line="11" pos:column="77"/></operator><operator pos:line="11" pos:column="77">)<pos:position pos:line="11" pos:column="78"/></operator><operator pos:line="11" pos:column="78">&amp;<pos:position pos:line="11" pos:column="83"/></operator><name pos:line="11" pos:column="79">ltdl_NSLookupSymbolInImage<pos:position pos:line="11" pos:column="105"/></name></expr></argument>)<pos:position pos:line="11" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="107"/></expr_stmt>
      <expr_stmt><expr><name pos:line="12" pos:column="7">err<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">_dyld_func_lookup<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><literal type="string" pos:line="12" pos:column="31">"__dyld_NSIsSymbolNameDefinedInImage"<pos:position pos:line="12" pos:column="68"/></literal></expr></argument>,<argument><expr><operator pos:line="12" pos:column="69">(<pos:position pos:line="12" pos:column="70"/></operator><name pos:line="12" pos:column="70">unsigned<pos:position pos:line="12" pos:column="78"/></name> <name pos:line="12" pos:column="79">long<pos:position pos:line="12" pos:column="83"/></name><operator pos:line="12" pos:column="83">*<pos:position pos:line="12" pos:column="84"/></operator><operator pos:line="12" pos:column="84">)<pos:position pos:line="12" pos:column="85"/></operator><operator pos:line="12" pos:column="85">&amp;<pos:position pos:line="12" pos:column="90"/></operator><name pos:line="12" pos:column="86">ltdl_NSIsSymbolNameDefinedInImage<pos:position pos:line="12" pos:column="119"/></name></expr></argument>)<pos:position pos:line="12" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="121"/></expr_stmt>
      <expr_stmt><expr><name pos:line="13" pos:column="7">err<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">_dyld_func_lookup<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><literal type="string" pos:line="13" pos:column="31">"__dyld_NSMakePrivateModulePublic"<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>,<argument><expr><operator pos:line="13" pos:column="66">(<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="67">unsigned<pos:position pos:line="13" pos:column="75"/></name> <name pos:line="13" pos:column="76">long<pos:position pos:line="13" pos:column="80"/></name><operator pos:line="13" pos:column="80">*<pos:position pos:line="13" pos:column="81"/></operator><operator pos:line="13" pos:column="81">)<pos:position pos:line="13" pos:column="82"/></operator><operator pos:line="13" pos:column="82">&amp;<pos:position pos:line="13" pos:column="87"/></operator><name pos:line="13" pos:column="83">ltdl_NSMakePrivateModulePublic<pos:position pos:line="13" pos:column="113"/></name></expr></argument>)<pos:position pos:line="13" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="115"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></else></if>
 <return pos:line="15" pos:column="2">return <expr><name pos:line="15" pos:column="9">retCode<pos:position pos:line="15" pos:column="16"/></name></expr>;<pos:position pos:line="15" pos:column="17"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1701_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cj_config_add_key<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">cj_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">db<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="41">/* {{{ */</comment>
                                   <parameter><decl><type><name pos:line="2" pos:column="36">oconfig_item_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">ci<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cj_key_t<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">key<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name><name pos:line="8" pos:column="8">ci<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">values_num<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">!=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="26">1<pos:position pos:line="8" pos:column="27"/></literal><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator>
      <operator pos:line="9" pos:column="7">||<pos:position pos:line="9" pos:column="9"/></operator> <operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name><name pos:line="9" pos:column="11">ci<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">values<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr>]<pos:position pos:line="9" pos:column="24"/></index></name><operator pos:line="9" pos:column="24">.<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">type<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">!=<pos:position pos:line="9" pos:column="32"/></operator> <name pos:line="9" pos:column="33">OCONFIG_TYPE_STRING<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">)<pos:position pos:line="9" pos:column="53"/></operator></expr>)<pos:position pos:line="9" pos:column="54"/></condition><then pos:line="9" pos:column="54">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">WARNING<pos:position pos:line="11" pos:column="12"/></name> <argument_list pos:line="11" pos:column="13">(<argument><expr><literal type="string" pos:line="11" pos:column="14">"curl_json plugin: The `Key' block "<pos:position pos:line="11" pos:column="50"/></literal>
             <literal type="string" pos:line="12" pos:column="14">"needs exactly one string argument."<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">key<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">cj_key_t<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">*<pos:position pos:line="16" pos:column="20"/></operator><operator pos:line="16" pos:column="20">)<pos:position pos:line="16" pos:column="21"/></operator> <call><name pos:line="16" pos:column="22">malloc<pos:position pos:line="16" pos:column="28"/></name> <argument_list pos:line="16" pos:column="29">(<argument><expr><sizeof pos:line="16" pos:column="30">sizeof <argument_list pos:line="16" pos:column="37">(<argument><expr><operator pos:line="16" pos:column="38">*<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">key<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">key<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">==<pos:position pos:line="17" pos:column="13"/></operator> <name pos:line="17" pos:column="14">NULL<pos:position pos:line="17" pos:column="18"/></name></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ERROR<pos:position pos:line="19" pos:column="10"/></name> <argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="string" pos:line="19" pos:column="12">"curl_json plugin: malloc failed."<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">-<pos:position pos:line="20" pos:column="14"/></operator><literal type="number" pos:line="20" pos:column="14">1<pos:position pos:line="20" pos:column="15"/></literal><operator pos:line="20" pos:column="15">)<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">memset<pos:position pos:line="22" pos:column="9"/></name> <argument_list pos:line="22" pos:column="10">(<argument><expr><name pos:line="22" pos:column="11">key<pos:position pos:line="22" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="19">sizeof <argument_list pos:line="22" pos:column="26">(<argument><expr><operator pos:line="22" pos:column="27">*<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">key<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">key<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">magic<pos:position pos:line="23" pos:column="13"/></name></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">CJ_KEY_MAGIC<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><call><name pos:line="25" pos:column="7">strcasecmp<pos:position pos:line="25" pos:column="17"/></name> <argument_list pos:line="25" pos:column="18">(<argument><expr><literal type="string" pos:line="25" pos:column="19">"Key"<pos:position pos:line="25" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="26">ci<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">key<pos:position pos:line="25" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call> <operator pos:line="25" pos:column="35">==<pos:position pos:line="25" pos:column="37"/></operator> <literal type="number" pos:line="25" pos:column="38">0<pos:position pos:line="25" pos:column="39"/></literal></expr>)<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><name pos:line="27" pos:column="5">status<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">cj_config_add_string<pos:position pos:line="27" pos:column="34"/></name> <argument_list pos:line="27" pos:column="35">(<argument><expr><literal type="string" pos:line="27" pos:column="36">"Key"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="43">&amp;<pos:position pos:line="27" pos:column="48"/></operator><name><name pos:line="27" pos:column="44">key<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">path<pos:position pos:line="27" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="55">ci<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">status<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">!=<pos:position pos:line="28" pos:column="18"/></operator> <literal type="number" pos:line="28" pos:column="19">0<pos:position pos:line="28" pos:column="20"/></literal></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21">
    <block pos:line="29" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">sfree<pos:position pos:line="30" pos:column="12"/></name> <argument_list pos:line="30" pos:column="13">(<argument><expr><name pos:line="30" pos:column="14">key<pos:position pos:line="30" pos:column="17"/></name></expr></argument>)<pos:position pos:line="30" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>
      <return pos:line="31" pos:column="7">return <expr><operator pos:line="31" pos:column="14">(<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">status<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">)<pos:position pos:line="31" pos:column="22"/></operator></expr>;<pos:position pos:line="31" pos:column="23"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
  }<pos:position pos:line="33" pos:column="4"/></block></then>
  <else pos:line="34" pos:column="3">else
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">ERROR<pos:position pos:line="36" pos:column="10"/></name> <argument_list pos:line="36" pos:column="11">(<argument><expr><literal type="string" pos:line="36" pos:column="12">"curl_json plugin: cj_config: "<pos:position pos:line="36" pos:column="43"/></literal>
           <literal type="string" pos:line="37" pos:column="12">"Invalid key: %s"<pos:position pos:line="37" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="31">ci<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">-&gt;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="35">key<pos:position pos:line="37" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><operator pos:line="38" pos:column="13">-<pos:position pos:line="38" pos:column="14"/></operator><literal type="number" pos:line="38" pos:column="14">1<pos:position pos:line="38" pos:column="15"/></literal><operator pos:line="38" pos:column="15">)<pos:position pos:line="38" pos:column="16"/></operator></expr>;<pos:position pos:line="38" pos:column="17"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="41" pos:column="3">status<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <literal type="number" pos:line="41" pos:column="12">0<pos:position pos:line="41" pos:column="13"/></literal></expr>;<pos:position pos:line="41" pos:column="14"/></expr_stmt>
  <for pos:line="42" pos:column="3">for <control pos:line="42" pos:column="7">(<init><expr><name pos:line="42" pos:column="8">i<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <literal type="number" pos:line="42" pos:column="12">0<pos:position pos:line="42" pos:column="13"/></literal></expr>;<pos:position pos:line="42" pos:column="14"/></init> <condition><expr><name pos:line="42" pos:column="15">i<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">&lt;<pos:position pos:line="42" pos:column="21"/></operator> <name><name pos:line="42" pos:column="19">ci<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">children_num<pos:position pos:line="42" pos:column="35"/></name></name></expr>;<pos:position pos:line="42" pos:column="36"/></condition> <incr><expr><name pos:line="42" pos:column="37">i<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">++<pos:position pos:line="42" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="41"/></control>
  <block pos:line="43" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">oconfig_item_t<pos:position pos:line="44" pos:column="19"/></name> <modifier pos:line="44" pos:column="20">*<pos:position pos:line="44" pos:column="21"/></modifier></type><name pos:line="44" pos:column="21">child<pos:position pos:line="44" pos:column="26"/></name> <init pos:line="44" pos:column="27">= <expr><name><name pos:line="44" pos:column="29">ci<pos:position pos:line="44" pos:column="31"/></name><operator pos:line="44" pos:column="31">-&gt;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="33">children<pos:position pos:line="44" pos:column="41"/></name></name> <operator pos:line="44" pos:column="42">+<pos:position pos:line="44" pos:column="43"/></operator> <name pos:line="44" pos:column="44">i<pos:position pos:line="44" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="44" pos:column="46"/></decl_stmt>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">strcasecmp<pos:position pos:line="46" pos:column="19"/></name> <argument_list pos:line="46" pos:column="20">(<argument><expr><literal type="string" pos:line="46" pos:column="21">"Type"<pos:position pos:line="46" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="29">child<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">-&gt;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="36">key<pos:position pos:line="46" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call> <operator pos:line="46" pos:column="41">==<pos:position pos:line="46" pos:column="43"/></operator> <literal type="number" pos:line="46" pos:column="44">0<pos:position pos:line="46" pos:column="45"/></literal></expr>)<pos:position pos:line="46" pos:column="46"/></condition><then pos:line="46" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="7">status<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <call><name pos:line="47" pos:column="16">cj_config_add_string<pos:position pos:line="47" pos:column="36"/></name> <argument_list pos:line="47" pos:column="37">(<argument><expr><literal type="string" pos:line="47" pos:column="38">"Type"<pos:position pos:line="47" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="46">&amp;<pos:position pos:line="47" pos:column="51"/></operator><name><name pos:line="47" pos:column="47">key<pos:position pos:line="47" pos:column="50"/></name><operator pos:line="47" pos:column="50">-&gt;<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="52">type<pos:position pos:line="47" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="58">child<pos:position pos:line="47" pos:column="63"/></name></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="65"/></expr_stmt></block></then>
    <elseif pos:line="48" pos:column="5">else <if pos:line="48" pos:column="10">if <condition pos:line="48" pos:column="13">(<expr><call><name pos:line="48" pos:column="14">strcasecmp<pos:position pos:line="48" pos:column="24"/></name> <argument_list pos:line="48" pos:column="25">(<argument><expr><literal type="string" pos:line="48" pos:column="26">"Instance"<pos:position pos:line="48" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="38">child<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">-&gt;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="45">key<pos:position pos:line="48" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call> <operator pos:line="48" pos:column="50">==<pos:position pos:line="48" pos:column="52"/></operator> <literal type="number" pos:line="48" pos:column="53">0<pos:position pos:line="48" pos:column="54"/></literal></expr>)<pos:position pos:line="48" pos:column="55"/></condition><then pos:line="48" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">status<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <call><name pos:line="49" pos:column="16">cj_config_add_string<pos:position pos:line="49" pos:column="36"/></name> <argument_list pos:line="49" pos:column="37">(<argument><expr><literal type="string" pos:line="49" pos:column="38">"Instance"<pos:position pos:line="49" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="50">&amp;<pos:position pos:line="49" pos:column="55"/></operator><name><name pos:line="49" pos:column="51">key<pos:position pos:line="49" pos:column="54"/></name><operator pos:line="49" pos:column="54">-&gt;<pos:position pos:line="49" pos:column="59"/></operator><name pos:line="49" pos:column="56">instance<pos:position pos:line="49" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="66">child<pos:position pos:line="49" pos:column="71"/></name></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="73"/></expr_stmt></block></then></if></elseif>
    <else pos:line="50" pos:column="5">else
    <block pos:line="51" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">WARNING<pos:position pos:line="52" pos:column="14"/></name> <argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="string" pos:line="52" pos:column="16">"curl_json plugin: Option `%s' not allowed here."<pos:position pos:line="52" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="67">child<pos:position pos:line="52" pos:column="72"/></name><operator pos:line="52" pos:column="72">-&gt;<pos:position pos:line="52" pos:column="77"/></operator><name pos:line="52" pos:column="74">key<pos:position pos:line="52" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><name pos:line="53" pos:column="7">status<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <operator pos:line="53" pos:column="16">-<pos:position pos:line="53" pos:column="17"/></operator><literal type="number" pos:line="53" pos:column="17">1<pos:position pos:line="53" pos:column="18"/></literal></expr>;<pos:position pos:line="53" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></else></if>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">status<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">!=<pos:position pos:line="56" pos:column="18"/></operator> <literal type="number" pos:line="56" pos:column="19">0<pos:position pos:line="56" pos:column="20"/></literal></expr>)<pos:position pos:line="56" pos:column="21"/></condition><then pos:line="56" pos:column="21">
      <block type="pseudo"><break pos:line="57" pos:column="7">break;<pos:position pos:line="57" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="58" pos:column="4"/></block></for> <comment type="block" pos:line="58" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <while pos:line="60" pos:column="3">while <condition pos:line="60" pos:column="9">(<expr><name pos:line="60" pos:column="10">status<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">==<pos:position pos:line="60" pos:column="19"/></operator> <literal type="number" pos:line="60" pos:column="20">0<pos:position pos:line="60" pos:column="21"/></literal></expr>)<pos:position pos:line="60" pos:column="22"/></condition>
  <block pos:line="61" pos:column="3">{
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name><name pos:line="62" pos:column="9">key<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">type<pos:position pos:line="62" pos:column="18"/></name></name> <operator pos:line="62" pos:column="19">==<pos:position pos:line="62" pos:column="21"/></operator> <name pos:line="62" pos:column="22">NULL<pos:position pos:line="62" pos:column="26"/></name></expr>)<pos:position pos:line="62" pos:column="27"/></condition><then pos:line="62" pos:column="27">
    <block pos:line="63" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">WARNING<pos:position pos:line="64" pos:column="14"/></name> <argument_list pos:line="64" pos:column="15">(<argument><expr><literal type="string" pos:line="64" pos:column="16">"curl_json plugin: `Type' missing in `Key' block."<pos:position pos:line="64" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><name pos:line="65" pos:column="7">status<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <operator pos:line="65" pos:column="16">-<pos:position pos:line="65" pos:column="17"/></operator><literal type="number" pos:line="65" pos:column="17">1<pos:position pos:line="65" pos:column="18"/></literal></expr>;<pos:position pos:line="65" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <break pos:line="68" pos:column="5">break;<pos:position pos:line="68" pos:column="11"/></break>
  }<pos:position pos:line="69" pos:column="4"/></block></while> <comment type="block" pos:line="69" pos:column="5">/* while (status == 0) */</comment>

  <comment type="block" pos:line="71" pos:column="3">/* store path in a tree that will match the json map structure, example:
   * "httpd/requests/count",
   * "httpd/requests/current" -&gt;
   * { "httpd": { "requests": { "count": $key, "current": $key } } }
   */</comment>
  <if pos:line="76" pos:column="3">if <condition pos:line="76" pos:column="6">(<expr><name pos:line="76" pos:column="7">status<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">==<pos:position pos:line="76" pos:column="16"/></operator> <literal type="number" pos:line="76" pos:column="17">0<pos:position pos:line="76" pos:column="18"/></literal></expr>)<pos:position pos:line="76" pos:column="19"/></condition><then pos:line="76" pos:column="19">
  <block pos:line="77" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="78" pos:column="5">char<pos:position pos:line="78" pos:column="9"/></name> <modifier pos:line="78" pos:column="10">*<pos:position pos:line="78" pos:column="11"/></modifier></type><name pos:line="78" pos:column="11">ptr<pos:position pos:line="78" pos:column="14"/></name></decl>;<pos:position pos:line="78" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="79" pos:column="5">char<pos:position pos:line="79" pos:column="9"/></name> <modifier pos:line="79" pos:column="10">*<pos:position pos:line="79" pos:column="11"/></modifier></type><name pos:line="79" pos:column="11">name<pos:position pos:line="79" pos:column="15"/></name></decl>;<pos:position pos:line="79" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="80" pos:column="5">char<pos:position pos:line="80" pos:column="9"/></name></type> <name><name pos:line="80" pos:column="10">ent<pos:position pos:line="80" pos:column="13"/></name><index pos:line="80" pos:column="13">[<expr><name pos:line="80" pos:column="14">PATH_MAX<pos:position pos:line="80" pos:column="22"/></name></expr>]<pos:position pos:line="80" pos:column="23"/></index></name></decl>;<pos:position pos:line="80" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="81" pos:column="5">c_avl_tree_t<pos:position pos:line="81" pos:column="17"/></name> <modifier pos:line="81" pos:column="18">*<pos:position pos:line="81" pos:column="19"/></modifier></type><name pos:line="81" pos:column="19">tree<pos:position pos:line="81" pos:column="23"/></name></decl>;<pos:position pos:line="81" pos:column="24"/></decl_stmt>

    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name><name pos:line="83" pos:column="9">db<pos:position pos:line="83" pos:column="11"/></name><operator pos:line="83" pos:column="11">-&gt;<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="13">tree<pos:position pos:line="83" pos:column="17"/></name></name> <operator pos:line="83" pos:column="18">==<pos:position pos:line="83" pos:column="20"/></operator> <name pos:line="83" pos:column="21">NULL<pos:position pos:line="83" pos:column="25"/></name></expr>)<pos:position pos:line="83" pos:column="26"/></condition><then pos:line="83" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="84" pos:column="7">db<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">-&gt;<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="11">tree<pos:position pos:line="84" pos:column="15"/></name></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <call><name pos:line="84" pos:column="18">cj_avl_create<pos:position pos:line="84" pos:column="31"/></name><argument_list pos:line="84" pos:column="31">()<pos:position pos:line="84" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="34"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="86" pos:column="5">tree<pos:position pos:line="86" pos:column="9"/></name> <operator pos:line="86" pos:column="10">=<pos:position pos:line="86" pos:column="11"/></operator> <name><name pos:line="86" pos:column="12">db<pos:position pos:line="86" pos:column="14"/></name><operator pos:line="86" pos:column="14">-&gt;<pos:position pos:line="86" pos:column="19"/></operator><name pos:line="86" pos:column="16">tree<pos:position pos:line="86" pos:column="20"/></name></name></expr>;<pos:position pos:line="86" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="87" pos:column="5">name<pos:position pos:line="87" pos:column="9"/></name> <operator pos:line="87" pos:column="10">=<pos:position pos:line="87" pos:column="11"/></operator> <name><name pos:line="87" pos:column="12">key<pos:position pos:line="87" pos:column="15"/></name><operator pos:line="87" pos:column="15">-&gt;<pos:position pos:line="87" pos:column="20"/></operator><name pos:line="87" pos:column="17">path<pos:position pos:line="87" pos:column="21"/></name></name></expr>;<pos:position pos:line="87" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="88" pos:column="5">ptr<pos:position pos:line="88" pos:column="8"/></name> <operator pos:line="88" pos:column="9">=<pos:position pos:line="88" pos:column="10"/></operator> <name><name pos:line="88" pos:column="11">key<pos:position pos:line="88" pos:column="14"/></name><operator pos:line="88" pos:column="14">-&gt;<pos:position pos:line="88" pos:column="19"/></operator><name pos:line="88" pos:column="16">path<pos:position pos:line="88" pos:column="20"/></name></name></expr>;<pos:position pos:line="88" pos:column="21"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><operator pos:line="89" pos:column="9">*<pos:position pos:line="89" pos:column="10"/></operator><name pos:line="89" pos:column="10">ptr<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">==<pos:position pos:line="89" pos:column="16"/></operator> <literal type="char" pos:line="89" pos:column="17">'/'<pos:position pos:line="89" pos:column="20"/></literal></expr>)<pos:position pos:line="89" pos:column="21"/></condition><then pos:line="89" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="90" pos:column="7">++<pos:position pos:line="90" pos:column="9"/></operator><name pos:line="90" pos:column="9">ptr<pos:position pos:line="90" pos:column="12"/></name></expr>;<pos:position pos:line="90" pos:column="13"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="92" pos:column="5">name<pos:position pos:line="92" pos:column="9"/></name> <operator pos:line="92" pos:column="10">=<pos:position pos:line="92" pos:column="11"/></operator> <name pos:line="92" pos:column="12">ptr<pos:position pos:line="92" pos:column="15"/></name></expr>;<pos:position pos:line="92" pos:column="16"/></expr_stmt>
    <while pos:line="93" pos:column="5">while <condition pos:line="93" pos:column="11">(<expr><operator pos:line="93" pos:column="12">*<pos:position pos:line="93" pos:column="13"/></operator><name pos:line="93" pos:column="13">ptr<pos:position pos:line="93" pos:column="16"/></name></expr>)<pos:position pos:line="93" pos:column="17"/></condition>
    <block pos:line="94" pos:column="5">{
      <if pos:line="95" pos:column="7">if <condition pos:line="95" pos:column="10">(<expr><operator pos:line="95" pos:column="11">*<pos:position pos:line="95" pos:column="12"/></operator><name pos:line="95" pos:column="12">ptr<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">==<pos:position pos:line="95" pos:column="18"/></operator> <literal type="char" pos:line="95" pos:column="19">'/'<pos:position pos:line="95" pos:column="22"/></literal></expr>)<pos:position pos:line="95" pos:column="23"/></condition><then pos:line="95" pos:column="23">
      <block pos:line="96" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="97" pos:column="9">c_avl_tree_t<pos:position pos:line="97" pos:column="21"/></name> <modifier pos:line="97" pos:column="22">*<pos:position pos:line="97" pos:column="23"/></modifier></type><name pos:line="97" pos:column="23">value<pos:position pos:line="97" pos:column="28"/></name></decl>;<pos:position pos:line="97" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="98" pos:column="9">int<pos:position pos:line="98" pos:column="12"/></name></type> <name pos:line="98" pos:column="13">len<pos:position pos:line="98" pos:column="16"/></name></decl>;<pos:position pos:line="98" pos:column="17"/></decl_stmt>

        <expr_stmt><expr><name pos:line="100" pos:column="9">len<pos:position pos:line="100" pos:column="12"/></name> <operator pos:line="100" pos:column="13">=<pos:position pos:line="100" pos:column="14"/></operator> <name pos:line="100" pos:column="15">ptr<pos:position pos:line="100" pos:column="18"/></name><operator pos:line="100" pos:column="18">-<pos:position pos:line="100" pos:column="19"/></operator><name pos:line="100" pos:column="19">name<pos:position pos:line="100" pos:column="23"/></name></expr>;<pos:position pos:line="100" pos:column="24"/></expr_stmt>
        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name pos:line="101" pos:column="13">len<pos:position pos:line="101" pos:column="16"/></name> <operator pos:line="101" pos:column="17">==<pos:position pos:line="101" pos:column="19"/></operator> <literal type="number" pos:line="101" pos:column="20">0<pos:position pos:line="101" pos:column="21"/></literal></expr>)<pos:position pos:line="101" pos:column="22"/></condition><then pos:line="101" pos:column="22">
          <block type="pseudo"><break pos:line="102" pos:column="11">break;<pos:position pos:line="102" pos:column="17"/></break></block></then></if>
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">sstrncpy<pos:position pos:line="103" pos:column="17"/></name> <argument_list pos:line="103" pos:column="18">(<argument><expr><name pos:line="103" pos:column="19">ent<pos:position pos:line="103" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="24">name<pos:position pos:line="103" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="30">len<pos:position pos:line="103" pos:column="33"/></name><operator pos:line="103" pos:column="33">+<pos:position pos:line="103" pos:column="34"/></operator><literal type="number" pos:line="103" pos:column="34">1<pos:position pos:line="103" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="37"/></expr_stmt>

        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><call><name pos:line="105" pos:column="13">c_avl_get<pos:position pos:line="105" pos:column="22"/></name> <argument_list pos:line="105" pos:column="23">(<argument><expr><name pos:line="105" pos:column="24">tree<pos:position pos:line="105" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="30">ent<pos:position pos:line="105" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="105" pos:column="35">(<pos:position pos:line="105" pos:column="36"/></operator><name pos:line="105" pos:column="36">void<pos:position pos:line="105" pos:column="40"/></name> <operator pos:line="105" pos:column="41">*<pos:position pos:line="105" pos:column="42"/></operator><operator pos:line="105" pos:column="42">)<pos:position pos:line="105" pos:column="43"/></operator> <operator pos:line="105" pos:column="44">&amp;<pos:position pos:line="105" pos:column="49"/></operator><name pos:line="105" pos:column="45">value<pos:position pos:line="105" pos:column="50"/></name></expr></argument>)<pos:position pos:line="105" pos:column="51"/></argument_list></call> <operator pos:line="105" pos:column="52">!=<pos:position pos:line="105" pos:column="54"/></operator> <literal type="number" pos:line="105" pos:column="55">0<pos:position pos:line="105" pos:column="56"/></literal></expr>)<pos:position pos:line="105" pos:column="57"/></condition><then pos:line="105" pos:column="57">
        <block pos:line="106" pos:column="9">{
          <expr_stmt><expr><name pos:line="107" pos:column="11">value<pos:position pos:line="107" pos:column="16"/></name> <operator pos:line="107" pos:column="17">=<pos:position pos:line="107" pos:column="18"/></operator> <call><name pos:line="107" pos:column="19">cj_avl_create<pos:position pos:line="107" pos:column="32"/></name> <argument_list pos:line="107" pos:column="33">()<pos:position pos:line="107" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="36"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="108" pos:column="11">c_avl_insert<pos:position pos:line="108" pos:column="23"/></name> <argument_list pos:line="108" pos:column="24">(<argument><expr><name pos:line="108" pos:column="25">tree<pos:position pos:line="108" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="108" pos:column="31">strdup<pos:position pos:line="108" pos:column="37"/></name> <argument_list pos:line="108" pos:column="38">(<argument><expr><name pos:line="108" pos:column="39">ent<pos:position pos:line="108" pos:column="42"/></name></expr></argument>)<pos:position pos:line="108" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="108" pos:column="45">value<pos:position pos:line="108" pos:column="50"/></name></expr></argument>)<pos:position pos:line="108" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="109" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="111" pos:column="9">tree<pos:position pos:line="111" pos:column="13"/></name> <operator pos:line="111" pos:column="14">=<pos:position pos:line="111" pos:column="15"/></operator> <name pos:line="111" pos:column="16">value<pos:position pos:line="111" pos:column="21"/></name></expr>;<pos:position pos:line="111" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="112" pos:column="9">name<pos:position pos:line="112" pos:column="13"/></name> <operator pos:line="112" pos:column="14">=<pos:position pos:line="112" pos:column="15"/></operator> <name pos:line="112" pos:column="16">ptr<pos:position pos:line="112" pos:column="19"/></name><operator pos:line="112" pos:column="19">+<pos:position pos:line="112" pos:column="20"/></operator><literal type="number" pos:line="112" pos:column="20">1<pos:position pos:line="112" pos:column="21"/></literal></expr>;<pos:position pos:line="112" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="113" pos:column="8"/></block></then></if>
      <expr_stmt><expr><operator pos:line="114" pos:column="7">++<pos:position pos:line="114" pos:column="9"/></operator><name pos:line="114" pos:column="9">ptr<pos:position pos:line="114" pos:column="12"/></name></expr>;<pos:position pos:line="114" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="115" pos:column="6"/></block></while>
    <if pos:line="116" pos:column="5">if <condition pos:line="116" pos:column="8">(<expr><operator pos:line="116" pos:column="9">*<pos:position pos:line="116" pos:column="10"/></operator><name pos:line="116" pos:column="10">name<pos:position pos:line="116" pos:column="14"/></name></expr>)<pos:position pos:line="116" pos:column="15"/></condition><then pos:line="116" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="7">c_avl_insert<pos:position pos:line="117" pos:column="19"/></name> <argument_list pos:line="117" pos:column="20">(<argument><expr><name pos:line="117" pos:column="21">tree<pos:position pos:line="117" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="117" pos:column="27">strdup<pos:position pos:line="117" pos:column="33"/></name><argument_list pos:line="117" pos:column="33">(<argument><expr><name pos:line="117" pos:column="34">name<pos:position pos:line="117" pos:column="38"/></name></expr></argument>)<pos:position pos:line="117" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="117" pos:column="41">key<pos:position pos:line="117" pos:column="44"/></name></expr></argument>)<pos:position pos:line="117" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="46"/></expr_stmt></block></then>
    <else pos:line="118" pos:column="5">else
    <block pos:line="119" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="120" pos:column="7">ERROR<pos:position pos:line="120" pos:column="12"/></name> <argument_list pos:line="120" pos:column="13">(<argument><expr><literal type="string" pos:line="120" pos:column="14">"curl_json plugin: invalid key: %s"<pos:position pos:line="120" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="51">key<pos:position pos:line="120" pos:column="54"/></name><operator pos:line="120" pos:column="54">-&gt;<pos:position pos:line="120" pos:column="59"/></operator><name pos:line="120" pos:column="56">path<pos:position pos:line="120" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><name pos:line="121" pos:column="7">status<pos:position pos:line="121" pos:column="13"/></name> <operator pos:line="121" pos:column="14">=<pos:position pos:line="121" pos:column="15"/></operator> <operator pos:line="121" pos:column="16">-<pos:position pos:line="121" pos:column="17"/></operator><literal type="number" pos:line="121" pos:column="17">1<pos:position pos:line="121" pos:column="18"/></literal></expr>;<pos:position pos:line="121" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="122" pos:column="6"/></block></else></if>
  }<pos:position pos:line="123" pos:column="4"/></block></then></if>

  <return pos:line="125" pos:column="3">return <expr><operator pos:line="125" pos:column="10">(<pos:position pos:line="125" pos:column="11"/></operator><name pos:line="125" pos:column="11">status<pos:position pos:line="125" pos:column="17"/></name><operator pos:line="125" pos:column="17">)<pos:position pos:line="125" pos:column="18"/></operator></expr>;<pos:position pos:line="125" pos:column="19"/></return>
}<pos:position pos:line="126" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1296_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">chrony_query<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">p_command<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">tChrony_Request<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">p_req<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="2" pos:column="25">tChrony_Response<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">p_resp<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">size_t<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">p_resp_size<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list> <block pos:line="2" pos:column="72">{
  <comment type="block" pos:line="3" pos:column="3">/* Check connection. We simply perform one try as collectd already handles
   * retries */</comment>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">assert<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">p_req<pos:position pos:line="5" pos:column="15"/></name></expr></argument>)<pos:position pos:line="5" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name pos:line="6" pos:column="10">p_resp<pos:position pos:line="6" pos:column="16"/></name></expr></argument>)<pos:position pos:line="6" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">p_resp_size<pos:position pos:line="7" pos:column="21"/></name></expr></argument>)<pos:position pos:line="7" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">g_chrony_is_connected<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">==<pos:position pos:line="9" pos:column="31"/></operator> <literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34"> <block pos:line="9" pos:column="35">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">chrony_connect<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">()<pos:position pos:line="10" pos:column="25"/></argument_list></call> <operator pos:line="10" pos:column="26">==<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="29">CHRONY_RC_OK<pos:position pos:line="10" pos:column="41"/></name></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42"> <block pos:line="10" pos:column="43">{
      <expr_stmt><expr><name pos:line="11" pos:column="7">g_chrony_is_connected<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <else pos:line="12" pos:column="7">else <block pos:line="12" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">ERROR<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">PLUGIN_NAME<pos:position pos:line="13" pos:column="24"/></name> <literal type="string" pos:line="13" pos:column="25">": Unable to connect. Errno = %d"<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="60">errno<pos:position pos:line="13" pos:column="65"/></name></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="67"/></expr_stmt>
      <return pos:line="14" pos:column="7">return <expr><name pos:line="14" pos:column="14">CHRONY_RC_FAIL<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></else></if>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <do pos:line="18" pos:column="3">do <block pos:line="18" pos:column="6">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">valid_command<pos:position pos:line="19" pos:column="22"/></name> <init pos:line="19" pos:column="23">= <expr><literal type="number" pos:line="19" pos:column="25">0<pos:position pos:line="19" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">size_t<pos:position pos:line="20" pos:column="11"/></name></type> <name pos:line="20" pos:column="12">req_size<pos:position pos:line="20" pos:column="20"/></name> <init pos:line="20" pos:column="21">= <expr><sizeof pos:line="20" pos:column="23">sizeof<argument_list pos:line="20" pos:column="29">(<argument><expr><name><name pos:line="20" pos:column="30">p_req<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">header<pos:position pos:line="20" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></sizeof> <operator pos:line="20" pos:column="45">+<pos:position pos:line="20" pos:column="46"/></operator> <sizeof pos:line="20" pos:column="47">sizeof<argument_list pos:line="20" pos:column="53">(<argument><expr><name><name pos:line="20" pos:column="54">p_req<pos:position pos:line="20" pos:column="59"/></name><operator pos:line="20" pos:column="59">-&gt;<pos:position pos:line="20" pos:column="64"/></operator><name pos:line="20" pos:column="61">padding<pos:position pos:line="20" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="20" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">size_t<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">resp_size<pos:position pos:line="21" pos:column="21"/></name> <init pos:line="21" pos:column="22">= <expr><sizeof pos:line="21" pos:column="24">sizeof<argument_list pos:line="21" pos:column="30">(<argument><expr><name><name pos:line="21" pos:column="31">p_resp<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">-&gt;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="39">header<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="21" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">uint16_t<pos:position pos:line="22" pos:column="13"/></name></type> <name pos:line="22" pos:column="14">resp_code<pos:position pos:line="22" pos:column="23"/></name> <init pos:line="22" pos:column="24">= <expr><name pos:line="22" pos:column="26">RPY_NULL<pos:position pos:line="22" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="35"/></decl_stmt>
    <switch pos:line="23" pos:column="5">switch <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">p_command<pos:position pos:line="23" pos:column="22"/></name></expr>)<pos:position pos:line="23" pos:column="23"/></condition> <block pos:line="23" pos:column="24">{
    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">REQ_TRACKING<pos:position pos:line="24" pos:column="22"/></name></expr>:<pos:position pos:line="24" pos:column="23"/></case>
      <expr_stmt><expr><name pos:line="25" pos:column="7">req_size<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">+=<pos:position pos:line="25" pos:column="18"/></operator> <sizeof pos:line="25" pos:column="19">sizeof<argument_list pos:line="25" pos:column="25">(<argument><expr><name><name pos:line="25" pos:column="26">p_req<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">body<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">.<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="38">tracking<pos:position pos:line="25" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></sizeof></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name pos:line="26" pos:column="7">resp_size<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">+=<pos:position pos:line="26" pos:column="19"/></operator> <sizeof pos:line="26" pos:column="20">sizeof<argument_list pos:line="26" pos:column="26">(<argument><expr><name><name pos:line="26" pos:column="27">p_resp<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">body<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">.<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="40">tracking<pos:position pos:line="26" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></sizeof></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">resp_code<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">RPY_TRACKING<pos:position pos:line="27" pos:column="31"/></name></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">valid_command<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <literal type="number" pos:line="28" pos:column="23">1<pos:position pos:line="28" pos:column="24"/></literal></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
      <break pos:line="29" pos:column="7">break;<pos:position pos:line="29" pos:column="13"/></break>
    <case pos:line="30" pos:column="5">case <expr><name pos:line="30" pos:column="10">REQ_N_SOURCES<pos:position pos:line="30" pos:column="23"/></name></expr>:<pos:position pos:line="30" pos:column="24"/></case>
      <expr_stmt><expr><name pos:line="31" pos:column="7">req_size<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">+=<pos:position pos:line="31" pos:column="18"/></operator> <sizeof pos:line="31" pos:column="19">sizeof<argument_list pos:line="31" pos:column="25">(<argument><expr><name><name pos:line="31" pos:column="26">p_req<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">body<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">.<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">n_sources<pos:position pos:line="31" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></sizeof></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name pos:line="32" pos:column="7">resp_size<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">+=<pos:position pos:line="32" pos:column="19"/></operator> <sizeof pos:line="32" pos:column="20">sizeof<argument_list pos:line="32" pos:column="26">(<argument><expr><name><name pos:line="32" pos:column="27">p_resp<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">body<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">.<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="40">n_sources<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></sizeof></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="33" pos:column="7">resp_code<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">RPY_N_SOURCES<pos:position pos:line="33" pos:column="32"/></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="34" pos:column="7">valid_command<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <literal type="number" pos:line="34" pos:column="23">1<pos:position pos:line="34" pos:column="24"/></literal></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
      <break pos:line="35" pos:column="7">break;<pos:position pos:line="35" pos:column="13"/></break>
    <case pos:line="36" pos:column="5">case <expr><name pos:line="36" pos:column="10">REQ_SOURCE_DATA<pos:position pos:line="36" pos:column="25"/></name></expr>:<pos:position pos:line="36" pos:column="26"/></case>
      <expr_stmt><expr><name pos:line="37" pos:column="7">req_size<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">+=<pos:position pos:line="37" pos:column="18"/></operator> <sizeof pos:line="37" pos:column="19">sizeof<argument_list pos:line="37" pos:column="25">(<argument><expr><name><name pos:line="37" pos:column="26">p_req<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">body<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">.<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="38">source_data<pos:position pos:line="37" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></sizeof></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="38" pos:column="7">resp_size<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">+=<pos:position pos:line="38" pos:column="19"/></operator> <sizeof pos:line="38" pos:column="20">sizeof<argument_list pos:line="38" pos:column="26">(<argument><expr><name><name pos:line="38" pos:column="27">p_resp<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">-&gt;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="35">body<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">.<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="40">source_data<pos:position pos:line="38" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></sizeof></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name pos:line="39" pos:column="7">resp_code<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">RPY_SOURCE_DATA<pos:position pos:line="39" pos:column="34"/></name></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="40" pos:column="7">valid_command<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="23">1<pos:position pos:line="40" pos:column="24"/></literal></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
      <break pos:line="41" pos:column="7">break;<pos:position pos:line="41" pos:column="13"/></break>
    <case pos:line="42" pos:column="5">case <expr><name pos:line="42" pos:column="10">REQ_SOURCE_STATS<pos:position pos:line="42" pos:column="26"/></name></expr>:<pos:position pos:line="42" pos:column="27"/></case>
      <expr_stmt><expr><name pos:line="43" pos:column="7">req_size<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">+=<pos:position pos:line="43" pos:column="18"/></operator> <sizeof pos:line="43" pos:column="19">sizeof<argument_list pos:line="43" pos:column="25">(<argument><expr><name><name pos:line="43" pos:column="26">p_req<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">-&gt;<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="33">body<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">.<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="38">source_stats<pos:position pos:line="43" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></sizeof></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name pos:line="44" pos:column="7">resp_size<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">+=<pos:position pos:line="44" pos:column="19"/></operator> <sizeof pos:line="44" pos:column="20">sizeof<argument_list pos:line="44" pos:column="26">(<argument><expr><name><name pos:line="44" pos:column="27">p_resp<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">-&gt;<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="35">body<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">.<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="40">source_stats<pos:position pos:line="44" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></sizeof></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name pos:line="45" pos:column="7">resp_code<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">RPY_SOURCE_STATS<pos:position pos:line="45" pos:column="35"/></name></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name pos:line="46" pos:column="7">valid_command<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <literal type="number" pos:line="46" pos:column="23">1<pos:position pos:line="46" pos:column="24"/></literal></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>
      <break pos:line="47" pos:column="7">break;<pos:position pos:line="47" pos:column="13"/></break>
    <default pos:line="48" pos:column="5">default:<pos:position pos:line="48" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">ERROR<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">PLUGIN_NAME<pos:position pos:line="49" pos:column="24"/></name> <literal type="string" pos:line="49" pos:column="25">": Unknown request command (Was: %d)"<pos:position pos:line="49" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="64">p_command<pos:position pos:line="49" pos:column="73"/></name></expr></argument>)<pos:position pos:line="49" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="75"/></expr_stmt>
      <break pos:line="50" pos:column="7">break;<pos:position pos:line="50" pos:column="13"/></break>
    }<pos:position pos:line="51" pos:column="6"/></block></switch>

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">valid_command<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">==<pos:position pos:line="53" pos:column="25"/></operator> <literal type="number" pos:line="53" pos:column="26">0<pos:position pos:line="53" pos:column="27"/></literal></expr>)<pos:position pos:line="53" pos:column="28"/></condition><then pos:line="53" pos:column="28">
      <block type="pseudo"><break pos:line="54" pos:column="7">break;<pos:position pos:line="54" pos:column="13"/></break></block></then></if>

    <decl_stmt><decl><type><name pos:line="56" pos:column="5">uint32_t<pos:position pos:line="56" pos:column="13"/></name></type> <name pos:line="56" pos:column="14">seq_nr<pos:position pos:line="56" pos:column="20"/></name> <init pos:line="56" pos:column="21">= <expr><call><name pos:line="56" pos:column="23">rand_r<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><operator pos:line="56" pos:column="30">&amp;<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="31">g_chrony_rand<pos:position pos:line="56" pos:column="44"/></name></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="46"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">p_req<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">-&gt;<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="12">header<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">.<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">f_cmd<pos:position pos:line="57" pos:column="24"/></name></name> <operator pos:line="57" pos:column="25">=<pos:position pos:line="57" pos:column="26"/></operator> <call><name pos:line="57" pos:column="27">htons<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">p_command<pos:position pos:line="57" pos:column="42"/></name></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">p_req<pos:position pos:line="58" pos:column="10"/></name><operator pos:line="58" pos:column="10">-&gt;<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="12">header<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">.<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="19">f_cmd_try<pos:position pos:line="58" pos:column="28"/></name></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <literal type="number" pos:line="58" pos:column="31">0<pos:position pos:line="58" pos:column="32"/></literal></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">p_req<pos:position pos:line="59" pos:column="10"/></name><operator pos:line="59" pos:column="10">-&gt;<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="12">header<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">.<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="19">f_seq<pos:position pos:line="59" pos:column="24"/></name></name> <operator pos:line="59" pos:column="25">=<pos:position pos:line="59" pos:column="26"/></operator> <name pos:line="59" pos:column="27">seq_nr<pos:position pos:line="59" pos:column="33"/></name></expr>;<pos:position pos:line="59" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">DEBUG<pos:position pos:line="61" pos:column="10"/></name><argument_list pos:line="61" pos:column="10">(<argument><expr><name pos:line="61" pos:column="11">PLUGIN_NAME<pos:position pos:line="61" pos:column="22"/></name> <literal type="string" pos:line="61" pos:column="23">": Sending request (.cmd = %d, .seq = %d)"<pos:position pos:line="61" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="67">p_command<pos:position pos:line="61" pos:column="76"/></name></expr></argument>,
          <argument><expr><name pos:line="62" pos:column="11">seq_nr<pos:position pos:line="62" pos:column="17"/></name></expr></argument>)<pos:position pos:line="62" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><call><name pos:line="63" pos:column="9">chrony_send_request<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name pos:line="63" pos:column="29">p_req<pos:position pos:line="63" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="36">req_size<pos:position pos:line="63" pos:column="44"/></name></expr></argument>)<pos:position pos:line="63" pos:column="45"/></argument_list></call> <operator pos:line="63" pos:column="46">!=<pos:position pos:line="63" pos:column="48"/></operator> <literal type="number" pos:line="63" pos:column="49">0<pos:position pos:line="63" pos:column="50"/></literal></expr>)<pos:position pos:line="63" pos:column="51"/></condition><then pos:line="63" pos:column="51">
      <block type="pseudo"><break pos:line="64" pos:column="7">break;<pos:position pos:line="64" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><call><name pos:line="66" pos:column="5">DEBUG<pos:position pos:line="66" pos:column="10"/></name><argument_list pos:line="66" pos:column="10">(<argument><expr><name pos:line="66" pos:column="11">PLUGIN_NAME<pos:position pos:line="66" pos:column="22"/></name> <literal type="string" pos:line="66" pos:column="23">": Waiting for response"<pos:position pos:line="66" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="49"/></expr_stmt>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><call><name pos:line="67" pos:column="9">chrony_recv_response<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><name pos:line="67" pos:column="30">p_resp<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="38">resp_size<pos:position pos:line="67" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="49">p_resp_size<pos:position pos:line="67" pos:column="60"/></name></expr></argument>)<pos:position pos:line="67" pos:column="61"/></argument_list></call> <operator pos:line="67" pos:column="62">!=<pos:position pos:line="67" pos:column="64"/></operator> <literal type="number" pos:line="67" pos:column="65">0<pos:position pos:line="67" pos:column="66"/></literal></expr>)<pos:position pos:line="67" pos:column="67"/></condition><then pos:line="67" pos:column="67">
      <block type="pseudo"><break pos:line="68" pos:column="7">break;<pos:position pos:line="68" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><call><name pos:line="70" pos:column="5">DEBUG<pos:position pos:line="70" pos:column="10"/></name><argument_list pos:line="70" pos:column="10">(<argument><expr><name pos:line="70" pos:column="11">PLUGIN_NAME<pos:position pos:line="70" pos:column="22"/></name> <literal type="string" pos:line="70" pos:column="23">": Received response: .version = %u, .type = %u, .cmd = "<pos:position pos:line="70" pos:column="80"/></literal>
                      <literal type="string" pos:line="71" pos:column="23">"%u, .reply = %u, .status = %u, .seq = %u"<pos:position pos:line="71" pos:column="65"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="72" pos:column="11">p_resp<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">-&gt;<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="19">header<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">.<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="26">f_version<pos:position pos:line="72" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="37">p_resp<pos:position pos:line="72" pos:column="43"/></name><operator pos:line="72" pos:column="43">-&gt;<pos:position pos:line="72" pos:column="48"/></operator><name pos:line="72" pos:column="45">header<pos:position pos:line="72" pos:column="51"/></name><operator pos:line="72" pos:column="51">.<pos:position pos:line="72" pos:column="52"/></operator><name pos:line="72" pos:column="52">f_type<pos:position pos:line="72" pos:column="58"/></name></name></expr></argument>,
          <argument><expr><call><name pos:line="73" pos:column="11">ntohs<pos:position pos:line="73" pos:column="16"/></name><argument_list pos:line="73" pos:column="16">(<argument><expr><name><name pos:line="73" pos:column="17">p_resp<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">-&gt;<pos:position pos:line="73" pos:column="28"/></operator><name pos:line="73" pos:column="25">header<pos:position pos:line="73" pos:column="31"/></name><operator pos:line="73" pos:column="31">.<pos:position pos:line="73" pos:column="32"/></operator><name pos:line="73" pos:column="32">f_cmd<pos:position pos:line="73" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="40">ntohs<pos:position pos:line="73" pos:column="45"/></name><argument_list pos:line="73" pos:column="45">(<argument><expr><name><name pos:line="73" pos:column="46">p_resp<pos:position pos:line="73" pos:column="52"/></name><operator pos:line="73" pos:column="52">-&gt;<pos:position pos:line="73" pos:column="57"/></operator><name pos:line="73" pos:column="54">header<pos:position pos:line="73" pos:column="60"/></name><operator pos:line="73" pos:column="60">.<pos:position pos:line="73" pos:column="61"/></operator><name pos:line="73" pos:column="61">f_reply<pos:position pos:line="73" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="69"/></argument_list></call></expr></argument>,
          <argument><expr><call><name pos:line="74" pos:column="11">ntohs<pos:position pos:line="74" pos:column="16"/></name><argument_list pos:line="74" pos:column="16">(<argument><expr><name><name pos:line="74" pos:column="17">p_resp<pos:position pos:line="74" pos:column="23"/></name><operator pos:line="74" pos:column="23">-&gt;<pos:position pos:line="74" pos:column="28"/></operator><name pos:line="74" pos:column="25">header<pos:position pos:line="74" pos:column="31"/></name><operator pos:line="74" pos:column="31">.<pos:position pos:line="74" pos:column="32"/></operator><name pos:line="74" pos:column="32">f_status<pos:position pos:line="74" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="43">p_resp<pos:position pos:line="74" pos:column="49"/></name><operator pos:line="74" pos:column="49">-&gt;<pos:position pos:line="74" pos:column="54"/></operator><name pos:line="74" pos:column="51">header<pos:position pos:line="74" pos:column="57"/></name><operator pos:line="74" pos:column="57">.<pos:position pos:line="74" pos:column="58"/></operator><name pos:line="74" pos:column="58">f_seq<pos:position pos:line="74" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="65"/></expr_stmt>

    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name><name pos:line="76" pos:column="9">p_resp<pos:position pos:line="76" pos:column="15"/></name><operator pos:line="76" pos:column="15">-&gt;<pos:position pos:line="76" pos:column="20"/></operator><name pos:line="76" pos:column="17">header<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">.<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="24">f_version<pos:position pos:line="76" pos:column="33"/></name></name> <operator pos:line="76" pos:column="34">!=<pos:position pos:line="76" pos:column="36"/></operator> <name><name pos:line="76" pos:column="37">p_req<pos:position pos:line="76" pos:column="42"/></name><operator pos:line="76" pos:column="42">-&gt;<pos:position pos:line="76" pos:column="47"/></operator><name pos:line="76" pos:column="44">header<pos:position pos:line="76" pos:column="50"/></name><operator pos:line="76" pos:column="50">.<pos:position pos:line="76" pos:column="51"/></operator><name pos:line="76" pos:column="51">f_version<pos:position pos:line="76" pos:column="60"/></name></name></expr>)<pos:position pos:line="76" pos:column="61"/></condition><then pos:line="76" pos:column="61"> <block pos:line="76" pos:column="62">{
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">ERROR<pos:position pos:line="77" pos:column="12"/></name><argument_list pos:line="77" pos:column="12">(<argument><expr><name pos:line="77" pos:column="13">PLUGIN_NAME<pos:position pos:line="77" pos:column="24"/></name> <literal type="string" pos:line="77" pos:column="25">": Wrong protocol version (Was: %d, expected: %d)"<pos:position pos:line="77" pos:column="75"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="78" pos:column="13">p_resp<pos:position pos:line="78" pos:column="19"/></name><operator pos:line="78" pos:column="19">-&gt;<pos:position pos:line="78" pos:column="24"/></operator><name pos:line="78" pos:column="21">header<pos:position pos:line="78" pos:column="27"/></name><operator pos:line="78" pos:column="27">.<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="28">f_version<pos:position pos:line="78" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="39">p_req<pos:position pos:line="78" pos:column="44"/></name><operator pos:line="78" pos:column="44">-&gt;<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="46">header<pos:position pos:line="78" pos:column="52"/></name><operator pos:line="78" pos:column="52">.<pos:position pos:line="78" pos:column="53"/></operator><name pos:line="78" pos:column="53">f_version<pos:position pos:line="78" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="64"/></expr_stmt>
      <return pos:line="79" pos:column="7">return <expr><name pos:line="79" pos:column="14">CHRONY_RC_FAIL<pos:position pos:line="79" pos:column="28"/></name></expr>;<pos:position pos:line="79" pos:column="29"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name><name pos:line="81" pos:column="9">p_resp<pos:position pos:line="81" pos:column="15"/></name><operator pos:line="81" pos:column="15">-&gt;<pos:position pos:line="81" pos:column="20"/></operator><name pos:line="81" pos:column="17">header<pos:position pos:line="81" pos:column="23"/></name><operator pos:line="81" pos:column="23">.<pos:position pos:line="81" pos:column="24"/></operator><name pos:line="81" pos:column="24">f_type<pos:position pos:line="81" pos:column="30"/></name></name> <operator pos:line="81" pos:column="31">!=<pos:position pos:line="81" pos:column="33"/></operator> <name pos:line="81" pos:column="34">PKT_TYPE_CMD_REPLY<pos:position pos:line="81" pos:column="52"/></name></expr>)<pos:position pos:line="81" pos:column="53"/></condition><then pos:line="81" pos:column="53"> <block pos:line="81" pos:column="54">{
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">ERROR<pos:position pos:line="82" pos:column="12"/></name><argument_list pos:line="82" pos:column="12">(<argument><expr><name pos:line="82" pos:column="13">PLUGIN_NAME<pos:position pos:line="82" pos:column="24"/></name> <literal type="string" pos:line="82" pos:column="25">": Wrong packet type (Was: %d, expected: %d)"<pos:position pos:line="82" pos:column="70"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="83" pos:column="13">p_resp<pos:position pos:line="83" pos:column="19"/></name><operator pos:line="83" pos:column="19">-&gt;<pos:position pos:line="83" pos:column="24"/></operator><name pos:line="83" pos:column="21">header<pos:position pos:line="83" pos:column="27"/></name><operator pos:line="83" pos:column="27">.<pos:position pos:line="83" pos:column="28"/></operator><name pos:line="83" pos:column="28">f_type<pos:position pos:line="83" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="36">PKT_TYPE_CMD_REPLY<pos:position pos:line="83" pos:column="54"/></name></expr></argument>)<pos:position pos:line="83" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="56"/></expr_stmt>
      <return pos:line="84" pos:column="7">return <expr><name pos:line="84" pos:column="14">CHRONY_RC_FAIL<pos:position pos:line="84" pos:column="28"/></name></expr>;<pos:position pos:line="84" pos:column="29"/></return>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><name><name pos:line="86" pos:column="9">p_resp<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">-&gt;<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="17">header<pos:position pos:line="86" pos:column="23"/></name><operator pos:line="86" pos:column="23">.<pos:position pos:line="86" pos:column="24"/></operator><name pos:line="86" pos:column="24">f_seq<pos:position pos:line="86" pos:column="29"/></name></name> <operator pos:line="86" pos:column="30">!=<pos:position pos:line="86" pos:column="32"/></operator> <name pos:line="86" pos:column="33">seq_nr<pos:position pos:line="86" pos:column="39"/></name></expr>)<pos:position pos:line="86" pos:column="40"/></condition><then pos:line="86" pos:column="40"> <block pos:line="86" pos:column="41">{
      <comment type="block" pos:line="87" pos:column="7">/* FIXME: Implement sequence number handling */</comment>
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">ERROR<pos:position pos:line="88" pos:column="12"/></name><argument_list pos:line="88" pos:column="12">(<argument><expr><name pos:line="88" pos:column="13">PLUGIN_NAME<pos:position pos:line="88" pos:column="24"/></name> <literal type="string" pos:line="88" pos:column="25">": Unexpected sequence number (Was: %d, expected: %d)"<pos:position pos:line="88" pos:column="79"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="89" pos:column="13">p_resp<pos:position pos:line="89" pos:column="19"/></name><operator pos:line="89" pos:column="19">-&gt;<pos:position pos:line="89" pos:column="24"/></operator><name pos:line="89" pos:column="21">header<pos:position pos:line="89" pos:column="27"/></name><operator pos:line="89" pos:column="27">.<pos:position pos:line="89" pos:column="28"/></operator><name pos:line="89" pos:column="28">f_seq<pos:position pos:line="89" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="35">p_req<pos:position pos:line="89" pos:column="40"/></name><operator pos:line="89" pos:column="40">-&gt;<pos:position pos:line="89" pos:column="45"/></operator><name pos:line="89" pos:column="42">header<pos:position pos:line="89" pos:column="48"/></name><operator pos:line="89" pos:column="48">.<pos:position pos:line="89" pos:column="49"/></operator><name pos:line="89" pos:column="49">f_seq<pos:position pos:line="89" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="56"/></expr_stmt>
      <return pos:line="90" pos:column="7">return <expr><name pos:line="90" pos:column="14">CHRONY_RC_FAIL<pos:position pos:line="90" pos:column="28"/></name></expr>;<pos:position pos:line="90" pos:column="29"/></return>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name><name pos:line="92" pos:column="9">p_resp<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">-&gt;<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="17">header<pos:position pos:line="92" pos:column="23"/></name><operator pos:line="92" pos:column="23">.<pos:position pos:line="92" pos:column="24"/></operator><name pos:line="92" pos:column="24">f_cmd<pos:position pos:line="92" pos:column="29"/></name></name> <operator pos:line="92" pos:column="30">!=<pos:position pos:line="92" pos:column="32"/></operator> <name><name pos:line="92" pos:column="33">p_req<pos:position pos:line="92" pos:column="38"/></name><operator pos:line="92" pos:column="38">-&gt;<pos:position pos:line="92" pos:column="43"/></operator><name pos:line="92" pos:column="40">header<pos:position pos:line="92" pos:column="46"/></name><operator pos:line="92" pos:column="46">.<pos:position pos:line="92" pos:column="47"/></operator><name pos:line="92" pos:column="47">f_cmd<pos:position pos:line="92" pos:column="52"/></name></name></expr>)<pos:position pos:line="92" pos:column="53"/></condition><then pos:line="92" pos:column="53"> <block pos:line="92" pos:column="54">{
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">ERROR<pos:position pos:line="93" pos:column="12"/></name><argument_list pos:line="93" pos:column="12">(<argument><expr><name pos:line="93" pos:column="13">PLUGIN_NAME<pos:position pos:line="93" pos:column="24"/></name> <literal type="string" pos:line="93" pos:column="25">": Wrong reply command (Was: %d, expected: %d)"<pos:position pos:line="93" pos:column="72"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="94" pos:column="13">p_resp<pos:position pos:line="94" pos:column="19"/></name><operator pos:line="94" pos:column="19">-&gt;<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="21">header<pos:position pos:line="94" pos:column="27"/></name><operator pos:line="94" pos:column="27">.<pos:position pos:line="94" pos:column="28"/></operator><name pos:line="94" pos:column="28">f_cmd<pos:position pos:line="94" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="35">p_req<pos:position pos:line="94" pos:column="40"/></name><operator pos:line="94" pos:column="40">-&gt;<pos:position pos:line="94" pos:column="45"/></operator><name pos:line="94" pos:column="42">header<pos:position pos:line="94" pos:column="48"/></name><operator pos:line="94" pos:column="48">.<pos:position pos:line="94" pos:column="49"/></operator><name pos:line="94" pos:column="49">f_cmd<pos:position pos:line="94" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="56"/></expr_stmt>
      <return pos:line="95" pos:column="7">return <expr><name pos:line="95" pos:column="14">CHRONY_RC_FAIL<pos:position pos:line="95" pos:column="28"/></name></expr>;<pos:position pos:line="95" pos:column="29"/></return>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>

    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><call><name pos:line="98" pos:column="9">ntohs<pos:position pos:line="98" pos:column="14"/></name><argument_list pos:line="98" pos:column="14">(<argument><expr><name><name pos:line="98" pos:column="15">p_resp<pos:position pos:line="98" pos:column="21"/></name><operator pos:line="98" pos:column="21">-&gt;<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="23">header<pos:position pos:line="98" pos:column="29"/></name><operator pos:line="98" pos:column="29">.<pos:position pos:line="98" pos:column="30"/></operator><name pos:line="98" pos:column="30">f_reply<pos:position pos:line="98" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="38"/></argument_list></call> <operator pos:line="98" pos:column="39">!=<pos:position pos:line="98" pos:column="41"/></operator> <name pos:line="98" pos:column="42">resp_code<pos:position pos:line="98" pos:column="51"/></name></expr>)<pos:position pos:line="98" pos:column="52"/></condition><then pos:line="98" pos:column="52"> <block pos:line="98" pos:column="53">{
      <expr_stmt><expr><call><name pos:line="99" pos:column="7">ERROR<pos:position pos:line="99" pos:column="12"/></name><argument_list pos:line="99" pos:column="12">(<argument><expr><name pos:line="99" pos:column="13">PLUGIN_NAME<pos:position pos:line="99" pos:column="24"/></name> <literal type="string" pos:line="99" pos:column="25">": Wrong reply code (Was: %d, expected: %d)"<pos:position pos:line="99" pos:column="69"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="100" pos:column="13">ntohs<pos:position pos:line="100" pos:column="18"/></name><argument_list pos:line="100" pos:column="18">(<argument><expr><name><name pos:line="100" pos:column="19">p_resp<pos:position pos:line="100" pos:column="25"/></name><operator pos:line="100" pos:column="25">-&gt;<pos:position pos:line="100" pos:column="30"/></operator><name pos:line="100" pos:column="27">header<pos:position pos:line="100" pos:column="33"/></name><operator pos:line="100" pos:column="33">.<pos:position pos:line="100" pos:column="34"/></operator><name pos:line="100" pos:column="34">f_reply<pos:position pos:line="100" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="100" pos:column="44">resp_code<pos:position pos:line="100" pos:column="53"/></name></expr></argument>)<pos:position pos:line="100" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="55"/></expr_stmt>
      <return pos:line="101" pos:column="7">return <expr><name pos:line="101" pos:column="14">CHRONY_RC_FAIL<pos:position pos:line="101" pos:column="28"/></name></expr>;<pos:position pos:line="101" pos:column="29"/></return>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if>

    <switch pos:line="104" pos:column="5">switch <condition pos:line="104" pos:column="12">(<expr><name><name pos:line="104" pos:column="13">p_resp<pos:position pos:line="104" pos:column="19"/></name><operator pos:line="104" pos:column="19">-&gt;<pos:position pos:line="104" pos:column="24"/></operator><name pos:line="104" pos:column="21">header<pos:position pos:line="104" pos:column="27"/></name><operator pos:line="104" pos:column="27">.<pos:position pos:line="104" pos:column="28"/></operator><name pos:line="104" pos:column="28">f_status<pos:position pos:line="104" pos:column="36"/></name></name></expr>)<pos:position pos:line="104" pos:column="37"/></condition> <block pos:line="104" pos:column="38">{
    <case pos:line="105" pos:column="5">case <expr><name pos:line="105" pos:column="10">STT_SUCCESS<pos:position pos:line="105" pos:column="21"/></name></expr>:<pos:position pos:line="105" pos:column="22"/></case>
      <expr_stmt><expr><call><name pos:line="106" pos:column="7">DEBUG<pos:position pos:line="106" pos:column="12"/></name><argument_list pos:line="106" pos:column="12">(<argument><expr><name pos:line="106" pos:column="13">PLUGIN_NAME<pos:position pos:line="106" pos:column="24"/></name> <literal type="string" pos:line="106" pos:column="25">": Reply packet status STT_SUCCESS"<pos:position pos:line="106" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="62"/></expr_stmt>
      <break pos:line="107" pos:column="7">break;<pos:position pos:line="107" pos:column="13"/></break>
    <default pos:line="108" pos:column="5">default:<pos:position pos:line="108" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="109" pos:column="7">ERROR<pos:position pos:line="109" pos:column="12"/></name><argument_list pos:line="109" pos:column="12">(<argument><expr><name pos:line="109" pos:column="13">PLUGIN_NAME<pos:position pos:line="109" pos:column="24"/></name>
            <literal type="string" pos:line="110" pos:column="13">": Reply packet contains error status: %d (expected: %d)"<pos:position pos:line="110" pos:column="70"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="111" pos:column="13">p_resp<pos:position pos:line="111" pos:column="19"/></name><operator pos:line="111" pos:column="19">-&gt;<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="21">header<pos:position pos:line="111" pos:column="27"/></name><operator pos:line="111" pos:column="27">.<pos:position pos:line="111" pos:column="28"/></operator><name pos:line="111" pos:column="28">f_status<pos:position pos:line="111" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="38">STT_SUCCESS<pos:position pos:line="111" pos:column="49"/></name></expr></argument>)<pos:position pos:line="111" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="51"/></expr_stmt>
      <return pos:line="112" pos:column="7">return <expr><name pos:line="112" pos:column="14">CHRONY_RC_FAIL<pos:position pos:line="112" pos:column="28"/></name></expr>;<pos:position pos:line="112" pos:column="29"/></return>
    }<pos:position pos:line="113" pos:column="6"/></block></switch>

    <comment type="block" pos:line="115" pos:column="5">/* Good result */</comment>
    <return pos:line="116" pos:column="5">return <expr><name pos:line="116" pos:column="12">CHRONY_RC_OK<pos:position pos:line="116" pos:column="24"/></name></expr>;<pos:position pos:line="116" pos:column="25"/></return>
  }<pos:position pos:line="117" pos:column="4"/></block> while <condition pos:line="117" pos:column="11">(<expr><literal type="number" pos:line="117" pos:column="12">0<pos:position pos:line="117" pos:column="13"/></literal></expr>)<pos:position pos:line="117" pos:column="14"/></condition>;<pos:position pos:line="117" pos:column="15"/></do>

  <comment type="block" pos:line="119" pos:column="3">/* Some error occured */</comment>
  <return pos:line="120" pos:column="3">return <expr><name pos:line="120" pos:column="10">CHRONY_RC_FAIL<pos:position pos:line="120" pos:column="24"/></name></expr>;<pos:position pos:line="120" pos:column="25"/></return>
}<pos:position pos:line="121" pos:column="2"/></block></function></unit>

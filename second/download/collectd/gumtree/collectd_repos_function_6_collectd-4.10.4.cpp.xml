<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_6_collectd-4.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">DIR<pos:position pos:line="1" pos:column="4"/></name> <modifier pos:line="1" pos:column="5">*<pos:position pos:line="1" pos:column="6"/></modifier></type>
<name pos:line="2" pos:column="1">opendir<pos:position pos:line="2" pos:column="8"/></name> <parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><specifier pos:line="2" pos:column="10">const<pos:position pos:line="2" pos:column="15"/></specifier> <name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">path<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">file_spec<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><name pos:line="4" pos:column="18">LT_FILENAME_MAX<pos:position pos:line="4" pos:column="33"/></name></expr>]<pos:position pos:line="4" pos:column="34"/></index></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">DIR<pos:position pos:line="5" pos:column="6"/></name> <modifier pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></modifier></type><name pos:line="5" pos:column="8">entry<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">path<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">!=<pos:position pos:line="7" pos:column="18"/></operator> <operator pos:line="7" pos:column="19">(<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">char<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></operator><operator pos:line="7" pos:column="26">)<pos:position pos:line="7" pos:column="27"/></operator> <literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">lt_strlcpy<pos:position pos:line="8" pos:column="17"/></name> <argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">file_spec<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">path<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="36">sizeof <name pos:line="8" pos:column="43">file_spec<pos:position pos:line="8" pos:column="52"/></name></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call> <operator pos:line="8" pos:column="54">&gt;=<pos:position pos:line="8" pos:column="59"/></operator> <sizeof pos:line="8" pos:column="57">sizeof <name pos:line="8" pos:column="64">file_spec<pos:position pos:line="8" pos:column="73"/></name></sizeof>
      <operator pos:line="9" pos:column="7">||<pos:position pos:line="9" pos:column="9"/></operator> <call><name pos:line="9" pos:column="10">lt_strlcat<pos:position pos:line="9" pos:column="20"/></name> <argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">file_spec<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="33">"\\"<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="39">sizeof <name pos:line="9" pos:column="46">file_spec<pos:position pos:line="9" pos:column="55"/></name></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call> <operator pos:line="9" pos:column="57">&gt;=<pos:position pos:line="9" pos:column="62"/></operator> <sizeof pos:line="9" pos:column="60">sizeof <name pos:line="9" pos:column="67">file_spec<pos:position pos:line="9" pos:column="76"/></name></sizeof></expr>)<pos:position pos:line="9" pos:column="77"/></condition><then pos:line="9" pos:column="77">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">DIR<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></operator><operator pos:line="10" pos:column="18">)<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="20">0<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="11" pos:column="3">entry<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <operator pos:line="11" pos:column="11">(<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">DIR<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></operator><operator pos:line="11" pos:column="17">)<pos:position pos:line="11" pos:column="18"/></operator> <call><name pos:line="11" pos:column="19">malloc<pos:position pos:line="11" pos:column="25"/></name> <argument_list pos:line="11" pos:column="26">(<argument><expr><sizeof pos:line="11" pos:column="27">sizeof<argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">DIR<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">entry<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">!=<pos:position pos:line="12" pos:column="15"/></operator> <operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">DIR<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator> <literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
    <block pos:line="13" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="14" pos:column="7">entry<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">firsttime<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">TRUE<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="15" pos:column="7">entry<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">hSearch<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <call><name pos:line="15" pos:column="24">FindFirstFile<pos:position pos:line="15" pos:column="37"/></name> <argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">file_spec<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="50">&amp;<pos:position pos:line="15" pos:column="55"/></operator><name><name pos:line="15" pos:column="51">entry<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">-&gt;<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="58">Win32FindData<pos:position pos:line="15" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>

      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name><name pos:line="17" pos:column="11">entry<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">hSearch<pos:position pos:line="17" pos:column="25"/></name></name> <operator pos:line="17" pos:column="26">==<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">INVALID_HANDLE_VALUE<pos:position pos:line="17" pos:column="49"/></name></expr>)<pos:position pos:line="17" pos:column="50"/></condition><then pos:line="17" pos:column="50">
	<block pos:line="18" pos:column="9">{
	  <if pos:line="19" pos:column="11">if <condition pos:line="19" pos:column="14">(<expr><call><name pos:line="19" pos:column="15">lt_strlcat<pos:position pos:line="19" pos:column="25"/></name> <argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">file_spec<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="38">"\\*.*"<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="47">sizeof <name pos:line="19" pos:column="54">file_spec<pos:position pos:line="19" pos:column="63"/></name></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call> <operator pos:line="19" pos:column="65">&lt;<pos:position pos:line="19" pos:column="69"/></operator> <sizeof pos:line="19" pos:column="67">sizeof <name pos:line="19" pos:column="74">file_spec<pos:position pos:line="19" pos:column="83"/></name></sizeof></expr>)<pos:position pos:line="19" pos:column="84"/></condition><then pos:line="19" pos:column="84">
	    <block pos:line="20" pos:column="13">{
	      <expr_stmt><expr><name><name pos:line="21" pos:column="15">entry<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">hSearch<pos:position pos:line="21" pos:column="29"/></name></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <call><name pos:line="21" pos:column="32">FindFirstFile<pos:position pos:line="21" pos:column="45"/></name> <argument_list pos:line="21" pos:column="46">(<argument><expr><name pos:line="21" pos:column="47">file_spec<pos:position pos:line="21" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="58">&amp;<pos:position pos:line="21" pos:column="63"/></operator><name><name pos:line="21" pos:column="59">entry<pos:position pos:line="21" pos:column="64"/></name><operator pos:line="21" pos:column="64">-&gt;<pos:position pos:line="21" pos:column="69"/></operator><name pos:line="21" pos:column="66">Win32FindData<pos:position pos:line="21" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="81"/></expr_stmt>
	    }<pos:position pos:line="22" pos:column="14"/></block></then></if>

	  <if pos:line="24" pos:column="11">if <condition pos:line="24" pos:column="14">(<expr><name><name pos:line="24" pos:column="15">entry<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">hSearch<pos:position pos:line="24" pos:column="29"/></name></name> <operator pos:line="24" pos:column="30">==<pos:position pos:line="24" pos:column="32"/></operator> <name pos:line="24" pos:column="33">INVALID_HANDLE_VALUE<pos:position pos:line="24" pos:column="53"/></name></expr>)<pos:position pos:line="24" pos:column="54"/></condition><then pos:line="24" pos:column="54">
	    <block pos:line="25" pos:column="13">{
	      <expr_stmt><expr><name pos:line="26" pos:column="15">entry<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <operator pos:line="26" pos:column="23">(<pos:position pos:line="26" pos:column="24"/></operator><call><name pos:line="26" pos:column="24">free<pos:position pos:line="26" pos:column="28"/></name> <argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">entry<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call><operator pos:line="26" pos:column="36">,<pos:position pos:line="26" pos:column="37"/></operator> <operator pos:line="26" pos:column="38">(<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="39">DIR<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">*<pos:position pos:line="26" pos:column="44"/></operator><operator pos:line="26" pos:column="44">)<pos:position pos:line="26" pos:column="45"/></operator> <literal type="number" pos:line="26" pos:column="46">0<pos:position pos:line="26" pos:column="47"/></literal><operator pos:line="26" pos:column="47">)<pos:position pos:line="26" pos:column="48"/></operator></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
	    }<pos:position pos:line="27" pos:column="14"/></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">entry<pos:position pos:line="31" pos:column="15"/></name></expr>;<pos:position pos:line="31" pos:column="16"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

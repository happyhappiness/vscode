<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1175_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">subscribers_thread<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">void<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">arg<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">mqtt_client_conf_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">conf<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">arg<pos:position pos:line="3" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">status<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="6" pos:column="5">conf<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">loop<pos:position pos:line="6" pos:column="15"/></name></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">1<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>

    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><name><name pos:line="8" pos:column="12">conf<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">loop<pos:position pos:line="8" pos:column="22"/></name></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition>
    <block pos:line="9" pos:column="5">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">status<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">mqtt_connect<pos:position pos:line="10" pos:column="30"/></name> <argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">conf<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">status<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">!=<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
        <block pos:line="12" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">sleep<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">1<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
            <continue pos:line="14" pos:column="13">continue;<pos:position pos:line="14" pos:column="22"/></continue>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="17" pos:column="9">/* The documentation says "0" would map to the default (1000ms), but
         * that does not work on some versions. */</comment>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">LIBMOSQUITTO_MAJOR<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">==<pos:position pos:line="19" pos:column="26"/></operator> <literal type="number" pos:line="19" pos:column="27">0<pos:position pos:line="19" pos:column="28"/></literal></expr></cpp:if>
        <expr_stmt><expr><name pos:line="20" pos:column="9">status<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">mosquitto_loop<pos:position pos:line="20" pos:column="32"/></name> <argument_list pos:line="20" pos:column="33">(<argument><expr><name><name pos:line="20" pos:column="34">conf<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">mosq<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>, <comment type="block" pos:line="20" pos:column="46">/* timeout = */</comment> <argument><expr><literal type="number" pos:line="20" pos:column="62">1000<pos:position pos:line="20" pos:column="66"/></literal></expr></argument> <comment type="block" pos:line="20" pos:column="67">/* ms */</comment>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="77"/></expr_stmt>
<cpp:else pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">else<pos:position pos:line="21" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="22" pos:column="9">status<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">mosquitto_loop<pos:position pos:line="22" pos:column="32"/></name> <argument_list pos:line="22" pos:column="33">(<argument><expr><name><name pos:line="22" pos:column="34">conf<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">mosq<pos:position pos:line="22" pos:column="44"/></name></name></expr></argument>,
                <comment type="block" pos:line="23" pos:column="17">/* timeout[ms] = */</comment> <argument><expr><literal type="number" pos:line="23" pos:column="37">1000<pos:position pos:line="23" pos:column="41"/></literal></expr></argument>,
                <comment type="block" pos:line="24" pos:column="17">/* max_packets = */</comment>  <argument><expr><literal type="number" pos:line="24" pos:column="38">100<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">status<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">==<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">MOSQ_ERR_CONN_LOST<pos:position pos:line="26" pos:column="41"/></name></expr>)<pos:position pos:line="26" pos:column="42"/></condition><then pos:line="26" pos:column="42">
        <block pos:line="27" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">conf<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">connected<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <literal type="number" pos:line="28" pos:column="31">0<pos:position pos:line="28" pos:column="32"/></literal></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
            <continue pos:line="29" pos:column="13">continue;<pos:position pos:line="29" pos:column="22"/></continue>
        }<pos:position pos:line="30" pos:column="10"/></block></then>
        <elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><name pos:line="31" pos:column="18">status<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">!=<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="28">MOSQ_ERR_SUCCESS<pos:position pos:line="31" pos:column="44"/></name></expr>)<pos:position pos:line="31" pos:column="45"/></condition><then pos:line="31" pos:column="45">
        <block pos:line="32" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">ERROR<pos:position pos:line="33" pos:column="18"/></name> <argument_list pos:line="33" pos:column="19">(<argument><expr><literal type="string" pos:line="33" pos:column="20">"mqtt plugin: mosquitto_loop failed: %s"<pos:position pos:line="33" pos:column="60"/></literal></expr></argument>,
                    <argument><expr><call><name pos:line="34" pos:column="21">mosquitto_strerror<pos:position pos:line="34" pos:column="39"/></name> <argument_list pos:line="34" pos:column="40">(<argument><expr><name pos:line="34" pos:column="41">status<pos:position pos:line="34" pos:column="47"/></name></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">mosquitto_destroy<pos:position pos:line="35" pos:column="30"/></name> <argument_list pos:line="35" pos:column="31">(<argument><expr><name><name pos:line="35" pos:column="32">conf<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">-&gt;<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="38">mosq<pos:position pos:line="35" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">conf<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">mosq<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">NULL<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">conf<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">connected<pos:position pos:line="37" pos:column="28"/></name></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <literal type="number" pos:line="37" pos:column="31">0<pos:position pos:line="37" pos:column="32"/></literal></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>
            <continue pos:line="38" pos:column="13">continue;<pos:position pos:line="38" pos:column="22"/></continue>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><call><name pos:line="41" pos:column="9">DEBUG<pos:position pos:line="41" pos:column="14"/></name> <argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="string" pos:line="41" pos:column="16">"mqtt plugin: mosquitto_loop succeeded."<pos:position pos:line="41" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></while> <comment type="block" pos:line="42" pos:column="7">/* while (conf-&gt;loop) */</comment>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">pthread_exit<pos:position pos:line="44" pos:column="17"/></name> <argument_list pos:line="44" pos:column="18">(<argument><expr><literal type="number" pos:line="44" pos:column="19">0<pos:position pos:line="44" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

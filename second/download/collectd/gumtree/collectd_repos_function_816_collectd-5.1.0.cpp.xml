<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_816_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fc_create<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">type<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">oconfig_item_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ci<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">void<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier><modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">user_data<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">pfc_user_data_t<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">data<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ret<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">dTHX<pos:position pos:line="7" pos:column="13"/></name></expr>;<pos:position pos:line="7" pos:column="14"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">NULL<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">perl_threads<pos:position pos:line="9" pos:column="33"/></name></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">NULL<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">aTHX<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <block pos:line="12" pos:column="27">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">c_ithread_t<pos:position pos:line="13" pos:column="28"/></name> <modifier pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></modifier></type><name pos:line="13" pos:column="30">t<pos:position pos:line="13" pos:column="31"/></name> <init pos:line="13" pos:column="32">= <expr><name pos:line="13" pos:column="34">NULL<pos:position pos:line="13" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="15" pos:column="17">pthread_mutex_lock<pos:position pos:line="15" pos:column="35"/></name> <argument_list pos:line="15" pos:column="36">(<argument><expr><operator pos:line="15" pos:column="37">&amp;<pos:position pos:line="15" pos:column="42"/></operator><name><name pos:line="15" pos:column="38">perl_threads<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">-&gt;<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="52">mutex<pos:position pos:line="15" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">t<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <call><name pos:line="16" pos:column="21">c_ithread_create<pos:position pos:line="16" pos:column="37"/></name> <argument_list pos:line="16" pos:column="38">(<argument><expr><name><name pos:line="16" pos:column="39">perl_threads<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">-&gt;<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="53">head<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">-&gt;<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="59">interp<pos:position pos:line="16" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">pthread_mutex_unlock<pos:position pos:line="17" pos:column="37"/></name> <argument_list pos:line="17" pos:column="38">(<argument><expr><operator pos:line="17" pos:column="39">&amp;<pos:position pos:line="17" pos:column="44"/></operator><name><name pos:line="17" pos:column="40">perl_threads<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">-&gt;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="54">mutex<pos:position pos:line="17" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>

		<expr_stmt><expr><name pos:line="19" pos:column="17">aTHX<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name><name pos:line="19" pos:column="24">t<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">interp<pos:position pos:line="19" pos:column="33"/></name></name></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">log_debug<pos:position pos:line="22" pos:column="18"/></name> <argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="string" pos:line="22" pos:column="20">"fc_create: c_ithread: interp = %p (active threads: %i)"<pos:position pos:line="22" pos:column="76"/></literal></expr></argument>,
			<argument><expr><name pos:line="23" pos:column="25">aTHX<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="31">perl_threads<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">number_of_threads<pos:position pos:line="23" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">(<pos:position pos:line="25" pos:column="14"/></operator><literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal> <operator pos:line="25" pos:column="16">!=<pos:position pos:line="25" pos:column="18"/></operator> <name><name pos:line="25" pos:column="19">ci<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">values_num<pos:position pos:line="25" pos:column="33"/></name></name><operator pos:line="25" pos:column="33">)<pos:position pos:line="25" pos:column="34"/></operator>
			<operator pos:line="26" pos:column="25">||<pos:position pos:line="26" pos:column="27"/></operator> <operator pos:line="26" pos:column="28">(<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">OCONFIG_TYPE_STRING<pos:position pos:line="26" pos:column="48"/></name> <operator pos:line="26" pos:column="49">!=<pos:position pos:line="26" pos:column="51"/></operator> <name><name pos:line="26" pos:column="52">ci<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">-&gt;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="56">values<pos:position pos:line="26" pos:column="62"/></name><index pos:line="26" pos:column="62">[<expr><literal type="number" pos:line="26" pos:column="63">0<pos:position pos:line="26" pos:column="64"/></literal></expr>]<pos:position pos:line="26" pos:column="65"/></index></name><operator pos:line="26" pos:column="65">.<pos:position pos:line="26" pos:column="66"/></operator><name pos:line="26" pos:column="66">type<pos:position pos:line="26" pos:column="70"/></name><operator pos:line="26" pos:column="70">)<pos:position pos:line="26" pos:column="71"/></operator></expr>)<pos:position pos:line="26" pos:column="72"/></condition><then pos:line="26" pos:column="72"> <block pos:line="26" pos:column="73">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">log_warn<pos:position pos:line="27" pos:column="25"/></name> <argument_list pos:line="27" pos:column="26">(<argument><expr><literal type="string" pos:line="27" pos:column="27">"A \"%s\" block expects a single string argument."<pos:position pos:line="27" pos:column="77"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="28" pos:column="33">(<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">FC_MATCH<pos:position pos:line="28" pos:column="42"/></name> <operator pos:line="28" pos:column="43">==<pos:position pos:line="28" pos:column="45"/></operator> <name pos:line="28" pos:column="46">type<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">)<pos:position pos:line="28" pos:column="51"/></operator></expr> ?<pos:position pos:line="28" pos:column="53"/></condition><then pos:line="28" pos:column="53"> <expr><literal type="string" pos:line="28" pos:column="54">"Match"<pos:position pos:line="28" pos:column="61"/></literal></expr> <pos:position pos:line="28" pos:column="62"/></then><else pos:line="28" pos:column="62">: <expr><literal type="string" pos:line="28" pos:column="64">"Target"<pos:position pos:line="28" pos:column="72"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="28" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="74"/></expr_stmt>
		<return pos:line="29" pos:column="17">return <expr><operator pos:line="29" pos:column="24">-<pos:position pos:line="29" pos:column="25"/></operator><literal type="number" pos:line="29" pos:column="25">1<pos:position pos:line="29" pos:column="26"/></literal></expr>;<pos:position pos:line="29" pos:column="27"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="32" pos:column="9">data<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">pfc_user_data_t<pos:position pos:line="32" pos:column="32"/></name> <operator pos:line="32" pos:column="33">*<pos:position pos:line="32" pos:column="34"/></operator><operator pos:line="32" pos:column="34">)<pos:position pos:line="32" pos:column="35"/></operator><call><name pos:line="32" pos:column="35">smalloc<pos:position pos:line="32" pos:column="42"/></name> <argument_list pos:line="32" pos:column="43">(<argument><expr><sizeof pos:line="32" pos:column="44">sizeof <argument_list pos:line="32" pos:column="51">(<argument><expr><operator pos:line="32" pos:column="52">*<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="53">data<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">data<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">name<pos:position pos:line="33" pos:column="19"/></name></name>      <operator pos:line="33" pos:column="25">=<pos:position pos:line="33" pos:column="26"/></operator> <call><name pos:line="33" pos:column="27">sstrdup<pos:position pos:line="33" pos:column="34"/></name> <argument_list pos:line="33" pos:column="35">(<argument><expr><name><name pos:line="33" pos:column="36">ci<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">values<pos:position pos:line="33" pos:column="46"/></name><index pos:line="33" pos:column="46">[<expr><literal type="number" pos:line="33" pos:column="47">0<pos:position pos:line="33" pos:column="48"/></literal></expr>]<pos:position pos:line="33" pos:column="49"/></index></name><operator pos:line="33" pos:column="49">.<pos:position pos:line="33" pos:column="50"/></operator><name><name pos:line="33" pos:column="50">value<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">.<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="56">string<pos:position pos:line="33" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">data<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">user_data<pos:position pos:line="34" pos:column="24"/></name></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <call><name pos:line="34" pos:column="27">newSV<pos:position pos:line="34" pos:column="32"/></name> <argument_list pos:line="34" pos:column="33">(<argument><expr><literal type="number" pos:line="34" pos:column="34">0<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><name pos:line="36" pos:column="9">ret<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <macro><name pos:line="36" pos:column="15">fc_call<pos:position pos:line="36" pos:column="22"/></name> <argument_list pos:line="36" pos:column="23">(<argument pos:line="36" pos:column="24">aTHX_ type<pos:position pos:line="36" pos:column="34"/></argument>, <argument pos:line="36" pos:column="36">FC_CB_CREATE<pos:position pos:line="36" pos:column="48"/></argument>, <argument pos:line="36" pos:column="50">data<pos:position pos:line="36" pos:column="54"/></argument>, <argument pos:line="36" pos:column="56">ci<pos:position pos:line="36" pos:column="58"/></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></macro></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><literal type="number" pos:line="38" pos:column="13">0<pos:position pos:line="38" pos:column="14"/></literal> <operator pos:line="38" pos:column="15">!=<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">ret<pos:position pos:line="38" pos:column="21"/></name></expr>)<pos:position pos:line="38" pos:column="22"/></condition><then pos:line="38" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">PFC_USER_DATA_FREE<pos:position pos:line="39" pos:column="35"/></name> <argument_list pos:line="39" pos:column="36">(<argument><expr><name pos:line="39" pos:column="37">data<pos:position pos:line="39" pos:column="41"/></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt></block></then>
	<else pos:line="40" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><operator pos:line="41" pos:column="17">*<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">user_data<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">=<pos:position pos:line="41" pos:column="29"/></operator> <name pos:line="41" pos:column="30">data<pos:position pos:line="41" pos:column="34"/></name></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt></block></else></if>
	<return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">ret<pos:position pos:line="42" pos:column="19"/></name></expr>;<pos:position pos:line="42" pos:column="20"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

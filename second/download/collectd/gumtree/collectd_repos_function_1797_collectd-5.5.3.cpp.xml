<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1797_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sockent_client_connect<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">sockent_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">se<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">c_complain_t<pos:position pos:line="3" pos:column="28"/></name></type> <name pos:line="3" pos:column="29">complaint<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><name pos:line="3" pos:column="41">C_COMPLAIN_INIT_STATIC<pos:position pos:line="3" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="64"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">sockent_client<pos:position pos:line="5" pos:column="30"/></name></name> <modifier pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></modifier></type><name pos:line="5" pos:column="32">client<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">addrinfo<pos:position pos:line="6" pos:column="24"/></name></name></type>  <name pos:line="6" pos:column="26">ai_hints<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">addrinfo<pos:position pos:line="7" pos:column="24"/></name></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">ai_list<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><name pos:line="7" pos:column="36">NULL<pos:position pos:line="7" pos:column="40"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="43">ai_ptr<pos:position pos:line="7" pos:column="49"/></name></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">status<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">_Bool<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">reconnect<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><literal type="number" pos:line="9" pos:column="27">0<pos:position pos:line="9" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">cdtime_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">now<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">se<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">==<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">)<pos:position pos:line="12" pos:column="25"/></operator> <operator pos:line="12" pos:column="26">||<pos:position pos:line="12" pos:column="28"/></operator> <operator pos:line="12" pos:column="29">(<pos:position pos:line="12" pos:column="30"/></operator><name><name pos:line="12" pos:column="30">se<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">type<pos:position pos:line="12" pos:column="38"/></name></name> <operator pos:line="12" pos:column="39">!=<pos:position pos:line="12" pos:column="41"/></operator> <name pos:line="12" pos:column="42">SOCKENT_TYPE_CLIENT<pos:position pos:line="12" pos:column="61"/></name><operator pos:line="12" pos:column="61">)<pos:position pos:line="12" pos:column="62"/></operator></expr>)<pos:position pos:line="12" pos:column="63"/></condition><then pos:line="12" pos:column="63">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">EINVAL<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">)<pos:position pos:line="13" pos:column="32"/></operator></expr>;<pos:position pos:line="13" pos:column="33"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">client<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <operator pos:line="15" pos:column="18">&amp;<pos:position pos:line="15" pos:column="23"/></operator><name><name pos:line="15" pos:column="19">se<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">data<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">.<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">client<pos:position pos:line="15" pos:column="34"/></name></name></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">now<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">cdtime<pos:position pos:line="17" pos:column="21"/></name> <argument_list pos:line="17" pos:column="22">()<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">client<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">resolve_interval<pos:position pos:line="18" pos:column="37"/></name></name> <operator pos:line="18" pos:column="38">!=<pos:position pos:line="18" pos:column="40"/></operator> <literal type="number" pos:line="18" pos:column="41">0<pos:position pos:line="18" pos:column="42"/></literal> <operator pos:line="18" pos:column="43">&amp;&amp;<pos:position pos:line="18" pos:column="53"/></operator> <name><name pos:line="18" pos:column="46">client<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">next_resolve_reconnect<pos:position pos:line="18" pos:column="76"/></name></name> <operator pos:line="18" pos:column="77">&lt;<pos:position pos:line="18" pos:column="81"/></operator> <name pos:line="18" pos:column="79">now<pos:position pos:line="18" pos:column="82"/></name></expr>)<pos:position pos:line="18" pos:column="83"/></condition><then pos:line="18" pos:column="83"> <block pos:line="18" pos:column="84">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">DEBUG<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><literal type="string" pos:line="19" pos:column="23">"network plugin: Reconnecting socket, resolve_interval = %lf, next_resolve_reconnect = %lf"<pos:position pos:line="19" pos:column="114"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="20" pos:column="25">CDTIME_T_TO_DOUBLE<pos:position pos:line="20" pos:column="43"/></name><argument_list pos:line="20" pos:column="43">(<argument><expr><name><name pos:line="20" pos:column="44">client<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">-&gt;<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="52">resolve_interval<pos:position pos:line="20" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="71">CDTIME_T_TO_DOUBLE<pos:position pos:line="20" pos:column="89"/></name><argument_list pos:line="20" pos:column="89">(<argument><expr><name><name pos:line="20" pos:column="90">client<pos:position pos:line="20" pos:column="96"/></name><operator pos:line="20" pos:column="96">-&gt;<pos:position pos:line="20" pos:column="101"/></operator><name pos:line="20" pos:column="98">next_resolve_reconnect<pos:position pos:line="20" pos:column="120"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="121"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="123"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">reconnect<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="29">1<pos:position pos:line="21" pos:column="30"/></literal></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">client<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">fd<pos:position pos:line="24" pos:column="23"/></name></name> <operator pos:line="24" pos:column="24">&gt;=<pos:position pos:line="24" pos:column="29"/></operator> <literal type="number" pos:line="24" pos:column="27">0<pos:position pos:line="24" pos:column="28"/></literal> <operator pos:line="24" pos:column="29">&amp;&amp;<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="32">!<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">reconnect<pos:position pos:line="24" pos:column="42"/></name></expr>)<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43"> <comment type="block" pos:line="24" pos:column="44">/* already connected and not stale*/</comment>
		<block type="pseudo"><return pos:line="25" pos:column="17">return <expr><operator pos:line="25" pos:column="24">(<pos:position pos:line="25" pos:column="25"/></operator><literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal><operator pos:line="25" pos:column="26">)<pos:position pos:line="25" pos:column="27"/></operator></expr>;<pos:position pos:line="25" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="27" pos:column="9">memset<pos:position pos:line="27" pos:column="15"/></name> <argument_list pos:line="27" pos:column="16">(<argument><expr><operator pos:line="27" pos:column="17">&amp;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="18">ai_hints<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="28">0<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="31">sizeof <argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">ai_hints<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef<pos:position pos:line="28" pos:column="7"/></cpp:directive> <name pos:line="28" pos:column="8">AI_ADDRCONFIG<pos:position pos:line="28" pos:column="21"/></name></cpp:ifdef>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">ai_hints<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">ai_flags<pos:position pos:line="29" pos:column="26"/></name></name> <operator pos:line="29" pos:column="27">|=<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="30">AI_ADDRCONFIG<pos:position pos:line="29" pos:column="43"/></name></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">ai_hints<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">ai_family<pos:position pos:line="31" pos:column="27"/></name></name>   <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="32">AF_UNSPEC<pos:position pos:line="31" pos:column="41"/></name></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">ai_hints<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">.<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">ai_socktype<pos:position pos:line="32" pos:column="29"/></name></name> <operator pos:line="32" pos:column="30">=<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="32">SOCK_DGRAM<pos:position pos:line="32" pos:column="42"/></name></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">ai_hints<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">.<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">ai_protocol<pos:position pos:line="33" pos:column="29"/></name></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <name pos:line="33" pos:column="32">IPPROTO_UDP<pos:position pos:line="33" pos:column="43"/></name></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><name pos:line="35" pos:column="9">status<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <call><name pos:line="35" pos:column="18">getaddrinfo<pos:position pos:line="35" pos:column="29"/></name> <argument_list pos:line="35" pos:column="30">(<argument><expr><name><name pos:line="35" pos:column="31">se<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">-&gt;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="35">node<pos:position pos:line="35" pos:column="39"/></name></name></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="36" pos:column="25">(<pos:position pos:line="36" pos:column="26"/></operator><name><name pos:line="36" pos:column="26">se<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">-&gt;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="30">service<pos:position pos:line="36" pos:column="37"/></name></name> <operator pos:line="36" pos:column="38">!=<pos:position pos:line="36" pos:column="40"/></operator> <name pos:line="36" pos:column="41">NULL<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">)<pos:position pos:line="36" pos:column="46"/></operator></expr> ?<pos:position pos:line="36" pos:column="48"/></condition><then pos:line="36" pos:column="48"> <expr><name><name pos:line="36" pos:column="49">se<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">-&gt;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="53">service<pos:position pos:line="36" pos:column="60"/></name></name></expr> <pos:position pos:line="36" pos:column="61"/></then><else pos:line="36" pos:column="61">: <expr><name pos:line="36" pos:column="63">NET_DEFAULT_PORT<pos:position pos:line="36" pos:column="79"/></name></expr></else></ternary></expr></argument>,
			<argument><expr><operator pos:line="37" pos:column="25">&amp;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="26">ai_hints<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="36">&amp;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="37">ai_list<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">status<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">!=<pos:position pos:line="38" pos:column="22"/></operator> <literal type="number" pos:line="38" pos:column="23">0<pos:position pos:line="38" pos:column="24"/></literal></expr>)<pos:position pos:line="38" pos:column="25"/></condition><then pos:line="38" pos:column="25">
	<block pos:line="39" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">c_complain<pos:position pos:line="40" pos:column="27"/></name> <argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">LOG_ERR<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="38">&amp;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="39">complaint<pos:position pos:line="40" pos:column="48"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="41" pos:column="33">"network plugin: getaddrinfo (%s, %s) failed: %s"<pos:position pos:line="41" pos:column="82"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="42" pos:column="33">(<pos:position pos:line="42" pos:column="34"/></operator><name><name pos:line="42" pos:column="34">se<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">-&gt;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="38">node<pos:position pos:line="42" pos:column="42"/></name></name> <operator pos:line="42" pos:column="43">==<pos:position pos:line="42" pos:column="45"/></operator> <name pos:line="42" pos:column="46">NULL<pos:position pos:line="42" pos:column="50"/></name><operator pos:line="42" pos:column="50">)<pos:position pos:line="42" pos:column="51"/></operator></expr> ?<pos:position pos:line="42" pos:column="53"/></condition><then pos:line="42" pos:column="53"> <expr><literal type="string" pos:line="42" pos:column="54">"(null)"<pos:position pos:line="42" pos:column="62"/></literal></expr> <pos:position pos:line="42" pos:column="63"/></then><else pos:line="42" pos:column="63">: <expr><name><name pos:line="42" pos:column="65">se<pos:position pos:line="42" pos:column="67"/></name><operator pos:line="42" pos:column="67">-&gt;<pos:position pos:line="42" pos:column="72"/></operator><name pos:line="42" pos:column="69">node<pos:position pos:line="42" pos:column="73"/></name></name></expr></else></ternary></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="43" pos:column="33">(<pos:position pos:line="43" pos:column="34"/></operator><name><name pos:line="43" pos:column="34">se<pos:position pos:line="43" pos:column="36"/></name><operator pos:line="43" pos:column="36">-&gt;<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="38">service<pos:position pos:line="43" pos:column="45"/></name></name> <operator pos:line="43" pos:column="46">==<pos:position pos:line="43" pos:column="48"/></operator> <name pos:line="43" pos:column="49">NULL<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">)<pos:position pos:line="43" pos:column="54"/></operator></expr> ?<pos:position pos:line="43" pos:column="56"/></condition><then pos:line="43" pos:column="56"> <expr><literal type="string" pos:line="43" pos:column="57">"(null)"<pos:position pos:line="43" pos:column="65"/></literal></expr> <pos:position pos:line="43" pos:column="66"/></then><else pos:line="43" pos:column="66">: <expr><name><name pos:line="43" pos:column="68">se<pos:position pos:line="43" pos:column="70"/></name><operator pos:line="43" pos:column="70">-&gt;<pos:position pos:line="43" pos:column="75"/></operator><name pos:line="43" pos:column="72">service<pos:position pos:line="43" pos:column="79"/></name></name></expr></else></ternary></expr></argument>,
				<argument><expr><call><name pos:line="44" pos:column="33">gai_strerror<pos:position pos:line="44" pos:column="45"/></name> <argument_list pos:line="44" pos:column="46">(<argument><expr><name pos:line="44" pos:column="47">status<pos:position pos:line="44" pos:column="53"/></name></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
		<return pos:line="45" pos:column="17">return <expr><operator pos:line="45" pos:column="24">(<pos:position pos:line="45" pos:column="25"/></operator><operator pos:line="45" pos:column="25">-<pos:position pos:line="45" pos:column="26"/></operator><literal type="number" pos:line="45" pos:column="26">1<pos:position pos:line="45" pos:column="27"/></literal><operator pos:line="45" pos:column="27">)<pos:position pos:line="45" pos:column="28"/></operator></expr>;<pos:position pos:line="45" pos:column="29"/></return>
	}<pos:position pos:line="46" pos:column="10"/></block></then>
	<else pos:line="47" pos:column="9">else
	<block pos:line="48" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">c_release<pos:position pos:line="49" pos:column="26"/></name> <argument_list pos:line="49" pos:column="27">(<argument><expr><name pos:line="49" pos:column="28">LOG_NOTICE<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="40">&amp;<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="41">complaint<pos:position pos:line="49" pos:column="50"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="50" pos:column="33">"network plugin: Successfully resolved \"%s\"."<pos:position pos:line="50" pos:column="80"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="51" pos:column="33">se<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">-&gt;<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="37">node<pos:position pos:line="51" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></else></if>

	<for pos:line="54" pos:column="9">for <control pos:line="54" pos:column="13">(<init><expr><name pos:line="54" pos:column="14">ai_ptr<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">=<pos:position pos:line="54" pos:column="22"/></operator> <name pos:line="54" pos:column="23">ai_list<pos:position pos:line="54" pos:column="30"/></name></expr>;<pos:position pos:line="54" pos:column="31"/></init> <condition><expr><name pos:line="54" pos:column="32">ai_ptr<pos:position pos:line="54" pos:column="38"/></name> <operator pos:line="54" pos:column="39">!=<pos:position pos:line="54" pos:column="41"/></operator> <name pos:line="54" pos:column="42">NULL<pos:position pos:line="54" pos:column="46"/></name></expr>;<pos:position pos:line="54" pos:column="47"/></condition> <incr><expr><name pos:line="54" pos:column="48">ai_ptr<pos:position pos:line="54" pos:column="54"/></name> <operator pos:line="54" pos:column="55">=<pos:position pos:line="54" pos:column="56"/></operator> <name><name pos:line="54" pos:column="57">ai_ptr<pos:position pos:line="54" pos:column="63"/></name><operator pos:line="54" pos:column="63">-&gt;<pos:position pos:line="54" pos:column="68"/></operator><name pos:line="54" pos:column="65">ai_next<pos:position pos:line="54" pos:column="72"/></name></name></expr></incr>)<pos:position pos:line="54" pos:column="73"/></control>
	<block pos:line="55" pos:column="9">{
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name><name pos:line="56" pos:column="21">client<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">-&gt;<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="29">fd<pos:position pos:line="56" pos:column="31"/></name></name> <operator pos:line="56" pos:column="32">&gt;=<pos:position pos:line="56" pos:column="37"/></operator> <literal type="number" pos:line="56" pos:column="35">0<pos:position pos:line="56" pos:column="36"/></literal></expr>)<pos:position pos:line="56" pos:column="37"/></condition><then pos:line="56" pos:column="37"> <comment type="block" pos:line="56" pos:column="38">/* when we reconnect */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="25">sockent_client_disconnect<pos:position pos:line="57" pos:column="50"/></name><argument_list pos:line="57" pos:column="50">(<argument><expr><name pos:line="57" pos:column="51">se<pos:position pos:line="57" pos:column="53"/></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="55"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name><name pos:line="59" pos:column="17">client<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">-&gt;<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="25">fd<pos:position pos:line="59" pos:column="27"/></name></name> <operator pos:line="59" pos:column="28">=<pos:position pos:line="59" pos:column="29"/></operator> <call><name pos:line="59" pos:column="30">socket<pos:position pos:line="59" pos:column="36"/></name> <argument_list pos:line="59" pos:column="37">(<argument><expr><name><name pos:line="59" pos:column="38">ai_ptr<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">-&gt;<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="46">ai_family<pos:position pos:line="59" pos:column="55"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="60" pos:column="33">ai_ptr<pos:position pos:line="60" pos:column="39"/></name><operator pos:line="60" pos:column="39">-&gt;<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="41">ai_socktype<pos:position pos:line="60" pos:column="52"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="61" pos:column="33">ai_ptr<pos:position pos:line="61" pos:column="39"/></name><operator pos:line="61" pos:column="39">-&gt;<pos:position pos:line="61" pos:column="44"/></operator><name pos:line="61" pos:column="41">ai_protocol<pos:position pos:line="61" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="54"/></expr_stmt>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name><name pos:line="62" pos:column="21">client<pos:position pos:line="62" pos:column="27"/></name><operator pos:line="62" pos:column="27">-&gt;<pos:position pos:line="62" pos:column="32"/></operator><name pos:line="62" pos:column="29">fd<pos:position pos:line="62" pos:column="31"/></name></name> <operator pos:line="62" pos:column="32">&lt;<pos:position pos:line="62" pos:column="36"/></operator> <literal type="number" pos:line="62" pos:column="34">0<pos:position pos:line="62" pos:column="35"/></literal></expr>)<pos:position pos:line="62" pos:column="36"/></condition><then pos:line="62" pos:column="36">
		<block pos:line="63" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="64" pos:column="25">char<pos:position pos:line="64" pos:column="29"/></name></type> <name><name pos:line="64" pos:column="30">errbuf<pos:position pos:line="64" pos:column="36"/></name><index pos:line="64" pos:column="36">[<expr><literal type="number" pos:line="64" pos:column="37">1024<pos:position pos:line="64" pos:column="41"/></literal></expr>]<pos:position pos:line="64" pos:column="42"/></index></name></decl>;<pos:position pos:line="64" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="65" pos:column="25">ERROR<pos:position pos:line="65" pos:column="30"/></name> <argument_list pos:line="65" pos:column="31">(<argument><expr><literal type="string" pos:line="65" pos:column="32">"network plugin: socket(2) failed: %s"<pos:position pos:line="65" pos:column="70"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="66" pos:column="41">sstrerror<pos:position pos:line="66" pos:column="50"/></name> <argument_list pos:line="66" pos:column="51">(<argument><expr><name pos:line="66" pos:column="52">errno<pos:position pos:line="66" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="59">errbuf<pos:position pos:line="66" pos:column="65"/></name></expr></argument>,
						<argument><expr><sizeof pos:line="67" pos:column="49">sizeof <argument_list pos:line="67" pos:column="56">(<argument><expr><name pos:line="67" pos:column="57">errbuf<pos:position pos:line="67" pos:column="63"/></name></expr></argument>)<pos:position pos:line="67" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="67" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="67"/></expr_stmt>
			<continue pos:line="68" pos:column="25">continue;<pos:position pos:line="68" pos:column="34"/></continue>
		}<pos:position pos:line="69" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="71" pos:column="17">client<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">-&gt;<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="25">addr<pos:position pos:line="71" pos:column="29"/></name></name> <operator pos:line="71" pos:column="30">=<pos:position pos:line="71" pos:column="31"/></operator> <call><name pos:line="71" pos:column="32">malloc<pos:position pos:line="71" pos:column="38"/></name> <argument_list pos:line="71" pos:column="39">(<argument><expr><sizeof pos:line="71" pos:column="40">sizeof <argument_list pos:line="71" pos:column="47">(<argument><expr><operator pos:line="71" pos:column="48">*<pos:position pos:line="71" pos:column="49"/></operator><name><name pos:line="71" pos:column="49">client<pos:position pos:line="71" pos:column="55"/></name><operator pos:line="71" pos:column="55">-&gt;<pos:position pos:line="71" pos:column="60"/></operator><name pos:line="71" pos:column="57">addr<pos:position pos:line="71" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="64"/></expr_stmt>
		<if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name><name pos:line="72" pos:column="21">client<pos:position pos:line="72" pos:column="27"/></name><operator pos:line="72" pos:column="27">-&gt;<pos:position pos:line="72" pos:column="32"/></operator><name pos:line="72" pos:column="29">addr<pos:position pos:line="72" pos:column="33"/></name></name> <operator pos:line="72" pos:column="34">==<pos:position pos:line="72" pos:column="36"/></operator> <name pos:line="72" pos:column="37">NULL<pos:position pos:line="72" pos:column="41"/></name></expr>)<pos:position pos:line="72" pos:column="42"/></condition><then pos:line="72" pos:column="42">
		<block pos:line="73" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="74" pos:column="25">ERROR<pos:position pos:line="74" pos:column="30"/></name> <argument_list pos:line="74" pos:column="31">(<argument><expr><literal type="string" pos:line="74" pos:column="32">"network plugin: malloc failed."<pos:position pos:line="74" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="75" pos:column="25">close<pos:position pos:line="75" pos:column="30"/></name> <argument_list pos:line="75" pos:column="31">(<argument><expr><name><name pos:line="75" pos:column="32">client<pos:position pos:line="75" pos:column="38"/></name><operator pos:line="75" pos:column="38">-&gt;<pos:position pos:line="75" pos:column="43"/></operator><name pos:line="75" pos:column="40">fd<pos:position pos:line="75" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="76" pos:column="25">client<pos:position pos:line="76" pos:column="31"/></name><operator pos:line="76" pos:column="31">-&gt;<pos:position pos:line="76" pos:column="36"/></operator><name pos:line="76" pos:column="33">fd<pos:position pos:line="76" pos:column="35"/></name></name> <operator pos:line="76" pos:column="36">=<pos:position pos:line="76" pos:column="37"/></operator> <operator pos:line="76" pos:column="38">-<pos:position pos:line="76" pos:column="39"/></operator><literal type="number" pos:line="76" pos:column="39">1<pos:position pos:line="76" pos:column="40"/></literal></expr>;<pos:position pos:line="76" pos:column="41"/></expr_stmt>
			<continue pos:line="77" pos:column="25">continue;<pos:position pos:line="77" pos:column="34"/></continue>
		}<pos:position pos:line="78" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="80" pos:column="17">memset<pos:position pos:line="80" pos:column="23"/></name> <argument_list pos:line="80" pos:column="24">(<argument><expr><name><name pos:line="80" pos:column="25">client<pos:position pos:line="80" pos:column="31"/></name><operator pos:line="80" pos:column="31">-&gt;<pos:position pos:line="80" pos:column="36"/></operator><name pos:line="80" pos:column="33">addr<pos:position pos:line="80" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="39">0<pos:position pos:line="80" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="80" pos:column="42">sizeof <argument_list pos:line="80" pos:column="49">(<argument><expr><operator pos:line="80" pos:column="50">*<pos:position pos:line="80" pos:column="51"/></operator><name><name pos:line="80" pos:column="51">client<pos:position pos:line="80" pos:column="57"/></name><operator pos:line="80" pos:column="57">-&gt;<pos:position pos:line="80" pos:column="62"/></operator><name pos:line="80" pos:column="59">addr<pos:position pos:line="80" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="80" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="81" pos:column="17">assert<pos:position pos:line="81" pos:column="23"/></name> <argument_list pos:line="81" pos:column="24">(<argument><expr><sizeof pos:line="81" pos:column="25">sizeof <argument_list pos:line="81" pos:column="32">(<argument><expr><operator pos:line="81" pos:column="33">*<pos:position pos:line="81" pos:column="34"/></operator><name><name pos:line="81" pos:column="34">client<pos:position pos:line="81" pos:column="40"/></name><operator pos:line="81" pos:column="40">-&gt;<pos:position pos:line="81" pos:column="45"/></operator><name pos:line="81" pos:column="42">addr<pos:position pos:line="81" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="47"/></argument_list></sizeof> <operator pos:line="81" pos:column="48">&gt;=<pos:position pos:line="81" pos:column="53"/></operator> <name><name pos:line="81" pos:column="51">ai_ptr<pos:position pos:line="81" pos:column="57"/></name><operator pos:line="81" pos:column="57">-&gt;<pos:position pos:line="81" pos:column="62"/></operator><name pos:line="81" pos:column="59">ai_addrlen<pos:position pos:line="81" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">memcpy<pos:position pos:line="82" pos:column="23"/></name> <argument_list pos:line="82" pos:column="24">(<argument><expr><name><name pos:line="82" pos:column="25">client<pos:position pos:line="82" pos:column="31"/></name><operator pos:line="82" pos:column="31">-&gt;<pos:position pos:line="82" pos:column="36"/></operator><name pos:line="82" pos:column="33">addr<pos:position pos:line="82" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="39">ai_ptr<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">-&gt;<pos:position pos:line="82" pos:column="50"/></operator><name pos:line="82" pos:column="47">ai_addr<pos:position pos:line="82" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="56">ai_ptr<pos:position pos:line="82" pos:column="62"/></name><operator pos:line="82" pos:column="62">-&gt;<pos:position pos:line="82" pos:column="67"/></operator><name pos:line="82" pos:column="64">ai_addrlen<pos:position pos:line="82" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="83" pos:column="17">client<pos:position pos:line="83" pos:column="23"/></name><operator pos:line="83" pos:column="23">-&gt;<pos:position pos:line="83" pos:column="28"/></operator><name pos:line="83" pos:column="25">addrlen<pos:position pos:line="83" pos:column="32"/></name></name> <operator pos:line="83" pos:column="33">=<pos:position pos:line="83" pos:column="34"/></operator> <name><name pos:line="83" pos:column="35">ai_ptr<pos:position pos:line="83" pos:column="41"/></name><operator pos:line="83" pos:column="41">-&gt;<pos:position pos:line="83" pos:column="46"/></operator><name pos:line="83" pos:column="43">ai_addrlen<pos:position pos:line="83" pos:column="53"/></name></name></expr>;<pos:position pos:line="83" pos:column="54"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="85" pos:column="17">network_set_ttl<pos:position pos:line="85" pos:column="32"/></name> <argument_list pos:line="85" pos:column="33">(<argument><expr><name pos:line="85" pos:column="34">se<pos:position pos:line="85" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="38">ai_ptr<pos:position pos:line="85" pos:column="44"/></name></expr></argument>)<pos:position pos:line="85" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="86" pos:column="17">network_set_interface<pos:position pos:line="86" pos:column="38"/></name> <argument_list pos:line="86" pos:column="39">(<argument><expr><name pos:line="86" pos:column="40">se<pos:position pos:line="86" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="44">ai_ptr<pos:position pos:line="86" pos:column="50"/></name></expr></argument>)<pos:position pos:line="86" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="52"/></expr_stmt>

		<comment type="block" pos:line="88" pos:column="17">/* We don't open more than one write-socket per
		 * node/service pair.. */</comment>
		<break pos:line="90" pos:column="17">break;<pos:position pos:line="90" pos:column="23"/></break>
	}<pos:position pos:line="91" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="93" pos:column="9">freeaddrinfo<pos:position pos:line="93" pos:column="21"/></name> <argument_list pos:line="93" pos:column="22">(<argument><expr><name pos:line="93" pos:column="23">ai_list<pos:position pos:line="93" pos:column="30"/></name></expr></argument>)<pos:position pos:line="93" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="32"/></expr_stmt>
	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name><name pos:line="94" pos:column="13">client<pos:position pos:line="94" pos:column="19"/></name><operator pos:line="94" pos:column="19">-&gt;<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="21">fd<pos:position pos:line="94" pos:column="23"/></name></name> <operator pos:line="94" pos:column="24">&lt;<pos:position pos:line="94" pos:column="28"/></operator> <literal type="number" pos:line="94" pos:column="26">0<pos:position pos:line="94" pos:column="27"/></literal></expr>)<pos:position pos:line="94" pos:column="28"/></condition><then pos:line="94" pos:column="28">
		<block type="pseudo"><return pos:line="95" pos:column="17">return <expr><operator pos:line="95" pos:column="24">(<pos:position pos:line="95" pos:column="25"/></operator><operator pos:line="95" pos:column="25">-<pos:position pos:line="95" pos:column="26"/></operator><literal type="number" pos:line="95" pos:column="26">1<pos:position pos:line="95" pos:column="27"/></literal><operator pos:line="95" pos:column="27">)<pos:position pos:line="95" pos:column="28"/></operator></expr>;<pos:position pos:line="95" pos:column="29"/></return></block></then></if>

	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name><name pos:line="97" pos:column="13">client<pos:position pos:line="97" pos:column="19"/></name><operator pos:line="97" pos:column="19">-&gt;<pos:position pos:line="97" pos:column="24"/></operator><name pos:line="97" pos:column="21">resolve_interval<pos:position pos:line="97" pos:column="37"/></name></name> <operator pos:line="97" pos:column="38">&gt;<pos:position pos:line="97" pos:column="42"/></operator> <literal type="number" pos:line="97" pos:column="40">0<pos:position pos:line="97" pos:column="41"/></literal></expr>)<pos:position pos:line="97" pos:column="42"/></condition><then pos:line="97" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="98" pos:column="17">client<pos:position pos:line="98" pos:column="23"/></name><operator pos:line="98" pos:column="23">-&gt;<pos:position pos:line="98" pos:column="28"/></operator><name pos:line="98" pos:column="25">next_resolve_reconnect<pos:position pos:line="98" pos:column="47"/></name></name> <operator pos:line="98" pos:column="48">=<pos:position pos:line="98" pos:column="49"/></operator> <name pos:line="98" pos:column="50">now<pos:position pos:line="98" pos:column="53"/></name> <operator pos:line="98" pos:column="54">+<pos:position pos:line="98" pos:column="55"/></operator> <name><name pos:line="98" pos:column="56">client<pos:position pos:line="98" pos:column="62"/></name><operator pos:line="98" pos:column="62">-&gt;<pos:position pos:line="98" pos:column="67"/></operator><name pos:line="98" pos:column="64">resolve_interval<pos:position pos:line="98" pos:column="80"/></name></name></expr>;<pos:position pos:line="98" pos:column="81"/></expr_stmt></block></then></if>
	<return pos:line="99" pos:column="9">return <expr><operator pos:line="99" pos:column="16">(<pos:position pos:line="99" pos:column="17"/></operator><literal type="number" pos:line="99" pos:column="17">0<pos:position pos:line="99" pos:column="18"/></literal><operator pos:line="99" pos:column="18">)<pos:position pos:line="99" pos:column="19"/></operator></expr>;<pos:position pos:line="99" pos:column="20"/></return>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

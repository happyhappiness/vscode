<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1628_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cx_config_add_url<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">oconfig_item_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ci<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cx_t<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">db<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name><name pos:line="6" pos:column="8">ci<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">values_num<pos:position pos:line="6" pos:column="22"/></name></name> <operator pos:line="6" pos:column="23">!=<pos:position pos:line="6" pos:column="25"/></operator> <literal type="number" pos:line="6" pos:column="26">1<pos:position pos:line="6" pos:column="27"/></literal><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator>
      <operator pos:line="7" pos:column="7">||<pos:position pos:line="7" pos:column="9"/></operator> <operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><name><name pos:line="7" pos:column="11">ci<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">values<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr>]<pos:position pos:line="7" pos:column="24"/></index></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">type<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">!=<pos:position pos:line="7" pos:column="32"/></operator> <name pos:line="7" pos:column="33">OCONFIG_TYPE_STRING<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">)<pos:position pos:line="7" pos:column="53"/></operator></expr>)<pos:position pos:line="7" pos:column="54"/></condition><then pos:line="7" pos:column="54">
  <block pos:line="8" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">WARNING<pos:position pos:line="9" pos:column="12"/></name> <argument_list pos:line="9" pos:column="13">(<argument><expr><literal type="string" pos:line="9" pos:column="14">"curl_xml plugin: The `URL' block "<pos:position pos:line="9" pos:column="49"/></literal>
             <literal type="string" pos:line="10" pos:column="14">"needs exactly one string argument."<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">db<pos:position pos:line="14" pos:column="5"/></name> <operator pos:line="14" pos:column="6">=<pos:position pos:line="14" pos:column="7"/></operator> <call><name pos:line="14" pos:column="8">calloc<pos:position pos:line="14" pos:column="14"/></name> <argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="19">sizeof <argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">*<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">db<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">db<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">==<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">NULL<pos:position pos:line="15" pos:column="17"/></name></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name> <argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="string" pos:line="17" pos:column="12">"curl_xml plugin: calloc failed."<pos:position pos:line="17" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="21" pos:column="3">db<pos:position pos:line="21" pos:column="5"/></name><operator pos:line="21" pos:column="5">-&gt;<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="7">timeout<pos:position pos:line="21" pos:column="14"/></name></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <operator pos:line="21" pos:column="17">-<pos:position pos:line="21" pos:column="18"/></operator><literal type="number" pos:line="21" pos:column="18">1<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><call><name pos:line="23" pos:column="7">strcasecmp<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">(<argument><expr><literal type="string" pos:line="23" pos:column="19">"URL"<pos:position pos:line="23" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="26">ci<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">key<pos:position pos:line="23" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call> <operator pos:line="23" pos:column="35">==<pos:position pos:line="23" pos:column="37"/></operator> <literal type="number" pos:line="23" pos:column="38">0<pos:position pos:line="23" pos:column="39"/></literal></expr>)<pos:position pos:line="23" pos:column="40"/></condition><then pos:line="23" pos:column="40">
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><name pos:line="25" pos:column="5">status<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">cf_util_get_string<pos:position pos:line="25" pos:column="32"/></name> <argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">ci<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="38">&amp;<pos:position pos:line="25" pos:column="43"/></operator><name><name pos:line="25" pos:column="39">db<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">url<pos:position pos:line="25" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">status<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">!=<pos:position pos:line="26" pos:column="18"/></operator> <literal type="number" pos:line="26" pos:column="19">0<pos:position pos:line="26" pos:column="20"/></literal></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21">
    <block pos:line="27" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">sfree<pos:position pos:line="28" pos:column="12"/></name> <argument_list pos:line="28" pos:column="13">(<argument><expr><name pos:line="28" pos:column="14">db<pos:position pos:line="28" pos:column="16"/></name></expr></argument>)<pos:position pos:line="28" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="18"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><operator pos:line="29" pos:column="14">(<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">status<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">)<pos:position pos:line="29" pos:column="22"/></operator></expr>;<pos:position pos:line="29" pos:column="23"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then>
  <else pos:line="32" pos:column="3">else
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name> <argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="string" pos:line="34" pos:column="12">"curl_xml plugin: cx_config: "<pos:position pos:line="34" pos:column="42"/></literal>
           <literal type="string" pos:line="35" pos:column="12">"Invalid key: %s"<pos:position pos:line="35" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="31">ci<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">-&gt;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="35">key<pos:position pos:line="35" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">cx_free<pos:position pos:line="36" pos:column="12"/></name> <argument_list pos:line="36" pos:column="13">(<argument><expr><name pos:line="36" pos:column="14">db<pos:position pos:line="36" pos:column="16"/></name></expr></argument>)<pos:position pos:line="36" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="18"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><operator pos:line="37" pos:column="13">-<pos:position pos:line="37" pos:column="14"/></operator><literal type="number" pos:line="37" pos:column="14">1<pos:position pos:line="37" pos:column="15"/></literal><operator pos:line="37" pos:column="15">)<pos:position pos:line="37" pos:column="16"/></operator></expr>;<pos:position pos:line="37" pos:column="17"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="40" pos:column="3">/* Fill the `cx_t' structure.. */</comment>
  <for pos:line="41" pos:column="3">for <control pos:line="41" pos:column="7">(<init><decl><type><name pos:line="41" pos:column="8">int<pos:position pos:line="41" pos:column="11"/></name></type> <name pos:line="41" pos:column="12">i<pos:position pos:line="41" pos:column="13"/></name> <init pos:line="41" pos:column="14">= <expr><literal type="number" pos:line="41" pos:column="16">0<pos:position pos:line="41" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="18"/></init> <condition><expr><name pos:line="41" pos:column="19">i<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">&lt;<pos:position pos:line="41" pos:column="25"/></operator> <name><name pos:line="41" pos:column="23">ci<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">-&gt;<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="27">children_num<pos:position pos:line="41" pos:column="39"/></name></name></expr>;<pos:position pos:line="41" pos:column="40"/></condition> <incr><expr><name pos:line="41" pos:column="41">i<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">++<pos:position pos:line="41" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="45"/></control>
  <block pos:line="42" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">oconfig_item_t<pos:position pos:line="43" pos:column="19"/></name> <modifier pos:line="43" pos:column="20">*<pos:position pos:line="43" pos:column="21"/></modifier></type><name pos:line="43" pos:column="21">child<pos:position pos:line="43" pos:column="26"/></name> <init pos:line="43" pos:column="27">= <expr><name><name pos:line="43" pos:column="29">ci<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">-&gt;<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="33">children<pos:position pos:line="43" pos:column="41"/></name></name> <operator pos:line="43" pos:column="42">+<pos:position pos:line="43" pos:column="43"/></operator> <name pos:line="43" pos:column="44">i<pos:position pos:line="43" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="46"/></decl_stmt>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><call><name pos:line="45" pos:column="9">strcasecmp<pos:position pos:line="45" pos:column="19"/></name> <argument_list pos:line="45" pos:column="20">(<argument><expr><literal type="string" pos:line="45" pos:column="21">"Instance"<pos:position pos:line="45" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="33">child<pos:position pos:line="45" pos:column="38"/></name><operator pos:line="45" pos:column="38">-&gt;<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="40">key<pos:position pos:line="45" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call> <operator pos:line="45" pos:column="45">==<pos:position pos:line="45" pos:column="47"/></operator> <literal type="number" pos:line="45" pos:column="48">0<pos:position pos:line="45" pos:column="49"/></literal></expr>)<pos:position pos:line="45" pos:column="50"/></condition><then pos:line="45" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="7">status<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <call><name pos:line="46" pos:column="16">cf_util_get_string<pos:position pos:line="46" pos:column="34"/></name> <argument_list pos:line="46" pos:column="35">(<argument><expr><name pos:line="46" pos:column="36">child<pos:position pos:line="46" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="43">&amp;<pos:position pos:line="46" pos:column="48"/></operator><name><name pos:line="46" pos:column="44">db<pos:position pos:line="46" pos:column="46"/></name><operator pos:line="46" pos:column="46">-&gt;<pos:position pos:line="46" pos:column="51"/></operator><name pos:line="46" pos:column="48">instance<pos:position pos:line="46" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="58"/></expr_stmt></block></then>
    <elseif pos:line="47" pos:column="5">else <if pos:line="47" pos:column="10">if <condition pos:line="47" pos:column="13">(<expr><call><name pos:line="47" pos:column="14">strcasecmp<pos:position pos:line="47" pos:column="24"/></name> <argument_list pos:line="47" pos:column="25">(<argument><expr><literal type="string" pos:line="47" pos:column="26">"Host"<pos:position pos:line="47" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="34">child<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">-&gt;<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="41">key<pos:position pos:line="47" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="45"/></argument_list></call> <operator pos:line="47" pos:column="46">==<pos:position pos:line="47" pos:column="48"/></operator> <literal type="number" pos:line="47" pos:column="49">0<pos:position pos:line="47" pos:column="50"/></literal></expr>)<pos:position pos:line="47" pos:column="51"/></condition><then pos:line="47" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="7">status<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <call><name pos:line="48" pos:column="16">cf_util_get_string<pos:position pos:line="48" pos:column="34"/></name> <argument_list pos:line="48" pos:column="35">(<argument><expr><name pos:line="48" pos:column="36">child<pos:position pos:line="48" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="43">&amp;<pos:position pos:line="48" pos:column="48"/></operator><name><name pos:line="48" pos:column="44">db<pos:position pos:line="48" pos:column="46"/></name><operator pos:line="48" pos:column="46">-&gt;<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="48">host<pos:position pos:line="48" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="49" pos:column="5">else <if pos:line="49" pos:column="10">if <condition pos:line="49" pos:column="13">(<expr><call><name pos:line="49" pos:column="14">strcasecmp<pos:position pos:line="49" pos:column="24"/></name> <argument_list pos:line="49" pos:column="25">(<argument><expr><literal type="string" pos:line="49" pos:column="26">"User"<pos:position pos:line="49" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="34">child<pos:position pos:line="49" pos:column="39"/></name><operator pos:line="49" pos:column="39">-&gt;<pos:position pos:line="49" pos:column="44"/></operator><name pos:line="49" pos:column="41">key<pos:position pos:line="49" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call> <operator pos:line="49" pos:column="46">==<pos:position pos:line="49" pos:column="48"/></operator> <literal type="number" pos:line="49" pos:column="49">0<pos:position pos:line="49" pos:column="50"/></literal></expr>)<pos:position pos:line="49" pos:column="51"/></condition><then pos:line="49" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="7">status<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <call><name pos:line="50" pos:column="16">cf_util_get_string<pos:position pos:line="50" pos:column="34"/></name> <argument_list pos:line="50" pos:column="35">(<argument><expr><name pos:line="50" pos:column="36">child<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="43">&amp;<pos:position pos:line="50" pos:column="48"/></operator><name><name pos:line="50" pos:column="44">db<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">-&gt;<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="48">user<pos:position pos:line="50" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="51" pos:column="5">else <if pos:line="51" pos:column="10">if <condition pos:line="51" pos:column="13">(<expr><call><name pos:line="51" pos:column="14">strcasecmp<pos:position pos:line="51" pos:column="24"/></name> <argument_list pos:line="51" pos:column="25">(<argument><expr><literal type="string" pos:line="51" pos:column="26">"Password"<pos:position pos:line="51" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="38">child<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">key<pos:position pos:line="51" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></call> <operator pos:line="51" pos:column="50">==<pos:position pos:line="51" pos:column="52"/></operator> <literal type="number" pos:line="51" pos:column="53">0<pos:position pos:line="51" pos:column="54"/></literal></expr>)<pos:position pos:line="51" pos:column="55"/></condition><then pos:line="51" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="7">status<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">cf_util_get_string<pos:position pos:line="52" pos:column="34"/></name> <argument_list pos:line="52" pos:column="35">(<argument><expr><name pos:line="52" pos:column="36">child<pos:position pos:line="52" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="43">&amp;<pos:position pos:line="52" pos:column="48"/></operator><name><name pos:line="52" pos:column="44">db<pos:position pos:line="52" pos:column="46"/></name><operator pos:line="52" pos:column="46">-&gt;<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="48">pass<pos:position pos:line="52" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="53" pos:column="5">else <if pos:line="53" pos:column="10">if <condition pos:line="53" pos:column="13">(<expr><call><name pos:line="53" pos:column="14">strcasecmp<pos:position pos:line="53" pos:column="24"/></name> <argument_list pos:line="53" pos:column="25">(<argument><expr><literal type="string" pos:line="53" pos:column="26">"Digest"<pos:position pos:line="53" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="36">child<pos:position pos:line="53" pos:column="41"/></name><operator pos:line="53" pos:column="41">-&gt;<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="43">key<pos:position pos:line="53" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call> <operator pos:line="53" pos:column="48">==<pos:position pos:line="53" pos:column="50"/></operator> <literal type="number" pos:line="53" pos:column="51">0<pos:position pos:line="53" pos:column="52"/></literal></expr>)<pos:position pos:line="53" pos:column="53"/></condition><then pos:line="53" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="7">status<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">=<pos:position pos:line="54" pos:column="15"/></operator> <call><name pos:line="54" pos:column="16">cf_util_get_boolean<pos:position pos:line="54" pos:column="35"/></name> <argument_list pos:line="54" pos:column="36">(<argument><expr><name pos:line="54" pos:column="37">child<pos:position pos:line="54" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="44">&amp;<pos:position pos:line="54" pos:column="49"/></operator><name><name pos:line="54" pos:column="45">db<pos:position pos:line="54" pos:column="47"/></name><operator pos:line="54" pos:column="47">-&gt;<pos:position pos:line="54" pos:column="52"/></operator><name pos:line="54" pos:column="49">digest<pos:position pos:line="54" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="57"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="55" pos:column="5">else <if pos:line="55" pos:column="10">if <condition pos:line="55" pos:column="13">(<expr><call><name pos:line="55" pos:column="14">strcasecmp<pos:position pos:line="55" pos:column="24"/></name> <argument_list pos:line="55" pos:column="25">(<argument><expr><literal type="string" pos:line="55" pos:column="26">"VerifyPeer"<pos:position pos:line="55" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="40">child<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">-&gt;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="47">key<pos:position pos:line="55" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call> <operator pos:line="55" pos:column="52">==<pos:position pos:line="55" pos:column="54"/></operator> <literal type="number" pos:line="55" pos:column="55">0<pos:position pos:line="55" pos:column="56"/></literal></expr>)<pos:position pos:line="55" pos:column="57"/></condition><then pos:line="55" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="7">status<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">=<pos:position pos:line="56" pos:column="15"/></operator> <call><name pos:line="56" pos:column="16">cf_util_get_boolean<pos:position pos:line="56" pos:column="35"/></name> <argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">child<pos:position pos:line="56" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="44">&amp;<pos:position pos:line="56" pos:column="49"/></operator><name><name pos:line="56" pos:column="45">db<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">-&gt;<pos:position pos:line="56" pos:column="52"/></operator><name pos:line="56" pos:column="49">verify_peer<pos:position pos:line="56" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="62"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="57" pos:column="5">else <if pos:line="57" pos:column="10">if <condition pos:line="57" pos:column="13">(<expr><call><name pos:line="57" pos:column="14">strcasecmp<pos:position pos:line="57" pos:column="24"/></name> <argument_list pos:line="57" pos:column="25">(<argument><expr><literal type="string" pos:line="57" pos:column="26">"VerifyHost"<pos:position pos:line="57" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="40">child<pos:position pos:line="57" pos:column="45"/></name><operator pos:line="57" pos:column="45">-&gt;<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="47">key<pos:position pos:line="57" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="51"/></argument_list></call> <operator pos:line="57" pos:column="52">==<pos:position pos:line="57" pos:column="54"/></operator> <literal type="number" pos:line="57" pos:column="55">0<pos:position pos:line="57" pos:column="56"/></literal></expr>)<pos:position pos:line="57" pos:column="57"/></condition><then pos:line="57" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="7">status<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <call><name pos:line="58" pos:column="16">cf_util_get_boolean<pos:position pos:line="58" pos:column="35"/></name> <argument_list pos:line="58" pos:column="36">(<argument><expr><name pos:line="58" pos:column="37">child<pos:position pos:line="58" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="44">&amp;<pos:position pos:line="58" pos:column="49"/></operator><name><name pos:line="58" pos:column="45">db<pos:position pos:line="58" pos:column="47"/></name><operator pos:line="58" pos:column="47">-&gt;<pos:position pos:line="58" pos:column="52"/></operator><name pos:line="58" pos:column="49">verify_host<pos:position pos:line="58" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="62"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="59" pos:column="5">else <if pos:line="59" pos:column="10">if <condition pos:line="59" pos:column="13">(<expr><call><name pos:line="59" pos:column="14">strcasecmp<pos:position pos:line="59" pos:column="24"/></name> <argument_list pos:line="59" pos:column="25">(<argument><expr><literal type="string" pos:line="59" pos:column="26">"CACert"<pos:position pos:line="59" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="36">child<pos:position pos:line="59" pos:column="41"/></name><operator pos:line="59" pos:column="41">-&gt;<pos:position pos:line="59" pos:column="46"/></operator><name pos:line="59" pos:column="43">key<pos:position pos:line="59" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="47"/></argument_list></call> <operator pos:line="59" pos:column="48">==<pos:position pos:line="59" pos:column="50"/></operator> <literal type="number" pos:line="59" pos:column="51">0<pos:position pos:line="59" pos:column="52"/></literal></expr>)<pos:position pos:line="59" pos:column="53"/></condition><then pos:line="59" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="7">status<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <call><name pos:line="60" pos:column="16">cf_util_get_string<pos:position pos:line="60" pos:column="34"/></name> <argument_list pos:line="60" pos:column="35">(<argument><expr><name pos:line="60" pos:column="36">child<pos:position pos:line="60" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="43">&amp;<pos:position pos:line="60" pos:column="48"/></operator><name><name pos:line="60" pos:column="44">db<pos:position pos:line="60" pos:column="46"/></name><operator pos:line="60" pos:column="46">-&gt;<pos:position pos:line="60" pos:column="51"/></operator><name pos:line="60" pos:column="48">cacert<pos:position pos:line="60" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="56"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="61" pos:column="5">else <if pos:line="61" pos:column="10">if <condition pos:line="61" pos:column="13">(<expr><call><name pos:line="61" pos:column="14">strcasecmp<pos:position pos:line="61" pos:column="24"/></name> <argument_list pos:line="61" pos:column="25">(<argument><expr><literal type="string" pos:line="61" pos:column="26">"xpath"<pos:position pos:line="61" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="35">child<pos:position pos:line="61" pos:column="40"/></name><operator pos:line="61" pos:column="40">-&gt;<pos:position pos:line="61" pos:column="45"/></operator><name pos:line="61" pos:column="42">key<pos:position pos:line="61" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="46"/></argument_list></call> <operator pos:line="61" pos:column="47">==<pos:position pos:line="61" pos:column="49"/></operator> <literal type="number" pos:line="61" pos:column="50">0<pos:position pos:line="61" pos:column="51"/></literal></expr>)<pos:position pos:line="61" pos:column="52"/></condition><then pos:line="61" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="7">status<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <call><name pos:line="62" pos:column="16">cx_config_add_xpath<pos:position pos:line="62" pos:column="35"/></name> <argument_list pos:line="62" pos:column="36">(<argument><expr><name pos:line="62" pos:column="37">db<pos:position pos:line="62" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="41">child<pos:position pos:line="62" pos:column="46"/></name></expr></argument>)<pos:position pos:line="62" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="48"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="63" pos:column="5">else <if pos:line="63" pos:column="10">if <condition pos:line="63" pos:column="13">(<expr><call><name pos:line="63" pos:column="14">strcasecmp<pos:position pos:line="63" pos:column="24"/></name> <argument_list pos:line="63" pos:column="25">(<argument><expr><literal type="string" pos:line="63" pos:column="26">"Header"<pos:position pos:line="63" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="36">child<pos:position pos:line="63" pos:column="41"/></name><operator pos:line="63" pos:column="41">-&gt;<pos:position pos:line="63" pos:column="46"/></operator><name pos:line="63" pos:column="43">key<pos:position pos:line="63" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="47"/></argument_list></call> <operator pos:line="63" pos:column="48">==<pos:position pos:line="63" pos:column="50"/></operator> <literal type="number" pos:line="63" pos:column="51">0<pos:position pos:line="63" pos:column="52"/></literal></expr>)<pos:position pos:line="63" pos:column="53"/></condition><then pos:line="63" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="7">status<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <call><name pos:line="64" pos:column="16">cx_config_append_string<pos:position pos:line="64" pos:column="39"/></name> <argument_list pos:line="64" pos:column="40">(<argument><expr><literal type="string" pos:line="64" pos:column="41">"Header"<pos:position pos:line="64" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="64" pos:column="51">&amp;<pos:position pos:line="64" pos:column="56"/></operator><name><name pos:line="64" pos:column="52">db<pos:position pos:line="64" pos:column="54"/></name><operator pos:line="64" pos:column="54">-&gt;<pos:position pos:line="64" pos:column="59"/></operator><name pos:line="64" pos:column="56">headers<pos:position pos:line="64" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="65">child<pos:position pos:line="64" pos:column="70"/></name></expr></argument>)<pos:position pos:line="64" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="72"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="65" pos:column="5">else <if pos:line="65" pos:column="10">if <condition pos:line="65" pos:column="13">(<expr><call><name pos:line="65" pos:column="14">strcasecmp<pos:position pos:line="65" pos:column="24"/></name> <argument_list pos:line="65" pos:column="25">(<argument><expr><literal type="string" pos:line="65" pos:column="26">"Post"<pos:position pos:line="65" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="34">child<pos:position pos:line="65" pos:column="39"/></name><operator pos:line="65" pos:column="39">-&gt;<pos:position pos:line="65" pos:column="44"/></operator><name pos:line="65" pos:column="41">key<pos:position pos:line="65" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="45"/></argument_list></call> <operator pos:line="65" pos:column="46">==<pos:position pos:line="65" pos:column="48"/></operator> <literal type="number" pos:line="65" pos:column="49">0<pos:position pos:line="65" pos:column="50"/></literal></expr>)<pos:position pos:line="65" pos:column="51"/></condition><then pos:line="65" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="7">status<pos:position pos:line="66" pos:column="13"/></name> <operator pos:line="66" pos:column="14">=<pos:position pos:line="66" pos:column="15"/></operator> <call><name pos:line="66" pos:column="16">cf_util_get_string<pos:position pos:line="66" pos:column="34"/></name> <argument_list pos:line="66" pos:column="35">(<argument><expr><name pos:line="66" pos:column="36">child<pos:position pos:line="66" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="43">&amp;<pos:position pos:line="66" pos:column="48"/></operator><name><name pos:line="66" pos:column="44">db<pos:position pos:line="66" pos:column="46"/></name><operator pos:line="66" pos:column="46">-&gt;<pos:position pos:line="66" pos:column="51"/></operator><name pos:line="66" pos:column="48">post_body<pos:position pos:line="66" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="67" pos:column="5">else <if pos:line="67" pos:column="10">if <condition pos:line="67" pos:column="13">(<expr><call><name pos:line="67" pos:column="14">strcasecmp<pos:position pos:line="67" pos:column="24"/></name> <argument_list pos:line="67" pos:column="25">(<argument><expr><literal type="string" pos:line="67" pos:column="26">"Namespace"<pos:position pos:line="67" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="39">child<pos:position pos:line="67" pos:column="44"/></name><operator pos:line="67" pos:column="44">-&gt;<pos:position pos:line="67" pos:column="49"/></operator><name pos:line="67" pos:column="46">key<pos:position pos:line="67" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call> <operator pos:line="67" pos:column="51">==<pos:position pos:line="67" pos:column="53"/></operator> <literal type="number" pos:line="67" pos:column="54">0<pos:position pos:line="67" pos:column="55"/></literal></expr>)<pos:position pos:line="67" pos:column="56"/></condition><then pos:line="67" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="68" pos:column="7">status<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <call><name pos:line="68" pos:column="16">cx_config_add_namespace<pos:position pos:line="68" pos:column="39"/></name> <argument_list pos:line="68" pos:column="40">(<argument><expr><name pos:line="68" pos:column="41">db<pos:position pos:line="68" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="45">child<pos:position pos:line="68" pos:column="50"/></name></expr></argument>)<pos:position pos:line="68" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="69" pos:column="5">else <if pos:line="69" pos:column="10">if <condition pos:line="69" pos:column="13">(<expr><call><name pos:line="69" pos:column="14">strcasecmp<pos:position pos:line="69" pos:column="24"/></name> <argument_list pos:line="69" pos:column="25">(<argument><expr><literal type="string" pos:line="69" pos:column="26">"Timeout"<pos:position pos:line="69" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="37">child<pos:position pos:line="69" pos:column="42"/></name><operator pos:line="69" pos:column="42">-&gt;<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="44">key<pos:position pos:line="69" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="48"/></argument_list></call> <operator pos:line="69" pos:column="49">==<pos:position pos:line="69" pos:column="51"/></operator> <literal type="number" pos:line="69" pos:column="52">0<pos:position pos:line="69" pos:column="53"/></literal></expr>)<pos:position pos:line="69" pos:column="54"/></condition><then pos:line="69" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="7">status<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator> <call><name pos:line="70" pos:column="16">cf_util_get_int<pos:position pos:line="70" pos:column="31"/></name> <argument_list pos:line="70" pos:column="32">(<argument><expr><name pos:line="70" pos:column="33">child<pos:position pos:line="70" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="40">&amp;<pos:position pos:line="70" pos:column="45"/></operator><name><name pos:line="70" pos:column="41">db<pos:position pos:line="70" pos:column="43"/></name><operator pos:line="70" pos:column="43">-&gt;<pos:position pos:line="70" pos:column="48"/></operator><name pos:line="70" pos:column="45">timeout<pos:position pos:line="70" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="71" pos:column="5">else <if pos:line="71" pos:column="10">if <condition pos:line="71" pos:column="13">(<expr><call><name pos:line="71" pos:column="14">strcasecmp<pos:position pos:line="71" pos:column="24"/></name> <argument_list pos:line="71" pos:column="25">(<argument><expr><literal type="string" pos:line="71" pos:column="26">"Statistics"<pos:position pos:line="71" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="40">child<pos:position pos:line="71" pos:column="45"/></name><operator pos:line="71" pos:column="45">-&gt;<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="47">key<pos:position pos:line="71" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call> <operator pos:line="71" pos:column="52">==<pos:position pos:line="71" pos:column="54"/></operator> <literal type="number" pos:line="71" pos:column="55">0<pos:position pos:line="71" pos:column="56"/></literal></expr>)<pos:position pos:line="71" pos:column="57"/></condition><then pos:line="71" pos:column="57">
    <block pos:line="72" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="73" pos:column="7">db<pos:position pos:line="73" pos:column="9"/></name><operator pos:line="73" pos:column="9">-&gt;<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="11">stats<pos:position pos:line="73" pos:column="16"/></name></name> <operator pos:line="73" pos:column="17">=<pos:position pos:line="73" pos:column="18"/></operator> <call><name pos:line="73" pos:column="19">curl_stats_from_config<pos:position pos:line="73" pos:column="41"/></name> <argument_list pos:line="73" pos:column="42">(<argument><expr><name pos:line="73" pos:column="43">child<pos:position pos:line="73" pos:column="48"/></name></expr></argument>)<pos:position pos:line="73" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="50"/></expr_stmt>
      <if pos:line="74" pos:column="7">if <condition pos:line="74" pos:column="10">(<expr><name><name pos:line="74" pos:column="11">db<pos:position pos:line="74" pos:column="13"/></name><operator pos:line="74" pos:column="13">-&gt;<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="15">stats<pos:position pos:line="74" pos:column="20"/></name></name> <operator pos:line="74" pos:column="21">==<pos:position pos:line="74" pos:column="23"/></operator> <name pos:line="74" pos:column="24">NULL<pos:position pos:line="74" pos:column="28"/></name></expr>)<pos:position pos:line="74" pos:column="29"/></condition><then pos:line="74" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="9">status<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <operator pos:line="75" pos:column="18">-<pos:position pos:line="75" pos:column="19"/></operator><literal type="number" pos:line="75" pos:column="19">1<pos:position pos:line="75" pos:column="20"/></literal></expr>;<pos:position pos:line="75" pos:column="21"/></expr_stmt></block></then></if>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if></elseif>
    <else pos:line="77" pos:column="5">else
    <block pos:line="78" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">WARNING<pos:position pos:line="79" pos:column="14"/></name> <argument_list pos:line="79" pos:column="15">(<argument><expr><literal type="string" pos:line="79" pos:column="16">"curl_xml plugin: Option `%s' not allowed here."<pos:position pos:line="79" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="66">child<pos:position pos:line="79" pos:column="71"/></name><operator pos:line="79" pos:column="71">-&gt;<pos:position pos:line="79" pos:column="76"/></operator><name pos:line="79" pos:column="73">key<pos:position pos:line="79" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><name pos:line="80" pos:column="7">status<pos:position pos:line="80" pos:column="13"/></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <operator pos:line="80" pos:column="16">-<pos:position pos:line="80" pos:column="17"/></operator><literal type="number" pos:line="80" pos:column="17">1<pos:position pos:line="80" pos:column="18"/></literal></expr>;<pos:position pos:line="80" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></else></if>

    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name pos:line="83" pos:column="9">status<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">!=<pos:position pos:line="83" pos:column="18"/></operator> <literal type="number" pos:line="83" pos:column="19">0<pos:position pos:line="83" pos:column="20"/></literal></expr>)<pos:position pos:line="83" pos:column="21"/></condition><then pos:line="83" pos:column="21">
      <block type="pseudo"><break pos:line="84" pos:column="7">break;<pos:position pos:line="84" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="85" pos:column="4"/></block></for>

  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><name pos:line="87" pos:column="7">status<pos:position pos:line="87" pos:column="13"/></name> <operator pos:line="87" pos:column="14">==<pos:position pos:line="87" pos:column="16"/></operator> <literal type="number" pos:line="87" pos:column="17">0<pos:position pos:line="87" pos:column="18"/></literal></expr>)<pos:position pos:line="87" pos:column="19"/></condition><then pos:line="87" pos:column="19">
  <block pos:line="88" pos:column="3">{
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name><name pos:line="89" pos:column="9">db<pos:position pos:line="89" pos:column="11"/></name><operator pos:line="89" pos:column="11">-&gt;<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="13">list<pos:position pos:line="89" pos:column="17"/></name></name> <operator pos:line="89" pos:column="18">==<pos:position pos:line="89" pos:column="20"/></operator> <name pos:line="89" pos:column="21">NULL<pos:position pos:line="89" pos:column="25"/></name></expr>)<pos:position pos:line="89" pos:column="26"/></condition><then pos:line="89" pos:column="26">
    <block pos:line="90" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">WARNING<pos:position pos:line="91" pos:column="14"/></name> <argument_list pos:line="91" pos:column="15">(<argument><expr><literal type="string" pos:line="91" pos:column="16">"curl_xml plugin: No (valid) `Key' block "<pos:position pos:line="91" pos:column="58"/></literal>
               <literal type="string" pos:line="92" pos:column="16">"within `URL' block `%s'."<pos:position pos:line="92" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="44">db<pos:position pos:line="92" pos:column="46"/></name><operator pos:line="92" pos:column="46">-&gt;<pos:position pos:line="92" pos:column="51"/></operator><name pos:line="92" pos:column="48">url<pos:position pos:line="92" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name pos:line="93" pos:column="7">status<pos:position pos:line="93" pos:column="13"/></name> <operator pos:line="93" pos:column="14">=<pos:position pos:line="93" pos:column="15"/></operator> <operator pos:line="93" pos:column="16">-<pos:position pos:line="93" pos:column="17"/></operator><literal type="number" pos:line="93" pos:column="17">1<pos:position pos:line="93" pos:column="18"/></literal></expr>;<pos:position pos:line="93" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>
    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name pos:line="95" pos:column="9">status<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">==<pos:position pos:line="95" pos:column="18"/></operator> <literal type="number" pos:line="95" pos:column="19">0<pos:position pos:line="95" pos:column="20"/></literal></expr>)<pos:position pos:line="95" pos:column="21"/></condition><then pos:line="95" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="7">status<pos:position pos:line="96" pos:column="13"/></name> <operator pos:line="96" pos:column="14">=<pos:position pos:line="96" pos:column="15"/></operator> <call><name pos:line="96" pos:column="16">cx_init_curl<pos:position pos:line="96" pos:column="28"/></name> <argument_list pos:line="96" pos:column="29">(<argument><expr><name pos:line="96" pos:column="30">db<pos:position pos:line="96" pos:column="32"/></name></expr></argument>)<pos:position pos:line="96" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="34"/></expr_stmt></block></then></if>
  }<pos:position pos:line="97" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="99" pos:column="3">/* If all went well, register this database for reading */</comment>
  <if pos:line="100" pos:column="3">if <condition pos:line="100" pos:column="6">(<expr><name pos:line="100" pos:column="7">status<pos:position pos:line="100" pos:column="13"/></name> <operator pos:line="100" pos:column="14">==<pos:position pos:line="100" pos:column="16"/></operator> <literal type="number" pos:line="100" pos:column="17">0<pos:position pos:line="100" pos:column="18"/></literal></expr>)<pos:position pos:line="100" pos:column="19"/></condition><then pos:line="100" pos:column="19">
  <block pos:line="101" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="102" pos:column="5">char<pos:position pos:line="102" pos:column="9"/></name> <modifier pos:line="102" pos:column="10">*<pos:position pos:line="102" pos:column="11"/></modifier></type><name pos:line="102" pos:column="11">cb_name<pos:position pos:line="102" pos:column="18"/></name></decl>;<pos:position pos:line="102" pos:column="19"/></decl_stmt>

    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><name><name pos:line="104" pos:column="9">db<pos:position pos:line="104" pos:column="11"/></name><operator pos:line="104" pos:column="11">-&gt;<pos:position pos:line="104" pos:column="16"/></operator><name pos:line="104" pos:column="13">instance<pos:position pos:line="104" pos:column="21"/></name></name> <operator pos:line="104" pos:column="22">==<pos:position pos:line="104" pos:column="24"/></operator> <name pos:line="104" pos:column="25">NULL<pos:position pos:line="104" pos:column="29"/></name></expr>)<pos:position pos:line="104" pos:column="30"/></condition><then pos:line="104" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="105" pos:column="7">db<pos:position pos:line="105" pos:column="9"/></name><operator pos:line="105" pos:column="9">-&gt;<pos:position pos:line="105" pos:column="14"/></operator><name pos:line="105" pos:column="11">instance<pos:position pos:line="105" pos:column="19"/></name></name> <operator pos:line="105" pos:column="20">=<pos:position pos:line="105" pos:column="21"/></operator> <call><name pos:line="105" pos:column="22">strdup<pos:position pos:line="105" pos:column="28"/></name><argument_list pos:line="105" pos:column="28">(<argument><expr><literal type="string" pos:line="105" pos:column="29">"default"<pos:position pos:line="105" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="40"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="107" pos:column="5">DEBUG<pos:position pos:line="107" pos:column="10"/></name> <argument_list pos:line="107" pos:column="11">(<argument><expr><literal type="string" pos:line="107" pos:column="12">"curl_xml plugin: Registering new read callback: %s"<pos:position pos:line="107" pos:column="64"/></literal></expr></argument>,
           <argument><expr><name><name pos:line="108" pos:column="12">db<pos:position pos:line="108" pos:column="14"/></name><operator pos:line="108" pos:column="14">-&gt;<pos:position pos:line="108" pos:column="19"/></operator><name pos:line="108" pos:column="16">instance<pos:position pos:line="108" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="110" pos:column="5">cb_name<pos:position pos:line="110" pos:column="12"/></name> <operator pos:line="110" pos:column="13">=<pos:position pos:line="110" pos:column="14"/></operator> <call><name pos:line="110" pos:column="15">ssnprintf_alloc<pos:position pos:line="110" pos:column="30"/></name> <argument_list pos:line="110" pos:column="31">(<argument><expr><literal type="string" pos:line="110" pos:column="32">"curl_xml-%s-%s"<pos:position pos:line="110" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="50">db<pos:position pos:line="110" pos:column="52"/></name><operator pos:line="110" pos:column="52">-&gt;<pos:position pos:line="110" pos:column="57"/></operator><name pos:line="110" pos:column="54">instance<pos:position pos:line="110" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="64">db<pos:position pos:line="110" pos:column="66"/></name><operator pos:line="110" pos:column="66">-&gt;<pos:position pos:line="110" pos:column="71"/></operator><name pos:line="110" pos:column="68">url<pos:position pos:line="110" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="73"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="112" pos:column="5">user_data_t<pos:position pos:line="112" pos:column="16"/></name></type> <name pos:line="112" pos:column="17">ud<pos:position pos:line="112" pos:column="19"/></name> <init pos:line="112" pos:column="20">= <expr><block pos:line="112" pos:column="22">{
      <expr><operator pos:line="113" pos:column="7">.<pos:position pos:line="113" pos:column="8"/></operator><name pos:line="113" pos:column="8">data<pos:position pos:line="113" pos:column="12"/></name> <operator pos:line="113" pos:column="13">=<pos:position pos:line="113" pos:column="14"/></operator> <name pos:line="113" pos:column="15">db<pos:position pos:line="113" pos:column="17"/></name></expr>,
      <expr><operator pos:line="114" pos:column="7">.<pos:position pos:line="114" pos:column="8"/></operator><name pos:line="114" pos:column="8">free_func<pos:position pos:line="114" pos:column="17"/></name> <operator pos:line="114" pos:column="18">=<pos:position pos:line="114" pos:column="19"/></operator> <name pos:line="114" pos:column="20">cx_free<pos:position pos:line="114" pos:column="27"/></name></expr>
    }<pos:position pos:line="115" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="115" pos:column="7"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="117" pos:column="5">plugin_register_complex_read<pos:position pos:line="117" pos:column="33"/></name> <argument_list pos:line="117" pos:column="34">(<comment type="block" pos:line="117" pos:column="35">/* group = */</comment> <argument><expr><literal type="string" pos:line="117" pos:column="49">"curl_xml"<pos:position pos:line="117" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="61">cb_name<pos:position pos:line="117" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="70">cx_read<pos:position pos:line="117" pos:column="77"/></name></expr></argument>,
                                  <comment type="block" pos:line="118" pos:column="35">/* interval = */</comment> <argument><expr><literal type="number" pos:line="118" pos:column="52">0<pos:position pos:line="118" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="118" pos:column="55">&amp;<pos:position pos:line="118" pos:column="60"/></operator><name pos:line="118" pos:column="56">ud<pos:position pos:line="118" pos:column="58"/></name></expr></argument>)<pos:position pos:line="118" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">sfree<pos:position pos:line="119" pos:column="10"/></name> <argument_list pos:line="119" pos:column="11">(<argument><expr><name pos:line="119" pos:column="12">cb_name<pos:position pos:line="119" pos:column="19"/></name></expr></argument>)<pos:position pos:line="119" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="120" pos:column="4"/></block></then>
  <else pos:line="121" pos:column="3">else
  <block pos:line="122" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="123" pos:column="5">cx_free<pos:position pos:line="123" pos:column="12"/></name> <argument_list pos:line="123" pos:column="13">(<argument><expr><name pos:line="123" pos:column="14">db<pos:position pos:line="123" pos:column="16"/></name></expr></argument>)<pos:position pos:line="123" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="18"/></expr_stmt>
    <return pos:line="124" pos:column="5">return <expr><operator pos:line="124" pos:column="12">(<pos:position pos:line="124" pos:column="13"/></operator><operator pos:line="124" pos:column="13">-<pos:position pos:line="124" pos:column="14"/></operator><literal type="number" pos:line="124" pos:column="14">1<pos:position pos:line="124" pos:column="15"/></literal><operator pos:line="124" pos:column="15">)<pos:position pos:line="124" pos:column="16"/></operator></expr>;<pos:position pos:line="124" pos:column="17"/></return>
  }<pos:position pos:line="125" pos:column="4"/></block></else></if>

  <return pos:line="127" pos:column="3">return <expr><operator pos:line="127" pos:column="10">(<pos:position pos:line="127" pos:column="11"/></operator><literal type="number" pos:line="127" pos:column="11">0<pos:position pos:line="127" pos:column="12"/></literal><operator pos:line="127" pos:column="12">)<pos:position pos:line="127" pos:column="13"/></operator></expr>;<pos:position pos:line="127" pos:column="14"/></return>
}<pos:position pos:line="128" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1463_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">riemann_batch_flush_nolock<pos:position pos:line="1" pos:column="38"/></name> <parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">cdtime_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">timeout<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                                       <parameter><decl><type><name><name pos:line="2" pos:column="40">struct<pos:position pos:line="2" pos:column="46"/></name> <name pos:line="2" pos:column="47">riemann_host<pos:position pos:line="2" pos:column="59"/></name></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">host<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">cdtime_t<pos:position pos:line="4" pos:column="13"/></name></type>    <name pos:line="4" pos:column="17">now<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type>         <name pos:line="5" pos:column="17">status<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">timeout<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&gt;<pos:position pos:line="7" pos:column="21"/></operator> <literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21"> <block pos:line="7" pos:column="22">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">now<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">cdtime<pos:position pos:line="8" pos:column="21"/></name> <argument_list pos:line="8" pos:column="22">()<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name><name pos:line="9" pos:column="14">host<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">batch_init<pos:position pos:line="9" pos:column="30"/></name></name> <operator pos:line="9" pos:column="31">+<pos:position pos:line="9" pos:column="32"/></operator> <name pos:line="9" pos:column="33">timeout<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">)<pos:position pos:line="9" pos:column="41"/></operator> <operator pos:line="9" pos:column="42">&gt;<pos:position pos:line="9" pos:column="46"/></operator> <name pos:line="9" pos:column="44">now<pos:position pos:line="9" pos:column="47"/></name></expr>)<pos:position pos:line="9" pos:column="48"/></condition><then pos:line="9" pos:column="48">
            <block type="pseudo"><return pos:line="10" pos:column="13">return <expr><name pos:line="10" pos:column="20">status<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></return></block></then></if>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">riemann_send_msg<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">host<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="28">host<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">batch_msg<pos:position pos:line="12" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">riemann_msg_protobuf_free<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name><name pos:line="13" pos:column="31">host<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">batch_msg<pos:position pos:line="13" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">host<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">use_tcp<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">&amp;&amp;<pos:position pos:line="15" pos:column="37"/></operator> <operator pos:line="15" pos:column="30">(<pos:position pos:line="15" pos:column="31"/></operator><operator pos:line="15" pos:column="31">(<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">status<pos:position pos:line="15" pos:column="38"/></name> <operator pos:line="15" pos:column="39">=<pos:position pos:line="15" pos:column="40"/></operator> <call><name pos:line="15" pos:column="41">riemann_recv_ack<pos:position pos:line="15" pos:column="57"/></name><argument_list pos:line="15" pos:column="57">(<argument><expr><name pos:line="15" pos:column="58">host<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call><operator pos:line="15" pos:column="63">)<pos:position pos:line="15" pos:column="64"/></operator> <operator pos:line="15" pos:column="65">!=<pos:position pos:line="15" pos:column="67"/></operator> <literal type="number" pos:line="15" pos:column="68">0<pos:position pos:line="15" pos:column="69"/></literal><operator pos:line="15" pos:column="69">)<pos:position pos:line="15" pos:column="70"/></operator></expr>)<pos:position pos:line="15" pos:column="71"/></condition><then pos:line="15" pos:column="71">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="9">riemann_disconnect<pos:position pos:line="16" pos:column="27"/></name> <argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">host<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">host<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">batch_init<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <call><name pos:line="18" pos:column="24">cdtime<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">()<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">host<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">batch_msg<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">NULL<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">status<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1068_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_handle_volume_usage_data<pos:position pos:line="1" pos:column="40"/></name> <parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">host_config_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">host<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="69">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">cfg_volume_usage_t<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">cfg_volume<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">na_elem_t<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">data<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">na_elem_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">elem_volume<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">na_elem_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">elem_volumes<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">na_elem_iter_t<pos:position pos:line="6" pos:column="23"/></name></type> <name pos:line="6" pos:column="24">iter_volume<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">elem_volumes<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <call><name pos:line="8" pos:column="24">na_elem_child<pos:position pos:line="8" pos:column="37"/></name> <argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">data<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="45">"volumes"<pos:position pos:line="8" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">elem_volumes<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">==<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34">
	<block pos:line="10" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">ERROR<pos:position pos:line="11" pos:column="22"/></name> <argument_list pos:line="11" pos:column="23">(<argument><expr><literal type="string" pos:line="11" pos:column="24">"netapp plugin: cna_handle_volume_usage_data: "<pos:position pos:line="11" pos:column="71"/></literal>
				<literal type="string" pos:line="12" pos:column="33">"na_elem_child (\"volumes\") failed "<pos:position pos:line="12" pos:column="70"/></literal>
				<literal type="string" pos:line="13" pos:column="33">"for host %s."<pos:position pos:line="13" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="49">host<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">-&gt;<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="55">name<pos:position pos:line="13" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">iter_volume<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">na_child_iterator<pos:position pos:line="17" pos:column="40"/></name> <argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">elem_volumes<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">elem_volume<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <call><name pos:line="18" pos:column="28">na_iterator_next<pos:position pos:line="18" pos:column="44"/></name> <argument_list pos:line="18" pos:column="45">(<argument><expr><operator pos:line="18" pos:column="46">&amp;<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="47">iter_volume<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></init>
			<condition><expr><name pos:line="19" pos:column="25">elem_volume<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">!=<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="40">NULL<pos:position pos:line="19" pos:column="44"/></name></expr>;<pos:position pos:line="19" pos:column="45"/></condition>
			<incr><expr><name pos:line="20" pos:column="25">elem_volume<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">=<pos:position pos:line="20" pos:column="38"/></operator> <call><name pos:line="20" pos:column="39">na_iterator_next<pos:position pos:line="20" pos:column="55"/></name> <argument_list pos:line="20" pos:column="56">(<argument><expr><operator pos:line="20" pos:column="57">&amp;<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="58">iter_volume<pos:position pos:line="20" pos:column="69"/></name></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr></incr>)<pos:position pos:line="20" pos:column="71"/></control>
	<block pos:line="21" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="22" pos:column="17">const<pos:position pos:line="22" pos:column="22"/></specifier> <name pos:line="22" pos:column="23">char<pos:position pos:line="22" pos:column="27"/></name> <modifier pos:line="22" pos:column="28">*<pos:position pos:line="22" pos:column="29"/></modifier></type><name pos:line="22" pos:column="29">volume_name<pos:position pos:line="22" pos:column="40"/></name></decl>, <modifier pos:line="22" pos:column="42">*<pos:position pos:line="22" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="22" pos:column="43">state<pos:position pos:line="22" pos:column="48"/></name></decl>;<pos:position pos:line="22" pos:column="49"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="24" pos:column="17">data_volume_usage_t<pos:position pos:line="24" pos:column="36"/></name> <modifier pos:line="24" pos:column="37">*<pos:position pos:line="24" pos:column="38"/></modifier></type><name pos:line="24" pos:column="38">v<pos:position pos:line="24" pos:column="39"/></name></decl>;<pos:position pos:line="24" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">uint64_t<pos:position pos:line="25" pos:column="25"/></name></type> <name pos:line="25" pos:column="26">value<pos:position pos:line="25" pos:column="31"/></name></decl>;<pos:position pos:line="25" pos:column="32"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="27" pos:column="17">na_elem_t<pos:position pos:line="27" pos:column="26"/></name> <modifier pos:line="27" pos:column="27">*<pos:position pos:line="27" pos:column="28"/></modifier></type><name pos:line="27" pos:column="28">sis<pos:position pos:line="27" pos:column="31"/></name></decl>;<pos:position pos:line="27" pos:column="32"/></decl_stmt>

		<expr_stmt><expr><name pos:line="29" pos:column="17">volume_name<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <call><name pos:line="29" pos:column="31">na_child_get_string<pos:position pos:line="29" pos:column="50"/></name> <argument_list pos:line="29" pos:column="51">(<argument><expr><name pos:line="29" pos:column="52">elem_volume<pos:position pos:line="29" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="65">"name"<pos:position pos:line="29" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">volume_name<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">==<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="36">NULL<pos:position pos:line="30" pos:column="40"/></name></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41">
			<block type="pseudo"><continue pos:line="31" pos:column="25">continue;<pos:position pos:line="31" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="33" pos:column="17">state<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <call><name pos:line="33" pos:column="25">na_child_get_string<pos:position pos:line="33" pos:column="44"/></name> <argument_list pos:line="33" pos:column="45">(<argument><expr><name pos:line="33" pos:column="46">elem_volume<pos:position pos:line="33" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="59">"state"<pos:position pos:line="33" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="68"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><operator pos:line="34" pos:column="21">(<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">state<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">==<pos:position pos:line="34" pos:column="30"/></operator> <name pos:line="34" pos:column="31">NULL<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">)<pos:position pos:line="34" pos:column="36"/></operator> <operator pos:line="34" pos:column="37">||<pos:position pos:line="34" pos:column="39"/></operator> <operator pos:line="34" pos:column="40">(<pos:position pos:line="34" pos:column="41"/></operator><call><name pos:line="34" pos:column="41">strcmp<pos:position pos:line="34" pos:column="47"/></name><argument_list pos:line="34" pos:column="47">(<argument><expr><name pos:line="34" pos:column="48">state<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="55">"online"<pos:position pos:line="34" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call> <operator pos:line="34" pos:column="65">!=<pos:position pos:line="34" pos:column="67"/></operator> <literal type="number" pos:line="34" pos:column="68">0<pos:position pos:line="34" pos:column="69"/></literal><operator pos:line="34" pos:column="69">)<pos:position pos:line="34" pos:column="70"/></operator></expr>)<pos:position pos:line="34" pos:column="71"/></condition><then pos:line="34" pos:column="71">
			<block type="pseudo"><continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="37" pos:column="17">/* get_volume_usage may return NULL if the volume is to be ignored. */</comment>
		<expr_stmt><expr><name pos:line="38" pos:column="17">v<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <call><name pos:line="38" pos:column="21">get_volume_usage<pos:position pos:line="38" pos:column="37"/></name> <argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">cfg_volume<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">volume_name<pos:position pos:line="38" pos:column="62"/></name></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="64"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">v<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">==<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="26">NULL<pos:position pos:line="39" pos:column="30"/></name></expr>)<pos:position pos:line="39" pos:column="31"/></condition><then pos:line="39" pos:column="31">
			<block type="pseudo"><continue pos:line="40" pos:column="25">continue;<pos:position pos:line="40" pos:column="34"/></continue></block></then></if>

		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">(<pos:position pos:line="42" pos:column="22"/></operator><name><name pos:line="42" pos:column="22">v<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">-&gt;<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="25">flags<pos:position pos:line="42" pos:column="30"/></name></name> <operator pos:line="42" pos:column="31">&amp;<pos:position pos:line="42" pos:column="36"/></operator> <name pos:line="42" pos:column="33">CFG_VOLUME_USAGE_SNAP<pos:position pos:line="42" pos:column="54"/></name><operator pos:line="42" pos:column="54">)<pos:position pos:line="42" pos:column="55"/></operator> <operator pos:line="42" pos:column="56">!=<pos:position pos:line="42" pos:column="58"/></operator> <literal type="number" pos:line="42" pos:column="59">0<pos:position pos:line="42" pos:column="60"/></literal></expr>)<pos:position pos:line="42" pos:column="61"/></condition><then pos:line="42" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">cna_handle_volume_snap_usage<pos:position pos:line="43" pos:column="53"/></name><argument_list pos:line="43" pos:column="53">(<argument><expr><name pos:line="43" pos:column="54">host<pos:position pos:line="43" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="60">v<pos:position pos:line="43" pos:column="61"/></name></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="63"/></expr_stmt></block></then></if>
		
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><operator pos:line="45" pos:column="21">(<pos:position pos:line="45" pos:column="22"/></operator><name><name pos:line="45" pos:column="22">v<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">-&gt;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="25">flags<pos:position pos:line="45" pos:column="30"/></name></name> <operator pos:line="45" pos:column="31">&amp;<pos:position pos:line="45" pos:column="36"/></operator> <name pos:line="45" pos:column="33">CFG_VOLUME_USAGE_DF<pos:position pos:line="45" pos:column="52"/></name><operator pos:line="45" pos:column="52">)<pos:position pos:line="45" pos:column="53"/></operator> <operator pos:line="45" pos:column="54">==<pos:position pos:line="45" pos:column="56"/></operator> <literal type="number" pos:line="45" pos:column="57">0<pos:position pos:line="45" pos:column="58"/></literal></expr>)<pos:position pos:line="45" pos:column="59"/></condition><then pos:line="45" pos:column="59">
			<block type="pseudo"><continue pos:line="46" pos:column="25">continue;<pos:position pos:line="46" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="48" pos:column="17">/* 2^4 exa-bytes? This will take a while ;) */</comment>
		<expr_stmt><expr><name pos:line="49" pos:column="17">value<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">=<pos:position pos:line="49" pos:column="24"/></operator> <call><name pos:line="49" pos:column="25">na_child_get_uint64<pos:position pos:line="49" pos:column="44"/></name><argument_list pos:line="49" pos:column="44">(<argument><expr><name pos:line="49" pos:column="45">elem_volume<pos:position pos:line="49" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="58">"size-available"<pos:position pos:line="49" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="76">UINT64_MAX<pos:position pos:line="49" pos:column="86"/></name></expr></argument>)<pos:position pos:line="49" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="88"/></expr_stmt>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">value<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">!=<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="30">UINT64_MAX<pos:position pos:line="50" pos:column="40"/></name></expr>)<pos:position pos:line="50" pos:column="41"/></condition><then pos:line="50" pos:column="41"> <block pos:line="50" pos:column="42">{
			<expr_stmt><expr><name><name pos:line="51" pos:column="25">v<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">-&gt;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="28">norm_free<pos:position pos:line="51" pos:column="37"/></name></name> <operator pos:line="51" pos:column="38">=<pos:position pos:line="51" pos:column="39"/></operator> <name pos:line="51" pos:column="40">value<pos:position pos:line="51" pos:column="45"/></name></expr>;<pos:position pos:line="51" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="52" pos:column="25">v<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">-&gt;<pos:position pos:line="52" pos:column="31"/></operator><name pos:line="52" pos:column="28">flags<pos:position pos:line="52" pos:column="33"/></name></name> <operator pos:line="52" pos:column="34">|=<pos:position pos:line="52" pos:column="36"/></operator> <name pos:line="52" pos:column="37">HAVE_VOLUME_USAGE_NORM_FREE<pos:position pos:line="52" pos:column="64"/></name></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="55" pos:column="17">value<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">=<pos:position pos:line="55" pos:column="24"/></operator> <call><name pos:line="55" pos:column="25">na_child_get_uint64<pos:position pos:line="55" pos:column="44"/></name><argument_list pos:line="55" pos:column="44">(<argument><expr><name pos:line="55" pos:column="45">elem_volume<pos:position pos:line="55" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="58">"size-used"<pos:position pos:line="55" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="71">UINT64_MAX<pos:position pos:line="55" pos:column="81"/></name></expr></argument>)<pos:position pos:line="55" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="83"/></expr_stmt>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">value<pos:position pos:line="56" pos:column="26"/></name> <operator pos:line="56" pos:column="27">!=<pos:position pos:line="56" pos:column="29"/></operator> <name pos:line="56" pos:column="30">UINT64_MAX<pos:position pos:line="56" pos:column="40"/></name></expr>)<pos:position pos:line="56" pos:column="41"/></condition><then pos:line="56" pos:column="41"> <block pos:line="56" pos:column="42">{
			<expr_stmt><expr><name><name pos:line="57" pos:column="25">v<pos:position pos:line="57" pos:column="26"/></name><operator pos:line="57" pos:column="26">-&gt;<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="28">norm_used<pos:position pos:line="57" pos:column="37"/></name></name> <operator pos:line="57" pos:column="38">=<pos:position pos:line="57" pos:column="39"/></operator> <name pos:line="57" pos:column="40">value<pos:position pos:line="57" pos:column="45"/></name></expr>;<pos:position pos:line="57" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="58" pos:column="25">v<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">-&gt;<pos:position pos:line="58" pos:column="31"/></operator><name pos:line="58" pos:column="28">flags<pos:position pos:line="58" pos:column="33"/></name></name> <operator pos:line="58" pos:column="34">|=<pos:position pos:line="58" pos:column="36"/></operator> <name pos:line="58" pos:column="37">HAVE_VOLUME_USAGE_NORM_USED<pos:position pos:line="58" pos:column="64"/></name></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="61" pos:column="17">value<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <call><name pos:line="61" pos:column="25">na_child_get_uint64<pos:position pos:line="61" pos:column="44"/></name><argument_list pos:line="61" pos:column="44">(<argument><expr><name pos:line="61" pos:column="45">elem_volume<pos:position pos:line="61" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="58">"snapshot-blocks-reserved"<pos:position pos:line="61" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="86">UINT64_MAX<pos:position pos:line="61" pos:column="96"/></name></expr></argument>)<pos:position pos:line="61" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="98"/></expr_stmt>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">value<pos:position pos:line="62" pos:column="26"/></name> <operator pos:line="62" pos:column="27">!=<pos:position pos:line="62" pos:column="29"/></operator> <name pos:line="62" pos:column="30">UINT64_MAX<pos:position pos:line="62" pos:column="40"/></name></expr>)<pos:position pos:line="62" pos:column="41"/></condition><then pos:line="62" pos:column="41"> <block pos:line="62" pos:column="42">{
			<comment type="block" pos:line="63" pos:column="25">/* 1 block == 1024 bytes  as per API docs */</comment>
			<expr_stmt><expr><name><name pos:line="64" pos:column="25">v<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">-&gt;<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="28">snap_reserved<pos:position pos:line="64" pos:column="41"/></name></name> <operator pos:line="64" pos:column="42">=<pos:position pos:line="64" pos:column="43"/></operator> <literal type="number" pos:line="64" pos:column="44">1024<pos:position pos:line="64" pos:column="48"/></literal> <operator pos:line="64" pos:column="49">*<pos:position pos:line="64" pos:column="50"/></operator> <name pos:line="64" pos:column="51">value<pos:position pos:line="64" pos:column="56"/></name></expr>;<pos:position pos:line="64" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="65" pos:column="25">v<pos:position pos:line="65" pos:column="26"/></name><operator pos:line="65" pos:column="26">-&gt;<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="28">flags<pos:position pos:line="65" pos:column="33"/></name></name> <operator pos:line="65" pos:column="34">|=<pos:position pos:line="65" pos:column="36"/></operator> <name pos:line="65" pos:column="37">HAVE_VOLUME_USAGE_SNAP_RSVD<pos:position pos:line="65" pos:column="64"/></name></expr>;<pos:position pos:line="65" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="66" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="68" pos:column="17">sis<pos:position pos:line="68" pos:column="20"/></name> <operator pos:line="68" pos:column="21">=<pos:position pos:line="68" pos:column="22"/></operator> <call><name pos:line="68" pos:column="23">na_elem_child<pos:position pos:line="68" pos:column="36"/></name><argument_list pos:line="68" pos:column="36">(<argument><expr><name pos:line="68" pos:column="37">elem_volume<pos:position pos:line="68" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="50">"sis"<pos:position pos:line="68" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="57"/></expr_stmt>
		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><name pos:line="69" pos:column="21">sis<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">!=<pos:position pos:line="69" pos:column="27"/></operator> <name pos:line="69" pos:column="28">NULL<pos:position pos:line="69" pos:column="32"/></name></expr>)<pos:position pos:line="69" pos:column="33"/></condition><then pos:line="69" pos:column="33"> <block pos:line="69" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="70" pos:column="25">cna_handle_volume_sis_data<pos:position pos:line="70" pos:column="51"/></name> <argument_list pos:line="70" pos:column="52">(<argument><expr><name pos:line="70" pos:column="53">host<pos:position pos:line="70" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="59">v<pos:position pos:line="70" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="62">sis<pos:position pos:line="70" pos:column="65"/></name></expr></argument>)<pos:position pos:line="70" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">cna_handle_volume_sis_saved<pos:position pos:line="71" pos:column="52"/></name> <argument_list pos:line="71" pos:column="53">(<argument><expr><name pos:line="71" pos:column="54">host<pos:position pos:line="71" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="60">v<pos:position pos:line="71" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="63">sis<pos:position pos:line="71" pos:column="66"/></name></expr></argument>)<pos:position pos:line="71" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="72" pos:column="18"/></block></then></if>
	}<pos:position pos:line="73" pos:column="10"/></block></for> <comment type="block" pos:line="73" pos:column="11">/* for (elem_volume) */</comment>

	<return pos:line="75" pos:column="9">return <expr><operator pos:line="75" pos:column="16">(<pos:position pos:line="75" pos:column="17"/></operator><call><name pos:line="75" pos:column="17">cna_submit_volume_usage_data<pos:position pos:line="75" pos:column="45"/></name> <argument_list pos:line="75" pos:column="46">(<argument><expr><name><name pos:line="75" pos:column="47">host<pos:position pos:line="75" pos:column="51"/></name><operator pos:line="75" pos:column="51">-&gt;<pos:position pos:line="75" pos:column="56"/></operator><name pos:line="75" pos:column="53">name<pos:position pos:line="75" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="59">cfg_volume<pos:position pos:line="75" pos:column="69"/></name></expr></argument>,
				<argument><expr><name><name pos:line="76" pos:column="33">host<pos:position pos:line="76" pos:column="37"/></name><operator pos:line="76" pos:column="37">-&gt;<pos:position pos:line="76" pos:column="42"/></operator><name pos:line="76" pos:column="39">cfg_volume_usage<pos:position pos:line="76" pos:column="55"/></name><operator pos:line="76" pos:column="55">-&gt;<pos:position pos:line="76" pos:column="60"/></operator><name pos:line="76" pos:column="57">interval<pos:position pos:line="76" pos:column="65"/></name><operator pos:line="76" pos:column="65">.<pos:position pos:line="76" pos:column="66"/></operator><name pos:line="76" pos:column="66">interval<pos:position pos:line="76" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="75"/></argument_list></call><operator pos:line="76" pos:column="75">)<pos:position pos:line="76" pos:column="76"/></operator></expr>;<pos:position pos:line="76" pos:column="77"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

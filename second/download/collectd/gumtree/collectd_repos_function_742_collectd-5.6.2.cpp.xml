<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_742_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rfc1035NameUnpack<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">buf<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">size_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">sz<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">off_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">off<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">name<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">size_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">ns<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list> <block pos:line="2" pos:column="41">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">off_t<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">no<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><literal type="number" pos:line="3" pos:column="14">0<pos:position pos:line="3" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">c<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">len<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">loop_detect<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">loop_detect<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&gt;<pos:position pos:line="7" pos:column="23"/></operator> <literal type="number" pos:line="7" pos:column="21">2<pos:position pos:line="7" pos:column="22"/></literal></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><literal type="number" pos:line="8" pos:column="12">4<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></return></block></then></if> <comment type="block" pos:line="8" pos:column="15">/* compression loop */</comment>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">ns<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">==<pos:position pos:line="9" pos:column="12"/></operator> <literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal></expr>)<pos:position pos:line="9" pos:column="15"/></condition><then pos:line="9" pos:column="15">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">4<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return></block></then></if> <comment type="block" pos:line="10" pos:column="15">/* probably compression loop */</comment>
  <do pos:line="11" pos:column="3">do <block pos:line="11" pos:column="6">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">off<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">)<pos:position pos:line="12" pos:column="15"/></operator> <operator pos:line="12" pos:column="16">&gt;=<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="19">(<pos:position pos:line="12" pos:column="20"/></operator><operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">off_t<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">)<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">sz<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">)<pos:position pos:line="12" pos:column="30"/></operator></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31">
      <block type="pseudo"><break pos:line="13" pos:column="7">break;<pos:position pos:line="13" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="14" pos:column="5">c<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">buf<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">+<pos:position pos:line="14" pos:column="16"/></operator> <operator pos:line="14" pos:column="17">(<pos:position pos:line="14" pos:column="18"/></operator><operator pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">off<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">)<pos:position pos:line="14" pos:column="23"/></operator><operator pos:line="14" pos:column="23">)<pos:position pos:line="14" pos:column="24"/></operator></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">c<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">&gt;<pos:position pos:line="15" pos:column="15"/></operator> <literal type="number" pos:line="15" pos:column="13">191<pos:position pos:line="15" pos:column="16"/></literal></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17"> <block pos:line="15" pos:column="18">{
      <comment type="block" pos:line="16" pos:column="7">/* blasted compression */</comment>
      <decl_stmt><decl><type><name pos:line="17" pos:column="7">int<pos:position pos:line="17" pos:column="10"/></name></type> <name pos:line="17" pos:column="11">rc<pos:position pos:line="17" pos:column="13"/></name></decl>;<pos:position pos:line="17" pos:column="14"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="18" pos:column="7">unsigned<pos:position pos:line="18" pos:column="15"/></name> <name pos:line="18" pos:column="16">short<pos:position pos:line="18" pos:column="21"/></name></type> <name pos:line="18" pos:column="22">s<pos:position pos:line="18" pos:column="23"/></name></decl>;<pos:position pos:line="18" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">off_t<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">ptr<pos:position pos:line="19" pos:column="16"/></name></decl>;<pos:position pos:line="19" pos:column="17"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">memcpy<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><operator pos:line="20" pos:column="14">&amp;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="15">s<pos:position pos:line="20" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="18">buf<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">+<pos:position pos:line="20" pos:column="23"/></operator> <operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><operator pos:line="20" pos:column="25">*<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">off<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">)<pos:position pos:line="20" pos:column="30"/></operator></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="32">sizeof<argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">s<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">s<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <call><name pos:line="21" pos:column="11">ntohs<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><name pos:line="21" pos:column="17">s<pos:position pos:line="21" pos:column="18"/></name></expr></argument>)<pos:position pos:line="21" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="22" pos:column="7">(<pos:position pos:line="22" pos:column="8"/></operator><operator pos:line="22" pos:column="8">*<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">off<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">)<pos:position pos:line="22" pos:column="13"/></operator> <operator pos:line="22" pos:column="14">+=<pos:position pos:line="22" pos:column="16"/></operator> <sizeof pos:line="22" pos:column="17">sizeof<argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">s<pos:position pos:line="22" pos:column="25"/></name></expr></argument>)<pos:position pos:line="22" pos:column="26"/></argument_list></sizeof></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
      <comment type="block" pos:line="23" pos:column="7">/* Sanity check */</comment>
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><operator pos:line="24" pos:column="11">(<pos:position pos:line="24" pos:column="12"/></operator><operator pos:line="24" pos:column="12">*<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">off<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">)<pos:position pos:line="24" pos:column="17"/></operator> <operator pos:line="24" pos:column="18">&gt;=<pos:position pos:line="24" pos:column="23"/></operator> <operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator><operator pos:line="24" pos:column="22">(<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">off_t<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">)<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="29">sz<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">)<pos:position pos:line="24" pos:column="32"/></operator></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33">
        <block type="pseudo"><return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">1<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return></block></then></if> <comment type="block" pos:line="25" pos:column="19">/* message too short */</comment>
      <expr_stmt><expr><name pos:line="26" pos:column="7">ptr<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <name pos:line="26" pos:column="13">s<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">&amp;<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="17">0x3FFF<pos:position pos:line="26" pos:column="23"/></literal></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
      <comment type="block" pos:line="27" pos:column="7">/* Make sure the pointer is inside this message */</comment>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name pos:line="28" pos:column="11">ptr<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">&gt;=<pos:position pos:line="28" pos:column="20"/></operator> <operator pos:line="28" pos:column="18">(<pos:position pos:line="28" pos:column="19"/></operator><operator pos:line="28" pos:column="19">(<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">off_t<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">)<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">sz<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">)<pos:position pos:line="28" pos:column="29"/></operator></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30">
        <block type="pseudo"><return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">2<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return></block></then></if> <comment type="block" pos:line="29" pos:column="19">/* bad compression ptr */</comment>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name pos:line="30" pos:column="11">ptr<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">&lt;<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="17">DNS_MSG_HDR_SZ<pos:position pos:line="30" pos:column="31"/></name></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32">
        <block type="pseudo"><return pos:line="31" pos:column="9">return <expr><literal type="number" pos:line="31" pos:column="16">2<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></return></block></then></if> <comment type="block" pos:line="31" pos:column="19">/* bad compression ptr */</comment>
      <expr_stmt><expr><name pos:line="32" pos:column="7">loop_detect<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">++<pos:position pos:line="32" pos:column="20"/></operator></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="33" pos:column="7">rc<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <call><name pos:line="33" pos:column="12">rfc1035NameUnpack<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">buf<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="35">sz<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="39">&amp;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="40">ptr<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">name<pos:position pos:line="33" pos:column="49"/></name> <operator pos:line="33" pos:column="50">+<pos:position pos:line="33" pos:column="51"/></operator> <name pos:line="33" pos:column="52">no<pos:position pos:line="33" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="56">ns<pos:position pos:line="33" pos:column="58"/></name> <operator pos:line="33" pos:column="59">-<pos:position pos:line="33" pos:column="60"/></operator> <name pos:line="33" pos:column="61">no<pos:position pos:line="33" pos:column="63"/></name></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name pos:line="34" pos:column="7">loop_detect<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">--<pos:position pos:line="34" pos:column="20"/></operator></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>
      <return pos:line="35" pos:column="7">return <expr><name pos:line="35" pos:column="14">rc<pos:position pos:line="35" pos:column="16"/></name></expr>;<pos:position pos:line="35" pos:column="17"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then> <elseif pos:line="36" pos:column="7">else <if pos:line="36" pos:column="12">if <condition pos:line="36" pos:column="15">(<expr><name pos:line="36" pos:column="16">c<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">&gt;<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="20">RFC1035_MAXLABELSZ<pos:position pos:line="36" pos:column="38"/></name></expr>)<pos:position pos:line="36" pos:column="39"/></condition><then pos:line="36" pos:column="39"> <block pos:line="36" pos:column="40">{
      <comment type="block" pos:line="37" pos:column="7">/*
       * "(The 10 and 01 combinations are reserved for future use.)"
       */</comment>
      <return pos:line="40" pos:column="7">return <expr><literal type="number" pos:line="40" pos:column="14">3<pos:position pos:line="40" pos:column="15"/></literal></expr>;<pos:position pos:line="40" pos:column="16"/></return> <comment type="block" pos:line="40" pos:column="17">/* reserved label/compression flags */</comment>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if></elseif> <else pos:line="41" pos:column="7">else <block pos:line="41" pos:column="12">{
      <expr_stmt><expr><operator pos:line="42" pos:column="7">(<pos:position pos:line="42" pos:column="8"/></operator><operator pos:line="42" pos:column="8">*<pos:position pos:line="42" pos:column="9"/></operator><name pos:line="42" pos:column="9">off<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">)<pos:position pos:line="42" pos:column="13"/></operator><operator pos:line="42" pos:column="13">++<pos:position pos:line="42" pos:column="15"/></operator></expr>;<pos:position pos:line="42" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">len<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <operator pos:line="43" pos:column="13">(<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">size_t<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">)<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="21">c<pos:position pos:line="43" pos:column="22"/></name></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
      <if pos:line="44" pos:column="7">if <condition pos:line="44" pos:column="10">(<expr><name pos:line="44" pos:column="11">len<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">==<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20">
        <block type="pseudo"><break pos:line="45" pos:column="9">break;<pos:position pos:line="45" pos:column="15"/></break></block></then></if>
      <if pos:line="46" pos:column="7">if <condition pos:line="46" pos:column="10">(<expr><name pos:line="46" pos:column="11">len<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">&gt;<pos:position pos:line="46" pos:column="19"/></operator> <operator pos:line="46" pos:column="17">(<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">ns<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">-<pos:position pos:line="46" pos:column="22"/></operator> <literal type="number" pos:line="46" pos:column="23">1<pos:position pos:line="46" pos:column="24"/></literal><operator pos:line="46" pos:column="24">)<pos:position pos:line="46" pos:column="25"/></operator></expr>)<pos:position pos:line="46" pos:column="26"/></condition><then pos:line="46" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="9">len<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <name pos:line="47" pos:column="15">ns<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">-<pos:position pos:line="47" pos:column="19"/></operator> <literal type="number" pos:line="47" pos:column="20">1<pos:position pos:line="47" pos:column="21"/></literal></expr>;<pos:position pos:line="47" pos:column="22"/></expr_stmt></block></then></if>
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><operator pos:line="48" pos:column="11">(<pos:position pos:line="48" pos:column="12"/></operator><operator pos:line="48" pos:column="12">*<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">off<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">)<pos:position pos:line="48" pos:column="17"/></operator> <operator pos:line="48" pos:column="18">+<pos:position pos:line="48" pos:column="19"/></operator> <name pos:line="48" pos:column="20">len<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">&gt;<pos:position pos:line="48" pos:column="28"/></operator> <name pos:line="48" pos:column="26">sz<pos:position pos:line="48" pos:column="28"/></name></expr>)<pos:position pos:line="48" pos:column="29"/></condition><then pos:line="48" pos:column="29">
        <block type="pseudo"><return pos:line="49" pos:column="9">return <expr><literal type="number" pos:line="49" pos:column="16">4<pos:position pos:line="49" pos:column="17"/></literal></expr>;<pos:position pos:line="49" pos:column="18"/></return></block></then></if> <comment type="block" pos:line="49" pos:column="19">/* message is too short */</comment>
      <if pos:line="50" pos:column="7">if <condition pos:line="50" pos:column="10">(<expr><name pos:line="50" pos:column="11">no<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">+<pos:position pos:line="50" pos:column="15"/></operator> <name pos:line="50" pos:column="16">len<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">+<pos:position pos:line="50" pos:column="21"/></operator> <literal type="number" pos:line="50" pos:column="22">1<pos:position pos:line="50" pos:column="23"/></literal> <operator pos:line="50" pos:column="24">&gt;<pos:position pos:line="50" pos:column="28"/></operator> <name pos:line="50" pos:column="26">ns<pos:position pos:line="50" pos:column="28"/></name></expr>)<pos:position pos:line="50" pos:column="29"/></condition><then pos:line="50" pos:column="29">
        <block type="pseudo"><return pos:line="51" pos:column="9">return <expr><literal type="number" pos:line="51" pos:column="16">5<pos:position pos:line="51" pos:column="17"/></literal></expr>;<pos:position pos:line="51" pos:column="18"/></return></block></then></if> <comment type="block" pos:line="51" pos:column="19">/* qname would overflow name buffer */</comment>
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">memcpy<pos:position pos:line="52" pos:column="13"/></name><argument_list pos:line="52" pos:column="13">(<argument><expr><name pos:line="52" pos:column="14">name<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">+<pos:position pos:line="52" pos:column="20"/></operator> <name pos:line="52" pos:column="21">no<pos:position pos:line="52" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="25">buf<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">+<pos:position pos:line="52" pos:column="30"/></operator> <operator pos:line="52" pos:column="31">(<pos:position pos:line="52" pos:column="32"/></operator><operator pos:line="52" pos:column="32">*<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="33">off<pos:position pos:line="52" pos:column="36"/></name><operator pos:line="52" pos:column="36">)<pos:position pos:line="52" pos:column="37"/></operator></expr></argument>, <argument><expr><name pos:line="52" pos:column="39">len<pos:position pos:line="52" pos:column="42"/></name></expr></argument>)<pos:position pos:line="52" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="53" pos:column="7">(<pos:position pos:line="53" pos:column="8"/></operator><operator pos:line="53" pos:column="8">*<pos:position pos:line="53" pos:column="9"/></operator><name pos:line="53" pos:column="9">off<pos:position pos:line="53" pos:column="12"/></name><operator pos:line="53" pos:column="12">)<pos:position pos:line="53" pos:column="13"/></operator> <operator pos:line="53" pos:column="14">+=<pos:position pos:line="53" pos:column="16"/></operator> <name pos:line="53" pos:column="17">len<pos:position pos:line="53" pos:column="20"/></name></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="54" pos:column="7">no<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">+=<pos:position pos:line="54" pos:column="12"/></operator> <name pos:line="54" pos:column="13">len<pos:position pos:line="54" pos:column="16"/></name></expr>;<pos:position pos:line="54" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="55" pos:column="7">*<pos:position pos:line="55" pos:column="8"/></operator><operator pos:line="55" pos:column="8">(<pos:position pos:line="55" pos:column="9"/></operator><name pos:line="55" pos:column="9">name<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">+<pos:position pos:line="55" pos:column="15"/></operator> <operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="17">no<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">++<pos:position pos:line="55" pos:column="21"/></operator><operator pos:line="55" pos:column="21">)<pos:position pos:line="55" pos:column="22"/></operator><operator pos:line="55" pos:column="22">)<pos:position pos:line="55" pos:column="23"/></operator> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <literal type="char" pos:line="55" pos:column="26">'.'<pos:position pos:line="55" pos:column="29"/></literal></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>
  }<pos:position pos:line="57" pos:column="4"/></block> while <condition pos:line="57" pos:column="11">(<expr><name pos:line="57" pos:column="12">c<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">&gt;<pos:position pos:line="57" pos:column="18"/></operator> <literal type="number" pos:line="57" pos:column="16">0<pos:position pos:line="57" pos:column="17"/></literal></expr>)<pos:position pos:line="57" pos:column="18"/></condition>;<pos:position pos:line="57" pos:column="19"/></do>
  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><name pos:line="58" pos:column="7">no<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">&gt;<pos:position pos:line="58" pos:column="14"/></operator> <literal type="number" pos:line="58" pos:column="12">0<pos:position pos:line="58" pos:column="13"/></literal></expr>)<pos:position pos:line="58" pos:column="14"/></condition><then pos:line="58" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="59" pos:column="5">*<pos:position pos:line="59" pos:column="6"/></operator><operator pos:line="59" pos:column="6">(<pos:position pos:line="59" pos:column="7"/></operator><name pos:line="59" pos:column="7">name<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">+<pos:position pos:line="59" pos:column="13"/></operator> <name pos:line="59" pos:column="14">no<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">-<pos:position pos:line="59" pos:column="18"/></operator> <literal type="number" pos:line="59" pos:column="19">1<pos:position pos:line="59" pos:column="20"/></literal><operator pos:line="59" pos:column="20">)<pos:position pos:line="59" pos:column="21"/></operator> <operator pos:line="59" pos:column="22">=<pos:position pos:line="59" pos:column="23"/></operator> <literal type="char" pos:line="59" pos:column="24">'\0'<pos:position pos:line="59" pos:column="28"/></literal></expr>;<pos:position pos:line="59" pos:column="29"/></expr_stmt></block></then></if>
  <comment type="block" pos:line="60" pos:column="3">/* make sure we didn't allow someone to overflow the name buffer */</comment>
  <expr_stmt><expr><call><name pos:line="61" pos:column="3">assert<pos:position pos:line="61" pos:column="9"/></name><argument_list pos:line="61" pos:column="9">(<argument><expr><name pos:line="61" pos:column="10">no<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">&lt;=<pos:position pos:line="61" pos:column="18"/></operator> <operator pos:line="61" pos:column="16">(<pos:position pos:line="61" pos:column="17"/></operator><operator pos:line="61" pos:column="17">(<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="18">off_t<pos:position pos:line="61" pos:column="23"/></name><operator pos:line="61" pos:column="23">)<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="24">ns<pos:position pos:line="61" pos:column="26"/></name><operator pos:line="61" pos:column="26">)<pos:position pos:line="61" pos:column="27"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
  <return pos:line="62" pos:column="3">return <expr><literal type="number" pos:line="62" pos:column="10">0<pos:position pos:line="62" pos:column="11"/></literal></expr>;<pos:position pos:line="62" pos:column="12"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

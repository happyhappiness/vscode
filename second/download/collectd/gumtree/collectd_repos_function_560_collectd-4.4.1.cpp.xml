<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_560_collectd-4.4.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">thread_init<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">os_handler_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ret_os_handler<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">os_handler_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">os_handler<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ipmi_open_option_t<pos:position pos:line="4" pos:column="21"/></name></type> <name><name pos:line="4" pos:column="22">open_option<pos:position pos:line="4" pos:column="33"/></name><index pos:line="4" pos:column="33">[<expr><literal type="number" pos:line="4" pos:column="34">1<pos:position pos:line="4" pos:column="35"/></literal></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ipmi_con_t<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">smi_connection<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ipmi_domain_id_t<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">domain_id<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">os_handler<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <call><name pos:line="9" pos:column="16">ipmi_posix_thread_setup_os_handler<pos:position pos:line="9" pos:column="50"/></name> <argument_list pos:line="9" pos:column="51">(<argument><expr><name pos:line="9" pos:column="52">SIGUSR2<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">os_handler<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">==<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name> <argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="string" pos:line="12" pos:column="12">"ipmi plugin: ipmi_posix_thread_setup_os_handler failed."<pos:position pos:line="12" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">ipmi_init<pos:position pos:line="16" pos:column="12"/></name> <argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">os_handler<pos:position pos:line="16" pos:column="24"/></name></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">status<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">ipmi_smi_setup_con<pos:position pos:line="18" pos:column="30"/></name> <argument_list pos:line="18" pos:column="31">(<comment type="block" pos:line="18" pos:column="32">/* if_num = */</comment> <argument><expr><literal type="number" pos:line="18" pos:column="47">0<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>,
      <argument><expr><name pos:line="19" pos:column="7">os_handler<pos:position pos:line="19" pos:column="17"/></name></expr></argument>,
      <comment type="block" pos:line="20" pos:column="7">/* user data = */</comment> <argument><expr><name pos:line="20" pos:column="25">NULL<pos:position pos:line="20" pos:column="29"/></name></expr></argument>,
      <argument><expr><operator pos:line="21" pos:column="7">&amp;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="8">smi_connection<pos:position pos:line="21" pos:column="22"/></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">status<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">!=<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19">
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">c_ipmi_error<pos:position pos:line="24" pos:column="17"/></name> <argument_list pos:line="24" pos:column="18">(<argument><expr><literal type="string" pos:line="24" pos:column="19">"ipmi_smi_setup_con"<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">status<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><operator pos:line="25" pos:column="13">-<pos:position pos:line="25" pos:column="14"/></operator><literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal><operator pos:line="25" pos:column="15">)<pos:position pos:line="25" pos:column="16"/></operator></expr>;<pos:position pos:line="25" pos:column="17"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">memset<pos:position pos:line="28" pos:column="9"/></name> <argument_list pos:line="28" pos:column="10">(<argument><expr><name pos:line="28" pos:column="11">open_option<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="24">0<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="27">sizeof <argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">open_option<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">open_option<pos:position pos:line="29" pos:column="14"/></name><index pos:line="29" pos:column="14">[<expr><literal type="number" pos:line="29" pos:column="15">0<pos:position pos:line="29" pos:column="16"/></literal></expr>]<pos:position pos:line="29" pos:column="17"/></index></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">option<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="27">IPMI_OPEN_OPTION_ALL<pos:position pos:line="29" pos:column="47"/></name></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">open_option<pos:position pos:line="30" pos:column="14"/></name><index pos:line="30" pos:column="14">[<expr><literal type="number" pos:line="30" pos:column="15">0<pos:position pos:line="30" pos:column="16"/></literal></expr>]<pos:position pos:line="30" pos:column="17"/></index></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">ival<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <literal type="number" pos:line="30" pos:column="25">1<pos:position pos:line="30" pos:column="26"/></literal></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name pos:line="32" pos:column="3">status<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <call><name pos:line="32" pos:column="12">ipmi_open_domain<pos:position pos:line="32" pos:column="28"/></name> <argument_list pos:line="32" pos:column="29">(<argument><expr><literal type="string" pos:line="32" pos:column="30">"mydomain"<pos:position pos:line="32" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="42">&amp;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="43">smi_connection<pos:position pos:line="32" pos:column="57"/></name></expr></argument>, <comment type="block" pos:line="32" pos:column="59">/* num_con = */</comment> <argument><expr><literal type="number" pos:line="32" pos:column="75">1<pos:position pos:line="32" pos:column="76"/></literal></expr></argument>,
      <argument><expr><name pos:line="33" pos:column="7">domain_connection_change_handler<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <comment type="block" pos:line="33" pos:column="41">/* user data = */</comment> <argument><expr><name pos:line="33" pos:column="59">NULL<pos:position pos:line="33" pos:column="63"/></name></expr></argument>,
      <comment type="block" pos:line="34" pos:column="7">/* domain_fully_up_handler = */</comment> <argument><expr><name pos:line="34" pos:column="39">NULL<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <comment type="block" pos:line="34" pos:column="45">/* user data = */</comment> <argument><expr><name pos:line="34" pos:column="63">NULL<pos:position pos:line="34" pos:column="67"/></name></expr></argument>,
      <argument><expr><name pos:line="35" pos:column="7">open_option<pos:position pos:line="35" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="20">sizeof <argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">open_option<pos:position pos:line="35" pos:column="39"/></name></expr></argument>)<pos:position pos:line="35" pos:column="40"/></argument_list></sizeof> <operator pos:line="35" pos:column="41">/<pos:position pos:line="35" pos:column="42"/></operator> <sizeof pos:line="35" pos:column="43">sizeof <argument_list pos:line="35" pos:column="50">(<argument><expr><name><name pos:line="35" pos:column="51">open_option<pos:position pos:line="35" pos:column="62"/></name><index pos:line="35" pos:column="62">[<expr><literal type="number" pos:line="35" pos:column="63">0<pos:position pos:line="35" pos:column="64"/></literal></expr>]<pos:position pos:line="35" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></sizeof></expr></argument>,
      <argument><expr><operator pos:line="36" pos:column="7">&amp;<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="8">domain_id<pos:position pos:line="36" pos:column="17"/></name></expr></argument>)<pos:position pos:line="36" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>
  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><name pos:line="37" pos:column="7">status<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">!=<pos:position pos:line="37" pos:column="16"/></operator> <literal type="number" pos:line="37" pos:column="17">0<pos:position pos:line="37" pos:column="18"/></literal></expr>)<pos:position pos:line="37" pos:column="19"/></condition><then pos:line="37" pos:column="19">
  <block pos:line="38" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">c_ipmi_error<pos:position pos:line="39" pos:column="17"/></name> <argument_list pos:line="39" pos:column="18">(<argument><expr><literal type="string" pos:line="39" pos:column="19">"ipmi_open_domain"<pos:position pos:line="39" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="39">status<pos:position pos:line="39" pos:column="45"/></name></expr></argument>)<pos:position pos:line="39" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><operator pos:line="40" pos:column="13">-<pos:position pos:line="40" pos:column="14"/></operator><literal type="number" pos:line="40" pos:column="14">1<pos:position pos:line="40" pos:column="15"/></literal><operator pos:line="40" pos:column="15">)<pos:position pos:line="40" pos:column="16"/></operator></expr>;<pos:position pos:line="40" pos:column="17"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="43" pos:column="3">*<pos:position pos:line="43" pos:column="4"/></operator><name pos:line="43" pos:column="4">ret_os_handler<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <name pos:line="43" pos:column="21">os_handler<pos:position pos:line="43" pos:column="31"/></name></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
  <return pos:line="44" pos:column="3">return <expr><operator pos:line="44" pos:column="10">(<pos:position pos:line="44" pos:column="11"/></operator><literal type="number" pos:line="44" pos:column="11">0<pos:position pos:line="44" pos:column="12"/></literal><operator pos:line="44" pos:column="12">)<pos:position pos:line="44" pos:column="13"/></operator></expr>;<pos:position pos:line="44" pos:column="14"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

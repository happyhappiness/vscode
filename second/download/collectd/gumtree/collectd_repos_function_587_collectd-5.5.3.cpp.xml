<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_587_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">agg_instance_create_name<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">agg_instance_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">inst<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="60">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">value_list_t<pos:position pos:line="2" pos:column="17"/></name> <specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">vl<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">aggregation_t<pos:position pos:line="2" pos:column="42"/></name> <specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">agg<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:define pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">define<pos:position pos:line="4" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="4" pos:column="9">COPY_FIELD<pos:position pos:line="4" pos:column="19"/></name><parameter_list pos:line="4" pos:column="19">(<parameter><type><name pos:line="4" pos:column="20">buffer<pos:position pos:line="4" pos:column="26"/></name></type></parameter>, <parameter><type><name pos:line="4" pos:column="28">buffer_size<pos:position pos:line="4" pos:column="39"/></name></type></parameter>, <parameter><type><name pos:line="4" pos:column="41">field<pos:position pos:line="4" pos:column="46"/></name></type></parameter>, <parameter><type><name pos:line="4" pos:column="48">group_mask<pos:position pos:line="4" pos:column="58"/></name></type></parameter>, <parameter><type><name pos:line="4" pos:column="60">all_value<pos:position pos:line="4" pos:column="69"/></name></type></parameter>)<pos:position pos:line="4" pos:column="70"/></parameter_list></cpp:macro> <cpp:value pos:line="4" pos:column="71">do { \
  if (agg-&gt;set_ ## field != NULL) \
    sstrncpy (buffer, agg-&gt;set_ ## field, buffer_size); \
  else if ((agg-&gt;regex_fields &amp; group_mask) \
      &amp;&amp; (agg-&gt;group_by &amp; group_mask)) \
    sstrncpy (buffer, vl-&gt;field, buffer_size); \
  else if ((agg-&gt;regex_fields &amp; group_mask) \
      &amp;&amp; (AGG_MATCHES_ALL (agg-&gt;ident.field))) \
    sstrncpy (buffer, all_value, buffer_size); \
  else \
    sstrncpy (buffer, agg-&gt;ident.field, buffer_size); \
} while (0)<pos:position pos:line="15" pos:column="12"/></cpp:value></cpp:define>

  <comment type="block" pos:line="17" pos:column="3">/* Host */</comment>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">COPY_FIELD<pos:position pos:line="18" pos:column="13"/></name> <argument_list pos:line="18" pos:column="14">(<argument><expr><name><name pos:line="18" pos:column="15">inst<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">ident<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">.<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">host<pos:position pos:line="18" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="33">sizeof <argument_list pos:line="18" pos:column="40">(<argument><expr><name><name pos:line="18" pos:column="41">inst<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">-&gt;<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="47">ident<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">.<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="53">host<pos:position pos:line="18" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></sizeof></expr></argument>,
      <argument><expr><name pos:line="19" pos:column="7">host<pos:position pos:line="19" pos:column="11"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="13">LU_GROUP_BY_HOST<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="31">"global"<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* Plugin */</comment>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name><name pos:line="22" pos:column="7">agg<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">set_plugin<pos:position pos:line="22" pos:column="22"/></name></name> <operator pos:line="22" pos:column="23">!=<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">NULL<pos:position pos:line="22" pos:column="30"/></name></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="5">sstrncpy<pos:position pos:line="23" pos:column="13"/></name> <argument_list pos:line="23" pos:column="14">(<argument><expr><name><name pos:line="23" pos:column="15">inst<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">ident<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">plugin<pos:position pos:line="23" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="35">agg<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">-&gt;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="40">set_plugin<pos:position pos:line="23" pos:column="50"/></name></name></expr></argument>,
        <argument><expr><sizeof pos:line="24" pos:column="9">sizeof <argument_list pos:line="24" pos:column="16">(<argument><expr><name><name pos:line="24" pos:column="17">inst<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">ident<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">.<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="29">plugin<pos:position pos:line="24" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt></block></then>
  <else pos:line="25" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="5">sstrncpy<pos:position pos:line="26" pos:column="13"/></name> <argument_list pos:line="26" pos:column="14">(<argument><expr><name><name pos:line="26" pos:column="15">inst<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">ident<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">.<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">plugin<pos:position pos:line="26" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="35">"aggregation"<pos:position pos:line="26" pos:column="48"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="50">sizeof <argument_list pos:line="26" pos:column="57">(<argument><expr><name><name pos:line="26" pos:column="58">inst<pos:position pos:line="26" pos:column="62"/></name><operator pos:line="26" pos:column="62">-&gt;<pos:position pos:line="26" pos:column="67"/></operator><name pos:line="26" pos:column="64">ident<pos:position pos:line="26" pos:column="69"/></name><operator pos:line="26" pos:column="69">.<pos:position pos:line="26" pos:column="70"/></operator><name pos:line="26" pos:column="70">plugin<pos:position pos:line="26" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="79"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="28" pos:column="3">/* Plugin instance */</comment>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name><name pos:line="29" pos:column="7">agg<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">set_plugin_instance<pos:position pos:line="29" pos:column="31"/></name></name> <operator pos:line="29" pos:column="32">!=<pos:position pos:line="29" pos:column="34"/></operator> <name pos:line="29" pos:column="35">NULL<pos:position pos:line="29" pos:column="39"/></name></expr>)<pos:position pos:line="29" pos:column="40"/></condition><then pos:line="29" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="5">sstrncpy<pos:position pos:line="30" pos:column="13"/></name> <argument_list pos:line="30" pos:column="14">(<argument><expr><name><name pos:line="30" pos:column="15">inst<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">ident<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">.<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="27">plugin_instance<pos:position pos:line="30" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="44">agg<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">-&gt;<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="49">set_plugin_instance<pos:position pos:line="30" pos:column="68"/></name></name></expr></argument>,
        <argument><expr><sizeof pos:line="31" pos:column="9">sizeof <argument_list pos:line="31" pos:column="16">(<argument><expr><name><name pos:line="31" pos:column="17">inst<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">ident<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">.<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">plugin_instance<pos:position pos:line="31" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt></block></then>
  <else pos:line="32" pos:column="3">else
  <block pos:line="33" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">char<pos:position pos:line="34" pos:column="9"/></name></type> <name><name pos:line="34" pos:column="10">tmp_plugin<pos:position pos:line="34" pos:column="20"/></name><index pos:line="34" pos:column="20">[<expr><name pos:line="34" pos:column="21">DATA_MAX_NAME_LEN<pos:position pos:line="34" pos:column="38"/></name></expr>]<pos:position pos:line="34" pos:column="39"/></index></name></decl>;<pos:position pos:line="34" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">char<pos:position pos:line="35" pos:column="9"/></name></type> <name><name pos:line="35" pos:column="10">tmp_plugin_instance<pos:position pos:line="35" pos:column="29"/></name><index pos:line="35" pos:column="29">[<expr><name pos:line="35" pos:column="30">DATA_MAX_NAME_LEN<pos:position pos:line="35" pos:column="47"/></name></expr>]<pos:position pos:line="35" pos:column="48"/></index></name> <init pos:line="35" pos:column="49">= <expr><literal type="string" pos:line="35" pos:column="51">""<pos:position pos:line="35" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="35" pos:column="54"/></decl_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">(<pos:position pos:line="37" pos:column="10"/></operator><name><name pos:line="37" pos:column="10">agg<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">-&gt;<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="15">regex_fields<pos:position pos:line="37" pos:column="27"/></name></name> <operator pos:line="37" pos:column="28">&amp;<pos:position pos:line="37" pos:column="33"/></operator> <name pos:line="37" pos:column="30">LU_GROUP_BY_PLUGIN<pos:position pos:line="37" pos:column="48"/></name><operator pos:line="37" pos:column="48">)<pos:position pos:line="37" pos:column="49"/></operator>
        <operator pos:line="38" pos:column="9">&amp;&amp;<pos:position pos:line="38" pos:column="19"/></operator> <operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><name><name pos:line="38" pos:column="13">agg<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">group_by<pos:position pos:line="38" pos:column="26"/></name></name> <operator pos:line="38" pos:column="27">&amp;<pos:position pos:line="38" pos:column="32"/></operator> <name pos:line="38" pos:column="29">LU_GROUP_BY_PLUGIN<pos:position pos:line="38" pos:column="47"/></name><operator pos:line="38" pos:column="47">)<pos:position pos:line="38" pos:column="48"/></operator></expr>)<pos:position pos:line="38" pos:column="49"/></condition><then pos:line="38" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="7">sstrncpy<pos:position pos:line="39" pos:column="15"/></name> <argument_list pos:line="39" pos:column="16">(<argument><expr><name pos:line="39" pos:column="17">tmp_plugin<pos:position pos:line="39" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="29">vl<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">plugin<pos:position pos:line="39" pos:column="39"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="41">sizeof <argument_list pos:line="39" pos:column="48">(<argument><expr><name pos:line="39" pos:column="49">tmp_plugin<pos:position pos:line="39" pos:column="59"/></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt></block></then>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><operator pos:line="40" pos:column="14">(<pos:position pos:line="40" pos:column="15"/></operator><name><name pos:line="40" pos:column="15">agg<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">regex_fields<pos:position pos:line="40" pos:column="32"/></name></name> <operator pos:line="40" pos:column="33">&amp;<pos:position pos:line="40" pos:column="38"/></operator> <name pos:line="40" pos:column="35">LU_GROUP_BY_PLUGIN<pos:position pos:line="40" pos:column="53"/></name><operator pos:line="40" pos:column="53">)<pos:position pos:line="40" pos:column="54"/></operator>
        <operator pos:line="41" pos:column="9">&amp;&amp;<pos:position pos:line="41" pos:column="19"/></operator> <operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><call><name pos:line="41" pos:column="13">AGG_MATCHES_ALL<pos:position pos:line="41" pos:column="28"/></name> <argument_list pos:line="41" pos:column="29">(<argument><expr><name><name pos:line="41" pos:column="30">agg<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">-&gt;<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="35">ident<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">.<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="41">plugin<pos:position pos:line="41" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call><operator pos:line="41" pos:column="48">)<pos:position pos:line="41" pos:column="49"/></operator></expr>)<pos:position pos:line="41" pos:column="50"/></condition><then pos:line="41" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">sstrncpy<pos:position pos:line="42" pos:column="15"/></name> <argument_list pos:line="42" pos:column="16">(<argument><expr><name pos:line="42" pos:column="17">tmp_plugin<pos:position pos:line="42" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="29">""<pos:position pos:line="42" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="33">sizeof <argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">tmp_plugin<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <else pos:line="43" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="7">sstrncpy<pos:position pos:line="44" pos:column="15"/></name> <argument_list pos:line="44" pos:column="16">(<argument><expr><name pos:line="44" pos:column="17">tmp_plugin<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="29">agg<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">ident<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">.<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="40">plugin<pos:position pos:line="44" pos:column="46"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="48">sizeof <argument_list pos:line="44" pos:column="55">(<argument><expr><name pos:line="44" pos:column="56">tmp_plugin<pos:position pos:line="44" pos:column="66"/></name></expr></argument>)<pos:position pos:line="44" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="69"/></expr_stmt></block></else></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">(<pos:position pos:line="46" pos:column="10"/></operator><name><name pos:line="46" pos:column="10">agg<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">regex_fields<pos:position pos:line="46" pos:column="27"/></name></name> <operator pos:line="46" pos:column="28">&amp;<pos:position pos:line="46" pos:column="33"/></operator> <name pos:line="46" pos:column="30">LU_GROUP_BY_PLUGIN_INSTANCE<pos:position pos:line="46" pos:column="57"/></name><operator pos:line="46" pos:column="57">)<pos:position pos:line="46" pos:column="58"/></operator>
        <operator pos:line="47" pos:column="9">&amp;&amp;<pos:position pos:line="47" pos:column="19"/></operator> <operator pos:line="47" pos:column="12">(<pos:position pos:line="47" pos:column="13"/></operator><name><name pos:line="47" pos:column="13">agg<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">group_by<pos:position pos:line="47" pos:column="26"/></name></name> <operator pos:line="47" pos:column="27">&amp;<pos:position pos:line="47" pos:column="32"/></operator> <name pos:line="47" pos:column="29">LU_GROUP_BY_PLUGIN_INSTANCE<pos:position pos:line="47" pos:column="56"/></name><operator pos:line="47" pos:column="56">)<pos:position pos:line="47" pos:column="57"/></operator></expr>)<pos:position pos:line="47" pos:column="58"/></condition><then pos:line="47" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="7">sstrncpy<pos:position pos:line="48" pos:column="15"/></name> <argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">tmp_plugin_instance<pos:position pos:line="48" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="38">vl<pos:position pos:line="48" pos:column="40"/></name><operator pos:line="48" pos:column="40">-&gt;<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="42">plugin_instance<pos:position pos:line="48" pos:column="57"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="49" pos:column="11">sizeof <argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">tmp_plugin_instance<pos:position pos:line="49" pos:column="38"/></name></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt></block></then>
    <elseif pos:line="50" pos:column="5">else <if pos:line="50" pos:column="10">if <condition pos:line="50" pos:column="13">(<expr><operator pos:line="50" pos:column="14">(<pos:position pos:line="50" pos:column="15"/></operator><name><name pos:line="50" pos:column="15">agg<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">-&gt;<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="20">regex_fields<pos:position pos:line="50" pos:column="32"/></name></name> <operator pos:line="50" pos:column="33">&amp;<pos:position pos:line="50" pos:column="38"/></operator> <name pos:line="50" pos:column="35">LU_GROUP_BY_PLUGIN_INSTANCE<pos:position pos:line="50" pos:column="62"/></name><operator pos:line="50" pos:column="62">)<pos:position pos:line="50" pos:column="63"/></operator>
        <operator pos:line="51" pos:column="9">&amp;&amp;<pos:position pos:line="51" pos:column="19"/></operator> <operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><call><name pos:line="51" pos:column="13">AGG_MATCHES_ALL<pos:position pos:line="51" pos:column="28"/></name> <argument_list pos:line="51" pos:column="29">(<argument><expr><name><name pos:line="51" pos:column="30">agg<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">-&gt;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="35">ident<pos:position pos:line="51" pos:column="40"/></name><operator pos:line="51" pos:column="40">.<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="41">plugin_instance<pos:position pos:line="51" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call><operator pos:line="51" pos:column="57">)<pos:position pos:line="51" pos:column="58"/></operator></expr>)<pos:position pos:line="51" pos:column="59"/></condition><then pos:line="51" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="7">sstrncpy<pos:position pos:line="52" pos:column="15"/></name> <argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">tmp_plugin_instance<pos:position pos:line="52" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="38">""<pos:position pos:line="52" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="42">sizeof <argument_list pos:line="52" pos:column="49">(<argument><expr><name pos:line="52" pos:column="50">tmp_plugin_instance<pos:position pos:line="52" pos:column="69"/></name></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="72"/></expr_stmt></block></then></if></elseif>
    <else pos:line="53" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="7">sstrncpy<pos:position pos:line="54" pos:column="15"/></name> <argument_list pos:line="54" pos:column="16">(<argument><expr><name pos:line="54" pos:column="17">tmp_plugin_instance<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="38">agg<pos:position pos:line="54" pos:column="41"/></name><operator pos:line="54" pos:column="41">-&gt;<pos:position pos:line="54" pos:column="46"/></operator><name pos:line="54" pos:column="43">ident<pos:position pos:line="54" pos:column="48"/></name><operator pos:line="54" pos:column="48">.<pos:position pos:line="54" pos:column="49"/></operator><name pos:line="54" pos:column="49">plugin_instance<pos:position pos:line="54" pos:column="64"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="55" pos:column="11">sizeof <argument_list pos:line="55" pos:column="18">(<argument><expr><name pos:line="55" pos:column="19">tmp_plugin_instance<pos:position pos:line="55" pos:column="38"/></name></expr></argument>)<pos:position pos:line="55" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt></block></else></if>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">(<pos:position pos:line="57" pos:column="10"/></operator><call><name pos:line="57" pos:column="10">strcmp<pos:position pos:line="57" pos:column="16"/></name> <argument_list pos:line="57" pos:column="17">(<argument><expr><literal type="string" pos:line="57" pos:column="18">""<pos:position pos:line="57" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="22">tmp_plugin<pos:position pos:line="57" pos:column="32"/></name></expr></argument>)<pos:position pos:line="57" pos:column="33"/></argument_list></call> <operator pos:line="57" pos:column="34">==<pos:position pos:line="57" pos:column="36"/></operator> <literal type="number" pos:line="57" pos:column="37">0<pos:position pos:line="57" pos:column="38"/></literal><operator pos:line="57" pos:column="38">)<pos:position pos:line="57" pos:column="39"/></operator>
        <operator pos:line="58" pos:column="9">&amp;&amp;<pos:position pos:line="58" pos:column="19"/></operator> <operator pos:line="58" pos:column="12">(<pos:position pos:line="58" pos:column="13"/></operator><call><name pos:line="58" pos:column="13">strcmp<pos:position pos:line="58" pos:column="19"/></name> <argument_list pos:line="58" pos:column="20">(<argument><expr><literal type="string" pos:line="58" pos:column="21">""<pos:position pos:line="58" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="25">tmp_plugin_instance<pos:position pos:line="58" pos:column="44"/></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call> <operator pos:line="58" pos:column="46">==<pos:position pos:line="58" pos:column="48"/></operator> <literal type="number" pos:line="58" pos:column="49">0<pos:position pos:line="58" pos:column="50"/></literal><operator pos:line="58" pos:column="50">)<pos:position pos:line="58" pos:column="51"/></operator></expr>)<pos:position pos:line="58" pos:column="52"/></condition><then pos:line="58" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="7">sstrncpy<pos:position pos:line="59" pos:column="15"/></name> <argument_list pos:line="59" pos:column="16">(<argument><expr><name><name pos:line="59" pos:column="17">inst<pos:position pos:line="59" pos:column="21"/></name><operator pos:line="59" pos:column="21">-&gt;<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="23">ident<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">.<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="29">plugin_instance<pos:position pos:line="59" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="46">AGG_FUNC_PLACEHOLDER<pos:position pos:line="59" pos:column="66"/></name></expr></argument>,
          <argument><expr><sizeof pos:line="60" pos:column="11">sizeof <argument_list pos:line="60" pos:column="18">(<argument><expr><name><name pos:line="60" pos:column="19">inst<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">-&gt;<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="25">ident<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">.<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="31">plugin_instance<pos:position pos:line="60" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="49"/></expr_stmt></block></then>
    <elseif pos:line="61" pos:column="5">else <if pos:line="61" pos:column="10">if <condition pos:line="61" pos:column="13">(<expr><call><name pos:line="61" pos:column="14">strcmp<pos:position pos:line="61" pos:column="20"/></name> <argument_list pos:line="61" pos:column="21">(<argument><expr><literal type="string" pos:line="61" pos:column="22">""<pos:position pos:line="61" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="26">tmp_plugin<pos:position pos:line="61" pos:column="36"/></name></expr></argument>)<pos:position pos:line="61" pos:column="37"/></argument_list></call> <operator pos:line="61" pos:column="38">!=<pos:position pos:line="61" pos:column="40"/></operator> <literal type="number" pos:line="61" pos:column="41">0<pos:position pos:line="61" pos:column="42"/></literal></expr>)<pos:position pos:line="61" pos:column="43"/></condition><then pos:line="61" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="7">ssnprintf<pos:position pos:line="62" pos:column="16"/></name> <argument_list pos:line="62" pos:column="17">(<argument><expr><name><name pos:line="62" pos:column="18">inst<pos:position pos:line="62" pos:column="22"/></name><operator pos:line="62" pos:column="22">-&gt;<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="24">ident<pos:position pos:line="62" pos:column="29"/></name><operator pos:line="62" pos:column="29">.<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="30">plugin_instance<pos:position pos:line="62" pos:column="45"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="63" pos:column="11">sizeof <argument_list pos:line="63" pos:column="18">(<argument><expr><name><name pos:line="63" pos:column="19">inst<pos:position pos:line="63" pos:column="23"/></name><operator pos:line="63" pos:column="23">-&gt;<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="25">ident<pos:position pos:line="63" pos:column="30"/></name><operator pos:line="63" pos:column="30">.<pos:position pos:line="63" pos:column="31"/></operator><name pos:line="63" pos:column="31">plugin_instance<pos:position pos:line="63" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="47"/></argument_list></sizeof></expr></argument>,
          <argument><expr><literal type="string" pos:line="64" pos:column="11">"%s-%s"<pos:position pos:line="64" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="20">tmp_plugin<pos:position pos:line="64" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="32">AGG_FUNC_PLACEHOLDER<pos:position pos:line="64" pos:column="52"/></name></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="65" pos:column="5">else <if pos:line="65" pos:column="10">if <condition pos:line="65" pos:column="13">(<expr><call><name pos:line="65" pos:column="14">strcmp<pos:position pos:line="65" pos:column="20"/></name> <argument_list pos:line="65" pos:column="21">(<argument><expr><literal type="string" pos:line="65" pos:column="22">""<pos:position pos:line="65" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="26">tmp_plugin_instance<pos:position pos:line="65" pos:column="45"/></name></expr></argument>)<pos:position pos:line="65" pos:column="46"/></argument_list></call> <operator pos:line="65" pos:column="47">!=<pos:position pos:line="65" pos:column="49"/></operator> <literal type="number" pos:line="65" pos:column="50">0<pos:position pos:line="65" pos:column="51"/></literal></expr>)<pos:position pos:line="65" pos:column="52"/></condition><then pos:line="65" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="7">ssnprintf<pos:position pos:line="66" pos:column="16"/></name> <argument_list pos:line="66" pos:column="17">(<argument><expr><name><name pos:line="66" pos:column="18">inst<pos:position pos:line="66" pos:column="22"/></name><operator pos:line="66" pos:column="22">-&gt;<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="24">ident<pos:position pos:line="66" pos:column="29"/></name><operator pos:line="66" pos:column="29">.<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="30">plugin_instance<pos:position pos:line="66" pos:column="45"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="67" pos:column="11">sizeof <argument_list pos:line="67" pos:column="18">(<argument><expr><name><name pos:line="67" pos:column="19">inst<pos:position pos:line="67" pos:column="23"/></name><operator pos:line="67" pos:column="23">-&gt;<pos:position pos:line="67" pos:column="28"/></operator><name pos:line="67" pos:column="25">ident<pos:position pos:line="67" pos:column="30"/></name><operator pos:line="67" pos:column="30">.<pos:position pos:line="67" pos:column="31"/></operator><name pos:line="67" pos:column="31">plugin_instance<pos:position pos:line="67" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="47"/></argument_list></sizeof></expr></argument>,
          <argument><expr><literal type="string" pos:line="68" pos:column="11">"%s-%s"<pos:position pos:line="68" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="20">tmp_plugin_instance<pos:position pos:line="68" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="41">AGG_FUNC_PLACEHOLDER<pos:position pos:line="68" pos:column="61"/></name></expr></argument>)<pos:position pos:line="68" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="63"/></expr_stmt></block></then></if></elseif>
    <else pos:line="69" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="7">ssnprintf<pos:position pos:line="70" pos:column="16"/></name> <argument_list pos:line="70" pos:column="17">(<argument><expr><name><name pos:line="70" pos:column="18">inst<pos:position pos:line="70" pos:column="22"/></name><operator pos:line="70" pos:column="22">-&gt;<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="24">ident<pos:position pos:line="70" pos:column="29"/></name><operator pos:line="70" pos:column="29">.<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="30">plugin_instance<pos:position pos:line="70" pos:column="45"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="71" pos:column="11">sizeof <argument_list pos:line="71" pos:column="18">(<argument><expr><name><name pos:line="71" pos:column="19">inst<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">-&gt;<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="25">ident<pos:position pos:line="71" pos:column="30"/></name><operator pos:line="71" pos:column="30">.<pos:position pos:line="71" pos:column="31"/></operator><name pos:line="71" pos:column="31">plugin_instance<pos:position pos:line="71" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="47"/></argument_list></sizeof></expr></argument>,
          <argument><expr><literal type="string" pos:line="72" pos:column="11">"%s-%s-%s"<pos:position pos:line="72" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="23">tmp_plugin<pos:position pos:line="72" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="35">tmp_plugin_instance<pos:position pos:line="72" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="56">AGG_FUNC_PLACEHOLDER<pos:position pos:line="72" pos:column="76"/></name></expr></argument>)<pos:position pos:line="72" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="78"/></expr_stmt></block></else></if>
  }<pos:position pos:line="73" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="75" pos:column="3">/* Type */</comment>
  <expr_stmt><expr><call><name pos:line="76" pos:column="3">sstrncpy<pos:position pos:line="76" pos:column="11"/></name> <argument_list pos:line="76" pos:column="12">(<argument><expr><name><name pos:line="76" pos:column="13">inst<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">-&gt;<pos:position pos:line="76" pos:column="22"/></operator><name pos:line="76" pos:column="19">ident<pos:position pos:line="76" pos:column="24"/></name><operator pos:line="76" pos:column="24">.<pos:position pos:line="76" pos:column="25"/></operator><name pos:line="76" pos:column="25">type<pos:position pos:line="76" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="31">agg<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">-&gt;<pos:position pos:line="76" pos:column="39"/></operator><name pos:line="76" pos:column="36">ident<pos:position pos:line="76" pos:column="41"/></name><operator pos:line="76" pos:column="41">.<pos:position pos:line="76" pos:column="42"/></operator><name pos:line="76" pos:column="42">type<pos:position pos:line="76" pos:column="46"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="48">sizeof <argument_list pos:line="76" pos:column="55">(<argument><expr><name><name pos:line="76" pos:column="56">inst<pos:position pos:line="76" pos:column="60"/></name><operator pos:line="76" pos:column="60">-&gt;<pos:position pos:line="76" pos:column="65"/></operator><name pos:line="76" pos:column="62">ident<pos:position pos:line="76" pos:column="67"/></name><operator pos:line="76" pos:column="67">.<pos:position pos:line="76" pos:column="68"/></operator><name pos:line="76" pos:column="68">type<pos:position pos:line="76" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="75"/></expr_stmt>

  <comment type="block" pos:line="78" pos:column="3">/* Type instance */</comment>
  <expr_stmt><expr><call><name pos:line="79" pos:column="3">COPY_FIELD<pos:position pos:line="79" pos:column="13"/></name> <argument_list pos:line="79" pos:column="14">(<argument><expr><name><name pos:line="79" pos:column="15">inst<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">-&gt;<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="21">ident<pos:position pos:line="79" pos:column="26"/></name><operator pos:line="79" pos:column="26">.<pos:position pos:line="79" pos:column="27"/></operator><name pos:line="79" pos:column="27">type_instance<pos:position pos:line="79" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="42">sizeof <argument_list pos:line="79" pos:column="49">(<argument><expr><name><name pos:line="79" pos:column="50">inst<pos:position pos:line="79" pos:column="54"/></name><operator pos:line="79" pos:column="54">-&gt;<pos:position pos:line="79" pos:column="59"/></operator><name pos:line="79" pos:column="56">ident<pos:position pos:line="79" pos:column="61"/></name><operator pos:line="79" pos:column="61">.<pos:position pos:line="79" pos:column="62"/></operator><name pos:line="79" pos:column="62">type_instance<pos:position pos:line="79" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="76"/></argument_list></sizeof></expr></argument>,
      <argument><expr><name pos:line="80" pos:column="7">type_instance<pos:position pos:line="80" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="22">LU_GROUP_BY_TYPE_INSTANCE<pos:position pos:line="80" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="49">""<pos:position pos:line="80" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="53"/></expr_stmt>

<cpp:undef pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">undef<pos:position pos:line="82" pos:column="7"/></cpp:directive> <name pos:line="82" pos:column="8">COPY_FIELD<pos:position pos:line="82" pos:column="18"/></name></cpp:undef>

  <return pos:line="84" pos:column="3">return <expr><operator pos:line="84" pos:column="10">(<pos:position pos:line="84" pos:column="11"/></operator><literal type="number" pos:line="84" pos:column="11">0<pos:position pos:line="84" pos:column="12"/></literal><operator pos:line="84" pos:column="12">)<pos:position pos:line="84" pos:column="13"/></operator></expr>;<pos:position pos:line="84" pos:column="14"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

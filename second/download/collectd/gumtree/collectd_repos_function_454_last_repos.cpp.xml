<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_454_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ovs_stats_del_bridge<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">yajl_val<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">bridge<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <block pos:line="1" pos:column="50">{
  <decl_stmt><decl><type><specifier pos:line="2" pos:column="3">const<pos:position pos:line="2" pos:column="8"/></specifier> <name pos:line="2" pos:column="9">char<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name><name pos:line="2" pos:column="15">old<pos:position pos:line="2" pos:column="18"/></name><index pos:line="2" pos:column="18">[]<pos:position pos:line="2" pos:column="20"/></index></name> <init pos:line="2" pos:column="21">= <expr><block pos:line="2" pos:column="23">{<expr><literal type="string" pos:line="2" pos:column="24">"old"<pos:position pos:line="2" pos:column="29"/></literal></expr>, <expr><name pos:line="2" pos:column="31">NULL<pos:position pos:line="2" pos:column="35"/></name></expr>}<pos:position pos:line="2" pos:column="36"/></block></expr></init></decl>;<pos:position pos:line="2" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name><name pos:line="3" pos:column="15">name<pos:position pos:line="3" pos:column="19"/></name><index pos:line="3" pos:column="19">[]<pos:position pos:line="3" pos:column="21"/></index></name> <init pos:line="3" pos:column="22">= <expr><block pos:line="3" pos:column="24">{<expr><literal type="string" pos:line="3" pos:column="25">"name"<pos:position pos:line="3" pos:column="31"/></literal></expr>, <expr><name pos:line="3" pos:column="33">NULL<pos:position pos:line="3" pos:column="37"/></name></expr>}<pos:position pos:line="3" pos:column="38"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">yajl_val<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">row<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">bridge<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">&amp;&amp;<pos:position pos:line="7" pos:column="24"/></operator> <call><name pos:line="7" pos:column="17">YAJL_IS_OBJECT<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">bridge<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="40"/></condition><then pos:line="7" pos:column="40"> <block pos:line="7" pos:column="41">{
    <expr_stmt><expr><name pos:line="8" pos:column="5">row<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <call><name pos:line="8" pos:column="11">yajl_tree_get<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">bridge<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">old<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="38">yajl_t_object<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">row<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">&amp;&amp;<pos:position pos:line="9" pos:column="23"/></operator> <call><name pos:line="9" pos:column="16">YAJL_IS_OBJECT<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">row<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36"> <block pos:line="9" pos:column="37">{
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">yajl_val<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">br_name<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><call><name pos:line="10" pos:column="26">yajl_tree_get<pos:position pos:line="10" pos:column="39"/></name><argument_list pos:line="10" pos:column="39">(<argument><expr><name pos:line="10" pos:column="40">row<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="45">name<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">yajl_t_string<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="66"/></decl_stmt>
      <if pos:line="11" pos:column="7">if <condition pos:line="11" pos:column="10">(<expr><name pos:line="11" pos:column="11">br_name<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&amp;&amp;<pos:position pos:line="11" pos:column="29"/></operator> <call><name pos:line="11" pos:column="22">YAJL_IS_STRING<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">br_name<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="46"/></condition><then pos:line="11" pos:column="46"> <block pos:line="11" pos:column="47">{
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">bridge_list_t<pos:position pos:line="12" pos:column="22"/></name> <modifier pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></modifier></type><name pos:line="12" pos:column="24">prev_br<pos:position pos:line="12" pos:column="31"/></name> <init pos:line="12" pos:column="32">= <expr><name pos:line="12" pos:column="34">g_bridge_list_head<pos:position pos:line="12" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="53"/></decl_stmt>
        <for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><decl><type><name pos:line="13" pos:column="14">bridge_list_t<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">br<pos:position pos:line="13" pos:column="31"/></name> <init pos:line="13" pos:column="32">= <expr><name pos:line="13" pos:column="34">g_bridge_list_head<pos:position pos:line="13" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="53"/></init> <condition><expr><name pos:line="13" pos:column="54">br<pos:position pos:line="13" pos:column="56"/></name> <operator pos:line="13" pos:column="57">!=<pos:position pos:line="13" pos:column="59"/></operator> <name pos:line="13" pos:column="60">NULL<pos:position pos:line="13" pos:column="64"/></name></expr>;<pos:position pos:line="13" pos:column="65"/></condition>
             <incr><expr><name pos:line="14" pos:column="14">prev_br<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">br<pos:position pos:line="14" pos:column="26"/></name></expr><operator pos:line="14" pos:column="26">,<pos:position pos:line="14" pos:column="27"/></operator> <expr><name pos:line="14" pos:column="28">br<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">=<pos:position pos:line="14" pos:column="32"/></operator> <name><name pos:line="14" pos:column="33">br<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">next<pos:position pos:line="14" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="42"/></control> <block pos:line="14" pos:column="43">{
          <if pos:line="15" pos:column="11">if <condition pos:line="15" pos:column="14">(<expr><operator pos:line="15" pos:column="15">(<pos:position pos:line="15" pos:column="16"/></operator><call><name pos:line="15" pos:column="16">strncmp<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name><name pos:line="15" pos:column="24">br<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">name<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="34">br_name<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">u<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">.<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="45">string<pos:position pos:line="15" pos:column="51"/></name></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="53">strlen<pos:position pos:line="15" pos:column="59"/></name><argument_list pos:line="15" pos:column="59">(<argument><expr><name><name pos:line="15" pos:column="60">br<pos:position pos:line="15" pos:column="62"/></name><operator pos:line="15" pos:column="62">-&gt;<pos:position pos:line="15" pos:column="67"/></operator><name pos:line="15" pos:column="64">name<pos:position pos:line="15" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call> <operator pos:line="15" pos:column="71">==<pos:position pos:line="15" pos:column="73"/></operator> <literal type="number" pos:line="15" pos:column="74">0<pos:position pos:line="15" pos:column="75"/></literal><operator pos:line="15" pos:column="75">)<pos:position pos:line="15" pos:column="76"/></operator> <operator pos:line="15" pos:column="77">&amp;&amp;<pos:position pos:line="15" pos:column="87"/></operator>
              <call><name pos:line="16" pos:column="15">strlen<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name><name pos:line="16" pos:column="22">br<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">name<pos:position pos:line="16" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call> <operator pos:line="16" pos:column="32">==<pos:position pos:line="16" pos:column="34"/></operator> <call><name pos:line="16" pos:column="35">strlen<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name><name pos:line="16" pos:column="42">br_name<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">u<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">.<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="53">string<pos:position pos:line="16" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="61"/></condition><then pos:line="16" pos:column="61"> <block pos:line="16" pos:column="62">{
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><name pos:line="17" pos:column="17">br<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">g_bridge_list_head<pos:position pos:line="17" pos:column="41"/></name></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42">
              <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="15">g_bridge_list_head<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">=<pos:position pos:line="18" pos:column="35"/></operator> <name><name pos:line="18" pos:column="36">br<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">next<pos:position pos:line="18" pos:column="44"/></name></name></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt></block></then>
            <else pos:line="19" pos:column="13">else
              <block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="15">prev_br<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">next<pos:position pos:line="20" pos:column="28"/></name></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <name><name pos:line="20" pos:column="31">br<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">next<pos:position pos:line="20" pos:column="39"/></name></name></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt></block></else></if>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">sfree<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name><name pos:line="21" pos:column="19">br<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">name<pos:position pos:line="21" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">sfree<pos:position pos:line="22" pos:column="18"/></name><argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">br<pos:position pos:line="22" pos:column="21"/></name></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
            <break pos:line="23" pos:column="13">break;<pos:position pos:line="23" pos:column="19"/></break>
          }<pos:position pos:line="24" pos:column="12"/></block></then></if>
        }<pos:position pos:line="25" pos:column="10"/></block></for>
      }<pos:position pos:line="26" pos:column="8"/></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
  }<pos:position pos:line="28" pos:column="4"/></block></then> <else pos:line="28" pos:column="5">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">WARNING<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><literal type="string" pos:line="29" pos:column="13">"%s: Incorrect data for deleting bridge"<pos:position pos:line="29" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">plugin_name<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt></block></else></if>
  <return pos:line="30" pos:column="3">return <expr><literal type="number" pos:line="30" pos:column="10">0<pos:position pos:line="30" pos:column="11"/></literal></expr>;<pos:position pos:line="30" pos:column="12"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_442_collectd-4.0.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cpufreq_read<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">KERNEL_LINUX<pos:position pos:line="3" pos:column="20"/></name></cpp:ifdef>
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">long<pos:position pos:line="5" pos:column="22"/></name> <name pos:line="5" pos:column="23">long<pos:position pos:line="5" pos:column="27"/></name></type> <name pos:line="5" pos:column="28">val<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">FILE<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">fp<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">filename<pos:position pos:line="8" pos:column="22"/></name><index pos:line="8" pos:column="22">[<expr><literal type="number" pos:line="8" pos:column="23">256<pos:position pos:line="8" pos:column="26"/></literal></expr>]<pos:position pos:line="8" pos:column="27"/></index></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">buffer<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><literal type="number" pos:line="9" pos:column="21">16<pos:position pos:line="9" pos:column="23"/></literal></expr>]<pos:position pos:line="9" pos:column="24"/></index></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="25">num_cpu<pos:position pos:line="11" pos:column="32"/></name></expr>;<pos:position pos:line="11" pos:column="33"/></condition> <incr><expr><name pos:line="11" pos:column="34">i<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">++<pos:position pos:line="11" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="38"/></control>
	<block pos:line="12" pos:column="9">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">status<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <call><name pos:line="13" pos:column="26">snprintf<pos:position pos:line="13" pos:column="34"/></name> <argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">filename<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="46">sizeof <argument_list pos:line="13" pos:column="53">(<argument><expr><name pos:line="13" pos:column="54">filename<pos:position pos:line="13" pos:column="62"/></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></sizeof></expr></argument>,
				<argument><expr><literal type="string" pos:line="14" pos:column="33">"/sys/devices/system/cpu/cpu%d/cpufreq/"<pos:position pos:line="14" pos:column="73"/></literal>
				<literal type="string" pos:line="15" pos:column="33">"scaling_cur_freq"<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="53">i<pos:position pos:line="15" pos:column="54"/></name></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
    		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">status<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">&lt;<pos:position pos:line="16" pos:column="32"/></operator> <literal type="number" pos:line="16" pos:column="30">1<pos:position pos:line="16" pos:column="31"/></literal> <operator pos:line="16" pos:column="32">||<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="35">status<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">&gt;=<pos:position pos:line="16" pos:column="47"/></operator> <sizeof pos:line="16" pos:column="45">sizeof <argument_list pos:line="16" pos:column="52">(<argument><expr><name pos:line="16" pos:column="53">filename<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></sizeof></expr>)<pos:position pos:line="16" pos:column="63"/></condition><then pos:line="16" pos:column="63">
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><operator pos:line="17" pos:column="32">(<pos:position pos:line="17" pos:column="33"/></operator><operator pos:line="17" pos:column="33">-<pos:position pos:line="17" pos:column="34"/></operator><literal type="number" pos:line="17" pos:column="34">1<pos:position pos:line="17" pos:column="35"/></literal><operator pos:line="17" pos:column="35">)<pos:position pos:line="17" pos:column="36"/></operator></expr>;<pos:position pos:line="17" pos:column="37"/></return></block></then></if>

		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">(<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">fp<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <call><name pos:line="19" pos:column="27">fopen<pos:position pos:line="19" pos:column="32"/></name> <argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">filename<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="44">"r"<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call><operator pos:line="19" pos:column="48">)<pos:position pos:line="19" pos:column="49"/></operator> <operator pos:line="19" pos:column="50">==<pos:position pos:line="19" pos:column="52"/></operator> <name pos:line="19" pos:column="53">NULL<pos:position pos:line="19" pos:column="57"/></name></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58">
		<block pos:line="20" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="21" pos:column="25">char<pos:position pos:line="21" pos:column="29"/></name></type> <name><name pos:line="21" pos:column="30">errbuf<pos:position pos:line="21" pos:column="36"/></name><index pos:line="21" pos:column="36">[<expr><literal type="number" pos:line="21" pos:column="37">1024<pos:position pos:line="21" pos:column="41"/></literal></expr>]<pos:position pos:line="21" pos:column="42"/></index></name></decl>;<pos:position pos:line="21" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">WARNING<pos:position pos:line="22" pos:column="32"/></name> <argument_list pos:line="22" pos:column="33">(<argument><expr><literal type="string" pos:line="22" pos:column="34">"cpufreq: fopen (%s): %s"<pos:position pos:line="22" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="61">filename<pos:position pos:line="22" pos:column="69"/></name></expr></argument>,
					<argument><expr><call><name pos:line="23" pos:column="41">sstrerror<pos:position pos:line="23" pos:column="50"/></name> <argument_list pos:line="23" pos:column="51">(<argument><expr><name pos:line="23" pos:column="52">errno<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="59">errbuf<pos:position pos:line="23" pos:column="65"/></name></expr></argument>,
						<argument><expr><sizeof pos:line="24" pos:column="49">sizeof <argument_list pos:line="24" pos:column="56">(<argument><expr><name pos:line="24" pos:column="57">errbuf<pos:position pos:line="24" pos:column="63"/></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>
			<return pos:line="25" pos:column="25">return <expr><operator pos:line="25" pos:column="32">(<pos:position pos:line="25" pos:column="33"/></operator><operator pos:line="25" pos:column="33">-<pos:position pos:line="25" pos:column="34"/></operator><literal type="number" pos:line="25" pos:column="34">1<pos:position pos:line="25" pos:column="35"/></literal><operator pos:line="25" pos:column="35">)<pos:position pos:line="25" pos:column="36"/></operator></expr>;<pos:position pos:line="25" pos:column="37"/></return>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>

		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><call><name pos:line="28" pos:column="21">fgets<pos:position pos:line="28" pos:column="26"/></name> <argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">buffer<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="36">16<pos:position pos:line="28" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">fp<pos:position pos:line="28" pos:column="42"/></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call> <operator pos:line="28" pos:column="44">==<pos:position pos:line="28" pos:column="46"/></operator> <name pos:line="28" pos:column="47">NULL<pos:position pos:line="28" pos:column="51"/></name></expr>)<pos:position pos:line="28" pos:column="52"/></condition><then pos:line="28" pos:column="52">
		<block pos:line="29" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="30" pos:column="25">char<pos:position pos:line="30" pos:column="29"/></name></type> <name><name pos:line="30" pos:column="30">errbuf<pos:position pos:line="30" pos:column="36"/></name><index pos:line="30" pos:column="36">[<expr><literal type="number" pos:line="30" pos:column="37">1024<pos:position pos:line="30" pos:column="41"/></literal></expr>]<pos:position pos:line="30" pos:column="42"/></index></name></decl>;<pos:position pos:line="30" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">WARNING<pos:position pos:line="31" pos:column="32"/></name> <argument_list pos:line="31" pos:column="33">(<argument><expr><literal type="string" pos:line="31" pos:column="34">"cpufreq: fgets: %s"<pos:position pos:line="31" pos:column="54"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="32" pos:column="41">sstrerror<pos:position pos:line="32" pos:column="50"/></name> <argument_list pos:line="32" pos:column="51">(<argument><expr><name pos:line="32" pos:column="52">errno<pos:position pos:line="32" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="59">errbuf<pos:position pos:line="32" pos:column="65"/></name></expr></argument>,
						<argument><expr><sizeof pos:line="33" pos:column="49">sizeof <argument_list pos:line="33" pos:column="56">(<argument><expr><name pos:line="33" pos:column="57">errbuf<pos:position pos:line="33" pos:column="63"/></name></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">fclose<pos:position pos:line="34" pos:column="31"/></name> <argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">fp<pos:position pos:line="34" pos:column="35"/></name></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt>
			<return pos:line="35" pos:column="25">return <expr><operator pos:line="35" pos:column="32">(<pos:position pos:line="35" pos:column="33"/></operator><operator pos:line="35" pos:column="33">-<pos:position pos:line="35" pos:column="34"/></operator><literal type="number" pos:line="35" pos:column="34">1<pos:position pos:line="35" pos:column="35"/></literal><operator pos:line="35" pos:column="35">)<pos:position pos:line="35" pos:column="36"/></operator></expr>;<pos:position pos:line="35" pos:column="37"/></return>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>

		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">fclose<pos:position pos:line="38" pos:column="27"/></name> <argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">fp<pos:position pos:line="38" pos:column="31"/></name></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="33"/></condition><then pos:line="38" pos:column="33">
		<block pos:line="39" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="40" pos:column="25">char<pos:position pos:line="40" pos:column="29"/></name></type> <name><name pos:line="40" pos:column="30">errbuf<pos:position pos:line="40" pos:column="36"/></name><index pos:line="40" pos:column="36">[<expr><literal type="number" pos:line="40" pos:column="37">1024<pos:position pos:line="40" pos:column="41"/></literal></expr>]<pos:position pos:line="40" pos:column="42"/></index></name></decl>;<pos:position pos:line="40" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">WARNING<pos:position pos:line="41" pos:column="32"/></name> <argument_list pos:line="41" pos:column="33">(<argument><expr><literal type="string" pos:line="41" pos:column="34">"cpufreq: fclose: %s"<pos:position pos:line="41" pos:column="55"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="42" pos:column="41">sstrerror<pos:position pos:line="42" pos:column="50"/></name> <argument_list pos:line="42" pos:column="51">(<argument><expr><name pos:line="42" pos:column="52">errno<pos:position pos:line="42" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="59">errbuf<pos:position pos:line="42" pos:column="65"/></name></expr></argument>,
						<argument><expr><sizeof pos:line="43" pos:column="49">sizeof <argument_list pos:line="43" pos:column="56">(<argument><expr><name pos:line="43" pos:column="57">errbuf<pos:position pos:line="43" pos:column="63"/></name></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>


		<comment type="block" pos:line="47" pos:column="17">/* You're seeing correctly: The file is reporting kHz values.. */</comment>
		<expr_stmt><expr><name pos:line="48" pos:column="17">val<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <call><name pos:line="48" pos:column="23">atoll<pos:position pos:line="48" pos:column="28"/></name> <argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">buffer<pos:position pos:line="48" pos:column="36"/></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call> <operator pos:line="48" pos:column="38">*<pos:position pos:line="48" pos:column="39"/></operator> <literal type="number" pos:line="48" pos:column="40">1000<pos:position pos:line="48" pos:column="44"/></literal></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="50" pos:column="17">cpufreq_submit<pos:position pos:line="50" pos:column="31"/></name> <argument_list pos:line="50" pos:column="32">(<argument><expr><name pos:line="50" pos:column="33">i<pos:position pos:line="50" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="36">val<pos:position pos:line="50" pos:column="39"/></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></for>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="52" pos:column="8">/* defined(KERNEL_LINUX) */</comment>

	<return pos:line="54" pos:column="9">return <expr><operator pos:line="54" pos:column="16">(<pos:position pos:line="54" pos:column="17"/></operator><literal type="number" pos:line="54" pos:column="17">0<pos:position pos:line="54" pos:column="18"/></literal><operator pos:line="54" pos:column="18">)<pos:position pos:line="54" pos:column="19"/></operator></expr>;<pos:position pos:line="54" pos:column="20"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

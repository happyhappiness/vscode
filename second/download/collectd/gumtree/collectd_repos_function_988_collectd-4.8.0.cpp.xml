<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_988_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cpufreq_init<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
        <decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">filename<pos:position pos:line="4" pos:column="22"/></name><index pos:line="4" pos:column="22">[<expr><literal type="number" pos:line="4" pos:column="23">256<pos:position pos:line="4" pos:column="26"/></literal></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">num_cpu<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>

	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr>)<pos:position pos:line="8" pos:column="18"/></condition>
	<block pos:line="9" pos:column="9">{
		<expr_stmt><expr><name pos:line="10" pos:column="17">status<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <call><name pos:line="10" pos:column="26">ssnprintf<pos:position pos:line="10" pos:column="35"/></name> <argument_list pos:line="10" pos:column="36">(<argument><expr><name pos:line="10" pos:column="37">filename<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="47">sizeof <argument_list pos:line="10" pos:column="54">(<argument><expr><name pos:line="10" pos:column="55">filename<pos:position pos:line="10" pos:column="63"/></name></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></sizeof></expr></argument>,
				<argument><expr><literal type="string" pos:line="11" pos:column="33">"/sys/devices/system/cpu/cpu%d/cpufreq/"<pos:position pos:line="11" pos:column="73"/></literal>
				<literal type="string" pos:line="12" pos:column="33">"scaling_cur_freq"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">num_cpu<pos:position pos:line="12" pos:column="60"/></name></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">status<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">&lt;<pos:position pos:line="13" pos:column="33"/></operator> <literal type="number" pos:line="13" pos:column="31">1<pos:position pos:line="13" pos:column="32"/></literal><operator pos:line="13" pos:column="32">)<pos:position pos:line="13" pos:column="33"/></operator> <operator pos:line="13" pos:column="34">||<pos:position pos:line="13" pos:column="36"/></operator> <operator pos:line="13" pos:column="37">(<pos:position pos:line="13" pos:column="38"/></operator><operator pos:line="13" pos:column="38">(<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">unsigned<pos:position pos:line="13" pos:column="47"/></name> <name pos:line="13" pos:column="48">int<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">)<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="52">status<pos:position pos:line="13" pos:column="58"/></name> <operator pos:line="13" pos:column="59">&gt;=<pos:position pos:line="13" pos:column="64"/></operator> <sizeof pos:line="13" pos:column="62">sizeof <argument_list pos:line="13" pos:column="69">(<argument><expr><name pos:line="13" pos:column="70">filename<pos:position pos:line="13" pos:column="78"/></name></expr></argument>)<pos:position pos:line="13" pos:column="79"/></argument_list></sizeof><operator pos:line="13" pos:column="79">)<pos:position pos:line="13" pos:column="80"/></operator></expr>)<pos:position pos:line="13" pos:column="81"/></condition><then pos:line="13" pos:column="81">
			<block type="pseudo"><break pos:line="14" pos:column="25">break;<pos:position pos:line="14" pos:column="31"/></break></block></then></if>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">access<pos:position pos:line="16" pos:column="27"/></name> <argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">filename<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="39">R_OK<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45">
			<block type="pseudo"><break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="19" pos:column="17">num_cpu<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">++<pos:position pos:line="19" pos:column="26"/></operator></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">INFO<pos:position pos:line="22" pos:column="13"/></name> <argument_list pos:line="22" pos:column="14">(<argument><expr><literal type="string" pos:line="22" pos:column="15">"cpufreq plugin: Found %d CPU%s"<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">num_cpu<pos:position pos:line="22" pos:column="56"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">num_cpu<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">==<pos:position pos:line="23" pos:column="36"/></operator> <literal type="number" pos:line="23" pos:column="37">1<pos:position pos:line="23" pos:column="38"/></literal><operator pos:line="23" pos:column="38">)<pos:position pos:line="23" pos:column="39"/></operator></expr> ?<pos:position pos:line="23" pos:column="41"/></condition><then pos:line="23" pos:column="41"> <expr><literal type="string" pos:line="23" pos:column="42">""<pos:position pos:line="23" pos:column="44"/></literal></expr> <pos:position pos:line="23" pos:column="45"/></then><else pos:line="23" pos:column="45">: <expr><literal type="string" pos:line="23" pos:column="47">"s"<pos:position pos:line="23" pos:column="50"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">num_cpu<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">==<pos:position pos:line="25" pos:column="23"/></operator> <literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr>)<pos:position pos:line="25" pos:column="26"/></condition><then pos:line="25" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">plugin_unregister_read<pos:position pos:line="26" pos:column="39"/></name> <argument_list pos:line="26" pos:column="40">(<argument><expr><literal type="string" pos:line="26" pos:column="41">"cpufreq"<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt></block></then></if>

	<return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal><operator pos:line="28" pos:column="18">)<pos:position pos:line="28" pos:column="19"/></operator></expr>;<pos:position pos:line="28" pos:column="20"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

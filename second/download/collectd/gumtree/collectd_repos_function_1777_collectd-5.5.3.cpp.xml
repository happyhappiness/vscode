<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1777_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_part_values<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ret_buffer<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ret_buffer_len<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">data_set_t<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">ds<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">value_list_t<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">vl<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">packet_ptr<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">packet_len<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">num_values<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="8" pos:column="9">part_header_t<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">pkg_ph<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">uint16_t<pos:position pos:line="9" pos:column="17"/></name></type>      <name pos:line="9" pos:column="23">pkg_num_values<pos:position pos:line="9" pos:column="37"/></name></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">uint8_t<pos:position pos:line="10" pos:column="16"/></name>      <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">pkg_values_types<pos:position pos:line="10" pos:column="39"/></name></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">value_t<pos:position pos:line="11" pos:column="16"/></name>      <modifier pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></modifier></type><name pos:line="11" pos:column="23">pkg_values<pos:position pos:line="11" pos:column="33"/></name></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">offset<pos:position pos:line="13" pos:column="19"/></name></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">i<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">num_values<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name><name pos:line="16" pos:column="22">vl<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">values_len<pos:position pos:line="16" pos:column="36"/></name></name></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">packet_len<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <sizeof pos:line="17" pos:column="22">sizeof <argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">part_header_t<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></sizeof> <operator pos:line="17" pos:column="45">+<pos:position pos:line="17" pos:column="46"/></operator> <sizeof pos:line="17" pos:column="47">sizeof <argument_list pos:line="17" pos:column="54">(<argument><expr><name pos:line="17" pos:column="55">uint16_t<pos:position pos:line="17" pos:column="63"/></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></sizeof>
		<operator pos:line="18" pos:column="17">+<pos:position pos:line="18" pos:column="18"/></operator> <operator pos:line="18" pos:column="19">(<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">num_values<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">*<pos:position pos:line="18" pos:column="32"/></operator> <sizeof pos:line="18" pos:column="33">sizeof <argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">uint8_t<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></sizeof><operator pos:line="18" pos:column="49">)<pos:position pos:line="18" pos:column="50"/></operator>
		<operator pos:line="19" pos:column="17">+<pos:position pos:line="19" pos:column="18"/></operator> <operator pos:line="19" pos:column="19">(<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">num_values<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">*<pos:position pos:line="19" pos:column="32"/></operator> <sizeof pos:line="19" pos:column="33">sizeof <argument_list pos:line="19" pos:column="40">(<argument><expr><name pos:line="19" pos:column="41">value_t<pos:position pos:line="19" pos:column="48"/></name></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></sizeof><operator pos:line="19" pos:column="49">)<pos:position pos:line="19" pos:column="50"/></operator></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">ret_buffer_len<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">&lt;<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="31">packet_len<pos:position pos:line="21" pos:column="41"/></name></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">-<pos:position pos:line="22" pos:column="26"/></operator><literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal><operator pos:line="22" pos:column="27">)<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="24" pos:column="9">pkg_values_types<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <operator pos:line="24" pos:column="28">(<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="29">uint8_t<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">*<pos:position pos:line="24" pos:column="38"/></operator><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator> <call><name pos:line="24" pos:column="40">malloc<pos:position pos:line="24" pos:column="46"/></name> <argument_list pos:line="24" pos:column="47">(<argument><expr><name pos:line="24" pos:column="48">num_values<pos:position pos:line="24" pos:column="58"/></name> <operator pos:line="24" pos:column="59">*<pos:position pos:line="24" pos:column="60"/></operator> <sizeof pos:line="24" pos:column="61">sizeof <argument_list pos:line="24" pos:column="68">(<argument><expr><name pos:line="24" pos:column="69">uint8_t<pos:position pos:line="24" pos:column="76"/></name></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">pkg_values_types<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">==<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="33">NULL<pos:position pos:line="25" pos:column="37"/></name></expr>)<pos:position pos:line="25" pos:column="38"/></condition><then pos:line="25" pos:column="38">
	<block pos:line="26" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">ERROR<pos:position pos:line="27" pos:column="22"/></name> <argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="string" pos:line="27" pos:column="24">"network plugin: write_part_values: malloc failed."<pos:position pos:line="27" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="77"/></expr_stmt>
		<return pos:line="28" pos:column="17">return <expr><operator pos:line="28" pos:column="24">(<pos:position pos:line="28" pos:column="25"/></operator><operator pos:line="28" pos:column="25">-<pos:position pos:line="28" pos:column="26"/></operator><literal type="number" pos:line="28" pos:column="26">1<pos:position pos:line="28" pos:column="27"/></literal><operator pos:line="28" pos:column="27">)<pos:position pos:line="28" pos:column="28"/></operator></expr>;<pos:position pos:line="28" pos:column="29"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="31" pos:column="9">pkg_values<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <operator pos:line="31" pos:column="22">(<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">value_t<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">*<pos:position pos:line="31" pos:column="32"/></operator><operator pos:line="31" pos:column="32">)<pos:position pos:line="31" pos:column="33"/></operator> <call><name pos:line="31" pos:column="34">malloc<pos:position pos:line="31" pos:column="40"/></name> <argument_list pos:line="31" pos:column="41">(<argument><expr><name pos:line="31" pos:column="42">num_values<pos:position pos:line="31" pos:column="52"/></name> <operator pos:line="31" pos:column="53">*<pos:position pos:line="31" pos:column="54"/></operator> <sizeof pos:line="31" pos:column="55">sizeof <argument_list pos:line="31" pos:column="62">(<argument><expr><name pos:line="31" pos:column="63">value_t<pos:position pos:line="31" pos:column="70"/></name></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="73"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">pkg_values<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">==<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">NULL<pos:position pos:line="32" pos:column="31"/></name></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32">
	<block pos:line="33" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">free<pos:position pos:line="34" pos:column="21"/></name> <argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">pkg_values_types<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">ERROR<pos:position pos:line="35" pos:column="22"/></name> <argument_list pos:line="35" pos:column="23">(<argument><expr><literal type="string" pos:line="35" pos:column="24">"network plugin: write_part_values: malloc failed."<pos:position pos:line="35" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="77"/></expr_stmt>
		<return pos:line="36" pos:column="17">return <expr><operator pos:line="36" pos:column="24">(<pos:position pos:line="36" pos:column="25"/></operator><operator pos:line="36" pos:column="25">-<pos:position pos:line="36" pos:column="26"/></operator><literal type="number" pos:line="36" pos:column="26">1<pos:position pos:line="36" pos:column="27"/></literal><operator pos:line="36" pos:column="27">)<pos:position pos:line="36" pos:column="28"/></operator></expr>;<pos:position pos:line="36" pos:column="29"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="39" pos:column="9">pkg_ph<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">.<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="16">type<pos:position pos:line="39" pos:column="20"/></name></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <call><name pos:line="39" pos:column="23">htons<pos:position pos:line="39" pos:column="28"/></name> <argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">TYPE_VALUES<pos:position pos:line="39" pos:column="41"/></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="40" pos:column="9">pkg_ph<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">.<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="16">length<pos:position pos:line="40" pos:column="22"/></name></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <call><name pos:line="40" pos:column="25">htons<pos:position pos:line="40" pos:column="30"/></name> <argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">packet_len<pos:position pos:line="40" pos:column="42"/></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><name pos:line="42" pos:column="9">pkg_num_values<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <call><name pos:line="42" pos:column="26">htons<pos:position pos:line="42" pos:column="31"/></name> <argument_list pos:line="42" pos:column="32">(<argument><expr><operator pos:line="42" pos:column="33">(<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="34">uint16_t<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">)<pos:position pos:line="42" pos:column="43"/></operator> <name><name pos:line="42" pos:column="44">vl<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">-&gt;<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="48">values_len<pos:position pos:line="42" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="60"/></expr_stmt>

	<for pos:line="44" pos:column="9">for <control pos:line="44" pos:column="13">(<init><expr><name pos:line="44" pos:column="14">i<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>;<pos:position pos:line="44" pos:column="20"/></init> <condition><expr><name pos:line="44" pos:column="21">i<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">&lt;<pos:position pos:line="44" pos:column="27"/></operator> <name pos:line="44" pos:column="25">num_values<pos:position pos:line="44" pos:column="35"/></name></expr>;<pos:position pos:line="44" pos:column="36"/></condition> <incr><expr><name pos:line="44" pos:column="37">i<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">++<pos:position pos:line="44" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="41"/></control>
	<block pos:line="45" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="46" pos:column="17">pkg_values_types<pos:position pos:line="46" pos:column="33"/></name><index pos:line="46" pos:column="33">[<expr><name pos:line="46" pos:column="34">i<pos:position pos:line="46" pos:column="35"/></name></expr>]<pos:position pos:line="46" pos:column="36"/></index></name> <operator pos:line="46" pos:column="37">=<pos:position pos:line="46" pos:column="38"/></operator> <operator pos:line="46" pos:column="39">(<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="40">uint8_t<pos:position pos:line="46" pos:column="47"/></name><operator pos:line="46" pos:column="47">)<pos:position pos:line="46" pos:column="48"/></operator> <name><name pos:line="46" pos:column="49">ds<pos:position pos:line="46" pos:column="51"/></name><operator pos:line="46" pos:column="51">-&gt;<pos:position pos:line="46" pos:column="56"/></operator><name pos:line="46" pos:column="53">ds<pos:position pos:line="46" pos:column="55"/></name><index pos:line="46" pos:column="55">[<expr><name pos:line="46" pos:column="56">i<pos:position pos:line="46" pos:column="57"/></name></expr>]<pos:position pos:line="46" pos:column="58"/></index></name><operator pos:line="46" pos:column="58">.<pos:position pos:line="46" pos:column="59"/></operator><name pos:line="46" pos:column="59">type<pos:position pos:line="46" pos:column="63"/></name></expr>;<pos:position pos:line="46" pos:column="64"/></expr_stmt>
		<switch pos:line="47" pos:column="17">switch <condition pos:line="47" pos:column="24">(<expr><name><name pos:line="47" pos:column="25">ds<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">-&gt;<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="29">ds<pos:position pos:line="47" pos:column="31"/></name><index pos:line="47" pos:column="31">[<expr><name pos:line="47" pos:column="32">i<pos:position pos:line="47" pos:column="33"/></name></expr>]<pos:position pos:line="47" pos:column="34"/></index></name><operator pos:line="47" pos:column="34">.<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="35">type<pos:position pos:line="47" pos:column="39"/></name></expr>)<pos:position pos:line="47" pos:column="40"/></condition>
		<block pos:line="48" pos:column="17">{
			<case pos:line="49" pos:column="25">case <expr><name pos:line="49" pos:column="30">DS_TYPE_COUNTER<pos:position pos:line="49" pos:column="45"/></name></expr>:<pos:position pos:line="49" pos:column="46"/></case>
				<expr_stmt><expr><name><name pos:line="50" pos:column="33">pkg_values<pos:position pos:line="50" pos:column="43"/></name><index pos:line="50" pos:column="43">[<expr><name pos:line="50" pos:column="44">i<pos:position pos:line="50" pos:column="45"/></name></expr>]<pos:position pos:line="50" pos:column="46"/></index></name><operator pos:line="50" pos:column="46">.<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="47">counter<pos:position pos:line="50" pos:column="54"/></name> <operator pos:line="50" pos:column="55">=<pos:position pos:line="50" pos:column="56"/></operator> <call><name pos:line="50" pos:column="57">htonll<pos:position pos:line="50" pos:column="63"/></name> <argument_list pos:line="50" pos:column="64">(<argument><expr><name><name pos:line="50" pos:column="65">vl<pos:position pos:line="50" pos:column="67"/></name><operator pos:line="50" pos:column="67">-&gt;<pos:position pos:line="50" pos:column="72"/></operator><name pos:line="50" pos:column="69">values<pos:position pos:line="50" pos:column="75"/></name><index pos:line="50" pos:column="75">[<expr><name pos:line="50" pos:column="76">i<pos:position pos:line="50" pos:column="77"/></name></expr>]<pos:position pos:line="50" pos:column="78"/></index></name><operator pos:line="50" pos:column="78">.<pos:position pos:line="50" pos:column="79"/></operator><name pos:line="50" pos:column="79">counter<pos:position pos:line="50" pos:column="86"/></name></expr></argument>)<pos:position pos:line="50" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="88"/></expr_stmt>
				<break pos:line="51" pos:column="33">break;<pos:position pos:line="51" pos:column="39"/></break>

			<case pos:line="53" pos:column="25">case <expr><name pos:line="53" pos:column="30">DS_TYPE_GAUGE<pos:position pos:line="53" pos:column="43"/></name></expr>:<pos:position pos:line="53" pos:column="44"/></case>
				<expr_stmt><expr><name><name pos:line="54" pos:column="33">pkg_values<pos:position pos:line="54" pos:column="43"/></name><index pos:line="54" pos:column="43">[<expr><name pos:line="54" pos:column="44">i<pos:position pos:line="54" pos:column="45"/></name></expr>]<pos:position pos:line="54" pos:column="46"/></index></name><operator pos:line="54" pos:column="46">.<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="47">gauge<pos:position pos:line="54" pos:column="52"/></name> <operator pos:line="54" pos:column="53">=<pos:position pos:line="54" pos:column="54"/></operator> <call><name pos:line="54" pos:column="55">htond<pos:position pos:line="54" pos:column="60"/></name> <argument_list pos:line="54" pos:column="61">(<argument><expr><name><name pos:line="54" pos:column="62">vl<pos:position pos:line="54" pos:column="64"/></name><operator pos:line="54" pos:column="64">-&gt;<pos:position pos:line="54" pos:column="69"/></operator><name pos:line="54" pos:column="66">values<pos:position pos:line="54" pos:column="72"/></name><index pos:line="54" pos:column="72">[<expr><name pos:line="54" pos:column="73">i<pos:position pos:line="54" pos:column="74"/></name></expr>]<pos:position pos:line="54" pos:column="75"/></index></name><operator pos:line="54" pos:column="75">.<pos:position pos:line="54" pos:column="76"/></operator><name pos:line="54" pos:column="76">gauge<pos:position pos:line="54" pos:column="81"/></name></expr></argument>)<pos:position pos:line="54" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="83"/></expr_stmt>
				<break pos:line="55" pos:column="33">break;<pos:position pos:line="55" pos:column="39"/></break>

			<case pos:line="57" pos:column="25">case <expr><name pos:line="57" pos:column="30">DS_TYPE_DERIVE<pos:position pos:line="57" pos:column="44"/></name></expr>:<pos:position pos:line="57" pos:column="45"/></case>
				<expr_stmt><expr><name><name pos:line="58" pos:column="33">pkg_values<pos:position pos:line="58" pos:column="43"/></name><index pos:line="58" pos:column="43">[<expr><name pos:line="58" pos:column="44">i<pos:position pos:line="58" pos:column="45"/></name></expr>]<pos:position pos:line="58" pos:column="46"/></index></name><operator pos:line="58" pos:column="46">.<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="47">derive<pos:position pos:line="58" pos:column="53"/></name> <operator pos:line="58" pos:column="54">=<pos:position pos:line="58" pos:column="55"/></operator> <call><name pos:line="58" pos:column="56">htonll<pos:position pos:line="58" pos:column="62"/></name> <argument_list pos:line="58" pos:column="63">(<argument><expr><name><name pos:line="58" pos:column="64">vl<pos:position pos:line="58" pos:column="66"/></name><operator pos:line="58" pos:column="66">-&gt;<pos:position pos:line="58" pos:column="71"/></operator><name pos:line="58" pos:column="68">values<pos:position pos:line="58" pos:column="74"/></name><index pos:line="58" pos:column="74">[<expr><name pos:line="58" pos:column="75">i<pos:position pos:line="58" pos:column="76"/></name></expr>]<pos:position pos:line="58" pos:column="77"/></index></name><operator pos:line="58" pos:column="77">.<pos:position pos:line="58" pos:column="78"/></operator><name pos:line="58" pos:column="78">derive<pos:position pos:line="58" pos:column="84"/></name></expr></argument>)<pos:position pos:line="58" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="86"/></expr_stmt>
				<break pos:line="59" pos:column="33">break;<pos:position pos:line="59" pos:column="39"/></break>

			<case pos:line="61" pos:column="25">case <expr><name pos:line="61" pos:column="30">DS_TYPE_ABSOLUTE<pos:position pos:line="61" pos:column="46"/></name></expr>:<pos:position pos:line="61" pos:column="47"/></case>
				<expr_stmt><expr><name><name pos:line="62" pos:column="33">pkg_values<pos:position pos:line="62" pos:column="43"/></name><index pos:line="62" pos:column="43">[<expr><name pos:line="62" pos:column="44">i<pos:position pos:line="62" pos:column="45"/></name></expr>]<pos:position pos:line="62" pos:column="46"/></index></name><operator pos:line="62" pos:column="46">.<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="47">absolute<pos:position pos:line="62" pos:column="55"/></name> <operator pos:line="62" pos:column="56">=<pos:position pos:line="62" pos:column="57"/></operator> <call><name pos:line="62" pos:column="58">htonll<pos:position pos:line="62" pos:column="64"/></name> <argument_list pos:line="62" pos:column="65">(<argument><expr><name><name pos:line="62" pos:column="66">vl<pos:position pos:line="62" pos:column="68"/></name><operator pos:line="62" pos:column="68">-&gt;<pos:position pos:line="62" pos:column="73"/></operator><name pos:line="62" pos:column="70">values<pos:position pos:line="62" pos:column="76"/></name><index pos:line="62" pos:column="76">[<expr><name pos:line="62" pos:column="77">i<pos:position pos:line="62" pos:column="78"/></name></expr>]<pos:position pos:line="62" pos:column="79"/></index></name><operator pos:line="62" pos:column="79">.<pos:position pos:line="62" pos:column="80"/></operator><name pos:line="62" pos:column="80">absolute<pos:position pos:line="62" pos:column="88"/></name></expr></argument>)<pos:position pos:line="62" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="90"/></expr_stmt>
				<break pos:line="63" pos:column="33">break;<pos:position pos:line="63" pos:column="39"/></break>

			<default pos:line="65" pos:column="25">default:<pos:position pos:line="65" pos:column="33"/></default>
				<expr_stmt><expr><call><name pos:line="66" pos:column="33">free<pos:position pos:line="66" pos:column="37"/></name> <argument_list pos:line="66" pos:column="38">(<argument><expr><name pos:line="66" pos:column="39">pkg_values_types<pos:position pos:line="66" pos:column="55"/></name></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="67" pos:column="33">free<pos:position pos:line="67" pos:column="37"/></name> <argument_list pos:line="67" pos:column="38">(<argument><expr><name pos:line="67" pos:column="39">pkg_values<pos:position pos:line="67" pos:column="49"/></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="68" pos:column="33">ERROR<pos:position pos:line="68" pos:column="38"/></name> <argument_list pos:line="68" pos:column="39">(<argument><expr><literal type="string" pos:line="68" pos:column="40">"network plugin: write_part_values: "<pos:position pos:line="68" pos:column="77"/></literal>
						<literal type="string" pos:line="69" pos:column="49">"Unknown data source type: %i"<pos:position pos:line="69" pos:column="79"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="70" pos:column="49">ds<pos:position pos:line="70" pos:column="51"/></name><operator pos:line="70" pos:column="51">-&gt;<pos:position pos:line="70" pos:column="56"/></operator><name pos:line="70" pos:column="53">ds<pos:position pos:line="70" pos:column="55"/></name><index pos:line="70" pos:column="55">[<expr><name pos:line="70" pos:column="56">i<pos:position pos:line="70" pos:column="57"/></name></expr>]<pos:position pos:line="70" pos:column="58"/></index></name><operator pos:line="70" pos:column="58">.<pos:position pos:line="70" pos:column="59"/></operator><name pos:line="70" pos:column="59">type<pos:position pos:line="70" pos:column="63"/></name></expr></argument>)<pos:position pos:line="70" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="65"/></expr_stmt>
				<return pos:line="71" pos:column="33">return <expr><operator pos:line="71" pos:column="40">(<pos:position pos:line="71" pos:column="41"/></operator><operator pos:line="71" pos:column="41">-<pos:position pos:line="71" pos:column="42"/></operator><literal type="number" pos:line="71" pos:column="42">1<pos:position pos:line="71" pos:column="43"/></literal><operator pos:line="71" pos:column="43">)<pos:position pos:line="71" pos:column="44"/></operator></expr>;<pos:position pos:line="71" pos:column="45"/></return>
		}<pos:position pos:line="72" pos:column="18"/></block></switch> <comment type="block" pos:line="72" pos:column="19">/* switch (ds-&gt;ds[i].type) */</comment>
	}<pos:position pos:line="73" pos:column="10"/></block></for> <comment type="block" pos:line="73" pos:column="11">/* for (num_values) */</comment>

	<comment type="block" pos:line="75" pos:column="9">/*
	 * Use `memcpy' to write everything to the buffer, because the pointer
	 * may be unaligned and some architectures, such as SPARC, can't handle
	 * that.
	 */</comment>
	<expr_stmt><expr><name pos:line="80" pos:column="9">packet_ptr<pos:position pos:line="80" pos:column="19"/></name> <operator pos:line="80" pos:column="20">=<pos:position pos:line="80" pos:column="21"/></operator> <operator pos:line="80" pos:column="22">*<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="23">ret_buffer<pos:position pos:line="80" pos:column="33"/></name></expr>;<pos:position pos:line="80" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="81" pos:column="9">offset<pos:position pos:line="81" pos:column="15"/></name> <operator pos:line="81" pos:column="16">=<pos:position pos:line="81" pos:column="17"/></operator> <literal type="number" pos:line="81" pos:column="18">0<pos:position pos:line="81" pos:column="19"/></literal></expr>;<pos:position pos:line="81" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">memcpy<pos:position pos:line="82" pos:column="15"/></name> <argument_list pos:line="82" pos:column="16">(<argument><expr><name pos:line="82" pos:column="17">packet_ptr<pos:position pos:line="82" pos:column="27"/></name> <operator pos:line="82" pos:column="28">+<pos:position pos:line="82" pos:column="29"/></operator> <name pos:line="82" pos:column="30">offset<pos:position pos:line="82" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="38">&amp;<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="39">pkg_ph<pos:position pos:line="82" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="47">sizeof <argument_list pos:line="82" pos:column="54">(<argument><expr><name pos:line="82" pos:column="55">pkg_ph<pos:position pos:line="82" pos:column="61"/></name></expr></argument>)<pos:position pos:line="82" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name pos:line="83" pos:column="9">offset<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">+=<pos:position pos:line="83" pos:column="18"/></operator> <sizeof pos:line="83" pos:column="19">sizeof <argument_list pos:line="83" pos:column="26">(<argument><expr><name pos:line="83" pos:column="27">pkg_ph<pos:position pos:line="83" pos:column="33"/></name></expr></argument>)<pos:position pos:line="83" pos:column="34"/></argument_list></sizeof></expr>;<pos:position pos:line="83" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="84" pos:column="9">memcpy<pos:position pos:line="84" pos:column="15"/></name> <argument_list pos:line="84" pos:column="16">(<argument><expr><name pos:line="84" pos:column="17">packet_ptr<pos:position pos:line="84" pos:column="27"/></name> <operator pos:line="84" pos:column="28">+<pos:position pos:line="84" pos:column="29"/></operator> <name pos:line="84" pos:column="30">offset<pos:position pos:line="84" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="38">&amp;<pos:position pos:line="84" pos:column="43"/></operator><name pos:line="84" pos:column="39">pkg_num_values<pos:position pos:line="84" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="55">sizeof <argument_list pos:line="84" pos:column="62">(<argument><expr><name pos:line="84" pos:column="63">pkg_num_values<pos:position pos:line="84" pos:column="77"/></name></expr></argument>)<pos:position pos:line="84" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="84" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="80"/></expr_stmt>
	<expr_stmt><expr><name pos:line="85" pos:column="9">offset<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">+=<pos:position pos:line="85" pos:column="18"/></operator> <sizeof pos:line="85" pos:column="19">sizeof <argument_list pos:line="85" pos:column="26">(<argument><expr><name pos:line="85" pos:column="27">pkg_num_values<pos:position pos:line="85" pos:column="41"/></name></expr></argument>)<pos:position pos:line="85" pos:column="42"/></argument_list></sizeof></expr>;<pos:position pos:line="85" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="86" pos:column="9">memcpy<pos:position pos:line="86" pos:column="15"/></name> <argument_list pos:line="86" pos:column="16">(<argument><expr><name pos:line="86" pos:column="17">packet_ptr<pos:position pos:line="86" pos:column="27"/></name> <operator pos:line="86" pos:column="28">+<pos:position pos:line="86" pos:column="29"/></operator> <name pos:line="86" pos:column="30">offset<pos:position pos:line="86" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="38">pkg_values_types<pos:position pos:line="86" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="56">num_values<pos:position pos:line="86" pos:column="66"/></name> <operator pos:line="86" pos:column="67">*<pos:position pos:line="86" pos:column="68"/></operator> <sizeof pos:line="86" pos:column="69">sizeof <argument_list pos:line="86" pos:column="76">(<argument><expr><name pos:line="86" pos:column="77">uint8_t<pos:position pos:line="86" pos:column="84"/></name></expr></argument>)<pos:position pos:line="86" pos:column="85"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="86" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="87"/></expr_stmt>
	<expr_stmt><expr><name pos:line="87" pos:column="9">offset<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">+=<pos:position pos:line="87" pos:column="18"/></operator> <name pos:line="87" pos:column="19">num_values<pos:position pos:line="87" pos:column="29"/></name> <operator pos:line="87" pos:column="30">*<pos:position pos:line="87" pos:column="31"/></operator> <sizeof pos:line="87" pos:column="32">sizeof <argument_list pos:line="87" pos:column="39">(<argument><expr><name pos:line="87" pos:column="40">uint8_t<pos:position pos:line="87" pos:column="47"/></name></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></sizeof></expr>;<pos:position pos:line="87" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="88" pos:column="9">memcpy<pos:position pos:line="88" pos:column="15"/></name> <argument_list pos:line="88" pos:column="16">(<argument><expr><name pos:line="88" pos:column="17">packet_ptr<pos:position pos:line="88" pos:column="27"/></name> <operator pos:line="88" pos:column="28">+<pos:position pos:line="88" pos:column="29"/></operator> <name pos:line="88" pos:column="30">offset<pos:position pos:line="88" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="38">pkg_values<pos:position pos:line="88" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="50">num_values<pos:position pos:line="88" pos:column="60"/></name> <operator pos:line="88" pos:column="61">*<pos:position pos:line="88" pos:column="62"/></operator> <sizeof pos:line="88" pos:column="63">sizeof <argument_list pos:line="88" pos:column="70">(<argument><expr><name pos:line="88" pos:column="71">value_t<pos:position pos:line="88" pos:column="78"/></name></expr></argument>)<pos:position pos:line="88" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="88" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><name pos:line="89" pos:column="9">offset<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">+=<pos:position pos:line="89" pos:column="18"/></operator> <name pos:line="89" pos:column="19">num_values<pos:position pos:line="89" pos:column="29"/></name> <operator pos:line="89" pos:column="30">*<pos:position pos:line="89" pos:column="31"/></operator> <sizeof pos:line="89" pos:column="32">sizeof <argument_list pos:line="89" pos:column="39">(<argument><expr><name pos:line="89" pos:column="40">value_t<pos:position pos:line="89" pos:column="47"/></name></expr></argument>)<pos:position pos:line="89" pos:column="48"/></argument_list></sizeof></expr>;<pos:position pos:line="89" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="91" pos:column="9">assert<pos:position pos:line="91" pos:column="15"/></name> <argument_list pos:line="91" pos:column="16">(<argument><expr><name pos:line="91" pos:column="17">offset<pos:position pos:line="91" pos:column="23"/></name> <operator pos:line="91" pos:column="24">==<pos:position pos:line="91" pos:column="26"/></operator> <name pos:line="91" pos:column="27">packet_len<pos:position pos:line="91" pos:column="37"/></name></expr></argument>)<pos:position pos:line="91" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="93" pos:column="9">*<pos:position pos:line="93" pos:column="10"/></operator><name pos:line="93" pos:column="10">ret_buffer<pos:position pos:line="93" pos:column="20"/></name> <operator pos:line="93" pos:column="21">=<pos:position pos:line="93" pos:column="22"/></operator> <name pos:line="93" pos:column="23">packet_ptr<pos:position pos:line="93" pos:column="33"/></name> <operator pos:line="93" pos:column="34">+<pos:position pos:line="93" pos:column="35"/></operator> <name pos:line="93" pos:column="36">packet_len<pos:position pos:line="93" pos:column="46"/></name></expr>;<pos:position pos:line="93" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="94" pos:column="9">*<pos:position pos:line="94" pos:column="10"/></operator><name pos:line="94" pos:column="10">ret_buffer_len<pos:position pos:line="94" pos:column="24"/></name> <operator pos:line="94" pos:column="25">-=<pos:position pos:line="94" pos:column="27"/></operator> <name pos:line="94" pos:column="28">packet_len<pos:position pos:line="94" pos:column="38"/></name></expr>;<pos:position pos:line="94" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="96" pos:column="9">free<pos:position pos:line="96" pos:column="13"/></name> <argument_list pos:line="96" pos:column="14">(<argument><expr><name pos:line="96" pos:column="15">pkg_values_types<pos:position pos:line="96" pos:column="31"/></name></expr></argument>)<pos:position pos:line="96" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="97" pos:column="9">free<pos:position pos:line="97" pos:column="13"/></name> <argument_list pos:line="97" pos:column="14">(<argument><expr><name pos:line="97" pos:column="15">pkg_values<pos:position pos:line="97" pos:column="25"/></name></expr></argument>)<pos:position pos:line="97" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="27"/></expr_stmt>

	<return pos:line="99" pos:column="9">return <expr><operator pos:line="99" pos:column="16">(<pos:position pos:line="99" pos:column="17"/></operator><literal type="number" pos:line="99" pos:column="17">0<pos:position pos:line="99" pos:column="18"/></literal><operator pos:line="99" pos:column="18">)<pos:position pos:line="99" pos:column="19"/></operator></expr>;<pos:position pos:line="99" pos:column="20"/></return>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

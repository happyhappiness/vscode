<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1069_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">openvpn_read<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fh<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type>  <name pos:line="4" pos:column="14">read<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">read<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* call the right read function for every status entry in the list */</comment>
	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><decl><type><name pos:line="9" pos:column="14">int<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">i<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></init> <condition><expr><name pos:line="9" pos:column="25">i<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">&lt;<pos:position pos:line="9" pos:column="31"/></operator> <name pos:line="9" pos:column="29">vpn_num<pos:position pos:line="9" pos:column="36"/></name></expr>;<pos:position pos:line="9" pos:column="37"/></condition> <incr><expr><name pos:line="9" pos:column="38">i<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">++<pos:position pos:line="9" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="42"/></control>
	<block pos:line="10" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">vpn_read<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>

		<expr_stmt><expr><name pos:line="13" pos:column="17">fh<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <call><name pos:line="13" pos:column="22">fopen<pos:position pos:line="13" pos:column="27"/></name> <argument_list pos:line="13" pos:column="28">(<argument><expr><name><name pos:line="13" pos:column="29">vpn_list<pos:position pos:line="13" pos:column="37"/></name><index pos:line="13" pos:column="37">[<expr><name pos:line="13" pos:column="38">i<pos:position pos:line="13" pos:column="39"/></name></expr>]<pos:position pos:line="13" pos:column="40"/></index></name><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">file<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="48">"r"<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">fh<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">==<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">NULL<pos:position pos:line="14" pos:column="31"/></name></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32">
		<block pos:line="15" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="16" pos:column="25">char<pos:position pos:line="16" pos:column="29"/></name></type> <name><name pos:line="16" pos:column="30">errbuf<pos:position pos:line="16" pos:column="36"/></name><index pos:line="16" pos:column="36">[<expr><literal type="number" pos:line="16" pos:column="37">1024<pos:position pos:line="16" pos:column="41"/></literal></expr>]<pos:position pos:line="16" pos:column="42"/></index></name></decl>;<pos:position pos:line="16" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">WARNING<pos:position pos:line="17" pos:column="32"/></name> <argument_list pos:line="17" pos:column="33">(<argument><expr><literal type="string" pos:line="17" pos:column="34">"openvpn plugin: fopen(%s) failed: %s"<pos:position pos:line="17" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="74">vpn_list<pos:position pos:line="17" pos:column="82"/></name><index pos:line="17" pos:column="82">[<expr><name pos:line="17" pos:column="83">i<pos:position pos:line="17" pos:column="84"/></name></expr>]<pos:position pos:line="17" pos:column="85"/></index></name><operator pos:line="17" pos:column="85">-&gt;<pos:position pos:line="17" pos:column="90"/></operator><name pos:line="17" pos:column="87">file<pos:position pos:line="17" pos:column="91"/></name></expr></argument>,
					<argument><expr><call><name pos:line="18" pos:column="41">sstrerror<pos:position pos:line="18" pos:column="50"/></name> <argument_list pos:line="18" pos:column="51">(<argument><expr><name pos:line="18" pos:column="52">errno<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="59">errbuf<pos:position pos:line="18" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="67">sizeof <argument_list pos:line="18" pos:column="74">(<argument><expr><name pos:line="18" pos:column="75">errbuf<pos:position pos:line="18" pos:column="81"/></name></expr></argument>)<pos:position pos:line="18" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="85"/></expr_stmt>

			<continue pos:line="20" pos:column="25">continue;<pos:position pos:line="20" pos:column="34"/></continue>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>

		<switch pos:line="23" pos:column="17">switch <condition pos:line="23" pos:column="24">(<expr><name><name pos:line="23" pos:column="25">vpn_list<pos:position pos:line="23" pos:column="33"/></name><index pos:line="23" pos:column="33">[<expr><name pos:line="23" pos:column="34">i<pos:position pos:line="23" pos:column="35"/></name></expr>]<pos:position pos:line="23" pos:column="36"/></index></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">version<pos:position pos:line="23" pos:column="45"/></name></expr>)<pos:position pos:line="23" pos:column="46"/></condition>
		<block pos:line="24" pos:column="17">{
			<case pos:line="25" pos:column="25">case <expr><name pos:line="25" pos:column="30">SINGLE<pos:position pos:line="25" pos:column="36"/></name></expr>:<pos:position pos:line="25" pos:column="37"/></case>
				<expr_stmt><expr><name pos:line="26" pos:column="33">vpn_read<pos:position pos:line="26" pos:column="41"/></name> <operator pos:line="26" pos:column="42">=<pos:position pos:line="26" pos:column="43"/></operator> <call><name pos:line="26" pos:column="44">single_read<pos:position pos:line="26" pos:column="55"/></name><argument_list pos:line="26" pos:column="55">(<argument><expr><name><name pos:line="26" pos:column="56">vpn_list<pos:position pos:line="26" pos:column="64"/></name><index pos:line="26" pos:column="64">[<expr><name pos:line="26" pos:column="65">i<pos:position pos:line="26" pos:column="66"/></name></expr>]<pos:position pos:line="26" pos:column="67"/></index></name><operator pos:line="26" pos:column="67">-&gt;<pos:position pos:line="26" pos:column="72"/></operator><name pos:line="26" pos:column="69">name<pos:position pos:line="26" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="75">fh<pos:position pos:line="26" pos:column="77"/></name></expr></argument>)<pos:position pos:line="26" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="79"/></expr_stmt>
				<break pos:line="27" pos:column="33">break;<pos:position pos:line="27" pos:column="39"/></break>

			<case pos:line="29" pos:column="25">case <expr><name pos:line="29" pos:column="30">MULTI1<pos:position pos:line="29" pos:column="36"/></name></expr>:<pos:position pos:line="29" pos:column="37"/></case>
				<expr_stmt><expr><name pos:line="30" pos:column="33">vpn_read<pos:position pos:line="30" pos:column="41"/></name> <operator pos:line="30" pos:column="42">=<pos:position pos:line="30" pos:column="43"/></operator> <call><name pos:line="30" pos:column="44">multi1_read<pos:position pos:line="30" pos:column="55"/></name><argument_list pos:line="30" pos:column="55">(<argument><expr><name><name pos:line="30" pos:column="56">vpn_list<pos:position pos:line="30" pos:column="64"/></name><index pos:line="30" pos:column="64">[<expr><name pos:line="30" pos:column="65">i<pos:position pos:line="30" pos:column="66"/></name></expr>]<pos:position pos:line="30" pos:column="67"/></index></name><operator pos:line="30" pos:column="67">-&gt;<pos:position pos:line="30" pos:column="72"/></operator><name pos:line="30" pos:column="69">name<pos:position pos:line="30" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="75">fh<pos:position pos:line="30" pos:column="77"/></name></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="79"/></expr_stmt>
				<break pos:line="31" pos:column="33">break;<pos:position pos:line="31" pos:column="39"/></break>

			<case pos:line="33" pos:column="25">case <expr><name pos:line="33" pos:column="30">MULTI2<pos:position pos:line="33" pos:column="36"/></name></expr>:<pos:position pos:line="33" pos:column="37"/></case>
				<expr_stmt><expr><name pos:line="34" pos:column="33">vpn_read<pos:position pos:line="34" pos:column="41"/></name> <operator pos:line="34" pos:column="42">=<pos:position pos:line="34" pos:column="43"/></operator> <call><name pos:line="34" pos:column="44">multi2_read<pos:position pos:line="34" pos:column="55"/></name><argument_list pos:line="34" pos:column="55">(<argument><expr><name><name pos:line="34" pos:column="56">vpn_list<pos:position pos:line="34" pos:column="64"/></name><index pos:line="34" pos:column="64">[<expr><name pos:line="34" pos:column="65">i<pos:position pos:line="34" pos:column="66"/></name></expr>]<pos:position pos:line="34" pos:column="67"/></index></name><operator pos:line="34" pos:column="67">-&gt;<pos:position pos:line="34" pos:column="72"/></operator><name pos:line="34" pos:column="69">name<pos:position pos:line="34" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="75">fh<pos:position pos:line="34" pos:column="77"/></name></expr></argument>)<pos:position pos:line="34" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="79"/></expr_stmt>
				<break pos:line="35" pos:column="33">break;<pos:position pos:line="35" pos:column="39"/></break>

			<case pos:line="37" pos:column="25">case <expr><name pos:line="37" pos:column="30">MULTI3<pos:position pos:line="37" pos:column="36"/></name></expr>:<pos:position pos:line="37" pos:column="37"/></case>
				<expr_stmt><expr><name pos:line="38" pos:column="33">vpn_read<pos:position pos:line="38" pos:column="41"/></name> <operator pos:line="38" pos:column="42">=<pos:position pos:line="38" pos:column="43"/></operator> <call><name pos:line="38" pos:column="44">multi3_read<pos:position pos:line="38" pos:column="55"/></name><argument_list pos:line="38" pos:column="55">(<argument><expr><name><name pos:line="38" pos:column="56">vpn_list<pos:position pos:line="38" pos:column="64"/></name><index pos:line="38" pos:column="64">[<expr><name pos:line="38" pos:column="65">i<pos:position pos:line="38" pos:column="66"/></name></expr>]<pos:position pos:line="38" pos:column="67"/></index></name><operator pos:line="38" pos:column="67">-&gt;<pos:position pos:line="38" pos:column="72"/></operator><name pos:line="38" pos:column="69">name<pos:position pos:line="38" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="75">fh<pos:position pos:line="38" pos:column="77"/></name></expr></argument>)<pos:position pos:line="38" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="79"/></expr_stmt>
				<break pos:line="39" pos:column="33">break;<pos:position pos:line="39" pos:column="39"/></break>

			<case pos:line="41" pos:column="25">case <expr><name pos:line="41" pos:column="30">MULTI4<pos:position pos:line="41" pos:column="36"/></name></expr>:<pos:position pos:line="41" pos:column="37"/></case>
				<expr_stmt><expr><name pos:line="42" pos:column="33">vpn_read<pos:position pos:line="42" pos:column="41"/></name> <operator pos:line="42" pos:column="42">=<pos:position pos:line="42" pos:column="43"/></operator> <call><name pos:line="42" pos:column="44">multi4_read<pos:position pos:line="42" pos:column="55"/></name><argument_list pos:line="42" pos:column="55">(<argument><expr><name><name pos:line="42" pos:column="56">vpn_list<pos:position pos:line="42" pos:column="64"/></name><index pos:line="42" pos:column="64">[<expr><name pos:line="42" pos:column="65">i<pos:position pos:line="42" pos:column="66"/></name></expr>]<pos:position pos:line="42" pos:column="67"/></index></name><operator pos:line="42" pos:column="67">-&gt;<pos:position pos:line="42" pos:column="72"/></operator><name pos:line="42" pos:column="69">name<pos:position pos:line="42" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="75">fh<pos:position pos:line="42" pos:column="77"/></name></expr></argument>)<pos:position pos:line="42" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="79"/></expr_stmt>
				<break pos:line="43" pos:column="33">break;<pos:position pos:line="43" pos:column="39"/></break>
		}<pos:position pos:line="44" pos:column="18"/></block></switch>

		<expr_stmt><expr><call><name pos:line="46" pos:column="17">fclose<pos:position pos:line="46" pos:column="23"/></name> <argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">fh<pos:position pos:line="46" pos:column="27"/></name></expr></argument>)<pos:position pos:line="46" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="47" pos:column="17">read<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">+=<pos:position pos:line="47" pos:column="24"/></operator> <name pos:line="47" pos:column="25">vpn_read<pos:position pos:line="47" pos:column="33"/></name></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></for>

	<return pos:line="50" pos:column="9">return <expr><operator pos:line="50" pos:column="16">(<pos:position pos:line="50" pos:column="17"/></operator><ternary><condition><expr><name pos:line="50" pos:column="17">read<pos:position pos:line="50" pos:column="21"/></name></expr> ?<pos:position pos:line="50" pos:column="23"/></condition><then pos:line="50" pos:column="23"> <expr><literal type="number" pos:line="50" pos:column="24">0<pos:position pos:line="50" pos:column="25"/></literal></expr> <pos:position pos:line="50" pos:column="26"/></then><else pos:line="50" pos:column="26">: <expr><operator pos:line="50" pos:column="28">-<pos:position pos:line="50" pos:column="29"/></operator><literal type="number" pos:line="50" pos:column="29">1<pos:position pos:line="50" pos:column="30"/></literal></expr></else></ternary><operator pos:line="50" pos:column="30">)<pos:position pos:line="50" pos:column="31"/></operator></expr>;<pos:position pos:line="50" pos:column="32"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1084_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">values_to_json<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">buffer<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">buffer_size<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
                <parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">data_set_t<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">ds<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">value_list_t<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">vl<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">offset<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">memset<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">buffer<pos:position pos:line="7" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="22">buffer_size<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>

<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define<pos:position pos:line="9" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">BUFFER_ADD<pos:position pos:line="9" pos:column="19"/></name><parameter_list pos:line="9" pos:column="19">(<parameter><type><modifier pos:line="9" pos:column="20">...<pos:position pos:line="9" pos:column="23"/></modifier></type></parameter>)<pos:position pos:line="9" pos:column="24"/></parameter_list></cpp:macro> <cpp:value pos:line="9" pos:column="25">do { \
  int status; \
  status = ssnprintf (buffer + offset, buffer_size - offset, \
      __VA_ARGS__); \
  if (status &lt; 1) \
    return (-1); \
  else if (((size_t) status) &gt;= (buffer_size - offset)) \
    return (-ENOMEM); \
  else \
  offset += ((size_t) status); \
} while (0)<pos:position pos:line="19" pos:column="12"/></cpp:value></cpp:define>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">BUFFER_ADD<pos:position pos:line="21" pos:column="13"/></name> <argument_list pos:line="21" pos:column="14">(<argument><expr><literal type="string" pos:line="21" pos:column="15">"["<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
  <for pos:line="22" pos:column="3">for <control pos:line="22" pos:column="7">(<init><expr><name pos:line="22" pos:column="8">i<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <literal type="number" pos:line="22" pos:column="12">0<pos:position pos:line="22" pos:column="13"/></literal></expr>;<pos:position pos:line="22" pos:column="14"/></init> <condition><expr><name pos:line="22" pos:column="15">i<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&lt;<pos:position pos:line="22" pos:column="21"/></operator> <name><name pos:line="22" pos:column="19">ds<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">ds_num<pos:position pos:line="22" pos:column="29"/></name></name></expr>;<pos:position pos:line="22" pos:column="30"/></condition> <incr><expr><name pos:line="22" pos:column="31">i<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">++<pos:position pos:line="22" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="35"/></control>
  <block pos:line="23" pos:column="3">{
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">i<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">&gt;<pos:position pos:line="24" pos:column="15"/></operator> <literal type="number" pos:line="24" pos:column="13">0<pos:position pos:line="24" pos:column="14"/></literal></expr>)<pos:position pos:line="24" pos:column="15"/></condition><then pos:line="24" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="7">BUFFER_ADD<pos:position pos:line="25" pos:column="17"/></name> <argument_list pos:line="25" pos:column="18">(<argument><expr><literal type="string" pos:line="25" pos:column="19">","<pos:position pos:line="25" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt></block></then></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">ds<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">ds<pos:position pos:line="27" pos:column="15"/></name><index pos:line="27" pos:column="15">[<expr><name pos:line="27" pos:column="16">i<pos:position pos:line="27" pos:column="17"/></name></expr>]<pos:position pos:line="27" pos:column="18"/></index></name><operator pos:line="27" pos:column="18">.<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">type<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">==<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">DS_TYPE_GAUGE<pos:position pos:line="27" pos:column="40"/></name></expr>)<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">BUFFER_ADD<pos:position pos:line="28" pos:column="17"/></name> <argument_list pos:line="28" pos:column="18">(<argument><expr><literal type="string" pos:line="28" pos:column="19">"%g"<pos:position pos:line="28" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="25">vl<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">-&gt;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="29">values<pos:position pos:line="28" pos:column="35"/></name><index pos:line="28" pos:column="35">[<expr><name pos:line="28" pos:column="36">i<pos:position pos:line="28" pos:column="37"/></name></expr>]<pos:position pos:line="28" pos:column="38"/></index></name><operator pos:line="28" pos:column="38">.<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">gauge<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt></block></then>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><name><name pos:line="29" pos:column="14">ds<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">ds<pos:position pos:line="29" pos:column="20"/></name><index pos:line="29" pos:column="20">[<expr><name pos:line="29" pos:column="21">i<pos:position pos:line="29" pos:column="22"/></name></expr>]<pos:position pos:line="29" pos:column="23"/></index></name><operator pos:line="29" pos:column="23">.<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">type<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">==<pos:position pos:line="29" pos:column="31"/></operator> <name pos:line="29" pos:column="32">DS_TYPE_COUNTER<pos:position pos:line="29" pos:column="47"/></name></expr>)<pos:position pos:line="29" pos:column="48"/></condition><then pos:line="29" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="7">BUFFER_ADD<pos:position pos:line="30" pos:column="17"/></name> <argument_list pos:line="30" pos:column="18">(<argument><expr><literal type="string" pos:line="30" pos:column="19">"%llu"<pos:position pos:line="30" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="27">vl<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">values<pos:position pos:line="30" pos:column="37"/></name><index pos:line="30" pos:column="37">[<expr><name pos:line="30" pos:column="38">i<pos:position pos:line="30" pos:column="39"/></name></expr>]<pos:position pos:line="30" pos:column="40"/></index></name><operator pos:line="30" pos:column="40">.<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="41">counter<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><name><name pos:line="31" pos:column="14">ds<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">ds<pos:position pos:line="31" pos:column="20"/></name><index pos:line="31" pos:column="20">[<expr><name pos:line="31" pos:column="21">i<pos:position pos:line="31" pos:column="22"/></name></expr>]<pos:position pos:line="31" pos:column="23"/></index></name><operator pos:line="31" pos:column="23">.<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">type<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">==<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="32">DS_TYPE_DERIVE<pos:position pos:line="31" pos:column="46"/></name></expr>)<pos:position pos:line="31" pos:column="47"/></condition><then pos:line="31" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="7">BUFFER_ADD<pos:position pos:line="32" pos:column="17"/></name> <argument_list pos:line="32" pos:column="18">(<argument><expr><literal type="string" pos:line="32" pos:column="19">"%"<pos:position pos:line="32" pos:column="22"/></literal><name pos:line="32" pos:column="22">PRIi64<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="30">vl<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">values<pos:position pos:line="32" pos:column="40"/></name><index pos:line="32" pos:column="40">[<expr><name pos:line="32" pos:column="41">i<pos:position pos:line="32" pos:column="42"/></name></expr>]<pos:position pos:line="32" pos:column="43"/></index></name><operator pos:line="32" pos:column="43">.<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="44">derive<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><name><name pos:line="33" pos:column="14">ds<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">ds<pos:position pos:line="33" pos:column="20"/></name><index pos:line="33" pos:column="20">[<expr><name pos:line="33" pos:column="21">i<pos:position pos:line="33" pos:column="22"/></name></expr>]<pos:position pos:line="33" pos:column="23"/></index></name><operator pos:line="33" pos:column="23">.<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="24">type<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">==<pos:position pos:line="33" pos:column="31"/></operator> <name pos:line="33" pos:column="32">DS_TYPE_ABSOLUTE<pos:position pos:line="33" pos:column="48"/></name></expr>)<pos:position pos:line="33" pos:column="49"/></condition><then pos:line="33" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="7">BUFFER_ADD<pos:position pos:line="34" pos:column="17"/></name> <argument_list pos:line="34" pos:column="18">(<argument><expr><literal type="string" pos:line="34" pos:column="19">"%"<pos:position pos:line="34" pos:column="22"/></literal><name pos:line="34" pos:column="22">PRIu64<pos:position pos:line="34" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="30">vl<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">-&gt;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="34">values<pos:position pos:line="34" pos:column="40"/></name><index pos:line="34" pos:column="40">[<expr><name pos:line="34" pos:column="41">i<pos:position pos:line="34" pos:column="42"/></name></expr>]<pos:position pos:line="34" pos:column="43"/></index></name><operator pos:line="34" pos:column="43">.<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="44">absolute<pos:position pos:line="34" pos:column="52"/></name></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <else pos:line="35" pos:column="5">else
    <block pos:line="36" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">ERROR<pos:position pos:line="37" pos:column="12"/></name> <argument_list pos:line="37" pos:column="13">(<argument><expr><literal type="string" pos:line="37" pos:column="14">"format_json: Unknown data source type: %i"<pos:position pos:line="37" pos:column="57"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="38" pos:column="11">ds<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">ds<pos:position pos:line="38" pos:column="17"/></name><index pos:line="38" pos:column="17">[<expr><name pos:line="38" pos:column="18">i<pos:position pos:line="38" pos:column="19"/></name></expr>]<pos:position pos:line="38" pos:column="20"/></index></name><operator pos:line="38" pos:column="20">.<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">type<pos:position pos:line="38" pos:column="25"/></name></expr></argument>)<pos:position pos:line="38" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
      <return pos:line="39" pos:column="7">return <expr><operator pos:line="39" pos:column="14">(<pos:position pos:line="39" pos:column="15"/></operator><operator pos:line="39" pos:column="15">-<pos:position pos:line="39" pos:column="16"/></operator><literal type="number" pos:line="39" pos:column="16">1<pos:position pos:line="39" pos:column="17"/></literal><operator pos:line="39" pos:column="17">)<pos:position pos:line="39" pos:column="18"/></operator></expr>;<pos:position pos:line="39" pos:column="19"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></else></if>
  }<pos:position pos:line="41" pos:column="4"/></block></for> <comment type="block" pos:line="41" pos:column="5">/* for ds-&gt;ds_num */</comment>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">BUFFER_ADD<pos:position pos:line="42" pos:column="13"/></name> <argument_list pos:line="42" pos:column="14">(<argument><expr><literal type="string" pos:line="42" pos:column="15">"]"<pos:position pos:line="42" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="20"/></expr_stmt>

<cpp:undef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">undef<pos:position pos:line="44" pos:column="7"/></cpp:directive> <name pos:line="44" pos:column="8">BUFFER_ADD<pos:position pos:line="44" pos:column="18"/></name></cpp:undef>

  <expr_stmt><expr><call><name pos:line="46" pos:column="3">DEBUG<pos:position pos:line="46" pos:column="8"/></name> <argument_list pos:line="46" pos:column="9">(<argument><expr><literal type="string" pos:line="46" pos:column="10">"format_json: values_to_json: buffer = %s;"<pos:position pos:line="46" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="55">buffer<pos:position pos:line="46" pos:column="61"/></name></expr></argument>)<pos:position pos:line="46" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="63"/></expr_stmt>

  <return pos:line="48" pos:column="3">return <expr><operator pos:line="48" pos:column="10">(<pos:position pos:line="48" pos:column="11"/></operator><literal type="number" pos:line="48" pos:column="11">0<pos:position pos:line="48" pos:column="12"/></literal><operator pos:line="48" pos:column="12">)<pos:position pos:line="48" pos:column="13"/></operator></expr>;<pos:position pos:line="48" pos:column="14"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2434_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lu_copy_ident_to_match_part<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">part_match_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">match_part<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="66">/* {{{ */</comment>
                                       <parameter><decl><type><name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">ident_part<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list> <block pos:line="2" pos:column="64">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">len<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><call><name pos:line="3" pos:column="16">strlen<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">(<argument><expr><name pos:line="3" pos:column="23">ident_part<pos:position pos:line="3" pos:column="33"/></name></expr></argument>)<pos:position pos:line="3" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">len<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">&lt;<pos:position pos:line="6" pos:column="16"/></operator> <literal type="number" pos:line="6" pos:column="14">3<pos:position pos:line="6" pos:column="15"/></literal><operator pos:line="6" pos:column="15">)<pos:position pos:line="6" pos:column="16"/></operator> <operator pos:line="6" pos:column="17">||<pos:position pos:line="6" pos:column="19"/></operator> <operator pos:line="6" pos:column="20">(<pos:position pos:line="6" pos:column="21"/></operator><name><name pos:line="6" pos:column="21">ident_part<pos:position pos:line="6" pos:column="31"/></name><index pos:line="6" pos:column="31">[<expr><literal type="number" pos:line="6" pos:column="32">0<pos:position pos:line="6" pos:column="33"/></literal></expr>]<pos:position pos:line="6" pos:column="34"/></index></name> <operator pos:line="6" pos:column="35">!=<pos:position pos:line="6" pos:column="37"/></operator> <literal type="char" pos:line="6" pos:column="38">'/'<pos:position pos:line="6" pos:column="41"/></literal><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator> <operator pos:line="6" pos:column="43">||<pos:position pos:line="6" pos:column="45"/></operator> <operator pos:line="6" pos:column="46">(<pos:position pos:line="6" pos:column="47"/></operator><name><name pos:line="6" pos:column="47">ident_part<pos:position pos:line="6" pos:column="57"/></name><index pos:line="6" pos:column="57">[<expr><name pos:line="6" pos:column="58">len<pos:position pos:line="6" pos:column="61"/></name> <operator pos:line="6" pos:column="62">-<pos:position pos:line="6" pos:column="63"/></operator> <literal type="number" pos:line="6" pos:column="64">1<pos:position pos:line="6" pos:column="65"/></literal></expr>]<pos:position pos:line="6" pos:column="66"/></index></name> <operator pos:line="6" pos:column="67">!=<pos:position pos:line="6" pos:column="69"/></operator> <literal type="char" pos:line="6" pos:column="70">'/'<pos:position pos:line="6" pos:column="73"/></literal><operator pos:line="6" pos:column="73">)<pos:position pos:line="6" pos:column="74"/></operator></expr>)<pos:position pos:line="6" pos:column="75"/></condition><then pos:line="6" pos:column="75"> <block pos:line="6" pos:column="76">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">sstrncpy<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name><name pos:line="7" pos:column="14">match_part<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">str<pos:position pos:line="7" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="31">ident_part<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="43">sizeof<argument_list pos:line="7" pos:column="49">(<argument><expr><name><name pos:line="7" pos:column="50">match_part<pos:position pos:line="7" pos:column="60"/></name><operator pos:line="7" pos:column="60">-&gt;<pos:position pos:line="7" pos:column="65"/></operator><name pos:line="7" pos:column="62">str<pos:position pos:line="7" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">match_part<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">is_regex<pos:position pos:line="8" pos:column="25"/></name></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <literal type="number" pos:line="8" pos:column="28">0<pos:position pos:line="8" pos:column="29"/></literal></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* Copy string without the leading slash. */</comment>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">sstrncpy<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name><name pos:line="13" pos:column="12">match_part<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">str<pos:position pos:line="13" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">ident_part<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">+<pos:position pos:line="13" pos:column="41"/></operator> <literal type="number" pos:line="13" pos:column="42">1<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="45">sizeof<argument_list pos:line="13" pos:column="51">(<argument><expr><name><name pos:line="13" pos:column="52">match_part<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">-&gt;<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="64">str<pos:position pos:line="13" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">assert<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><sizeof pos:line="14" pos:column="10">sizeof<argument_list pos:line="14" pos:column="16">(<argument><expr><name><name pos:line="14" pos:column="17">match_part<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">str<pos:position pos:line="14" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></sizeof> <operator pos:line="14" pos:column="34">&gt;<pos:position pos:line="14" pos:column="38"/></operator> <name pos:line="14" pos:column="36">len<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
  <comment type="block" pos:line="15" pos:column="3">/* strip trailing slash */</comment>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">match_part<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">str<pos:position pos:line="16" pos:column="18"/></name><index pos:line="16" pos:column="18">[<expr><name pos:line="16" pos:column="19">len<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">-<pos:position pos:line="16" pos:column="24"/></operator> <literal type="number" pos:line="16" pos:column="25">2<pos:position pos:line="16" pos:column="26"/></literal></expr>]<pos:position pos:line="16" pos:column="27"/></index></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <literal type="number" pos:line="16" pos:column="30">0<pos:position pos:line="16" pos:column="31"/></literal></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">status<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">regcomp<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><operator pos:line="18" pos:column="20">&amp;<pos:position pos:line="18" pos:column="25"/></operator><name><name pos:line="18" pos:column="21">match_part<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">regex<pos:position pos:line="18" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="40">match_part<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">-&gt;<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="52">str<pos:position pos:line="18" pos:column="55"/></name></name></expr></argument>,
                   <comment type="block" pos:line="19" pos:column="20">/* flags = */</comment> <argument><expr><name pos:line="19" pos:column="34">REG_EXTENDED<pos:position pos:line="19" pos:column="46"/></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">status<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">!=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19"> <block pos:line="20" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name></type> <name><name pos:line="21" pos:column="10">errbuf<pos:position pos:line="21" pos:column="16"/></name><index pos:line="21" pos:column="16">[<expr><literal type="number" pos:line="21" pos:column="17">1024<pos:position pos:line="21" pos:column="21"/></literal></expr>]<pos:position pos:line="21" pos:column="22"/></index></name></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">regerror<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">status<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="22">&amp;<pos:position pos:line="22" pos:column="27"/></operator><name><name pos:line="22" pos:column="23">match_part<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">regex<pos:position pos:line="22" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="42">errbuf<pos:position pos:line="22" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="50">sizeof<argument_list pos:line="22" pos:column="56">(<argument><expr><name pos:line="22" pos:column="57">errbuf<pos:position pos:line="22" pos:column="63"/></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"utils_vl_lookup: Compiling regular expression \"%s\" failed: %s"<pos:position pos:line="23" pos:column="76"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="24" pos:column="11">match_part<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">str<pos:position pos:line="24" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="28">errbuf<pos:position pos:line="24" pos:column="34"/></name></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">EINVAL<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">match_part<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">is_regex<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <literal type="number" pos:line="27" pos:column="26">1<pos:position pos:line="27" pos:column="27"/></literal></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>

  <return pos:line="29" pos:column="3">return <expr><literal type="number" pos:line="29" pos:column="10">0<pos:position pos:line="29" pos:column="11"/></literal></expr>;<pos:position pos:line="29" pos:column="12"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

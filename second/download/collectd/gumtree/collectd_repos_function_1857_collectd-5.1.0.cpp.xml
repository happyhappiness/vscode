<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1857_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">conntrack_read<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">value_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">conntrack<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">fh<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">buffer<pos:position pos:line="5" pos:column="20"/></name><index pos:line="5" pos:column="20">[<expr><literal type="number" pos:line="5" pos:column="21">64<pos:position pos:line="5" pos:column="23"/></literal></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">buffer_len<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">fh<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">fopen<pos:position pos:line="8" pos:column="19"/></name> <argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">CONNTRACK_FILE<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="37">"r"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">fh<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">-<pos:position pos:line="10" pos:column="26"/></operator><literal type="number" pos:line="10" pos:column="26">1<pos:position pos:line="10" pos:column="27"/></literal><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator></expr>;<pos:position pos:line="10" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">memset<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">buffer<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="28">sizeof <argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">buffer<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">fgets<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">buffer<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="28">sizeof <argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">buffer<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">fh<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call> <operator pos:line="13" pos:column="49">==<pos:position pos:line="13" pos:column="51"/></operator> <name pos:line="13" pos:column="52">NULL<pos:position pos:line="13" pos:column="56"/></name></expr>)<pos:position pos:line="13" pos:column="57"/></condition><then pos:line="13" pos:column="57">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">fclose<pos:position pos:line="15" pos:column="23"/></name> <argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">fh<pos:position pos:line="15" pos:column="27"/></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator></expr>;<pos:position pos:line="16" pos:column="29"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">fclose<pos:position pos:line="18" pos:column="15"/></name> <argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">fh<pos:position pos:line="18" pos:column="19"/></name></expr></argument>)<pos:position pos:line="18" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>

	<comment type="block" pos:line="20" pos:column="9">/* strip trailing newline. */</comment>
	<expr_stmt><expr><name pos:line="21" pos:column="9">buffer_len<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">strlen<pos:position pos:line="21" pos:column="28"/></name> <argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">buffer<pos:position pos:line="21" pos:column="36"/></name></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
	<while pos:line="22" pos:column="9">while <condition pos:line="22" pos:column="15">(<expr><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">buffer_len<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">&gt;<pos:position pos:line="22" pos:column="32"/></operator> <literal type="number" pos:line="22" pos:column="30">0<pos:position pos:line="22" pos:column="31"/></literal><operator pos:line="22" pos:column="31">)<pos:position pos:line="22" pos:column="32"/></operator> <operator pos:line="22" pos:column="33">&amp;&amp;<pos:position pos:line="22" pos:column="43"/></operator> <call><name pos:line="22" pos:column="36">isspace<pos:position pos:line="22" pos:column="43"/></name> <argument_list pos:line="22" pos:column="44">(<argument><expr><operator pos:line="22" pos:column="45">(<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="46">int<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">)<pos:position pos:line="22" pos:column="50"/></operator> <name><name pos:line="22" pos:column="51">buffer<pos:position pos:line="22" pos:column="57"/></name><index pos:line="22" pos:column="57">[<expr><name pos:line="22" pos:column="58">buffer_len<pos:position pos:line="22" pos:column="68"/></name> <operator pos:line="22" pos:column="69">-<pos:position pos:line="22" pos:column="70"/></operator> <literal type="number" pos:line="22" pos:column="71">1<pos:position pos:line="22" pos:column="72"/></literal></expr>]<pos:position pos:line="22" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="75"/></condition>
	<block pos:line="23" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="24" pos:column="17">buffer<pos:position pos:line="24" pos:column="23"/></name><index pos:line="24" pos:column="23">[<expr><name pos:line="24" pos:column="24">buffer_len<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">-<pos:position pos:line="24" pos:column="36"/></operator> <literal type="number" pos:line="24" pos:column="37">1<pos:position pos:line="24" pos:column="38"/></literal></expr>]<pos:position pos:line="24" pos:column="39"/></index></name> <operator pos:line="24" pos:column="40">=<pos:position pos:line="24" pos:column="41"/></operator> <literal type="number" pos:line="24" pos:column="42">0<pos:position pos:line="24" pos:column="43"/></literal></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">buffer_len<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">--<pos:position pos:line="25" pos:column="29"/></operator></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></while>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">parse_value<pos:position pos:line="28" pos:column="24"/></name> <argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">buffer<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="34">&amp;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="35">conntrack<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">DS_TYPE_GAUGE<pos:position pos:line="28" pos:column="59"/></name></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call> <operator pos:line="28" pos:column="61">!=<pos:position pos:line="28" pos:column="63"/></operator> <literal type="number" pos:line="28" pos:column="64">0<pos:position pos:line="28" pos:column="65"/></literal></expr>)<pos:position pos:line="28" pos:column="66"/></condition><then pos:line="28" pos:column="66">
		<block type="pseudo"><return pos:line="29" pos:column="17">return <expr><operator pos:line="29" pos:column="24">(<pos:position pos:line="29" pos:column="25"/></operator><operator pos:line="29" pos:column="25">-<pos:position pos:line="29" pos:column="26"/></operator><literal type="number" pos:line="29" pos:column="26">1<pos:position pos:line="29" pos:column="27"/></literal><operator pos:line="29" pos:column="27">)<pos:position pos:line="29" pos:column="28"/></operator></expr>;<pos:position pos:line="29" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">conntrack_submit<pos:position pos:line="31" pos:column="25"/></name> <argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">conntrack<pos:position pos:line="31" pos:column="36"/></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>

	<return pos:line="33" pos:column="9">return <expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><literal type="number" pos:line="33" pos:column="17">0<pos:position pos:line="33" pos:column="18"/></literal><operator pos:line="33" pos:column="18">)<pos:position pos:line="33" pos:column="19"/></operator></expr>;<pos:position pos:line="33" pos:column="20"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_994_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fc_call<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">pTHX_<pos:position pos:line="1" pos:column="25"/></name> <name pos:line="1" pos:column="26">int<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">type<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">cb_type<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">pfc_user_data_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">data<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="72">...<pos:position pos:line="1" pos:column="75"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list> <block pos:line="1" pos:column="77">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">retvals<pos:position pos:line="2" pos:column="14"/></name> <init pos:line="2" pos:column="15">= <expr><literal type="number" pos:line="2" pos:column="17">0<pos:position pos:line="2" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">va_list<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">ap<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">ret<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">notification_meta_t<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier><modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">meta<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name pos:line="7" pos:column="32">NULL<pos:position pos:line="7" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">AV<pos:position pos:line="8" pos:column="5"/></name> <modifier pos:line="8" pos:column="6">*<pos:position pos:line="8" pos:column="7"/></modifier></type><name pos:line="8" pos:column="7">pmeta<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">dSP<pos:position pos:line="10" pos:column="6"/></name></expr>;<pos:position pos:line="10" pos:column="7"/></expr_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">type<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">&lt;<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="15">0<pos:position pos:line="12" pos:column="16"/></literal><operator pos:line="12" pos:column="16">)<pos:position pos:line="12" pos:column="17"/></operator> <operator pos:line="12" pos:column="18">||<pos:position pos:line="12" pos:column="20"/></operator> <operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">type<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">&gt;=<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="30">FC_TYPES<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">)<pos:position pos:line="12" pos:column="39"/></operator></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">cb_type<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">&lt;<pos:position pos:line="15" pos:column="20"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal><operator pos:line="15" pos:column="19">)<pos:position pos:line="15" pos:column="20"/></operator> <operator pos:line="15" pos:column="21">||<pos:position pos:line="15" pos:column="23"/></operator> <operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">cb_type<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">&gt;=<pos:position pos:line="15" pos:column="38"/></operator> <name pos:line="15" pos:column="36">FC_CB_TYPES<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">)<pos:position pos:line="15" pos:column="48"/></operator></expr>)<pos:position pos:line="15" pos:column="49"/></condition><then pos:line="15" pos:column="49">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">-<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">va_start<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">ap<pos:position pos:line="18" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="16">data<pos:position pos:line="18" pos:column="20"/></name></expr></argument>)<pos:position pos:line="18" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name pos:line="20" pos:column="3">ENTER<pos:position pos:line="20" pos:column="8"/></name></expr>;<pos:position pos:line="20" pos:column="9"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">SAVETMPS<pos:position pos:line="21" pos:column="11"/></name></expr>;<pos:position pos:line="21" pos:column="12"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">PUSHMARK<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><name pos:line="23" pos:column="12">SP<pos:position pos:line="23" pos:column="14"/></name></expr></argument>)<pos:position pos:line="23" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="16"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">XPUSHs<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><call><name pos:line="25" pos:column="10">sv_2mortal<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><call><name pos:line="25" pos:column="21">newSViv<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><operator pos:line="25" pos:column="29">(<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">IV<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">)<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="33">type<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">XPUSHs<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">(<argument><expr><call><name pos:line="26" pos:column="10">sv_2mortal<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><call><name pos:line="26" pos:column="21">newSVpv<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name><name pos:line="26" pos:column="29">data<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">name<pos:position pos:line="26" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="41">0<pos:position pos:line="26" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">XPUSHs<pos:position pos:line="27" pos:column="9"/></name><argument_list pos:line="27" pos:column="9">(<argument><expr><call><name pos:line="27" pos:column="10">sv_2mortal<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><call><name pos:line="27" pos:column="21">newSViv<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><operator pos:line="27" pos:column="29">(<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">IV<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">)<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">cb_type<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>

  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">FC_CB_CREATE<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">==<pos:position pos:line="29" pos:column="22"/></operator> <name pos:line="29" pos:column="23">cb_type<pos:position pos:line="29" pos:column="30"/></name></expr>)<pos:position pos:line="29" pos:column="31"/></condition><then pos:line="29" pos:column="31"> <block pos:line="29" pos:column="32">{
    <comment type="block" pos:line="30" pos:column="5">/*
     * $_[0] = $ci;
     * $_[1] = $user_data;
     */</comment>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">oconfig_item_t<pos:position pos:line="34" pos:column="19"/></name> <modifier pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></modifier></type><name pos:line="34" pos:column="21">ci<pos:position pos:line="34" pos:column="23"/></name></decl>;<pos:position pos:line="34" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">HV<pos:position pos:line="35" pos:column="7"/></name> <modifier pos:line="35" pos:column="8">*<pos:position pos:line="35" pos:column="9"/></modifier></type><name pos:line="35" pos:column="9">config<pos:position pos:line="35" pos:column="15"/></name> <init pos:line="35" pos:column="16">= <expr><call><name pos:line="35" pos:column="18">newHV<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">()<pos:position pos:line="35" pos:column="25"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="37" pos:column="5">ci<pos:position pos:line="37" pos:column="7"/></name> <operator pos:line="37" pos:column="8">=<pos:position pos:line="37" pos:column="9"/></operator> <call><name pos:line="37" pos:column="10">va_arg<pos:position pos:line="37" pos:column="16"/></name><argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">ap<pos:position pos:line="37" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="21">oconfig_item_t<pos:position pos:line="37" pos:column="35"/></name> <operator pos:line="37" pos:column="36">*<pos:position pos:line="37" pos:column="37"/></operator></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><literal type="number" pos:line="39" pos:column="9">0<pos:position pos:line="39" pos:column="10"/></literal> <operator pos:line="39" pos:column="11">!=<pos:position pos:line="39" pos:column="13"/></operator> <macro><name pos:line="39" pos:column="14">oconfig_item2hv<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument pos:line="39" pos:column="30">aTHX_ ci<pos:position pos:line="39" pos:column="38"/></argument>, <argument pos:line="39" pos:column="40">config<pos:position pos:line="39" pos:column="46"/></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></macro></expr>)<pos:position pos:line="39" pos:column="48"/></condition><then pos:line="39" pos:column="48"> <block pos:line="39" pos:column="49">{
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">hv_clear<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">config<pos:position pos:line="40" pos:column="22"/></name></expr></argument>)<pos:position pos:line="40" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">hv_undef<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">config<pos:position pos:line="41" pos:column="22"/></name></expr></argument>)<pos:position pos:line="41" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="42" pos:column="7">config<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="17">HV<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">*<pos:position pos:line="42" pos:column="21"/></operator><operator pos:line="42" pos:column="21">)<pos:position pos:line="42" pos:column="22"/></operator><operator pos:line="42" pos:column="22">&amp;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="23">PL_sv_undef<pos:position pos:line="42" pos:column="34"/></name></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">ret<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <operator pos:line="43" pos:column="13">-<pos:position pos:line="43" pos:column="14"/></operator><literal type="number" pos:line="43" pos:column="14">1<pos:position pos:line="43" pos:column="15"/></literal></expr>;<pos:position pos:line="43" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">XPUSHs<pos:position pos:line="46" pos:column="11"/></name><argument_list pos:line="46" pos:column="11">(<argument><expr><call><name pos:line="46" pos:column="12">sv_2mortal<pos:position pos:line="46" pos:column="22"/></name><argument_list pos:line="46" pos:column="22">(<argument><expr><call><name pos:line="46" pos:column="23">newRV_noinc<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><operator pos:line="46" pos:column="35">(<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="36">SV<pos:position pos:line="46" pos:column="38"/></name> <operator pos:line="46" pos:column="39">*<pos:position pos:line="46" pos:column="40"/></operator><operator pos:line="46" pos:column="40">)<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="41">config<pos:position pos:line="46" pos:column="47"/></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></then> <elseif pos:line="47" pos:column="5">else <if pos:line="47" pos:column="10">if <condition pos:line="47" pos:column="13">(<expr><name pos:line="47" pos:column="14">FC_CB_DESTROY<pos:position pos:line="47" pos:column="27"/></name> <operator pos:line="47" pos:column="28">==<pos:position pos:line="47" pos:column="30"/></operator> <name pos:line="47" pos:column="31">cb_type<pos:position pos:line="47" pos:column="38"/></name></expr>)<pos:position pos:line="47" pos:column="39"/></condition><then pos:line="47" pos:column="39"> <block pos:line="47" pos:column="40">{
    <comment type="block" pos:line="48" pos:column="5">/*
     * $_[1] = $user_data;
     */</comment>

    <comment type="block" pos:line="52" pos:column="5">/* nothing to be done - the user data pointer
     * is pushed onto the stack later */</comment>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if></elseif> <elseif pos:line="54" pos:column="5">else <if pos:line="54" pos:column="10">if <condition pos:line="54" pos:column="13">(<expr><name pos:line="54" pos:column="14">FC_CB_EXEC<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">==<pos:position pos:line="54" pos:column="27"/></operator> <name pos:line="54" pos:column="28">cb_type<pos:position pos:line="54" pos:column="35"/></name></expr>)<pos:position pos:line="54" pos:column="36"/></condition><then pos:line="54" pos:column="36"> <block pos:line="54" pos:column="37">{
    <comment type="block" pos:line="55" pos:column="5">/*
     * $_[0] = $ds;
     * $_[1] = $vl;
     * $_[2] = $meta;
     * $_[3] = $user_data;
     */</comment>
    <decl_stmt><decl><type><name pos:line="61" pos:column="5">data_set_t<pos:position pos:line="61" pos:column="15"/></name> <modifier pos:line="61" pos:column="16">*<pos:position pos:line="61" pos:column="17"/></modifier></type><name pos:line="61" pos:column="17">ds<pos:position pos:line="61" pos:column="19"/></name></decl>;<pos:position pos:line="61" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">value_list_t<pos:position pos:line="62" pos:column="17"/></name> <modifier pos:line="62" pos:column="18">*<pos:position pos:line="62" pos:column="19"/></modifier></type><name pos:line="62" pos:column="19">vl<pos:position pos:line="62" pos:column="21"/></name></decl>;<pos:position pos:line="62" pos:column="22"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="64" pos:column="5">AV<pos:position pos:line="64" pos:column="7"/></name> <modifier pos:line="64" pos:column="8">*<pos:position pos:line="64" pos:column="9"/></modifier></type><name pos:line="64" pos:column="9">pds<pos:position pos:line="64" pos:column="12"/></name> <init pos:line="64" pos:column="13">= <expr><call><name pos:line="64" pos:column="15">newAV<pos:position pos:line="64" pos:column="20"/></name><argument_list pos:line="64" pos:column="20">()<pos:position pos:line="64" pos:column="22"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="65" pos:column="5">HV<pos:position pos:line="65" pos:column="7"/></name> <modifier pos:line="65" pos:column="8">*<pos:position pos:line="65" pos:column="9"/></modifier></type><name pos:line="65" pos:column="9">pvl<pos:position pos:line="65" pos:column="12"/></name> <init pos:line="65" pos:column="13">= <expr><call><name pos:line="65" pos:column="15">newHV<pos:position pos:line="65" pos:column="20"/></name><argument_list pos:line="65" pos:column="20">()<pos:position pos:line="65" pos:column="22"/></argument_list></call></expr></init></decl>;<pos:position pos:line="65" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="67" pos:column="5">ds<pos:position pos:line="67" pos:column="7"/></name> <operator pos:line="67" pos:column="8">=<pos:position pos:line="67" pos:column="9"/></operator> <call><name pos:line="67" pos:column="10">va_arg<pos:position pos:line="67" pos:column="16"/></name><argument_list pos:line="67" pos:column="16">(<argument><expr><name pos:line="67" pos:column="17">ap<pos:position pos:line="67" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="21">data_set_t<pos:position pos:line="67" pos:column="31"/></name> <operator pos:line="67" pos:column="32">*<pos:position pos:line="67" pos:column="33"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="68" pos:column="5">vl<pos:position pos:line="68" pos:column="7"/></name> <operator pos:line="68" pos:column="8">=<pos:position pos:line="68" pos:column="9"/></operator> <call><name pos:line="68" pos:column="10">va_arg<pos:position pos:line="68" pos:column="16"/></name><argument_list pos:line="68" pos:column="16">(<argument><expr><name pos:line="68" pos:column="17">ap<pos:position pos:line="68" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="21">value_list_t<pos:position pos:line="68" pos:column="33"/></name> <operator pos:line="68" pos:column="34">*<pos:position pos:line="68" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="68" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="69" pos:column="5">meta<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator> <call><name pos:line="69" pos:column="12">va_arg<pos:position pos:line="69" pos:column="18"/></name><argument_list pos:line="69" pos:column="18">(<argument><expr><name pos:line="69" pos:column="19">ap<pos:position pos:line="69" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="23">notification_meta_t<pos:position pos:line="69" pos:column="42"/></name> <operator pos:line="69" pos:column="43">*<pos:position pos:line="69" pos:column="44"/></operator><operator pos:line="69" pos:column="44">*<pos:position pos:line="69" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="69" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="47"/></expr_stmt>

    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><literal type="number" pos:line="71" pos:column="9">0<pos:position pos:line="71" pos:column="10"/></literal> <operator pos:line="71" pos:column="11">!=<pos:position pos:line="71" pos:column="13"/></operator> <macro><name pos:line="71" pos:column="14">data_set2av<pos:position pos:line="71" pos:column="25"/></name><argument_list pos:line="71" pos:column="25">(<argument pos:line="71" pos:column="26">aTHX_ ds<pos:position pos:line="71" pos:column="34"/></argument>, <argument pos:line="71" pos:column="36">pds<pos:position pos:line="71" pos:column="39"/></argument>)<pos:position pos:line="71" pos:column="40"/></argument_list></macro></expr>)<pos:position pos:line="71" pos:column="41"/></condition><then pos:line="71" pos:column="41"> <block pos:line="71" pos:column="42">{
      <expr_stmt><expr><call><name pos:line="72" pos:column="7">av_clear<pos:position pos:line="72" pos:column="15"/></name><argument_list pos:line="72" pos:column="15">(<argument><expr><name pos:line="72" pos:column="16">pds<pos:position pos:line="72" pos:column="19"/></name></expr></argument>)<pos:position pos:line="72" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">av_undef<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><name pos:line="73" pos:column="16">pds<pos:position pos:line="73" pos:column="19"/></name></expr></argument>)<pos:position pos:line="73" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="74" pos:column="7">pds<pos:position pos:line="74" pos:column="10"/></name> <operator pos:line="74" pos:column="11">=<pos:position pos:line="74" pos:column="12"/></operator> <operator pos:line="74" pos:column="13">(<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="14">AV<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">*<pos:position pos:line="74" pos:column="18"/></operator><operator pos:line="74" pos:column="18">)<pos:position pos:line="74" pos:column="19"/></operator><operator pos:line="74" pos:column="19">&amp;<pos:position pos:line="74" pos:column="24"/></operator><name pos:line="74" pos:column="20">PL_sv_undef<pos:position pos:line="74" pos:column="31"/></name></expr>;<pos:position pos:line="74" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="75" pos:column="7">ret<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">=<pos:position pos:line="75" pos:column="12"/></operator> <operator pos:line="75" pos:column="13">-<pos:position pos:line="75" pos:column="14"/></operator><literal type="number" pos:line="75" pos:column="14">1<pos:position pos:line="75" pos:column="15"/></literal></expr>;<pos:position pos:line="75" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><literal type="number" pos:line="78" pos:column="9">0<pos:position pos:line="78" pos:column="10"/></literal> <operator pos:line="78" pos:column="11">!=<pos:position pos:line="78" pos:column="13"/></operator> <macro><name pos:line="78" pos:column="14">value_list2hv<pos:position pos:line="78" pos:column="27"/></name><argument_list pos:line="78" pos:column="27">(<argument pos:line="78" pos:column="28">aTHX_ vl<pos:position pos:line="78" pos:column="36"/></argument>, <argument pos:line="78" pos:column="38">ds<pos:position pos:line="78" pos:column="40"/></argument>, <argument pos:line="78" pos:column="42">pvl<pos:position pos:line="78" pos:column="45"/></argument>)<pos:position pos:line="78" pos:column="46"/></argument_list></macro></expr>)<pos:position pos:line="78" pos:column="47"/></condition><then pos:line="78" pos:column="47"> <block pos:line="78" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">hv_clear<pos:position pos:line="79" pos:column="15"/></name><argument_list pos:line="79" pos:column="15">(<argument><expr><name pos:line="79" pos:column="16">pvl<pos:position pos:line="79" pos:column="19"/></name></expr></argument>)<pos:position pos:line="79" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">hv_undef<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><name pos:line="80" pos:column="16">pvl<pos:position pos:line="80" pos:column="19"/></name></expr></argument>)<pos:position pos:line="80" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="81" pos:column="7">pvl<pos:position pos:line="81" pos:column="10"/></name> <operator pos:line="81" pos:column="11">=<pos:position pos:line="81" pos:column="12"/></operator> <operator pos:line="81" pos:column="13">(<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">HV<pos:position pos:line="81" pos:column="16"/></name> <operator pos:line="81" pos:column="17">*<pos:position pos:line="81" pos:column="18"/></operator><operator pos:line="81" pos:column="18">)<pos:position pos:line="81" pos:column="19"/></operator><operator pos:line="81" pos:column="19">&amp;<pos:position pos:line="81" pos:column="24"/></operator><name pos:line="81" pos:column="20">PL_sv_undef<pos:position pos:line="81" pos:column="31"/></name></expr>;<pos:position pos:line="81" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="82" pos:column="7">ret<pos:position pos:line="82" pos:column="10"/></name> <operator pos:line="82" pos:column="11">=<pos:position pos:line="82" pos:column="12"/></operator> <operator pos:line="82" pos:column="13">-<pos:position pos:line="82" pos:column="14"/></operator><literal type="number" pos:line="82" pos:column="14">1<pos:position pos:line="82" pos:column="15"/></literal></expr>;<pos:position pos:line="82" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>

    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name pos:line="85" pos:column="9">NULL<pos:position pos:line="85" pos:column="13"/></name> <operator pos:line="85" pos:column="14">!=<pos:position pos:line="85" pos:column="16"/></operator> <name pos:line="85" pos:column="17">meta<pos:position pos:line="85" pos:column="21"/></name></expr>)<pos:position pos:line="85" pos:column="22"/></condition><then pos:line="85" pos:column="22"> <block pos:line="85" pos:column="23">{
      <expr_stmt><expr><name pos:line="86" pos:column="7">pmeta<pos:position pos:line="86" pos:column="12"/></name> <operator pos:line="86" pos:column="13">=<pos:position pos:line="86" pos:column="14"/></operator> <call><name pos:line="86" pos:column="15">newAV<pos:position pos:line="86" pos:column="20"/></name><argument_list pos:line="86" pos:column="20">()<pos:position pos:line="86" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="23"/></expr_stmt>

      <if pos:line="88" pos:column="7">if <condition pos:line="88" pos:column="10">(<expr><literal type="number" pos:line="88" pos:column="11">0<pos:position pos:line="88" pos:column="12"/></literal> <operator pos:line="88" pos:column="13">!=<pos:position pos:line="88" pos:column="15"/></operator> <call><name pos:line="88" pos:column="16">notification_meta2av<pos:position pos:line="88" pos:column="36"/></name><argument_list pos:line="88" pos:column="36">(<argument><expr><name pos:line="88" pos:column="37">aTHX_<pos:position pos:line="88" pos:column="42"/></name> <operator pos:line="88" pos:column="43">*<pos:position pos:line="88" pos:column="44"/></operator> <name pos:line="88" pos:column="45">meta<pos:position pos:line="88" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="51">pmeta<pos:position pos:line="88" pos:column="56"/></name></expr></argument>)<pos:position pos:line="88" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="58"/></condition><then pos:line="88" pos:column="58"> <block pos:line="88" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">av_clear<pos:position pos:line="89" pos:column="17"/></name><argument_list pos:line="89" pos:column="17">(<argument><expr><name pos:line="89" pos:column="18">pmeta<pos:position pos:line="89" pos:column="23"/></name></expr></argument>)<pos:position pos:line="89" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">av_undef<pos:position pos:line="90" pos:column="17"/></name><argument_list pos:line="90" pos:column="17">(<argument><expr><name pos:line="90" pos:column="18">pmeta<pos:position pos:line="90" pos:column="23"/></name></expr></argument>)<pos:position pos:line="90" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="91" pos:column="9">pmeta<pos:position pos:line="91" pos:column="14"/></name> <operator pos:line="91" pos:column="15">=<pos:position pos:line="91" pos:column="16"/></operator> <operator pos:line="91" pos:column="17">(<pos:position pos:line="91" pos:column="18"/></operator><name pos:line="91" pos:column="18">AV<pos:position pos:line="91" pos:column="20"/></name> <operator pos:line="91" pos:column="21">*<pos:position pos:line="91" pos:column="22"/></operator><operator pos:line="91" pos:column="22">)<pos:position pos:line="91" pos:column="23"/></operator><operator pos:line="91" pos:column="23">&amp;<pos:position pos:line="91" pos:column="28"/></operator><name pos:line="91" pos:column="24">PL_sv_undef<pos:position pos:line="91" pos:column="35"/></name></expr>;<pos:position pos:line="91" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="92" pos:column="9">ret<pos:position pos:line="92" pos:column="12"/></name> <operator pos:line="92" pos:column="13">=<pos:position pos:line="92" pos:column="14"/></operator> <operator pos:line="92" pos:column="15">-<pos:position pos:line="92" pos:column="16"/></operator><literal type="number" pos:line="92" pos:column="16">1<pos:position pos:line="92" pos:column="17"/></literal></expr>;<pos:position pos:line="92" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="93" pos:column="8"/></block></then></if>
    }<pos:position pos:line="94" pos:column="6"/></block></then> <else pos:line="94" pos:column="7">else <block pos:line="94" pos:column="12">{
      <expr_stmt><expr><name pos:line="95" pos:column="7">pmeta<pos:position pos:line="95" pos:column="12"/></name> <operator pos:line="95" pos:column="13">=<pos:position pos:line="95" pos:column="14"/></operator> <operator pos:line="95" pos:column="15">(<pos:position pos:line="95" pos:column="16"/></operator><name pos:line="95" pos:column="16">AV<pos:position pos:line="95" pos:column="18"/></name> <operator pos:line="95" pos:column="19">*<pos:position pos:line="95" pos:column="20"/></operator><operator pos:line="95" pos:column="20">)<pos:position pos:line="95" pos:column="21"/></operator><operator pos:line="95" pos:column="21">&amp;<pos:position pos:line="95" pos:column="26"/></operator><name pos:line="95" pos:column="22">PL_sv_undef<pos:position pos:line="95" pos:column="33"/></name></expr>;<pos:position pos:line="95" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="96" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="98" pos:column="5">XPUSHs<pos:position pos:line="98" pos:column="11"/></name><argument_list pos:line="98" pos:column="11">(<argument><expr><call><name pos:line="98" pos:column="12">sv_2mortal<pos:position pos:line="98" pos:column="22"/></name><argument_list pos:line="98" pos:column="22">(<argument><expr><call><name pos:line="98" pos:column="23">newRV_noinc<pos:position pos:line="98" pos:column="34"/></name><argument_list pos:line="98" pos:column="34">(<argument><expr><operator pos:line="98" pos:column="35">(<pos:position pos:line="98" pos:column="36"/></operator><name pos:line="98" pos:column="36">SV<pos:position pos:line="98" pos:column="38"/></name> <operator pos:line="98" pos:column="39">*<pos:position pos:line="98" pos:column="40"/></operator><operator pos:line="98" pos:column="40">)<pos:position pos:line="98" pos:column="41"/></operator><name pos:line="98" pos:column="41">pds<pos:position pos:line="98" pos:column="44"/></name></expr></argument>)<pos:position pos:line="98" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="98" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="98" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">XPUSHs<pos:position pos:line="99" pos:column="11"/></name><argument_list pos:line="99" pos:column="11">(<argument><expr><call><name pos:line="99" pos:column="12">sv_2mortal<pos:position pos:line="99" pos:column="22"/></name><argument_list pos:line="99" pos:column="22">(<argument><expr><call><name pos:line="99" pos:column="23">newRV_noinc<pos:position pos:line="99" pos:column="34"/></name><argument_list pos:line="99" pos:column="34">(<argument><expr><operator pos:line="99" pos:column="35">(<pos:position pos:line="99" pos:column="36"/></operator><name pos:line="99" pos:column="36">SV<pos:position pos:line="99" pos:column="38"/></name> <operator pos:line="99" pos:column="39">*<pos:position pos:line="99" pos:column="40"/></operator><operator pos:line="99" pos:column="40">)<pos:position pos:line="99" pos:column="41"/></operator><name pos:line="99" pos:column="41">pvl<pos:position pos:line="99" pos:column="44"/></name></expr></argument>)<pos:position pos:line="99" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="99" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="99" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">XPUSHs<pos:position pos:line="100" pos:column="11"/></name><argument_list pos:line="100" pos:column="11">(<argument><expr><call><name pos:line="100" pos:column="12">sv_2mortal<pos:position pos:line="100" pos:column="22"/></name><argument_list pos:line="100" pos:column="22">(<argument><expr><call><name pos:line="100" pos:column="23">newRV_noinc<pos:position pos:line="100" pos:column="34"/></name><argument_list pos:line="100" pos:column="34">(<argument><expr><operator pos:line="100" pos:column="35">(<pos:position pos:line="100" pos:column="36"/></operator><name pos:line="100" pos:column="36">SV<pos:position pos:line="100" pos:column="38"/></name> <operator pos:line="100" pos:column="39">*<pos:position pos:line="100" pos:column="40"/></operator><operator pos:line="100" pos:column="40">)<pos:position pos:line="100" pos:column="41"/></operator><name pos:line="100" pos:column="41">pmeta<pos:position pos:line="100" pos:column="46"/></name></expr></argument>)<pos:position pos:line="100" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="101" pos:column="4"/></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="103" pos:column="3">XPUSHs<pos:position pos:line="103" pos:column="9"/></name><argument_list pos:line="103" pos:column="9">(<argument><expr><call><name pos:line="103" pos:column="10">sv_2mortal<pos:position pos:line="103" pos:column="20"/></name><argument_list pos:line="103" pos:column="20">(<argument><expr><call><name pos:line="103" pos:column="21">newRV_inc<pos:position pos:line="103" pos:column="30"/></name><argument_list pos:line="103" pos:column="30">(<argument><expr><name><name pos:line="103" pos:column="31">data<pos:position pos:line="103" pos:column="35"/></name><operator pos:line="103" pos:column="35">-&gt;<pos:position pos:line="103" pos:column="40"/></operator><name pos:line="103" pos:column="37">user_data<pos:position pos:line="103" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><name pos:line="105" pos:column="3">PUTBACK<pos:position pos:line="105" pos:column="10"/></name></expr>;<pos:position pos:line="105" pos:column="11"/></expr_stmt>

  <expr_stmt><expr><name pos:line="107" pos:column="3">retvals<pos:position pos:line="107" pos:column="10"/></name> <operator pos:line="107" pos:column="11">=<pos:position pos:line="107" pos:column="12"/></operator> <call><name pos:line="107" pos:column="13">call_pv_locked<pos:position pos:line="107" pos:column="27"/></name><argument_list pos:line="107" pos:column="27">(<argument><expr><name pos:line="107" pos:column="28">aTHX_<pos:position pos:line="107" pos:column="33"/></name> <literal type="string" pos:line="107" pos:column="34">"Collectd::fc_call"<pos:position pos:line="107" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="55"/></expr_stmt>

  <if pos:line="109" pos:column="3">if <condition pos:line="109" pos:column="6">(<expr><operator pos:line="109" pos:column="7">(<pos:position pos:line="109" pos:column="8"/></operator><name pos:line="109" pos:column="8">FC_CB_EXEC<pos:position pos:line="109" pos:column="18"/></name> <operator pos:line="109" pos:column="19">==<pos:position pos:line="109" pos:column="21"/></operator> <name pos:line="109" pos:column="22">cb_type<pos:position pos:line="109" pos:column="29"/></name><operator pos:line="109" pos:column="29">)<pos:position pos:line="109" pos:column="30"/></operator> <operator pos:line="109" pos:column="31">&amp;&amp;<pos:position pos:line="109" pos:column="41"/></operator> <operator pos:line="109" pos:column="34">(<pos:position pos:line="109" pos:column="35"/></operator><name pos:line="109" pos:column="35">meta<pos:position pos:line="109" pos:column="39"/></name> <operator pos:line="109" pos:column="40">!=<pos:position pos:line="109" pos:column="42"/></operator> <name pos:line="109" pos:column="43">NULL<pos:position pos:line="109" pos:column="47"/></name><operator pos:line="109" pos:column="47">)<pos:position pos:line="109" pos:column="48"/></operator></expr>)<pos:position pos:line="109" pos:column="49"/></condition><then pos:line="109" pos:column="49"> <block pos:line="109" pos:column="50">{
    <expr_stmt><expr><call><name pos:line="110" pos:column="5">assert<pos:position pos:line="110" pos:column="11"/></name><argument_list pos:line="110" pos:column="11">(<argument><expr><name pos:line="110" pos:column="12">pmeta<pos:position pos:line="110" pos:column="17"/></name> <operator pos:line="110" pos:column="18">!=<pos:position pos:line="110" pos:column="20"/></operator> <name pos:line="110" pos:column="21">NULL<pos:position pos:line="110" pos:column="25"/></name></expr></argument>)<pos:position pos:line="110" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="112" pos:column="5">plugin_notification_meta_free<pos:position pos:line="112" pos:column="34"/></name><argument_list pos:line="112" pos:column="34">(<argument><expr><operator pos:line="112" pos:column="35">*<pos:position pos:line="112" pos:column="36"/></operator><name pos:line="112" pos:column="36">meta<pos:position pos:line="112" pos:column="40"/></name></expr></argument>)<pos:position pos:line="112" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="42"/></expr_stmt>
    <macro><name pos:line="113" pos:column="5">av2notification_meta<pos:position pos:line="113" pos:column="25"/></name><argument_list pos:line="113" pos:column="25">(<argument pos:line="113" pos:column="26">aTHX_ pmeta<pos:position pos:line="113" pos:column="37"/></argument>, <argument pos:line="113" pos:column="39">meta<pos:position pos:line="113" pos:column="43"/></argument>)<pos:position pos:line="113" pos:column="44"/></argument_list></macro><empty_stmt pos:line="113" pos:column="44">;<pos:position pos:line="113" pos:column="45"/></empty_stmt>
  }<pos:position pos:line="114" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="116" pos:column="3">SPAGAIN<pos:position pos:line="116" pos:column="10"/></name></expr>;<pos:position pos:line="116" pos:column="11"/></expr_stmt>
  <if pos:line="117" pos:column="3">if <condition pos:line="117" pos:column="6">(<expr><call><name pos:line="117" pos:column="7">SvTRUE<pos:position pos:line="117" pos:column="13"/></name><argument_list pos:line="117" pos:column="13">(<argument><expr><name pos:line="117" pos:column="14">ERRSV<pos:position pos:line="117" pos:column="19"/></name></expr></argument>)<pos:position pos:line="117" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="21"/></condition><then pos:line="117" pos:column="21"> <block pos:line="117" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="118" pos:column="5">ERROR<pos:position pos:line="118" pos:column="10"/></name><argument_list pos:line="118" pos:column="10">(<argument><expr><literal type="string" pos:line="118" pos:column="11">"perl: Collectd::fc_call error: %s"<pos:position pos:line="118" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="118" pos:column="48">SvPV_nolen<pos:position pos:line="118" pos:column="58"/></name><argument_list pos:line="118" pos:column="58">(<argument><expr><name pos:line="118" pos:column="59">ERRSV<pos:position pos:line="118" pos:column="64"/></name></expr></argument>)<pos:position pos:line="118" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="118" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name pos:line="119" pos:column="5">ret<pos:position pos:line="119" pos:column="8"/></name> <operator pos:line="119" pos:column="9">=<pos:position pos:line="119" pos:column="10"/></operator> <operator pos:line="119" pos:column="11">-<pos:position pos:line="119" pos:column="12"/></operator><literal type="number" pos:line="119" pos:column="12">1<pos:position pos:line="119" pos:column="13"/></literal></expr>;<pos:position pos:line="119" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="120" pos:column="4"/></block></then> <elseif pos:line="120" pos:column="5">else <if pos:line="120" pos:column="10">if <condition pos:line="120" pos:column="13">(<expr><literal type="number" pos:line="120" pos:column="14">0<pos:position pos:line="120" pos:column="15"/></literal> <operator pos:line="120" pos:column="16">&lt;<pos:position pos:line="120" pos:column="20"/></operator> <name pos:line="120" pos:column="18">retvals<pos:position pos:line="120" pos:column="25"/></name></expr>)<pos:position pos:line="120" pos:column="26"/></condition><then pos:line="120" pos:column="26"> <block pos:line="120" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="121" pos:column="5">SV<pos:position pos:line="121" pos:column="7"/></name> <modifier pos:line="121" pos:column="8">*<pos:position pos:line="121" pos:column="9"/></modifier></type><name pos:line="121" pos:column="9">tmp<pos:position pos:line="121" pos:column="12"/></name> <init pos:line="121" pos:column="13">= <expr><name pos:line="121" pos:column="15">POPs<pos:position pos:line="121" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="121" pos:column="20"/></decl_stmt>

    <comment type="block" pos:line="123" pos:column="5">/* the exec callbacks return a status, while
     * the others return a boolean value */</comment>
    <if pos:line="125" pos:column="5">if <condition pos:line="125" pos:column="8">(<expr><name pos:line="125" pos:column="9">FC_CB_EXEC<pos:position pos:line="125" pos:column="19"/></name> <operator pos:line="125" pos:column="20">==<pos:position pos:line="125" pos:column="22"/></operator> <name pos:line="125" pos:column="23">cb_type<pos:position pos:line="125" pos:column="30"/></name></expr>)<pos:position pos:line="125" pos:column="31"/></condition><then pos:line="125" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><name pos:line="126" pos:column="7">ret<pos:position pos:line="126" pos:column="10"/></name> <operator pos:line="126" pos:column="11">=<pos:position pos:line="126" pos:column="12"/></operator> <call><name pos:line="126" pos:column="13">SvIV<pos:position pos:line="126" pos:column="17"/></name><argument_list pos:line="126" pos:column="17">(<argument><expr><name pos:line="126" pos:column="18">tmp<pos:position pos:line="126" pos:column="21"/></name></expr></argument>)<pos:position pos:line="126" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="23"/></expr_stmt></block></then>
    <elseif pos:line="127" pos:column="5">else <if pos:line="127" pos:column="10">if <condition pos:line="127" pos:column="13">(<expr><operator pos:line="127" pos:column="14">!<pos:position pos:line="127" pos:column="15"/></operator><call><name pos:line="127" pos:column="15">SvTRUE<pos:position pos:line="127" pos:column="21"/></name><argument_list pos:line="127" pos:column="21">(<argument><expr><name pos:line="127" pos:column="22">tmp<pos:position pos:line="127" pos:column="25"/></name></expr></argument>)<pos:position pos:line="127" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="27"/></condition><then pos:line="127" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><name pos:line="128" pos:column="7">ret<pos:position pos:line="128" pos:column="10"/></name> <operator pos:line="128" pos:column="11">=<pos:position pos:line="128" pos:column="12"/></operator> <operator pos:line="128" pos:column="13">-<pos:position pos:line="128" pos:column="14"/></operator><literal type="number" pos:line="128" pos:column="14">1<pos:position pos:line="128" pos:column="15"/></literal></expr>;<pos:position pos:line="128" pos:column="16"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="129" pos:column="4"/></block></then></if></elseif></if>

  <expr_stmt><expr><name pos:line="131" pos:column="3">PUTBACK<pos:position pos:line="131" pos:column="10"/></name></expr>;<pos:position pos:line="131" pos:column="11"/></expr_stmt>
  <expr_stmt><expr><name pos:line="132" pos:column="3">FREETMPS<pos:position pos:line="132" pos:column="11"/></name></expr>;<pos:position pos:line="132" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><name pos:line="133" pos:column="3">LEAVE<pos:position pos:line="133" pos:column="8"/></name></expr>;<pos:position pos:line="133" pos:column="9"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="135" pos:column="3">va_end<pos:position pos:line="135" pos:column="9"/></name><argument_list pos:line="135" pos:column="9">(<argument><expr><name pos:line="135" pos:column="10">ap<pos:position pos:line="135" pos:column="12"/></name></expr></argument>)<pos:position pos:line="135" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="14"/></expr_stmt>
  <return pos:line="136" pos:column="3">return <expr><name pos:line="136" pos:column="10">ret<pos:position pos:line="136" pos:column="13"/></name></expr>;<pos:position pos:line="136" pos:column="14"/></return>
}<pos:position pos:line="137" pos:column="2"/></block></function></unit>

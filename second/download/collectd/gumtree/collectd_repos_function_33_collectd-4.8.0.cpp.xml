<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_33_collectd-4.8.0.cpp" pos:tabs="8"><function_decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">sys_dld_close<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">loader_data<pos:position pos:line="2" pos:column="27"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">module<pos:position pos:line="2" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">lt_user_data<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">loader_data<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">lt_module<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">module<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">errors<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">dld_unlink_by_file<pos:position pos:line="8" pos:column="25"/></name> <argument_list pos:line="8" pos:column="26">(<argument><expr><operator pos:line="8" pos:column="27">(<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">char<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">*<pos:position pos:line="8" pos:column="33"/></operator><operator pos:line="8" pos:column="33">)<pos:position pos:line="8" pos:column="34"/></operator><operator pos:line="8" pos:column="34">(<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="35">module<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">)<pos:position pos:line="8" pos:column="42"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="44">1<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call> <operator pos:line="8" pos:column="47">!=<pos:position pos:line="8" pos:column="49"/></operator> <literal type="number" pos:line="8" pos:column="50">0<pos:position pos:line="8" pos:column="51"/></literal></expr>)<pos:position pos:line="8" pos:column="52"/></condition><then pos:line="8" pos:column="52">
    <block pos:line="9" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="10" pos:column="26"/></name> <argument_list pos:line="10" pos:column="27">(<argument><expr><call><name pos:line="10" pos:column="28">LT_DLSTRERROR<pos:position pos:line="10" pos:column="41"/></name> <argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">CANNOT_CLOSE<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="11" pos:column="7">++<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">errors<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
  <else pos:line="13" pos:column="3">else
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">LT_DLFREE<pos:position pos:line="15" pos:column="16"/></name> <argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">module<pos:position pos:line="15" pos:column="24"/></name></expr></argument>)<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></else></if>

  <return pos:line="18" pos:column="3">return <expr><name pos:line="18" pos:column="10">errors<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function_decl></unit>

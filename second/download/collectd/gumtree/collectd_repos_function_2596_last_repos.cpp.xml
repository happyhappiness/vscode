<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2596_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">llentry_t<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type><name pos:line="1" pos:column="12">llist_search_custom<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">llist_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">l<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><function_decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> (<modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><name pos:line="1" pos:column="50">compare<pos:position pos:line="1" pos:column="57"/></name>)<parameter_list pos:line="1" pos:column="58">(<parameter><decl><type><name pos:line="1" pos:column="59">llentry_t<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">void<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list></function_decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">void<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">user_data<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list> <block pos:line="2" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">llentry_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">e<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">l<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">==<pos:position pos:line="5" pos:column="11"/></operator> <name pos:line="5" pos:column="12">NULL<pos:position pos:line="5" pos:column="16"/></name></expr>)<pos:position pos:line="5" pos:column="17"/></condition><then pos:line="5" pos:column="17">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name></expr>;<pos:position pos:line="6" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="8" pos:column="3">e<pos:position pos:line="8" pos:column="4"/></name> <operator pos:line="8" pos:column="5">=<pos:position pos:line="8" pos:column="6"/></operator> <name><name pos:line="8" pos:column="7">l<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">head<pos:position pos:line="8" pos:column="14"/></name></name></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><name pos:line="9" pos:column="10">e<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">!=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition> <block pos:line="9" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">llentry_t<pos:position pos:line="10" pos:column="14"/></name> <modifier pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></modifier></type><name pos:line="10" pos:column="16">next<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><name><name pos:line="10" pos:column="23">e<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">next<pos:position pos:line="10" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">compare<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">e<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="20">user_data<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call> <operator pos:line="12" pos:column="31">==<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="34">0<pos:position pos:line="12" pos:column="35"/></literal></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36">
      <block type="pseudo"><break pos:line="13" pos:column="7">break;<pos:position pos:line="13" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">e<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <name pos:line="15" pos:column="9">next<pos:position pos:line="15" pos:column="13"/></name></expr>;<pos:position pos:line="15" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></while>

  <return pos:line="18" pos:column="3">return <expr><name pos:line="18" pos:column="10">e<pos:position pos:line="18" pos:column="11"/></name></expr>;<pos:position pos:line="18" pos:column="12"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

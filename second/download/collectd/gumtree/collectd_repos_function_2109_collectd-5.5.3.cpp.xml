<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2109_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nb_add_encryption<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">lcc_network_buffer_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">nb<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <comment type="block" pos:line="1" pos:column="57">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">package_length<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">encr_ptr<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt> <comment type="block" pos:line="4" pos:column="19">/* pointer to data being encrypted */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">encr_size<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">hash_ptr<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt> <comment type="block" pos:line="7" pos:column="19">/* pointer to data being hashed */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">hash_size<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">hash<pos:position pos:line="9" pos:column="12"/></name><index pos:line="9" pos:column="12">[<expr><literal type="number" pos:line="9" pos:column="13">20<pos:position pos:line="9" pos:column="15"/></literal></expr>]<pos:position pos:line="9" pos:column="16"/></index></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">uint16_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">pkg_length<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">gcry_error_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">err<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* Fill in the package length */</comment>
  <expr_stmt><expr><name pos:line="15" pos:column="3">package_length<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <name><name pos:line="15" pos:column="20">nb<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">size<pos:position pos:line="15" pos:column="28"/></name></name> <operator pos:line="15" pos:column="29">-<pos:position pos:line="15" pos:column="30"/></operator> <name><name pos:line="15" pos:column="31">nb<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">free<pos:position pos:line="15" pos:column="39"/></name></name></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">pkg_length<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">htons<pos:position pos:line="16" pos:column="21"/></name> <argument_list pos:line="16" pos:column="22">(<argument><expr><operator pos:line="16" pos:column="23">(<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">uint16_t<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">)<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">package_length<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">memcpy<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><name><name pos:line="17" pos:column="11">nb<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">buffer<pos:position pos:line="17" pos:column="21"/></name></name> <operator pos:line="17" pos:column="22">+<pos:position pos:line="17" pos:column="23"/></operator> <literal type="number" pos:line="17" pos:column="24">2<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="27">&amp;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="28">pkg_length<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="40">sizeof <argument_list pos:line="17" pos:column="47">(<argument><expr><name pos:line="17" pos:column="48">pkg_length<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Calculate what to hash */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">hash_ptr<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name><name pos:line="20" pos:column="14">nb<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">buffer<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">+<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">PART_ENCRYPTION_AES256_SIZE<pos:position pos:line="20" pos:column="54"/></name></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">hash_size<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">package_length<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">-<pos:position pos:line="21" pos:column="31"/></operator> <name><name pos:line="21" pos:column="32">nb<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">encr_header_len<pos:position pos:line="21" pos:column="51"/></name></name></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="23" pos:column="3">/* Calculate what to encrypt */</comment>
  <expr_stmt><expr><name pos:line="24" pos:column="3">encr_ptr<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <name pos:line="24" pos:column="14">hash_ptr<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">-<pos:position pos:line="24" pos:column="24"/></operator> <sizeof pos:line="24" pos:column="25">sizeof <argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">hash<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></sizeof></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name pos:line="25" pos:column="3">encr_size<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">hash_size<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">+<pos:position pos:line="25" pos:column="26"/></operator> <sizeof pos:line="25" pos:column="27">sizeof <argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">hash<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></sizeof></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="27" pos:column="3">/* Calculate the SHA-1 hash */</comment>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">gcry_md_hash_buffer<pos:position pos:line="28" pos:column="22"/></name> <argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">GCRY_MD_SHA1<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">hash<pos:position pos:line="28" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="44">hash_ptr<pos:position pos:line="28" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="54">hash_size<pos:position pos:line="28" pos:column="63"/></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">memcpy<pos:position pos:line="29" pos:column="9"/></name> <argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">encr_ptr<pos:position pos:line="29" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="21">hash<pos:position pos:line="29" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="27">sizeof <argument_list pos:line="29" pos:column="34">(<argument><expr><name pos:line="29" pos:column="35">hash<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name><name pos:line="31" pos:column="7">nb<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">encr_cypher<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">==<pos:position pos:line="31" pos:column="25"/></operator> <name pos:line="31" pos:column="26">NULL<pos:position pos:line="31" pos:column="30"/></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31">
  <block pos:line="32" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">unsigned<pos:position pos:line="33" pos:column="13"/></name> <name pos:line="33" pos:column="14">char<pos:position pos:line="33" pos:column="18"/></name></type> <name><name pos:line="33" pos:column="19">password_hash<pos:position pos:line="33" pos:column="32"/></name><index pos:line="33" pos:column="32">[<expr><literal type="number" pos:line="33" pos:column="33">32<pos:position pos:line="33" pos:column="35"/></literal></expr>]<pos:position pos:line="33" pos:column="36"/></index></name></decl>;<pos:position pos:line="33" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><name pos:line="35" pos:column="5">err<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <call><name pos:line="35" pos:column="11">gcry_cipher_open<pos:position pos:line="35" pos:column="27"/></name> <argument_list pos:line="35" pos:column="28">(<argument><expr><operator pos:line="35" pos:column="29">&amp;<pos:position pos:line="35" pos:column="34"/></operator><name><name pos:line="35" pos:column="30">nb<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">encr_cypher<pos:position pos:line="35" pos:column="45"/></name></name></expr></argument>,
        <argument><expr><name pos:line="36" pos:column="9">GCRY_CIPHER_AES256<pos:position pos:line="36" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="29">GCRY_CIPHER_MODE_OFB<pos:position pos:line="36" pos:column="49"/></name></expr></argument>, <comment type="block" pos:line="36" pos:column="51">/* flags = */</comment> <argument><expr><literal type="number" pos:line="36" pos:column="65">0<pos:position pos:line="36" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="68"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">err<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">!=<pos:position pos:line="37" pos:column="15"/></operator> <literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>)<pos:position pos:line="37" pos:column="18"/></condition><then pos:line="37" pos:column="18">
      <block type="pseudo"><return pos:line="38" pos:column="7">return <expr><operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><operator pos:line="38" pos:column="15">-<pos:position pos:line="38" pos:column="16"/></operator><literal type="number" pos:line="38" pos:column="16">1<pos:position pos:line="38" pos:column="17"/></literal><operator pos:line="38" pos:column="17">)<pos:position pos:line="38" pos:column="18"/></operator></expr>;<pos:position pos:line="38" pos:column="19"/></return></block></then></if>

    <comment type="block" pos:line="40" pos:column="5">/* Calculate our 256bit key used for AES */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">gcry_md_hash_buffer<pos:position pos:line="41" pos:column="24"/></name> <argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">GCRY_MD_SHA256<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="42">password_hash<pos:position pos:line="41" pos:column="55"/></name></expr></argument>,
        <argument><expr><name><name pos:line="42" pos:column="9">nb<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">-&gt;<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="13">password<pos:position pos:line="42" pos:column="21"/></name></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="23">strlen<pos:position pos:line="42" pos:column="29"/></name> <argument_list pos:line="42" pos:column="30">(<argument><expr><name><name pos:line="42" pos:column="31">nb<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">-&gt;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="35">password<pos:position pos:line="42" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><name pos:line="44" pos:column="5">err<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <call><name pos:line="44" pos:column="11">gcry_cipher_setkey<pos:position pos:line="44" pos:column="29"/></name> <argument_list pos:line="44" pos:column="30">(<argument><expr><name><name pos:line="44" pos:column="31">nb<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">-&gt;<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="35">encr_cypher<pos:position pos:line="44" pos:column="46"/></name></name></expr></argument>,
        <argument><expr><name pos:line="45" pos:column="9">password_hash<pos:position pos:line="45" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="24">sizeof <argument_list pos:line="45" pos:column="31">(<argument><expr><name pos:line="45" pos:column="32">password_hash<pos:position pos:line="45" pos:column="45"/></name></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">err<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">!=<pos:position pos:line="46" pos:column="15"/></operator> <literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr>)<pos:position pos:line="46" pos:column="18"/></condition><then pos:line="46" pos:column="18">
    <block pos:line="47" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">gcry_cipher_close<pos:position pos:line="48" pos:column="24"/></name> <argument_list pos:line="48" pos:column="25">(<argument><expr><name><name pos:line="48" pos:column="26">nb<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">encr_cypher<pos:position pos:line="48" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="49" pos:column="7">nb<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">encr_cypher<pos:position pos:line="49" pos:column="22"/></name></name> <operator pos:line="49" pos:column="23">=<pos:position pos:line="49" pos:column="24"/></operator> <name pos:line="49" pos:column="25">NULL<pos:position pos:line="49" pos:column="29"/></name></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>
      <return pos:line="50" pos:column="7">return <expr><operator pos:line="50" pos:column="14">(<pos:position pos:line="50" pos:column="15"/></operator><operator pos:line="50" pos:column="15">-<pos:position pos:line="50" pos:column="16"/></operator><literal type="number" pos:line="50" pos:column="16">1<pos:position pos:line="50" pos:column="17"/></literal><operator pos:line="50" pos:column="17">)<pos:position pos:line="50" pos:column="18"/></operator></expr>;<pos:position pos:line="50" pos:column="19"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
  }<pos:position pos:line="52" pos:column="4"/></block></then>
  <else pos:line="53" pos:column="3">else <comment type="block" pos:line="53" pos:column="8">/* if (nb-&gt;encr_cypher != NULL) */</comment>
  <block pos:line="54" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">gcry_cipher_reset<pos:position pos:line="55" pos:column="22"/></name> <argument_list pos:line="55" pos:column="23">(<argument><expr><name><name pos:line="55" pos:column="24">nb<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">-&gt;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="28">encr_cypher<pos:position pos:line="55" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="56" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="58" pos:column="3">/* Set the initialization vector */</comment>
  <expr_stmt><expr><name pos:line="59" pos:column="3">err<pos:position pos:line="59" pos:column="6"/></name> <operator pos:line="59" pos:column="7">=<pos:position pos:line="59" pos:column="8"/></operator> <call><name pos:line="59" pos:column="9">gcry_cipher_setiv<pos:position pos:line="59" pos:column="26"/></name> <argument_list pos:line="59" pos:column="27">(<argument><expr><name><name pos:line="59" pos:column="28">nb<pos:position pos:line="59" pos:column="30"/></name><operator pos:line="59" pos:column="30">-&gt;<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="32">encr_cypher<pos:position pos:line="59" pos:column="43"/></name></name></expr></argument>,
      <argument><expr><name><name pos:line="60" pos:column="7">nb<pos:position pos:line="60" pos:column="9"/></name><operator pos:line="60" pos:column="9">-&gt;<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="11">encr_iv<pos:position pos:line="60" pos:column="18"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="20">sizeof <argument_list pos:line="60" pos:column="27">(<argument><expr><name><name pos:line="60" pos:column="28">nb<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">-&gt;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="32">encr_iv<pos:position pos:line="60" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>
  <if pos:line="61" pos:column="3">if <condition pos:line="61" pos:column="6">(<expr><name pos:line="61" pos:column="7">err<pos:position pos:line="61" pos:column="10"/></name> <operator pos:line="61" pos:column="11">!=<pos:position pos:line="61" pos:column="13"/></operator> <literal type="number" pos:line="61" pos:column="14">0<pos:position pos:line="61" pos:column="15"/></literal></expr>)<pos:position pos:line="61" pos:column="16"/></condition><then pos:line="61" pos:column="16">
  <block pos:line="62" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">gcry_cipher_close<pos:position pos:line="63" pos:column="22"/></name> <argument_list pos:line="63" pos:column="23">(<argument><expr><name><name pos:line="63" pos:column="24">nb<pos:position pos:line="63" pos:column="26"/></name><operator pos:line="63" pos:column="26">-&gt;<pos:position pos:line="63" pos:column="31"/></operator><name pos:line="63" pos:column="28">encr_cypher<pos:position pos:line="63" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">nb<pos:position pos:line="64" pos:column="7"/></name><operator pos:line="64" pos:column="7">-&gt;<pos:position pos:line="64" pos:column="12"/></operator><name pos:line="64" pos:column="9">encr_cypher<pos:position pos:line="64" pos:column="20"/></name></name> <operator pos:line="64" pos:column="21">=<pos:position pos:line="64" pos:column="22"/></operator> <name pos:line="64" pos:column="23">NULL<pos:position pos:line="64" pos:column="27"/></name></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>
    <return pos:line="65" pos:column="5">return <expr><operator pos:line="65" pos:column="12">(<pos:position pos:line="65" pos:column="13"/></operator><operator pos:line="65" pos:column="13">-<pos:position pos:line="65" pos:column="14"/></operator><literal type="number" pos:line="65" pos:column="14">1<pos:position pos:line="65" pos:column="15"/></literal><operator pos:line="65" pos:column="15">)<pos:position pos:line="65" pos:column="16"/></operator></expr>;<pos:position pos:line="65" pos:column="17"/></return>
  }<pos:position pos:line="66" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="68" pos:column="3">/* Encrypt the buffer in-place */</comment>
  <expr_stmt><expr><name pos:line="69" pos:column="3">err<pos:position pos:line="69" pos:column="6"/></name> <operator pos:line="69" pos:column="7">=<pos:position pos:line="69" pos:column="8"/></operator> <call><name pos:line="69" pos:column="9">gcry_cipher_encrypt<pos:position pos:line="69" pos:column="28"/></name> <argument_list pos:line="69" pos:column="29">(<argument><expr><name><name pos:line="69" pos:column="30">nb<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">-&gt;<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="34">encr_cypher<pos:position pos:line="69" pos:column="45"/></name></name></expr></argument>,
      <argument><expr><name pos:line="70" pos:column="7">encr_ptr<pos:position pos:line="70" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="17">encr_size<pos:position pos:line="70" pos:column="26"/></name></expr></argument>,
      <comment type="block" pos:line="71" pos:column="7">/* in = */</comment> <argument><expr><name pos:line="71" pos:column="18">NULL<pos:position pos:line="71" pos:column="22"/></name></expr></argument>, <comment type="block" pos:line="71" pos:column="24">/* in len = */</comment> <argument><expr><literal type="number" pos:line="71" pos:column="39">0<pos:position pos:line="71" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="42"/></expr_stmt>
  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><name pos:line="72" pos:column="7">err<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">!=<pos:position pos:line="72" pos:column="13"/></operator> <literal type="number" pos:line="72" pos:column="14">0<pos:position pos:line="72" pos:column="15"/></literal></expr>)<pos:position pos:line="72" pos:column="16"/></condition><then pos:line="72" pos:column="16">
  <block pos:line="73" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">gcry_cipher_close<pos:position pos:line="74" pos:column="22"/></name> <argument_list pos:line="74" pos:column="23">(<argument><expr><name><name pos:line="74" pos:column="24">nb<pos:position pos:line="74" pos:column="26"/></name><operator pos:line="74" pos:column="26">-&gt;<pos:position pos:line="74" pos:column="31"/></operator><name pos:line="74" pos:column="28">encr_cypher<pos:position pos:line="74" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="75" pos:column="5">nb<pos:position pos:line="75" pos:column="7"/></name><operator pos:line="75" pos:column="7">-&gt;<pos:position pos:line="75" pos:column="12"/></operator><name pos:line="75" pos:column="9">encr_cypher<pos:position pos:line="75" pos:column="20"/></name></name> <operator pos:line="75" pos:column="21">=<pos:position pos:line="75" pos:column="22"/></operator> <name pos:line="75" pos:column="23">NULL<pos:position pos:line="75" pos:column="27"/></name></expr>;<pos:position pos:line="75" pos:column="28"/></expr_stmt>
    <return pos:line="76" pos:column="5">return <expr><operator pos:line="76" pos:column="12">(<pos:position pos:line="76" pos:column="13"/></operator><operator pos:line="76" pos:column="13">-<pos:position pos:line="76" pos:column="14"/></operator><literal type="number" pos:line="76" pos:column="14">1<pos:position pos:line="76" pos:column="15"/></literal><operator pos:line="76" pos:column="15">)<pos:position pos:line="76" pos:column="16"/></operator></expr>;<pos:position pos:line="76" pos:column="17"/></return>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if>

  <return pos:line="79" pos:column="3">return <expr><operator pos:line="79" pos:column="10">(<pos:position pos:line="79" pos:column="11"/></operator><literal type="number" pos:line="79" pos:column="11">0<pos:position pos:line="79" pos:column="12"/></literal><operator pos:line="79" pos:column="12">)<pos:position pos:line="79" pos:column="13"/></operator></expr>;<pos:position pos:line="79" pos:column="14"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

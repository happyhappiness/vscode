<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1498_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensor_discrete_event_handler<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">ipmi_sensor_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">sensor<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                         <parameter><decl><type><name><name pos:line="2" pos:column="42">enum<pos:position pos:line="2" pos:column="46"/></name> <name pos:line="2" pos:column="47">ipmi_event_dir_e<pos:position pos:line="2" pos:column="63"/></name></name></type> <name pos:line="2" pos:column="64">dir<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="69">int<pos:position pos:line="2" pos:column="72"/></name></type> <name pos:line="2" pos:column="73">offset<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="3" pos:column="42">int<pos:position pos:line="3" pos:column="45"/></name></type> <name pos:line="3" pos:column="46">severity<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="56">int<pos:position pos:line="3" pos:column="59"/></name></type> <name pos:line="3" pos:column="60">prev_severity<pos:position pos:line="3" pos:column="73"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="4" pos:column="42">void<pos:position pos:line="4" pos:column="46"/></name> <modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier></type><name pos:line="4" pos:column="48">cb_data<pos:position pos:line="4" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="57">ipmi_event_t<pos:position pos:line="4" pos:column="69"/></name> <modifier pos:line="4" pos:column="70">*<pos:position pos:line="4" pos:column="71"/></modifier></type><name pos:line="4" pos:column="71">event<pos:position pos:line="4" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="77"/></parameter_list> <block pos:line="4" pos:column="78">{

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">c_ipmi_instance_t<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">st<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">cb_data<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* From the IPMI specification Chapter 2: Events.
   * If a callback handles the event, then all future callbacks called due to
   * the event will receive a NULL for the event. So be ready to handle a NULL
   * event in all your event handlers. A NULL may also be passed to an event
   * handler if the callback was not due to an event. */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">event<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">==<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">IPMI_EVENT_NOT_HANDLED<pos:position pos:line="14" pos:column="34"/></name></expr>;<pos:position pos:line="14" pos:column="35"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="16" pos:column="3">notification_t<pos:position pos:line="16" pos:column="17"/></name></type> <name pos:line="16" pos:column="18">n<pos:position pos:line="16" pos:column="19"/></name> <init pos:line="16" pos:column="20">= <expr><call><name pos:line="16" pos:column="22">c_ipmi_notification_init<pos:position pos:line="16" pos:column="46"/></name><argument_list pos:line="16" pos:column="46">(<argument><expr><name pos:line="16" pos:column="47">st<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">NOTIF_OKAY<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="63"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">unsigned<pos:position pos:line="17" pos:column="11"/></name> <name pos:line="17" pos:column="12">int<pos:position pos:line="17" pos:column="15"/></name></type> <name pos:line="17" pos:column="16">event_type<pos:position pos:line="17" pos:column="26"/></name> <init pos:line="17" pos:column="27">= <expr><call><name pos:line="17" pos:column="29">ipmi_sensor_get_event_reading_type<pos:position pos:line="17" pos:column="63"/></name><argument_list pos:line="17" pos:column="63">(<argument><expr><name pos:line="17" pos:column="64">sensor<pos:position pos:line="17" pos:column="70"/></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="72"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">unsigned<pos:position pos:line="18" pos:column="11"/></name> <name pos:line="18" pos:column="12">int<pos:position pos:line="18" pos:column="15"/></name></type> <name pos:line="18" pos:column="16">sensor_type<pos:position pos:line="18" pos:column="27"/></name> <init pos:line="18" pos:column="28">= <expr><call><name pos:line="18" pos:column="30">ipmi_sensor_get_sensor_type<pos:position pos:line="18" pos:column="57"/></name><argument_list pos:line="18" pos:column="57">(<argument><expr><name pos:line="18" pos:column="58">sensor<pos:position pos:line="18" pos:column="64"/></name></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="66"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="19" pos:column="3">const<pos:position pos:line="19" pos:column="8"/></specifier> <name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name> <modifier pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></modifier></type><name pos:line="19" pos:column="15">event_state<pos:position pos:line="19" pos:column="26"/></name> <init pos:line="19" pos:column="27">=
      <expr><call><name pos:line="20" pos:column="7">ipmi_get_reading_name<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">event_type<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">sensor_type<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">offset<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="62"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">sensor_get_name<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">sensor<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="27">n<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">.<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">type_instance<pos:position pos:line="21" pos:column="42"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="44">sizeof<argument_list pos:line="21" pos:column="50">(<argument><expr><name><name pos:line="21" pos:column="51">n<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">.<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="53">type_instance<pos:position pos:line="21" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">snprintf<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name><name pos:line="22" pos:column="12">n<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">.<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">message<pos:position pos:line="22" pos:column="21"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="23">sizeof<argument_list pos:line="22" pos:column="29">(<argument><expr><name><name pos:line="22" pos:column="30">n<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">.<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="32">message<pos:position pos:line="22" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="42">"sensor %s received event: %s"<pos:position pos:line="22" pos:column="72"/></literal></expr></argument>,
           <argument><expr><name><name pos:line="23" pos:column="12">n<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">.<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">type_instance<pos:position pos:line="23" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="29">event_state<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">DEBUG<pos:position pos:line="25" pos:column="8"/></name><argument_list pos:line="25" pos:column="8">(<argument><expr><literal type="string" pos:line="25" pos:column="9">"Discrete event received for sensor %s"<pos:position pos:line="25" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="50">n<pos:position pos:line="25" pos:column="51"/></name><operator pos:line="25" pos:column="51">.<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="52">type_instance<pos:position pos:line="25" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">sstrncpy<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name><name pos:line="27" pos:column="12">n<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">.<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">type<pos:position pos:line="27" pos:column="18"/></name></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="20">ipmi_sensor_get_sensor_type_string<pos:position pos:line="27" pos:column="54"/></name><argument_list pos:line="27" pos:column="54">(<argument><expr><name pos:line="27" pos:column="55">sensor<pos:position pos:line="27" pos:column="61"/></name></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="64">sizeof<argument_list pos:line="27" pos:column="70">(<argument><expr><name><name pos:line="27" pos:column="71">n<pos:position pos:line="27" pos:column="72"/></name><operator pos:line="27" pos:column="72">.<pos:position pos:line="27" pos:column="73"/></operator><name pos:line="27" pos:column="73">type<pos:position pos:line="27" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="80"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">n<pos:position pos:line="28" pos:column="4"/></name><operator pos:line="28" pos:column="4">.<pos:position pos:line="28" pos:column="5"/></operator><name pos:line="28" pos:column="5">time<pos:position pos:line="28" pos:column="9"/></name></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <call><name pos:line="28" pos:column="12">NS_TO_CDTIME_T<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><call><name pos:line="28" pos:column="27">ipmi_event_get_timestamp<pos:position pos:line="28" pos:column="51"/></name><argument_list pos:line="28" pos:column="51">(<argument><expr><name pos:line="28" pos:column="52">event<pos:position pos:line="28" pos:column="57"/></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">plugin_notification_meta_add_signed_int<pos:position pos:line="30" pos:column="42"/></name><argument_list pos:line="30" pos:column="42">(<argument><expr><operator pos:line="30" pos:column="43">&amp;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="44">n<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="47">"offset"<pos:position pos:line="30" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="57">offset<pos:position pos:line="30" pos:column="63"/></name></expr></argument>)<pos:position pos:line="30" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="65"/></expr_stmt>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">severity<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">!=<pos:position pos:line="32" pos:column="18"/></operator> <operator pos:line="32" pos:column="19">-<pos:position pos:line="32" pos:column="20"/></operator><literal type="number" pos:line="32" pos:column="20">1<pos:position pos:line="32" pos:column="21"/></literal></expr>)<pos:position pos:line="32" pos:column="22"/></condition><then pos:line="32" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="5">plugin_notification_meta_add_signed_int<pos:position pos:line="33" pos:column="44"/></name><argument_list pos:line="33" pos:column="44">(<argument><expr><operator pos:line="33" pos:column="45">&amp;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="46">n<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="49">"severity"<pos:position pos:line="33" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="61">severity<pos:position pos:line="33" pos:column="69"/></name></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="71"/></expr_stmt></block></then></if>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">prev_severity<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">!=<pos:position pos:line="35" pos:column="23"/></operator> <operator pos:line="35" pos:column="24">-<pos:position pos:line="35" pos:column="25"/></operator><literal type="number" pos:line="35" pos:column="25">1<pos:position pos:line="35" pos:column="26"/></literal></expr>)<pos:position pos:line="35" pos:column="27"/></condition><then pos:line="35" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="5">plugin_notification_meta_add_signed_int<pos:position pos:line="36" pos:column="44"/></name><argument_list pos:line="36" pos:column="44">(<argument><expr><operator pos:line="36" pos:column="45">&amp;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="46">n<pos:position pos:line="36" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="49">"prevseverity"<pos:position pos:line="36" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="65">prev_severity<pos:position pos:line="36" pos:column="78"/></name></expr></argument>)<pos:position pos:line="36" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="80"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">add_event_common_data<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><operator pos:line="38" pos:column="25">&amp;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="26">n<pos:position pos:line="38" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="29">sensor<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="37">dir<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">event<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">plugin_dispatch_notification<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><operator pos:line="40" pos:column="32">&amp;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="33">n<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">plugin_notification_meta_free<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name><name pos:line="41" pos:column="33">n<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">.<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">meta<pos:position pos:line="41" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="43" pos:column="3">/* Delete handled ipmi event from the list */</comment>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name><name pos:line="44" pos:column="7">st<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">sel_clear_event<pos:position pos:line="44" pos:column="26"/></name></name></expr>)<pos:position pos:line="44" pos:column="27"/></condition><then pos:line="44" pos:column="27"> <block pos:line="44" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">ipmi_event_delete<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">event<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="30">NULL<pos:position pos:line="45" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="36">NULL<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">IPMI_EVENT_HANDLED<pos:position pos:line="46" pos:column="30"/></name></expr>;<pos:position pos:line="46" pos:column="31"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <return pos:line="49" pos:column="3">return <expr><name pos:line="49" pos:column="10">IPMI_EVENT_NOT_HANDLED<pos:position pos:line="49" pos:column="32"/></name></expr>;<pos:position pos:line="49" pos:column="33"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_206_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">exit_usage<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">name<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">int<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">status<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <block pos:line="1" pos:column="55">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">fprintf<pos:position pos:line="2" pos:column="10"/></name> <argument_list pos:line="2" pos:column="11">(<argument><expr><ternary><condition><expr><operator pos:line="2" pos:column="12">(<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">status<pos:position pos:line="2" pos:column="19"/></name> <operator pos:line="2" pos:column="20">==<pos:position pos:line="2" pos:column="22"/></operator> <literal type="number" pos:line="2" pos:column="23">0<pos:position pos:line="2" pos:column="24"/></literal><operator pos:line="2" pos:column="24">)<pos:position pos:line="2" pos:column="25"/></operator></expr> ?<pos:position pos:line="2" pos:column="27"/></condition><then pos:line="2" pos:column="27"> <expr><name pos:line="2" pos:column="28">stdout<pos:position pos:line="2" pos:column="34"/></name></expr> <pos:position pos:line="2" pos:column="35"/></then><else pos:line="2" pos:column="35">: <expr><name pos:line="2" pos:column="37">stderr<pos:position pos:line="2" pos:column="43"/></name></expr></else></ternary></expr></argument>,
      <argument><expr><literal type="string" pos:line="3" pos:column="7">"Usage: %s [options] &lt;command&gt; [cmd options]\n\n"<pos:position pos:line="3" pos:column="62"/></literal>

      <literal type="string" pos:line="5" pos:column="7">"Available options:\n"<pos:position pos:line="5" pos:column="29"/></literal>
      <literal type="string" pos:line="6" pos:column="7">"  -s       Path to collectd's UNIX socket.\n"<pos:position pos:line="6" pos:column="53"/></literal>
      <literal type="string" pos:line="7" pos:column="7">"           Default: "<pos:position pos:line="7" pos:column="29"/></literal><name pos:line="7" pos:column="29">DEFAULT_SOCK<pos:position pos:line="7" pos:column="41"/></name><literal type="string" pos:line="7" pos:column="41">"\n"<pos:position pos:line="7" pos:column="45"/></literal>

      <literal type="string" pos:line="9" pos:column="7">"\n  -h       Display this help and exit.\n"<pos:position pos:line="9" pos:column="51"/></literal>

      <literal type="string" pos:line="11" pos:column="7">"\nAvailable commands:\n\n"<pos:position pos:line="11" pos:column="34"/></literal>

      <literal type="string" pos:line="13" pos:column="7">" * getval &lt;identifier&gt;\n"<pos:position pos:line="13" pos:column="39"/></literal>
      <literal type="string" pos:line="14" pos:column="7">" * flush [timeout=&lt;seconds&gt;] [plugin=&lt;name&gt;] [identifier=&lt;id&gt;]\n"<pos:position pos:line="14" pos:column="91"/></literal>
      <literal type="string" pos:line="15" pos:column="7">" * listval\n"<pos:position pos:line="15" pos:column="21"/></literal>
      <literal type="string" pos:line="16" pos:column="7">" * putval &lt;identifier&gt; [interval=&lt;seconds&gt;] &lt;value-list(s)&gt;\n"<pos:position pos:line="16" pos:column="88"/></literal>

      <literal type="string" pos:line="18" pos:column="7">"\nIdentifiers:\n\n"<pos:position pos:line="18" pos:column="27"/></literal>

      <literal type="string" pos:line="20" pos:column="7">"An identifier has the following format:\n\n"<pos:position pos:line="20" pos:column="52"/></literal>

      <literal type="string" pos:line="22" pos:column="7">"  [&lt;hostname&gt;/]&lt;plugin&gt;[-&lt;plugin_instance&gt;]/&lt;type&gt;[-&lt;type_instance&gt;]\n\n"<pos:position pos:line="22" pos:column="111"/></literal>

      <literal type="string" pos:line="24" pos:column="7">"Hostname defaults to the local hostname if omitted (e.g., uptime/uptime).\n"<pos:position pos:line="24" pos:column="84"/></literal>
      <literal type="string" pos:line="25" pos:column="7">"No error is returned if the specified identifier does not exist.\n"<pos:position pos:line="25" pos:column="75"/></literal>

      <literal type="string" pos:line="27" pos:column="7">"\n"<pos:position pos:line="27" pos:column="11"/></literal><name pos:line="27" pos:column="11">PACKAGE_NAME<pos:position pos:line="27" pos:column="23"/></name><literal type="string" pos:line="27" pos:column="23">" "<pos:position pos:line="27" pos:column="26"/></literal><name pos:line="27" pos:column="26">PACKAGE_VERSION<pos:position pos:line="27" pos:column="41"/></name><literal type="string" pos:line="27" pos:column="41">", http://collectd.org/\n"<pos:position pos:line="27" pos:column="67"/></literal>
      <literal type="string" pos:line="28" pos:column="7">"by Florian octo Forster &lt;octo@collectd.org&gt;\n"<pos:position pos:line="28" pos:column="60"/></literal>
      <literal type="string" pos:line="29" pos:column="7">"for contributions see `AUTHORS'\n"<pos:position pos:line="29" pos:column="42"/></literal></expr></argument>
      , <argument><expr><name pos:line="30" pos:column="9">name<pos:position pos:line="30" pos:column="13"/></name></expr></argument>)<pos:position pos:line="30" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">exit<pos:position pos:line="31" pos:column="7"/></name> <argument_list pos:line="31" pos:column="8">(<argument><expr><name pos:line="31" pos:column="9">status<pos:position pos:line="31" pos:column="15"/></name></expr></argument>)<pos:position pos:line="31" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="17"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

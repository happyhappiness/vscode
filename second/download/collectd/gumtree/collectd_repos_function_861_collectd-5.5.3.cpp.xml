<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_861_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">get_threads_on_core<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">unsigned<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">cpu<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">path<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><literal type="number" pos:line="4" pos:column="19">80<pos:position pos:line="4" pos:column="21"/></literal></expr>]<pos:position pos:line="4" pos:column="22"/></index></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">FILE<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">filep<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">sib1<pos:position pos:line="6" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="19">sib2<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">matches<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">character<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">ssnprintf<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">path<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="25">sizeof<argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">path<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="39">"/sys/devices/system/cpu/cpu%d/topology/thread_siblings_list"<pos:position pos:line="10" pos:column="100"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="102">cpu<pos:position pos:line="10" pos:column="105"/></name></expr></argument>)<pos:position pos:line="10" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="107"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">filep<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <call><name pos:line="11" pos:column="17">fopen<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">path<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="29">"r"<pos:position pos:line="11" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">filep<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <block pos:line="12" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">ERROR<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><literal type="string" pos:line="13" pos:column="23">"turbostat plugin: Failed to open '%s'"<pos:position pos:line="13" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="64">path<pos:position pos:line="13" pos:column="68"/></name></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="16" pos:column="9">/*
	 * file format:
	 * if a pair of number with a character between: 2 siblings (eg. 1-2, or 1,4)
	 * otherwinse 1 sibling (self).
	 */</comment>
	<expr_stmt><expr><name pos:line="21" pos:column="9">matches<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">fscanf<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">filep<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="33">"%d%c%d\n"<pos:position pos:line="21" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="45">&amp;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="46">sib1<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="52">&amp;<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="53">character<pos:position pos:line="21" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="64">&amp;<pos:position pos:line="21" pos:column="69"/></operator><name pos:line="21" pos:column="65">sib2<pos:position pos:line="21" pos:column="69"/></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">fclose<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">filep<pos:position pos:line="23" pos:column="21"/></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">matches<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">==<pos:position pos:line="25" pos:column="23"/></operator> <literal type="number" pos:line="25" pos:column="24">3<pos:position pos:line="25" pos:column="25"/></literal></expr>)<pos:position pos:line="25" pos:column="26"/></condition><then pos:line="25" pos:column="26">
		<block type="pseudo"><return pos:line="26" pos:column="17">return <expr><literal type="number" pos:line="26" pos:column="24">2<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></return></block></then>
	<else pos:line="27" pos:column="9">else
		<block type="pseudo"><return pos:line="28" pos:column="17">return <expr><literal type="number" pos:line="28" pos:column="24">1<pos:position pos:line="28" pos:column="25"/></literal></expr>;<pos:position pos:line="28" pos:column="26"/></return></block></else></if>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

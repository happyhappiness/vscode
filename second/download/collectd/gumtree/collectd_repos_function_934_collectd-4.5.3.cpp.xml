<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_934_collectd-4.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">looks_like_a_uuid<pos:position pos:line="2" pos:column="18"/></name> <parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">uuid<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">len<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">uuid<pos:position pos:line="6" pos:column="14"/></name></expr>)<pos:position pos:line="6" pos:column="15"/></condition><then pos:line="6" pos:column="15"> <block type="pseudo"><return pos:line="6" pos:column="16">return <expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr>;<pos:position pos:line="6" pos:column="25"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="8" pos:column="5">len<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <call><name pos:line="8" pos:column="11">strlen<pos:position pos:line="8" pos:column="17"/></name> <argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">uuid<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">&lt;<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="15">UUID_PRINTABLE_COMPACT_LENGTH<pos:position pos:line="10" pos:column="44"/></name></expr>)<pos:position pos:line="10" pos:column="45"/></condition><then pos:line="10" pos:column="45">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return></block></then></if>

    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">uuid<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition> <block pos:line="13" pos:column="19">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">isxdigit<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><operator pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">uuid<pos:position pos:line="14" pos:column="29"/></name></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call> <operator pos:line="14" pos:column="31">&amp;&amp;<pos:position pos:line="14" pos:column="41"/></operator> <operator pos:line="14" pos:column="34">*<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="35">uuid<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">!=<pos:position pos:line="14" pos:column="42"/></operator> <literal type="char" pos:line="14" pos:column="43">'-'<pos:position pos:line="14" pos:column="46"/></literal></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47"> <block type="pseudo"><return pos:line="14" pos:column="48">return <expr><literal type="number" pos:line="14" pos:column="55">0<pos:position pos:line="14" pos:column="56"/></literal></expr>;<pos:position pos:line="14" pos:column="57"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="15" pos:column="9">uuid<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">++<pos:position pos:line="15" pos:column="15"/></operator></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></while>
    <return pos:line="17" pos:column="5">return <expr><literal type="number" pos:line="17" pos:column="12">1<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

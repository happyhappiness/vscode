<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1359_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">uuid_parse_dmidecode<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">FILE<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">file<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">line<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">1024<pos:position pos:line="4" pos:column="19"/></literal></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">inSysInfo<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init pos:line="7" pos:column="10">;<pos:position pos:line="7" pos:column="11"/></init><condition pos:line="7" pos:column="11">;<pos:position pos:line="7" pos:column="12"/></condition><incr/>)<pos:position pos:line="7" pos:column="13"/></control> <block pos:line="7" pos:column="14">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">fgets<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">line<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="26">sizeof<argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">line<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></sizeof><operator pos:line="8" pos:column="38">/<pos:position pos:line="8" pos:column="39"/></operator><sizeof pos:line="8" pos:column="39">sizeof<argument_list pos:line="8" pos:column="45">(<argument><expr><name pos:line="8" pos:column="46">char<pos:position pos:line="8" pos:column="50"/></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="8" pos:column="53">file<pos:position pos:line="8" pos:column="57"/></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="59"/></condition><then pos:line="8" pos:column="59"> <block pos:line="8" pos:column="60">{
            <return pos:line="9" pos:column="13">return <expr><name pos:line="9" pos:column="20">NULL<pos:position pos:line="9" pos:column="24"/></name></expr>;<pos:position pos:line="9" pos:column="25"/></return>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">strncmp<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">line<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">HANDLE_PREFIX<pos:position pos:line="11" pos:column="40"/></name></expr></argument>,
                    <argument><expr><operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><sizeof pos:line="12" pos:column="22">sizeof<argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">HANDLE_PREFIX<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></sizeof><operator pos:line="12" pos:column="43">/<pos:position pos:line="12" pos:column="44"/></operator><sizeof pos:line="12" pos:column="44">sizeof<argument_list pos:line="12" pos:column="50">(<argument><expr><name pos:line="12" pos:column="51">char<pos:position pos:line="12" pos:column="55"/></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></sizeof><operator pos:line="12" pos:column="56">)<pos:position pos:line="12" pos:column="57"/></operator><operator pos:line="12" pos:column="57">-<pos:position pos:line="12" pos:column="58"/></operator><literal type="number" pos:line="12" pos:column="58">1<pos:position pos:line="12" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call> <operator pos:line="12" pos:column="61">==<pos:position pos:line="12" pos:column="63"/></operator> <literal type="number" pos:line="12" pos:column="64">0<pos:position pos:line="12" pos:column="65"/></literal></expr>)<pos:position pos:line="12" pos:column="66"/></condition><then pos:line="12" pos:column="66"> <block pos:line="12" pos:column="67">{
            <comment type="block" pos:line="13" pos:column="13">/*printf("Got handle %s\n", line);*/</comment>
            <expr_stmt><expr><name pos:line="14" pos:column="13">inSysInfo<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then> <elseif pos:line="15" pos:column="11">else <if pos:line="15" pos:column="16">if <condition pos:line="15" pos:column="19">(<expr><call><name pos:line="15" pos:column="20">strncmp<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">line<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">SYSINFO_PREFIX<pos:position pos:line="15" pos:column="48"/></name></expr></argument>,
                           <argument><expr><operator pos:line="16" pos:column="28">(<pos:position pos:line="16" pos:column="29"/></operator><sizeof pos:line="16" pos:column="29">sizeof<argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">SYSINFO_PREFIX<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></sizeof><operator pos:line="16" pos:column="51">/<pos:position pos:line="16" pos:column="52"/></operator><sizeof pos:line="16" pos:column="52">sizeof<argument_list pos:line="16" pos:column="58">(<argument><expr><name pos:line="16" pos:column="59">char<pos:position pos:line="16" pos:column="63"/></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></sizeof><operator pos:line="16" pos:column="64">)<pos:position pos:line="16" pos:column="65"/></operator><operator pos:line="16" pos:column="65">-<pos:position pos:line="16" pos:column="66"/></operator><literal type="number" pos:line="16" pos:column="66">1<pos:position pos:line="16" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call> <operator pos:line="16" pos:column="69">==<pos:position pos:line="16" pos:column="71"/></operator> <literal type="number" pos:line="16" pos:column="72">0<pos:position pos:line="16" pos:column="73"/></literal></expr>)<pos:position pos:line="16" pos:column="74"/></condition><then pos:line="16" pos:column="74"> <block pos:line="16" pos:column="75">{
            <comment type="block" pos:line="17" pos:column="13">/*printf("Got system info %s\n", line);*/</comment>
            <expr_stmt><expr><name pos:line="18" pos:column="13">inSysInfo<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <literal type="number" pos:line="18" pos:column="25">1<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if></elseif> <elseif pos:line="19" pos:column="11">else <if pos:line="19" pos:column="16">if <condition pos:line="19" pos:column="19">(<expr><call><name pos:line="19" pos:column="20">strncmp<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">line<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">ALT_SYSINFO_PREFIX<pos:position pos:line="19" pos:column="52"/></name></expr></argument>,
                           <argument><expr><operator pos:line="20" pos:column="28">(<pos:position pos:line="20" pos:column="29"/></operator><sizeof pos:line="20" pos:column="29">sizeof<argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">ALT_SYSINFO_PREFIX<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></sizeof><operator pos:line="20" pos:column="55">/<pos:position pos:line="20" pos:column="56"/></operator><sizeof pos:line="20" pos:column="56">sizeof<argument_list pos:line="20" pos:column="62">(<argument><expr><name pos:line="20" pos:column="63">char<pos:position pos:line="20" pos:column="67"/></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></sizeof><operator pos:line="20" pos:column="68">)<pos:position pos:line="20" pos:column="69"/></operator><operator pos:line="20" pos:column="69">-<pos:position pos:line="20" pos:column="70"/></operator><literal type="number" pos:line="20" pos:column="70">1<pos:position pos:line="20" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="72"/></argument_list></call> <operator pos:line="20" pos:column="73">==<pos:position pos:line="20" pos:column="75"/></operator> <literal type="number" pos:line="20" pos:column="76">0<pos:position pos:line="20" pos:column="77"/></literal></expr>)<pos:position pos:line="20" pos:column="78"/></condition><then pos:line="20" pos:column="78"> <block pos:line="20" pos:column="79">{
            <comment type="block" pos:line="21" pos:column="13">/*printf("Got alt system info %s\n", line);*/</comment>
            <expr_stmt><expr><name pos:line="22" pos:column="13">inSysInfo<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <literal type="number" pos:line="22" pos:column="25">1<pos:position pos:line="22" pos:column="26"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif></if>
        
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">inSysInfo<pos:position pos:line="25" pos:column="22"/></name></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23"> <block pos:line="25" pos:column="24">{
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><call><name pos:line="26" pos:column="17">strncmp<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">line<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="31">UUID_PREFIX<pos:position pos:line="26" pos:column="42"/></name></expr></argument>,
                        <argument><expr><operator pos:line="27" pos:column="25">(<pos:position pos:line="27" pos:column="26"/></operator><sizeof pos:line="27" pos:column="26">sizeof<argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">UUID_PREFIX<pos:position pos:line="27" pos:column="44"/></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></sizeof><operator pos:line="27" pos:column="45">/<pos:position pos:line="27" pos:column="46"/></operator><sizeof pos:line="27" pos:column="46">sizeof<argument_list pos:line="27" pos:column="52">(<argument><expr><name pos:line="27" pos:column="53">char<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></sizeof><operator pos:line="27" pos:column="58">)<pos:position pos:line="27" pos:column="59"/></operator><operator pos:line="27" pos:column="59">-<pos:position pos:line="27" pos:column="60"/></operator><literal type="number" pos:line="27" pos:column="60">1<pos:position pos:line="27" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call> <operator pos:line="27" pos:column="63">==<pos:position pos:line="27" pos:column="65"/></operator> <literal type="number" pos:line="27" pos:column="66">0<pos:position pos:line="27" pos:column="67"/></literal></expr>)<pos:position pos:line="27" pos:column="68"/></condition><then pos:line="27" pos:column="68"> <block pos:line="27" pos:column="69">{
                <decl_stmt><decl><type><name pos:line="28" pos:column="17">char<pos:position pos:line="28" pos:column="21"/></name> <modifier pos:line="28" pos:column="22">*<pos:position pos:line="28" pos:column="23"/></modifier></type><name pos:line="28" pos:column="23">uuid<pos:position pos:line="28" pos:column="27"/></name> <init pos:line="28" pos:column="28">= <expr><name pos:line="28" pos:column="30">line<pos:position pos:line="28" pos:column="34"/></name> <operator pos:line="28" pos:column="35">+<pos:position pos:line="28" pos:column="36"/></operator> <operator pos:line="28" pos:column="37">(<pos:position pos:line="28" pos:column="38"/></operator><sizeof pos:line="28" pos:column="38">sizeof<argument_list pos:line="28" pos:column="44">(<argument><expr><name pos:line="28" pos:column="45">UUID_PREFIX<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></sizeof><operator pos:line="28" pos:column="57">/<pos:position pos:line="28" pos:column="58"/></operator><sizeof pos:line="28" pos:column="58">sizeof<argument_list pos:line="28" pos:column="64">(<argument><expr><name pos:line="28" pos:column="65">char<pos:position pos:line="28" pos:column="69"/></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></sizeof><operator pos:line="28" pos:column="70">)<pos:position pos:line="28" pos:column="71"/></operator></expr></init></decl>;<pos:position pos:line="28" pos:column="72"/></decl_stmt>
                <comment type="block" pos:line="29" pos:column="17">/*printf("Got uuid [%s]\n", uuid);*/</comment>
                <if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">looks_like_a_uuid<pos:position pos:line="30" pos:column="38"/></name> <argument_list pos:line="30" pos:column="39">(<argument><expr><name pos:line="30" pos:column="40">uuid<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="46"/></condition><then pos:line="30" pos:column="46">
                    <block type="pseudo"><return pos:line="31" pos:column="21">return <expr><call><name pos:line="31" pos:column="28">strdup<pos:position pos:line="31" pos:column="34"/></name> <argument_list pos:line="31" pos:column="35">(<argument><expr><name pos:line="31" pos:column="36">uuid<pos:position pos:line="31" pos:column="40"/></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></return></block></then></if>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><call><name pos:line="33" pos:column="17">strncmp<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">line<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">ALT_UUID_PREFIX<pos:position pos:line="33" pos:column="46"/></name></expr></argument>,
                        <argument><expr><operator pos:line="34" pos:column="25">(<pos:position pos:line="34" pos:column="26"/></operator><sizeof pos:line="34" pos:column="26">sizeof<argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">ALT_UUID_PREFIX<pos:position pos:line="34" pos:column="48"/></name></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></sizeof><operator pos:line="34" pos:column="49">/<pos:position pos:line="34" pos:column="50"/></operator><sizeof pos:line="34" pos:column="50">sizeof<argument_list pos:line="34" pos:column="56">(<argument><expr><name pos:line="34" pos:column="57">char<pos:position pos:line="34" pos:column="61"/></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></sizeof><operator pos:line="34" pos:column="62">)<pos:position pos:line="34" pos:column="63"/></operator><operator pos:line="34" pos:column="63">-<pos:position pos:line="34" pos:column="64"/></operator><literal type="number" pos:line="34" pos:column="64">1<pos:position pos:line="34" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call> <operator pos:line="34" pos:column="67">==<pos:position pos:line="34" pos:column="69"/></operator> <literal type="number" pos:line="34" pos:column="70">0<pos:position pos:line="34" pos:column="71"/></literal></expr>)<pos:position pos:line="34" pos:column="72"/></condition><then pos:line="34" pos:column="72"> <block pos:line="34" pos:column="73">{
                <decl_stmt><decl><type><name pos:line="35" pos:column="17">char<pos:position pos:line="35" pos:column="21"/></name> <modifier pos:line="35" pos:column="22">*<pos:position pos:line="35" pos:column="23"/></modifier></type><name pos:line="35" pos:column="23">uuid<pos:position pos:line="35" pos:column="27"/></name> <init pos:line="35" pos:column="28">= <expr><name pos:line="35" pos:column="30">line<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">+<pos:position pos:line="35" pos:column="36"/></operator> <operator pos:line="35" pos:column="37">(<pos:position pos:line="35" pos:column="38"/></operator><sizeof pos:line="35" pos:column="38">sizeof<argument_list pos:line="35" pos:column="44">(<argument><expr><name pos:line="35" pos:column="45">ALT_UUID_PREFIX<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></sizeof><operator pos:line="35" pos:column="61">/<pos:position pos:line="35" pos:column="62"/></operator><sizeof pos:line="35" pos:column="62">sizeof<argument_list pos:line="35" pos:column="68">(<argument><expr><name pos:line="35" pos:column="69">char<pos:position pos:line="35" pos:column="73"/></name></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></sizeof><operator pos:line="35" pos:column="74">)<pos:position pos:line="35" pos:column="75"/></operator></expr></init></decl>;<pos:position pos:line="35" pos:column="76"/></decl_stmt>
                <comment type="block" pos:line="36" pos:column="17">/*printf("Got alt uuid [%s]\n", uuid);*/</comment>
                <if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><call><name pos:line="37" pos:column="21">looks_like_a_uuid<pos:position pos:line="37" pos:column="38"/></name> <argument_list pos:line="37" pos:column="39">(<argument><expr><name pos:line="37" pos:column="40">uuid<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="46"/></condition><then pos:line="37" pos:column="46">
                    <block type="pseudo"><return pos:line="38" pos:column="21">return <expr><call><name pos:line="38" pos:column="28">strdup<pos:position pos:line="38" pos:column="34"/></name> <argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">uuid<pos:position pos:line="38" pos:column="40"/></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></return></block></then></if>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></for>
    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">NULL<pos:position pos:line="42" pos:column="16"/></name></expr>;<pos:position pos:line="42" pos:column="17"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

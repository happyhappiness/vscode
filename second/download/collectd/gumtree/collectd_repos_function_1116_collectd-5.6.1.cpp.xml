<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1116_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_handle_quota_data<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">host_config_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">host<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">cfg_quota_t<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">cfg_quota<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">na_elem_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">data<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">na_elem_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">elem_quotas<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">na_elem_iter_t<pos:position pos:line="5" pos:column="23"/></name></type> <name pos:line="5" pos:column="24">iter_quota<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">elem_quotas<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <call><name pos:line="7" pos:column="23">na_elem_child<pos:position pos:line="7" pos:column="36"/></name> <argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">data<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="44">"quotas"<pos:position pos:line="7" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">elem_quotas<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">==<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">NULL<pos:position pos:line="8" pos:column="32"/></name></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33">
	<block pos:line="9" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">ERROR<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"netapp plugin: cna_handle_quota_data: "<pos:position pos:line="10" pos:column="64"/></literal>
				<literal type="string" pos:line="11" pos:column="33">"na_elem_child (\"quotas\") failed "<pos:position pos:line="11" pos:column="69"/></literal>
				<literal type="string" pos:line="12" pos:column="33">"for host %s."<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="49">host<pos:position pos:line="12" pos:column="53"/></name><operator pos:line="12" pos:column="53">-&gt;<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="55">name<pos:position pos:line="12" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt>
		<return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">-<pos:position pos:line="13" pos:column="26"/></operator><literal type="number" pos:line="13" pos:column="26">1<pos:position pos:line="13" pos:column="27"/></literal><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator></expr>;<pos:position pos:line="13" pos:column="29"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">iter_quota<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <call><name pos:line="16" pos:column="22">na_child_iterator<pos:position pos:line="16" pos:column="39"/></name> <argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">elem_quotas<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
	<for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><decl><type><name pos:line="17" pos:column="14">na_elem_t<pos:position pos:line="17" pos:column="23"/></name> <modifier pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></modifier></type><name pos:line="17" pos:column="25">elem_quota<pos:position pos:line="17" pos:column="35"/></name> <init pos:line="17" pos:column="36">= <expr><call><name pos:line="17" pos:column="38">na_iterator_next<pos:position pos:line="17" pos:column="54"/></name> <argument_list pos:line="17" pos:column="55">(<argument><expr><operator pos:line="17" pos:column="56">&amp;<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="57">iter_quota<pos:position pos:line="17" pos:column="67"/></name></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="69"/></init>
			<condition><expr><name pos:line="18" pos:column="25">elem_quota<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">!=<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="39">NULL<pos:position pos:line="18" pos:column="43"/></name></expr>;<pos:position pos:line="18" pos:column="44"/></condition>
			<incr><expr><name pos:line="19" pos:column="25">elem_quota<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator> <call><name pos:line="19" pos:column="38">na_iterator_next<pos:position pos:line="19" pos:column="54"/></name> <argument_list pos:line="19" pos:column="55">(<argument><expr><operator pos:line="19" pos:column="56">&amp;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="57">iter_quota<pos:position pos:line="19" pos:column="67"/></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr></incr>)<pos:position pos:line="19" pos:column="69"/></control>
	<block pos:line="20" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="21" pos:column="17">const<pos:position pos:line="21" pos:column="22"/></specifier> <name pos:line="21" pos:column="23">char<pos:position pos:line="21" pos:column="27"/></name> <modifier pos:line="21" pos:column="28">*<pos:position pos:line="21" pos:column="29"/></modifier></type><name pos:line="21" pos:column="29">quota_type<pos:position pos:line="21" pos:column="39"/></name></decl>, <modifier pos:line="21" pos:column="41">*<pos:position pos:line="21" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="21" pos:column="42">volume_name<pos:position pos:line="21" pos:column="53"/></name></decl>, <modifier pos:line="21" pos:column="55">*<pos:position pos:line="21" pos:column="56"/></modifier><decl><type ref="prev"/><name pos:line="21" pos:column="56">tree_name<pos:position pos:line="21" pos:column="65"/></name></decl>;<pos:position pos:line="21" pos:column="66"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">uint64_t<pos:position pos:line="22" pos:column="25"/></name></type> <name pos:line="22" pos:column="26">value<pos:position pos:line="22" pos:column="31"/></name></decl>;<pos:position pos:line="22" pos:column="32"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="24" pos:column="17">char<pos:position pos:line="24" pos:column="21"/></name></type> <name><name pos:line="24" pos:column="22">plugin_instance<pos:position pos:line="24" pos:column="37"/></name><index pos:line="24" pos:column="37">[<expr><name pos:line="24" pos:column="38">DATA_MAX_NAME_LEN<pos:position pos:line="24" pos:column="55"/></name></expr>]<pos:position pos:line="24" pos:column="56"/></index></name></decl>;<pos:position pos:line="24" pos:column="57"/></decl_stmt>

		<expr_stmt><expr><name pos:line="26" pos:column="17">quota_type<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <call><name pos:line="26" pos:column="30">na_child_get_string<pos:position pos:line="26" pos:column="49"/></name> <argument_list pos:line="26" pos:column="50">(<argument><expr><name pos:line="26" pos:column="51">elem_quota<pos:position pos:line="26" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="63">"quota-type"<pos:position pos:line="26" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="77"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">quota_type<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">==<pos:position pos:line="27" pos:column="34"/></operator> <name pos:line="27" pos:column="35">NULL<pos:position pos:line="27" pos:column="39"/></name></expr>)<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40">
			<block type="pseudo"><continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="30" pos:column="17">/* possible TODO: support other types as well */</comment>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">strcmp<pos:position pos:line="31" pos:column="27"/></name> <argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">quota_type<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="41">"tree"<pos:position pos:line="31" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call> <operator pos:line="31" pos:column="49">!=<pos:position pos:line="31" pos:column="51"/></operator> <literal type="number" pos:line="31" pos:column="52">0<pos:position pos:line="31" pos:column="53"/></literal></expr>)<pos:position pos:line="31" pos:column="54"/></condition><then pos:line="31" pos:column="54">
			<block type="pseudo"><continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="34" pos:column="17">tree_name<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <call><name pos:line="34" pos:column="29">na_child_get_string<pos:position pos:line="34" pos:column="48"/></name> <argument_list pos:line="34" pos:column="49">(<argument><expr><name pos:line="34" pos:column="50">elem_quota<pos:position pos:line="34" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="62">"tree"<pos:position pos:line="34" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="70"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">(<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">tree_name<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">==<pos:position pos:line="35" pos:column="34"/></operator> <name pos:line="35" pos:column="35">NULL<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">)<pos:position pos:line="35" pos:column="40"/></operator> <operator pos:line="35" pos:column="41">||<pos:position pos:line="35" pos:column="43"/></operator> <operator pos:line="35" pos:column="44">(<pos:position pos:line="35" pos:column="45"/></operator><operator pos:line="35" pos:column="45">*<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="46">tree_name<pos:position pos:line="35" pos:column="55"/></name> <operator pos:line="35" pos:column="56">==<pos:position pos:line="35" pos:column="58"/></operator> <literal type="char" pos:line="35" pos:column="59">'\0'<pos:position pos:line="35" pos:column="63"/></literal><operator pos:line="35" pos:column="63">)<pos:position pos:line="35" pos:column="64"/></operator></expr>)<pos:position pos:line="35" pos:column="65"/></condition><then pos:line="35" pos:column="65">
			<block type="pseudo"><continue pos:line="36" pos:column="25">continue;<pos:position pos:line="36" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="38" pos:column="17">volume_name<pos:position pos:line="38" pos:column="28"/></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <call><name pos:line="38" pos:column="31">na_child_get_string<pos:position pos:line="38" pos:column="50"/></name> <argument_list pos:line="38" pos:column="51">(<argument><expr><name pos:line="38" pos:column="52">elem_quota<pos:position pos:line="38" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="64">"volume"<pos:position pos:line="38" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">volume_name<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">==<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="36">NULL<pos:position pos:line="39" pos:column="40"/></name></expr>)<pos:position pos:line="39" pos:column="41"/></condition><then pos:line="39" pos:column="41">
			<block type="pseudo"><continue pos:line="40" pos:column="25">continue;<pos:position pos:line="40" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="42" pos:column="17">ssnprintf<pos:position pos:line="42" pos:column="26"/></name> <argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">plugin_instance<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="45">sizeof <argument_list pos:line="42" pos:column="52">(<argument><expr><name pos:line="42" pos:column="53">plugin_instance<pos:position pos:line="42" pos:column="68"/></name></expr></argument>)<pos:position pos:line="42" pos:column="69"/></argument_list></sizeof></expr></argument>,
				<argument><expr><literal type="string" pos:line="43" pos:column="33">"quota-%s-%s"<pos:position pos:line="43" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="48">volume_name<pos:position pos:line="43" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="61">tree_name<pos:position pos:line="43" pos:column="70"/></name></expr></argument>)<pos:position pos:line="43" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="72"/></expr_stmt>

		<expr_stmt><expr><name pos:line="45" pos:column="17">value<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <call><name pos:line="45" pos:column="25">na_child_get_uint64<pos:position pos:line="45" pos:column="44"/></name> <argument_list pos:line="45" pos:column="45">(<argument><expr><name pos:line="45" pos:column="46">elem_quota<pos:position pos:line="45" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="58">"disk-used"<pos:position pos:line="45" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="71">UINT64_MAX<pos:position pos:line="45" pos:column="81"/></name></expr></argument>)<pos:position pos:line="45" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="83"/></expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">value<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">!=<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="30">UINT64_MAX<pos:position pos:line="46" pos:column="40"/></name></expr>)<pos:position pos:line="46" pos:column="41"/></condition><then pos:line="46" pos:column="41"> <block pos:line="46" pos:column="42">{
			<expr_stmt><expr><name pos:line="47" pos:column="25">value<pos:position pos:line="47" pos:column="30"/></name> <operator pos:line="47" pos:column="31">*=<pos:position pos:line="47" pos:column="33"/></operator> <literal type="number" pos:line="47" pos:column="34">1024<pos:position pos:line="47" pos:column="38"/></literal></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt> <comment type="block" pos:line="47" pos:column="40">/* disk-used reports kilobytes */</comment>
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">submit_double<pos:position pos:line="48" pos:column="38"/></name> <argument_list pos:line="48" pos:column="39">(<argument><expr><name><name pos:line="48" pos:column="40">host<pos:position pos:line="48" pos:column="44"/></name><operator pos:line="48" pos:column="44">-&gt;<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="46">name<pos:position pos:line="48" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="52">plugin_instance<pos:position pos:line="48" pos:column="67"/></name></expr></argument>,
					<comment type="block" pos:line="49" pos:column="41">/* type = */</comment> <argument><expr><literal type="string" pos:line="49" pos:column="54">"df_complex"<pos:position pos:line="49" pos:column="66"/></literal></expr></argument>, <comment type="block" pos:line="49" pos:column="68">/* type instance = */</comment> <argument><expr><name pos:line="49" pos:column="90">NULL<pos:position pos:line="49" pos:column="94"/></name></expr></argument>,
					<argument><expr><operator pos:line="50" pos:column="41">(<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="42">double<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">)<pos:position pos:line="50" pos:column="49"/></operator><name pos:line="50" pos:column="49">value<pos:position pos:line="50" pos:column="54"/></name></expr></argument>, <comment type="block" pos:line="50" pos:column="56">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="50" pos:column="74">0<pos:position pos:line="50" pos:column="75"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="51" pos:column="41">host<pos:position pos:line="51" pos:column="45"/></name><operator pos:line="51" pos:column="45">-&gt;<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="47">cfg_quota<pos:position pos:line="51" pos:column="56"/></name><operator pos:line="51" pos:column="56">-&gt;<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="58">interval<pos:position pos:line="51" pos:column="66"/></name><operator pos:line="51" pos:column="66">.<pos:position pos:line="51" pos:column="67"/></operator><name pos:line="51" pos:column="67">interval<pos:position pos:line="51" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="77"/></expr_stmt>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="54" pos:column="17">value<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator> <call><name pos:line="54" pos:column="25">na_child_get_uint64<pos:position pos:line="54" pos:column="44"/></name> <argument_list pos:line="54" pos:column="45">(<argument><expr><name pos:line="54" pos:column="46">elem_quota<pos:position pos:line="54" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="58">"files-used"<pos:position pos:line="54" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="72">UINT64_MAX<pos:position pos:line="54" pos:column="82"/></name></expr></argument>)<pos:position pos:line="54" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="84"/></expr_stmt>
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name pos:line="55" pos:column="21">value<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">!=<pos:position pos:line="55" pos:column="29"/></operator> <name pos:line="55" pos:column="30">UINT64_MAX<pos:position pos:line="55" pos:column="40"/></name></expr>)<pos:position pos:line="55" pos:column="41"/></condition><then pos:line="55" pos:column="41"> <block pos:line="55" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">submit_double<pos:position pos:line="56" pos:column="38"/></name> <argument_list pos:line="56" pos:column="39">(<argument><expr><name><name pos:line="56" pos:column="40">host<pos:position pos:line="56" pos:column="44"/></name><operator pos:line="56" pos:column="44">-&gt;<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="46">name<pos:position pos:line="56" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="52">plugin_instance<pos:position pos:line="56" pos:column="67"/></name></expr></argument>,
					<comment type="block" pos:line="57" pos:column="41">/* type = */</comment> <argument><expr><literal type="string" pos:line="57" pos:column="54">"files"<pos:position pos:line="57" pos:column="61"/></literal></expr></argument>, <comment type="block" pos:line="57" pos:column="63">/* type instance = */</comment> <argument><expr><name pos:line="57" pos:column="85">NULL<pos:position pos:line="57" pos:column="89"/></name></expr></argument>,
					<argument><expr><operator pos:line="58" pos:column="41">(<pos:position pos:line="58" pos:column="42"/></operator><name pos:line="58" pos:column="42">double<pos:position pos:line="58" pos:column="48"/></name><operator pos:line="58" pos:column="48">)<pos:position pos:line="58" pos:column="49"/></operator><name pos:line="58" pos:column="49">value<pos:position pos:line="58" pos:column="54"/></name></expr></argument>, <comment type="block" pos:line="58" pos:column="56">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="58" pos:column="74">0<pos:position pos:line="58" pos:column="75"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="59" pos:column="41">host<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">-&gt;<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="47">cfg_quota<pos:position pos:line="59" pos:column="56"/></name><operator pos:line="59" pos:column="56">-&gt;<pos:position pos:line="59" pos:column="61"/></operator><name pos:line="59" pos:column="58">interval<pos:position pos:line="59" pos:column="66"/></name><operator pos:line="59" pos:column="66">.<pos:position pos:line="59" pos:column="67"/></operator><name pos:line="59" pos:column="67">interval<pos:position pos:line="59" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="77"/></expr_stmt>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>
	}<pos:position pos:line="61" pos:column="10"/></block></for> <comment type="block" pos:line="61" pos:column="11">/* for (elem_quota) */</comment>

	<return pos:line="63" pos:column="9">return <expr><operator pos:line="63" pos:column="16">(<pos:position pos:line="63" pos:column="17"/></operator><literal type="number" pos:line="63" pos:column="17">0<pos:position pos:line="63" pos:column="18"/></literal><operator pos:line="63" pos:column="18">)<pos:position pos:line="63" pos:column="19"/></operator></expr>;<pos:position pos:line="63" pos:column="20"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

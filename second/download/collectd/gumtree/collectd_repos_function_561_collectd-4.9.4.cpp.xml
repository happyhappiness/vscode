<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_561_collectd-4.9.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ignore_list_add_name<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">name<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">struct<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">addrinfo<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">ai_list<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">addrinfo<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">ai_ptr<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">in6_addr<pos:position pos:line="5" pos:column="20"/></name></name></type>  <name pos:line="5" pos:column="22">addr<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">status<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">getaddrinfo<pos:position pos:line="8" pos:column="25"/></name> <argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">name<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">NULL<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">NULL<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="45">&amp;<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="46">ai_list<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="55"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">status<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">!=<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21">
	<block type="pseudo"><return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><expr><name pos:line="12" pos:column="10">ai_ptr<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">ai_list<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></init> <condition><expr><name pos:line="12" pos:column="28">ai_ptr<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">!=<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="38">NULL<pos:position pos:line="12" pos:column="42"/></name></expr>;<pos:position pos:line="12" pos:column="43"/></condition> <incr><expr><name pos:line="12" pos:column="44">ai_ptr<pos:position pos:line="12" pos:column="50"/></name> <operator pos:line="12" pos:column="51">=<pos:position pos:line="12" pos:column="52"/></operator> <name><name pos:line="12" pos:column="53">ai_ptr<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">-&gt;<pos:position pos:line="12" pos:column="64"/></operator><name pos:line="12" pos:column="61">ai_next<pos:position pos:line="12" pos:column="68"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="69"/></control>
    <block pos:line="13" pos:column="5">{
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">ai_ptr<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">ai_family<pos:position pos:line="14" pos:column="30"/></name></name> <operator pos:line="14" pos:column="31">==<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">AF_INET<pos:position pos:line="14" pos:column="41"/></name></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42">
	<block pos:line="15" pos:column="9">{
	    <expr_stmt><expr><call><name pos:line="16" pos:column="13">memset<pos:position pos:line="16" pos:column="19"/></name> <argument_list pos:line="16" pos:column="20">(<argument><expr><operator pos:line="16" pos:column="21">&amp;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="22">addr<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="28">'\0'<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="34">sizeof <argument_list pos:line="16" pos:column="41">(<argument><expr><name pos:line="16" pos:column="42">addr<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="17" pos:column="13">addr<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">.<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">s6_addr<pos:position pos:line="17" pos:column="25"/></name><index pos:line="17" pos:column="25">[<expr><literal type="number" pos:line="17" pos:column="26">10<pos:position pos:line="17" pos:column="28"/></literal></expr>]<pos:position pos:line="17" pos:column="29"/></index></name> <operator pos:line="17" pos:column="30">=<pos:position pos:line="17" pos:column="31"/></operator> <literal type="number" pos:line="17" pos:column="32">0xFF<pos:position pos:line="17" pos:column="36"/></literal></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="18" pos:column="13">addr<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">.<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">s6_addr<pos:position pos:line="18" pos:column="25"/></name><index pos:line="18" pos:column="25">[<expr><literal type="number" pos:line="18" pos:column="26">11<pos:position pos:line="18" pos:column="28"/></literal></expr>]<pos:position pos:line="18" pos:column="29"/></index></name> <operator pos:line="18" pos:column="30">=<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="32">0xFF<pos:position pos:line="18" pos:column="36"/></literal></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="19" pos:column="13">memcpy<pos:position pos:line="19" pos:column="19"/></name> <argument_list pos:line="19" pos:column="20">(<argument><expr><name><name pos:line="19" pos:column="21">addr<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">.<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">s6_addr<pos:position pos:line="19" pos:column="33"/></name></name> <operator pos:line="19" pos:column="34">+<pos:position pos:line="19" pos:column="35"/></operator> <literal type="number" pos:line="19" pos:column="36">12<pos:position pos:line="19" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="40">&amp;<pos:position pos:line="19" pos:column="45"/></operator><operator pos:line="19" pos:column="41">(<pos:position pos:line="19" pos:column="42"/></operator><operator pos:line="19" pos:column="42">(<pos:position pos:line="19" pos:column="43"/></operator>struct <name pos:line="19" pos:column="50">sockaddr_in<pos:position pos:line="19" pos:column="61"/></name> <operator pos:line="19" pos:column="62">*<pos:position pos:line="19" pos:column="63"/></operator><operator pos:line="19" pos:column="63">)<pos:position pos:line="19" pos:column="64"/></operator> <name><name pos:line="19" pos:column="65">ai_ptr<pos:position pos:line="19" pos:column="71"/></name><operator pos:line="19" pos:column="71">-&gt;<pos:position pos:line="19" pos:column="76"/></operator><name pos:line="19" pos:column="73">ai_addr<pos:position pos:line="19" pos:column="80"/></name></name><operator pos:line="19" pos:column="80">)<pos:position pos:line="19" pos:column="81"/></operator><operator pos:line="19" pos:column="81">-&gt;<pos:position pos:line="19" pos:column="86"/></operator><name pos:line="19" pos:column="83">sin_addr<pos:position pos:line="19" pos:column="91"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="93">4<pos:position pos:line="19" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="96"/></expr_stmt>

	    <expr_stmt><expr><call><name pos:line="21" pos:column="13">ignore_list_add<pos:position pos:line="21" pos:column="28"/></name> <argument_list pos:line="21" pos:column="29">(<argument><expr><operator pos:line="21" pos:column="30">&amp;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="31">addr<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then>
	<else pos:line="23" pos:column="9">else
	<block pos:line="24" pos:column="9">{
	    <expr_stmt><expr><call><name pos:line="25" pos:column="13">ignore_list_add<pos:position pos:line="25" pos:column="28"/></name> <argument_list pos:line="25" pos:column="29">(<argument><expr><operator pos:line="25" pos:column="30">&amp;<pos:position pos:line="25" pos:column="35"/></operator><operator pos:line="25" pos:column="31">(<pos:position pos:line="25" pos:column="32"/></operator><operator pos:line="25" pos:column="32">(<pos:position pos:line="25" pos:column="33"/></operator>struct <name pos:line="25" pos:column="40">sockaddr_in6<pos:position pos:line="25" pos:column="52"/></name> <operator pos:line="25" pos:column="53">*<pos:position pos:line="25" pos:column="54"/></operator><operator pos:line="25" pos:column="54">)<pos:position pos:line="25" pos:column="55"/></operator> <name><name pos:line="25" pos:column="56">ai_ptr<pos:position pos:line="25" pos:column="62"/></name><operator pos:line="25" pos:column="62">-&gt;<pos:position pos:line="25" pos:column="67"/></operator><name pos:line="25" pos:column="64">ai_addr<pos:position pos:line="25" pos:column="71"/></name></name><operator pos:line="25" pos:column="71">)<pos:position pos:line="25" pos:column="72"/></operator><operator pos:line="25" pos:column="72">-&gt;<pos:position pos:line="25" pos:column="77"/></operator><name pos:line="25" pos:column="74">sin6_addr<pos:position pos:line="25" pos:column="83"/></name></expr></argument>)<pos:position pos:line="25" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="85"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></else></if>
    }<pos:position pos:line="27" pos:column="6"/></block></for> <comment type="block" pos:line="27" pos:column="7">/* for */</comment>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">freeaddrinfo<pos:position pos:line="29" pos:column="17"/></name> <argument_list pos:line="29" pos:column="18">(<argument><expr><name pos:line="29" pos:column="19">ai_list<pos:position pos:line="29" pos:column="26"/></name></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

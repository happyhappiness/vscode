<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1166_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">udb_result_submit<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">udb_result_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">udb_query_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">q<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list> <comment type="block" pos:line="1" pos:column="64">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">vl<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">i<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">r<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">!=<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr></argument>)<pos:position pos:line="6" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name><name pos:line="7" pos:column="11">r<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">legacy_mode<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">==<pos:position pos:line="7" pos:column="28"/></operator> <literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><name><name pos:line="8" pos:column="11">r<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">ds<pos:position pos:line="8" pos:column="16"/></name></name> <operator pos:line="8" pos:column="17">!=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">assert<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">size_t<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">)<pos:position pos:line="9" pos:column="20"/></operator> <name><name pos:line="9" pos:column="21">r<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">ds<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">ds_num<pos:position pos:line="9" pos:column="34"/></name></name><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator> <operator pos:line="9" pos:column="36">==<pos:position pos:line="9" pos:column="38"/></operator> <name><name pos:line="9" pos:column="39">r<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">-&gt;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="42">values_num<pos:position pos:line="9" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="11" pos:column="3">vl<pos:position pos:line="11" pos:column="5"/></name><operator pos:line="11" pos:column="5">.<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">values<pos:position pos:line="11" pos:column="12"/></name></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <operator pos:line="11" pos:column="15">(<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">value_t<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator> <call><name pos:line="11" pos:column="27">calloc<pos:position pos:line="11" pos:column="33"/></name> <argument_list pos:line="11" pos:column="34">(<argument><expr><name><name pos:line="11" pos:column="35">r<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">ds<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">ds_num<pos:position pos:line="11" pos:column="48"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="50">sizeof <argument_list pos:line="11" pos:column="57">(<argument><expr><name pos:line="11" pos:column="58">value_t<pos:position pos:line="11" pos:column="65"/></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">vl<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">.<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">values<pos:position pos:line="12" pos:column="16"/></name></name> <operator pos:line="12" pos:column="17">==<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name> <argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="string" pos:line="14" pos:column="12">"db query utils: malloc failed."<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal><operator pos:line="15" pos:column="15">)<pos:position pos:line="15" pos:column="16"/></operator></expr>;<pos:position pos:line="15" pos:column="17"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">vl<pos:position pos:line="17" pos:column="5"/></name><operator pos:line="17" pos:column="5">.<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">values_len<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name><name pos:line="17" pos:column="19">r<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">ds<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">ds_num<pos:position pos:line="17" pos:column="32"/></name></name></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>

  <for pos:line="19" pos:column="3">for <control pos:line="19" pos:column="7">(<init><expr><name pos:line="19" pos:column="8">i<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></init> <condition><expr><name pos:line="19" pos:column="15">i<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">&lt;<pos:position pos:line="19" pos:column="21"/></operator> <name><name pos:line="19" pos:column="19">r<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">values_num<pos:position pos:line="19" pos:column="32"/></name></name></expr>;<pos:position pos:line="19" pos:column="33"/></condition> <incr><expr><name pos:line="19" pos:column="34">i<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">++<pos:position pos:line="19" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="38"/></control>
  <block pos:line="20" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier></type><name pos:line="21" pos:column="11">value_str<pos:position pos:line="21" pos:column="20"/></name> <init pos:line="21" pos:column="21">= <expr><name><name pos:line="21" pos:column="23">r<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">values_buffer<pos:position pos:line="21" pos:column="39"/></name><index pos:line="21" pos:column="39">[<expr><name pos:line="21" pos:column="40">i<pos:position pos:line="21" pos:column="41"/></name></expr>]<pos:position pos:line="21" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="21" pos:column="43"/></decl_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><literal type="number" pos:line="23" pos:column="9">0<pos:position pos:line="23" pos:column="10"/></literal> <operator pos:line="23" pos:column="11">!=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">parse_value<pos:position pos:line="23" pos:column="25"/></name> <argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">value_str<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="38">&amp;<pos:position pos:line="23" pos:column="43"/></operator><name><name pos:line="23" pos:column="39">vl<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">.<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="42">values<pos:position pos:line="23" pos:column="48"/></name><index pos:line="23" pos:column="48">[<expr><name pos:line="23" pos:column="49">i<pos:position pos:line="23" pos:column="50"/></name></expr>]<pos:position pos:line="23" pos:column="51"/></index></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="53">r<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">-&gt;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="56">ds<pos:position pos:line="23" pos:column="58"/></name><operator pos:line="23" pos:column="58">-&gt;<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="60">ds<pos:position pos:line="23" pos:column="62"/></name><index pos:line="23" pos:column="62">[<expr><name pos:line="23" pos:column="63">i<pos:position pos:line="23" pos:column="64"/></name></expr>]<pos:position pos:line="23" pos:column="65"/></index></name><operator pos:line="23" pos:column="65">.<pos:position pos:line="23" pos:column="66"/></operator><name pos:line="23" pos:column="66">type<pos:position pos:line="23" pos:column="70"/></name></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="72"/></condition><then pos:line="23" pos:column="72">
    <block pos:line="24" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">ERROR<pos:position pos:line="25" pos:column="12"/></name> <argument_list pos:line="25" pos:column="13">(<argument><expr><literal type="string" pos:line="25" pos:column="14">"db query utils: udb_result_submit: Parsing `%s' as %s failed."<pos:position pos:line="25" pos:column="77"/></literal></expr></argument>,
          <argument><expr><name pos:line="26" pos:column="11">value_str<pos:position pos:line="26" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="22">DS_TYPE_TO_STRING<pos:position pos:line="26" pos:column="39"/></name> <argument_list pos:line="26" pos:column="40">(<argument><expr><name><name pos:line="26" pos:column="41">r<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">ds<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">-&gt;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="48">ds<pos:position pos:line="26" pos:column="50"/></name><index pos:line="26" pos:column="50">[<expr><name pos:line="26" pos:column="51">i<pos:position pos:line="26" pos:column="52"/></name></expr>]<pos:position pos:line="26" pos:column="53"/></index></name><operator pos:line="26" pos:column="53">.<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="54">type<pos:position pos:line="26" pos:column="58"/></name></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">errno<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">EINVAL<pos:position pos:line="27" pos:column="21"/></name></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><operator pos:line="28" pos:column="15">-<pos:position pos:line="28" pos:column="16"/></operator><literal type="number" pos:line="28" pos:column="16">1<pos:position pos:line="28" pos:column="17"/></literal><operator pos:line="28" pos:column="17">)<pos:position pos:line="28" pos:column="18"/></operator></expr>;<pos:position pos:line="28" pos:column="19"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
  }<pos:position pos:line="30" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">sstrncpy<pos:position pos:line="32" pos:column="11"/></name> <argument_list pos:line="32" pos:column="12">(<argument><expr><name><name pos:line="32" pos:column="13">vl<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">.<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">host<pos:position pos:line="32" pos:column="20"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="22">q<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">host<pos:position pos:line="32" pos:column="29"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="31">sizeof <argument_list pos:line="32" pos:column="38">(<argument><expr><name><name pos:line="32" pos:column="39">vl<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">.<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="42">host<pos:position pos:line="32" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">sstrncpy<pos:position pos:line="33" pos:column="11"/></name> <argument_list pos:line="33" pos:column="12">(<argument><expr><name><name pos:line="33" pos:column="13">vl<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">.<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">plugin<pos:position pos:line="33" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="24">q<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">plugin<pos:position pos:line="33" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="35">sizeof <argument_list pos:line="33" pos:column="42">(<argument><expr><name><name pos:line="33" pos:column="43">vl<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">.<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="46">plugin<pos:position pos:line="33" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">sstrncpy<pos:position pos:line="34" pos:column="11"/></name> <argument_list pos:line="34" pos:column="12">(<argument><expr><name><name pos:line="34" pos:column="13">vl<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">.<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">plugin_instance<pos:position pos:line="34" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="33">q<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">-&gt;<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="36">db_name<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="45">sizeof <argument_list pos:line="34" pos:column="52">(<argument><expr><name><name pos:line="34" pos:column="53">vl<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">.<pos:position pos:line="34" pos:column="56"/></operator><name pos:line="34" pos:column="56">type_instance<pos:position pos:line="34" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">sstrncpy<pos:position pos:line="35" pos:column="11"/></name> <argument_list pos:line="35" pos:column="12">(<argument><expr><name><name pos:line="35" pos:column="13">vl<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">.<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">type<pos:position pos:line="35" pos:column="20"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="22">r<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">type<pos:position pos:line="35" pos:column="29"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="31">sizeof <argument_list pos:line="35" pos:column="38">(<argument><expr><name><name pos:line="35" pos:column="39">vl<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">.<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="42">type<pos:position pos:line="35" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="37" pos:column="3">/* Set vl.type_instance {{{ */</comment>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name><name pos:line="38" pos:column="7">r<pos:position pos:line="38" pos:column="8"/></name><operator pos:line="38" pos:column="8">-&gt;<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="10">instances_num<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">&lt;=<pos:position pos:line="38" pos:column="29"/></operator> <literal type="number" pos:line="38" pos:column="27">0<pos:position pos:line="38" pos:column="28"/></literal></expr>)<pos:position pos:line="38" pos:column="29"/></condition><then pos:line="38" pos:column="29">
  <block pos:line="39" pos:column="3">{
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name><name pos:line="40" pos:column="9">r<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">instance_prefix<pos:position pos:line="40" pos:column="27"/></name></name> <operator pos:line="40" pos:column="28">==<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="31">NULL<pos:position pos:line="40" pos:column="35"/></name></expr>)<pos:position pos:line="40" pos:column="36"/></condition><then pos:line="40" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="7">vl<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">.<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">type_instance<pos:position pos:line="41" pos:column="23"/></name><index pos:line="41" pos:column="23">[<expr><literal type="number" pos:line="41" pos:column="24">0<pos:position pos:line="41" pos:column="25"/></literal></expr>]<pos:position pos:line="41" pos:column="26"/></index></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <literal type="number" pos:line="41" pos:column="29">0<pos:position pos:line="41" pos:column="30"/></literal></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt></block></then>
    <else pos:line="42" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="7">sstrncpy<pos:position pos:line="43" pos:column="15"/></name> <argument_list pos:line="43" pos:column="16">(<argument><expr><name><name pos:line="43" pos:column="17">vl<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">type_instance<pos:position pos:line="43" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="35">r<pos:position pos:line="43" pos:column="36"/></name><operator pos:line="43" pos:column="36">-&gt;<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="38">instance_prefix<pos:position pos:line="43" pos:column="53"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="44" pos:column="11">sizeof <argument_list pos:line="44" pos:column="18">(<argument><expr><name><name pos:line="44" pos:column="19">vl<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">.<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">type_instance<pos:position pos:line="44" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt></block></else></if>
  }<pos:position pos:line="45" pos:column="4"/></block></then>
  <else pos:line="46" pos:column="3">else <comment type="block" pos:line="46" pos:column="8">/* if ((r-&gt;instances_num &gt; 0) */</comment>
  <block pos:line="47" pos:column="3">{
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">r<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">instance_prefix<pos:position pos:line="48" pos:column="27"/></name></name> <operator pos:line="48" pos:column="28">==<pos:position pos:line="48" pos:column="30"/></operator> <name pos:line="48" pos:column="31">NULL<pos:position pos:line="48" pos:column="35"/></name></expr>)<pos:position pos:line="48" pos:column="36"/></condition><then pos:line="48" pos:column="36">
    <block pos:line="49" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">strjoin<pos:position pos:line="50" pos:column="14"/></name> <argument_list pos:line="50" pos:column="15">(<argument><expr><name><name pos:line="50" pos:column="16">vl<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">.<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="19">type_instance<pos:position pos:line="50" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="34">sizeof <argument_list pos:line="50" pos:column="41">(<argument><expr><name><name pos:line="50" pos:column="42">vl<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">.<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="45">type_instance<pos:position pos:line="50" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></sizeof></expr></argument>,
          <argument><expr><name><name pos:line="51" pos:column="11">r<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">-&gt;<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="14">instances_buffer<pos:position pos:line="51" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="32">r<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">-&gt;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="35">instances_num<pos:position pos:line="51" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="50">"-"<pos:position pos:line="51" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then>
    <else pos:line="53" pos:column="5">else
    <block pos:line="54" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="55" pos:column="7">char<pos:position pos:line="55" pos:column="11"/></name></type> <name><name pos:line="55" pos:column="12">tmp<pos:position pos:line="55" pos:column="15"/></name><index pos:line="55" pos:column="15">[<expr><name pos:line="55" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="55" pos:column="33"/></name></expr>]<pos:position pos:line="55" pos:column="34"/></index></name></decl>;<pos:position pos:line="55" pos:column="35"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="57" pos:column="7">strjoin<pos:position pos:line="57" pos:column="14"/></name> <argument_list pos:line="57" pos:column="15">(<argument><expr><name pos:line="57" pos:column="16">tmp<pos:position pos:line="57" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="21">sizeof <argument_list pos:line="57" pos:column="28">(<argument><expr><name pos:line="57" pos:column="29">tmp<pos:position pos:line="57" pos:column="32"/></name></expr></argument>)<pos:position pos:line="57" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="35">r<pos:position pos:line="57" pos:column="36"/></name><operator pos:line="57" pos:column="36">-&gt;<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="38">instances_buffer<pos:position pos:line="57" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="56">r<pos:position pos:line="57" pos:column="57"/></name><operator pos:line="57" pos:column="57">-&gt;<pos:position pos:line="57" pos:column="62"/></operator><name pos:line="57" pos:column="59">instances_num<pos:position pos:line="57" pos:column="72"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="74">"-"<pos:position pos:line="57" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="58" pos:column="7">tmp<pos:position pos:line="58" pos:column="10"/></name><index pos:line="58" pos:column="10">[<expr><sizeof pos:line="58" pos:column="11">sizeof <argument_list pos:line="58" pos:column="18">(<argument><expr><name pos:line="58" pos:column="19">tmp<pos:position pos:line="58" pos:column="22"/></name></expr></argument>)<pos:position pos:line="58" pos:column="23"/></argument_list></sizeof> <operator pos:line="58" pos:column="24">-<pos:position pos:line="58" pos:column="25"/></operator> <literal type="number" pos:line="58" pos:column="26">1<pos:position pos:line="58" pos:column="27"/></literal></expr>]<pos:position pos:line="58" pos:column="28"/></index></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <literal type="number" pos:line="58" pos:column="31">0<pos:position pos:line="58" pos:column="32"/></literal></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="60" pos:column="7">snprintf<pos:position pos:line="60" pos:column="15"/></name> <argument_list pos:line="60" pos:column="16">(<argument><expr><name><name pos:line="60" pos:column="17">vl<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">.<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="20">type_instance<pos:position pos:line="60" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="35">sizeof <argument_list pos:line="60" pos:column="42">(<argument><expr><name><name pos:line="60" pos:column="43">vl<pos:position pos:line="60" pos:column="45"/></name><operator pos:line="60" pos:column="45">.<pos:position pos:line="60" pos:column="46"/></operator><name pos:line="60" pos:column="46">type_instance<pos:position pos:line="60" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="60"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="62">"%s-%s"<pos:position pos:line="60" pos:column="69"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="61" pos:column="11">r<pos:position pos:line="61" pos:column="12"/></name><operator pos:line="61" pos:column="12">-&gt;<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="14">instance_prefix<pos:position pos:line="61" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="31">tmp<pos:position pos:line="61" pos:column="34"/></name></expr></argument>)<pos:position pos:line="61" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></else></if>
  }<pos:position pos:line="63" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="64" pos:column="3">vl<pos:position pos:line="64" pos:column="5"/></name><operator pos:line="64" pos:column="5">.<pos:position pos:line="64" pos:column="6"/></operator><name pos:line="64" pos:column="6">type_instance<pos:position pos:line="64" pos:column="19"/></name><index pos:line="64" pos:column="19">[<expr><sizeof pos:line="64" pos:column="20">sizeof <argument_list pos:line="64" pos:column="27">(<argument><expr><name><name pos:line="64" pos:column="28">vl<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">.<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="31">type_instance<pos:position pos:line="64" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="45"/></argument_list></sizeof> <operator pos:line="64" pos:column="46">-<pos:position pos:line="64" pos:column="47"/></operator> <literal type="number" pos:line="64" pos:column="48">1<pos:position pos:line="64" pos:column="49"/></literal></expr>]<pos:position pos:line="64" pos:column="50"/></index></name> <operator pos:line="64" pos:column="51">=<pos:position pos:line="64" pos:column="52"/></operator> <literal type="number" pos:line="64" pos:column="53">0<pos:position pos:line="64" pos:column="54"/></literal></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt>
  <comment type="block" pos:line="65" pos:column="3">/* }}} */</comment>

  <expr_stmt><expr><call><name pos:line="67" pos:column="3">plugin_dispatch_values<pos:position pos:line="67" pos:column="25"/></name> <argument_list pos:line="67" pos:column="26">(<argument><expr><operator pos:line="67" pos:column="27">&amp;<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="28">vl<pos:position pos:line="67" pos:column="30"/></name></expr></argument>)<pos:position pos:line="67" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="69" pos:column="3">sfree<pos:position pos:line="69" pos:column="8"/></name> <argument_list pos:line="69" pos:column="9">(<argument><expr><name><name pos:line="69" pos:column="10">vl<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">.<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="13">values<pos:position pos:line="69" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="21"/></expr_stmt>
  <return pos:line="70" pos:column="3">return <expr><operator pos:line="70" pos:column="10">(<pos:position pos:line="70" pos:column="11"/></operator><literal type="number" pos:line="70" pos:column="11">0<pos:position pos:line="70" pos:column="12"/></literal><operator pos:line="70" pos:column="12">)<pos:position pos:line="70" pos:column="13"/></operator></expr>;<pos:position pos:line="70" pos:column="14"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

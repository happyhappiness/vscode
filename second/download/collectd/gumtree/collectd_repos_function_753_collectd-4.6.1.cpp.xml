<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_753_collectd-4.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">uuidcache_init<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">void<pos:position pos:line="2" pos:column="20"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">line<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><literal type="number" pos:line="4" pos:column="19">100<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">s<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ma<pos:position pos:line="6" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="17">mi<pos:position pos:line="6" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="21">sz<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">char<pos:position pos:line="7" pos:column="20"/></name></type> <name><name pos:line="7" pos:column="21">ptname<pos:position pos:line="7" pos:column="27"/></name><index pos:line="7" pos:column="27">[<expr><literal type="number" pos:line="7" pos:column="28">100<pos:position pos:line="7" pos:column="31"/></literal></expr>]<pos:position pos:line="7" pos:column="32"/></index></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">FILE<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">procpt<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">uuid<pos:position pos:line="9" pos:column="18"/></name><index pos:line="9" pos:column="18">[<expr><literal type="number" pos:line="9" pos:column="19">16<pos:position pos:line="9" pos:column="21"/></literal></expr>]<pos:position pos:line="9" pos:column="22"/></index></name></decl>, <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="25">label<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><name pos:line="9" pos:column="33">NULL<pos:position pos:line="9" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type> <name><name pos:line="10" pos:column="14">device<pos:position pos:line="10" pos:column="20"/></name><index pos:line="10" pos:column="20">[<expr><literal type="number" pos:line="10" pos:column="21">110<pos:position pos:line="10" pos:column="24"/></literal></expr>]<pos:position pos:line="10" pos:column="25"/></index></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">firstPass<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">handleOnFirst<pos:position pos:line="12" pos:column="26"/></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>

	<if pos:line="14" pos:column="9">if<condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">uuidCache<pos:position pos:line="14" pos:column="21"/></name></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <block pos:line="14" pos:column="23">{
		<return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">procpt<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">fopen<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">PROC_PARTITIONS<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="41">"r"<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
	<if pos:line="19" pos:column="9">if<condition pos:line="19" pos:column="11">(<expr><name pos:line="19" pos:column="12">procpt<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">==<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">NULL<pos:position pos:line="19" pos:column="26"/></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27"> <block pos:line="19" pos:column="28">{
		<return pos:line="20" pos:column="17">return;<pos:position pos:line="20" pos:column="24"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<for pos:line="23" pos:column="9">for<control pos:line="23" pos:column="12">(<init><expr><name pos:line="23" pos:column="13">firstPass<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <literal type="number" pos:line="23" pos:column="25">1<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></init> <condition><expr><name pos:line="23" pos:column="28">firstPass<pos:position pos:line="23" pos:column="37"/></name> <operator pos:line="23" pos:column="38">&gt;=<pos:position pos:line="23" pos:column="43"/></operator> <literal type="number" pos:line="23" pos:column="41">0<pos:position pos:line="23" pos:column="42"/></literal></expr>;<pos:position pos:line="23" pos:column="43"/></condition> <incr><expr><name pos:line="23" pos:column="44">firstPass<pos:position pos:line="23" pos:column="53"/></name><operator pos:line="23" pos:column="53">--<pos:position pos:line="23" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="56"/></control> <block pos:line="23" pos:column="57">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">fseek<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">procpt<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="31">0<pos:position pos:line="24" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">SEEK_SET<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
		<while pos:line="25" pos:column="17">while<condition pos:line="25" pos:column="22">(<expr><call><name pos:line="25" pos:column="23">fgets<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">line<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="35">sizeof<argument_list pos:line="25" pos:column="41">(<argument><expr><name pos:line="25" pos:column="42">line<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">procpt<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="57"/></condition> <block pos:line="25" pos:column="58">{
			<if pos:line="26" pos:column="25">if<condition pos:line="26" pos:column="27">(<expr><call><name pos:line="26" pos:column="28">sscanf<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">line<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="41">" %d %d %d %[^\n ]"<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>,
				<argument><expr><operator pos:line="27" pos:column="33">&amp;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="34">ma<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="38">&amp;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="39">mi<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="43">&amp;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="44">sz<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">ptname<pos:position pos:line="27" pos:column="54"/></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call> <operator pos:line="27" pos:column="56">!=<pos:position pos:line="27" pos:column="58"/></operator> <literal type="number" pos:line="27" pos:column="59">4<pos:position pos:line="27" pos:column="60"/></literal></expr>)<pos:position pos:line="27" pos:column="61"/></condition><then pos:line="27" pos:column="61">
			<block pos:line="28" pos:column="25">{
				<continue pos:line="29" pos:column="33">continue;<pos:position pos:line="29" pos:column="42"/></continue>
			}<pos:position pos:line="30" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="32" pos:column="25">/* skip extended partitions (heuristic: size 1) */</comment>
			<if pos:line="33" pos:column="25">if<condition pos:line="33" pos:column="27">(<expr><name pos:line="33" pos:column="28">sz<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">==<pos:position pos:line="33" pos:column="33"/></operator> <literal type="number" pos:line="33" pos:column="34">1<pos:position pos:line="33" pos:column="35"/></literal></expr>)<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36"> <block pos:line="33" pos:column="37">{
				<continue pos:line="34" pos:column="33">continue;<pos:position pos:line="34" pos:column="42"/></continue>
			}<pos:position pos:line="35" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="37" pos:column="25">/* look only at md devices on first pass */</comment>
			<expr_stmt><expr><name pos:line="38" pos:column="25">handleOnFirst<pos:position pos:line="38" pos:column="38"/></name> <operator pos:line="38" pos:column="39">=<pos:position pos:line="38" pos:column="40"/></operator> <operator pos:line="38" pos:column="41">!<pos:position pos:line="38" pos:column="42"/></operator><call><name pos:line="38" pos:column="42">strncmp<pos:position pos:line="38" pos:column="49"/></name><argument_list pos:line="38" pos:column="49">(<argument><expr><name pos:line="38" pos:column="50">ptname<pos:position pos:line="38" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="58">"md"<pos:position pos:line="38" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="64">2<pos:position pos:line="38" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="67"/></expr_stmt>
			<if pos:line="39" pos:column="25">if<condition pos:line="39" pos:column="27">(<expr><name pos:line="39" pos:column="28">firstPass<pos:position pos:line="39" pos:column="37"/></name> <operator pos:line="39" pos:column="38">!=<pos:position pos:line="39" pos:column="40"/></operator> <name pos:line="39" pos:column="41">handleOnFirst<pos:position pos:line="39" pos:column="54"/></name></expr>)<pos:position pos:line="39" pos:column="55"/></condition><then pos:line="39" pos:column="55"> <block pos:line="39" pos:column="56">{
				<continue pos:line="40" pos:column="33">continue;<pos:position pos:line="40" pos:column="42"/></continue>
			}<pos:position pos:line="41" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="43" pos:column="25">/* skip entire disk (minor 0, 64, ... on ide;
			0, 16, ... on sd) */</comment>
			<comment type="block" pos:line="45" pos:column="25">/* heuristic: partition name ends in a digit */</comment>

			<for pos:line="47" pos:column="25">for<control pos:line="47" pos:column="28">(<init><expr><name pos:line="47" pos:column="29">s<pos:position pos:line="47" pos:column="30"/></name> <operator pos:line="47" pos:column="31">=<pos:position pos:line="47" pos:column="32"/></operator> <name pos:line="47" pos:column="33">ptname<pos:position pos:line="47" pos:column="39"/></name></expr>;<pos:position pos:line="47" pos:column="40"/></init> <condition><expr><operator pos:line="47" pos:column="41">*<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="42">s<pos:position pos:line="47" pos:column="43"/></name></expr>;<pos:position pos:line="47" pos:column="44"/></condition> <incr><expr><name pos:line="47" pos:column="45">s<pos:position pos:line="47" pos:column="46"/></name><operator pos:line="47" pos:column="46">++<pos:position pos:line="47" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="47" pos:column="49"/></control><block type="pseudo"><empty_stmt pos:line="47" pos:column="49">;<pos:position pos:line="47" pos:column="50"/></empty_stmt></block></for>

			<if pos:line="49" pos:column="25">if<condition pos:line="49" pos:column="27">(<expr><call><name pos:line="49" pos:column="28">isdigit<pos:position pos:line="49" pos:column="35"/></name><argument_list pos:line="49" pos:column="35">(<argument><expr><operator pos:line="49" pos:column="36">(<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="37">int<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">)<pos:position pos:line="49" pos:column="41"/></operator><name><name pos:line="49" pos:column="41">s<pos:position pos:line="49" pos:column="42"/></name><index pos:line="49" pos:column="42">[<expr><operator pos:line="49" pos:column="43">-<pos:position pos:line="49" pos:column="44"/></operator><literal type="number" pos:line="49" pos:column="44">1<pos:position pos:line="49" pos:column="45"/></literal></expr>]<pos:position pos:line="49" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="48"/></condition><then pos:line="49" pos:column="48"> <block pos:line="49" pos:column="49">{
			<comment type="block" pos:line="50" pos:column="25">/*
			* Note: this is a heuristic only - there is no reason
			* why these devices should live in /dev.
			* Perhaps this directory should be specifiable by option.
			* One might for example have /devlabel with links to /dev
			* for the devices that may be accessed in this way.
			* (This is useful, if the cdrom on /dev/hdc must not
			* be accessed.)
			*/</comment>
				<expr_stmt><expr><call><name pos:line="59" pos:column="33">ssnprintf<pos:position pos:line="59" pos:column="42"/></name><argument_list pos:line="59" pos:column="42">(<argument><expr><name pos:line="59" pos:column="43">device<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="51">sizeof<argument_list pos:line="59" pos:column="57">(<argument><expr><name pos:line="59" pos:column="58">device<pos:position pos:line="59" pos:column="64"/></name></expr></argument>)<pos:position pos:line="59" pos:column="65"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="67">"%s/%s"<pos:position pos:line="59" pos:column="74"/></literal></expr></argument>,
					<argument><expr><name pos:line="60" pos:column="41">DEVLABELDIR<pos:position pos:line="60" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="54">ptname<pos:position pos:line="60" pos:column="60"/></name></expr></argument>)<pos:position pos:line="60" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="62"/></expr_stmt>
				<if pos:line="61" pos:column="33">if<condition pos:line="61" pos:column="35">(<expr><operator pos:line="61" pos:column="36">!<pos:position pos:line="61" pos:column="37"/></operator><call><name pos:line="61" pos:column="37">get_label_uuid<pos:position pos:line="61" pos:column="51"/></name><argument_list pos:line="61" pos:column="51">(<argument><expr><name pos:line="61" pos:column="52">device<pos:position pos:line="61" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="60">&amp;<pos:position pos:line="61" pos:column="65"/></operator><name pos:line="61" pos:column="61">label<pos:position pos:line="61" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="68">uuid<pos:position pos:line="61" pos:column="72"/></name></expr></argument>)<pos:position pos:line="61" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="74"/></condition><then pos:line="61" pos:column="74"> <block pos:line="61" pos:column="75">{
					<expr_stmt><expr><call><name pos:line="62" pos:column="41">uuidcache_addentry<pos:position pos:line="62" pos:column="59"/></name><argument_list pos:line="62" pos:column="59">(<argument><expr><call><name pos:line="62" pos:column="60">sstrdup<pos:position pos:line="62" pos:column="67"/></name><argument_list pos:line="62" pos:column="67">(<argument><expr><name pos:line="62" pos:column="68">device<pos:position pos:line="62" pos:column="74"/></name></expr></argument>)<pos:position pos:line="62" pos:column="75"/></argument_list></call></expr></argument>,
						<argument><expr><name pos:line="63" pos:column="49">label<pos:position pos:line="63" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="56">uuid<pos:position pos:line="63" pos:column="60"/></name></expr></argument>)<pos:position pos:line="63" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="62"/></expr_stmt>
				}<pos:position pos:line="64" pos:column="34"/></block></then></if>
			}<pos:position pos:line="65" pos:column="26"/></block></then></if>
		}<pos:position pos:line="66" pos:column="18"/></block></while>
	}<pos:position pos:line="67" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">fclose<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><name pos:line="68" pos:column="16">procpt<pos:position pos:line="68" pos:column="22"/></name></expr></argument>)<pos:position pos:line="68" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="24"/></expr_stmt>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

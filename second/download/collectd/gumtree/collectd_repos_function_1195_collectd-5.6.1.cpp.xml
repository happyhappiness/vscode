<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1195_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tss2_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * Poll function which collects global and vserver information
	 * and submits it to collectd
	 */</comment>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">success<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><literal type="number" pos:line="7" pos:column="23">0<pos:position pos:line="7" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">status<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* Handle global server variables */</comment>
	<expr_stmt><expr><name pos:line="11" pos:column="9">status<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">tss2_read_vserver<pos:position pos:line="11" pos:column="35"/></name> <argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">NULL<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">status<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">==<pos:position pos:line="12" pos:column="22"/></operator> <literal type="number" pos:line="12" pos:column="23">0<pos:position pos:line="12" pos:column="24"/></literal></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25">
	<block pos:line="13" pos:column="9">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">success<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">++<pos:position pos:line="14" pos:column="26"/></operator></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then>
	<else pos:line="16" pos:column="9">else
	<block pos:line="17" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">WARNING<pos:position pos:line="18" pos:column="24"/></name> <argument_list pos:line="18" pos:column="25">(<argument><expr><literal type="string" pos:line="18" pos:column="26">"teamspeak2 plugin: Reading global server variables failed."<pos:position pos:line="18" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="88"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="21" pos:column="9">/* Handle vservers */</comment>
	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><decl><type><name pos:line="22" pos:column="14">vserver_list_t<pos:position pos:line="22" pos:column="28"/></name> <modifier pos:line="22" pos:column="29">*<pos:position pos:line="22" pos:column="30"/></modifier></type><name pos:line="22" pos:column="30">vserver<pos:position pos:line="22" pos:column="37"/></name> <init pos:line="22" pos:column="38">= <expr><name pos:line="22" pos:column="40">server_list<pos:position pos:line="22" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="52"/></init> <condition><expr><name pos:line="22" pos:column="53">vserver<pos:position pos:line="22" pos:column="60"/></name> <operator pos:line="22" pos:column="61">!=<pos:position pos:line="22" pos:column="63"/></operator> <name pos:line="22" pos:column="64">NULL<pos:position pos:line="22" pos:column="68"/></name></expr>;<pos:position pos:line="22" pos:column="69"/></condition> <incr><expr><name pos:line="22" pos:column="70">vserver<pos:position pos:line="22" pos:column="77"/></name> <operator pos:line="22" pos:column="78">=<pos:position pos:line="22" pos:column="79"/></operator> <name><name pos:line="22" pos:column="80">vserver<pos:position pos:line="22" pos:column="87"/></name><operator pos:line="22" pos:column="87">-&gt;<pos:position pos:line="22" pos:column="92"/></operator><name pos:line="22" pos:column="89">next<pos:position pos:line="22" pos:column="93"/></name></name></expr></incr>)<pos:position pos:line="22" pos:column="94"/></control>
	<block pos:line="23" pos:column="9">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">status<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <call><name pos:line="24" pos:column="26">tss2_read_vserver<pos:position pos:line="24" pos:column="43"/></name> <argument_list pos:line="24" pos:column="44">(<argument><expr><name pos:line="24" pos:column="45">vserver<pos:position pos:line="24" pos:column="52"/></name></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">status<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">==<pos:position pos:line="25" pos:column="30"/></operator> <literal type="number" pos:line="25" pos:column="31">0<pos:position pos:line="25" pos:column="32"/></literal></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33">
		<block pos:line="26" pos:column="17">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">success<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">++<pos:position pos:line="27" pos:column="34"/></operator></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then>
		<else pos:line="29" pos:column="17">else
		<block pos:line="30" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">WARNING<pos:position pos:line="31" pos:column="32"/></name> <argument_list pos:line="31" pos:column="33">(<argument><expr><literal type="string" pos:line="31" pos:column="34">"teamspeak2 plugin: Reading statistics "<pos:position pos:line="31" pos:column="74"/></literal>
					<literal type="string" pos:line="32" pos:column="41">"for vserver %i failed."<pos:position pos:line="32" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="67">vserver<pos:position pos:line="32" pos:column="74"/></name><operator pos:line="32" pos:column="74">-&gt;<pos:position pos:line="32" pos:column="79"/></operator><name pos:line="32" pos:column="76">port<pos:position pos:line="32" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="82"/></expr_stmt>
			<continue pos:line="33" pos:column="25">continue;<pos:position pos:line="33" pos:column="34"/></continue>
		}<pos:position pos:line="34" pos:column="18"/></block></else></if>
	}<pos:position pos:line="35" pos:column="10"/></block></for>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">success<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">==<pos:position pos:line="37" pos:column="23"/></operator> <literal type="number" pos:line="37" pos:column="24">0<pos:position pos:line="37" pos:column="25"/></literal></expr>)<pos:position pos:line="37" pos:column="26"/></condition><then pos:line="37" pos:column="26">
		<block type="pseudo"><return pos:line="38" pos:column="17">return <expr><operator pos:line="38" pos:column="24">(<pos:position pos:line="38" pos:column="25"/></operator><operator pos:line="38" pos:column="25">-<pos:position pos:line="38" pos:column="26"/></operator><literal type="number" pos:line="38" pos:column="26">1<pos:position pos:line="38" pos:column="27"/></literal><operator pos:line="38" pos:column="27">)<pos:position pos:line="38" pos:column="28"/></operator></expr>;<pos:position pos:line="38" pos:column="29"/></return></block></then></if>
	<return pos:line="39" pos:column="9">return <expr><operator pos:line="39" pos:column="16">(<pos:position pos:line="39" pos:column="17"/></operator><literal type="number" pos:line="39" pos:column="17">0<pos:position pos:line="39" pos:column="18"/></literal><operator pos:line="39" pos:column="18">)<pos:position pos:line="39" pos:column="19"/></operator></expr>;<pos:position pos:line="39" pos:column="20"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

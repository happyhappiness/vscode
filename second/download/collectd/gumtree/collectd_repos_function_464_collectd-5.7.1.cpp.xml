<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_464_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wireless_read<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list> <block pos:line="1" pos:column="32">{
<cpp:ifdef pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">ifdef<pos:position pos:line="2" pos:column="7"/></cpp:directive> <name pos:line="2" pos:column="8">KERNEL_LINUX<pos:position pos:line="2" pos:column="20"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">fh<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">1024<pos:position pos:line="4" pos:column="19"/></literal></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">device<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">double<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">quality<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">double<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">power<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">double<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">noise<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name><name pos:line="11" pos:column="9">fields<pos:position pos:line="11" pos:column="15"/></name><index pos:line="11" pos:column="15">[<expr><literal type="number" pos:line="11" pos:column="16">8<pos:position pos:line="11" pos:column="17"/></literal></expr>]<pos:position pos:line="11" pos:column="18"/></index></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">numfields<pos:position pos:line="12" pos:column="16"/></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">devices_found<pos:position pos:line="14" pos:column="20"/></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">len<pos:position pos:line="15" pos:column="10"/></name></decl>;<pos:position pos:line="15" pos:column="11"/></decl_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* there are a variety of names for the wireless device */</comment>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">fh<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">fopen<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">WIRELESS_PROC_FILE<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="39">"r"<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call><operator pos:line="18" pos:column="43">)<pos:position pos:line="18" pos:column="44"/></operator> <operator pos:line="18" pos:column="45">==<pos:position pos:line="18" pos:column="47"/></operator> <name pos:line="18" pos:column="48">NULL<pos:position pos:line="18" pos:column="52"/></name></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53"> <block pos:line="18" pos:column="54">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name></type> <name><name pos:line="19" pos:column="10">errbuf<pos:position pos:line="19" pos:column="16"/></name><index pos:line="19" pos:column="16">[<expr><literal type="number" pos:line="19" pos:column="17">1024<pos:position pos:line="19" pos:column="21"/></literal></expr>]<pos:position pos:line="19" pos:column="22"/></index></name></decl>;<pos:position pos:line="19" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">WARNING<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><literal type="string" pos:line="20" pos:column="13">"wireless: fopen: %s"<pos:position pos:line="20" pos:column="34"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="36">sstrerror<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><name pos:line="20" pos:column="46">errno<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">errbuf<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="61">sizeof<argument_list pos:line="20" pos:column="67">(<argument><expr><name pos:line="20" pos:column="68">errbuf<pos:position pos:line="20" pos:column="74"/></name></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="78"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><operator pos:line="21" pos:column="13">-<pos:position pos:line="21" pos:column="14"/></operator><literal type="number" pos:line="21" pos:column="14">1<pos:position pos:line="21" pos:column="15"/></literal><operator pos:line="21" pos:column="15">)<pos:position pos:line="21" pos:column="16"/></operator></expr>;<pos:position pos:line="21" pos:column="17"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="24" pos:column="3">devices_found<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <literal type="number" pos:line="24" pos:column="19">0<pos:position pos:line="24" pos:column="20"/></literal></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>
  <while pos:line="25" pos:column="3">while <condition pos:line="25" pos:column="9">(<expr><call><name pos:line="25" pos:column="10">fgets<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">buffer<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="24">sizeof<argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">buffer<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="25" pos:column="40">fh<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call> <operator pos:line="25" pos:column="44">!=<pos:position pos:line="25" pos:column="46"/></operator> <name pos:line="25" pos:column="47">NULL<pos:position pos:line="25" pos:column="51"/></name></expr>)<pos:position pos:line="25" pos:column="52"/></condition> <block pos:line="25" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name> <modifier pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></modifier></type><name pos:line="26" pos:column="11">endptr<pos:position pos:line="26" pos:column="17"/></name></decl>;<pos:position pos:line="26" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="28" pos:column="5">numfields<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <call><name pos:line="28" pos:column="17">strsplit<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">buffer<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">fields<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="42">8<pos:position pos:line="28" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">numfields<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&lt;<pos:position pos:line="30" pos:column="23"/></operator> <literal type="number" pos:line="30" pos:column="21">5<pos:position pos:line="30" pos:column="22"/></literal></expr>)<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23">
      <block type="pseudo"><continue pos:line="31" pos:column="7">continue;<pos:position pos:line="31" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="33" pos:column="5">len<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <call><name pos:line="33" pos:column="11">strlen<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><name><name pos:line="33" pos:column="18">fields<pos:position pos:line="33" pos:column="24"/></name><index pos:line="33" pos:column="24">[<expr><literal type="number" pos:line="33" pos:column="25">0<pos:position pos:line="33" pos:column="26"/></literal></expr>]<pos:position pos:line="33" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="28"/></argument_list></call> <operator pos:line="33" pos:column="29">-<pos:position pos:line="33" pos:column="30"/></operator> <literal type="number" pos:line="33" pos:column="31">1<pos:position pos:line="33" pos:column="32"/></literal></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">len<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">&lt;<pos:position pos:line="34" pos:column="17"/></operator> <literal type="number" pos:line="34" pos:column="15">1<pos:position pos:line="34" pos:column="16"/></literal></expr>)<pos:position pos:line="34" pos:column="17"/></condition><then pos:line="34" pos:column="17">
      <block type="pseudo"><continue pos:line="35" pos:column="7">continue;<pos:position pos:line="35" pos:column="16"/></continue></block></then></if>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">fields<pos:position pos:line="36" pos:column="15"/></name><index pos:line="36" pos:column="15">[<expr><literal type="number" pos:line="36" pos:column="16">0<pos:position pos:line="36" pos:column="17"/></literal></expr>]<pos:position pos:line="36" pos:column="18"/></index><index pos:line="36" pos:column="18">[<expr><name pos:line="36" pos:column="19">len<pos:position pos:line="36" pos:column="22"/></name></expr>]<pos:position pos:line="36" pos:column="23"/></index></name> <operator pos:line="36" pos:column="24">!=<pos:position pos:line="36" pos:column="26"/></operator> <literal type="char" pos:line="36" pos:column="27">':'<pos:position pos:line="36" pos:column="30"/></literal></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31">
      <block type="pseudo"><continue pos:line="37" pos:column="7">continue;<pos:position pos:line="37" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">fields<pos:position pos:line="38" pos:column="11"/></name><index pos:line="38" pos:column="11">[<expr><literal type="number" pos:line="38" pos:column="12">0<pos:position pos:line="38" pos:column="13"/></literal></expr>]<pos:position pos:line="38" pos:column="14"/></index><index pos:line="38" pos:column="14">[<expr><name pos:line="38" pos:column="15">len<pos:position pos:line="38" pos:column="18"/></name></expr>]<pos:position pos:line="38" pos:column="19"/></index></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <literal type="char" pos:line="38" pos:column="22">'\0'<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="40" pos:column="5">device<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <name><name pos:line="40" pos:column="14">fields<pos:position pos:line="40" pos:column="20"/></name><index pos:line="40" pos:column="20">[<expr><literal type="number" pos:line="40" pos:column="21">0<pos:position pos:line="40" pos:column="22"/></literal></expr>]<pos:position pos:line="40" pos:column="23"/></index></name></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name pos:line="42" pos:column="5">quality<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <call><name pos:line="42" pos:column="15">strtod<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name><name pos:line="42" pos:column="22">fields<pos:position pos:line="42" pos:column="28"/></name><index pos:line="42" pos:column="28">[<expr><literal type="number" pos:line="42" pos:column="29">2<pos:position pos:line="42" pos:column="30"/></literal></expr>]<pos:position pos:line="42" pos:column="31"/></index></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="33">&amp;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="34">endptr<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name><name pos:line="43" pos:column="9">fields<pos:position pos:line="43" pos:column="15"/></name><index pos:line="43" pos:column="15">[<expr><literal type="number" pos:line="43" pos:column="16">2<pos:position pos:line="43" pos:column="17"/></literal></expr>]<pos:position pos:line="43" pos:column="18"/></index></name> <operator pos:line="43" pos:column="19">==<pos:position pos:line="43" pos:column="21"/></operator> <name pos:line="43" pos:column="22">endptr<pos:position pos:line="43" pos:column="28"/></name></expr>)<pos:position pos:line="43" pos:column="29"/></condition><then pos:line="43" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="7">quality<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <operator pos:line="44" pos:column="17">-<pos:position pos:line="44" pos:column="18"/></operator><literal type="number" pos:line="44" pos:column="18">1.0<pos:position pos:line="44" pos:column="21"/></literal></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt></block></then></if> <comment type="block" pos:line="44" pos:column="23">/* invalid */</comment>

    <comment type="block" pos:line="46" pos:column="5">/* power [dBm] &lt; 0.0 */</comment>
    <expr_stmt><expr><name pos:line="47" pos:column="5">power<pos:position pos:line="47" pos:column="10"/></name> <operator pos:line="47" pos:column="11">=<pos:position pos:line="47" pos:column="12"/></operator> <call><name pos:line="47" pos:column="13">strtod<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name><name pos:line="47" pos:column="20">fields<pos:position pos:line="47" pos:column="26"/></name><index pos:line="47" pos:column="26">[<expr><literal type="number" pos:line="47" pos:column="27">3<pos:position pos:line="47" pos:column="28"/></literal></expr>]<pos:position pos:line="47" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="31">&amp;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="32">endptr<pos:position pos:line="47" pos:column="38"/></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">fields<pos:position pos:line="48" pos:column="15"/></name><index pos:line="48" pos:column="15">[<expr><literal type="number" pos:line="48" pos:column="16">3<pos:position pos:line="48" pos:column="17"/></literal></expr>]<pos:position pos:line="48" pos:column="18"/></index></name> <operator pos:line="48" pos:column="19">==<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">endptr<pos:position pos:line="48" pos:column="28"/></name></expr>)<pos:position pos:line="48" pos:column="29"/></condition><then pos:line="48" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">power<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <literal type="number" pos:line="49" pos:column="15">1.0<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt></block></then> <comment type="block" pos:line="49" pos:column="20">/* invalid */</comment>
    <elseif pos:line="50" pos:column="5">else <if pos:line="50" pos:column="10">if <condition pos:line="50" pos:column="13">(<expr><operator pos:line="50" pos:column="14">(<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="15">power<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">&gt;=<pos:position pos:line="50" pos:column="26"/></operator> <literal type="number" pos:line="50" pos:column="24">0.0<pos:position pos:line="50" pos:column="27"/></literal><operator pos:line="50" pos:column="27">)<pos:position pos:line="50" pos:column="28"/></operator> <operator pos:line="50" pos:column="29">&amp;&amp;<pos:position pos:line="50" pos:column="39"/></operator> <operator pos:line="50" pos:column="32">(<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="33">power<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">&lt;=<pos:position pos:line="50" pos:column="44"/></operator> <literal type="number" pos:line="50" pos:column="42">100.0<pos:position pos:line="50" pos:column="47"/></literal><operator pos:line="50" pos:column="47">)<pos:position pos:line="50" pos:column="48"/></operator></expr>)<pos:position pos:line="50" pos:column="49"/></condition><then pos:line="50" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="7">power<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <call><name pos:line="51" pos:column="15">wireless_percent_to_power<pos:position pos:line="51" pos:column="40"/></name><argument_list pos:line="51" pos:column="40">(<argument><expr><name pos:line="51" pos:column="41">power<pos:position pos:line="51" pos:column="46"/></name></expr></argument>)<pos:position pos:line="51" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="48"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="52" pos:column="5">else <if pos:line="52" pos:column="10">if <condition pos:line="52" pos:column="13">(<expr><operator pos:line="52" pos:column="14">(<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="15">power<pos:position pos:line="52" pos:column="20"/></name> <operator pos:line="52" pos:column="21">&gt;<pos:position pos:line="52" pos:column="25"/></operator> <literal type="number" pos:line="52" pos:column="23">100.0<pos:position pos:line="52" pos:column="28"/></literal><operator pos:line="52" pos:column="28">)<pos:position pos:line="52" pos:column="29"/></operator> <operator pos:line="52" pos:column="30">&amp;&amp;<pos:position pos:line="52" pos:column="40"/></operator> <operator pos:line="52" pos:column="33">(<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="34">power<pos:position pos:line="52" pos:column="39"/></name> <operator pos:line="52" pos:column="40">&lt;=<pos:position pos:line="52" pos:column="45"/></operator> <literal type="number" pos:line="52" pos:column="43">256.0<pos:position pos:line="52" pos:column="48"/></literal><operator pos:line="52" pos:column="48">)<pos:position pos:line="52" pos:column="49"/></operator></expr>)<pos:position pos:line="52" pos:column="50"/></condition><then pos:line="52" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="7">power<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <name pos:line="53" pos:column="15">power<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">-<pos:position pos:line="53" pos:column="22"/></operator> <literal type="number" pos:line="53" pos:column="23">256.0<pos:position pos:line="53" pos:column="28"/></literal></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="54" pos:column="5">else <if pos:line="54" pos:column="10">if <condition pos:line="54" pos:column="13">(<expr><name pos:line="54" pos:column="14">power<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">&gt;<pos:position pos:line="54" pos:column="24"/></operator> <literal type="number" pos:line="54" pos:column="22">0.0<pos:position pos:line="54" pos:column="25"/></literal></expr>)<pos:position pos:line="54" pos:column="26"/></condition><then pos:line="54" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="7">power<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <literal type="number" pos:line="55" pos:column="15">1.0<pos:position pos:line="55" pos:column="18"/></literal></expr>;<pos:position pos:line="55" pos:column="19"/></expr_stmt></block></then></if></elseif></if> <comment type="block" pos:line="55" pos:column="20">/* invalid */</comment>

    <comment type="block" pos:line="57" pos:column="5">/* noise [dBm] &lt; 0.0 */</comment>
    <expr_stmt><expr><name pos:line="58" pos:column="5">noise<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">=<pos:position pos:line="58" pos:column="12"/></operator> <call><name pos:line="58" pos:column="13">strtod<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name><name pos:line="58" pos:column="20">fields<pos:position pos:line="58" pos:column="26"/></name><index pos:line="58" pos:column="26">[<expr><literal type="number" pos:line="58" pos:column="27">4<pos:position pos:line="58" pos:column="28"/></literal></expr>]<pos:position pos:line="58" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="31">&amp;<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="32">endptr<pos:position pos:line="58" pos:column="38"/></name></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="40"/></expr_stmt>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name><name pos:line="59" pos:column="9">fields<pos:position pos:line="59" pos:column="15"/></name><index pos:line="59" pos:column="15">[<expr><literal type="number" pos:line="59" pos:column="16">4<pos:position pos:line="59" pos:column="17"/></literal></expr>]<pos:position pos:line="59" pos:column="18"/></index></name> <operator pos:line="59" pos:column="19">==<pos:position pos:line="59" pos:column="21"/></operator> <name pos:line="59" pos:column="22">endptr<pos:position pos:line="59" pos:column="28"/></name></expr>)<pos:position pos:line="59" pos:column="29"/></condition><then pos:line="59" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="7">noise<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <literal type="number" pos:line="60" pos:column="15">1.0<pos:position pos:line="60" pos:column="18"/></literal></expr>;<pos:position pos:line="60" pos:column="19"/></expr_stmt></block></then> <comment type="block" pos:line="60" pos:column="20">/* invalid */</comment>
    <elseif pos:line="61" pos:column="5">else <if pos:line="61" pos:column="10">if <condition pos:line="61" pos:column="13">(<expr><operator pos:line="61" pos:column="14">(<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="15">noise<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">&gt;=<pos:position pos:line="61" pos:column="26"/></operator> <literal type="number" pos:line="61" pos:column="24">0.0<pos:position pos:line="61" pos:column="27"/></literal><operator pos:line="61" pos:column="27">)<pos:position pos:line="61" pos:column="28"/></operator> <operator pos:line="61" pos:column="29">&amp;&amp;<pos:position pos:line="61" pos:column="39"/></operator> <operator pos:line="61" pos:column="32">(<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="33">noise<pos:position pos:line="61" pos:column="38"/></name> <operator pos:line="61" pos:column="39">&lt;=<pos:position pos:line="61" pos:column="44"/></operator> <literal type="number" pos:line="61" pos:column="42">100.0<pos:position pos:line="61" pos:column="47"/></literal><operator pos:line="61" pos:column="47">)<pos:position pos:line="61" pos:column="48"/></operator></expr>)<pos:position pos:line="61" pos:column="49"/></condition><then pos:line="61" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="7">noise<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <call><name pos:line="62" pos:column="15">wireless_percent_to_power<pos:position pos:line="62" pos:column="40"/></name><argument_list pos:line="62" pos:column="40">(<argument><expr><name pos:line="62" pos:column="41">noise<pos:position pos:line="62" pos:column="46"/></name></expr></argument>)<pos:position pos:line="62" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="48"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="63" pos:column="5">else <if pos:line="63" pos:column="10">if <condition pos:line="63" pos:column="13">(<expr><operator pos:line="63" pos:column="14">(<pos:position pos:line="63" pos:column="15"/></operator><name pos:line="63" pos:column="15">noise<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">&gt;<pos:position pos:line="63" pos:column="25"/></operator> <literal type="number" pos:line="63" pos:column="23">100.0<pos:position pos:line="63" pos:column="28"/></literal><operator pos:line="63" pos:column="28">)<pos:position pos:line="63" pos:column="29"/></operator> <operator pos:line="63" pos:column="30">&amp;&amp;<pos:position pos:line="63" pos:column="40"/></operator> <operator pos:line="63" pos:column="33">(<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="34">noise<pos:position pos:line="63" pos:column="39"/></name> <operator pos:line="63" pos:column="40">&lt;=<pos:position pos:line="63" pos:column="45"/></operator> <literal type="number" pos:line="63" pos:column="43">256.0<pos:position pos:line="63" pos:column="48"/></literal><operator pos:line="63" pos:column="48">)<pos:position pos:line="63" pos:column="49"/></operator></expr>)<pos:position pos:line="63" pos:column="50"/></condition><then pos:line="63" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="7">noise<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">=<pos:position pos:line="64" pos:column="14"/></operator> <name pos:line="64" pos:column="15">noise<pos:position pos:line="64" pos:column="20"/></name> <operator pos:line="64" pos:column="21">-<pos:position pos:line="64" pos:column="22"/></operator> <literal type="number" pos:line="64" pos:column="23">256.0<pos:position pos:line="64" pos:column="28"/></literal></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="65" pos:column="5">else <if pos:line="65" pos:column="10">if <condition pos:line="65" pos:column="13">(<expr><name pos:line="65" pos:column="14">noise<pos:position pos:line="65" pos:column="19"/></name> <operator pos:line="65" pos:column="20">&gt;<pos:position pos:line="65" pos:column="24"/></operator> <literal type="number" pos:line="65" pos:column="22">0.0<pos:position pos:line="65" pos:column="25"/></literal></expr>)<pos:position pos:line="65" pos:column="26"/></condition><then pos:line="65" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="7">noise<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">=<pos:position pos:line="66" pos:column="14"/></operator> <literal type="number" pos:line="66" pos:column="15">1.0<pos:position pos:line="66" pos:column="18"/></literal></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt></block></then></if></elseif></if> <comment type="block" pos:line="66" pos:column="20">/* invalid */</comment>

    <expr_stmt><expr><call><name pos:line="68" pos:column="5">wireless_submit<pos:position pos:line="68" pos:column="20"/></name><argument_list pos:line="68" pos:column="20">(<argument><expr><name pos:line="68" pos:column="21">device<pos:position pos:line="68" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="29">"signal_quality"<pos:position pos:line="68" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="47">quality<pos:position pos:line="68" pos:column="54"/></name></expr></argument>)<pos:position pos:line="68" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">wireless_submit<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">device<pos:position pos:line="69" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="29">"signal_power"<pos:position pos:line="69" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="45">power<pos:position pos:line="69" pos:column="50"/></name></expr></argument>)<pos:position pos:line="69" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">wireless_submit<pos:position pos:line="70" pos:column="20"/></name><argument_list pos:line="70" pos:column="20">(<argument><expr><name pos:line="70" pos:column="21">device<pos:position pos:line="70" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="29">"signal_noise"<pos:position pos:line="70" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="45">noise<pos:position pos:line="70" pos:column="50"/></name></expr></argument>)<pos:position pos:line="70" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><name pos:line="72" pos:column="5">devices_found<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">++<pos:position pos:line="72" pos:column="20"/></operator></expr>;<pos:position pos:line="72" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="73" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="75" pos:column="3">fclose<pos:position pos:line="75" pos:column="9"/></name><argument_list pos:line="75" pos:column="9">(<argument><expr><name pos:line="75" pos:column="10">fh<pos:position pos:line="75" pos:column="12"/></name></expr></argument>)<pos:position pos:line="75" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="14"/></expr_stmt>

  <comment type="block" pos:line="77" pos:column="3">/* If no wireless devices are present return an error, so the plugin
   * code delays our read function. */</comment>
  <if pos:line="79" pos:column="3">if <condition pos:line="79" pos:column="6">(<expr><name pos:line="79" pos:column="7">devices_found<pos:position pos:line="79" pos:column="20"/></name> <operator pos:line="79" pos:column="21">==<pos:position pos:line="79" pos:column="23"/></operator> <literal type="number" pos:line="79" pos:column="24">0<pos:position pos:line="79" pos:column="25"/></literal></expr>)<pos:position pos:line="79" pos:column="26"/></condition><then pos:line="79" pos:column="26">
    <block type="pseudo"><return pos:line="80" pos:column="5">return <expr><operator pos:line="80" pos:column="12">(<pos:position pos:line="80" pos:column="13"/></operator><operator pos:line="80" pos:column="13">-<pos:position pos:line="80" pos:column="14"/></operator><literal type="number" pos:line="80" pos:column="14">1<pos:position pos:line="80" pos:column="15"/></literal><operator pos:line="80" pos:column="15">)<pos:position pos:line="80" pos:column="16"/></operator></expr>;<pos:position pos:line="80" pos:column="17"/></return></block></then></if>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif<pos:position pos:line="81" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="81" pos:column="8">/* KERNEL_LINUX */</comment>

  <return pos:line="83" pos:column="3">return <expr><operator pos:line="83" pos:column="10">(<pos:position pos:line="83" pos:column="11"/></operator><literal type="number" pos:line="83" pos:column="11">0<pos:position pos:line="83" pos:column="12"/></literal><operator pos:line="83" pos:column="12">)<pos:position pos:line="83" pos:column="13"/></operator></expr>;<pos:position pos:line="83" pos:column="14"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

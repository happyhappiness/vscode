<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_855_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">Values_dispatch<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">Values<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">self<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">PyObject<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">args<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">PyObject<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">kwds<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list> <block pos:line="1" pos:column="80">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name></decl>;<pos:position pos:line="2" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">data_set_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ds<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">size<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">value_t<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">value<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">value_list_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">value_list<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">VALUE_LIST_INIT<pos:position pos:line="6" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">PyObject<pos:position pos:line="7" pos:column="11"/></name> <modifier pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></modifier></type><name pos:line="7" pos:column="13">values<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name><name pos:line="7" pos:column="22">self<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">values<pos:position pos:line="7" pos:column="34"/></name></name></expr></init></decl>, <modifier pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="37">meta<pos:position pos:line="7" pos:column="41"/></name> <init pos:line="7" pos:column="42">= <expr><name><name pos:line="7" pos:column="44">self<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">-&gt;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="50">meta<pos:position pos:line="7" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="55"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">double<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">time<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name><name pos:line="8" pos:column="17">self<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">data<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">time<pos:position pos:line="8" pos:column="32"/></name></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="34">interval<pos:position pos:line="8" pos:column="42"/></name> <init pos:line="8" pos:column="43">= <expr><name><name pos:line="8" pos:column="45">self<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">-&gt;<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="51">interval<pos:position pos:line="8" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">host<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="23">plugin<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name pos:line="9" pos:column="32">NULL<pos:position pos:line="9" pos:column="36"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="38">*<pos:position pos:line="9" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="39">plugin_instance<pos:position pos:line="9" pos:column="54"/></name> <init pos:line="9" pos:column="55">= <expr><name pos:line="9" pos:column="57">NULL<pos:position pos:line="9" pos:column="61"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="63">*<pos:position pos:line="9" pos:column="64"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="64">type<pos:position pos:line="9" pos:column="68"/></name> <init pos:line="9" pos:column="69">= <expr><name pos:line="9" pos:column="71">NULL<pos:position pos:line="9" pos:column="75"/></name></expr></init></decl>,
       <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="9">type_instance<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>

  <decl_stmt><decl><specifier pos:line="12" pos:column="3">static<pos:position pos:line="12" pos:column="9"/></specifier> <type><name pos:line="12" pos:column="10">char<pos:position pos:line="12" pos:column="14"/></name> <modifier pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></modifier></type><name><name pos:line="12" pos:column="16">kwlist<pos:position pos:line="12" pos:column="22"/></name><index pos:line="12" pos:column="22">[]<pos:position pos:line="12" pos:column="24"/></index></name> <init pos:line="12" pos:column="25">= <expr><block pos:line="12" pos:column="27">{
      <expr><literal type="string" pos:line="13" pos:column="7">"type"<pos:position pos:line="13" pos:column="13"/></literal></expr>, <expr><literal type="string" pos:line="13" pos:column="15">"values"<pos:position pos:line="13" pos:column="23"/></literal></expr>, <expr><literal type="string" pos:line="13" pos:column="25">"plugin_instance"<pos:position pos:line="13" pos:column="42"/></literal></expr>, <expr><literal type="string" pos:line="13" pos:column="44">"type_instance"<pos:position pos:line="13" pos:column="59"/></literal></expr>, <expr><literal type="string" pos:line="13" pos:column="61">"plugin"<pos:position pos:line="13" pos:column="69"/></literal></expr>,
      <expr><literal type="string" pos:line="14" pos:column="7">"host"<pos:position pos:line="14" pos:column="13"/></literal></expr>, <expr><literal type="string" pos:line="14" pos:column="15">"time"<pos:position pos:line="14" pos:column="21"/></literal></expr>,   <expr><literal type="string" pos:line="14" pos:column="25">"interval"<pos:position pos:line="14" pos:column="35"/></literal></expr>,        <expr><literal type="string" pos:line="14" pos:column="44">"meta"<pos:position pos:line="14" pos:column="50"/></literal></expr>,          <expr><name pos:line="14" pos:column="61">NULL<pos:position pos:line="14" pos:column="65"/></name></expr>}<pos:position pos:line="14" pos:column="66"/></block></expr></init></decl>;<pos:position pos:line="14" pos:column="67"/></decl_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><call><name pos:line="15" pos:column="8">PyArg_ParseTupleAndKeywords<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">args<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">kwds<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="48">"|etOetetetetddO"<pos:position pos:line="15" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="67">kwlist<pos:position pos:line="15" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="75">NULL<pos:position pos:line="15" pos:column="79"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="16" pos:column="36">&amp;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="37">type<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="43">&amp;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="44">values<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">NULL<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="58">&amp;<pos:position pos:line="16" pos:column="63"/></operator><name pos:line="16" pos:column="59">plugin_instance<pos:position pos:line="16" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="76">NULL<pos:position pos:line="16" pos:column="80"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="17" pos:column="36">&amp;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="37">type_instance<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="52">NULL<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="58">&amp;<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="59">plugin<pos:position pos:line="17" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="67">NULL<pos:position pos:line="17" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="73">&amp;<pos:position pos:line="17" pos:column="78"/></operator><name pos:line="17" pos:column="74">host<pos:position pos:line="17" pos:column="78"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="18" pos:column="36">&amp;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="37">time<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="43">&amp;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="44">interval<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="54">&amp;<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="55">meta<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="61"/></condition><then pos:line="18" pos:column="61">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">sstrncpy<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name><name pos:line="21" pos:column="12">value_list<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">.<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">host<pos:position pos:line="21" pos:column="27"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="21" pos:column="29">host<pos:position pos:line="21" pos:column="33"/></name></expr> ?<pos:position pos:line="21" pos:column="35"/></condition><then pos:line="21" pos:column="35"> <expr><name pos:line="21" pos:column="36">host<pos:position pos:line="21" pos:column="40"/></name></expr> <pos:position pos:line="21" pos:column="41"/></then><else pos:line="21" pos:column="41">: <expr><name><name pos:line="21" pos:column="43">self<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">-&gt;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="49">data<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">.<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="54">host<pos:position pos:line="21" pos:column="58"/></name></name></expr></else></ternary></expr></argument>,
           <argument><expr><sizeof pos:line="22" pos:column="12">sizeof<argument_list pos:line="22" pos:column="18">(<argument><expr><name><name pos:line="22" pos:column="19">value_list<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">.<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">host<pos:position pos:line="22" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">sstrncpy<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><name><name pos:line="23" pos:column="12">value_list<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">.<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">plugin<pos:position pos:line="23" pos:column="29"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="23" pos:column="31">plugin<pos:position pos:line="23" pos:column="37"/></name></expr> ?<pos:position pos:line="23" pos:column="39"/></condition><then pos:line="23" pos:column="39"> <expr><name pos:line="23" pos:column="40">plugin<pos:position pos:line="23" pos:column="46"/></name></expr> <pos:position pos:line="23" pos:column="47"/></then><else pos:line="23" pos:column="47">: <expr><name><name pos:line="23" pos:column="49">self<pos:position pos:line="23" pos:column="53"/></name><operator pos:line="23" pos:column="53">-&gt;<pos:position pos:line="23" pos:column="58"/></operator><name pos:line="23" pos:column="55">data<pos:position pos:line="23" pos:column="59"/></name><operator pos:line="23" pos:column="59">.<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="60">plugin<pos:position pos:line="23" pos:column="66"/></name></name></expr></else></ternary></expr></argument>,
           <argument><expr><sizeof pos:line="24" pos:column="12">sizeof<argument_list pos:line="24" pos:column="18">(<argument><expr><name><name pos:line="24" pos:column="19">value_list<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">.<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">plugin<pos:position pos:line="24" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">sstrncpy<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name><name pos:line="25" pos:column="12">value_list<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">.<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">plugin_instance<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>,
           <argument><expr><ternary><condition><expr><name pos:line="26" pos:column="12">plugin_instance<pos:position pos:line="26" pos:column="27"/></name></expr> ?<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29"> <expr><name pos:line="26" pos:column="30">plugin_instance<pos:position pos:line="26" pos:column="45"/></name></expr> <pos:position pos:line="26" pos:column="46"/></then><else pos:line="26" pos:column="46">: <expr><name><name pos:line="26" pos:column="48">self<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">-&gt;<pos:position pos:line="26" pos:column="57"/></operator><name pos:line="26" pos:column="54">data<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">.<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="59">plugin_instance<pos:position pos:line="26" pos:column="74"/></name></name></expr></else></ternary></expr></argument>,
           <argument><expr><sizeof pos:line="27" pos:column="12">sizeof<argument_list pos:line="27" pos:column="18">(<argument><expr><name><name pos:line="27" pos:column="19">value_list<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">plugin_instance<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">sstrncpy<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name><name pos:line="28" pos:column="12">value_list<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">.<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">type<pos:position pos:line="28" pos:column="27"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="28" pos:column="29">type<pos:position pos:line="28" pos:column="33"/></name></expr> ?<pos:position pos:line="28" pos:column="35"/></condition><then pos:line="28" pos:column="35"> <expr><name pos:line="28" pos:column="36">type<pos:position pos:line="28" pos:column="40"/></name></expr> <pos:position pos:line="28" pos:column="41"/></then><else pos:line="28" pos:column="41">: <expr><name><name pos:line="28" pos:column="43">self<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="49">data<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">.<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="54">type<pos:position pos:line="28" pos:column="58"/></name></name></expr></else></ternary></expr></argument>,
           <argument><expr><sizeof pos:line="29" pos:column="12">sizeof<argument_list pos:line="29" pos:column="18">(<argument><expr><name><name pos:line="29" pos:column="19">value_list<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">.<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">type<pos:position pos:line="29" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">sstrncpy<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><name><name pos:line="30" pos:column="12">value_list<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">.<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">type_instance<pos:position pos:line="30" pos:column="36"/></name></name></expr></argument>,
           <argument><expr><ternary><condition><expr><name pos:line="31" pos:column="12">type_instance<pos:position pos:line="31" pos:column="25"/></name></expr> ?<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27"> <expr><name pos:line="31" pos:column="28">type_instance<pos:position pos:line="31" pos:column="41"/></name></expr> <pos:position pos:line="31" pos:column="42"/></then><else pos:line="31" pos:column="42">: <expr><name><name pos:line="31" pos:column="44">self<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">-&gt;<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="50">data<pos:position pos:line="31" pos:column="54"/></name><operator pos:line="31" pos:column="54">.<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="55">type_instance<pos:position pos:line="31" pos:column="68"/></name></name></expr></else></ternary></expr></argument>,
           <argument><expr><sizeof pos:line="32" pos:column="12">sizeof<argument_list pos:line="32" pos:column="18">(<argument><expr><name><name pos:line="32" pos:column="19">value_list<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">.<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">type_instance<pos:position pos:line="32" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">FreeAll<pos:position pos:line="33" pos:column="10"/></name><argument_list pos:line="33" pos:column="10">()<pos:position pos:line="33" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="13"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name><name pos:line="34" pos:column="7">value_list<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">.<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">type<pos:position pos:line="34" pos:column="22"/></name><index pos:line="34" pos:column="22">[<expr><literal type="number" pos:line="34" pos:column="23">0<pos:position pos:line="34" pos:column="24"/></literal></expr>]<pos:position pos:line="34" pos:column="25"/></index></name> <operator pos:line="34" pos:column="26">==<pos:position pos:line="34" pos:column="28"/></operator> <literal type="number" pos:line="34" pos:column="29">0<pos:position pos:line="34" pos:column="30"/></literal></expr>)<pos:position pos:line="34" pos:column="31"/></condition><then pos:line="34" pos:column="31"> <block pos:line="34" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">PyErr_SetString<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">PyExc_RuntimeError<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="41">"type not set"<pos:position pos:line="35" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">FreeAll<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">()<pos:position pos:line="36" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="15"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">NULL<pos:position pos:line="37" pos:column="16"/></name></expr>;<pos:position pos:line="37" pos:column="17"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="39" pos:column="3">ds<pos:position pos:line="39" pos:column="5"/></name> <operator pos:line="39" pos:column="6">=<pos:position pos:line="39" pos:column="7"/></operator> <call><name pos:line="39" pos:column="8">plugin_get_ds<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name><name pos:line="39" pos:column="22">value_list<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">.<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="33">type<pos:position pos:line="39" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">ds<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">==<pos:position pos:line="40" pos:column="12"/></operator> <name pos:line="40" pos:column="13">NULL<pos:position pos:line="40" pos:column="17"/></name></expr>)<pos:position pos:line="40" pos:column="18"/></condition><then pos:line="40" pos:column="18"> <block pos:line="40" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">PyErr_Format<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><name pos:line="41" pos:column="18">PyExc_TypeError<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="35">"Dataset %s not found"<pos:position pos:line="41" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="59">value_list<pos:position pos:line="41" pos:column="69"/></name><operator pos:line="41" pos:column="69">.<pos:position pos:line="41" pos:column="70"/></operator><name pos:line="41" pos:column="70">type<pos:position pos:line="41" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="76"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">NULL<pos:position pos:line="42" pos:column="16"/></name></expr>;<pos:position pos:line="42" pos:column="17"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">values<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">==<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">NULL<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">||<pos:position pos:line="44" pos:column="24"/></operator>
      <operator pos:line="45" pos:column="7">(<pos:position pos:line="45" pos:column="8"/></operator><call><name pos:line="45" pos:column="8">PyTuple_Check<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">values<pos:position pos:line="45" pos:column="28"/></name></expr></argument>)<pos:position pos:line="45" pos:column="29"/></argument_list></call> <operator pos:line="45" pos:column="30">==<pos:position pos:line="45" pos:column="32"/></operator> <literal type="number" pos:line="45" pos:column="33">0<pos:position pos:line="45" pos:column="34"/></literal> <operator pos:line="45" pos:column="35">&amp;&amp;<pos:position pos:line="45" pos:column="45"/></operator> <call><name pos:line="45" pos:column="38">PyList_Check<pos:position pos:line="45" pos:column="50"/></name><argument_list pos:line="45" pos:column="50">(<argument><expr><name pos:line="45" pos:column="51">values<pos:position pos:line="45" pos:column="57"/></name></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call> <operator pos:line="45" pos:column="59">==<pos:position pos:line="45" pos:column="61"/></operator> <literal type="number" pos:line="45" pos:column="62">0<pos:position pos:line="45" pos:column="63"/></literal><operator pos:line="45" pos:column="63">)<pos:position pos:line="45" pos:column="64"/></operator></expr>)<pos:position pos:line="45" pos:column="65"/></condition><then pos:line="45" pos:column="65"> <block pos:line="45" pos:column="66">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">PyErr_Format<pos:position pos:line="46" pos:column="17"/></name><argument_list pos:line="46" pos:column="17">(<argument><expr><name pos:line="46" pos:column="18">PyExc_TypeError<pos:position pos:line="46" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="35">"values must be list or tuple"<pos:position pos:line="46" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">NULL<pos:position pos:line="47" pos:column="16"/></name></expr>;<pos:position pos:line="47" pos:column="17"/></return>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">meta<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">!=<pos:position pos:line="49" pos:column="14"/></operator> <name pos:line="49" pos:column="15">NULL<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">&amp;&amp;<pos:position pos:line="49" pos:column="30"/></operator> <name pos:line="49" pos:column="23">meta<pos:position pos:line="49" pos:column="27"/></name> <operator pos:line="49" pos:column="28">!=<pos:position pos:line="49" pos:column="30"/></operator> <name pos:line="49" pos:column="31">Py_None<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">&amp;&amp;<pos:position pos:line="49" pos:column="49"/></operator> <operator pos:line="49" pos:column="42">!<pos:position pos:line="49" pos:column="43"/></operator><call><name pos:line="49" pos:column="43">PyDict_Check<pos:position pos:line="49" pos:column="55"/></name><argument_list pos:line="49" pos:column="55">(<argument><expr><name pos:line="49" pos:column="56">meta<pos:position pos:line="49" pos:column="60"/></name></expr></argument>)<pos:position pos:line="49" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="62"/></condition><then pos:line="49" pos:column="62"> <block pos:line="49" pos:column="63">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">PyErr_Format<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name pos:line="50" pos:column="18">PyExc_TypeError<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="35">"meta must be a dict"<pos:position pos:line="50" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><name pos:line="51" pos:column="12">NULL<pos:position pos:line="51" pos:column="16"/></name></expr>;<pos:position pos:line="51" pos:column="17"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="53" pos:column="3">size<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <operator pos:line="53" pos:column="10">(<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="11">size_t<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">)<pos:position pos:line="53" pos:column="18"/></operator><call><name pos:line="53" pos:column="18">PySequence_Length<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><name pos:line="53" pos:column="36">values<pos:position pos:line="53" pos:column="42"/></name></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">size<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">!=<pos:position pos:line="54" pos:column="14"/></operator> <name><name pos:line="54" pos:column="15">ds<pos:position pos:line="54" pos:column="17"/></name><operator pos:line="54" pos:column="17">-&gt;<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="19">ds_num<pos:position pos:line="54" pos:column="25"/></name></name></expr>)<pos:position pos:line="54" pos:column="26"/></condition><then pos:line="54" pos:column="26"> <block pos:line="54" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">PyErr_Format<pos:position pos:line="55" pos:column="17"/></name><argument_list pos:line="55" pos:column="17">(<argument><expr><name pos:line="55" pos:column="18">PyExc_RuntimeError<pos:position pos:line="55" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="38">"type %s needs %zu values, got %zu"<pos:position pos:line="55" pos:column="73"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="56" pos:column="18">value_list<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">.<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="29">type<pos:position pos:line="56" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="35">ds<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">-&gt;<pos:position pos:line="56" pos:column="42"/></operator><name pos:line="56" pos:column="39">ds_num<pos:position pos:line="56" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="47">size<pos:position pos:line="56" pos:column="51"/></name></expr></argument>)<pos:position pos:line="56" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="53"/></expr_stmt>
    <return pos:line="57" pos:column="5">return <expr><name pos:line="57" pos:column="12">NULL<pos:position pos:line="57" pos:column="16"/></name></expr>;<pos:position pos:line="57" pos:column="17"/></return>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="59" pos:column="3">value<pos:position pos:line="59" pos:column="8"/></name> <operator pos:line="59" pos:column="9">=<pos:position pos:line="59" pos:column="10"/></operator> <call><name pos:line="59" pos:column="11">calloc<pos:position pos:line="59" pos:column="17"/></name><argument_list pos:line="59" pos:column="17">(<argument><expr><name pos:line="59" pos:column="18">size<pos:position pos:line="59" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="24">sizeof<argument_list pos:line="59" pos:column="30">(<argument><expr><operator pos:line="59" pos:column="31">*<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="32">value<pos:position pos:line="59" pos:column="37"/></name></expr></argument>)<pos:position pos:line="59" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="40"/></expr_stmt>
  <for pos:line="60" pos:column="3">for <control pos:line="60" pos:column="7">(<init><decl><type><name pos:line="60" pos:column="8">size_t<pos:position pos:line="60" pos:column="14"/></name></type> <name pos:line="60" pos:column="15">i<pos:position pos:line="60" pos:column="16"/></name> <init pos:line="60" pos:column="17">= <expr><literal type="number" pos:line="60" pos:column="19">0<pos:position pos:line="60" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="60" pos:column="21"/></init> <condition><expr><name pos:line="60" pos:column="22">i<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">&lt;<pos:position pos:line="60" pos:column="28"/></operator> <name pos:line="60" pos:column="26">size<pos:position pos:line="60" pos:column="30"/></name></expr>;<pos:position pos:line="60" pos:column="31"/></condition> <incr><expr><operator pos:line="60" pos:column="32">++<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="34">i<pos:position pos:line="60" pos:column="35"/></name></expr></incr>)<pos:position pos:line="60" pos:column="36"/></control> <block pos:line="60" pos:column="37">{
    <decl_stmt><decl><type><name pos:line="61" pos:column="5">PyObject<pos:position pos:line="61" pos:column="13"/></name> <modifier pos:line="61" pos:column="14">*<pos:position pos:line="61" pos:column="15"/></modifier></type><name pos:line="61" pos:column="15">item<pos:position pos:line="61" pos:column="19"/></name></decl>, <modifier pos:line="61" pos:column="21">*<pos:position pos:line="61" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="61" pos:column="22">num<pos:position pos:line="61" pos:column="25"/></name></decl>;<pos:position pos:line="61" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">item<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">=<pos:position pos:line="62" pos:column="11"/></operator> <call><name pos:line="62" pos:column="12">PySequence_Fast_GET_ITEM<pos:position pos:line="62" pos:column="36"/></name><argument_list pos:line="62" pos:column="36">(<argument><expr><name pos:line="62" pos:column="37">values<pos:position pos:line="62" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="45">(<pos:position pos:line="62" pos:column="46"/></operator><name pos:line="62" pos:column="46">int<pos:position pos:line="62" pos:column="49"/></name><operator pos:line="62" pos:column="49">)<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="50">i<pos:position pos:line="62" pos:column="51"/></name></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="53"/></expr_stmt> <comment type="block" pos:line="62" pos:column="54">/* Borrowed reference. */</comment>
    <switch pos:line="63" pos:column="5">switch <condition pos:line="63" pos:column="12">(<expr><name><name pos:line="63" pos:column="13">ds<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">-&gt;<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="17">ds<pos:position pos:line="63" pos:column="19"/></name><index pos:line="63" pos:column="19">[<expr><name pos:line="63" pos:column="20">i<pos:position pos:line="63" pos:column="21"/></name></expr>]<pos:position pos:line="63" pos:column="22"/></index></name><operator pos:line="63" pos:column="22">.<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="23">type<pos:position pos:line="63" pos:column="27"/></name></expr>)<pos:position pos:line="63" pos:column="28"/></condition> <block pos:line="63" pos:column="29">{
    <case pos:line="64" pos:column="5">case <expr><name pos:line="64" pos:column="10">DS_TYPE_COUNTER<pos:position pos:line="64" pos:column="25"/></name></expr>:<pos:position pos:line="64" pos:column="26"/></case>
      <expr_stmt><expr><name pos:line="65" pos:column="7">num<pos:position pos:line="65" pos:column="10"/></name> <operator pos:line="65" pos:column="11">=<pos:position pos:line="65" pos:column="12"/></operator> <call><name pos:line="65" pos:column="13">PyNumber_Long<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">item<pos:position pos:line="65" pos:column="31"/></name></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt> <comment type="block" pos:line="65" pos:column="34">/* New reference. */</comment>
      <if pos:line="66" pos:column="7">if <condition pos:line="66" pos:column="10">(<expr><name pos:line="66" pos:column="11">num<pos:position pos:line="66" pos:column="14"/></name> <operator pos:line="66" pos:column="15">!=<pos:position pos:line="66" pos:column="17"/></operator> <name pos:line="66" pos:column="18">NULL<pos:position pos:line="66" pos:column="22"/></name></expr>)<pos:position pos:line="66" pos:column="23"/></condition><then pos:line="66" pos:column="23"> <block pos:line="66" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">value<pos:position pos:line="67" pos:column="14"/></name><index pos:line="67" pos:column="14">[<expr><name pos:line="67" pos:column="15">i<pos:position pos:line="67" pos:column="16"/></name></expr>]<pos:position pos:line="67" pos:column="17"/></index></name><operator pos:line="67" pos:column="17">.<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">counter<pos:position pos:line="67" pos:column="25"/></name> <operator pos:line="67" pos:column="26">=<pos:position pos:line="67" pos:column="27"/></operator> <call><name pos:line="67" pos:column="28">PyLong_AsUnsignedLongLong<pos:position pos:line="67" pos:column="53"/></name><argument_list pos:line="67" pos:column="53">(<argument><expr><name pos:line="67" pos:column="54">num<pos:position pos:line="67" pos:column="57"/></name></expr></argument>)<pos:position pos:line="67" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">Py_XDECREF<pos:position pos:line="68" pos:column="19"/></name><argument_list pos:line="68" pos:column="19">(<argument><expr><name pos:line="68" pos:column="20">num<pos:position pos:line="68" pos:column="23"/></name></expr></argument>)<pos:position pos:line="68" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="69" pos:column="8"/></block></then></if>
      <break pos:line="70" pos:column="7">break;<pos:position pos:line="70" pos:column="13"/></break>
    <case pos:line="71" pos:column="5">case <expr><name pos:line="71" pos:column="10">DS_TYPE_GAUGE<pos:position pos:line="71" pos:column="23"/></name></expr>:<pos:position pos:line="71" pos:column="24"/></case>
      <expr_stmt><expr><name pos:line="72" pos:column="7">num<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">=<pos:position pos:line="72" pos:column="12"/></operator> <call><name pos:line="72" pos:column="13">PyNumber_Float<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><name pos:line="72" pos:column="28">item<pos:position pos:line="72" pos:column="32"/></name></expr></argument>)<pos:position pos:line="72" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="34"/></expr_stmt> <comment type="block" pos:line="72" pos:column="35">/* New reference. */</comment>
      <if pos:line="73" pos:column="7">if <condition pos:line="73" pos:column="10">(<expr><name pos:line="73" pos:column="11">num<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">!=<pos:position pos:line="73" pos:column="17"/></operator> <name pos:line="73" pos:column="18">NULL<pos:position pos:line="73" pos:column="22"/></name></expr>)<pos:position pos:line="73" pos:column="23"/></condition><then pos:line="73" pos:column="23"> <block pos:line="73" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="74" pos:column="9">value<pos:position pos:line="74" pos:column="14"/></name><index pos:line="74" pos:column="14">[<expr><name pos:line="74" pos:column="15">i<pos:position pos:line="74" pos:column="16"/></name></expr>]<pos:position pos:line="74" pos:column="17"/></index></name><operator pos:line="74" pos:column="17">.<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="18">gauge<pos:position pos:line="74" pos:column="23"/></name> <operator pos:line="74" pos:column="24">=<pos:position pos:line="74" pos:column="25"/></operator> <call><name pos:line="74" pos:column="26">PyFloat_AsDouble<pos:position pos:line="74" pos:column="42"/></name><argument_list pos:line="74" pos:column="42">(<argument><expr><name pos:line="74" pos:column="43">num<pos:position pos:line="74" pos:column="46"/></name></expr></argument>)<pos:position pos:line="74" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">Py_XDECREF<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><name pos:line="75" pos:column="20">num<pos:position pos:line="75" pos:column="23"/></name></expr></argument>)<pos:position pos:line="75" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="76" pos:column="8"/></block></then></if>
      <break pos:line="77" pos:column="7">break;<pos:position pos:line="77" pos:column="13"/></break>
    <case pos:line="78" pos:column="5">case <expr><name pos:line="78" pos:column="10">DS_TYPE_DERIVE<pos:position pos:line="78" pos:column="24"/></name></expr>:<pos:position pos:line="78" pos:column="25"/></case>
      <comment type="block" pos:line="79" pos:column="7">/* This might overflow without raising an exception.
       * Not much we can do about it */</comment>
      <expr_stmt><expr><name pos:line="81" pos:column="7">num<pos:position pos:line="81" pos:column="10"/></name> <operator pos:line="81" pos:column="11">=<pos:position pos:line="81" pos:column="12"/></operator> <call><name pos:line="81" pos:column="13">PyNumber_Long<pos:position pos:line="81" pos:column="26"/></name><argument_list pos:line="81" pos:column="26">(<argument><expr><name pos:line="81" pos:column="27">item<pos:position pos:line="81" pos:column="31"/></name></expr></argument>)<pos:position pos:line="81" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="33"/></expr_stmt> <comment type="block" pos:line="81" pos:column="34">/* New reference. */</comment>
      <if pos:line="82" pos:column="7">if <condition pos:line="82" pos:column="10">(<expr><name pos:line="82" pos:column="11">num<pos:position pos:line="82" pos:column="14"/></name> <operator pos:line="82" pos:column="15">!=<pos:position pos:line="82" pos:column="17"/></operator> <name pos:line="82" pos:column="18">NULL<pos:position pos:line="82" pos:column="22"/></name></expr>)<pos:position pos:line="82" pos:column="23"/></condition><then pos:line="82" pos:column="23"> <block pos:line="82" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">value<pos:position pos:line="83" pos:column="14"/></name><index pos:line="83" pos:column="14">[<expr><name pos:line="83" pos:column="15">i<pos:position pos:line="83" pos:column="16"/></name></expr>]<pos:position pos:line="83" pos:column="17"/></index></name><operator pos:line="83" pos:column="17">.<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="18">derive<pos:position pos:line="83" pos:column="24"/></name> <operator pos:line="83" pos:column="25">=<pos:position pos:line="83" pos:column="26"/></operator> <call><name pos:line="83" pos:column="27">PyLong_AsLongLong<pos:position pos:line="83" pos:column="44"/></name><argument_list pos:line="83" pos:column="44">(<argument><expr><name pos:line="83" pos:column="45">num<pos:position pos:line="83" pos:column="48"/></name></expr></argument>)<pos:position pos:line="83" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">Py_XDECREF<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><name pos:line="84" pos:column="20">num<pos:position pos:line="84" pos:column="23"/></name></expr></argument>)<pos:position pos:line="84" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="85" pos:column="8"/></block></then></if>
      <break pos:line="86" pos:column="7">break;<pos:position pos:line="86" pos:column="13"/></break>
    <case pos:line="87" pos:column="5">case <expr><name pos:line="87" pos:column="10">DS_TYPE_ABSOLUTE<pos:position pos:line="87" pos:column="26"/></name></expr>:<pos:position pos:line="87" pos:column="27"/></case>
      <comment type="block" pos:line="88" pos:column="7">/* This might overflow without raising an exception.
       * Not much we can do about it */</comment>
      <expr_stmt><expr><name pos:line="90" pos:column="7">num<pos:position pos:line="90" pos:column="10"/></name> <operator pos:line="90" pos:column="11">=<pos:position pos:line="90" pos:column="12"/></operator> <call><name pos:line="90" pos:column="13">PyNumber_Long<pos:position pos:line="90" pos:column="26"/></name><argument_list pos:line="90" pos:column="26">(<argument><expr><name pos:line="90" pos:column="27">item<pos:position pos:line="90" pos:column="31"/></name></expr></argument>)<pos:position pos:line="90" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="33"/></expr_stmt> <comment type="block" pos:line="90" pos:column="34">/* New reference. */</comment>
      <if pos:line="91" pos:column="7">if <condition pos:line="91" pos:column="10">(<expr><name pos:line="91" pos:column="11">num<pos:position pos:line="91" pos:column="14"/></name> <operator pos:line="91" pos:column="15">!=<pos:position pos:line="91" pos:column="17"/></operator> <name pos:line="91" pos:column="18">NULL<pos:position pos:line="91" pos:column="22"/></name></expr>)<pos:position pos:line="91" pos:column="23"/></condition><then pos:line="91" pos:column="23"> <block pos:line="91" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">value<pos:position pos:line="92" pos:column="14"/></name><index pos:line="92" pos:column="14">[<expr><name pos:line="92" pos:column="15">i<pos:position pos:line="92" pos:column="16"/></name></expr>]<pos:position pos:line="92" pos:column="17"/></index></name><operator pos:line="92" pos:column="17">.<pos:position pos:line="92" pos:column="18"/></operator><name pos:line="92" pos:column="18">absolute<pos:position pos:line="92" pos:column="26"/></name> <operator pos:line="92" pos:column="27">=<pos:position pos:line="92" pos:column="28"/></operator> <call><name pos:line="92" pos:column="29">PyLong_AsUnsignedLongLong<pos:position pos:line="92" pos:column="54"/></name><argument_list pos:line="92" pos:column="54">(<argument><expr><name pos:line="92" pos:column="55">num<pos:position pos:line="92" pos:column="58"/></name></expr></argument>)<pos:position pos:line="92" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">Py_XDECREF<pos:position pos:line="93" pos:column="19"/></name><argument_list pos:line="93" pos:column="19">(<argument><expr><name pos:line="93" pos:column="20">num<pos:position pos:line="93" pos:column="23"/></name></expr></argument>)<pos:position pos:line="93" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="94" pos:column="8"/></block></then></if>
      <break pos:line="95" pos:column="7">break;<pos:position pos:line="95" pos:column="13"/></break>
    <default pos:line="96" pos:column="5">default:<pos:position pos:line="96" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">free<pos:position pos:line="97" pos:column="11"/></name><argument_list pos:line="97" pos:column="11">(<argument><expr><name pos:line="97" pos:column="12">value<pos:position pos:line="97" pos:column="17"/></name></expr></argument>)<pos:position pos:line="97" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">PyErr_Format<pos:position pos:line="98" pos:column="19"/></name><argument_list pos:line="98" pos:column="19">(<argument><expr><name pos:line="98" pos:column="20">PyExc_RuntimeError<pos:position pos:line="98" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="40">"unknown data type %d for %s"<pos:position pos:line="98" pos:column="69"/></literal></expr></argument>,
                   <argument><expr><name><name pos:line="99" pos:column="20">ds<pos:position pos:line="99" pos:column="22"/></name><operator pos:line="99" pos:column="22">-&gt;<pos:position pos:line="99" pos:column="27"/></operator><name pos:line="99" pos:column="24">ds<pos:position pos:line="99" pos:column="26"/></name><index pos:line="99" pos:column="26">[<expr><name pos:line="99" pos:column="27">i<pos:position pos:line="99" pos:column="28"/></name></expr>]<pos:position pos:line="99" pos:column="29"/></index></name><operator pos:line="99" pos:column="29">.<pos:position pos:line="99" pos:column="30"/></operator><name pos:line="99" pos:column="30">type<pos:position pos:line="99" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="36">value_list<pos:position pos:line="99" pos:column="46"/></name><operator pos:line="99" pos:column="46">.<pos:position pos:line="99" pos:column="47"/></operator><name pos:line="99" pos:column="47">type<pos:position pos:line="99" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="53"/></expr_stmt>
      <return pos:line="100" pos:column="7">return <expr><name pos:line="100" pos:column="14">NULL<pos:position pos:line="100" pos:column="18"/></name></expr>;<pos:position pos:line="100" pos:column="19"/></return>
    }<pos:position pos:line="101" pos:column="6"/></block></switch>
    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><call><name pos:line="102" pos:column="9">PyErr_Occurred<pos:position pos:line="102" pos:column="23"/></name><argument_list pos:line="102" pos:column="23">()<pos:position pos:line="102" pos:column="25"/></argument_list></call> <operator pos:line="102" pos:column="26">!=<pos:position pos:line="102" pos:column="28"/></operator> <name pos:line="102" pos:column="29">NULL<pos:position pos:line="102" pos:column="33"/></name></expr>)<pos:position pos:line="102" pos:column="34"/></condition><then pos:line="102" pos:column="34"> <block pos:line="102" pos:column="35">{
      <expr_stmt><expr><call><name pos:line="103" pos:column="7">free<pos:position pos:line="103" pos:column="11"/></name><argument_list pos:line="103" pos:column="11">(<argument><expr><name pos:line="103" pos:column="12">value<pos:position pos:line="103" pos:column="17"/></name></expr></argument>)<pos:position pos:line="103" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="19"/></expr_stmt>
      <return pos:line="104" pos:column="7">return <expr><name pos:line="104" pos:column="14">NULL<pos:position pos:line="104" pos:column="18"/></name></expr>;<pos:position pos:line="104" pos:column="19"/></return>
    }<pos:position pos:line="105" pos:column="6"/></block></then></if>
  }<pos:position pos:line="106" pos:column="4"/></block></for>
  <expr_stmt><expr><name><name pos:line="107" pos:column="3">value_list<pos:position pos:line="107" pos:column="13"/></name><operator pos:line="107" pos:column="13">.<pos:position pos:line="107" pos:column="14"/></operator><name pos:line="107" pos:column="14">values<pos:position pos:line="107" pos:column="20"/></name></name> <operator pos:line="107" pos:column="21">=<pos:position pos:line="107" pos:column="22"/></operator> <name pos:line="107" pos:column="23">value<pos:position pos:line="107" pos:column="28"/></name></expr>;<pos:position pos:line="107" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="108" pos:column="3">value_list<pos:position pos:line="108" pos:column="13"/></name><operator pos:line="108" pos:column="13">.<pos:position pos:line="108" pos:column="14"/></operator><name pos:line="108" pos:column="14">meta<pos:position pos:line="108" pos:column="18"/></name></name> <operator pos:line="108" pos:column="19">=<pos:position pos:line="108" pos:column="20"/></operator> <call><name pos:line="108" pos:column="21">cpy_build_meta<pos:position pos:line="108" pos:column="35"/></name><argument_list pos:line="108" pos:column="35">(<argument><expr><name pos:line="108" pos:column="36">meta<pos:position pos:line="108" pos:column="40"/></name></expr></argument>)<pos:position pos:line="108" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="109" pos:column="3">value_list<pos:position pos:line="109" pos:column="13"/></name><operator pos:line="109" pos:column="13">.<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="14">values_len<pos:position pos:line="109" pos:column="24"/></name></name> <operator pos:line="109" pos:column="25">=<pos:position pos:line="109" pos:column="26"/></operator> <name pos:line="109" pos:column="27">size<pos:position pos:line="109" pos:column="31"/></name></expr>;<pos:position pos:line="109" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="110" pos:column="3">value_list<pos:position pos:line="110" pos:column="13"/></name><operator pos:line="110" pos:column="13">.<pos:position pos:line="110" pos:column="14"/></operator><name pos:line="110" pos:column="14">time<pos:position pos:line="110" pos:column="18"/></name></name> <operator pos:line="110" pos:column="19">=<pos:position pos:line="110" pos:column="20"/></operator> <call><name pos:line="110" pos:column="21">DOUBLE_TO_CDTIME_T<pos:position pos:line="110" pos:column="39"/></name><argument_list pos:line="110" pos:column="39">(<argument><expr><name pos:line="110" pos:column="40">time<pos:position pos:line="110" pos:column="44"/></name></expr></argument>)<pos:position pos:line="110" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="111" pos:column="3">value_list<pos:position pos:line="111" pos:column="13"/></name><operator pos:line="111" pos:column="13">.<pos:position pos:line="111" pos:column="14"/></operator><name pos:line="111" pos:column="14">interval<pos:position pos:line="111" pos:column="22"/></name></name> <operator pos:line="111" pos:column="23">=<pos:position pos:line="111" pos:column="24"/></operator> <call><name pos:line="111" pos:column="25">DOUBLE_TO_CDTIME_T<pos:position pos:line="111" pos:column="43"/></name><argument_list pos:line="111" pos:column="43">(<argument><expr><name pos:line="111" pos:column="44">interval<pos:position pos:line="111" pos:column="52"/></name></expr></argument>)<pos:position pos:line="111" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="54"/></expr_stmt>
  <if pos:line="112" pos:column="3">if <condition pos:line="112" pos:column="6">(<expr><name><name pos:line="112" pos:column="7">value_list<pos:position pos:line="112" pos:column="17"/></name><operator pos:line="112" pos:column="17">.<pos:position pos:line="112" pos:column="18"/></operator><name pos:line="112" pos:column="18">host<pos:position pos:line="112" pos:column="22"/></name><index pos:line="112" pos:column="22">[<expr><literal type="number" pos:line="112" pos:column="23">0<pos:position pos:line="112" pos:column="24"/></literal></expr>]<pos:position pos:line="112" pos:column="25"/></index></name> <operator pos:line="112" pos:column="26">==<pos:position pos:line="112" pos:column="28"/></operator> <literal type="number" pos:line="112" pos:column="29">0<pos:position pos:line="112" pos:column="30"/></literal></expr>)<pos:position pos:line="112" pos:column="31"/></condition><then pos:line="112" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="5">sstrncpy<pos:position pos:line="113" pos:column="13"/></name><argument_list pos:line="113" pos:column="13">(<argument><expr><name><name pos:line="113" pos:column="14">value_list<pos:position pos:line="113" pos:column="24"/></name><operator pos:line="113" pos:column="24">.<pos:position pos:line="113" pos:column="25"/></operator><name pos:line="113" pos:column="25">host<pos:position pos:line="113" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="31">hostname_g<pos:position pos:line="113" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="113" pos:column="43">sizeof<argument_list pos:line="113" pos:column="49">(<argument><expr><name><name pos:line="113" pos:column="50">value_list<pos:position pos:line="113" pos:column="60"/></name><operator pos:line="113" pos:column="60">.<pos:position pos:line="113" pos:column="61"/></operator><name pos:line="113" pos:column="61">host<pos:position pos:line="113" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="113" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="68"/></expr_stmt></block></then></if>
  <if pos:line="114" pos:column="3">if <condition pos:line="114" pos:column="6">(<expr><name><name pos:line="114" pos:column="7">value_list<pos:position pos:line="114" pos:column="17"/></name><operator pos:line="114" pos:column="17">.<pos:position pos:line="114" pos:column="18"/></operator><name pos:line="114" pos:column="18">plugin<pos:position pos:line="114" pos:column="24"/></name><index pos:line="114" pos:column="24">[<expr><literal type="number" pos:line="114" pos:column="25">0<pos:position pos:line="114" pos:column="26"/></literal></expr>]<pos:position pos:line="114" pos:column="27"/></index></name> <operator pos:line="114" pos:column="28">==<pos:position pos:line="114" pos:column="30"/></operator> <literal type="number" pos:line="114" pos:column="31">0<pos:position pos:line="114" pos:column="32"/></literal></expr>)<pos:position pos:line="114" pos:column="33"/></condition><then pos:line="114" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="5">sstrncpy<pos:position pos:line="115" pos:column="13"/></name><argument_list pos:line="115" pos:column="13">(<argument><expr><name><name pos:line="115" pos:column="14">value_list<pos:position pos:line="115" pos:column="24"/></name><operator pos:line="115" pos:column="24">.<pos:position pos:line="115" pos:column="25"/></operator><name pos:line="115" pos:column="25">plugin<pos:position pos:line="115" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="33">"python"<pos:position pos:line="115" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="115" pos:column="43">sizeof<argument_list pos:line="115" pos:column="49">(<argument><expr><name><name pos:line="115" pos:column="50">value_list<pos:position pos:line="115" pos:column="60"/></name><operator pos:line="115" pos:column="60">.<pos:position pos:line="115" pos:column="61"/></operator><name pos:line="115" pos:column="61">plugin<pos:position pos:line="115" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="115" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="70"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="116" pos:column="3">Py_BEGIN_ALLOW_THREADS<pos:position pos:line="116" pos:column="25"/></name></expr>;<pos:position pos:line="116" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="117" pos:column="3">ret<pos:position pos:line="117" pos:column="6"/></name> <operator pos:line="117" pos:column="7">=<pos:position pos:line="117" pos:column="8"/></operator> <call><name pos:line="117" pos:column="9">plugin_dispatch_values<pos:position pos:line="117" pos:column="31"/></name><argument_list pos:line="117" pos:column="31">(<argument><expr><operator pos:line="117" pos:column="32">&amp;<pos:position pos:line="117" pos:column="37"/></operator><name pos:line="117" pos:column="33">value_list<pos:position pos:line="117" pos:column="43"/></name></expr></argument>)<pos:position pos:line="117" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name pos:line="118" pos:column="3">Py_END_ALLOW_THREADS<pos:position pos:line="118" pos:column="23"/></name></expr>;<pos:position pos:line="118" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="119" pos:column="3">meta_data_destroy<pos:position pos:line="119" pos:column="20"/></name><argument_list pos:line="119" pos:column="20">(<argument><expr><name><name pos:line="119" pos:column="21">value_list<pos:position pos:line="119" pos:column="31"/></name><operator pos:line="119" pos:column="31">.<pos:position pos:line="119" pos:column="32"/></operator><name pos:line="119" pos:column="32">meta<pos:position pos:line="119" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="120" pos:column="3">free<pos:position pos:line="120" pos:column="7"/></name><argument_list pos:line="120" pos:column="7">(<argument><expr><name pos:line="120" pos:column="8">value<pos:position pos:line="120" pos:column="13"/></name></expr></argument>)<pos:position pos:line="120" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="15"/></expr_stmt>
  <if pos:line="121" pos:column="3">if <condition pos:line="121" pos:column="6">(<expr><name pos:line="121" pos:column="7">ret<pos:position pos:line="121" pos:column="10"/></name> <operator pos:line="121" pos:column="11">!=<pos:position pos:line="121" pos:column="13"/></operator> <literal type="number" pos:line="121" pos:column="14">0<pos:position pos:line="121" pos:column="15"/></literal></expr>)<pos:position pos:line="121" pos:column="16"/></condition><then pos:line="121" pos:column="16"> <block pos:line="121" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="122" pos:column="5">PyErr_SetString<pos:position pos:line="122" pos:column="20"/></name><argument_list pos:line="122" pos:column="20">(<argument><expr><name pos:line="122" pos:column="21">PyExc_RuntimeError<pos:position pos:line="122" pos:column="39"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="123" pos:column="21">"error dispatching values, read the logs"<pos:position pos:line="123" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="64"/></expr_stmt>
    <return pos:line="124" pos:column="5">return <expr><name pos:line="124" pos:column="12">NULL<pos:position pos:line="124" pos:column="16"/></name></expr>;<pos:position pos:line="124" pos:column="17"/></return>
  }<pos:position pos:line="125" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="126" pos:column="3">Py_RETURN_NONE<pos:position pos:line="126" pos:column="17"/></name></expr>;<pos:position pos:line="126" pos:column="18"/></expr_stmt>
}<pos:position pos:line="127" pos:column="2"/></block></function></unit>

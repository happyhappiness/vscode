<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_827_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">bind_parse_generic_name_attr_value_list<pos:position pos:line="1" pos:column="51"/></name> <parameter_list pos:line="1" pos:column="52">(<parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">xpath_expression<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="83">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">list_callback_t<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">list_callback<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">void<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">user_data<pos:position pos:line="3" pos:column="20"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">xmlDoc<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">doc<pos:position pos:line="4" pos:column="16"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="18">xmlXPathContext<pos:position pos:line="4" pos:column="33"/></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">xpathCtx<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="5" pos:column="5">time_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">current_time<pos:position pos:line="5" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="26">int<pos:position pos:line="5" pos:column="29"/></name></type> <name pos:line="5" pos:column="30">ds_type<pos:position pos:line="5" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="38"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">xmlXPathObject<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">xpathObj<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">NULL<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">num_entries<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">xpathObj<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <macro><name pos:line="10" pos:column="14">xmlXPathEvalExpression<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument pos:line="10" pos:column="37">BAD_CAST xpath_expression<pos:position pos:line="10" pos:column="62"/></argument>, <argument pos:line="10" pos:column="64">xpathCtx<pos:position pos:line="10" pos:column="72"/></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></macro></expr>;<pos:position pos:line="10" pos:column="74"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">xpathObj<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">==<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">NULL<pos:position pos:line="11" pos:column="23"/></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><literal type="string" pos:line="13" pos:column="11">"bind plugin: Unable to evaluate XPath expression `%s'."<pos:position pos:line="13" pos:column="67"/></literal></expr></argument>,
        <argument><expr><name pos:line="14" pos:column="9">xpath_expression<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal><operator pos:line="15" pos:column="15">)<pos:position pos:line="15" pos:column="16"/></operator></expr>;<pos:position pos:line="15" pos:column="17"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">num_entries<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
  <comment type="block" pos:line="19" pos:column="3">/* Iterate over all matching nodes. */</comment>
  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init><decl><type><name pos:line="20" pos:column="8">int<pos:position pos:line="20" pos:column="11"/></name></type> <name pos:line="20" pos:column="12">i<pos:position pos:line="20" pos:column="13"/></name> <init pos:line="20" pos:column="14">= <expr><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="18"/></init> <condition><expr><name><name pos:line="20" pos:column="19">xpathObj<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">nodesetval<pos:position pos:line="20" pos:column="39"/></name></name> <operator pos:line="20" pos:column="40">&amp;&amp;<pos:position pos:line="20" pos:column="50"/></operator> <operator pos:line="20" pos:column="43">(<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">i<pos:position pos:line="20" pos:column="45"/></name> <operator pos:line="20" pos:column="46">&lt;<pos:position pos:line="20" pos:column="50"/></operator> <name><name pos:line="20" pos:column="48">xpathObj<pos:position pos:line="20" pos:column="56"/></name><operator pos:line="20" pos:column="56">-&gt;<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="58">nodesetval<pos:position pos:line="20" pos:column="68"/></name><operator pos:line="20" pos:column="68">-&gt;<pos:position pos:line="20" pos:column="73"/></operator><name pos:line="20" pos:column="70">nodeNr<pos:position pos:line="20" pos:column="76"/></name></name><operator pos:line="20" pos:column="76">)<pos:position pos:line="20" pos:column="77"/></operator></expr>;<pos:position pos:line="20" pos:column="78"/></condition> <incr><expr><name pos:line="20" pos:column="79">i<pos:position pos:line="20" pos:column="80"/></name><operator pos:line="20" pos:column="80">++<pos:position pos:line="20" pos:column="82"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="83"/></control>
  <block pos:line="21" pos:column="3">{
    <comment type="block" pos:line="22" pos:column="5">/* Iterate over all child nodes. */</comment>
    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><decl><type><name pos:line="23" pos:column="10">xmlNode<pos:position pos:line="23" pos:column="17"/></name> <modifier pos:line="23" pos:column="18">*<pos:position pos:line="23" pos:column="19"/></modifier></type><name pos:line="23" pos:column="19">child<pos:position pos:line="23" pos:column="24"/></name> <init pos:line="23" pos:column="25">= <expr><name><name pos:line="23" pos:column="27">xpathObj<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">nodesetval<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">-&gt;<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="49">nodeTab<pos:position pos:line="23" pos:column="56"/></name><index pos:line="23" pos:column="56">[<expr><name pos:line="23" pos:column="57">i<pos:position pos:line="23" pos:column="58"/></name></expr>]<pos:position pos:line="23" pos:column="59"/></index></name><operator pos:line="23" pos:column="59">-&gt;<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="61">xmlChildrenNode<pos:position pos:line="23" pos:column="76"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="77"/></init>
        <condition><expr><name pos:line="24" pos:column="9">child<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">!=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">NULL<pos:position pos:line="24" pos:column="22"/></name></expr>;<pos:position pos:line="24" pos:column="23"/></condition>
        <incr><expr><name pos:line="25" pos:column="9">child<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name><name pos:line="25" pos:column="17">child<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">next<pos:position pos:line="25" pos:column="28"/></name></name></expr></incr>)<pos:position pos:line="25" pos:column="29"/></control>
    <block pos:line="26" pos:column="5">{
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name><name pos:line="27" pos:column="11">child<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">type<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">!=<pos:position pos:line="27" pos:column="25"/></operator> <name pos:line="27" pos:column="26">XML_ELEMENT_NODE<pos:position pos:line="27" pos:column="42"/></name></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43">
        <block type="pseudo"><continue pos:line="28" pos:column="9">continue;<pos:position pos:line="28" pos:column="18"/></continue></block></then></if>

      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><call><name pos:line="30" pos:column="11">strncmp<pos:position pos:line="30" pos:column="18"/></name> <argument_list pos:line="30" pos:column="19">(<argument><expr><literal type="string" pos:line="30" pos:column="20">"counter"<pos:position pos:line="30" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="31">(<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">char<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">*<pos:position pos:line="30" pos:column="38"/></operator><operator pos:line="30" pos:column="38">)<pos:position pos:line="30" pos:column="39"/></operator> <name><name pos:line="30" pos:column="40">child<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">-&gt;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="47">name<pos:position pos:line="30" pos:column="51"/></name></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="53">strlen<pos:position pos:line="30" pos:column="59"/></name> <argument_list pos:line="30" pos:column="60">(<argument><expr><literal type="string" pos:line="30" pos:column="61">"counter"<pos:position pos:line="30" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="72"/></argument_list></call> <operator pos:line="30" pos:column="73">!=<pos:position pos:line="30" pos:column="75"/></operator> <literal type="number" pos:line="30" pos:column="76">0<pos:position pos:line="30" pos:column="77"/></literal></expr>)<pos:position pos:line="30" pos:column="78"/></condition><then pos:line="30" pos:column="78">
        <block type="pseudo"><continue pos:line="31" pos:column="9">continue;<pos:position pos:line="31" pos:column="18"/></continue></block></then></if>

      <decl_stmt><decl><type><name pos:line="33" pos:column="7">char<pos:position pos:line="33" pos:column="11"/></name> <modifier pos:line="33" pos:column="12">*<pos:position pos:line="33" pos:column="13"/></modifier></type><name pos:line="33" pos:column="13">attr_name<pos:position pos:line="33" pos:column="22"/></name></decl>;<pos:position pos:line="33" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="34" pos:column="7">value_t<pos:position pos:line="34" pos:column="14"/></name></type> <name pos:line="34" pos:column="15">value<pos:position pos:line="34" pos:column="20"/></name></decl>;<pos:position pos:line="34" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="35" pos:column="7">int<pos:position pos:line="35" pos:column="10"/></name></type> <name pos:line="35" pos:column="11">status<pos:position pos:line="35" pos:column="17"/></name></decl>;<pos:position pos:line="35" pos:column="18"/></decl_stmt>

      <expr_stmt><expr><name pos:line="37" pos:column="7">attr_name<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <operator pos:line="37" pos:column="19">(<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">char<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">*<pos:position pos:line="37" pos:column="26"/></operator><operator pos:line="37" pos:column="26">)<pos:position pos:line="37" pos:column="27"/></operator> <call><name pos:line="37" pos:column="28">xmlGetProp<pos:position pos:line="37" pos:column="38"/></name> <argument_list pos:line="37" pos:column="39">(<argument><expr><name pos:line="37" pos:column="40">child<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="47">BAD_CAST<pos:position pos:line="37" pos:column="55"/></name> <literal type="string" pos:line="37" pos:column="56">"name"<pos:position pos:line="37" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="64"/></expr_stmt>
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><name pos:line="38" pos:column="11">attr_name<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">==<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="24">NULL<pos:position pos:line="38" pos:column="28"/></name></expr>)<pos:position pos:line="38" pos:column="29"/></condition><then pos:line="38" pos:column="29">
      <block pos:line="39" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">DEBUG<pos:position pos:line="40" pos:column="14"/></name> <argument_list pos:line="40" pos:column="15">(<argument><expr><literal type="string" pos:line="40" pos:column="16">"bind plugin: found &lt;counter&gt; without name."<pos:position pos:line="40" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="62"/></expr_stmt>
        <continue pos:line="41" pos:column="9">continue;<pos:position pos:line="41" pos:column="18"/></continue>
      }<pos:position pos:line="42" pos:column="8"/></block></then></if>
      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><name pos:line="43" pos:column="11">ds_type<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">==<pos:position pos:line="43" pos:column="21"/></operator> <name pos:line="43" pos:column="22">DS_TYPE_GAUGE<pos:position pos:line="43" pos:column="35"/></name></expr>)<pos:position pos:line="43" pos:column="36"/></condition><then pos:line="43" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="9">status<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">bind_xml_read_gauge<pos:position pos:line="44" pos:column="37"/></name> <argument_list pos:line="44" pos:column="38">(<argument><expr><name pos:line="44" pos:column="39">doc<pos:position pos:line="44" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="44">child<pos:position pos:line="44" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="51">&amp;<pos:position pos:line="44" pos:column="56"/></operator><name><name pos:line="44" pos:column="52">value<pos:position pos:line="44" pos:column="57"/></name><operator pos:line="44" pos:column="57">.<pos:position pos:line="44" pos:column="58"/></operator><name pos:line="44" pos:column="58">gauge<pos:position pos:line="44" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="65"/></expr_stmt></block></then>
      <else pos:line="45" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="9">status<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <call><name pos:line="46" pos:column="18">bind_xml_read_derive<pos:position pos:line="46" pos:column="38"/></name> <argument_list pos:line="46" pos:column="39">(<argument><expr><name pos:line="46" pos:column="40">doc<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="45">child<pos:position pos:line="46" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="52">&amp;<pos:position pos:line="46" pos:column="57"/></operator><name><name pos:line="46" pos:column="53">value<pos:position pos:line="46" pos:column="58"/></name><operator pos:line="46" pos:column="58">.<pos:position pos:line="46" pos:column="59"/></operator><name pos:line="46" pos:column="59">derive<pos:position pos:line="46" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt></block></else></if>
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><name pos:line="47" pos:column="11">status<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">!=<pos:position pos:line="47" pos:column="20"/></operator> <literal type="number" pos:line="47" pos:column="21">0<pos:position pos:line="47" pos:column="22"/></literal></expr>)<pos:position pos:line="47" pos:column="23"/></condition><then pos:line="47" pos:column="23">
        <block type="pseudo"><continue pos:line="48" pos:column="9">continue;<pos:position pos:line="48" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><name pos:line="50" pos:column="7">status<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <call pos:line="50" pos:column="16">(<modifier pos:line="50" pos:column="17">*<pos:position pos:line="50" pos:column="18"/></modifier><name pos:line="50" pos:column="18">list_callback<pos:position pos:line="50" pos:column="31"/></name>) <argument_list pos:line="50" pos:column="33">(<argument><expr><name pos:line="50" pos:column="34">attr_name<pos:position pos:line="50" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="45">value<pos:position pos:line="50" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="52">current_time<pos:position pos:line="50" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="66">user_data<pos:position pos:line="50" pos:column="75"/></name></expr></argument>)<pos:position pos:line="50" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="77"/></expr_stmt>
      <if pos:line="51" pos:column="7">if <condition pos:line="51" pos:column="10">(<expr><name pos:line="51" pos:column="11">status<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">==<pos:position pos:line="51" pos:column="20"/></operator> <literal type="number" pos:line="51" pos:column="21">0<pos:position pos:line="51" pos:column="22"/></literal></expr>)<pos:position pos:line="51" pos:column="23"/></condition><then pos:line="51" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="9">num_entries<pos:position pos:line="52" pos:column="20"/></name><operator pos:line="52" pos:column="20">++<pos:position pos:line="52" pos:column="22"/></operator></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt></block></then></if>
    }<pos:position pos:line="53" pos:column="6"/></block></for>
  }<pos:position pos:line="54" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">DEBUG<pos:position pos:line="56" pos:column="8"/></name> <argument_list pos:line="56" pos:column="9">(<argument><expr><literal type="string" pos:line="56" pos:column="10">"bind plugin: Found %d %s for XPath expression `%s'"<pos:position pos:line="56" pos:column="62"/></literal></expr></argument>,
      <argument><expr><name pos:line="57" pos:column="7">num_entries<pos:position pos:line="57" pos:column="18"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="57" pos:column="20">(<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="21">num_entries<pos:position pos:line="57" pos:column="32"/></name> <operator pos:line="57" pos:column="33">==<pos:position pos:line="57" pos:column="35"/></operator> <literal type="number" pos:line="57" pos:column="36">1<pos:position pos:line="57" pos:column="37"/></literal><operator pos:line="57" pos:column="37">)<pos:position pos:line="57" pos:column="38"/></operator></expr> ?<pos:position pos:line="57" pos:column="40"/></condition><then pos:line="57" pos:column="40"> <expr><literal type="string" pos:line="57" pos:column="41">"entry"<pos:position pos:line="57" pos:column="48"/></literal></expr> <pos:position pos:line="57" pos:column="49"/></then><else pos:line="57" pos:column="49">: <expr><literal type="string" pos:line="57" pos:column="51">"entries"<pos:position pos:line="57" pos:column="60"/></literal></expr></else></ternary></expr></argument>,
      <argument><expr><name pos:line="58" pos:column="7">xpath_expression<pos:position pos:line="58" pos:column="23"/></name></expr></argument>)<pos:position pos:line="58" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="60" pos:column="3">xmlXPathFreeObject<pos:position pos:line="60" pos:column="21"/></name><argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">xpathObj<pos:position pos:line="60" pos:column="30"/></name></expr></argument>)<pos:position pos:line="60" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="32"/></expr_stmt>

  <return pos:line="62" pos:column="3">return <expr><operator pos:line="62" pos:column="10">(<pos:position pos:line="62" pos:column="11"/></operator><literal type="number" pos:line="62" pos:column="11">0<pos:position pos:line="62" pos:column="12"/></literal><operator pos:line="62" pos:column="12">)<pos:position pos:line="62" pos:column="13"/></operator></expr>;<pos:position pos:line="62" pos:column="14"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

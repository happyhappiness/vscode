<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1194_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">v5_zfs_arc_counts<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">data_set_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">ds<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">value_list_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">vl<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list> <comment type="block" pos:line="1" pos:column="70">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">new_vl<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">_Bool<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">is_hits<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">vl<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">values_len<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">!=<pos:position pos:line="6" pos:column="24"/></operator> <literal type="number" pos:line="6" pos:column="25">4<pos:position pos:line="6" pos:column="26"/></literal></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">FC_TARGET_STOP<pos:position pos:line="7" pos:column="26"/></name></expr>;<pos:position pos:line="7" pos:column="27"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">strcmp<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><literal type="string" pos:line="9" pos:column="14">"hits"<pos:position pos:line="9" pos:column="20"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="22">vl<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">type_instance<pos:position pos:line="9" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call> <operator pos:line="9" pos:column="41">==<pos:position pos:line="9" pos:column="43"/></operator> <literal type="number" pos:line="9" pos:column="44">0<pos:position pos:line="9" pos:column="45"/></literal></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">is_hits<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <literal type="number" pos:line="10" pos:column="15">1<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt></block></then>
  <elseif pos:line="11" pos:column="3">else <if pos:line="11" pos:column="8">if <condition pos:line="11" pos:column="11">(<expr><call><name pos:line="11" pos:column="12">strcmp<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><literal type="string" pos:line="11" pos:column="19">"misses"<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="29">vl<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">type_instance<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call> <operator pos:line="11" pos:column="48">==<pos:position pos:line="11" pos:column="50"/></operator> <literal type="number" pos:line="11" pos:column="51">0<pos:position pos:line="11" pos:column="52"/></literal></expr>)<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">is_hits<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <literal type="number" pos:line="12" pos:column="15">0<pos:position pos:line="12" pos:column="16"/></literal></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt></block></then></if></elseif>
  <else pos:line="13" pos:column="3">else
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">FC_TARGET_STOP<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></return></block></else></if>

  <comment type="block" pos:line="16" pos:column="3">/* Copy everything: Time, interval, host, ... */</comment>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">memcpy<pos:position pos:line="17" pos:column="9"/></name><argument_list pos:line="17" pos:column="9">(<argument><expr><operator pos:line="17" pos:column="10">&amp;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="11">new_vl<pos:position pos:line="17" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="19">vl<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="23">sizeof<argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">new_vl<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Reset data we can't simply copy */</comment>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">new_vl<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">.<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">values<pos:position pos:line="20" pos:column="16"/></name></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <operator pos:line="20" pos:column="19">&amp;<pos:position pos:line="20" pos:column="24"/></operator><operator pos:line="20" pos:column="20">(<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">value_t<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">)<pos:position pos:line="20" pos:column="29"/></operator><block pos:line="20" pos:column="29">{<expr><operator pos:line="20" pos:column="30">.<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="31">gauge<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">=<pos:position pos:line="20" pos:column="38"/></operator> <name pos:line="20" pos:column="39">NAN<pos:position pos:line="20" pos:column="42"/></name></expr>}<pos:position pos:line="20" pos:column="43"/></block></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">new_vl<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">.<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">values_len<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="23">1<pos:position pos:line="21" pos:column="24"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">new_vl<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">.<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">meta<pos:position pos:line="22" pos:column="14"/></name></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">NULL<pos:position pos:line="22" pos:column="21"/></name></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="24" pos:column="3">/* Change the type to "cache_result" */</comment>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">sstrncpy<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name><name pos:line="25" pos:column="12">new_vl<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">type<pos:position pos:line="25" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="25">"cache_result"<pos:position pos:line="25" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="41">sizeof<argument_list pos:line="25" pos:column="47">(<argument><expr><name><name pos:line="25" pos:column="48">new_vl<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">.<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="55">type<pos:position pos:line="25" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>

  <comment type="block" pos:line="27" pos:column="3">/* Dispatch new value lists instead of this one */</comment>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">new_vl<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">.<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">values<pos:position pos:line="28" pos:column="16"/></name><index pos:line="28" pos:column="16">[<expr><literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal></expr>]<pos:position pos:line="28" pos:column="19"/></index></name><operator pos:line="28" pos:column="19">.<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">derive<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <operator pos:line="28" pos:column="29">(<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">derive_t<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">)<pos:position pos:line="28" pos:column="39"/></operator><name><name pos:line="28" pos:column="39">vl<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">-&gt;<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="43">values<pos:position pos:line="28" pos:column="49"/></name><index pos:line="28" pos:column="49">[<expr><literal type="number" pos:line="28" pos:column="50">0<pos:position pos:line="28" pos:column="51"/></literal></expr>]<pos:position pos:line="28" pos:column="52"/></index></name><operator pos:line="28" pos:column="52">.<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="53">counter<pos:position pos:line="28" pos:column="60"/></name></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">snprintf<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name><name pos:line="29" pos:column="12">new_vl<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">.<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">type_instance<pos:position pos:line="29" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="34">sizeof<argument_list pos:line="29" pos:column="40">(<argument><expr><name><name pos:line="29" pos:column="41">new_vl<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">.<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="48">type_instance<pos:position pos:line="29" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="64">"demand_data-%s"<pos:position pos:line="29" pos:column="80"/></literal></expr></argument>,
           <argument><expr><ternary><condition><expr><name pos:line="30" pos:column="12">is_hits<pos:position pos:line="30" pos:column="19"/></name></expr> ?<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21"> <expr><literal type="string" pos:line="30" pos:column="22">"hit"<pos:position pos:line="30" pos:column="27"/></literal></expr> <pos:position pos:line="30" pos:column="28"/></then><else pos:line="30" pos:column="28">: <expr><literal type="string" pos:line="30" pos:column="30">"miss"<pos:position pos:line="30" pos:column="36"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">plugin_dispatch_values<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><operator pos:line="31" pos:column="26">&amp;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="27">new_vl<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="33" pos:column="3">new_vl<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">.<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">values<pos:position pos:line="33" pos:column="16"/></name><index pos:line="33" pos:column="16">[<expr><literal type="number" pos:line="33" pos:column="17">0<pos:position pos:line="33" pos:column="18"/></literal></expr>]<pos:position pos:line="33" pos:column="19"/></index></name><operator pos:line="33" pos:column="19">.<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="20">derive<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <operator pos:line="33" pos:column="29">(<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">derive_t<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">)<pos:position pos:line="33" pos:column="39"/></operator><name><name pos:line="33" pos:column="39">vl<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">-&gt;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="43">values<pos:position pos:line="33" pos:column="49"/></name><index pos:line="33" pos:column="49">[<expr><literal type="number" pos:line="33" pos:column="50">1<pos:position pos:line="33" pos:column="51"/></literal></expr>]<pos:position pos:line="33" pos:column="52"/></index></name><operator pos:line="33" pos:column="52">.<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="53">counter<pos:position pos:line="33" pos:column="60"/></name></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">snprintf<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><name><name pos:line="34" pos:column="12">new_vl<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">.<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">type_instance<pos:position pos:line="34" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="34">sizeof<argument_list pos:line="34" pos:column="40">(<argument><expr><name><name pos:line="34" pos:column="41">new_vl<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">.<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="48">type_instance<pos:position pos:line="34" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></sizeof></expr></argument>,
           <argument><expr><literal type="string" pos:line="35" pos:column="12">"demand_metadata-%s"<pos:position pos:line="35" pos:column="32"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="35" pos:column="34">is_hits<pos:position pos:line="35" pos:column="41"/></name></expr> ?<pos:position pos:line="35" pos:column="43"/></condition><then pos:line="35" pos:column="43"> <expr><literal type="string" pos:line="35" pos:column="44">"hit"<pos:position pos:line="35" pos:column="49"/></literal></expr> <pos:position pos:line="35" pos:column="50"/></then><else pos:line="35" pos:column="50">: <expr><literal type="string" pos:line="35" pos:column="52">"miss"<pos:position pos:line="35" pos:column="58"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">plugin_dispatch_values<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><operator pos:line="36" pos:column="26">&amp;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="27">new_vl<pos:position pos:line="36" pos:column="33"/></name></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="38" pos:column="3">new_vl<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">.<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">values<pos:position pos:line="38" pos:column="16"/></name><index pos:line="38" pos:column="16">[<expr><literal type="number" pos:line="38" pos:column="17">0<pos:position pos:line="38" pos:column="18"/></literal></expr>]<pos:position pos:line="38" pos:column="19"/></index></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">derive<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <operator pos:line="38" pos:column="29">(<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">derive_t<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">)<pos:position pos:line="38" pos:column="39"/></operator><name><name pos:line="38" pos:column="39">vl<pos:position pos:line="38" pos:column="41"/></name><operator pos:line="38" pos:column="41">-&gt;<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="43">values<pos:position pos:line="38" pos:column="49"/></name><index pos:line="38" pos:column="49">[<expr><literal type="number" pos:line="38" pos:column="50">2<pos:position pos:line="38" pos:column="51"/></literal></expr>]<pos:position pos:line="38" pos:column="52"/></index></name><operator pos:line="38" pos:column="52">.<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="53">counter<pos:position pos:line="38" pos:column="60"/></name></expr>;<pos:position pos:line="38" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">snprintf<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><name><name pos:line="39" pos:column="12">new_vl<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">.<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">type_instance<pos:position pos:line="39" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="34">sizeof<argument_list pos:line="39" pos:column="40">(<argument><expr><name><name pos:line="39" pos:column="41">new_vl<pos:position pos:line="39" pos:column="47"/></name><operator pos:line="39" pos:column="47">.<pos:position pos:line="39" pos:column="48"/></operator><name pos:line="39" pos:column="48">type_instance<pos:position pos:line="39" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></sizeof></expr></argument>,
           <argument><expr><literal type="string" pos:line="40" pos:column="12">"prefetch_data-%s"<pos:position pos:line="40" pos:column="30"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="40" pos:column="32">is_hits<pos:position pos:line="40" pos:column="39"/></name></expr> ?<pos:position pos:line="40" pos:column="41"/></condition><then pos:line="40" pos:column="41"> <expr><literal type="string" pos:line="40" pos:column="42">"hit"<pos:position pos:line="40" pos:column="47"/></literal></expr> <pos:position pos:line="40" pos:column="48"/></then><else pos:line="40" pos:column="48">: <expr><literal type="string" pos:line="40" pos:column="50">"miss"<pos:position pos:line="40" pos:column="56"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">plugin_dispatch_values<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><operator pos:line="41" pos:column="26">&amp;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="27">new_vl<pos:position pos:line="41" pos:column="33"/></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="43" pos:column="3">new_vl<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">.<pos:position pos:line="43" pos:column="10"/></operator><name pos:line="43" pos:column="10">values<pos:position pos:line="43" pos:column="16"/></name><index pos:line="43" pos:column="16">[<expr><literal type="number" pos:line="43" pos:column="17">0<pos:position pos:line="43" pos:column="18"/></literal></expr>]<pos:position pos:line="43" pos:column="19"/></index></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">derive<pos:position pos:line="43" pos:column="26"/></name> <operator pos:line="43" pos:column="27">=<pos:position pos:line="43" pos:column="28"/></operator> <operator pos:line="43" pos:column="29">(<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="30">derive_t<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">)<pos:position pos:line="43" pos:column="39"/></operator><name><name pos:line="43" pos:column="39">vl<pos:position pos:line="43" pos:column="41"/></name><operator pos:line="43" pos:column="41">-&gt;<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="43">values<pos:position pos:line="43" pos:column="49"/></name><index pos:line="43" pos:column="49">[<expr><literal type="number" pos:line="43" pos:column="50">3<pos:position pos:line="43" pos:column="51"/></literal></expr>]<pos:position pos:line="43" pos:column="52"/></index></name><operator pos:line="43" pos:column="52">.<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="53">counter<pos:position pos:line="43" pos:column="60"/></name></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">snprintf<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name><name pos:line="44" pos:column="12">new_vl<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">.<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">type_instance<pos:position pos:line="44" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="34">sizeof<argument_list pos:line="44" pos:column="40">(<argument><expr><name><name pos:line="44" pos:column="41">new_vl<pos:position pos:line="44" pos:column="47"/></name><operator pos:line="44" pos:column="47">.<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="48">type_instance<pos:position pos:line="44" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="62"/></argument_list></sizeof></expr></argument>,
           <argument><expr><literal type="string" pos:line="45" pos:column="12">"prefetch_metadata-%s"<pos:position pos:line="45" pos:column="34"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="45" pos:column="36">is_hits<pos:position pos:line="45" pos:column="43"/></name></expr> ?<pos:position pos:line="45" pos:column="45"/></condition><then pos:line="45" pos:column="45"> <expr><literal type="string" pos:line="45" pos:column="46">"hit"<pos:position pos:line="45" pos:column="51"/></literal></expr> <pos:position pos:line="45" pos:column="52"/></then><else pos:line="45" pos:column="52">: <expr><literal type="string" pos:line="45" pos:column="54">"miss"<pos:position pos:line="45" pos:column="60"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="45" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">plugin_dispatch_values<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><operator pos:line="46" pos:column="26">&amp;<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="27">new_vl<pos:position pos:line="46" pos:column="33"/></name></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="48" pos:column="3">/* Abort processing */</comment>
  <return pos:line="49" pos:column="3">return <expr><name pos:line="49" pos:column="10">FC_TARGET_STOP<pos:position pos:line="49" pos:column="24"/></name></expr>;<pos:position pos:line="49" pos:column="25"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

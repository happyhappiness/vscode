<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1772_collectd-4.9.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">TC_DELETE_NUM_ENTRY<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">IPT_CHAINLABEL<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">chain<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="3" pos:column="21">unsigned<pos:position pos:line="3" pos:column="29"/></name> <name pos:line="3" pos:column="30">int<pos:position pos:line="3" pos:column="33"/></name></type> <name pos:line="3" pos:column="34">rulenum<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="4" pos:column="21">TC_HANDLE_T<pos:position pos:line="4" pos:column="32"/></name> <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier></type><name pos:line="4" pos:column="34">handle<pos:position pos:line="4" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="41"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">chain_head<pos:position pos:line="6" pos:column="26"/></name></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">c<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">rule_head<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">r<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">iptc_fn<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">TC_DELETE_NUM_ENTRY<pos:position pos:line="9" pos:column="38"/></name></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">c<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <call><name pos:line="11" pos:column="19">iptcc_find_label<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">chain<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="43">*<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="44">handle<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call><operator pos:line="11" pos:column="51">)<pos:position pos:line="11" pos:column="52"/></operator></expr>)<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53"> <block pos:line="11" pos:column="54">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">errno<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">ENOENT<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
		<return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">rulenum<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&gt;=<pos:position pos:line="16" pos:column="26"/></operator> <name><name pos:line="16" pos:column="24">c<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">num_rules<pos:position pos:line="16" pos:column="36"/></name></name></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37"> <block pos:line="16" pos:column="38">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">errno<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">E2BIG<pos:position pos:line="17" pos:column="30"/></name></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="21" pos:column="9">/* Take advantage of the double linked list if possible. */</comment>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">rulenum<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">+<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="23">1<pos:position pos:line="22" pos:column="24"/></literal> <operator pos:line="22" pos:column="25">&lt;=<pos:position pos:line="22" pos:column="30"/></operator> <name><name pos:line="22" pos:column="28">c<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">-&gt;<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="31">num_rules<pos:position pos:line="22" pos:column="40"/></name></name><operator pos:line="22" pos:column="40">/<pos:position pos:line="22" pos:column="41"/></operator><literal type="number" pos:line="22" pos:column="41">2<pos:position pos:line="22" pos:column="42"/></literal></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43"> <block pos:line="22" pos:column="44">{
		<expr_stmt><expr><name pos:line="23" pos:column="17">r<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <call><name pos:line="23" pos:column="21">iptcc_get_rule_num<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">c<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="43">rulenum<pos:position pos:line="23" pos:column="50"/></name> <operator pos:line="23" pos:column="51">+<pos:position pos:line="23" pos:column="52"/></operator> <literal type="number" pos:line="23" pos:column="53">1<pos:position pos:line="23" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then> <else pos:line="24" pos:column="11">else <block pos:line="24" pos:column="16">{
		<expr_stmt><expr><name pos:line="25" pos:column="17">r<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <call><name pos:line="25" pos:column="21">iptcc_get_rule_num_reverse<pos:position pos:line="25" pos:column="47"/></name><argument_list pos:line="25" pos:column="47">(<argument><expr><name pos:line="25" pos:column="48">c<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="51">c<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">num_rules<pos:position pos:line="25" pos:column="63"/></name></name> <operator pos:line="25" pos:column="64">-<pos:position pos:line="25" pos:column="65"/></operator> <name pos:line="25" pos:column="66">rulenum<pos:position pos:line="25" pos:column="73"/></name></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="28" pos:column="9">/* If we are about to delete the rule that is the current
	 * iterator, move rule iterator back.  next pointer will then
	 * point to real next node */</comment>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">r<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">==<pos:position pos:line="31" pos:column="17"/></operator> <name><operator pos:line="31" pos:column="18">(<pos:position pos:line="31" pos:column="19"/></operator><operator pos:line="31" pos:column="19">*<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">handle<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">)<pos:position pos:line="31" pos:column="27"/></operator><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">rule_iterator_cur<pos:position pos:line="31" pos:column="46"/></name></name></expr>)<pos:position pos:line="31" pos:column="47"/></condition><then pos:line="31" pos:column="47"> <block pos:line="31" pos:column="48">{
		<expr_stmt><expr><name><operator pos:line="32" pos:column="17">(<pos:position pos:line="32" pos:column="18"/></operator><operator pos:line="32" pos:column="18">*<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">handle<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">)<pos:position pos:line="32" pos:column="26"/></operator><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">rule_iterator_cur<pos:position pos:line="32" pos:column="45"/></name></name> <operator pos:line="32" pos:column="46">=<pos:position pos:line="32" pos:column="47"/></operator> 
			<call><name pos:line="33" pos:column="25">list_entry<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name><operator pos:line="33" pos:column="36">(<pos:position pos:line="33" pos:column="37"/></operator><operator pos:line="33" pos:column="37">*<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="38">handle<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">)<pos:position pos:line="33" pos:column="45"/></operator><operator pos:line="33" pos:column="45">-&gt;<pos:position pos:line="33" pos:column="50"/></operator><name><name pos:line="33" pos:column="47">rule_iterator_cur<pos:position pos:line="33" pos:column="64"/></name><operator pos:line="33" pos:column="64">-&gt;<pos:position pos:line="33" pos:column="69"/></operator><name pos:line="33" pos:column="66">list<pos:position pos:line="33" pos:column="70"/></name><operator pos:line="33" pos:column="70">.<pos:position pos:line="33" pos:column="71"/></operator><name pos:line="33" pos:column="71">prev<pos:position pos:line="33" pos:column="75"/></name></name></name></expr></argument>,
				   <argument><expr pos:line="34" pos:column="36">struct <name pos:line="34" pos:column="43">rule_head<pos:position pos:line="34" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="54">list<pos:position pos:line="34" pos:column="58"/></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="37" pos:column="9">c<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">num_rules<pos:position pos:line="37" pos:column="21"/></name></name><operator pos:line="37" pos:column="21">--<pos:position pos:line="37" pos:column="23"/></operator></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">iptcc_delete_rule<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><name pos:line="38" pos:column="27">r<pos:position pos:line="38" pos:column="28"/></name></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">set_changed<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><operator pos:line="40" pos:column="21">*<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">handle<pos:position pos:line="40" pos:column="28"/></name></expr></argument>)<pos:position pos:line="40" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>

	<return pos:line="42" pos:column="9">return <expr><literal type="number" pos:line="42" pos:column="16">1<pos:position pos:line="42" pos:column="17"/></literal></expr>;<pos:position pos:line="42" pos:column="18"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

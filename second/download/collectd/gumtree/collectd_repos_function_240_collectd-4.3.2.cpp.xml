<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_240_collectd-4.3.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_read<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">host_definition_t<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">host<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">time_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">now<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">host_head<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">==<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25">
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">INFO<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"snmp plugin: No hosts configured."<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal><operator pos:line="9" pos:column="15">)<pos:position pos:line="9" pos:column="16"/></operator></expr>;<pos:position pos:line="9" pos:column="17"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">now<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">time<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name></expr></argument>)<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">pthread_mutex_lock<pos:position pos:line="14" pos:column="21"/></name> <argument_list pos:line="14" pos:column="22">(<argument><expr><operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="24">host_lock<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
  <for pos:line="15" pos:column="3">for <control pos:line="15" pos:column="7">(<init><expr><name pos:line="15" pos:column="8">host<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">host_head<pos:position pos:line="15" pos:column="24"/></name></expr>;<pos:position pos:line="15" pos:column="25"/></init> <condition><expr><name pos:line="15" pos:column="26">host<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">!=<pos:position pos:line="15" pos:column="33"/></operator> <name pos:line="15" pos:column="34">NULL<pos:position pos:line="15" pos:column="38"/></name></expr>;<pos:position pos:line="15" pos:column="39"/></condition> <incr><expr><name pos:line="15" pos:column="40">host<pos:position pos:line="15" pos:column="44"/></name> <operator pos:line="15" pos:column="45">=<pos:position pos:line="15" pos:column="46"/></operator> <name><name pos:line="15" pos:column="47">host<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">next<pos:position pos:line="15" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="15" pos:column="58"/></control>
  <block pos:line="16" pos:column="3">{
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">host<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">state<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">!=<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">STATE_IDLE<pos:position pos:line="17" pos:column="34"/></name></expr>)<pos:position pos:line="17" pos:column="35"/></condition><then pos:line="17" pos:column="35">
      <block type="pseudo"><continue pos:line="18" pos:column="7">continue;<pos:position pos:line="18" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/* Skip this host if the next or a later iteration will be sufficient. */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">host<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">next_update<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">&gt;=<pos:position pos:line="21" pos:column="32"/></operator> <operator pos:line="21" pos:column="30">(<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">now<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">+<pos:position pos:line="21" pos:column="36"/></operator> <name pos:line="21" pos:column="37">interval_g<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">)<pos:position pos:line="21" pos:column="48"/></operator></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49">
      <block type="pseudo"><continue pos:line="22" pos:column="7">continue;<pos:position pos:line="22" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name><name pos:line="24" pos:column="5">host<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">state<pos:position pos:line="24" pos:column="16"/></name></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">STATE_WAIT<pos:position pos:line="24" pos:column="29"/></name></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">host<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">next_update<pos:position pos:line="25" pos:column="22"/></name></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">now<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">+<pos:position pos:line="25" pos:column="30"/></operator> <name><name pos:line="25" pos:column="31">host<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">interval<pos:position pos:line="25" pos:column="45"/></name></name></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></for> <comment type="block" pos:line="26" pos:column="5">/* for (host) */</comment>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">pthread_cond_broadcast<pos:position pos:line="28" pos:column="25"/></name> <argument_list pos:line="28" pos:column="26">(<argument><expr><operator pos:line="28" pos:column="27">&amp;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="28">host_cond<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">pthread_mutex_unlock<pos:position pos:line="29" pos:column="23"/></name> <argument_list pos:line="29" pos:column="24">(<argument><expr><operator pos:line="29" pos:column="25">&amp;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="26">host_lock<pos:position pos:line="29" pos:column="35"/></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>

  <return pos:line="31" pos:column="3">return <expr><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><literal type="number" pos:line="31" pos:column="11">0<pos:position pos:line="31" pos:column="12"/></literal><operator pos:line="31" pos:column="12">)<pos:position pos:line="31" pos:column="13"/></operator></expr>;<pos:position pos:line="31" pos:column="14"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

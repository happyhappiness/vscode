<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1897_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ntpd_send_request<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">req_code<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">req_items<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">req_size<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">req_data<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list> <block pos:line="2" pos:column="46">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">sd<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">req_pkt<pos:position pos:line="4" pos:column="17"/></name></name></type> <name pos:line="4" pos:column="18">req<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><block pos:line="4" pos:column="24">{<expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr>}<pos:position pos:line="4" pos:column="27"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">req_data_len<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">req_items<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">&gt;=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">assert<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><name pos:line="9" pos:column="10">req_size<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&gt;=<pos:position pos:line="9" pos:column="24"/></operator> <literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">sd<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <call><name pos:line="11" pos:column="13">ntpd_connect<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">()<pos:position pos:line="11" pos:column="27"/></argument_list></call><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator> <operator pos:line="11" pos:column="29">&lt;<pos:position pos:line="11" pos:column="33"/></operator> <literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">req<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">.<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">rm_vn_mode<pos:position pos:line="14" pos:column="17"/></name></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <call><name pos:line="14" pos:column="20">RM_VN_MODE<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="34">0<pos:position pos:line="14" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="37">0<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">req<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">.<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">auth_seq<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">AUTH_SEQ<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><literal type="number" pos:line="15" pos:column="27">0<pos:position pos:line="15" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="30">0<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">req<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">.<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">implementation<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">IMPL_XNTPD<pos:position pos:line="16" pos:column="34"/></name></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">req<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">.<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">request<pos:position pos:line="17" pos:column="14"/></name></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <operator pos:line="17" pos:column="17">(<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">unsigned<pos:position pos:line="17" pos:column="26"/></name> <name pos:line="17" pos:column="27">char<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">)<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">req_code<pos:position pos:line="17" pos:column="40"/></name></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">req_data_len<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call pos:line="19" pos:column="18">(<name pos:line="19" pos:column="19">size_t<pos:position pos:line="19" pos:column="25"/></name>)<argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">req_items<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">*<pos:position pos:line="19" pos:column="38"/></operator> <name pos:line="19" pos:column="39">req_size<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">assert<pos:position pos:line="21" pos:column="9"/></name><argument_list pos:line="21" pos:column="9">(<argument><expr><operator pos:line="21" pos:column="10">(<pos:position pos:line="21" pos:column="11"/></operator><operator pos:line="21" pos:column="11">(<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">req_data<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">!=<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">NULL<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">)<pos:position pos:line="21" pos:column="29"/></operator> <operator pos:line="21" pos:column="30">&amp;&amp;<pos:position pos:line="21" pos:column="40"/></operator> <operator pos:line="21" pos:column="33">(<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">req_data_len<pos:position pos:line="21" pos:column="46"/></name> <operator pos:line="21" pos:column="47">&gt;<pos:position pos:line="21" pos:column="51"/></operator> <literal type="number" pos:line="21" pos:column="49">0<pos:position pos:line="21" pos:column="50"/></literal><operator pos:line="21" pos:column="50">)<pos:position pos:line="21" pos:column="51"/></operator><operator pos:line="21" pos:column="51">)<pos:position pos:line="21" pos:column="52"/></operator> <operator pos:line="21" pos:column="53">||<pos:position pos:line="21" pos:column="55"/></operator>
         <operator pos:line="22" pos:column="10">(<pos:position pos:line="22" pos:column="11"/></operator><operator pos:line="22" pos:column="11">(<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">req_data<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">==<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">)<pos:position pos:line="22" pos:column="29"/></operator> <operator pos:line="22" pos:column="30">&amp;&amp;<pos:position pos:line="22" pos:column="40"/></operator> <operator pos:line="22" pos:column="33">(<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">req_items<pos:position pos:line="22" pos:column="43"/></name> <operator pos:line="22" pos:column="44">==<pos:position pos:line="22" pos:column="46"/></operator> <literal type="number" pos:line="22" pos:column="47">0<pos:position pos:line="22" pos:column="48"/></literal><operator pos:line="22" pos:column="48">)<pos:position pos:line="22" pos:column="49"/></operator> <operator pos:line="22" pos:column="50">&amp;&amp;<pos:position pos:line="22" pos:column="60"/></operator> <operator pos:line="22" pos:column="53">(<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="54">req_size<pos:position pos:line="22" pos:column="62"/></name> <operator pos:line="22" pos:column="63">==<pos:position pos:line="22" pos:column="65"/></operator> <literal type="number" pos:line="22" pos:column="66">0<pos:position pos:line="22" pos:column="67"/></literal><operator pos:line="22" pos:column="67">)<pos:position pos:line="22" pos:column="68"/></operator><operator pos:line="22" pos:column="68">)<pos:position pos:line="22" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="71"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="24" pos:column="3">req<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">.<pos:position pos:line="24" pos:column="7"/></operator><name pos:line="24" pos:column="7">err_nitems<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <call><name pos:line="24" pos:column="20">ERR_NITEMS<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><literal type="number" pos:line="24" pos:column="31">0<pos:position pos:line="24" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">req_items<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">req<pos:position pos:line="25" pos:column="6"/></name><operator pos:line="25" pos:column="6">.<pos:position pos:line="25" pos:column="7"/></operator><name pos:line="25" pos:column="7">mbz_itemsize<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">MBZ_ITEMSIZE<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">req_size<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">req_data<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">!=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">NULL<pos:position pos:line="27" pos:column="23"/></name></expr>)<pos:position pos:line="27" pos:column="24"/></condition><then pos:line="27" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="5">memcpy<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">void<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">*<pos:position pos:line="28" pos:column="19"/></operator><operator pos:line="28" pos:column="19">)<pos:position pos:line="28" pos:column="20"/></operator><name><name pos:line="28" pos:column="20">req<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">.<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">data<pos:position pos:line="28" pos:column="28"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="30">(<pos:position pos:line="28" pos:column="31"/></operator><specifier pos:line="28" pos:column="31">const<pos:position pos:line="28" pos:column="36"/></specifier> <name pos:line="28" pos:column="37">void<pos:position pos:line="28" pos:column="41"/></name> <operator pos:line="28" pos:column="42">*<pos:position pos:line="28" pos:column="43"/></operator><operator pos:line="28" pos:column="43">)<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="44">req_data<pos:position pos:line="28" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="54">req_data_len<pos:position pos:line="28" pos:column="66"/></name></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">DEBUG<pos:position pos:line="30" pos:column="8"/></name><argument_list pos:line="30" pos:column="8">(<argument><expr><literal type="string" pos:line="30" pos:column="9">"req_items = %i; req_size = %i; req_data = %p;"<pos:position pos:line="30" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">req_items<pos:position pos:line="30" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="69">req_size<pos:position pos:line="30" pos:column="77"/></name></expr></argument>,
        <argument><expr><operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">void<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">*<pos:position pos:line="31" pos:column="16"/></operator><operator pos:line="31" pos:column="16">)<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">req_data<pos:position pos:line="31" pos:column="25"/></name></expr></argument>)<pos:position pos:line="31" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name pos:line="33" pos:column="3">status<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <call><name pos:line="33" pos:column="12">swrite<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">sd<pos:position pos:line="33" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="23">(<pos:position pos:line="33" pos:column="24"/></operator><specifier pos:line="33" pos:column="24">const<pos:position pos:line="33" pos:column="29"/></specifier> <name pos:line="33" pos:column="30">char<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">*<pos:position pos:line="33" pos:column="36"/></operator><operator pos:line="33" pos:column="36">)<pos:position pos:line="33" pos:column="37"/></operator><operator pos:line="33" pos:column="37">&amp;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="38">req<pos:position pos:line="33" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="43">REQ_LEN_NOMAC<pos:position pos:line="33" pos:column="56"/></name></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">status<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">&lt;<pos:position pos:line="34" pos:column="18"/></operator> <literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>)<pos:position pos:line="34" pos:column="18"/></condition><then pos:line="34" pos:column="18"> <block pos:line="34" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">DEBUG<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><literal type="string" pos:line="35" pos:column="11">"`swrite' failed. Closing socket #%i"<pos:position pos:line="35" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">sd<pos:position pos:line="35" pos:column="52"/></name></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">close<pos:position pos:line="36" pos:column="10"/></name><argument_list pos:line="36" pos:column="10">(<argument><expr><name pos:line="36" pos:column="11">sd<pos:position pos:line="36" pos:column="13"/></name></expr></argument>)<pos:position pos:line="36" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">sock_descr<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <name pos:line="37" pos:column="18">sd<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <operator pos:line="37" pos:column="23">-<pos:position pos:line="37" pos:column="24"/></operator><literal type="number" pos:line="37" pos:column="24">1<pos:position pos:line="37" pos:column="25"/></literal></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">status<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">)<pos:position pos:line="38" pos:column="20"/></operator></expr>;<pos:position pos:line="38" pos:column="21"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <return pos:line="41" pos:column="3">return <expr><operator pos:line="41" pos:column="10">(<pos:position pos:line="41" pos:column="11"/></operator><literal type="number" pos:line="41" pos:column="11">0<pos:position pos:line="41" pos:column="12"/></literal><operator pos:line="41" pos:column="12">)<pos:position pos:line="41" pos:column="13"/></operator></expr>;<pos:position pos:line="41" pos:column="14"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_537_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">caddr_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">ipc_get_info<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">cid_t<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">cid<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">cmd<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">version<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">stsize<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">nmemb<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list> <comment type="block" pos:line="2" pos:column="41">/* {{{ */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">size<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">caddr_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">buff<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">get_ipc_info<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">cid<pos:position pos:line="7" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="25">cmd<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">version<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">buff<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="45">&amp;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="46">size<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call> <operator pos:line="7" pos:column="52">&lt;<pos:position pos:line="7" pos:column="56"/></operator> <literal type="number" pos:line="7" pos:column="54">0<pos:position pos:line="7" pos:column="55"/></literal></expr>)<pos:position pos:line="7" pos:column="56"/></condition><then pos:line="7" pos:column="56"> <block pos:line="7" pos:column="57">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">errno<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">!=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">ENOSPC<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25"> <block pos:line="8" pos:column="26">{
      <decl_stmt><decl><type><name pos:line="9" pos:column="7">char<pos:position pos:line="9" pos:column="11"/></name></type> <name><name pos:line="9" pos:column="12">errbuf<pos:position pos:line="9" pos:column="18"/></name><index pos:line="9" pos:column="18">[<expr><literal type="number" pos:line="9" pos:column="19">1024<pos:position pos:line="9" pos:column="23"/></literal></expr>]<pos:position pos:line="9" pos:column="24"/></index></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">WARNING<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><literal type="string" pos:line="10" pos:column="15">"ipc plugin: get_ipc_info: %s"<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="11" pos:column="15">sstrerror<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">errno<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">errbuf<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="40">sizeof<argument_list pos:line="11" pos:column="46">(<argument><expr><name pos:line="11" pos:column="47">errbuf<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt>
      <return pos:line="12" pos:column="7">return <expr><operator pos:line="12" pos:column="14">(<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">)<pos:position pos:line="12" pos:column="20"/></operator></expr>;<pos:position pos:line="12" pos:column="21"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">size<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">==<pos:position pos:line="16" pos:column="14"/></operator> <literal type="number" pos:line="16" pos:column="15">0<pos:position pos:line="16" pos:column="16"/></literal></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">NULL<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></return></block></then></if>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">size<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">%<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">stsize<pos:position pos:line="19" pos:column="20"/></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21"> <block pos:line="19" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ERROR<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><literal type="string" pos:line="20" pos:column="11">"ipc plugin: ipc_get_info: missmatch struct size and buffer size"<pos:position pos:line="20" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="78"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">NULL<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">)<pos:position pos:line="21" pos:column="18"/></operator></expr>;<pos:position pos:line="21" pos:column="19"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="24" pos:column="3">*<pos:position pos:line="24" pos:column="4"/></operator><name pos:line="24" pos:column="4">nmemb<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <name pos:line="24" pos:column="12">size<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">/<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">stsize<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name pos:line="26" pos:column="3">buff<pos:position pos:line="26" pos:column="7"/></name> <operator pos:line="26" pos:column="8">=<pos:position pos:line="26" pos:column="9"/></operator> <call><name pos:line="26" pos:column="10">malloc<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">size<pos:position pos:line="26" pos:column="21"/></name></expr></argument>)<pos:position pos:line="26" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">buff<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">==<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">NULL<pos:position pos:line="27" pos:column="19"/></name></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20"> <block pos:line="27" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><literal type="string" pos:line="28" pos:column="11">"ipc plugin: ipc_get_info malloc failed."<pos:position pos:line="28" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">NULL<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">)<pos:position pos:line="29" pos:column="18"/></operator></expr>;<pos:position pos:line="29" pos:column="19"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><call><name pos:line="32" pos:column="7">get_ipc_info<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><name pos:line="32" pos:column="20">cid<pos:position pos:line="32" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="25">cmd<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="30">version<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="39">buff<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="45">&amp;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="46">size<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call> <operator pos:line="32" pos:column="52">&lt;<pos:position pos:line="32" pos:column="56"/></operator> <literal type="number" pos:line="32" pos:column="54">0<pos:position pos:line="32" pos:column="55"/></literal></expr>)<pos:position pos:line="32" pos:column="56"/></condition><then pos:line="32" pos:column="56"> <block pos:line="32" pos:column="57">{
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name></type> <name><name pos:line="33" pos:column="10">errbuf<pos:position pos:line="33" pos:column="16"/></name><index pos:line="33" pos:column="16">[<expr><literal type="number" pos:line="33" pos:column="17">1024<pos:position pos:line="33" pos:column="21"/></literal></expr>]<pos:position pos:line="33" pos:column="22"/></index></name></decl>;<pos:position pos:line="33" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">WARNING<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><literal type="string" pos:line="34" pos:column="13">"ipc plugin: get_ipc_info: %s"<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="35" pos:column="13">sstrerror<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">errno<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="30">errbuf<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="38">sizeof<argument_list pos:line="35" pos:column="44">(<argument><expr><name pos:line="35" pos:column="45">errbuf<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">free<pos:position pos:line="36" pos:column="9"/></name><argument_list pos:line="36" pos:column="9">(<argument><expr><name pos:line="36" pos:column="10">buff<pos:position pos:line="36" pos:column="14"/></name></expr></argument>)<pos:position pos:line="36" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="16"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="13">NULL<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">)<pos:position pos:line="37" pos:column="18"/></operator></expr>;<pos:position pos:line="37" pos:column="19"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <return pos:line="40" pos:column="3">return <expr><name pos:line="40" pos:column="10">buff<pos:position pos:line="40" pos:column="14"/></name></expr>;<pos:position pos:line="40" pos:column="15"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

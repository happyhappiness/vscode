<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2_collectd-4.4.2.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name><modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type>
<name pos:line="2" pos:column="1">strchr<pos:position pos:line="2" pos:column="7"/></name><argument_list pos:line="2" pos:column="7">(<argument><expr><name pos:line="2" pos:column="8">str<pos:position pos:line="2" pos:column="11"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="13">ch<pos:position pos:line="2" pos:column="15"/></name></expr></argument>)<pos:position pos:line="2" pos:column="16"/></argument_list>
     const <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><name pos:line="3" pos:column="18">str<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">int<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">ch<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">p<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><expr><name pos:line="8" pos:column="8">p<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <name pos:line="8" pos:column="12">str<pos:position pos:line="8" pos:column="15"/></name></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><operator pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">p<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">!=<pos:position pos:line="8" pos:column="22"/></operator> <operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">char<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">)<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">ch<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">&amp;&amp;<pos:position pos:line="8" pos:column="42"/></operator> <operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">p<pos:position pos:line="8" pos:column="37"/></name> <operator pos:line="8" pos:column="38">!=<pos:position pos:line="8" pos:column="40"/></operator> <name pos:line="8" pos:column="41">LT_EOS_CHAR<pos:position pos:line="8" pos:column="52"/></name></expr>;<pos:position pos:line="8" pos:column="53"/></condition> <incr><expr><operator pos:line="8" pos:column="54">++<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="56">p<pos:position pos:line="8" pos:column="57"/></name></expr></incr>)<pos:position pos:line="8" pos:column="58"/></control>
    <comment type="block" pos:line="9" pos:column="5">/*NOWORK*/</comment><block type="pseudo"><empty_stmt pos:line="9" pos:column="15">;<pos:position pos:line="9" pos:column="16"/></empty_stmt></block></for>

  <return pos:line="11" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><operator pos:line="11" pos:column="11">*<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">p<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator> <operator pos:line="11" pos:column="17">(<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">char<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">)<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">ch<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator></expr> ?<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28"> <expr><name pos:line="11" pos:column="29">p<pos:position pos:line="11" pos:column="30"/></name></expr> <pos:position pos:line="11" pos:column="31"/></then><else pos:line="11" pos:column="31">: <expr><literal type="number" pos:line="11" pos:column="33">0<pos:position pos:line="11" pos:column="34"/></literal></expr></else></ternary></expr>;<pos:position pos:line="11" pos:column="35"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></unit>

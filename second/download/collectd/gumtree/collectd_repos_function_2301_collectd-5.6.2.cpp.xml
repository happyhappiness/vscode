<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2301_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">lcc_flush<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">lcc_connection_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">c<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">plugin<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="56">/* {{{ */</comment>
              <parameter><decl><type><name pos:line="2" pos:column="15">lcc_identifier_t<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">ident<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">timeout<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list> <block pos:line="2" pos:column="53">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">command<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><literal type="number" pos:line="3" pos:column="16">1024<pos:position pos:line="3" pos:column="20"/></literal></expr>]<pos:position pos:line="3" pos:column="21"/></index></name> <init pos:line="3" pos:column="22">= <expr><literal type="string" pos:line="3" pos:column="24">""<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">lcc_response_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">res<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">c<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">==<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">NULL<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17"> <block pos:line="7" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">lcc_set_errno<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">c<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="22">EINVAL<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal><operator pos:line="9" pos:column="15">)<pos:position pos:line="9" pos:column="16"/></operator></expr>;<pos:position pos:line="9" pos:column="17"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">SSTRCPY<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">command<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="20">"FLUSH"<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">timeout<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">&gt;<pos:position pos:line="14" pos:column="19"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">SSTRCATF<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name pos:line="15" pos:column="14">command<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">" timeout=%i"<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">timeout<pos:position pos:line="15" pos:column="45"/></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">plugin<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">!=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">NULL<pos:position pos:line="17" pos:column="21"/></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22"> <block pos:line="17" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name></type> <name><name pos:line="18" pos:column="10">buffer<pos:position pos:line="18" pos:column="16"/></name><index pos:line="18" pos:column="16">[<expr><literal type="number" pos:line="18" pos:column="17">2<pos:position pos:line="18" pos:column="18"/></literal> <operator pos:line="18" pos:column="19">*<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">LCC_NAME_LEN<pos:position pos:line="18" pos:column="33"/></name></expr>]<pos:position pos:line="18" pos:column="34"/></index></name></decl>;<pos:position pos:line="18" pos:column="35"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">SSTRCATF<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">command<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">" plugin=%s"<pos:position pos:line="19" pos:column="35"/></literal></expr></argument>,
             <argument><expr><call><name pos:line="20" pos:column="14">lcc_strescape<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">buffer<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">plugin<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="44">sizeof<argument_list pos:line="20" pos:column="50">(<argument><expr><name pos:line="20" pos:column="51">buffer<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">ident<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">!=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">NULL<pos:position pos:line="23" pos:column="20"/></name></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21"> <block pos:line="23" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">char<pos:position pos:line="24" pos:column="9"/></name></type> <name><name pos:line="24" pos:column="10">ident_str<pos:position pos:line="24" pos:column="19"/></name><index pos:line="24" pos:column="19">[<expr><literal type="number" pos:line="24" pos:column="20">6<pos:position pos:line="24" pos:column="21"/></literal> <operator pos:line="24" pos:column="22">*<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">LCC_NAME_LEN<pos:position pos:line="24" pos:column="36"/></name></expr>]<pos:position pos:line="24" pos:column="37"/></index></name></decl>;<pos:position pos:line="24" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name></type> <name><name pos:line="25" pos:column="10">ident_esc<pos:position pos:line="25" pos:column="19"/></name><index pos:line="25" pos:column="19">[<expr><literal type="number" pos:line="25" pos:column="20">12<pos:position pos:line="25" pos:column="22"/></literal> <operator pos:line="25" pos:column="23">*<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">LCC_NAME_LEN<pos:position pos:line="25" pos:column="37"/></name></expr>]<pos:position pos:line="25" pos:column="38"/></index></name></decl>;<pos:position pos:line="25" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">status<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">lcc_identifier_to_string<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">c<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="42">ident_str<pos:position pos:line="27" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="53">sizeof<argument_list pos:line="27" pos:column="59">(<argument><expr><name pos:line="27" pos:column="60">ident_str<pos:position pos:line="27" pos:column="69"/></name></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="27" pos:column="72">ident<pos:position pos:line="27" pos:column="77"/></name></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="79"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">status<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">!=<pos:position pos:line="28" pos:column="18"/></operator> <literal type="number" pos:line="28" pos:column="19">0<pos:position pos:line="28" pos:column="20"/></literal></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21">
      <block type="pseudo"><return pos:line="29" pos:column="7">return <expr><operator pos:line="29" pos:column="14">(<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">status<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">)<pos:position pos:line="29" pos:column="22"/></operator></expr>;<pos:position pos:line="29" pos:column="23"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">SSTRCATF<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">command<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">" identifier=%s"<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>,
             <argument><expr><call><name pos:line="32" pos:column="14">lcc_strescape<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">ident_esc<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="39">ident_str<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="50">sizeof<argument_list pos:line="32" pos:column="56">(<argument><expr><name pos:line="32" pos:column="57">ident_esc<pos:position pos:line="32" pos:column="66"/></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="70"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="35" pos:column="3">status<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <call><name pos:line="35" pos:column="12">lcc_sendreceive<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">c<pos:position pos:line="35" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="31">command<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="40">&amp;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="41">res<pos:position pos:line="35" pos:column="44"/></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">status<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">!=<pos:position pos:line="36" pos:column="16"/></operator> <literal type="number" pos:line="36" pos:column="17">0<pos:position pos:line="36" pos:column="18"/></literal></expr>)<pos:position pos:line="36" pos:column="19"/></condition><then pos:line="36" pos:column="19">
    <block type="pseudo"><return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="13">status<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">)<pos:position pos:line="37" pos:column="20"/></operator></expr>;<pos:position pos:line="37" pos:column="21"/></return></block></then></if>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name><name pos:line="39" pos:column="7">res<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">.<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="11">status<pos:position pos:line="39" pos:column="17"/></name></name> <operator pos:line="39" pos:column="18">!=<pos:position pos:line="39" pos:column="20"/></operator> <literal type="number" pos:line="39" pos:column="21">0<pos:position pos:line="39" pos:column="22"/></literal></expr>)<pos:position pos:line="39" pos:column="23"/></condition><then pos:line="39" pos:column="23"> <block pos:line="39" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">LCC_SET_ERRSTR<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><name pos:line="40" pos:column="20">c<pos:position pos:line="40" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="23">"Server error: %s"<pos:position pos:line="40" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="43">res<pos:position pos:line="40" pos:column="46"/></name><operator pos:line="40" pos:column="46">.<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="47">message<pos:position pos:line="40" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">lcc_response_free<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><operator pos:line="41" pos:column="23">&amp;<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="24">res<pos:position pos:line="41" pos:column="27"/></name></expr></argument>)<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator><operator pos:line="42" pos:column="13">-<pos:position pos:line="42" pos:column="14"/></operator><literal type="number" pos:line="42" pos:column="14">1<pos:position pos:line="42" pos:column="15"/></literal><operator pos:line="42" pos:column="15">)<pos:position pos:line="42" pos:column="16"/></operator></expr>;<pos:position pos:line="42" pos:column="17"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">lcc_response_free<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><operator pos:line="45" pos:column="21">&amp;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="22">res<pos:position pos:line="45" pos:column="25"/></name></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
  <return pos:line="46" pos:column="3">return <expr><operator pos:line="46" pos:column="10">(<pos:position pos:line="46" pos:column="11"/></operator><literal type="number" pos:line="46" pos:column="11">0<pos:position pos:line="46" pos:column="12"/></literal><operator pos:line="46" pos:column="12">)<pos:position pos:line="46" pos:column="13"/></operator></expr>;<pos:position pos:line="46" pos:column="14"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

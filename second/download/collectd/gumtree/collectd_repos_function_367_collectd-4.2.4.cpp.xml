<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_367_collectd-4.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pplugin_call_all<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">type<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="40">...<pos:position pos:line="1" pos:column="43"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">retvals<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">va_list<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">ap<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">dSP<pos:position pos:line="8" pos:column="12"/></name></expr>;<pos:position pos:line="8" pos:column="13"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">type<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">&lt;<pos:position pos:line="10" pos:column="23"/></operator> <literal type="number" pos:line="10" pos:column="21">0<pos:position pos:line="10" pos:column="22"/></literal><operator pos:line="10" pos:column="22">)<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">||<pos:position pos:line="10" pos:column="26"/></operator> <operator pos:line="10" pos:column="27">(<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">type<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">&gt;=<pos:position pos:line="10" pos:column="38"/></operator> <name pos:line="10" pos:column="36">PLUGIN_TYPES<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">)<pos:position pos:line="10" pos:column="49"/></operator></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">-<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">va_start<pos:position pos:line="13" pos:column="17"/></name> <argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">ap<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">type<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">ENTER<pos:position pos:line="15" pos:column="14"/></name></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">SAVETMPS<pos:position pos:line="16" pos:column="17"/></name></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">PUSHMARK<pos:position pos:line="18" pos:column="17"/></name> <argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">SP<pos:position pos:line="18" pos:column="21"/></name></expr></argument>)<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">XPUSHs<pos:position pos:line="20" pos:column="15"/></name> <argument_list pos:line="20" pos:column="16">(<argument><expr><call><name pos:line="20" pos:column="17">sv_2mortal<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><call><name pos:line="20" pos:column="29">Perl_newSViv<pos:position pos:line="20" pos:column="41"/></name> <argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">perl<pos:position pos:line="20" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="49">(<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">IV<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">)<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="53">type<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">PLUGIN_WRITE<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">==<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">type<pos:position pos:line="22" pos:column="33"/></name></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34"> <block pos:line="22" pos:column="35">{
		<comment type="block" pos:line="23" pos:column="17">/*
		 * $_[0] = $plugin_type;
		 *
		 * $_[1] =
		 * [
		 *   {
		 *     name =&gt; $ds_name,
		 *     type =&gt; $ds_type,
		 *     min  =&gt; $ds_min,
		 *     max  =&gt; $ds_max
		 *   },
		 *   ...
		 * ];
		 *
		 * $_[2] =
		 * {
		 *   values =&gt; [ $v1, ... ],
		 *   time   =&gt; $time,
		 *   host   =&gt; $hostname,
		 *   plugin =&gt; $plugin,
		 *   plugin_instance =&gt; $instance,
		 *   type_instance   =&gt; $type_instance
		 * };
		 */</comment>
		<decl_stmt><decl><type><name pos:line="47" pos:column="17">data_set_t<pos:position pos:line="47" pos:column="27"/></name>   <modifier pos:line="47" pos:column="30">*<pos:position pos:line="47" pos:column="31"/></modifier></type><name pos:line="47" pos:column="31">ds<pos:position pos:line="47" pos:column="33"/></name></decl>;<pos:position pos:line="47" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">value_list_t<pos:position pos:line="48" pos:column="29"/></name> <modifier pos:line="48" pos:column="30">*<pos:position pos:line="48" pos:column="31"/></modifier></type><name pos:line="48" pos:column="31">vl<pos:position pos:line="48" pos:column="33"/></name></decl>;<pos:position pos:line="48" pos:column="34"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="50" pos:column="17">AV<pos:position pos:line="50" pos:column="19"/></name> <modifier pos:line="50" pos:column="20">*<pos:position pos:line="50" pos:column="21"/></modifier></type><name pos:line="50" pos:column="21">pds<pos:position pos:line="50" pos:column="24"/></name> <init pos:line="50" pos:column="25">= <expr><call><name pos:line="50" pos:column="27">Perl_newAV<pos:position pos:line="50" pos:column="37"/></name> <argument_list pos:line="50" pos:column="38">(<argument><expr><name pos:line="50" pos:column="39">perl<pos:position pos:line="50" pos:column="43"/></name></expr></argument>)<pos:position pos:line="50" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="51" pos:column="17">HV<pos:position pos:line="51" pos:column="19"/></name> <modifier pos:line="51" pos:column="20">*<pos:position pos:line="51" pos:column="21"/></modifier></type><name pos:line="51" pos:column="21">pvl<pos:position pos:line="51" pos:column="24"/></name> <init pos:line="51" pos:column="25">= <expr><call><name pos:line="51" pos:column="27">Perl_newHV<pos:position pos:line="51" pos:column="37"/></name> <argument_list pos:line="51" pos:column="38">(<argument><expr><name pos:line="51" pos:column="39">perl<pos:position pos:line="51" pos:column="43"/></name></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="45"/></decl_stmt>

		<expr_stmt><expr><name pos:line="53" pos:column="17">ds<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <call><name pos:line="53" pos:column="22">va_arg<pos:position pos:line="53" pos:column="28"/></name> <argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">ap<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="34">data_set_t<pos:position pos:line="53" pos:column="44"/></name> <operator pos:line="53" pos:column="45">*<pos:position pos:line="53" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="54" pos:column="17">vl<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <call><name pos:line="54" pos:column="22">va_arg<pos:position pos:line="54" pos:column="28"/></name> <argument_list pos:line="54" pos:column="29">(<argument><expr><name pos:line="54" pos:column="30">ap<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="34">value_list_t<pos:position pos:line="54" pos:column="46"/></name> <operator pos:line="54" pos:column="47">*<pos:position pos:line="54" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="50"/></expr_stmt>

		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><operator pos:line="56" pos:column="21">-<pos:position pos:line="56" pos:column="22"/></operator><literal type="number" pos:line="56" pos:column="22">1<pos:position pos:line="56" pos:column="23"/></literal> <operator pos:line="56" pos:column="24">==<pos:position pos:line="56" pos:column="26"/></operator> <call><name pos:line="56" pos:column="27">data_set2av<pos:position pos:line="56" pos:column="38"/></name> <argument_list pos:line="56" pos:column="39">(<argument><expr><name pos:line="56" pos:column="40">ds<pos:position pos:line="56" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="44">pds<pos:position pos:line="56" pos:column="47"/></name></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="49"/></condition><then pos:line="56" pos:column="49">
			<block type="pseudo"><return pos:line="57" pos:column="25">return <expr><operator pos:line="57" pos:column="32">-<pos:position pos:line="57" pos:column="33"/></operator><literal type="number" pos:line="57" pos:column="33">1<pos:position pos:line="57" pos:column="34"/></literal></expr>;<pos:position pos:line="57" pos:column="35"/></return></block></then></if>

		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><operator pos:line="59" pos:column="21">-<pos:position pos:line="59" pos:column="22"/></operator><literal type="number" pos:line="59" pos:column="22">1<pos:position pos:line="59" pos:column="23"/></literal> <operator pos:line="59" pos:column="24">==<pos:position pos:line="59" pos:column="26"/></operator> <call><name pos:line="59" pos:column="27">value_list2hv<pos:position pos:line="59" pos:column="40"/></name> <argument_list pos:line="59" pos:column="41">(<argument><expr><name pos:line="59" pos:column="42">vl<pos:position pos:line="59" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="46">ds<pos:position pos:line="59" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="50">pvl<pos:position pos:line="59" pos:column="53"/></name></expr></argument>)<pos:position pos:line="59" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="55"/></condition><then pos:line="59" pos:column="55">
			<block type="pseudo"><return pos:line="60" pos:column="25">return <expr><operator pos:line="60" pos:column="32">-<pos:position pos:line="60" pos:column="33"/></operator><literal type="number" pos:line="60" pos:column="33">1<pos:position pos:line="60" pos:column="34"/></literal></expr>;<pos:position pos:line="60" pos:column="35"/></return></block></then></if>

		<expr_stmt><expr><call><name pos:line="62" pos:column="17">XPUSHs<pos:position pos:line="62" pos:column="23"/></name> <argument_list pos:line="62" pos:column="24">(<argument><expr><call><name pos:line="62" pos:column="25">sv_2mortal<pos:position pos:line="62" pos:column="35"/></name> <argument_list pos:line="62" pos:column="36">(<argument><expr><call><name pos:line="62" pos:column="37">Perl_newSVpv<pos:position pos:line="62" pos:column="49"/></name> <argument_list pos:line="62" pos:column="50">(<argument><expr><name pos:line="62" pos:column="51">perl<pos:position pos:line="62" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="57">ds<pos:position pos:line="62" pos:column="59"/></name><operator pos:line="62" pos:column="59">-&gt;<pos:position pos:line="62" pos:column="64"/></operator><name pos:line="62" pos:column="61">type<pos:position pos:line="62" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="67">0<pos:position pos:line="62" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">XPUSHs<pos:position pos:line="63" pos:column="23"/></name> <argument_list pos:line="63" pos:column="24">(<argument><expr><call><name pos:line="63" pos:column="25">sv_2mortal<pos:position pos:line="63" pos:column="35"/></name> <argument_list pos:line="63" pos:column="36">(<argument><expr><call><name pos:line="63" pos:column="37">Perl_newRV_noinc<pos:position pos:line="63" pos:column="53"/></name> <argument_list pos:line="63" pos:column="54">(<argument><expr><name pos:line="63" pos:column="55">perl<pos:position pos:line="63" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="61">(<pos:position pos:line="63" pos:column="62"/></operator><name pos:line="63" pos:column="62">SV<pos:position pos:line="63" pos:column="64"/></name> <operator pos:line="63" pos:column="65">*<pos:position pos:line="63" pos:column="66"/></operator><operator pos:line="63" pos:column="66">)<pos:position pos:line="63" pos:column="67"/></operator><name pos:line="63" pos:column="67">pds<pos:position pos:line="63" pos:column="70"/></name></expr></argument>)<pos:position pos:line="63" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="64" pos:column="17">XPUSHs<pos:position pos:line="64" pos:column="23"/></name> <argument_list pos:line="64" pos:column="24">(<argument><expr><call><name pos:line="64" pos:column="25">sv_2mortal<pos:position pos:line="64" pos:column="35"/></name> <argument_list pos:line="64" pos:column="36">(<argument><expr><call><name pos:line="64" pos:column="37">Perl_newRV_noinc<pos:position pos:line="64" pos:column="53"/></name> <argument_list pos:line="64" pos:column="54">(<argument><expr><name pos:line="64" pos:column="55">perl<pos:position pos:line="64" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="61">(<pos:position pos:line="64" pos:column="62"/></operator><name pos:line="64" pos:column="62">SV<pos:position pos:line="64" pos:column="64"/></name> <operator pos:line="64" pos:column="65">*<pos:position pos:line="64" pos:column="66"/></operator><operator pos:line="64" pos:column="66">)<pos:position pos:line="64" pos:column="67"/></operator><name pos:line="64" pos:column="67">pvl<pos:position pos:line="64" pos:column="70"/></name></expr></argument>)<pos:position pos:line="64" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="65" pos:column="10"/></block></then>
	<elseif pos:line="66" pos:column="9">else <if pos:line="66" pos:column="14">if <condition pos:line="66" pos:column="17">(<expr><name pos:line="66" pos:column="18">PLUGIN_LOG<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">==<pos:position pos:line="66" pos:column="31"/></operator> <name pos:line="66" pos:column="32">type<pos:position pos:line="66" pos:column="36"/></name></expr>)<pos:position pos:line="66" pos:column="37"/></condition><then pos:line="66" pos:column="37"> <block pos:line="66" pos:column="38">{
		<comment type="block" pos:line="67" pos:column="17">/*
		 * $_[0] = $level;
		 *
		 * $_[1] = $message;
		 */</comment>
		<expr_stmt><expr><call><name pos:line="72" pos:column="17">XPUSHs<pos:position pos:line="72" pos:column="23"/></name> <argument_list pos:line="72" pos:column="24">(<argument><expr><call><name pos:line="72" pos:column="25">sv_2mortal<pos:position pos:line="72" pos:column="35"/></name> <argument_list pos:line="72" pos:column="36">(<argument><expr><call><name pos:line="72" pos:column="37">Perl_newSViv<pos:position pos:line="72" pos:column="49"/></name> <argument_list pos:line="72" pos:column="50">(<argument><expr><name pos:line="72" pos:column="51">perl<pos:position pos:line="72" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="72" pos:column="57">va_arg<pos:position pos:line="72" pos:column="63"/></name> <argument_list pos:line="72" pos:column="64">(<argument><expr><name pos:line="72" pos:column="65">ap<pos:position pos:line="72" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="69">int<pos:position pos:line="72" pos:column="72"/></name></expr></argument>)<pos:position pos:line="72" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="73" pos:column="17">XPUSHs<pos:position pos:line="73" pos:column="23"/></name> <argument_list pos:line="73" pos:column="24">(<argument><expr><call><name pos:line="73" pos:column="25">sv_2mortal<pos:position pos:line="73" pos:column="35"/></name> <argument_list pos:line="73" pos:column="36">(<argument><expr><call><name pos:line="73" pos:column="37">Perl_newSVpv<pos:position pos:line="73" pos:column="49"/></name> <argument_list pos:line="73" pos:column="50">(<argument><expr><name pos:line="73" pos:column="51">perl<pos:position pos:line="73" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="57">va_arg<pos:position pos:line="73" pos:column="63"/></name> <argument_list pos:line="73" pos:column="64">(<argument><expr><name pos:line="73" pos:column="65">ap<pos:position pos:line="73" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="69">char<pos:position pos:line="73" pos:column="73"/></name> <operator pos:line="73" pos:column="74">*<pos:position pos:line="73" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="73" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="78">0<pos:position pos:line="73" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="83"/></expr_stmt>
	}<pos:position pos:line="74" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="76" pos:column="9">PUTBACK<pos:position pos:line="76" pos:column="16"/></name></expr>;<pos:position pos:line="76" pos:column="17"/></expr_stmt>

	<expr_stmt><expr><name pos:line="78" pos:column="9">retvals<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <call><name pos:line="78" pos:column="19">Perl_call_pv<pos:position pos:line="78" pos:column="31"/></name> <argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">perl<pos:position pos:line="78" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="39">"Collectd::plugin_call_all"<pos:position pos:line="78" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="68">G_SCALAR<pos:position pos:line="78" pos:column="76"/></name></expr></argument>)<pos:position pos:line="78" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="78"/></expr_stmt>

	<expr_stmt><expr><name pos:line="80" pos:column="9">SPAGAIN<pos:position pos:line="80" pos:column="16"/></name></expr>;<pos:position pos:line="80" pos:column="17"/></expr_stmt>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><literal type="number" pos:line="81" pos:column="13">0<pos:position pos:line="81" pos:column="14"/></literal> <operator pos:line="81" pos:column="15">&lt;<pos:position pos:line="81" pos:column="19"/></operator> <name pos:line="81" pos:column="17">retvals<pos:position pos:line="81" pos:column="24"/></name></expr>)<pos:position pos:line="81" pos:column="25"/></condition><then pos:line="81" pos:column="25"> <block pos:line="81" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="82" pos:column="17">SV<pos:position pos:line="82" pos:column="19"/></name> <modifier pos:line="82" pos:column="20">*<pos:position pos:line="82" pos:column="21"/></modifier></type><name pos:line="82" pos:column="21">tmp<pos:position pos:line="82" pos:column="24"/></name> <init pos:line="82" pos:column="25">= <expr><name pos:line="82" pos:column="27">POPs<pos:position pos:line="82" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="82" pos:column="32"/></decl_stmt>
		<if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><operator pos:line="83" pos:column="21">!<pos:position pos:line="83" pos:column="22"/></operator> <call><name pos:line="83" pos:column="23">SvTRUE<pos:position pos:line="83" pos:column="29"/></name> <argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">tmp<pos:position pos:line="83" pos:column="34"/></name></expr></argument>)<pos:position pos:line="83" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="36"/></condition><then pos:line="83" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="25">ret<pos:position pos:line="84" pos:column="28"/></name> <operator pos:line="84" pos:column="29">=<pos:position pos:line="84" pos:column="30"/></operator> <operator pos:line="84" pos:column="31">-<pos:position pos:line="84" pos:column="32"/></operator><literal type="number" pos:line="84" pos:column="32">1<pos:position pos:line="84" pos:column="33"/></literal></expr>;<pos:position pos:line="84" pos:column="34"/></expr_stmt></block></then></if>
	}<pos:position pos:line="85" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="87" pos:column="9">PUTBACK<pos:position pos:line="87" pos:column="16"/></name></expr>;<pos:position pos:line="87" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="88" pos:column="9">FREETMPS<pos:position pos:line="88" pos:column="17"/></name></expr>;<pos:position pos:line="88" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><name pos:line="89" pos:column="9">LEAVE<pos:position pos:line="89" pos:column="14"/></name></expr>;<pos:position pos:line="89" pos:column="15"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="91" pos:column="9">va_end<pos:position pos:line="91" pos:column="15"/></name> <argument_list pos:line="91" pos:column="16">(<argument><expr><name pos:line="91" pos:column="17">ap<pos:position pos:line="91" pos:column="19"/></name></expr></argument>)<pos:position pos:line="91" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="21"/></expr_stmt>
	<return pos:line="92" pos:column="9">return <expr><name pos:line="92" pos:column="16">ret<pos:position pos:line="92" pos:column="19"/></name></expr>;<pos:position pos:line="92" pos:column="20"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

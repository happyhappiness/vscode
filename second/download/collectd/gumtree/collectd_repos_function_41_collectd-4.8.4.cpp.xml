<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_41_collectd-4.8.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">lt_argz_insert<pos:position pos:line="2" pos:column="15"/></name> <parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier><modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">pargz<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">size_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">pargz_len<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">before<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name pos:line="3" pos:column="23">char<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">entry<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="35"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">error_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">error<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Prior to Sep 8, 2005, newlib had a bug where argz_insert(pargz,
     pargz_len, NULL, entry) failed with EINVAL.  */</comment>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">before<pos:position pos:line="9" pos:column="13"/></name></expr>)<pos:position pos:line="9" pos:column="14"/></condition><then pos:line="9" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">error<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">argz_insert<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">pargz<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">pargz_len<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">before<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">entry<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt></block></then>
  <else pos:line="11" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">error<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">argz_append<pos:position pos:line="12" pos:column="24"/></name> <argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">pargz<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="33">pargz_len<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">entry<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="51">1<pos:position pos:line="12" pos:column="52"/></literal> <operator pos:line="12" pos:column="53">+<pos:position pos:line="12" pos:column="54"/></operator> <call><name pos:line="12" pos:column="55">strlen<pos:position pos:line="12" pos:column="61"/></name> <argument_list pos:line="12" pos:column="62">(<argument><expr><name pos:line="12" pos:column="63">entry<pos:position pos:line="12" pos:column="68"/></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt></block></else></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">error<pos:position pos:line="14" pos:column="12"/></name></expr>)<pos:position pos:line="14" pos:column="13"/></condition><then pos:line="14" pos:column="13">
    <block pos:line="15" pos:column="5">{
      <switch pos:line="16" pos:column="7">switch <condition pos:line="16" pos:column="14">(<expr><name pos:line="16" pos:column="15">error<pos:position pos:line="16" pos:column="20"/></name></expr>)<pos:position pos:line="16" pos:column="21"/></condition>
	<block pos:line="17" pos:column="9">{
	<case pos:line="18" pos:column="9">case <expr><name pos:line="18" pos:column="14">ENOMEM<pos:position pos:line="18" pos:column="20"/></name></expr>:<pos:position pos:line="18" pos:column="21"/></case>
	  <expr_stmt><expr><call><name pos:line="19" pos:column="11">LT__SETERROR<pos:position pos:line="19" pos:column="23"/></name> <argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">NO_MEMORY<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
	  <break pos:line="20" pos:column="11">break;<pos:position pos:line="20" pos:column="17"/></break>
	<default pos:line="21" pos:column="9">default:<pos:position pos:line="21" pos:column="17"/></default>
	  <expr_stmt><expr><call><name pos:line="22" pos:column="11">LT__SETERROR<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">UNKNOWN<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
	  <break pos:line="23" pos:column="11">break;<pos:position pos:line="23" pos:column="17"/></break>
	}<pos:position pos:line="24" pos:column="10"/></block></switch>
      <return pos:line="25" pos:column="7">return <expr><literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal></expr>;<pos:position pos:line="25" pos:column="16"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

  <return pos:line="28" pos:column="3">return <expr><literal type="number" pos:line="28" pos:column="10">0<pos:position pos:line="28" pos:column="11"/></literal></expr>;<pos:position pos:line="28" pos:column="12"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1054_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_check_con_none<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">size_t<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">values_num<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">double<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">values<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier><modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">values_names<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list> <block pos:line="2" pos:column="51">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">num_critical<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">num_warning<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">num_okay<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">status_str<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><literal type="string" pos:line="6" pos:column="28">"UNKNOWN"<pos:position pos:line="6" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status_code<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">RET_UNKNOWN<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><decl><type><name pos:line="9" pos:column="8">size_t<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></init> <condition><expr><name pos:line="9" pos:column="22">i<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&lt;<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="26">values_num<pos:position pos:line="9" pos:column="36"/></name></expr>;<pos:position pos:line="9" pos:column="37"/></condition> <incr><expr><name pos:line="9" pos:column="38">i<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">++<pos:position pos:line="9" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="42"/></control> <block pos:line="9" pos:column="43">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">isnan<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name><name pos:line="10" pos:column="15">values<pos:position pos:line="10" pos:column="21"/></name><index pos:line="10" pos:column="21">[<expr><name pos:line="10" pos:column="22">i<pos:position pos:line="10" pos:column="23"/></name></expr>]<pos:position pos:line="10" pos:column="24"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26"> <block pos:line="10" pos:column="27">{
      <if pos:line="11" pos:column="7">if <condition pos:line="11" pos:column="10">(<expr><name pos:line="11" pos:column="11">nan_is_error_g<pos:position pos:line="11" pos:column="25"/></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">num_critical<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">++<pos:position pos:line="12" pos:column="23"/></operator></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt></block></then>
      <else pos:line="13" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="9">num_warning<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">++<pos:position pos:line="14" pos:column="22"/></operator></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt></block></else></if>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <elseif pos:line="15" pos:column="7">else <if pos:line="15" pos:column="12">if <condition pos:line="15" pos:column="15">(<expr><call><name pos:line="15" pos:column="16">match_range<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><operator pos:line="15" pos:column="28">&amp;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="29">range_critical_g<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="47">values<pos:position pos:line="15" pos:column="53"/></name><index pos:line="15" pos:column="53">[<expr><name pos:line="15" pos:column="54">i<pos:position pos:line="15" pos:column="55"/></name></expr>]<pos:position pos:line="15" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call> <operator pos:line="15" pos:column="58">!=<pos:position pos:line="15" pos:column="60"/></operator> <literal type="number" pos:line="15" pos:column="61">0<pos:position pos:line="15" pos:column="62"/></literal></expr>)<pos:position pos:line="15" pos:column="63"/></condition><then pos:line="15" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="7">num_critical<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">++<pos:position pos:line="16" pos:column="21"/></operator></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><call><name pos:line="17" pos:column="14">match_range<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="27">range_warning_g<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="44">values<pos:position pos:line="17" pos:column="50"/></name><index pos:line="17" pos:column="50">[<expr><name pos:line="17" pos:column="51">i<pos:position pos:line="17" pos:column="52"/></name></expr>]<pos:position pos:line="17" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call> <operator pos:line="17" pos:column="55">!=<pos:position pos:line="17" pos:column="57"/></operator> <literal type="number" pos:line="17" pos:column="58">0<pos:position pos:line="17" pos:column="59"/></literal></expr>)<pos:position pos:line="17" pos:column="60"/></condition><then pos:line="17" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="7">num_warning<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">++<pos:position pos:line="18" pos:column="20"/></operator></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt></block></then></if></elseif>
    <else pos:line="19" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="7">num_okay<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">++<pos:position pos:line="20" pos:column="17"/></operator></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt></block></else></if>
  }<pos:position pos:line="21" pos:column="4"/></block></for>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">num_critical<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">==<pos:position pos:line="23" pos:column="23"/></operator> <literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal><operator pos:line="23" pos:column="25">)<pos:position pos:line="23" pos:column="26"/></operator> <operator pos:line="23" pos:column="27">&amp;&amp;<pos:position pos:line="23" pos:column="37"/></operator> <operator pos:line="23" pos:column="30">(<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">num_warning<pos:position pos:line="23" pos:column="42"/></name> <operator pos:line="23" pos:column="43">==<pos:position pos:line="23" pos:column="45"/></operator> <literal type="number" pos:line="23" pos:column="46">0<pos:position pos:line="23" pos:column="47"/></literal><operator pos:line="23" pos:column="47">)<pos:position pos:line="23" pos:column="48"/></operator> <operator pos:line="23" pos:column="49">&amp;&amp;<pos:position pos:line="23" pos:column="59"/></operator> <operator pos:line="23" pos:column="52">(<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="53">num_okay<pos:position pos:line="23" pos:column="61"/></name> <operator pos:line="23" pos:column="62">==<pos:position pos:line="23" pos:column="64"/></operator> <literal type="number" pos:line="23" pos:column="65">0<pos:position pos:line="23" pos:column="66"/></literal><operator pos:line="23" pos:column="66">)<pos:position pos:line="23" pos:column="67"/></operator></expr>)<pos:position pos:line="23" pos:column="68"/></condition><then pos:line="23" pos:column="68"> <block pos:line="23" pos:column="69">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">printf<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="string" pos:line="24" pos:column="12">"WARNING: No defined values found\n"<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">RET_WARNING<pos:position pos:line="25" pos:column="23"/></name></expr>;<pos:position pos:line="25" pos:column="24"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then> <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">num_critical<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">==<pos:position pos:line="26" pos:column="30"/></operator> <literal type="number" pos:line="26" pos:column="31">0<pos:position pos:line="26" pos:column="32"/></literal><operator pos:line="26" pos:column="32">)<pos:position pos:line="26" pos:column="33"/></operator> <operator pos:line="26" pos:column="34">&amp;&amp;<pos:position pos:line="26" pos:column="44"/></operator> <operator pos:line="26" pos:column="37">(<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">num_warning<pos:position pos:line="26" pos:column="49"/></name> <operator pos:line="26" pos:column="50">==<pos:position pos:line="26" pos:column="52"/></operator> <literal type="number" pos:line="26" pos:column="53">0<pos:position pos:line="26" pos:column="54"/></literal><operator pos:line="26" pos:column="54">)<pos:position pos:line="26" pos:column="55"/></operator></expr>)<pos:position pos:line="26" pos:column="56"/></condition><then pos:line="26" pos:column="56"> <block pos:line="26" pos:column="57">{
    <expr_stmt><expr><name pos:line="27" pos:column="5">status_str<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="string" pos:line="27" pos:column="18">"OKAY"<pos:position pos:line="27" pos:column="24"/></literal></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">status_code<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">RET_OKAY<pos:position pos:line="28" pos:column="27"/></name></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if></elseif> <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><name pos:line="29" pos:column="14">num_critical<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">==<pos:position pos:line="29" pos:column="29"/></operator> <literal type="number" pos:line="29" pos:column="30">0<pos:position pos:line="29" pos:column="31"/></literal></expr>)<pos:position pos:line="29" pos:column="32"/></condition><then pos:line="29" pos:column="32"> <block pos:line="29" pos:column="33">{
    <expr_stmt><expr><name pos:line="30" pos:column="5">status_str<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="string" pos:line="30" pos:column="18">"WARNING"<pos:position pos:line="30" pos:column="27"/></literal></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">status_code<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">RET_WARNING<pos:position pos:line="31" pos:column="30"/></name></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if></elseif> <else pos:line="32" pos:column="5">else <block pos:line="32" pos:column="10">{
    <expr_stmt><expr><name pos:line="33" pos:column="5">status_str<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="string" pos:line="33" pos:column="18">"CRITICAL"<pos:position pos:line="33" pos:column="28"/></literal></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">status_code<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name pos:line="34" pos:column="19">RET_CRITICAL<pos:position pos:line="34" pos:column="31"/></name></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">printf<pos:position pos:line="37" pos:column="9"/></name><argument_list pos:line="37" pos:column="9">(<argument><expr><literal type="string" pos:line="37" pos:column="10">"%s: %i critical, %i warning, %i okay"<pos:position pos:line="37" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="50">status_str<pos:position pos:line="37" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="62">num_critical<pos:position pos:line="37" pos:column="74"/></name></expr></argument>,
         <argument><expr><name pos:line="38" pos:column="10">num_warning<pos:position pos:line="38" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="23">num_okay<pos:position pos:line="38" pos:column="31"/></name></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">values_num<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">&gt;<pos:position pos:line="39" pos:column="22"/></operator> <literal type="number" pos:line="39" pos:column="20">0<pos:position pos:line="39" pos:column="21"/></literal></expr>)<pos:position pos:line="39" pos:column="22"/></condition><then pos:line="39" pos:column="22"> <block pos:line="39" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">printf<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><literal type="string" pos:line="40" pos:column="12">" |"<pos:position pos:line="40" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="18"/></expr_stmt>
    <for pos:line="41" pos:column="5">for <control pos:line="41" pos:column="9">(<init><decl><type><name pos:line="41" pos:column="10">size_t<pos:position pos:line="41" pos:column="16"/></name></type> <name pos:line="41" pos:column="17">i<pos:position pos:line="41" pos:column="18"/></name> <init pos:line="41" pos:column="19">= <expr><literal type="number" pos:line="41" pos:column="21">0<pos:position pos:line="41" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="23"/></init> <condition><expr><name pos:line="41" pos:column="24">i<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">&lt;<pos:position pos:line="41" pos:column="30"/></operator> <name pos:line="41" pos:column="28">values_num<pos:position pos:line="41" pos:column="38"/></name></expr>;<pos:position pos:line="41" pos:column="39"/></condition> <incr><expr><name pos:line="41" pos:column="40">i<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">++<pos:position pos:line="41" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="44"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">printf<pos:position pos:line="42" pos:column="13"/></name><argument_list pos:line="42" pos:column="13">(<argument><expr><literal type="string" pos:line="42" pos:column="14">" %s=%f;;;;"<pos:position pos:line="42" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="28">values_names<pos:position pos:line="42" pos:column="40"/></name><index pos:line="42" pos:column="40">[<expr><name pos:line="42" pos:column="41">i<pos:position pos:line="42" pos:column="42"/></name></expr>]<pos:position pos:line="42" pos:column="43"/></index></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="45">values<pos:position pos:line="42" pos:column="51"/></name><index pos:line="42" pos:column="51">[<expr><name pos:line="42" pos:column="52">i<pos:position pos:line="42" pos:column="53"/></name></expr>]<pos:position pos:line="42" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="56"/></expr_stmt></block></for>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">printf<pos:position pos:line="44" pos:column="9"/></name><argument_list pos:line="44" pos:column="9">(<argument><expr><literal type="string" pos:line="44" pos:column="10">"\n"<pos:position pos:line="44" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="16"/></expr_stmt>

  <return pos:line="46" pos:column="3">return <expr><name pos:line="46" pos:column="10">status_code<pos:position pos:line="46" pos:column="21"/></name></expr>;<pos:position pos:line="46" pos:column="22"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_670_collectd-4.3.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">network_add_listen_socket<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">node<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">service<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">sockent_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">se<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">sockent_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">se_ptr<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">se_num<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">service<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">==<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">service<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">=<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="27">NET_DEFAULT_PORT<pos:position pos:line="8" pos:column="43"/></name></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">node<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">==<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">se<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <call><name pos:line="11" pos:column="22">network_create_default_socket<pos:position pos:line="11" pos:column="51"/></name> <argument_list pos:line="11" pos:column="52">(<argument><expr><literal type="number" pos:line="11" pos:column="53">1<pos:position pos:line="11" pos:column="54"/></literal></expr></argument> <comment type="block" pos:line="11" pos:column="55">/* listen == true */</comment>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="77"/></expr_stmt></block></then>
	<else pos:line="12" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">se<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <call><name pos:line="13" pos:column="22">network_create_socket<pos:position pos:line="13" pos:column="43"/></name> <argument_list pos:line="13" pos:column="44">(<argument><expr><name pos:line="13" pos:column="45">node<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">service<pos:position pos:line="13" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="60">1<pos:position pos:line="13" pos:column="61"/></literal></expr></argument> <comment type="block" pos:line="13" pos:column="62">/* listen == true */</comment>)<pos:position pos:line="13" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="84"/></expr_stmt></block></else></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">se<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">NULL<pos:position pos:line="15" pos:column="23"/></name></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator></expr>;<pos:position pos:line="16" pos:column="29"/></return></block></then></if>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">se_ptr<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">se<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></init> <condition><expr><name pos:line="18" pos:column="27">se_ptr<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">!=<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="37">NULL<pos:position pos:line="18" pos:column="41"/></name></expr>;<pos:position pos:line="18" pos:column="42"/></condition> <incr><expr><name pos:line="18" pos:column="43">se_ptr<pos:position pos:line="18" pos:column="49"/></name> <operator pos:line="18" pos:column="50">=<pos:position pos:line="18" pos:column="51"/></operator> <name><name pos:line="18" pos:column="52">se_ptr<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">-&gt;<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="60">next<pos:position pos:line="18" pos:column="64"/></name></name></expr></incr>)<pos:position pos:line="18" pos:column="65"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">se_num<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">++<pos:position pos:line="19" pos:column="25"/></operator></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt></block></for>

	<expr_stmt><expr><name pos:line="21" pos:column="9">listen_sockets<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <operator pos:line="21" pos:column="26">(<pos:position pos:line="21" pos:column="27"/></operator>struct <name pos:line="21" pos:column="34">pollfd<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">*<pos:position pos:line="21" pos:column="42"/></operator><operator pos:line="21" pos:column="42">)<pos:position pos:line="21" pos:column="43"/></operator> <call><name pos:line="21" pos:column="44">realloc<pos:position pos:line="21" pos:column="51"/></name> <argument_list pos:line="21" pos:column="52">(<argument><expr><name pos:line="21" pos:column="53">listen_sockets<pos:position pos:line="21" pos:column="67"/></name></expr></argument>,
			<argument><expr><operator pos:line="22" pos:column="25">(<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">listen_sockets_num<pos:position pos:line="22" pos:column="44"/></name> <operator pos:line="22" pos:column="45">+<pos:position pos:line="22" pos:column="46"/></operator> <name pos:line="22" pos:column="47">se_num<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">)<pos:position pos:line="22" pos:column="54"/></operator>
			<operator pos:line="23" pos:column="25">*<pos:position pos:line="23" pos:column="26"/></operator> <sizeof pos:line="23" pos:column="27">sizeof <argument_list pos:line="23" pos:column="34">(<argument><expr pos:line="23" pos:column="35">struct <name pos:line="23" pos:column="42">pollfd<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>

	<for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">se_ptr<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">se<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></init> <condition><expr><name pos:line="25" pos:column="27">se_ptr<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">!=<pos:position pos:line="25" pos:column="36"/></operator> <name pos:line="25" pos:column="37">NULL<pos:position pos:line="25" pos:column="41"/></name></expr>;<pos:position pos:line="25" pos:column="42"/></condition> <incr><expr><name pos:line="25" pos:column="43">se_ptr<pos:position pos:line="25" pos:column="49"/></name> <operator pos:line="25" pos:column="50">=<pos:position pos:line="25" pos:column="51"/></operator> <name><name pos:line="25" pos:column="52">se_ptr<pos:position pos:line="25" pos:column="58"/></name><operator pos:line="25" pos:column="58">-&gt;<pos:position pos:line="25" pos:column="63"/></operator><name pos:line="25" pos:column="60">next<pos:position pos:line="25" pos:column="64"/></name></name></expr></incr>)<pos:position pos:line="25" pos:column="65"/></control>
	<block pos:line="26" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">listen_sockets<pos:position pos:line="27" pos:column="31"/></name><index pos:line="27" pos:column="31">[<expr><name pos:line="27" pos:column="32">listen_sockets_num<pos:position pos:line="27" pos:column="50"/></name></expr>]<pos:position pos:line="27" pos:column="51"/></index></name><operator pos:line="27" pos:column="51">.<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="52">fd<pos:position pos:line="27" pos:column="54"/></name> <operator pos:line="27" pos:column="55">=<pos:position pos:line="27" pos:column="56"/></operator> <name><name pos:line="27" pos:column="57">se_ptr<pos:position pos:line="27" pos:column="63"/></name><operator pos:line="27" pos:column="63">-&gt;<pos:position pos:line="27" pos:column="68"/></operator><name pos:line="27" pos:column="65">fd<pos:position pos:line="27" pos:column="67"/></name></name></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">listen_sockets<pos:position pos:line="28" pos:column="31"/></name><index pos:line="28" pos:column="31">[<expr><name pos:line="28" pos:column="32">listen_sockets_num<pos:position pos:line="28" pos:column="50"/></name></expr>]<pos:position pos:line="28" pos:column="51"/></index></name><operator pos:line="28" pos:column="51">.<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="52">events<pos:position pos:line="28" pos:column="58"/></name> <operator pos:line="28" pos:column="59">=<pos:position pos:line="28" pos:column="60"/></operator> <name pos:line="28" pos:column="61">POLLIN<pos:position pos:line="28" pos:column="67"/></name> <operator pos:line="28" pos:column="68">|<pos:position pos:line="28" pos:column="69"/></operator> <name pos:line="28" pos:column="70">POLLPRI<pos:position pos:line="28" pos:column="77"/></name></expr>;<pos:position pos:line="28" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">listen_sockets<pos:position pos:line="29" pos:column="31"/></name><index pos:line="29" pos:column="31">[<expr><name pos:line="29" pos:column="32">listen_sockets_num<pos:position pos:line="29" pos:column="50"/></name></expr>]<pos:position pos:line="29" pos:column="51"/></index></name><operator pos:line="29" pos:column="51">.<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="52">revents<pos:position pos:line="29" pos:column="59"/></name> <operator pos:line="29" pos:column="60">=<pos:position pos:line="29" pos:column="61"/></operator> <literal type="number" pos:line="29" pos:column="62">0<pos:position pos:line="29" pos:column="63"/></literal></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">listen_sockets_num<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">++<pos:position pos:line="30" pos:column="37"/></operator></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></for> <comment type="block" pos:line="31" pos:column="11">/* for (se) */</comment>

	<expr_stmt><expr><call><name pos:line="33" pos:column="9">free_sockent<pos:position pos:line="33" pos:column="21"/></name> <argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">se<pos:position pos:line="33" pos:column="25"/></name></expr></argument>)<pos:position pos:line="33" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>
	<return pos:line="34" pos:column="9">return <expr><operator pos:line="34" pos:column="16">(<pos:position pos:line="34" pos:column="17"/></operator><literal type="number" pos:line="34" pos:column="17">0<pos:position pos:line="34" pos:column="18"/></literal><operator pos:line="34" pos:column="18">)<pos:position pos:line="34" pos:column="19"/></operator></expr>;<pos:position pos:line="34" pos:column="20"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

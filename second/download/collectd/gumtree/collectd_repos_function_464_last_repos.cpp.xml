<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_464_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ovs_stats_update_iface_stats<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">port_list_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">port<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">yajl_val<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">stats<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list> <block pos:line="1" pos:column="76">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">yajl_val<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">stat<pos:position pos:line="2" pos:column="16"/></name></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">iface_counter<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">counter_index<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><literal type="number" pos:line="3" pos:column="33">0<pos:position pos:line="3" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">counter_name<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">NULL<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int64_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">counter_value<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">stats<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">&amp;&amp;<pos:position pos:line="6" pos:column="23"/></operator> <call><name pos:line="6" pos:column="16">YAJL_IS_ARRAY<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">stats<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37">
    <block type="pseudo"><for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><name pos:line="7" pos:column="10">size_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></init> <condition><expr><name pos:line="7" pos:column="24">i<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">&lt;<pos:position pos:line="7" pos:column="30"/></operator> <call><name pos:line="7" pos:column="28">YAJL_GET_ARRAY<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">stats<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call><operator pos:line="7" pos:column="49">-&gt;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="51">len<pos:position pos:line="7" pos:column="54"/></name></expr>;<pos:position pos:line="7" pos:column="55"/></condition> <incr><expr><name pos:line="7" pos:column="56">i<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">++<pos:position pos:line="7" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="60"/></control> <block pos:line="7" pos:column="61">{
      <expr_stmt><expr><name pos:line="8" pos:column="7">stat<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">YAJL_GET_ARRAY<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">stats<pos:position pos:line="8" pos:column="34"/></name></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name><name pos:line="8" pos:column="37">values<pos:position pos:line="8" pos:column="43"/></name><index pos:line="8" pos:column="43">[<expr><name pos:line="8" pos:column="44">i<pos:position pos:line="8" pos:column="45"/></name></expr>]<pos:position pos:line="8" pos:column="46"/></index></name></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
      <if pos:line="9" pos:column="7">if <condition pos:line="9" pos:column="10">(<expr><operator pos:line="9" pos:column="11">!<pos:position pos:line="9" pos:column="12"/></operator><call><name pos:line="9" pos:column="12">YAJL_IS_ARRAY<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">stat<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">-<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="11" pos:column="7">counter_name<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <call><name pos:line="11" pos:column="22">YAJL_GET_STRING<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><call><name pos:line="11" pos:column="38">YAJL_GET_ARRAY<pos:position pos:line="11" pos:column="52"/></name><argument_list pos:line="11" pos:column="52">(<argument><expr><name pos:line="11" pos:column="53">stat<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name><name pos:line="11" pos:column="60">values<pos:position pos:line="11" pos:column="66"/></name><index pos:line="11" pos:column="66">[<expr><literal type="number" pos:line="11" pos:column="67">0<pos:position pos:line="11" pos:column="68"/></literal></expr>]<pos:position pos:line="11" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><name pos:line="12" pos:column="7">counter_index<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">ovs_stats_counter_name_to_type<pos:position pos:line="12" pos:column="53"/></name><argument_list pos:line="12" pos:column="53">(<argument><expr><name pos:line="12" pos:column="54">counter_name<pos:position pos:line="12" pos:column="66"/></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><name pos:line="13" pos:column="7">counter_value<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">YAJL_GET_INTEGER<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><call><name pos:line="13" pos:column="40">YAJL_GET_ARRAY<pos:position pos:line="13" pos:column="54"/></name><argument_list pos:line="13" pos:column="54">(<argument><expr><name pos:line="13" pos:column="55">stat<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call><operator pos:line="13" pos:column="60">-&gt;<pos:position pos:line="13" pos:column="65"/></operator><name><name pos:line="13" pos:column="62">values<pos:position pos:line="13" pos:column="68"/></name><index pos:line="13" pos:column="68">[<expr><literal type="number" pos:line="13" pos:column="69">1<pos:position pos:line="13" pos:column="70"/></literal></expr>]<pos:position pos:line="13" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="73"/></expr_stmt>
      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">counter_index<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">==<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">not_supported<pos:position pos:line="14" pos:column="41"/></name></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42">
        <block type="pseudo"><continue pos:line="15" pos:column="9">continue;<pos:position pos:line="15" pos:column="18"/></continue></block></then></if>
      <expr_stmt><expr><name><name pos:line="16" pos:column="7">port<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">stats<pos:position pos:line="16" pos:column="18"/></name><index pos:line="16" pos:column="18">[<expr><name pos:line="16" pos:column="19">counter_index<pos:position pos:line="16" pos:column="32"/></name></expr>]<pos:position pos:line="16" pos:column="33"/></index></name> <operator pos:line="16" pos:column="34">=<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">counter_value<pos:position pos:line="16" pos:column="49"/></name></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></for></block></then></if>

  <return pos:line="19" pos:column="3">return <expr><literal type="number" pos:line="19" pos:column="10">0<pos:position pos:line="19" pos:column="11"/></literal></expr>;<pos:position pos:line="19" pos:column="12"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

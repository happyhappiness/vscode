<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_47_collectd-4.2.6.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">presym_add_symlist<pos:position pos:line="2" pos:column="19"/></name> <argument_list pos:line="2" pos:column="20">(<argument><expr><name pos:line="2" pos:column="21">preloaded<pos:position pos:line="2" pos:column="30"/></name></expr></argument>)<pos:position pos:line="2" pos:column="31"/></argument_list>
     const <name pos:line="3" pos:column="12">lt_dlsymlist<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier><name pos:line="3" pos:column="26">preloaded<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">lt_dlsymlists_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">tmp<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">lt_dlsymlists_t<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">lists<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type>		   <name pos:line="7" pos:column="20">errors<pos:position pos:line="7" pos:column="26"/></name>   <init pos:line="7" pos:column="29">= <expr><literal type="number" pos:line="7" pos:column="31">0<pos:position pos:line="7" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">LT_DLMUTEX_LOCK<pos:position pos:line="9" pos:column="18"/></name> <argument_list pos:line="9" pos:column="19">()<pos:position pos:line="9" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">lists<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <name pos:line="11" pos:column="11">preloaded_symbols<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
  <while pos:line="12" pos:column="3">while <condition pos:line="12" pos:column="9">(<expr><name pos:line="12" pos:column="10">lists<pos:position pos:line="12" pos:column="15"/></name></expr>)<pos:position pos:line="12" pos:column="16"/></condition>
    <block pos:line="13" pos:column="5">{
      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name><name pos:line="14" pos:column="11">lists<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">syms<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">==<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">preloaded<pos:position pos:line="14" pos:column="35"/></name></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36">
	<block pos:line="15" pos:column="9">{
	  <goto pos:line="16" pos:column="11">goto <name pos:line="16" pos:column="16">done<pos:position pos:line="16" pos:column="20"/></name>;<pos:position pos:line="16" pos:column="21"/></goto>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
      <expr_stmt><expr><name pos:line="18" pos:column="7">lists<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name><name pos:line="18" pos:column="15">lists<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">next<pos:position pos:line="18" pos:column="26"/></name></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></while>

  <expr_stmt><expr><name pos:line="21" pos:column="3">tmp<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <call><name pos:line="21" pos:column="9">LT_EMALLOC<pos:position pos:line="21" pos:column="19"/></name> <argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">lt_dlsymlists_t<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="38">1<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">tmp<pos:position pos:line="22" pos:column="10"/></name></expr>)<pos:position pos:line="22" pos:column="11"/></condition><then pos:line="22" pos:column="11">
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">memset<pos:position pos:line="24" pos:column="13"/></name> <argument_list pos:line="24" pos:column="14">(<argument><expr><name pos:line="24" pos:column="15">tmp<pos:position pos:line="24" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="20">0<pos:position pos:line="24" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="23">sizeof<argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">lt_dlsymlists_t<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">tmp<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">syms<pos:position pos:line="25" pos:column="16"/></name></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">preloaded<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="26" pos:column="7">tmp<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">next<pos:position pos:line="26" pos:column="16"/></name></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">preloaded_symbols<pos:position pos:line="26" pos:column="36"/></name></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">preloaded_symbols<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">tmp<pos:position pos:line="27" pos:column="30"/></name></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then>
  <else pos:line="29" pos:column="3">else
    <block pos:line="30" pos:column="5">{
      <expr_stmt><expr><operator pos:line="31" pos:column="7">++<pos:position pos:line="31" pos:column="9"/></operator><name pos:line="31" pos:column="9">errors<pos:position pos:line="31" pos:column="15"/></name></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>

 <label><name pos:line="34" pos:column="2">done<pos:position pos:line="34" pos:column="6"/></name>:<pos:position pos:line="34" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">LT_DLMUTEX_UNLOCK<pos:position pos:line="35" pos:column="20"/></name> <argument_list pos:line="35" pos:column="21">()<pos:position pos:line="35" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
  <return pos:line="36" pos:column="3">return <expr><name pos:line="36" pos:column="10">errors<pos:position pos:line="36" pos:column="16"/></name></expr>;<pos:position pos:line="36" pos:column="17"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></unit>

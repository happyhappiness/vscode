<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_978_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">chain_head<pos:position pos:line="1" pos:column="25"/></name></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type>
<name pos:line="2" pos:column="1">iptcc_find_chain_by_offset<pos:position pos:line="2" pos:column="27"/></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">TC_HANDLE_T<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">handle<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">unsigned<pos:position pos:line="2" pos:column="56"/></name> <name pos:line="2" pos:column="57">int<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">offset<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">list_head<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">pos<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">list_empty<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><operator pos:line="6" pos:column="24">&amp;<pos:position pos:line="6" pos:column="29"/></operator><name><name pos:line="6" pos:column="25">handle<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="33">chains<pos:position pos:line="6" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="41"/></condition><then pos:line="6" pos:column="41">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></return></block></then></if>

	<macro><name pos:line="9" pos:column="9">list_for_each<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument pos:line="9" pos:column="23">pos<pos:position pos:line="9" pos:column="26"/></argument>, <argument pos:line="9" pos:column="28">&amp;handle-&gt;chains<pos:position pos:line="9" pos:column="43"/></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></macro> <block pos:line="9" pos:column="45">{
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">chain_head<pos:position pos:line="10" pos:column="34"/></name></name> <modifier pos:line="10" pos:column="35">*<pos:position pos:line="10" pos:column="36"/></modifier></type><name pos:line="10" pos:column="36">c<pos:position pos:line="10" pos:column="37"/></name> <init pos:line="10" pos:column="38">= <expr><call><name pos:line="10" pos:column="40">list_entry<pos:position pos:line="10" pos:column="50"/></name><argument_list pos:line="10" pos:column="50">(<argument><expr><name pos:line="10" pos:column="51">pos<pos:position pos:line="10" pos:column="54"/></name></expr></argument>, <argument><expr pos:line="10" pos:column="56">struct <name pos:line="10" pos:column="63">chain_head<pos:position pos:line="10" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="75">list<pos:position pos:line="10" pos:column="79"/></name></expr></argument>)<pos:position pos:line="10" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="81"/></decl_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">offset<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">&gt;=<pos:position pos:line="11" pos:column="33"/></operator> <name><name pos:line="11" pos:column="31">c<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">head_offset<pos:position pos:line="11" pos:column="45"/></name></name> <operator pos:line="11" pos:column="46">&amp;&amp;<pos:position pos:line="11" pos:column="56"/></operator> <name pos:line="11" pos:column="49">offset<pos:position pos:line="11" pos:column="55"/></name> <operator pos:line="11" pos:column="56">&lt;=<pos:position pos:line="11" pos:column="61"/></operator> <name><name pos:line="11" pos:column="59">c<pos:position pos:line="11" pos:column="60"/></name><operator pos:line="11" pos:column="60">-&gt;<pos:position pos:line="11" pos:column="65"/></operator><name pos:line="11" pos:column="62">foot_offset<pos:position pos:line="11" pos:column="73"/></name></name></expr>)<pos:position pos:line="11" pos:column="74"/></condition><then pos:line="11" pos:column="74">
			<block type="pseudo"><return pos:line="12" pos:column="25">return <expr><name pos:line="12" pos:column="32">c<pos:position pos:line="12" pos:column="33"/></name></expr>;<pos:position pos:line="12" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block>

	<return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

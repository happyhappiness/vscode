<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_329_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ir_read<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list> <block pos:line="1" pos:column="26">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buf<pos:position pos:line="2" pos:column="11"/></name><index pos:line="2" pos:column="11">[<expr><name pos:line="2" pos:column="12">MNL_SOCKET_BUFFER_SIZE<pos:position pos:line="2" pos:column="34"/></name></expr>]<pos:position pos:line="2" pos:column="35"/></index></name></decl>;<pos:position pos:line="2" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">nlmsghdr<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">nlh<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">rtgenmsg<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">rt<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">ret<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">seq<pos:position pos:line="6" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="21">portid<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

  <decl_stmt><decl><specifier pos:line="8" pos:column="3">static<pos:position pos:line="8" pos:column="9"/></specifier> <type><specifier pos:line="8" pos:column="10">const<pos:position pos:line="8" pos:column="15"/></specifier> <name pos:line="8" pos:column="16">int<pos:position pos:line="8" pos:column="19"/></name></type> <name><name pos:line="8" pos:column="20">type_id<pos:position pos:line="8" pos:column="27"/></name><index pos:line="8" pos:column="27">[]<pos:position pos:line="8" pos:column="29"/></index></name> <init pos:line="8" pos:column="30">= <expr><block pos:line="8" pos:column="32">{<expr><name pos:line="8" pos:column="33">RTM_GETQDISC<pos:position pos:line="8" pos:column="45"/></name></expr>, <expr><name pos:line="8" pos:column="47">RTM_GETTCLASS<pos:position pos:line="8" pos:column="60"/></name></expr>, <expr><name pos:line="8" pos:column="62">RTM_GETTFILTER<pos:position pos:line="8" pos:column="76"/></name></expr>}<pos:position pos:line="8" pos:column="77"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="78"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="9" pos:column="3">static<pos:position pos:line="9" pos:column="9"/></specifier> <type><specifier pos:line="9" pos:column="10">const<pos:position pos:line="9" pos:column="15"/></specifier> <name pos:line="9" pos:column="16">char<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name><name pos:line="9" pos:column="22">type_name<pos:position pos:line="9" pos:column="31"/></name><index pos:line="9" pos:column="31">[]<pos:position pos:line="9" pos:column="33"/></index></name> <init pos:line="9" pos:column="34">= <expr><block pos:line="9" pos:column="36">{<expr><literal type="string" pos:line="9" pos:column="37">"qdisc"<pos:position pos:line="9" pos:column="44"/></literal></expr>, <expr><literal type="string" pos:line="9" pos:column="46">"class"<pos:position pos:line="9" pos:column="53"/></literal></expr>, <expr><literal type="string" pos:line="9" pos:column="55">"filter"<pos:position pos:line="9" pos:column="63"/></literal></expr>}<pos:position pos:line="9" pos:column="64"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="65"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">portid<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <call><name pos:line="11" pos:column="12">mnl_socket_get_portid<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">nl<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">nlh<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">mnl_nlmsg_put_header<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">buf<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">nlh<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">nlmsg_type<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">RTM_GETLINK<pos:position pos:line="14" pos:column="32"/></name></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">nlh<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">nlmsg_flags<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">NLM_F_REQUEST<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">|<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="38">NLM_F_DUMP<pos:position pos:line="15" pos:column="48"/></name></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">nlh<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">nlmsg_seq<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">seq<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <call><name pos:line="16" pos:column="26">time<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">NULL<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">rt<pos:position pos:line="17" pos:column="5"/></name> <operator pos:line="17" pos:column="6">=<pos:position pos:line="17" pos:column="7"/></operator> <call><name pos:line="17" pos:column="8">mnl_nlmsg_put_extra_header<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">nlh<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="40">sizeof<argument_list pos:line="17" pos:column="46">(<argument><expr><operator pos:line="17" pos:column="47">*<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="48">rt<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">rt<pos:position pos:line="18" pos:column="5"/></name><operator pos:line="18" pos:column="5">-&gt;<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="7">rtgen_family<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">AF_PACKET<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><call><name pos:line="20" pos:column="7">mnl_socket_sendto<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">nl<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="29">nlh<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="34">nlh<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">nlmsg_len<pos:position pos:line="20" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call> <operator pos:line="20" pos:column="50">&lt;<pos:position pos:line="20" pos:column="54"/></operator> <literal type="number" pos:line="20" pos:column="52">0<pos:position pos:line="20" pos:column="53"/></literal></expr>)<pos:position pos:line="20" pos:column="54"/></condition><then pos:line="20" pos:column="54"> <block pos:line="20" pos:column="55">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ERROR<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><literal type="string" pos:line="21" pos:column="11">"netlink plugin: ir_read: rtnl_wilddump_request failed."<pos:position pos:line="21" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><operator pos:line="22" pos:column="13">-<pos:position pos:line="22" pos:column="14"/></operator><literal type="number" pos:line="22" pos:column="14">1<pos:position pos:line="22" pos:column="15"/></literal><operator pos:line="22" pos:column="15">)<pos:position pos:line="22" pos:column="16"/></operator></expr>;<pos:position pos:line="22" pos:column="17"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="25" pos:column="3">ret<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <call><name pos:line="25" pos:column="9">mnl_socket_recvfrom<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">nl<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="33">buf<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="38">sizeof<argument_list pos:line="25" pos:column="44">(<argument><expr><name pos:line="25" pos:column="45">buf<pos:position pos:line="25" pos:column="48"/></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
  <while pos:line="26" pos:column="3">while <condition pos:line="26" pos:column="9">(<expr><name pos:line="26" pos:column="10">ret<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">&gt;<pos:position pos:line="26" pos:column="18"/></operator> <literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>)<pos:position pos:line="26" pos:column="18"/></condition> <block pos:line="26" pos:column="19">{
    <expr_stmt><expr><name pos:line="27" pos:column="5">ret<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <call><name pos:line="27" pos:column="11">mnl_cb_run<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">buf<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="27">ret<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">seq<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">portid<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">link_filter_cb<pos:position pos:line="27" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="61">NULL<pos:position pos:line="27" pos:column="65"/></name></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="67"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">ret<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">&lt;=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="16">MNL_CB_STOP<pos:position pos:line="28" pos:column="27"/></name></expr>)<pos:position pos:line="28" pos:column="28"/></condition><then pos:line="28" pos:column="28">
      <block type="pseudo"><break pos:line="29" pos:column="7">break;<pos:position pos:line="29" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="30" pos:column="5">ret<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <call><name pos:line="30" pos:column="11">mnl_socket_recvfrom<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">nl<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="35">buf<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="40">sizeof<argument_list pos:line="30" pos:column="46">(<argument><expr><name pos:line="30" pos:column="47">buf<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></while>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">ret<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">&lt;<pos:position pos:line="32" pos:column="15"/></operator> <literal type="number" pos:line="32" pos:column="13">0<pos:position pos:line="32" pos:column="14"/></literal></expr>)<pos:position pos:line="32" pos:column="15"/></condition><then pos:line="32" pos:column="15"> <block pos:line="32" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">ERROR<pos:position pos:line="33" pos:column="10"/></name><argument_list pos:line="33" pos:column="10">(<argument><expr><literal type="string" pos:line="33" pos:column="11">"netlink plugin: ir_read: mnl_socket_recvfrom failed."<pos:position pos:line="33" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="37" pos:column="3">/* `link_filter_cb' will update `iflist' which is used here to iterate
   * over all interfaces. */</comment>
  <for pos:line="39" pos:column="3">for <control pos:line="39" pos:column="7">(<init><decl><type><name pos:line="39" pos:column="8">size_t<pos:position pos:line="39" pos:column="14"/></name></type> <name pos:line="39" pos:column="15">ifindex<pos:position pos:line="39" pos:column="22"/></name> <init pos:line="39" pos:column="23">= <expr><literal type="number" pos:line="39" pos:column="25">1<pos:position pos:line="39" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="27"/></init> <condition><expr><name pos:line="39" pos:column="28">ifindex<pos:position pos:line="39" pos:column="35"/></name> <operator pos:line="39" pos:column="36">&lt;<pos:position pos:line="39" pos:column="40"/></operator> <name pos:line="39" pos:column="38">iflist_len<pos:position pos:line="39" pos:column="48"/></name></expr>;<pos:position pos:line="39" pos:column="49"/></condition> <incr><expr><name pos:line="39" pos:column="50">ifindex<pos:position pos:line="39" pos:column="57"/></name><operator pos:line="39" pos:column="57">++<pos:position pos:line="39" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="60"/></control> <block pos:line="39" pos:column="61">{
    <decl_stmt><decl><type><name><name pos:line="40" pos:column="5">struct<pos:position pos:line="40" pos:column="11"/></name> <name pos:line="40" pos:column="12">tcmsg<pos:position pos:line="40" pos:column="17"/></name></name> <modifier pos:line="40" pos:column="18">*<pos:position pos:line="40" pos:column="19"/></modifier></type><name pos:line="40" pos:column="19">tm<pos:position pos:line="40" pos:column="21"/></name></decl>;<pos:position pos:line="40" pos:column="22"/></decl_stmt>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">iflist<pos:position pos:line="42" pos:column="15"/></name><index pos:line="42" pos:column="15">[<expr><name pos:line="42" pos:column="16">ifindex<pos:position pos:line="42" pos:column="23"/></name></expr>]<pos:position pos:line="42" pos:column="24"/></index></name> <operator pos:line="42" pos:column="25">==<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="28">NULL<pos:position pos:line="42" pos:column="32"/></name></expr>)<pos:position pos:line="42" pos:column="33"/></condition><then pos:line="42" pos:column="33">
      <block type="pseudo"><continue pos:line="43" pos:column="7">continue;<pos:position pos:line="43" pos:column="16"/></continue></block></then></if>

    <for pos:line="45" pos:column="5">for <control pos:line="45" pos:column="9">(<init><decl><type><name pos:line="45" pos:column="10">size_t<pos:position pos:line="45" pos:column="16"/></name></type> <name pos:line="45" pos:column="17">type_index<pos:position pos:line="45" pos:column="27"/></name> <init pos:line="45" pos:column="28">= <expr><literal type="number" pos:line="45" pos:column="30">0<pos:position pos:line="45" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="45" pos:column="32"/></init> <condition><expr><name pos:line="45" pos:column="33">type_index<pos:position pos:line="45" pos:column="43"/></name> <operator pos:line="45" pos:column="44">&lt;<pos:position pos:line="45" pos:column="48"/></operator> <call><name pos:line="45" pos:column="46">STATIC_ARRAY_SIZE<pos:position pos:line="45" pos:column="63"/></name><argument_list pos:line="45" pos:column="63">(<argument><expr><name pos:line="45" pos:column="64">type_id<pos:position pos:line="45" pos:column="71"/></name></expr></argument>)<pos:position pos:line="45" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="73"/></condition>
         <incr><expr><name pos:line="46" pos:column="10">type_index<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">++<pos:position pos:line="46" pos:column="22"/></operator></expr></incr>)<pos:position pos:line="46" pos:column="23"/></control> <block pos:line="46" pos:column="24">{
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><call><name pos:line="47" pos:column="11">check_ignorelist<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name><name pos:line="47" pos:column="28">iflist<pos:position pos:line="47" pos:column="34"/></name><index pos:line="47" pos:column="34">[<expr><name pos:line="47" pos:column="35">ifindex<pos:position pos:line="47" pos:column="42"/></name></expr>]<pos:position pos:line="47" pos:column="43"/></index></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="45">type_name<pos:position pos:line="47" pos:column="54"/></name><index pos:line="47" pos:column="54">[<expr><name pos:line="47" pos:column="55">type_index<pos:position pos:line="47" pos:column="65"/></name></expr>]<pos:position pos:line="47" pos:column="66"/></index></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="68">NULL<pos:position pos:line="47" pos:column="72"/></name></expr></argument>)<pos:position pos:line="47" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="74"/></condition><then pos:line="47" pos:column="74"> <block pos:line="47" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">DEBUG<pos:position pos:line="48" pos:column="14"/></name><argument_list pos:line="48" pos:column="14">(<argument><expr><literal type="string" pos:line="48" pos:column="15">"netlink plugin: ir_read: check_ignorelist (%s, %s, (nil)) "<pos:position pos:line="48" pos:column="75"/></literal>
              <literal type="string" pos:line="49" pos:column="15">"== TRUE"<pos:position pos:line="49" pos:column="24"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="50" pos:column="15">iflist<pos:position pos:line="50" pos:column="21"/></name><index pos:line="50" pos:column="21">[<expr><name pos:line="50" pos:column="22">ifindex<pos:position pos:line="50" pos:column="29"/></name></expr>]<pos:position pos:line="50" pos:column="30"/></index></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="32">type_name<pos:position pos:line="50" pos:column="41"/></name><index pos:line="50" pos:column="41">[<expr><name pos:line="50" pos:column="42">type_index<pos:position pos:line="50" pos:column="52"/></name></expr>]<pos:position pos:line="50" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="55"/></expr_stmt>
        <continue pos:line="51" pos:column="9">continue;<pos:position pos:line="51" pos:column="18"/></continue>
      }<pos:position pos:line="52" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="54" pos:column="7">DEBUG<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><literal type="string" pos:line="54" pos:column="13">"netlink plugin: ir_read: querying %s from %s (%zu)."<pos:position pos:line="54" pos:column="66"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="55" pos:column="13">type_name<pos:position pos:line="55" pos:column="22"/></name><index pos:line="55" pos:column="22">[<expr><name pos:line="55" pos:column="23">type_index<pos:position pos:line="55" pos:column="33"/></name></expr>]<pos:position pos:line="55" pos:column="34"/></index></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="36">iflist<pos:position pos:line="55" pos:column="42"/></name><index pos:line="55" pos:column="42">[<expr><name pos:line="55" pos:column="43">ifindex<pos:position pos:line="55" pos:column="50"/></name></expr>]<pos:position pos:line="55" pos:column="51"/></index></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="53">ifindex<pos:position pos:line="55" pos:column="60"/></name></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt>

      <expr_stmt><expr><name pos:line="57" pos:column="7">nlh<pos:position pos:line="57" pos:column="10"/></name> <operator pos:line="57" pos:column="11">=<pos:position pos:line="57" pos:column="12"/></operator> <call><name pos:line="57" pos:column="13">mnl_nlmsg_put_header<pos:position pos:line="57" pos:column="33"/></name><argument_list pos:line="57" pos:column="33">(<argument><expr><name pos:line="57" pos:column="34">buf<pos:position pos:line="57" pos:column="37"/></name></expr></argument>)<pos:position pos:line="57" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="58" pos:column="7">nlh<pos:position pos:line="58" pos:column="10"/></name><operator pos:line="58" pos:column="10">-&gt;<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="12">nlmsg_type<pos:position pos:line="58" pos:column="22"/></name></name> <operator pos:line="58" pos:column="23">=<pos:position pos:line="58" pos:column="24"/></operator> <name><name pos:line="58" pos:column="25">type_id<pos:position pos:line="58" pos:column="32"/></name><index pos:line="58" pos:column="32">[<expr><name pos:line="58" pos:column="33">type_index<pos:position pos:line="58" pos:column="43"/></name></expr>]<pos:position pos:line="58" pos:column="44"/></index></name></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="59" pos:column="7">nlh<pos:position pos:line="59" pos:column="10"/></name><operator pos:line="59" pos:column="10">-&gt;<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="12">nlmsg_flags<pos:position pos:line="59" pos:column="23"/></name></name> <operator pos:line="59" pos:column="24">=<pos:position pos:line="59" pos:column="25"/></operator> <name pos:line="59" pos:column="26">NLM_F_REQUEST<pos:position pos:line="59" pos:column="39"/></name> <operator pos:line="59" pos:column="40">|<pos:position pos:line="59" pos:column="41"/></operator> <name pos:line="59" pos:column="42">NLM_F_DUMP<pos:position pos:line="59" pos:column="52"/></name></expr>;<pos:position pos:line="59" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="60" pos:column="7">nlh<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">nlmsg_seq<pos:position pos:line="60" pos:column="21"/></name></name> <operator pos:line="60" pos:column="22">=<pos:position pos:line="60" pos:column="23"/></operator> <name pos:line="60" pos:column="24">seq<pos:position pos:line="60" pos:column="27"/></name> <operator pos:line="60" pos:column="28">=<pos:position pos:line="60" pos:column="29"/></operator> <call><name pos:line="60" pos:column="30">time<pos:position pos:line="60" pos:column="34"/></name><argument_list pos:line="60" pos:column="34">(<argument><expr><name pos:line="60" pos:column="35">NULL<pos:position pos:line="60" pos:column="39"/></name></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="61" pos:column="7">tm<pos:position pos:line="61" pos:column="9"/></name> <operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator> <call><name pos:line="61" pos:column="12">mnl_nlmsg_put_extra_header<pos:position pos:line="61" pos:column="38"/></name><argument_list pos:line="61" pos:column="38">(<argument><expr><name pos:line="61" pos:column="39">nlh<pos:position pos:line="61" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="44">sizeof<argument_list pos:line="61" pos:column="50">(<argument><expr><operator pos:line="61" pos:column="51">*<pos:position pos:line="61" pos:column="52"/></operator><name pos:line="61" pos:column="52">tm<pos:position pos:line="61" pos:column="54"/></name></expr></argument>)<pos:position pos:line="61" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="62" pos:column="7">tm<pos:position pos:line="62" pos:column="9"/></name><operator pos:line="62" pos:column="9">-&gt;<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="11">tcm_family<pos:position pos:line="62" pos:column="21"/></name></name> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="24">AF_PACKET<pos:position pos:line="62" pos:column="33"/></name></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="63" pos:column="7">tm<pos:position pos:line="63" pos:column="9"/></name><operator pos:line="63" pos:column="9">-&gt;<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="11">tcm_ifindex<pos:position pos:line="63" pos:column="22"/></name></name> <operator pos:line="63" pos:column="23">=<pos:position pos:line="63" pos:column="24"/></operator> <name pos:line="63" pos:column="25">ifindex<pos:position pos:line="63" pos:column="32"/></name></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>

      <if pos:line="65" pos:column="7">if <condition pos:line="65" pos:column="10">(<expr><call><name pos:line="65" pos:column="11">mnl_socket_sendto<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><name pos:line="65" pos:column="29">nl<pos:position pos:line="65" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="33">nlh<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="38">nlh<pos:position pos:line="65" pos:column="41"/></name><operator pos:line="65" pos:column="41">-&gt;<pos:position pos:line="65" pos:column="46"/></operator><name pos:line="65" pos:column="43">nlmsg_len<pos:position pos:line="65" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call> <operator pos:line="65" pos:column="54">&lt;<pos:position pos:line="65" pos:column="58"/></operator> <literal type="number" pos:line="65" pos:column="56">0<pos:position pos:line="65" pos:column="57"/></literal></expr>)<pos:position pos:line="65" pos:column="58"/></condition><then pos:line="65" pos:column="58"> <block pos:line="65" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">ERROR<pos:position pos:line="66" pos:column="14"/></name><argument_list pos:line="66" pos:column="14">(<argument><expr><literal type="string" pos:line="66" pos:column="15">"netlink plugin: ir_read: mnl_socket_sendto failed."<pos:position pos:line="66" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="69"/></expr_stmt>
        <continue pos:line="67" pos:column="9">continue;<pos:position pos:line="67" pos:column="18"/></continue>
      }<pos:position pos:line="68" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="70" pos:column="7">ret<pos:position pos:line="70" pos:column="10"/></name> <operator pos:line="70" pos:column="11">=<pos:position pos:line="70" pos:column="12"/></operator> <call><name pos:line="70" pos:column="13">mnl_socket_recvfrom<pos:position pos:line="70" pos:column="32"/></name><argument_list pos:line="70" pos:column="32">(<argument><expr><name pos:line="70" pos:column="33">nl<pos:position pos:line="70" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="37">buf<pos:position pos:line="70" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="42">sizeof<argument_list pos:line="70" pos:column="48">(<argument><expr><name pos:line="70" pos:column="49">buf<pos:position pos:line="70" pos:column="52"/></name></expr></argument>)<pos:position pos:line="70" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="55"/></expr_stmt>
      <while pos:line="71" pos:column="7">while <condition pos:line="71" pos:column="13">(<expr><name pos:line="71" pos:column="14">ret<pos:position pos:line="71" pos:column="17"/></name> <operator pos:line="71" pos:column="18">&gt;<pos:position pos:line="71" pos:column="22"/></operator> <literal type="number" pos:line="71" pos:column="20">0<pos:position pos:line="71" pos:column="21"/></literal></expr>)<pos:position pos:line="71" pos:column="22"/></condition> <block pos:line="71" pos:column="23">{
        <expr_stmt><expr><name pos:line="72" pos:column="9">ret<pos:position pos:line="72" pos:column="12"/></name> <operator pos:line="72" pos:column="13">=<pos:position pos:line="72" pos:column="14"/></operator> <call><name pos:line="72" pos:column="15">mnl_cb_run<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><name pos:line="72" pos:column="26">buf<pos:position pos:line="72" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="31">ret<pos:position pos:line="72" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="36">seq<pos:position pos:line="72" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="41">portid<pos:position pos:line="72" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="49">qos_filter_cb<pos:position pos:line="72" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="64">&amp;<pos:position pos:line="72" pos:column="69"/></operator><name pos:line="72" pos:column="65">ifindex<pos:position pos:line="72" pos:column="72"/></name></expr></argument>)<pos:position pos:line="72" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="74"/></expr_stmt>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">ret<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">&lt;=<pos:position pos:line="73" pos:column="22"/></operator> <name pos:line="73" pos:column="20">MNL_CB_STOP<pos:position pos:line="73" pos:column="31"/></name></expr>)<pos:position pos:line="73" pos:column="32"/></condition><then pos:line="73" pos:column="32">
          <block type="pseudo"><break pos:line="74" pos:column="11">break;<pos:position pos:line="74" pos:column="17"/></break></block></then></if>
        <expr_stmt><expr><name pos:line="75" pos:column="9">ret<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">=<pos:position pos:line="75" pos:column="14"/></operator> <call><name pos:line="75" pos:column="15">mnl_socket_recvfrom<pos:position pos:line="75" pos:column="34"/></name><argument_list pos:line="75" pos:column="34">(<argument><expr><name pos:line="75" pos:column="35">nl<pos:position pos:line="75" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="39">buf<pos:position pos:line="75" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="44">sizeof<argument_list pos:line="75" pos:column="50">(<argument><expr><name pos:line="75" pos:column="51">buf<pos:position pos:line="75" pos:column="54"/></name></expr></argument>)<pos:position pos:line="75" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="75" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="57"/></expr_stmt>
      }<pos:position pos:line="76" pos:column="8"/></block></while>
      <if pos:line="77" pos:column="7">if <condition pos:line="77" pos:column="10">(<expr><name pos:line="77" pos:column="11">ret<pos:position pos:line="77" pos:column="14"/></name> <operator pos:line="77" pos:column="15">&lt;<pos:position pos:line="77" pos:column="19"/></operator> <literal type="number" pos:line="77" pos:column="17">0<pos:position pos:line="77" pos:column="18"/></literal></expr>)<pos:position pos:line="77" pos:column="19"/></condition><then pos:line="77" pos:column="19"> <block pos:line="77" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">ERROR<pos:position pos:line="78" pos:column="14"/></name><argument_list pos:line="78" pos:column="14">(<argument><expr><literal type="string" pos:line="78" pos:column="15">"netlink plugin: ir_read:mnl_socket_recvfrom failed."<pos:position pos:line="78" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="70"/></expr_stmt>
        <continue pos:line="79" pos:column="9">continue;<pos:position pos:line="79" pos:column="18"/></continue>
      }<pos:position pos:line="80" pos:column="8"/></block></then></if>

    }<pos:position pos:line="82" pos:column="6"/></block></for> <comment type="block" pos:line="82" pos:column="7">/* for (type_index) */</comment>
  }<pos:position pos:line="83" pos:column="4"/></block></for>   <comment type="block" pos:line="83" pos:column="7">/* for (if_index) */</comment>

  <return pos:line="85" pos:column="3">return <expr><operator pos:line="85" pos:column="10">(<pos:position pos:line="85" pos:column="11"/></operator><literal type="number" pos:line="85" pos:column="11">0<pos:position pos:line="85" pos:column="12"/></literal><operator pos:line="85" pos:column="12">)<pos:position pos:line="85" pos:column="13"/></operator></expr>;<pos:position pos:line="85" pos:column="14"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

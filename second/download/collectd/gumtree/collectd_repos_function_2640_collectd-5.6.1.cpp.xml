<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2640_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_log_severity<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">severity<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">log_level<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><operator pos:line="3" pos:column="25">-<pos:position pos:line="3" pos:column="26"/></operator><literal type="number" pos:line="3" pos:column="26">1<pos:position pos:line="3" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal> <operator pos:line="5" pos:column="16">==<pos:position pos:line="5" pos:column="18"/></operator> <call><name pos:line="5" pos:column="19">strcasecmp<pos:position pos:line="5" pos:column="29"/></name> <argument_list pos:line="5" pos:column="30">(<argument><expr><name pos:line="5" pos:column="31">severity<pos:position pos:line="5" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="41">"emerg"<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call><operator pos:line="5" pos:column="49">)<pos:position pos:line="5" pos:column="50"/></operator>
			<operator pos:line="6" pos:column="25">||<pos:position pos:line="6" pos:column="27"/></operator> <operator pos:line="6" pos:column="28">(<pos:position pos:line="6" pos:column="29"/></operator><literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal> <operator pos:line="6" pos:column="31">==<pos:position pos:line="6" pos:column="33"/></operator> <call><name pos:line="6" pos:column="34">strcasecmp<pos:position pos:line="6" pos:column="44"/></name> <argument_list pos:line="6" pos:column="45">(<argument><expr><name pos:line="6" pos:column="46">severity<pos:position pos:line="6" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="56">"alert"<pos:position pos:line="6" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call><operator pos:line="6" pos:column="64">)<pos:position pos:line="6" pos:column="65"/></operator>
			<operator pos:line="7" pos:column="25">||<pos:position pos:line="7" pos:column="27"/></operator> <operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal> <operator pos:line="7" pos:column="31">==<pos:position pos:line="7" pos:column="33"/></operator> <call><name pos:line="7" pos:column="34">strcasecmp<pos:position pos:line="7" pos:column="44"/></name> <argument_list pos:line="7" pos:column="45">(<argument><expr><name pos:line="7" pos:column="46">severity<pos:position pos:line="7" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="56">"crit"<pos:position pos:line="7" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call><operator pos:line="7" pos:column="63">)<pos:position pos:line="7" pos:column="64"/></operator>
			<operator pos:line="8" pos:column="25">||<pos:position pos:line="8" pos:column="27"/></operator> <operator pos:line="8" pos:column="28">(<pos:position pos:line="8" pos:column="29"/></operator><literal type="number" pos:line="8" pos:column="29">0<pos:position pos:line="8" pos:column="30"/></literal> <operator pos:line="8" pos:column="31">==<pos:position pos:line="8" pos:column="33"/></operator> <call><name pos:line="8" pos:column="34">strcasecmp<pos:position pos:line="8" pos:column="44"/></name> <argument_list pos:line="8" pos:column="45">(<argument><expr><name pos:line="8" pos:column="46">severity<pos:position pos:line="8" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="56">"err"<pos:position pos:line="8" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call><operator pos:line="8" pos:column="62">)<pos:position pos:line="8" pos:column="63"/></operator></expr>)<pos:position pos:line="8" pos:column="64"/></condition><then pos:line="8" pos:column="64">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">log_level<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">LOG_ERR<pos:position pos:line="9" pos:column="36"/></name></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt></block></then>
	<elseif pos:line="10" pos:column="9">else <if pos:line="10" pos:column="14">if <condition pos:line="10" pos:column="17">(<expr><literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal> <operator pos:line="10" pos:column="20">==<pos:position pos:line="10" pos:column="22"/></operator> <call><name pos:line="10" pos:column="23">strcasecmp<pos:position pos:line="10" pos:column="33"/></name> <argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">severity<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="45">"warning"<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="56"/></condition><then pos:line="10" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">log_level<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">LOG_WARNING<pos:position pos:line="11" pos:column="40"/></name></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="12" pos:column="9">else <if pos:line="12" pos:column="14">if <condition pos:line="12" pos:column="17">(<expr><literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal> <operator pos:line="12" pos:column="20">==<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">strcasecmp<pos:position pos:line="12" pos:column="33"/></name> <argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">severity<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="45">"notice"<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="55"/></condition><then pos:line="12" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">log_level<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">=<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="29">LOG_NOTICE<pos:position pos:line="13" pos:column="39"/></name></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="14" pos:column="9">else <if pos:line="14" pos:column="14">if <condition pos:line="14" pos:column="17">(<expr><literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal> <operator pos:line="14" pos:column="20">==<pos:position pos:line="14" pos:column="22"/></operator> <call><name pos:line="14" pos:column="23">strcasecmp<pos:position pos:line="14" pos:column="33"/></name> <argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">severity<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="45">"info"<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="53"/></condition><then pos:line="14" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">log_level<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">LOG_INFO<pos:position pos:line="15" pos:column="37"/></name></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt></block></then></if></elseif>
<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">COLLECT_DEBUG<pos:position pos:line="16" pos:column="18"/></name></expr></cpp:if>
	<elseif pos:line="17" pos:column="9">else <if pos:line="17" pos:column="14">if <condition pos:line="17" pos:column="17">(<expr><literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">strcasecmp<pos:position pos:line="17" pos:column="33"/></name> <argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">severity<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="45">"debug"<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">log_level<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">LOG_DEBUG<pos:position pos:line="18" pos:column="38"/></name></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt></block></then></if></elseif></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="19" pos:column="8">/* COLLECT_DEBUG */</comment>

	<return pos:line="21" pos:column="9">return <expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">log_level<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">)<pos:position pos:line="21" pos:column="27"/></operator></expr>;<pos:position pos:line="21" pos:column="28"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_690_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">procstat_t<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ps_read_status<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">long<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">pid<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">procstat_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">ps<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fh<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buffer<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">1024<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">filename<pos:position pos:line="5" pos:column="22"/></name><index pos:line="5" pos:column="22">[<expr><literal type="number" pos:line="5" pos:column="23">64<pos:position pos:line="5" pos:column="25"/></literal></expr>]<pos:position pos:line="5" pos:column="26"/></index></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">lib<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">long<pos:position pos:line="7" pos:column="22"/></name></type> <name pos:line="7" pos:column="23">exe<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">long<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">data<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">long<pos:position pos:line="9" pos:column="22"/></name></type> <name pos:line="9" pos:column="23">threads<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><literal type="number" pos:line="9" pos:column="33">0<pos:position pos:line="9" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name><name pos:line="10" pos:column="15">fields<pos:position pos:line="10" pos:column="21"/></name><index pos:line="10" pos:column="21">[<expr><literal type="number" pos:line="10" pos:column="22">8<pos:position pos:line="10" pos:column="23"/></literal></expr>]<pos:position pos:line="10" pos:column="24"/></index></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">numfields<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">ssnprintf<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">filename<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="30">sizeof <argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">filename<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="49">"/proc/%li/status"<pos:position pos:line="13" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="69">pid<pos:position pos:line="13" pos:column="72"/></name></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="74"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">fh<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <call><name pos:line="14" pos:column="19">fopen<pos:position pos:line="14" pos:column="24"/></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">filename<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="36">"r"<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call><operator pos:line="14" pos:column="40">)<pos:position pos:line="14" pos:column="41"/></operator> <operator pos:line="14" pos:column="42">==<pos:position pos:line="14" pos:column="44"/></operator> <name pos:line="14" pos:column="45">NULL<pos:position pos:line="14" pos:column="49"/></name></expr>)<pos:position pos:line="14" pos:column="50"/></condition><then pos:line="14" pos:column="50">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">NULL<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">)<pos:position pos:line="15" pos:column="30"/></operator></expr>;<pos:position pos:line="15" pos:column="31"/></return></block></then></if>

	<while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><call><name pos:line="17" pos:column="16">fgets<pos:position pos:line="17" pos:column="21"/></name> <argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">buffer<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="31">sizeof<argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">buffer<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">fh<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call> <operator pos:line="17" pos:column="51">!=<pos:position pos:line="17" pos:column="53"/></operator> <name pos:line="17" pos:column="54">NULL<pos:position pos:line="17" pos:column="58"/></name></expr>)<pos:position pos:line="17" pos:column="59"/></condition>
	<block pos:line="18" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">unsigned<pos:position pos:line="19" pos:column="25"/></name> <name pos:line="19" pos:column="26">long<pos:position pos:line="19" pos:column="30"/></name></type> <name pos:line="19" pos:column="31">tmp<pos:position pos:line="19" pos:column="34"/></name></decl>;<pos:position pos:line="19" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">char<pos:position pos:line="20" pos:column="21"/></name> <modifier pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></modifier></type><name pos:line="20" pos:column="23">endptr<pos:position pos:line="20" pos:column="29"/></name></decl>;<pos:position pos:line="20" pos:column="30"/></decl_stmt>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><call><name pos:line="22" pos:column="21">strncmp<pos:position pos:line="22" pos:column="28"/></name> <argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">buffer<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="38">"Vm"<pos:position pos:line="22" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="44">2<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call> <operator pos:line="22" pos:column="47">!=<pos:position pos:line="22" pos:column="49"/></operator> <literal type="number" pos:line="22" pos:column="50">0<pos:position pos:line="22" pos:column="51"/></literal>
				<operator pos:line="23" pos:column="33">&amp;&amp;<pos:position pos:line="23" pos:column="43"/></operator> <call><name pos:line="23" pos:column="36">strncmp<pos:position pos:line="23" pos:column="43"/></name> <argument_list pos:line="23" pos:column="44">(<argument><expr><name pos:line="23" pos:column="45">buffer<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="53">"Threads"<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="64">7<pos:position pos:line="23" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call> <operator pos:line="23" pos:column="67">!=<pos:position pos:line="23" pos:column="69"/></operator> <literal type="number" pos:line="23" pos:column="70">0<pos:position pos:line="23" pos:column="71"/></literal></expr>)<pos:position pos:line="23" pos:column="72"/></condition><then pos:line="23" pos:column="72">
			<block type="pseudo"><continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="26" pos:column="17">numfields<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <call><name pos:line="26" pos:column="29">strsplit<pos:position pos:line="26" pos:column="37"/></name> <argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">buffer<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="47">fields<pos:position pos:line="26" pos:column="53"/></name></expr></argument>,
				<argument><expr><call><name pos:line="27" pos:column="33">STATIC_ARRAY_SIZE<pos:position pos:line="27" pos:column="50"/></name> <argument_list pos:line="27" pos:column="51">(<argument><expr><name pos:line="27" pos:column="52">fields<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">numfields<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">&lt;<pos:position pos:line="29" pos:column="35"/></operator> <literal type="number" pos:line="29" pos:column="33">2<pos:position pos:line="29" pos:column="34"/></literal></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35">
			<block type="pseudo"><continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="32" pos:column="17">errno<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <literal type="number" pos:line="32" pos:column="25">0<pos:position pos:line="32" pos:column="26"/></literal></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">endptr<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">NULL<pos:position pos:line="33" pos:column="30"/></name></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">tmp<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <call><name pos:line="34" pos:column="23">strtoul<pos:position pos:line="34" pos:column="30"/></name> <argument_list pos:line="34" pos:column="31">(<argument><expr><name><name pos:line="34" pos:column="32">fields<pos:position pos:line="34" pos:column="38"/></name><index pos:line="34" pos:column="38">[<expr><literal type="number" pos:line="34" pos:column="39">1<pos:position pos:line="34" pos:column="40"/></literal></expr>]<pos:position pos:line="34" pos:column="41"/></index></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="43">&amp;<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="44">endptr<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <comment type="block" pos:line="34" pos:column="52">/* base = */</comment> <argument><expr><literal type="number" pos:line="34" pos:column="65">10<pos:position pos:line="34" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="69"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">(<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">errno<pos:position pos:line="35" pos:column="27"/></name> <operator pos:line="35" pos:column="28">==<pos:position pos:line="35" pos:column="30"/></operator> <literal type="number" pos:line="35" pos:column="31">0<pos:position pos:line="35" pos:column="32"/></literal><operator pos:line="35" pos:column="32">)<pos:position pos:line="35" pos:column="33"/></operator> <operator pos:line="35" pos:column="34">&amp;&amp;<pos:position pos:line="35" pos:column="44"/></operator> <operator pos:line="35" pos:column="37">(<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">endptr<pos:position pos:line="35" pos:column="44"/></name> <operator pos:line="35" pos:column="45">!=<pos:position pos:line="35" pos:column="47"/></operator> <name><name pos:line="35" pos:column="48">fields<pos:position pos:line="35" pos:column="54"/></name><index pos:line="35" pos:column="54">[<expr><literal type="number" pos:line="35" pos:column="55">1<pos:position pos:line="35" pos:column="56"/></literal></expr>]<pos:position pos:line="35" pos:column="57"/></index></name><operator pos:line="35" pos:column="57">)<pos:position pos:line="35" pos:column="58"/></operator></expr>)<pos:position pos:line="35" pos:column="59"/></condition><then pos:line="35" pos:column="59">
		<block pos:line="36" pos:column="17">{
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><call><name pos:line="37" pos:column="29">strncmp<pos:position pos:line="37" pos:column="36"/></name> <argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">buffer<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="46">"VmData"<pos:position pos:line="37" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="56">6<pos:position pos:line="37" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call> <operator pos:line="37" pos:column="59">==<pos:position pos:line="37" pos:column="61"/></operator> <literal type="number" pos:line="37" pos:column="62">0<pos:position pos:line="37" pos:column="63"/></literal></expr>)<pos:position pos:line="37" pos:column="64"/></condition><then pos:line="37" pos:column="64">
			<block pos:line="38" pos:column="25">{
				<expr_stmt><expr><name pos:line="39" pos:column="33">data<pos:position pos:line="39" pos:column="37"/></name> <operator pos:line="39" pos:column="38">=<pos:position pos:line="39" pos:column="39"/></operator> <name pos:line="39" pos:column="40">tmp<pos:position pos:line="39" pos:column="43"/></name></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
			}<pos:position pos:line="40" pos:column="26"/></block></then>
			<elseif pos:line="41" pos:column="25">else <if pos:line="41" pos:column="30">if <condition pos:line="41" pos:column="33">(<expr><call><name pos:line="41" pos:column="34">strncmp<pos:position pos:line="41" pos:column="41"/></name> <argument_list pos:line="41" pos:column="42">(<argument><expr><name pos:line="41" pos:column="43">buffer<pos:position pos:line="41" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="51">"VmLib"<pos:position pos:line="41" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="60">5<pos:position pos:line="41" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call> <operator pos:line="41" pos:column="63">==<pos:position pos:line="41" pos:column="65"/></operator> <literal type="number" pos:line="41" pos:column="66">0<pos:position pos:line="41" pos:column="67"/></literal></expr>)<pos:position pos:line="41" pos:column="68"/></condition><then pos:line="41" pos:column="68">
			<block pos:line="42" pos:column="25">{
				<expr_stmt><expr><name pos:line="43" pos:column="33">lib<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">=<pos:position pos:line="43" pos:column="38"/></operator> <name pos:line="43" pos:column="39">tmp<pos:position pos:line="43" pos:column="42"/></name></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
			}<pos:position pos:line="44" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="45" pos:column="25">else <if pos:line="45" pos:column="30">if  <condition pos:line="45" pos:column="34">(<expr><call><name pos:line="45" pos:column="35">strncmp<pos:position pos:line="45" pos:column="42"/></name><argument_list pos:line="45" pos:column="42">(<argument><expr><name pos:line="45" pos:column="43">buffer<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="51">"VmExe"<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="60">5<pos:position pos:line="45" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="62"/></argument_list></call> <operator pos:line="45" pos:column="63">==<pos:position pos:line="45" pos:column="65"/></operator> <literal type="number" pos:line="45" pos:column="66">0<pos:position pos:line="45" pos:column="67"/></literal></expr>)<pos:position pos:line="45" pos:column="68"/></condition><then pos:line="45" pos:column="68">
			<block pos:line="46" pos:column="25">{
				<expr_stmt><expr><name pos:line="47" pos:column="33">exe<pos:position pos:line="47" pos:column="36"/></name> <operator pos:line="47" pos:column="37">=<pos:position pos:line="47" pos:column="38"/></operator> <name pos:line="47" pos:column="39">tmp<pos:position pos:line="47" pos:column="42"/></name></expr>;<pos:position pos:line="47" pos:column="43"/></expr_stmt>
			}<pos:position pos:line="48" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="49" pos:column="25">else <if pos:line="49" pos:column="30">if  <condition pos:line="49" pos:column="34">(<expr><call><name pos:line="49" pos:column="35">strncmp<pos:position pos:line="49" pos:column="42"/></name><argument_list pos:line="49" pos:column="42">(<argument><expr><name pos:line="49" pos:column="43">buffer<pos:position pos:line="49" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="51">"Threads"<pos:position pos:line="49" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="62">7<pos:position pos:line="49" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="64"/></argument_list></call> <operator pos:line="49" pos:column="65">==<pos:position pos:line="49" pos:column="67"/></operator> <literal type="number" pos:line="49" pos:column="68">0<pos:position pos:line="49" pos:column="69"/></literal></expr>)<pos:position pos:line="49" pos:column="70"/></condition><then pos:line="49" pos:column="70">
			<block pos:line="50" pos:column="25">{
				<expr_stmt><expr><name pos:line="51" pos:column="33">threads<pos:position pos:line="51" pos:column="40"/></name> <operator pos:line="51" pos:column="41">=<pos:position pos:line="51" pos:column="42"/></operator> <name pos:line="51" pos:column="43">tmp<pos:position pos:line="51" pos:column="46"/></name></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="52" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>
	}<pos:position pos:line="54" pos:column="10"/></block></while> <comment type="block" pos:line="54" pos:column="11">/* while (fgets) */</comment>

	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">fclose<pos:position pos:line="56" pos:column="19"/></name> <argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">fh<pos:position pos:line="56" pos:column="23"/></name></expr></argument>)<pos:position pos:line="56" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="25"/></condition><then pos:line="56" pos:column="25">
	<block pos:line="57" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="58" pos:column="17">char<pos:position pos:line="58" pos:column="21"/></name></type> <name><name pos:line="58" pos:column="22">errbuf<pos:position pos:line="58" pos:column="28"/></name><index pos:line="58" pos:column="28">[<expr><literal type="number" pos:line="58" pos:column="29">1024<pos:position pos:line="58" pos:column="33"/></literal></expr>]<pos:position pos:line="58" pos:column="34"/></index></name></decl>;<pos:position pos:line="58" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">WARNING<pos:position pos:line="59" pos:column="24"/></name> <argument_list pos:line="59" pos:column="25">(<argument><expr><literal type="string" pos:line="59" pos:column="26">"processes: fclose: %s"<pos:position pos:line="59" pos:column="49"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="60" pos:column="33">sstrerror<pos:position pos:line="60" pos:column="42"/></name> <argument_list pos:line="60" pos:column="43">(<argument><expr><name pos:line="60" pos:column="44">errno<pos:position pos:line="60" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="51">errbuf<pos:position pos:line="60" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="59">sizeof <argument_list pos:line="60" pos:column="66">(<argument><expr><name pos:line="60" pos:column="67">errbuf<pos:position pos:line="60" pos:column="73"/></name></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="63" pos:column="9">ps<pos:position pos:line="63" pos:column="11"/></name><operator pos:line="63" pos:column="11">-&gt;<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="13">vmem_data<pos:position pos:line="63" pos:column="22"/></name></name> <operator pos:line="63" pos:column="23">=<pos:position pos:line="63" pos:column="24"/></operator> <name pos:line="63" pos:column="25">data<pos:position pos:line="63" pos:column="29"/></name> <operator pos:line="63" pos:column="30">*<pos:position pos:line="63" pos:column="31"/></operator> <literal type="number" pos:line="63" pos:column="32">1024<pos:position pos:line="63" pos:column="36"/></literal></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="64" pos:column="9">ps<pos:position pos:line="64" pos:column="11"/></name><operator pos:line="64" pos:column="11">-&gt;<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="13">vmem_code<pos:position pos:line="64" pos:column="22"/></name></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <operator pos:line="64" pos:column="25">(<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="26">exe<pos:position pos:line="64" pos:column="29"/></name> <operator pos:line="64" pos:column="30">+<pos:position pos:line="64" pos:column="31"/></operator> <name pos:line="64" pos:column="32">lib<pos:position pos:line="64" pos:column="35"/></name><operator pos:line="64" pos:column="35">)<pos:position pos:line="64" pos:column="36"/></operator> <operator pos:line="64" pos:column="37">*<pos:position pos:line="64" pos:column="38"/></operator> <literal type="number" pos:line="64" pos:column="39">1024<pos:position pos:line="64" pos:column="43"/></literal></expr>;<pos:position pos:line="64" pos:column="44"/></expr_stmt>
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">threads<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">!=<pos:position pos:line="65" pos:column="23"/></operator> <literal type="number" pos:line="65" pos:column="24">0<pos:position pos:line="65" pos:column="25"/></literal></expr>)<pos:position pos:line="65" pos:column="26"/></condition><then pos:line="65" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="66" pos:column="17">ps<pos:position pos:line="66" pos:column="19"/></name><operator pos:line="66" pos:column="19">-&gt;<pos:position pos:line="66" pos:column="24"/></operator><name pos:line="66" pos:column="21">num_lwp<pos:position pos:line="66" pos:column="28"/></name></name> <operator pos:line="66" pos:column="29">=<pos:position pos:line="66" pos:column="30"/></operator> <name pos:line="66" pos:column="31">threads<pos:position pos:line="66" pos:column="38"/></name></expr>;<pos:position pos:line="66" pos:column="39"/></expr_stmt></block></then></if>

	<return pos:line="68" pos:column="9">return <expr><operator pos:line="68" pos:column="16">(<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="17">ps<pos:position pos:line="68" pos:column="19"/></name><operator pos:line="68" pos:column="19">)<pos:position pos:line="68" pos:column="20"/></operator></expr>;<pos:position pos:line="68" pos:column="21"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

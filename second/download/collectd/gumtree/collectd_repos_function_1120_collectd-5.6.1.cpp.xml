<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1120_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_handle_snapvault_iter<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">host_config_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">host<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="60">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">na_elem_t<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">data<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">tag<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">uint32_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">records_count<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">records_count<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <call><name pos:line="8" pos:column="25">na_child_get_uint32<pos:position pos:line="8" pos:column="44"/></name> <argument_list pos:line="8" pos:column="45">(<argument><expr><name pos:line="8" pos:column="46">data<pos:position pos:line="8" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="52">"records"<pos:position pos:line="8" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="63">UINT32_MAX<pos:position pos:line="8" pos:column="73"/></name></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="75"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">records_count<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">==<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">UINT32_MAX<pos:position pos:line="9" pos:column="40"/></name></expr>)<pos:position pos:line="9" pos:column="41"/></condition><then pos:line="9" pos:column="41">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">tag<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">na_child_get_string<pos:position pos:line="12" pos:column="34"/></name> <argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">data<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="42">"tag"<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">tag<pos:position pos:line="13" pos:column="18"/></name></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">DEBUG<pos:position pos:line="16" pos:column="14"/></name> <argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="string" pos:line="16" pos:column="16">"netapp plugin: Iterating %u SV records (tag = %s)"<pos:position pos:line="16" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="69">records_count<pos:position pos:line="16" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="84">tag<pos:position pos:line="16" pos:column="87"/></name></expr></argument>)<pos:position pos:line="16" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="89"/></expr_stmt>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><decl><type><name pos:line="18" pos:column="14">uint32_t<pos:position pos:line="18" pos:column="22"/></name></type> <name pos:line="18" pos:column="23">i<pos:position pos:line="18" pos:column="24"/></name> <init pos:line="18" pos:column="25">= <expr><literal type="number" pos:line="18" pos:column="27">0<pos:position pos:line="18" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="29"/></init> <condition><expr><name pos:line="18" pos:column="30">i<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">&lt;<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="34">records_count<pos:position pos:line="18" pos:column="47"/></name></expr>;<pos:position pos:line="18" pos:column="48"/></condition> <incr><expr><operator pos:line="18" pos:column="49">++<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">i<pos:position pos:line="18" pos:column="52"/></name></expr></incr>)<pos:position pos:line="18" pos:column="53"/></control> <block pos:line="18" pos:column="54">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">na_elem_t<pos:position pos:line="19" pos:column="26"/></name> <modifier pos:line="19" pos:column="27">*<pos:position pos:line="19" pos:column="28"/></modifier></type><name pos:line="19" pos:column="28">elem<pos:position pos:line="19" pos:column="32"/></name></decl>;<pos:position pos:line="19" pos:column="33"/></decl_stmt>

		<expr_stmt><expr><name pos:line="21" pos:column="17">elem<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">na_server_invoke<pos:position pos:line="21" pos:column="40"/></name> <argument_list pos:line="21" pos:column="41">(<argument><expr><name><name pos:line="21" pos:column="42">host<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">-&gt;<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="48">srv<pos:position pos:line="21" pos:column="51"/></name></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="22" pos:column="33">"snapvault-secondary-relationship-status-list-iter-next"<pos:position pos:line="22" pos:column="89"/></literal></expr></argument>,
				<argument><expr><literal type="string" pos:line="23" pos:column="33">"maximum"<pos:position pos:line="23" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="44">"1"<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="49">"tag"<pos:position pos:line="23" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="56">tag<pos:position pos:line="23" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="61">NULL<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">na_results_status<pos:position pos:line="25" pos:column="38"/></name> <argument_list pos:line="25" pos:column="39">(<argument><expr><name pos:line="25" pos:column="40">elem<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call> <operator pos:line="25" pos:column="46">!=<pos:position pos:line="25" pos:column="48"/></operator> <name pos:line="25" pos:column="49">NA_OK<pos:position pos:line="25" pos:column="54"/></name></expr>)<pos:position pos:line="25" pos:column="55"/></condition><then pos:line="25" pos:column="55">
		<block pos:line="26" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">ERROR<pos:position pos:line="27" pos:column="30"/></name> <argument_list pos:line="27" pos:column="31">(<argument><expr><literal type="string" pos:line="27" pos:column="32">"netapp plugin: cna_handle_snapvault_iter: "<pos:position pos:line="27" pos:column="76"/></literal>
					<literal type="string" pos:line="28" pos:column="41">"na_server_invoke failed for host %s: %s"<pos:position pos:line="28" pos:column="82"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="29" pos:column="41">host<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">-&gt;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="47">name<pos:position pos:line="29" pos:column="51"/></name></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="53">na_results_reason<pos:position pos:line="29" pos:column="70"/></name> <argument_list pos:line="29" pos:column="71">(<argument><expr><name pos:line="29" pos:column="72">data<pos:position pos:line="29" pos:column="76"/></name></expr></argument>)<pos:position pos:line="29" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="79"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">na_elem_free<pos:position pos:line="30" pos:column="37"/></name> <argument_list pos:line="30" pos:column="38">(<argument><expr><name pos:line="30" pos:column="39">elem<pos:position pos:line="30" pos:column="43"/></name></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
			<return pos:line="31" pos:column="25">return <expr><operator pos:line="31" pos:column="32">(<pos:position pos:line="31" pos:column="33"/></operator><operator pos:line="31" pos:column="33">-<pos:position pos:line="31" pos:column="34"/></operator><literal type="number" pos:line="31" pos:column="34">1<pos:position pos:line="31" pos:column="35"/></literal><operator pos:line="31" pos:column="35">)<pos:position pos:line="31" pos:column="36"/></operator></expr>;<pos:position pos:line="31" pos:column="37"/></return>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="34" pos:column="17">cna_handle_snapvault_data<pos:position pos:line="34" pos:column="42"/></name> <argument_list pos:line="34" pos:column="43">(<argument><expr><name><name pos:line="34" pos:column="44">host<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">-&gt;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="50">name<pos:position pos:line="34" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="56">host<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">-&gt;<pos:position pos:line="34" pos:column="65"/></operator><name pos:line="34" pos:column="62">cfg_snapvault<pos:position pos:line="34" pos:column="75"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="77">elem<pos:position pos:line="34" pos:column="81"/></name></expr></argument>,
				<argument><expr><name><name pos:line="35" pos:column="33">host<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">cfg_snapvault<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">-&gt;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="54">interval<pos:position pos:line="35" pos:column="62"/></name><operator pos:line="35" pos:column="62">.<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="63">interval<pos:position pos:line="35" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">na_elem_free<pos:position pos:line="36" pos:column="29"/></name> <argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">elem<pos:position pos:line="36" pos:column="35"/></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="39" pos:column="9">na_elem_free<pos:position pos:line="39" pos:column="21"/></name> <argument_list pos:line="39" pos:column="22">(<argument><expr><call><name pos:line="39" pos:column="23">na_server_invoke<pos:position pos:line="39" pos:column="39"/></name> <argument_list pos:line="39" pos:column="40">(<argument><expr><name><name pos:line="39" pos:column="41">host<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">-&gt;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="47">srv<pos:position pos:line="39" pos:column="50"/></name></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="40" pos:column="25">"snapvault-secondary-relationship-status-list-iter-end"<pos:position pos:line="40" pos:column="80"/></literal></expr></argument>,
			<argument><expr><literal type="string" pos:line="41" pos:column="25">"tag"<pos:position pos:line="41" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="32">tag<pos:position pos:line="41" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="37">NULL<pos:position pos:line="41" pos:column="41"/></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>
	<return pos:line="42" pos:column="9">return <expr><operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><literal type="number" pos:line="42" pos:column="17">0<pos:position pos:line="42" pos:column="18"/></literal><operator pos:line="42" pos:column="18">)<pos:position pos:line="42" pos:column="19"/></operator></expr>;<pos:position pos:line="42" pos:column="20"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

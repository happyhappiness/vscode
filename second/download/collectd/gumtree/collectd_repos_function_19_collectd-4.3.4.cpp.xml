<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_19_collectd-4.3.4.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">lt_estrdup<pos:position pos:line="2" pos:column="11"/></name> <argument_list pos:line="2" pos:column="12">(<argument><expr><name pos:line="2" pos:column="13">str<pos:position pos:line="2" pos:column="16"/></name></expr></argument>)<pos:position pos:line="2" pos:column="17"/></argument_list>
     const <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><name pos:line="3" pos:column="18">str<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">copy<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><call><name pos:line="5" pos:column="16">strdup<pos:position pos:line="5" pos:column="22"/></name> <argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">str<pos:position pos:line="5" pos:column="27"/></name></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">LT_STRLEN<pos:position pos:line="6" pos:column="16"/></name> <argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">str<pos:position pos:line="6" pos:column="21"/></name></expr></argument>)<pos:position pos:line="6" pos:column="22"/></argument_list></call> <operator pos:line="6" pos:column="23">&amp;&amp;<pos:position pos:line="6" pos:column="33"/></operator> <operator pos:line="6" pos:column="26">!<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">copy<pos:position pos:line="6" pos:column="31"/></name></expr>)<pos:position pos:line="6" pos:column="32"/></condition><then pos:line="6" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="5">LT_DLMUTEX_SETERROR<pos:position pos:line="7" pos:column="24"/></name> <argument_list pos:line="7" pos:column="25">(<argument><expr><call><name pos:line="7" pos:column="26">LT_DLSTRERROR<pos:position pos:line="7" pos:column="39"/></name> <argument_list pos:line="7" pos:column="40">(<argument><expr><name pos:line="7" pos:column="41">NO_MEMORY<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt></block></then></if>
  <return pos:line="8" pos:column="3">return <expr><name pos:line="8" pos:column="10">copy<pos:position pos:line="8" pos:column="14"/></name></expr>;<pos:position pos:line="8" pos:column="15"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></unit>

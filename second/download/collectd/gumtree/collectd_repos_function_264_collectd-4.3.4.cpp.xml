<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_264_collectd-4.3.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">uc_update<pos:position pos:line="1" pos:column="14"/></name> <parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><specifier pos:line="1" pos:column="16">const<pos:position pos:line="1" pos:column="21"/></specifier> <name pos:line="1" pos:column="22">data_set_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">ds<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">value_list_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">vl<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">name<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><literal type="number" pos:line="3" pos:column="13">6<pos:position pos:line="3" pos:column="14"/></literal> <operator pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></operator> <name pos:line="3" pos:column="17">DATA_MAX_NAME_LEN<pos:position pos:line="3" pos:column="34"/></name></expr>]<pos:position pos:line="3" pos:column="35"/></index></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cache_entry_t<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">ce<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">send_okay_notification<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><literal type="number" pos:line="5" pos:column="32">0<pos:position pos:line="5" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">time_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">update_delay<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">notification_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">n<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">i<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">FORMAT_VL<pos:position pos:line="11" pos:column="16"/></name> <argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">name<pos:position pos:line="11" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="24">sizeof <argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">name<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">vl<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">ds<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call> <operator pos:line="11" pos:column="47">!=<pos:position pos:line="11" pos:column="49"/></operator> <literal type="number" pos:line="11" pos:column="50">0<pos:position pos:line="11" pos:column="51"/></literal></expr>)<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name> <argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="string" pos:line="13" pos:column="12">"uc_update: FORMAT_VL failed."<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">pthread_mutex_lock<pos:position pos:line="17" pos:column="21"/></name> <argument_list pos:line="17" pos:column="22">(<argument><expr><operator pos:line="17" pos:column="23">&amp;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="24">cache_lock<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">status<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">c_avl_get<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">cache_tree<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">name<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="41">(<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">void<pos:position pos:line="19" pos:column="46"/></name> <operator pos:line="19" pos:column="47">*<pos:position pos:line="19" pos:column="48"/></operator><operator pos:line="19" pos:column="48">)<pos:position pos:line="19" pos:column="49"/></operator> <operator pos:line="19" pos:column="50">&amp;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="51">ce<pos:position pos:line="19" pos:column="53"/></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">status<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">!=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19"> <comment type="block" pos:line="20" pos:column="20">/* entry does not yet exist */</comment>
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">status<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">uc_insert<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">ds<pos:position pos:line="22" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="29">vl<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="33">name<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">pthread_mutex_unlock<pos:position pos:line="23" pos:column="25"/></name> <argument_list pos:line="23" pos:column="26">(<argument><expr><operator pos:line="23" pos:column="27">&amp;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="28">cache_lock<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">status<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">)<pos:position pos:line="24" pos:column="20"/></operator></expr>;<pos:position pos:line="24" pos:column="21"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">assert<pos:position pos:line="27" pos:column="9"/></name> <argument_list pos:line="27" pos:column="10">(<argument><expr><name pos:line="27" pos:column="11">ce<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">!=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">NULL<pos:position pos:line="27" pos:column="21"/></name></expr></argument>)<pos:position pos:line="27" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">assert<pos:position pos:line="28" pos:column="9"/></name> <argument_list pos:line="28" pos:column="10">(<argument><expr><name><name pos:line="28" pos:column="11">ce<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">values_num<pos:position pos:line="28" pos:column="25"/></name></name> <operator pos:line="28" pos:column="26">==<pos:position pos:line="28" pos:column="28"/></operator> <name><name pos:line="28" pos:column="29">ds<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">ds_num<pos:position pos:line="28" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name><name pos:line="30" pos:column="7">ce<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">-&gt;<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="11">last_time<pos:position pos:line="30" pos:column="20"/></name></name> <operator pos:line="30" pos:column="21">&gt;=<pos:position pos:line="30" pos:column="26"/></operator> <name><name pos:line="30" pos:column="24">vl<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">-&gt;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="28">time<pos:position pos:line="30" pos:column="32"/></name></name></expr>)<pos:position pos:line="30" pos:column="33"/></condition><then pos:line="30" pos:column="33">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">pthread_mutex_unlock<pos:position pos:line="32" pos:column="25"/></name> <argument_list pos:line="32" pos:column="26">(<argument><expr><operator pos:line="32" pos:column="27">&amp;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="28">cache_lock<pos:position pos:line="32" pos:column="38"/></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">NOTICE<pos:position pos:line="33" pos:column="11"/></name> <argument_list pos:line="33" pos:column="12">(<argument><expr><literal type="string" pos:line="33" pos:column="13">"uc_update: Value too old: name = %s; value time = %u; "<pos:position pos:line="33" pos:column="69"/></literal>
	<literal type="string" pos:line="34" pos:column="9">"last cache update = %u;"<pos:position pos:line="34" pos:column="34"/></literal></expr></argument>,
	<argument><expr><name pos:line="35" pos:column="9">name<pos:position pos:line="35" pos:column="13"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="15">(<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">unsigned<pos:position pos:line="35" pos:column="24"/></name> <name pos:line="35" pos:column="25">int<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">)<pos:position pos:line="35" pos:column="29"/></operator> <name><name pos:line="35" pos:column="30">vl<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">time<pos:position pos:line="35" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="40">(<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="41">unsigned<pos:position pos:line="35" pos:column="49"/></name> <name pos:line="35" pos:column="50">int<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">)<pos:position pos:line="35" pos:column="54"/></operator> <name><name pos:line="35" pos:column="55">ce<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">-&gt;<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="59">last_time<pos:position pos:line="35" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="70"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><operator pos:line="36" pos:column="13">-<pos:position pos:line="36" pos:column="14"/></operator><literal type="number" pos:line="36" pos:column="14">1<pos:position pos:line="36" pos:column="15"/></literal><operator pos:line="36" pos:column="15">)<pos:position pos:line="36" pos:column="16"/></operator></expr>;<pos:position pos:line="36" pos:column="17"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="39" pos:column="3">/* Send a notification (after the lock has been released) if we switch the
   * state from something else to `okay'. */</comment>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name><name pos:line="41" pos:column="7">ce<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">state<pos:position pos:line="41" pos:column="16"/></name></name> <operator pos:line="41" pos:column="17">==<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">STATE_MISSING<pos:position pos:line="41" pos:column="33"/></name></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34">
  <block pos:line="42" pos:column="3">{
    <expr_stmt><expr><name pos:line="43" pos:column="5">send_okay_notification<pos:position pos:line="43" pos:column="27"/></name> <operator pos:line="43" pos:column="28">=<pos:position pos:line="43" pos:column="29"/></operator> <literal type="number" pos:line="43" pos:column="30">1<pos:position pos:line="43" pos:column="31"/></literal></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">ce<pos:position pos:line="44" pos:column="7"/></name><operator pos:line="44" pos:column="7">-&gt;<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="9">state<pos:position pos:line="44" pos:column="14"/></name></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">STATE_OKAY<pos:position pos:line="44" pos:column="27"/></name></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">update_delay<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <call><name pos:line="45" pos:column="20">time<pos:position pos:line="45" pos:column="24"/></name> <argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">NULL<pos:position pos:line="45" pos:column="30"/></name></expr></argument>)<pos:position pos:line="45" pos:column="31"/></argument_list></call> <operator pos:line="45" pos:column="32">-<pos:position pos:line="45" pos:column="33"/></operator> <name><name pos:line="45" pos:column="34">ce<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">last_update<pos:position pos:line="45" pos:column="49"/></name></name></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <for pos:line="48" pos:column="3">for <control pos:line="48" pos:column="7">(<init><expr><name pos:line="48" pos:column="8">i<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">=<pos:position pos:line="48" pos:column="11"/></operator> <literal type="number" pos:line="48" pos:column="12">0<pos:position pos:line="48" pos:column="13"/></literal></expr>;<pos:position pos:line="48" pos:column="14"/></init> <condition><expr><name pos:line="48" pos:column="15">i<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">&lt;<pos:position pos:line="48" pos:column="21"/></operator> <name><name pos:line="48" pos:column="19">ds<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">-&gt;<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="23">ds_num<pos:position pos:line="48" pos:column="29"/></name></name></expr>;<pos:position pos:line="48" pos:column="30"/></condition> <incr><expr><name pos:line="48" pos:column="31">i<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">++<pos:position pos:line="48" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="48" pos:column="35"/></control>
  <block pos:line="49" pos:column="3">{
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">ds<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">ds<pos:position pos:line="50" pos:column="15"/></name><index pos:line="50" pos:column="15">[<expr><name pos:line="50" pos:column="16">i<pos:position pos:line="50" pos:column="17"/></name></expr>]<pos:position pos:line="50" pos:column="18"/></index></name><operator pos:line="50" pos:column="18">.<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="19">type<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">==<pos:position pos:line="50" pos:column="26"/></operator> <name pos:line="50" pos:column="27">DS_TYPE_COUNTER<pos:position pos:line="50" pos:column="42"/></name></expr>)<pos:position pos:line="50" pos:column="43"/></condition><then pos:line="50" pos:column="43">
    <block pos:line="51" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="52" pos:column="7">counter_t<pos:position pos:line="52" pos:column="16"/></name></type> <name pos:line="52" pos:column="17">diff<pos:position pos:line="52" pos:column="21"/></name></decl>;<pos:position pos:line="52" pos:column="22"/></decl_stmt>

      <comment type="block" pos:line="54" pos:column="7">/* check if the counter has wrapped around */</comment>
      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><name><name pos:line="55" pos:column="11">vl<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">-&gt;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="15">values<pos:position pos:line="55" pos:column="21"/></name><index pos:line="55" pos:column="21">[<expr><name pos:line="55" pos:column="22">i<pos:position pos:line="55" pos:column="23"/></name></expr>]<pos:position pos:line="55" pos:column="24"/></index></name><operator pos:line="55" pos:column="24">.<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="25">counter<pos:position pos:line="55" pos:column="32"/></name> <operator pos:line="55" pos:column="33">&lt;<pos:position pos:line="55" pos:column="37"/></operator> <name><name pos:line="55" pos:column="35">ce<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">-&gt;<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="39">values_counter<pos:position pos:line="55" pos:column="53"/></name><index pos:line="55" pos:column="53">[<expr><name pos:line="55" pos:column="54">i<pos:position pos:line="55" pos:column="55"/></name></expr>]<pos:position pos:line="55" pos:column="56"/></index></name></expr>)<pos:position pos:line="55" pos:column="57"/></condition><then pos:line="55" pos:column="57">
      <block pos:line="56" pos:column="7">{
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">ce<pos:position pos:line="57" pos:column="15"/></name><operator pos:line="57" pos:column="15">-&gt;<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="17">values_counter<pos:position pos:line="57" pos:column="31"/></name><index pos:line="57" pos:column="31">[<expr><name pos:line="57" pos:column="32">i<pos:position pos:line="57" pos:column="33"/></name></expr>]<pos:position pos:line="57" pos:column="34"/></index></name> <operator pos:line="57" pos:column="35">&lt;=<pos:position pos:line="57" pos:column="40"/></operator> <literal type="number" pos:line="57" pos:column="38">4294967295U<pos:position pos:line="57" pos:column="49"/></literal></expr>)<pos:position pos:line="57" pos:column="50"/></condition><then pos:line="57" pos:column="50">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="11">diff<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <operator pos:line="58" pos:column="18">(<pos:position pos:line="58" pos:column="19"/></operator><literal type="number" pos:line="58" pos:column="19">4294967295U<pos:position pos:line="58" pos:column="30"/></literal> <operator pos:line="58" pos:column="31">-<pos:position pos:line="58" pos:column="32"/></operator> <name><name pos:line="58" pos:column="33">ce<pos:position pos:line="58" pos:column="35"/></name><operator pos:line="58" pos:column="35">-&gt;<pos:position pos:line="58" pos:column="40"/></operator><name pos:line="58" pos:column="37">values_counter<pos:position pos:line="58" pos:column="51"/></name><index pos:line="58" pos:column="51">[<expr><name pos:line="58" pos:column="52">i<pos:position pos:line="58" pos:column="53"/></name></expr>]<pos:position pos:line="58" pos:column="54"/></index></name><operator pos:line="58" pos:column="54">)<pos:position pos:line="58" pos:column="55"/></operator>
	    <operator pos:line="59" pos:column="13">+<pos:position pos:line="59" pos:column="14"/></operator> <name><name pos:line="59" pos:column="15">vl<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">values<pos:position pos:line="59" pos:column="25"/></name><index pos:line="59" pos:column="25">[<expr><name pos:line="59" pos:column="26">i<pos:position pos:line="59" pos:column="27"/></name></expr>]<pos:position pos:line="59" pos:column="28"/></index></name><operator pos:line="59" pos:column="28">.<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="29">counter<pos:position pos:line="59" pos:column="36"/></name></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt></block></then>
	<else pos:line="60" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="11">diff<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <operator pos:line="61" pos:column="18">(<pos:position pos:line="61" pos:column="19"/></operator><literal type="number" pos:line="61" pos:column="19">18446744073709551615ULL<pos:position pos:line="61" pos:column="42"/></literal> <operator pos:line="61" pos:column="43">-<pos:position pos:line="61" pos:column="44"/></operator> <name><name pos:line="61" pos:column="45">ce<pos:position pos:line="61" pos:column="47"/></name><operator pos:line="61" pos:column="47">-&gt;<pos:position pos:line="61" pos:column="52"/></operator><name pos:line="61" pos:column="49">values_counter<pos:position pos:line="61" pos:column="63"/></name><index pos:line="61" pos:column="63">[<expr><name pos:line="61" pos:column="64">i<pos:position pos:line="61" pos:column="65"/></name></expr>]<pos:position pos:line="61" pos:column="66"/></index></name><operator pos:line="61" pos:column="66">)<pos:position pos:line="61" pos:column="67"/></operator>
	    <operator pos:line="62" pos:column="13">+<pos:position pos:line="62" pos:column="14"/></operator> <name><name pos:line="62" pos:column="15">vl<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">-&gt;<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="19">values<pos:position pos:line="62" pos:column="25"/></name><index pos:line="62" pos:column="25">[<expr><name pos:line="62" pos:column="26">i<pos:position pos:line="62" pos:column="27"/></name></expr>]<pos:position pos:line="62" pos:column="28"/></index></name><operator pos:line="62" pos:column="28">.<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="29">counter<pos:position pos:line="62" pos:column="36"/></name></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt></block></else></if>
      }<pos:position pos:line="63" pos:column="8"/></block></then>
      <else pos:line="64" pos:column="7">else <comment type="block" pos:line="64" pos:column="12">/* counter has NOT wrapped around */</comment>
      <block pos:line="65" pos:column="7">{
	<expr_stmt><expr><name pos:line="66" pos:column="9">diff<pos:position pos:line="66" pos:column="13"/></name> <operator pos:line="66" pos:column="14">=<pos:position pos:line="66" pos:column="15"/></operator> <name><name pos:line="66" pos:column="16">vl<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">-&gt;<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="20">values<pos:position pos:line="66" pos:column="26"/></name><index pos:line="66" pos:column="26">[<expr><name pos:line="66" pos:column="27">i<pos:position pos:line="66" pos:column="28"/></name></expr>]<pos:position pos:line="66" pos:column="29"/></index></name><operator pos:line="66" pos:column="29">.<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="30">counter<pos:position pos:line="66" pos:column="37"/></name> <operator pos:line="66" pos:column="38">-<pos:position pos:line="66" pos:column="39"/></operator> <name><name pos:line="66" pos:column="40">ce<pos:position pos:line="66" pos:column="42"/></name><operator pos:line="66" pos:column="42">-&gt;<pos:position pos:line="66" pos:column="47"/></operator><name pos:line="66" pos:column="44">values_counter<pos:position pos:line="66" pos:column="58"/></name><index pos:line="66" pos:column="58">[<expr><name pos:line="66" pos:column="59">i<pos:position pos:line="66" pos:column="60"/></name></expr>]<pos:position pos:line="66" pos:column="61"/></index></name></expr>;<pos:position pos:line="66" pos:column="62"/></expr_stmt>
      }<pos:position pos:line="67" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name><name pos:line="69" pos:column="7">ce<pos:position pos:line="69" pos:column="9"/></name><operator pos:line="69" pos:column="9">-&gt;<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="11">values_gauge<pos:position pos:line="69" pos:column="23"/></name><index pos:line="69" pos:column="23">[<expr><name pos:line="69" pos:column="24">i<pos:position pos:line="69" pos:column="25"/></name></expr>]<pos:position pos:line="69" pos:column="26"/></index></name> <operator pos:line="69" pos:column="27">=<pos:position pos:line="69" pos:column="28"/></operator> <operator pos:line="69" pos:column="29">(<pos:position pos:line="69" pos:column="30"/></operator><operator pos:line="69" pos:column="30">(<pos:position pos:line="69" pos:column="31"/></operator><name pos:line="69" pos:column="31">double<pos:position pos:line="69" pos:column="37"/></name><operator pos:line="69" pos:column="37">)<pos:position pos:line="69" pos:column="38"/></operator> <name pos:line="69" pos:column="39">diff<pos:position pos:line="69" pos:column="43"/></name><operator pos:line="69" pos:column="43">)<pos:position pos:line="69" pos:column="44"/></operator>
	<operator pos:line="70" pos:column="9">/<pos:position pos:line="70" pos:column="10"/></operator> <operator pos:line="70" pos:column="11">(<pos:position pos:line="70" pos:column="12"/></operator><call pos:line="70" pos:column="12">(<name pos:line="70" pos:column="13">double<pos:position pos:line="70" pos:column="19"/></name>) <argument_list pos:line="70" pos:column="21">(<argument><expr><name><name pos:line="70" pos:column="22">vl<pos:position pos:line="70" pos:column="24"/></name><operator pos:line="70" pos:column="24">-&gt;<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="26">time<pos:position pos:line="70" pos:column="30"/></name></name> <operator pos:line="70" pos:column="31">-<pos:position pos:line="70" pos:column="32"/></operator> <name><name pos:line="70" pos:column="33">ce<pos:position pos:line="70" pos:column="35"/></name><operator pos:line="70" pos:column="35">-&gt;<pos:position pos:line="70" pos:column="40"/></operator><name pos:line="70" pos:column="37">last_time<pos:position pos:line="70" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="47"/></argument_list></call><operator pos:line="70" pos:column="47">)<pos:position pos:line="70" pos:column="48"/></operator></expr>;<pos:position pos:line="70" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="71" pos:column="7">ce<pos:position pos:line="71" pos:column="9"/></name><operator pos:line="71" pos:column="9">-&gt;<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="11">values_counter<pos:position pos:line="71" pos:column="25"/></name><index pos:line="71" pos:column="25">[<expr><name pos:line="71" pos:column="26">i<pos:position pos:line="71" pos:column="27"/></name></expr>]<pos:position pos:line="71" pos:column="28"/></index></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <name><name pos:line="71" pos:column="31">vl<pos:position pos:line="71" pos:column="33"/></name><operator pos:line="71" pos:column="33">-&gt;<pos:position pos:line="71" pos:column="38"/></operator><name pos:line="71" pos:column="35">values<pos:position pos:line="71" pos:column="41"/></name><index pos:line="71" pos:column="41">[<expr><name pos:line="71" pos:column="42">i<pos:position pos:line="71" pos:column="43"/></name></expr>]<pos:position pos:line="71" pos:column="44"/></index></name><operator pos:line="71" pos:column="44">.<pos:position pos:line="71" pos:column="45"/></operator><name pos:line="71" pos:column="45">counter<pos:position pos:line="71" pos:column="52"/></name></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then>
    <else pos:line="73" pos:column="5">else <comment type="block" pos:line="73" pos:column="10">/* if (ds-&gt;ds[i].type == DS_TYPE_GAUGE) */</comment>
    <block pos:line="74" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="75" pos:column="7">ce<pos:position pos:line="75" pos:column="9"/></name><operator pos:line="75" pos:column="9">-&gt;<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="11">values_gauge<pos:position pos:line="75" pos:column="23"/></name><index pos:line="75" pos:column="23">[<expr><name pos:line="75" pos:column="24">i<pos:position pos:line="75" pos:column="25"/></name></expr>]<pos:position pos:line="75" pos:column="26"/></index></name> <operator pos:line="75" pos:column="27">=<pos:position pos:line="75" pos:column="28"/></operator> <name><name pos:line="75" pos:column="29">vl<pos:position pos:line="75" pos:column="31"/></name><operator pos:line="75" pos:column="31">-&gt;<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="33">values<pos:position pos:line="75" pos:column="39"/></name><index pos:line="75" pos:column="39">[<expr><name pos:line="75" pos:column="40">i<pos:position pos:line="75" pos:column="41"/></name></expr>]<pos:position pos:line="75" pos:column="42"/></index></name><operator pos:line="75" pos:column="42">.<pos:position pos:line="75" pos:column="43"/></operator><name pos:line="75" pos:column="43">gauge<pos:position pos:line="75" pos:column="48"/></name></expr>;<pos:position pos:line="75" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">DEBUG<pos:position pos:line="77" pos:column="10"/></name> <argument_list pos:line="77" pos:column="11">(<argument><expr><literal type="string" pos:line="77" pos:column="12">"uc_update: %s: ds[%i] = %lf"<pos:position pos:line="77" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="43">name<pos:position pos:line="77" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="49">i<pos:position pos:line="77" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="52">ce<pos:position pos:line="77" pos:column="54"/></name><operator pos:line="77" pos:column="54">-&gt;<pos:position pos:line="77" pos:column="59"/></operator><name pos:line="77" pos:column="56">values_gauge<pos:position pos:line="77" pos:column="68"/></name><index pos:line="77" pos:column="68">[<expr><name pos:line="77" pos:column="69">i<pos:position pos:line="77" pos:column="70"/></name></expr>]<pos:position pos:line="77" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="77" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="73"/></expr_stmt>
  }<pos:position pos:line="78" pos:column="4"/></block></for> <comment type="block" pos:line="78" pos:column="5">/* for (i) */</comment>

  <expr_stmt><expr><name><name pos:line="80" pos:column="3">ce<pos:position pos:line="80" pos:column="5"/></name><operator pos:line="80" pos:column="5">-&gt;<pos:position pos:line="80" pos:column="10"/></operator><name pos:line="80" pos:column="7">last_time<pos:position pos:line="80" pos:column="16"/></name></name> <operator pos:line="80" pos:column="17">=<pos:position pos:line="80" pos:column="18"/></operator> <name><name pos:line="80" pos:column="19">vl<pos:position pos:line="80" pos:column="21"/></name><operator pos:line="80" pos:column="21">-&gt;<pos:position pos:line="80" pos:column="26"/></operator><name pos:line="80" pos:column="23">time<pos:position pos:line="80" pos:column="27"/></name></name></expr>;<pos:position pos:line="80" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="81" pos:column="3">ce<pos:position pos:line="81" pos:column="5"/></name><operator pos:line="81" pos:column="5">-&gt;<pos:position pos:line="81" pos:column="10"/></operator><name pos:line="81" pos:column="7">last_update<pos:position pos:line="81" pos:column="18"/></name></name> <operator pos:line="81" pos:column="19">=<pos:position pos:line="81" pos:column="20"/></operator> <call><name pos:line="81" pos:column="21">time<pos:position pos:line="81" pos:column="25"/></name> <argument_list pos:line="81" pos:column="26">(<argument><expr><name pos:line="81" pos:column="27">NULL<pos:position pos:line="81" pos:column="31"/></name></expr></argument>)<pos:position pos:line="81" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="82" pos:column="3">ce<pos:position pos:line="82" pos:column="5"/></name><operator pos:line="82" pos:column="5">-&gt;<pos:position pos:line="82" pos:column="10"/></operator><name pos:line="82" pos:column="7">interval<pos:position pos:line="82" pos:column="15"/></name></name> <operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator> <name><name pos:line="82" pos:column="18">vl<pos:position pos:line="82" pos:column="20"/></name><operator pos:line="82" pos:column="20">-&gt;<pos:position pos:line="82" pos:column="25"/></operator><name pos:line="82" pos:column="22">interval<pos:position pos:line="82" pos:column="30"/></name></name></expr>;<pos:position pos:line="82" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="84" pos:column="3">pthread_mutex_unlock<pos:position pos:line="84" pos:column="23"/></name> <argument_list pos:line="84" pos:column="24">(<argument><expr><operator pos:line="84" pos:column="25">&amp;<pos:position pos:line="84" pos:column="30"/></operator><name pos:line="84" pos:column="26">cache_lock<pos:position pos:line="84" pos:column="36"/></name></expr></argument>)<pos:position pos:line="84" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="38"/></expr_stmt>

  <if pos:line="86" pos:column="3">if <condition pos:line="86" pos:column="6">(<expr><name pos:line="86" pos:column="7">send_okay_notification<pos:position pos:line="86" pos:column="29"/></name> <operator pos:line="86" pos:column="30">==<pos:position pos:line="86" pos:column="32"/></operator> <literal type="number" pos:line="86" pos:column="33">0<pos:position pos:line="86" pos:column="34"/></literal></expr>)<pos:position pos:line="86" pos:column="35"/></condition><then pos:line="86" pos:column="35">
    <block type="pseudo"><return pos:line="87" pos:column="5">return <expr><operator pos:line="87" pos:column="12">(<pos:position pos:line="87" pos:column="13"/></operator><literal type="number" pos:line="87" pos:column="13">0<pos:position pos:line="87" pos:column="14"/></literal><operator pos:line="87" pos:column="14">)<pos:position pos:line="87" pos:column="15"/></operator></expr>;<pos:position pos:line="87" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="89" pos:column="3">/* Do not send okay notifications for uninteresting values, i. e. values for
   * which no threshold is configured. */</comment>
  <expr_stmt><expr><name pos:line="91" pos:column="3">status<pos:position pos:line="91" pos:column="9"/></name> <operator pos:line="91" pos:column="10">=<pos:position pos:line="91" pos:column="11"/></operator> <call><name pos:line="91" pos:column="12">ut_check_interesting<pos:position pos:line="91" pos:column="32"/></name> <argument_list pos:line="91" pos:column="33">(<argument><expr><name pos:line="91" pos:column="34">name<pos:position pos:line="91" pos:column="38"/></name></expr></argument>)<pos:position pos:line="91" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="40"/></expr_stmt>
  <if pos:line="92" pos:column="3">if <condition pos:line="92" pos:column="6">(<expr><name pos:line="92" pos:column="7">status<pos:position pos:line="92" pos:column="13"/></name> <operator pos:line="92" pos:column="14">&lt;=<pos:position pos:line="92" pos:column="19"/></operator> <literal type="number" pos:line="92" pos:column="17">0<pos:position pos:line="92" pos:column="18"/></literal></expr>)<pos:position pos:line="92" pos:column="19"/></condition><then pos:line="92" pos:column="19">
    <block type="pseudo"><return pos:line="93" pos:column="5">return <expr><operator pos:line="93" pos:column="12">(<pos:position pos:line="93" pos:column="13"/></operator><literal type="number" pos:line="93" pos:column="13">0<pos:position pos:line="93" pos:column="14"/></literal><operator pos:line="93" pos:column="14">)<pos:position pos:line="93" pos:column="15"/></operator></expr>;<pos:position pos:line="93" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="95" pos:column="3">/* Initialize the notification */</comment>
  <expr_stmt><expr><call><name pos:line="96" pos:column="3">memset<pos:position pos:line="96" pos:column="9"/></name> <argument_list pos:line="96" pos:column="10">(<argument><expr><operator pos:line="96" pos:column="11">&amp;<pos:position pos:line="96" pos:column="16"/></operator><name pos:line="96" pos:column="12">n<pos:position pos:line="96" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="96" pos:column="15">'\0'<pos:position pos:line="96" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="21">sizeof <argument_list pos:line="96" pos:column="28">(<argument><expr><name pos:line="96" pos:column="29">n<pos:position pos:line="96" pos:column="30"/></name></expr></argument>)<pos:position pos:line="96" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="96" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="97" pos:column="3">NOTIFICATION_INIT_VL<pos:position pos:line="97" pos:column="23"/></name> <argument_list pos:line="97" pos:column="24">(<argument><expr><operator pos:line="97" pos:column="25">&amp;<pos:position pos:line="97" pos:column="30"/></operator><name pos:line="97" pos:column="26">n<pos:position pos:line="97" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="29">vl<pos:position pos:line="97" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="33">ds<pos:position pos:line="97" pos:column="35"/></name></expr></argument>)<pos:position pos:line="97" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="99" pos:column="3">n<pos:position pos:line="99" pos:column="4"/></name><operator pos:line="99" pos:column="4">.<pos:position pos:line="99" pos:column="5"/></operator><name pos:line="99" pos:column="5">severity<pos:position pos:line="99" pos:column="13"/></name></name> <operator pos:line="99" pos:column="14">=<pos:position pos:line="99" pos:column="15"/></operator> <name pos:line="99" pos:column="16">NOTIF_OKAY<pos:position pos:line="99" pos:column="26"/></name></expr>;<pos:position pos:line="99" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="100" pos:column="3">n<pos:position pos:line="100" pos:column="4"/></name><operator pos:line="100" pos:column="4">.<pos:position pos:line="100" pos:column="5"/></operator><name pos:line="100" pos:column="5">time<pos:position pos:line="100" pos:column="9"/></name></name> <operator pos:line="100" pos:column="10">=<pos:position pos:line="100" pos:column="11"/></operator> <name><name pos:line="100" pos:column="12">vl<pos:position pos:line="100" pos:column="14"/></name><operator pos:line="100" pos:column="14">-&gt;<pos:position pos:line="100" pos:column="19"/></operator><name pos:line="100" pos:column="16">time<pos:position pos:line="100" pos:column="20"/></name></name></expr>;<pos:position pos:line="100" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="102" pos:column="3">snprintf<pos:position pos:line="102" pos:column="11"/></name> <argument_list pos:line="102" pos:column="12">(<argument><expr><name><name pos:line="102" pos:column="13">n<pos:position pos:line="102" pos:column="14"/></name><operator pos:line="102" pos:column="14">.<pos:position pos:line="102" pos:column="15"/></operator><name pos:line="102" pos:column="15">message<pos:position pos:line="102" pos:column="22"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="102" pos:column="24">sizeof <argument_list pos:line="102" pos:column="31">(<argument><expr><name><name pos:line="102" pos:column="32">n<pos:position pos:line="102" pos:column="33"/></name><operator pos:line="102" pos:column="33">.<pos:position pos:line="102" pos:column="34"/></operator><name pos:line="102" pos:column="34">message<pos:position pos:line="102" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="42"/></argument_list></sizeof></expr></argument>,
      <argument><expr><literal type="string" pos:line="103" pos:column="7">"Received a value for %s. It was missing for %u seconds."<pos:position pos:line="103" pos:column="64"/></literal></expr></argument>,
      <argument><expr><name pos:line="104" pos:column="7">name<pos:position pos:line="104" pos:column="11"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="13">(<pos:position pos:line="104" pos:column="14"/></operator><name pos:line="104" pos:column="14">unsigned<pos:position pos:line="104" pos:column="22"/></name> <name pos:line="104" pos:column="23">int<pos:position pos:line="104" pos:column="26"/></name><operator pos:line="104" pos:column="26">)<pos:position pos:line="104" pos:column="27"/></operator> <name pos:line="104" pos:column="28">update_delay<pos:position pos:line="104" pos:column="40"/></name></expr></argument>)<pos:position pos:line="104" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="105" pos:column="3">n<pos:position pos:line="105" pos:column="4"/></name><operator pos:line="105" pos:column="4">.<pos:position pos:line="105" pos:column="5"/></operator><name pos:line="105" pos:column="5">message<pos:position pos:line="105" pos:column="12"/></name><index pos:line="105" pos:column="12">[<expr><sizeof pos:line="105" pos:column="13">sizeof <argument_list pos:line="105" pos:column="20">(<argument><expr><name><name pos:line="105" pos:column="21">n<pos:position pos:line="105" pos:column="22"/></name><operator pos:line="105" pos:column="22">.<pos:position pos:line="105" pos:column="23"/></operator><name pos:line="105" pos:column="23">message<pos:position pos:line="105" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="31"/></argument_list></sizeof> <operator pos:line="105" pos:column="32">-<pos:position pos:line="105" pos:column="33"/></operator> <literal type="number" pos:line="105" pos:column="34">1<pos:position pos:line="105" pos:column="35"/></literal></expr>]<pos:position pos:line="105" pos:column="36"/></index></name> <operator pos:line="105" pos:column="37">=<pos:position pos:line="105" pos:column="38"/></operator> <literal type="char" pos:line="105" pos:column="39">'\0'<pos:position pos:line="105" pos:column="43"/></literal></expr>;<pos:position pos:line="105" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="107" pos:column="3">plugin_dispatch_notification<pos:position pos:line="107" pos:column="31"/></name> <argument_list pos:line="107" pos:column="32">(<argument><expr><operator pos:line="107" pos:column="33">&amp;<pos:position pos:line="107" pos:column="38"/></operator><name pos:line="107" pos:column="34">n<pos:position pos:line="107" pos:column="35"/></name></expr></argument>)<pos:position pos:line="107" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="37"/></expr_stmt>

  <return pos:line="109" pos:column="3">return <expr><operator pos:line="109" pos:column="10">(<pos:position pos:line="109" pos:column="11"/></operator><literal type="number" pos:line="109" pos:column="11">0<pos:position pos:line="109" pos:column="12"/></literal><operator pos:line="109" pos:column="12">)<pos:position pos:line="109" pos:column="13"/></operator></expr>;<pos:position pos:line="109" pos:column="14"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

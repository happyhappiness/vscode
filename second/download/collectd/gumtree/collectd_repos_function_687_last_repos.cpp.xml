<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_687_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ps_read_tasks_status<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">process_entry_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ps<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <block pos:line="1" pos:column="54">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">dirname<pos:position pos:line="2" pos:column="15"/></name><index pos:line="2" pos:column="15">[<expr><literal type="number" pos:line="2" pos:column="16">64<pos:position pos:line="2" pos:column="18"/></literal></expr>]<pos:position pos:line="2" pos:column="19"/></index></name></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">DIR<pos:position pos:line="3" pos:column="6"/></name> <modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type><name pos:line="3" pos:column="8">dh<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">filename<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><literal type="number" pos:line="4" pos:column="17">64<pos:position pos:line="4" pos:column="19"/></literal></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fh<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">dirent<pos:position pos:line="6" pos:column="16"/></name></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">ent<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">derive_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">cswitch_vol<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">derive_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">cswitch_invol<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><literal type="number" pos:line="8" pos:column="28">0<pos:position pos:line="8" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">buffer<pos:position pos:line="9" pos:column="14"/></name><index pos:line="9" pos:column="14">[<expr><literal type="number" pos:line="9" pos:column="15">1024<pos:position pos:line="9" pos:column="19"/></literal></expr>]<pos:position pos:line="9" pos:column="20"/></index></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name><name pos:line="10" pos:column="9">fields<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><literal type="number" pos:line="10" pos:column="16">8<pos:position pos:line="10" pos:column="17"/></literal></expr>]<pos:position pos:line="10" pos:column="18"/></index></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">numfields<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">snprintf<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">dirname<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="21">sizeof<argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">dirname<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="38">"/proc/%li/task"<pos:position pos:line="13" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="56">ps<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">id<pos:position pos:line="13" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">dh<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">opendir<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">dirname<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call><operator pos:line="15" pos:column="29">)<pos:position pos:line="15" pos:column="30"/></operator> <operator pos:line="15" pos:column="31">==<pos:position pos:line="15" pos:column="33"/></operator> <name pos:line="15" pos:column="34">NULL<pos:position pos:line="15" pos:column="38"/></name></expr>)<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39"> <block pos:line="15" pos:column="40">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">DEBUG<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="string" pos:line="16" pos:column="11">"Failed to open directory `%s'"<pos:position pos:line="16" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">dirname<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">-<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <while pos:line="20" pos:column="3">while <condition pos:line="20" pos:column="9">(<expr><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">ent<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">readdir<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">dh<pos:position pos:line="20" pos:column="27"/></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call><operator pos:line="20" pos:column="28">)<pos:position pos:line="20" pos:column="29"/></operator> <operator pos:line="20" pos:column="30">!=<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">NULL<pos:position pos:line="20" pos:column="37"/></name></expr>)<pos:position pos:line="20" pos:column="38"/></condition> <block pos:line="20" pos:column="39">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier></type><name pos:line="21" pos:column="11">tpid<pos:position pos:line="21" pos:column="15"/></name></decl>;<pos:position pos:line="21" pos:column="16"/></decl_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><call><name pos:line="23" pos:column="10">isdigit<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><operator pos:line="23" pos:column="18">(<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">int<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">)<pos:position pos:line="23" pos:column="23"/></operator><name><name pos:line="23" pos:column="23">ent<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">d_name<pos:position pos:line="23" pos:column="34"/></name><index pos:line="23" pos:column="34">[<expr><literal type="number" pos:line="23" pos:column="35">0<pos:position pos:line="23" pos:column="36"/></literal></expr>]<pos:position pos:line="23" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="39"/></condition><then pos:line="23" pos:column="39">
      <block type="pseudo"><continue pos:line="24" pos:column="7">continue;<pos:position pos:line="24" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">tpid<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <name><name pos:line="26" pos:column="12">ent<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">d_name<pos:position pos:line="26" pos:column="23"/></name></name></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">snprintf<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">filename<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="28">sizeof<argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">filename<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="46">"/proc/%li/task/%s/status"<pos:position pos:line="28" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="74">ps<pos:position pos:line="28" pos:column="76"/></name><operator pos:line="28" pos:column="76">-&gt;<pos:position pos:line="28" pos:column="81"/></operator><name pos:line="28" pos:column="78">id<pos:position pos:line="28" pos:column="80"/></name></name></expr></argument>,
                 <argument><expr><name pos:line="29" pos:column="18">tpid<pos:position pos:line="29" pos:column="22"/></name></expr></argument>)<pos:position pos:line="29" pos:column="23"/></argument_list></call> <operator pos:line="29" pos:column="24">&gt;=<pos:position pos:line="29" pos:column="29"/></operator> <sizeof pos:line="29" pos:column="27">sizeof<argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">filename<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></sizeof></expr>)<pos:position pos:line="29" pos:column="44"/></condition><then pos:line="29" pos:column="44"> <block pos:line="29" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">DEBUG<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><literal type="string" pos:line="30" pos:column="13">"Filename too long: `%s'"<pos:position pos:line="30" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">filename<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
      <continue pos:line="31" pos:column="7">continue;<pos:position pos:line="31" pos:column="16"/></continue>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">fh<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">fopen<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">filename<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="31">"r"<pos:position pos:line="34" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call><operator pos:line="34" pos:column="35">)<pos:position pos:line="34" pos:column="36"/></operator> <operator pos:line="34" pos:column="37">==<pos:position pos:line="34" pos:column="39"/></operator> <name pos:line="34" pos:column="40">NULL<pos:position pos:line="34" pos:column="44"/></name></expr>)<pos:position pos:line="34" pos:column="45"/></condition><then pos:line="34" pos:column="45"> <block pos:line="34" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">DEBUG<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><literal type="string" pos:line="35" pos:column="13">"Failed to open file `%s'"<pos:position pos:line="35" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="41">filename<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
      <continue pos:line="36" pos:column="7">continue;<pos:position pos:line="36" pos:column="16"/></continue>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <while pos:line="39" pos:column="5">while <condition pos:line="39" pos:column="11">(<expr><call><name pos:line="39" pos:column="12">fgets<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">buffer<pos:position pos:line="39" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="26">sizeof<argument_list pos:line="39" pos:column="32">(<argument><expr><name pos:line="39" pos:column="33">buffer<pos:position pos:line="39" pos:column="39"/></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="39" pos:column="42">fh<pos:position pos:line="39" pos:column="44"/></name></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call> <operator pos:line="39" pos:column="46">!=<pos:position pos:line="39" pos:column="48"/></operator> <name pos:line="39" pos:column="49">NULL<pos:position pos:line="39" pos:column="53"/></name></expr>)<pos:position pos:line="39" pos:column="54"/></condition> <block pos:line="39" pos:column="55">{
      <decl_stmt><decl><type><name pos:line="40" pos:column="7">derive_t<pos:position pos:line="40" pos:column="15"/></name></type> <name pos:line="40" pos:column="16">tmp<pos:position pos:line="40" pos:column="19"/></name></decl>;<pos:position pos:line="40" pos:column="20"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="41" pos:column="7">char<pos:position pos:line="41" pos:column="11"/></name> <modifier pos:line="41" pos:column="12">*<pos:position pos:line="41" pos:column="13"/></modifier></type><name pos:line="41" pos:column="13">endptr<pos:position pos:line="41" pos:column="19"/></name></decl>;<pos:position pos:line="41" pos:column="20"/></decl_stmt>

      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><call><name pos:line="43" pos:column="11">strncmp<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><name pos:line="43" pos:column="19">buffer<pos:position pos:line="43" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="27">"voluntary_ctxt_switches"<pos:position pos:line="43" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="54">23<pos:position pos:line="43" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></call> <operator pos:line="43" pos:column="58">!=<pos:position pos:line="43" pos:column="60"/></operator> <literal type="number" pos:line="43" pos:column="61">0<pos:position pos:line="43" pos:column="62"/></literal> <operator pos:line="43" pos:column="63">&amp;&amp;<pos:position pos:line="43" pos:column="73"/></operator>
          <call><name pos:line="44" pos:column="11">strncmp<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><name pos:line="44" pos:column="19">buffer<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="27">"nonvoluntary_ctxt_switches"<pos:position pos:line="44" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="57">26<pos:position pos:line="44" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call> <operator pos:line="44" pos:column="61">!=<pos:position pos:line="44" pos:column="63"/></operator> <literal type="number" pos:line="44" pos:column="64">0<pos:position pos:line="44" pos:column="65"/></literal></expr>)<pos:position pos:line="44" pos:column="66"/></condition><then pos:line="44" pos:column="66">
        <block type="pseudo"><continue pos:line="45" pos:column="9">continue;<pos:position pos:line="45" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><name pos:line="47" pos:column="7">numfields<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <call><name pos:line="47" pos:column="19">strsplit<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">buffer<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="36">fields<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="44">STATIC_ARRAY_SIZE<pos:position pos:line="47" pos:column="61"/></name><argument_list pos:line="47" pos:column="61">(<argument><expr><name pos:line="47" pos:column="62">fields<pos:position pos:line="47" pos:column="68"/></name></expr></argument>)<pos:position pos:line="47" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="71"/></expr_stmt>

      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><name pos:line="49" pos:column="11">numfields<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">&lt;<pos:position pos:line="49" pos:column="25"/></operator> <literal type="number" pos:line="49" pos:column="23">2<pos:position pos:line="49" pos:column="24"/></literal></expr>)<pos:position pos:line="49" pos:column="25"/></condition><then pos:line="49" pos:column="25">
        <block type="pseudo"><continue pos:line="50" pos:column="9">continue;<pos:position pos:line="50" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><name pos:line="52" pos:column="7">errno<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <literal type="number" pos:line="52" pos:column="15">0<pos:position pos:line="52" pos:column="16"/></literal></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="53" pos:column="7">endptr<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <name pos:line="53" pos:column="16">NULL<pos:position pos:line="53" pos:column="20"/></name></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="54" pos:column="7">tmp<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <operator pos:line="54" pos:column="13">(<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="14">derive_t<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">)<pos:position pos:line="54" pos:column="23"/></operator><call><name pos:line="54" pos:column="23">strtoll<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name><name pos:line="54" pos:column="31">fields<pos:position pos:line="54" pos:column="37"/></name><index pos:line="54" pos:column="37">[<expr><literal type="number" pos:line="54" pos:column="38">1<pos:position pos:line="54" pos:column="39"/></literal></expr>]<pos:position pos:line="54" pos:column="40"/></index></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="42">&amp;<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="43">endptr<pos:position pos:line="54" pos:column="49"/></name></expr></argument>, <comment type="block" pos:line="54" pos:column="51">/* base = */</comment> <argument><expr><literal type="number" pos:line="54" pos:column="64">10<pos:position pos:line="54" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="68"/></expr_stmt>
      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><operator pos:line="55" pos:column="11">(<pos:position pos:line="55" pos:column="12"/></operator><name pos:line="55" pos:column="12">errno<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">==<pos:position pos:line="55" pos:column="20"/></operator> <literal type="number" pos:line="55" pos:column="21">0<pos:position pos:line="55" pos:column="22"/></literal><operator pos:line="55" pos:column="22">)<pos:position pos:line="55" pos:column="23"/></operator> <operator pos:line="55" pos:column="24">&amp;&amp;<pos:position pos:line="55" pos:column="34"/></operator> <operator pos:line="55" pos:column="27">(<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="28">endptr<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">!=<pos:position pos:line="55" pos:column="37"/></operator> <name><name pos:line="55" pos:column="38">fields<pos:position pos:line="55" pos:column="44"/></name><index pos:line="55" pos:column="44">[<expr><literal type="number" pos:line="55" pos:column="45">1<pos:position pos:line="55" pos:column="46"/></literal></expr>]<pos:position pos:line="55" pos:column="47"/></index></name><operator pos:line="55" pos:column="47">)<pos:position pos:line="55" pos:column="48"/></operator></expr>)<pos:position pos:line="55" pos:column="49"/></condition><then pos:line="55" pos:column="49"> <block pos:line="55" pos:column="50">{
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">strncmp<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">buffer<pos:position pos:line="56" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="29">"voluntary_ctxt_switches"<pos:position pos:line="56" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="56">23<pos:position pos:line="56" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="59"/></argument_list></call> <operator pos:line="56" pos:column="60">==<pos:position pos:line="56" pos:column="62"/></operator> <literal type="number" pos:line="56" pos:column="63">0<pos:position pos:line="56" pos:column="64"/></literal></expr>)<pos:position pos:line="56" pos:column="65"/></condition><then pos:line="56" pos:column="65"> <block pos:line="56" pos:column="66">{
          <expr_stmt><expr><name pos:line="57" pos:column="11">cswitch_vol<pos:position pos:line="57" pos:column="22"/></name> <operator pos:line="57" pos:column="23">+=<pos:position pos:line="57" pos:column="25"/></operator> <name pos:line="57" pos:column="26">tmp<pos:position pos:line="57" pos:column="29"/></name></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then> <elseif pos:line="58" pos:column="11">else <if pos:line="58" pos:column="16">if <condition pos:line="58" pos:column="19">(<expr><call><name pos:line="58" pos:column="20">strncmp<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><name pos:line="58" pos:column="28">buffer<pos:position pos:line="58" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="36">"nonvoluntary_ctxt_switches"<pos:position pos:line="58" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="66">26<pos:position pos:line="58" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></call> <operator pos:line="58" pos:column="70">==<pos:position pos:line="58" pos:column="72"/></operator> <literal type="number" pos:line="58" pos:column="73">0<pos:position pos:line="58" pos:column="74"/></literal></expr>)<pos:position pos:line="58" pos:column="75"/></condition><then pos:line="58" pos:column="75"> <block pos:line="58" pos:column="76">{
          <expr_stmt><expr><name pos:line="59" pos:column="11">cswitch_invol<pos:position pos:line="59" pos:column="24"/></name> <operator pos:line="59" pos:column="25">+=<pos:position pos:line="59" pos:column="27"/></operator> <name pos:line="59" pos:column="28">tmp<pos:position pos:line="59" pos:column="31"/></name></expr>;<pos:position pos:line="59" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if></elseif></if>
      }<pos:position pos:line="61" pos:column="8"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></while> <comment type="block" pos:line="62" pos:column="7">/* while (fgets) */</comment>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><call><name pos:line="64" pos:column="9">fclose<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><name pos:line="64" pos:column="16">fh<pos:position pos:line="64" pos:column="18"/></name></expr></argument>)<pos:position pos:line="64" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="20"/></condition><then pos:line="64" pos:column="20"> <block pos:line="64" pos:column="21">{
      <decl_stmt><decl><type><name pos:line="65" pos:column="7">char<pos:position pos:line="65" pos:column="11"/></name></type> <name><name pos:line="65" pos:column="12">errbuf<pos:position pos:line="65" pos:column="18"/></name><index pos:line="65" pos:column="18">[<expr><literal type="number" pos:line="65" pos:column="19">1024<pos:position pos:line="65" pos:column="23"/></literal></expr>]<pos:position pos:line="65" pos:column="24"/></index></name></decl>;<pos:position pos:line="65" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">WARNING<pos:position pos:line="66" pos:column="14"/></name><argument_list pos:line="66" pos:column="14">(<argument><expr><literal type="string" pos:line="66" pos:column="15">"processes: fclose: %s"<pos:position pos:line="66" pos:column="38"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="67" pos:column="15">sstrerror<pos:position pos:line="67" pos:column="24"/></name><argument_list pos:line="67" pos:column="24">(<argument><expr><name pos:line="67" pos:column="25">errno<pos:position pos:line="67" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="32">errbuf<pos:position pos:line="67" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="40">sizeof<argument_list pos:line="67" pos:column="46">(<argument><expr><name pos:line="67" pos:column="47">errbuf<pos:position pos:line="67" pos:column="53"/></name></expr></argument>)<pos:position pos:line="67" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="67" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>
  }<pos:position pos:line="69" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="70" pos:column="3">closedir<pos:position pos:line="70" pos:column="11"/></name><argument_list pos:line="70" pos:column="11">(<argument><expr><name pos:line="70" pos:column="12">dh<pos:position pos:line="70" pos:column="14"/></name></expr></argument>)<pos:position pos:line="70" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="16"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="72" pos:column="3">ps<pos:position pos:line="72" pos:column="5"/></name><operator pos:line="72" pos:column="5">-&gt;<pos:position pos:line="72" pos:column="10"/></operator><name pos:line="72" pos:column="7">cswitch_vol<pos:position pos:line="72" pos:column="18"/></name></name> <operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator> <name pos:line="72" pos:column="21">cswitch_vol<pos:position pos:line="72" pos:column="32"/></name></expr>;<pos:position pos:line="72" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="73" pos:column="3">ps<pos:position pos:line="73" pos:column="5"/></name><operator pos:line="73" pos:column="5">-&gt;<pos:position pos:line="73" pos:column="10"/></operator><name pos:line="73" pos:column="7">cswitch_invol<pos:position pos:line="73" pos:column="20"/></name></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <name pos:line="73" pos:column="23">cswitch_invol<pos:position pos:line="73" pos:column="36"/></name></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt>

  <return pos:line="75" pos:column="3">return <expr><literal type="number" pos:line="75" pos:column="10">0<pos:position pos:line="75" pos:column="11"/></literal></expr>;<pos:position pos:line="75" pos:column="12"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

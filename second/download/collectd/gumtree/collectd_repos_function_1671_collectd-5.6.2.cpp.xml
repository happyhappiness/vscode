<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1671_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cconn_prepare<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">cconn<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">io<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">pollfd<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">fds<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list> <block pos:line="1" pos:column="64">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name></decl>;<pos:position pos:line="2" pos:column="11"/></decl_stmt>
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name><name pos:line="3" pos:column="7">io<pos:position pos:line="3" pos:column="9"/></name><operator pos:line="3" pos:column="9">-&gt;<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="11">request_type<pos:position pos:line="3" pos:column="23"/></name></name> <operator pos:line="3" pos:column="24">==<pos:position pos:line="3" pos:column="26"/></operator> <name pos:line="3" pos:column="27">ASOK_REQ_NONE<pos:position pos:line="3" pos:column="40"/></name></expr>)<pos:position pos:line="3" pos:column="41"/></condition><then pos:line="3" pos:column="41"> <block pos:line="3" pos:column="42">{
    <comment type="block" pos:line="4" pos:column="5">/* The request has already been serviced. */</comment>
    <return pos:line="5" pos:column="5">return <expr><literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr>;<pos:position pos:line="5" pos:column="14"/></return>
  }<pos:position pos:line="6" pos:column="4"/></block></then> <elseif pos:line="6" pos:column="5">else <if pos:line="6" pos:column="10">if <condition pos:line="6" pos:column="13">(<expr><operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><name><name pos:line="6" pos:column="15">io<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">request_type<pos:position pos:line="6" pos:column="31"/></name></name> <operator pos:line="6" pos:column="32">==<pos:position pos:line="6" pos:column="34"/></operator> <name pos:line="6" pos:column="35">ASOK_REQ_DATA<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">)<pos:position pos:line="6" pos:column="49"/></operator> <operator pos:line="6" pos:column="50">&amp;&amp;<pos:position pos:line="6" pos:column="60"/></operator> <operator pos:line="6" pos:column="53">(<pos:position pos:line="6" pos:column="54"/></operator><name><name pos:line="6" pos:column="54">io<pos:position pos:line="6" pos:column="56"/></name><operator pos:line="6" pos:column="56">-&gt;<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="58">d<pos:position pos:line="6" pos:column="59"/></name><operator pos:line="6" pos:column="59">-&gt;<pos:position pos:line="6" pos:column="64"/></operator><name pos:line="6" pos:column="61">ds_num<pos:position pos:line="6" pos:column="67"/></name></name> <operator pos:line="6" pos:column="68">==<pos:position pos:line="6" pos:column="70"/></operator> <literal type="number" pos:line="6" pos:column="71">0<pos:position pos:line="6" pos:column="72"/></literal><operator pos:line="6" pos:column="72">)<pos:position pos:line="6" pos:column="73"/></operator></expr>)<pos:position pos:line="6" pos:column="74"/></condition><then pos:line="6" pos:column="74"> <block pos:line="6" pos:column="75">{
    <comment type="block" pos:line="7" pos:column="5">/* If there are no counters to report on, don't bother
     * connecting */</comment>
    <return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if></elseif></if>

  <switch pos:line="12" pos:column="3">switch <condition pos:line="12" pos:column="10">(<expr><name><name pos:line="12" pos:column="11">io<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">state<pos:position pos:line="12" pos:column="20"/></name></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition> <block pos:line="12" pos:column="22">{
  <case pos:line="13" pos:column="3">case <expr><name pos:line="13" pos:column="8">CSTATE_UNCONNECTED<pos:position pos:line="13" pos:column="26"/></name></expr>:<pos:position pos:line="13" pos:column="27"/></case>
    <expr_stmt><expr><name pos:line="14" pos:column="5">ret<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <call><name pos:line="14" pos:column="11">cconn_connect<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">io<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">ret<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">&gt;<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17"> <block pos:line="15" pos:column="18">{
      <return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">-<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">ret<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then> <elseif pos:line="17" pos:column="7">else <if pos:line="17" pos:column="12">if <condition pos:line="17" pos:column="15">(<expr><name pos:line="17" pos:column="16">ret<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&lt;<pos:position pos:line="17" pos:column="24"/></operator> <literal type="number" pos:line="17" pos:column="22">0<pos:position pos:line="17" pos:column="23"/></literal></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24"> <block pos:line="17" pos:column="25">{
      <return pos:line="18" pos:column="7">return <expr><name pos:line="18" pos:column="14">ret<pos:position pos:line="18" pos:column="17"/></name></expr>;<pos:position pos:line="18" pos:column="18"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">fds<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">-&gt;<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="10">fd<pos:position pos:line="20" pos:column="12"/></name></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name><name pos:line="20" pos:column="15">io<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">asok<pos:position pos:line="20" pos:column="23"/></name></name></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">fds<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">-&gt;<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="10">events<pos:position pos:line="21" pos:column="16"/></name></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">POLLOUT<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><literal type="number" pos:line="22" pos:column="12">1<pos:position pos:line="22" pos:column="13"/></literal></expr>;<pos:position pos:line="22" pos:column="14"/></return>
  <case pos:line="23" pos:column="3">case <expr><name pos:line="23" pos:column="8">CSTATE_WRITE_REQUEST<pos:position pos:line="23" pos:column="28"/></name></expr>:<pos:position pos:line="23" pos:column="29"/></case>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">fds<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">fd<pos:position pos:line="24" pos:column="12"/></name></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name><name pos:line="24" pos:column="15">io<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">asok<pos:position pos:line="24" pos:column="23"/></name></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">fds<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">-&gt;<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="10">events<pos:position pos:line="25" pos:column="16"/></name></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">POLLOUT<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><literal type="number" pos:line="26" pos:column="12">1<pos:position pos:line="26" pos:column="13"/></literal></expr>;<pos:position pos:line="26" pos:column="14"/></return>
  <case pos:line="27" pos:column="3">case <expr><name pos:line="27" pos:column="8">CSTATE_READ_VERSION<pos:position pos:line="27" pos:column="27"/></name></expr>:<pos:position pos:line="27" pos:column="28"/></case>
  <case pos:line="28" pos:column="3">case <expr><name pos:line="28" pos:column="8">CSTATE_READ_AMT<pos:position pos:line="28" pos:column="23"/></name></expr>:<pos:position pos:line="28" pos:column="24"/></case>
  <case pos:line="29" pos:column="3">case <expr><name pos:line="29" pos:column="8">CSTATE_READ_JSON<pos:position pos:line="29" pos:column="24"/></name></expr>:<pos:position pos:line="29" pos:column="25"/></case>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">fds<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">-&gt;<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="10">fd<pos:position pos:line="30" pos:column="12"/></name></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <name><name pos:line="30" pos:column="15">io<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">asok<pos:position pos:line="30" pos:column="23"/></name></name></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">fds<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">events<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">POLLIN<pos:position pos:line="31" pos:column="25"/></name></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><literal type="number" pos:line="32" pos:column="12">1<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></return>
  <default pos:line="33" pos:column="3">default:<pos:position pos:line="33" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><literal type="string" pos:line="34" pos:column="11">"ceph plugin: cconn_prepare(name=%s) got to illegal state "<pos:position pos:line="34" pos:column="70"/></literal>
          <literal type="string" pos:line="35" pos:column="11">"on line %d"<pos:position pos:line="35" pos:column="23"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="36" pos:column="11">io<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">d<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">name<pos:position pos:line="36" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="24">__LINE__<pos:position pos:line="36" pos:column="32"/></name></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">-<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="13">EDOM<pos:position pos:line="37" pos:column="17"/></name></expr>;<pos:position pos:line="37" pos:column="18"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></switch>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1697_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">vg_read<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">vg_t<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">vg<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">vg_name<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">struct<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">dm_list<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">lvs<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">lvm_lv_list<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">lvl<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <specifier pos:line="5" pos:column="10">const<pos:position pos:line="5" pos:column="15"/></specifier> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">name<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <specifier pos:line="6" pos:column="10">const<pos:position pos:line="6" pos:column="15"/></specifier> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">attrs<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">uint64_t<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">size<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">lvm_submit<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">vg_name<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="26">"free"<pos:position pos:line="9" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="34">lvm_vg_get_free_size<pos:position pos:line="9" pos:column="54"/></name><argument_list pos:line="9" pos:column="54">(<argument><expr><name pos:line="9" pos:column="55">vg<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">lvs<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <call><name pos:line="11" pos:column="11">lvm_vg_list_lvs<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">vg<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">lvs<pos:position pos:line="12" pos:column="13"/></name></expr>)<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14"> <block pos:line="12" pos:column="15">{
        <comment type="block" pos:line="13" pos:column="9">/* no VGs are defined, which is not an error per se */</comment>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <macro><name pos:line="17" pos:column="5">dm_list_iterate_items<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument pos:line="17" pos:column="27">lvl<pos:position pos:line="17" pos:column="30"/></argument>, <argument pos:line="17" pos:column="32">lvs<pos:position pos:line="17" pos:column="35"/></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></macro> <block pos:line="17" pos:column="37">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">name<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">lvm_lv_get_name<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name><name pos:line="18" pos:column="32">lvl<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">lv<pos:position pos:line="18" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">attrs<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <call><name pos:line="19" pos:column="17">get_lv_property_string<pos:position pos:line="19" pos:column="39"/></name><argument_list pos:line="19" pos:column="39">(<argument><expr><name><name pos:line="19" pos:column="40">lvl<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">-&gt;<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="45">lv<pos:position pos:line="19" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="49">"lv_attr"<pos:position pos:line="19" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">size<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">lvm_lv_get_size<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name><name pos:line="20" pos:column="32">lvl<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">lv<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">name<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">NULL<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">||<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">attrs<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">==<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="38">NULL<pos:position pos:line="21" pos:column="42"/></name> <operator pos:line="21" pos:column="43">||<pos:position pos:line="21" pos:column="45"/></operator> <name pos:line="21" pos:column="46">size<pos:position pos:line="21" pos:column="50"/></name> <operator pos:line="21" pos:column="51">==<pos:position pos:line="21" pos:column="53"/></operator> <name pos:line="21" pos:column="54">NO_VALUE<pos:position pos:line="21" pos:column="62"/></name></expr>)<pos:position pos:line="21" pos:column="63"/></condition><then pos:line="21" pos:column="63">
            <block type="pseudo"><continue pos:line="22" pos:column="13">continue;<pos:position pos:line="22" pos:column="22"/></continue></block></then></if>

        <comment type="block" pos:line="24" pos:column="9">/* Condition on volume type.  We want the reported sizes in the
           volume group to sum to the size of the volume group, so we ignore
           virtual volumes.  */</comment>
        <switch pos:line="27" pos:column="9">switch <condition pos:line="27" pos:column="16">(<expr><name><name pos:line="27" pos:column="17">attrs<pos:position pos:line="27" pos:column="22"/></name><index pos:line="27" pos:column="22">[<expr><literal type="number" pos:line="27" pos:column="23">0<pos:position pos:line="27" pos:column="24"/></literal></expr>]<pos:position pos:line="27" pos:column="25"/></index></name></expr>)<pos:position pos:line="27" pos:column="26"/></condition> <block pos:line="27" pos:column="27">{
            <case pos:line="28" pos:column="13">case <expr><literal type="char" pos:line="28" pos:column="18">'s'<pos:position pos:line="28" pos:column="21"/></literal></expr>:<pos:position pos:line="28" pos:column="22"/></case>
            <case pos:line="29" pos:column="13">case <expr><literal type="char" pos:line="29" pos:column="18">'S'<pos:position pos:line="29" pos:column="21"/></literal></expr>:<pos:position pos:line="29" pos:column="22"/></case>
                <comment type="block" pos:line="30" pos:column="17">/* Snapshot.  Also report used/free space. */</comment>
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">report_lv_utilization<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><name><name pos:line="31" pos:column="39">lvl<pos:position pos:line="31" pos:column="42"/></name><operator pos:line="31" pos:column="42">-&gt;<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="44">lv<pos:position pos:line="31" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">vg_name<pos:position pos:line="31" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="57">name<pos:position pos:line="31" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="63">size<pos:position pos:line="31" pos:column="67"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="32" pos:column="25">"data_percent"<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
                <break pos:line="33" pos:column="17">break;<pos:position pos:line="33" pos:column="23"/></break>
            <case pos:line="34" pos:column="13">case <expr><literal type="char" pos:line="34" pos:column="18">'t'<pos:position pos:line="34" pos:column="21"/></literal></expr>:<pos:position pos:line="34" pos:column="22"/></case>
                <comment type="block" pos:line="35" pos:column="17">/* Thin pool virtual volume.  We report the underlying data
                   and metadata volumes, not this one.  Report used/free
                   space, then ignore. */</comment>
                <expr_stmt><expr><call><name pos:line="38" pos:column="17">report_thin_pool_utilization<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><name><name pos:line="38" pos:column="46">lvl<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">-&gt;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="51">lv<pos:position pos:line="38" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="55">vg_name<pos:position pos:line="38" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="64">size<pos:position pos:line="38" pos:column="68"/></name></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="70"/></expr_stmt>
                <continue pos:line="39" pos:column="17">continue;<pos:position pos:line="39" pos:column="26"/></continue>
            <case pos:line="40" pos:column="13">case <expr><literal type="char" pos:line="40" pos:column="18">'v'<pos:position pos:line="40" pos:column="21"/></literal></expr>:<pos:position pos:line="40" pos:column="22"/></case>
                <comment type="block" pos:line="41" pos:column="17">/* Virtual volume.  Ignore. */</comment>
                <continue pos:line="42" pos:column="17">continue;<pos:position pos:line="42" pos:column="26"/></continue>
            <case pos:line="43" pos:column="13">case <expr><literal type="char" pos:line="43" pos:column="18">'V'<pos:position pos:line="43" pos:column="21"/></literal></expr>:<pos:position pos:line="43" pos:column="22"/></case>
                <comment type="block" pos:line="44" pos:column="17">/* Thin volume or thin snapshot.  Ignore. */</comment>
                <continue pos:line="45" pos:column="17">continue;<pos:position pos:line="45" pos:column="26"/></continue>
        }<pos:position pos:line="46" pos:column="10"/></block></switch>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">lvm_submit<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name pos:line="47" pos:column="20">vg_name<pos:position pos:line="47" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="29">name<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">size<pos:position pos:line="47" pos:column="39"/></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

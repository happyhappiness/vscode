<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_215_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">init_value_list<pos:position pos:line="2" pos:column="16"/></name> <parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">value_list_t<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">vl<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">virDomainPtr<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">dom<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">n<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">name<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">uuid<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">VIR_UUID_STRING_BUFLEN<pos:position pos:line="6" pos:column="37"/></name></expr>]<pos:position pos:line="6" pos:column="38"/></index></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">sstrncpy<pos:position pos:line="8" pos:column="13"/></name> <argument_list pos:line="8" pos:column="14">(<argument><expr><name><name pos:line="8" pos:column="15">vl<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">plugin<pos:position pos:line="8" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="27">PLUGIN_NAME<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="40">sizeof <argument_list pos:line="8" pos:column="47">(<argument><expr><name><name pos:line="8" pos:column="48">vl<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">-&gt;<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="52">plugin<pos:position pos:line="8" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="10" pos:column="5">vl<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">host<pos:position pos:line="10" pos:column="13"/></name><index pos:line="10" pos:column="13">[<expr><literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>]<pos:position pos:line="10" pos:column="16"/></index></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <literal type="char" pos:line="10" pos:column="19">'\0'<pos:position pos:line="10" pos:column="23"/></literal></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* Construct the hostname field according to HostnameFormat. */</comment>
    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><decl><type><name pos:line="13" pos:column="10">int<pos:position pos:line="13" pos:column="13"/></name></type> <name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="25">HF_MAX_FIELDS<pos:position pos:line="13" pos:column="38"/></name></expr>;<pos:position pos:line="13" pos:column="39"/></condition> <incr><expr><operator pos:line="13" pos:column="40">++<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">i<pos:position pos:line="13" pos:column="43"/></name></expr></incr>)<pos:position pos:line="13" pos:column="44"/></control> <block pos:line="13" pos:column="45">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">hostname_format<pos:position pos:line="14" pos:column="28"/></name><index pos:line="14" pos:column="28">[<expr><name pos:line="14" pos:column="29">i<pos:position pos:line="14" pos:column="30"/></name></expr>]<pos:position pos:line="14" pos:column="31"/></index></name> <operator pos:line="14" pos:column="32">==<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="35">hf_none<pos:position pos:line="14" pos:column="42"/></name></expr>)<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43">
            <block type="pseudo"><continue pos:line="15" pos:column="13">continue;<pos:position pos:line="15" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name pos:line="17" pos:column="9">n<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <name pos:line="17" pos:column="13">DATA_MAX_NAME_LEN<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">-<pos:position pos:line="17" pos:column="32"/></operator> <call><name pos:line="17" pos:column="33">strlen<pos:position pos:line="17" pos:column="39"/></name> <argument_list pos:line="17" pos:column="40">(<argument><expr><name><name pos:line="17" pos:column="41">vl<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">host<pos:position pos:line="17" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call> <operator pos:line="17" pos:column="51">-<pos:position pos:line="17" pos:column="52"/></operator> <literal type="number" pos:line="17" pos:column="53">2<pos:position pos:line="17" pos:column="54"/></literal></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">i<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">&gt;<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal> <operator pos:line="19" pos:column="19">&amp;&amp;<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="22">n<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">&gt;=<pos:position pos:line="19" pos:column="29"/></operator> <literal type="number" pos:line="19" pos:column="27">1<pos:position pos:line="19" pos:column="28"/></literal></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29"> <block pos:line="19" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">strncat<pos:position pos:line="20" pos:column="20"/></name> <argument_list pos:line="20" pos:column="21">(<argument><expr><name><name pos:line="20" pos:column="22">vl<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">host<pos:position pos:line="20" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="32">":"<pos:position pos:line="20" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="37">1<pos:position pos:line="20" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">n<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">--<pos:position pos:line="21" pos:column="16"/></operator></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <switch pos:line="24" pos:column="9">switch <condition pos:line="24" pos:column="16">(<expr><name><name pos:line="24" pos:column="17">hostname_format<pos:position pos:line="24" pos:column="32"/></name><index pos:line="24" pos:column="32">[<expr><name pos:line="24" pos:column="33">i<pos:position pos:line="24" pos:column="34"/></name></expr>]<pos:position pos:line="24" pos:column="35"/></index></name></expr>)<pos:position pos:line="24" pos:column="36"/></condition> <block pos:line="24" pos:column="37">{
        <case pos:line="25" pos:column="9">case <expr><name pos:line="25" pos:column="14">hf_none<pos:position pos:line="25" pos:column="21"/></name></expr>:<pos:position pos:line="25" pos:column="22"/></case> <break pos:line="25" pos:column="23">break;<pos:position pos:line="25" pos:column="29"/></break>
        <case pos:line="26" pos:column="9">case <expr><name pos:line="26" pos:column="14">hf_hostname<pos:position pos:line="26" pos:column="25"/></name></expr>:<pos:position pos:line="26" pos:column="26"/></case>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">strncat<pos:position pos:line="27" pos:column="20"/></name> <argument_list pos:line="27" pos:column="21">(<argument><expr><name><name pos:line="27" pos:column="22">vl<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">host<pos:position pos:line="27" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">hostname_g<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">n<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
            <break pos:line="28" pos:column="13">break;<pos:position pos:line="28" pos:column="19"/></break>
        <case pos:line="29" pos:column="9">case <expr><name pos:line="29" pos:column="14">hf_name<pos:position pos:line="29" pos:column="21"/></name></expr>:<pos:position pos:line="29" pos:column="22"/></case>
            <expr_stmt><expr><name pos:line="30" pos:column="13">name<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <call><name pos:line="30" pos:column="20">virDomainGetName<pos:position pos:line="30" pos:column="36"/></name> <argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">dom<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><name pos:line="31" pos:column="17">name<pos:position pos:line="31" pos:column="21"/></name></expr>)<pos:position pos:line="31" pos:column="22"/></condition><then pos:line="31" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">strncat<pos:position pos:line="32" pos:column="24"/></name> <argument_list pos:line="32" pos:column="25">(<argument><expr><name><name pos:line="32" pos:column="26">vl<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">host<pos:position pos:line="32" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="36">name<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">n<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt></block></then></if>
            <break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break>
        <case pos:line="34" pos:column="9">case <expr><name pos:line="34" pos:column="14">hf_uuid<pos:position pos:line="34" pos:column="21"/></name></expr>:<pos:position pos:line="34" pos:column="22"/></case>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><call><name pos:line="35" pos:column="17">virDomainGetUUIDString<pos:position pos:line="35" pos:column="39"/></name> <argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">dom<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">uuid<pos:position pos:line="35" pos:column="50"/></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call> <operator pos:line="35" pos:column="52">==<pos:position pos:line="35" pos:column="54"/></operator> <literal type="number" pos:line="35" pos:column="55">0<pos:position pos:line="35" pos:column="56"/></literal></expr>)<pos:position pos:line="35" pos:column="57"/></condition><then pos:line="35" pos:column="57">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">strncat<pos:position pos:line="36" pos:column="24"/></name> <argument_list pos:line="36" pos:column="25">(<argument><expr><name><name pos:line="36" pos:column="26">vl<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">-&gt;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="30">host<pos:position pos:line="36" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="36">uuid<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="42">n<pos:position pos:line="36" pos:column="43"/></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt></block></then></if>
            <break pos:line="37" pos:column="13">break;<pos:position pos:line="37" pos:column="19"/></break>
        }<pos:position pos:line="38" pos:column="10"/></block></switch>
    }<pos:position pos:line="39" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">vl<pos:position pos:line="41" pos:column="7"/></name><operator pos:line="41" pos:column="7">-&gt;<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="9">host<pos:position pos:line="41" pos:column="13"/></name><index pos:line="41" pos:column="13">[<expr><sizeof pos:line="41" pos:column="14">sizeof <argument_list pos:line="41" pos:column="21">(<argument><expr><name><name pos:line="41" pos:column="22">vl<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">-&gt;<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="26">host<pos:position pos:line="41" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="31"/></argument_list></sizeof> <operator pos:line="41" pos:column="32">-<pos:position pos:line="41" pos:column="33"/></operator> <literal type="number" pos:line="41" pos:column="34">1<pos:position pos:line="41" pos:column="35"/></literal></expr>]<pos:position pos:line="41" pos:column="36"/></index></name> <operator pos:line="41" pos:column="37">=<pos:position pos:line="41" pos:column="38"/></operator> <literal type="char" pos:line="41" pos:column="39">'\0'<pos:position pos:line="41" pos:column="43"/></literal></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* Construct the plugin instance field according to PluginInstanceFormat. */</comment>
    <for pos:line="44" pos:column="5">for <control pos:line="44" pos:column="9">(<init><decl><type><name pos:line="44" pos:column="10">int<pos:position pos:line="44" pos:column="13"/></name></type> <name pos:line="44" pos:column="14">i<pos:position pos:line="44" pos:column="15"/></name> <init pos:line="44" pos:column="16">= <expr><literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="44" pos:column="20"/></init> <condition><expr><name pos:line="44" pos:column="21">i<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">&lt;<pos:position pos:line="44" pos:column="27"/></operator> <name pos:line="44" pos:column="25">PLGINST_MAX_FIELDS<pos:position pos:line="44" pos:column="43"/></name></expr>;<pos:position pos:line="44" pos:column="44"/></condition> <incr><expr><operator pos:line="44" pos:column="45">++<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="47">i<pos:position pos:line="44" pos:column="48"/></name></expr></incr>)<pos:position pos:line="44" pos:column="49"/></control> <block pos:line="44" pos:column="50">{
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">plugin_instance_format<pos:position pos:line="45" pos:column="35"/></name><index pos:line="45" pos:column="35">[<expr><name pos:line="45" pos:column="36">i<pos:position pos:line="45" pos:column="37"/></name></expr>]<pos:position pos:line="45" pos:column="38"/></index></name> <operator pos:line="45" pos:column="39">==<pos:position pos:line="45" pos:column="41"/></operator> <name pos:line="45" pos:column="42">plginst_none<pos:position pos:line="45" pos:column="54"/></name></expr>)<pos:position pos:line="45" pos:column="55"/></condition><then pos:line="45" pos:column="55">
            <block type="pseudo"><continue pos:line="46" pos:column="13">continue;<pos:position pos:line="46" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name pos:line="48" pos:column="9">n<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <sizeof pos:line="48" pos:column="13">sizeof<argument_list pos:line="48" pos:column="19">(<argument><expr><name><name pos:line="48" pos:column="20">vl<pos:position pos:line="48" pos:column="22"/></name><operator pos:line="48" pos:column="22">-&gt;<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="24">plugin_instance<pos:position pos:line="48" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="40"/></argument_list></sizeof> <operator pos:line="48" pos:column="41">-<pos:position pos:line="48" pos:column="42"/></operator> <call><name pos:line="48" pos:column="43">strlen<pos:position pos:line="48" pos:column="49"/></name> <argument_list pos:line="48" pos:column="50">(<argument><expr><name><name pos:line="48" pos:column="51">vl<pos:position pos:line="48" pos:column="53"/></name><operator pos:line="48" pos:column="53">-&gt;<pos:position pos:line="48" pos:column="58"/></operator><name pos:line="48" pos:column="55">plugin_instance<pos:position pos:line="48" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="71"/></argument_list></call> <operator pos:line="48" pos:column="72">-<pos:position pos:line="48" pos:column="73"/></operator> <literal type="number" pos:line="48" pos:column="74">2<pos:position pos:line="48" pos:column="75"/></literal></expr>;<pos:position pos:line="48" pos:column="76"/></expr_stmt>

        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">i<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">&gt;<pos:position pos:line="50" pos:column="19"/></operator> <literal type="number" pos:line="50" pos:column="17">0<pos:position pos:line="50" pos:column="18"/></literal> <operator pos:line="50" pos:column="19">&amp;&amp;<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="22">n<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">&gt;=<pos:position pos:line="50" pos:column="29"/></operator> <literal type="number" pos:line="50" pos:column="27">1<pos:position pos:line="50" pos:column="28"/></literal></expr>)<pos:position pos:line="50" pos:column="29"/></condition><then pos:line="50" pos:column="29"> <block pos:line="50" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">strncat<pos:position pos:line="51" pos:column="20"/></name> <argument_list pos:line="51" pos:column="21">(<argument><expr><name><name pos:line="51" pos:column="22">vl<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">plugin_instance<pos:position pos:line="51" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="43">":"<pos:position pos:line="51" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="48">1<pos:position pos:line="51" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="52" pos:column="13">n<pos:position pos:line="52" pos:column="14"/></name><operator pos:line="52" pos:column="14">--<pos:position pos:line="52" pos:column="16"/></operator></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>

        <switch pos:line="55" pos:column="9">switch <condition pos:line="55" pos:column="16">(<expr><name><name pos:line="55" pos:column="17">plugin_instance_format<pos:position pos:line="55" pos:column="39"/></name><index pos:line="55" pos:column="39">[<expr><name pos:line="55" pos:column="40">i<pos:position pos:line="55" pos:column="41"/></name></expr>]<pos:position pos:line="55" pos:column="42"/></index></name></expr>)<pos:position pos:line="55" pos:column="43"/></condition> <block pos:line="55" pos:column="44">{
        <case pos:line="56" pos:column="9">case <expr><name pos:line="56" pos:column="14">plginst_none<pos:position pos:line="56" pos:column="26"/></name></expr>:<pos:position pos:line="56" pos:column="27"/></case> <break pos:line="56" pos:column="28">break;<pos:position pos:line="56" pos:column="34"/></break>
        <case pos:line="57" pos:column="9">case <expr><name pos:line="57" pos:column="14">plginst_name<pos:position pos:line="57" pos:column="26"/></name></expr>:<pos:position pos:line="57" pos:column="27"/></case>
            <expr_stmt><expr><name pos:line="58" pos:column="13">name<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <call><name pos:line="58" pos:column="20">virDomainGetName<pos:position pos:line="58" pos:column="36"/></name> <argument_list pos:line="58" pos:column="37">(<argument><expr><name pos:line="58" pos:column="38">dom<pos:position pos:line="58" pos:column="41"/></name></expr></argument>)<pos:position pos:line="58" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="43"/></expr_stmt>
            <if pos:line="59" pos:column="13">if <condition pos:line="59" pos:column="16">(<expr><name pos:line="59" pos:column="17">name<pos:position pos:line="59" pos:column="21"/></name></expr>)<pos:position pos:line="59" pos:column="22"/></condition><then pos:line="59" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="17">strncat<pos:position pos:line="60" pos:column="24"/></name> <argument_list pos:line="60" pos:column="25">(<argument><expr><name><name pos:line="60" pos:column="26">vl<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">-&gt;<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="30">plugin_instance<pos:position pos:line="60" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="47">name<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="53">n<pos:position pos:line="60" pos:column="54"/></name></expr></argument>)<pos:position pos:line="60" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="56"/></expr_stmt></block></then></if>
            <break pos:line="61" pos:column="13">break;<pos:position pos:line="61" pos:column="19"/></break>
        <case pos:line="62" pos:column="9">case <expr><name pos:line="62" pos:column="14">plginst_uuid<pos:position pos:line="62" pos:column="26"/></name></expr>:<pos:position pos:line="62" pos:column="27"/></case>
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><call><name pos:line="63" pos:column="17">virDomainGetUUIDString<pos:position pos:line="63" pos:column="39"/></name> <argument_list pos:line="63" pos:column="40">(<argument><expr><name pos:line="63" pos:column="41">dom<pos:position pos:line="63" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="46">uuid<pos:position pos:line="63" pos:column="50"/></name></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call> <operator pos:line="63" pos:column="52">==<pos:position pos:line="63" pos:column="54"/></operator> <literal type="number" pos:line="63" pos:column="55">0<pos:position pos:line="63" pos:column="56"/></literal></expr>)<pos:position pos:line="63" pos:column="57"/></condition><then pos:line="63" pos:column="57">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="17">strncat<pos:position pos:line="64" pos:column="24"/></name> <argument_list pos:line="64" pos:column="25">(<argument><expr><name><name pos:line="64" pos:column="26">vl<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">plugin_instance<pos:position pos:line="64" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="47">uuid<pos:position pos:line="64" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="53">n<pos:position pos:line="64" pos:column="54"/></name></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="56"/></expr_stmt></block></then></if>
            <break pos:line="65" pos:column="13">break;<pos:position pos:line="65" pos:column="19"/></break>
        }<pos:position pos:line="66" pos:column="10"/></block></switch>
    }<pos:position pos:line="67" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="69" pos:column="5">vl<pos:position pos:line="69" pos:column="7"/></name><operator pos:line="69" pos:column="7">-&gt;<pos:position pos:line="69" pos:column="12"/></operator><name pos:line="69" pos:column="9">plugin_instance<pos:position pos:line="69" pos:column="24"/></name><index pos:line="69" pos:column="24">[<expr><sizeof pos:line="69" pos:column="25">sizeof <argument_list pos:line="69" pos:column="32">(<argument><expr><name><name pos:line="69" pos:column="33">vl<pos:position pos:line="69" pos:column="35"/></name><operator pos:line="69" pos:column="35">-&gt;<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="37">plugin_instance<pos:position pos:line="69" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="53"/></argument_list></sizeof> <operator pos:line="69" pos:column="54">-<pos:position pos:line="69" pos:column="55"/></operator> <literal type="number" pos:line="69" pos:column="56">1<pos:position pos:line="69" pos:column="57"/></literal></expr>]<pos:position pos:line="69" pos:column="58"/></index></name> <operator pos:line="69" pos:column="59">=<pos:position pos:line="69" pos:column="60"/></operator> <literal type="char" pos:line="69" pos:column="61">'\0'<pos:position pos:line="69" pos:column="65"/></literal></expr>;<pos:position pos:line="69" pos:column="66"/></expr_stmt>

}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

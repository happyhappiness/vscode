<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1492_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">statsd_network_init<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">pollfd<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier><modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ret_fds<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="58">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">size_t<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">ret_fds_num<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">pollfd<pos:position pos:line="4" pos:column="16"/></name></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">fds<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">NULL<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">fds_num<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">addrinfo<pos:position pos:line="7" pos:column="18"/></name></name></type> <name pos:line="7" pos:column="19">ai_hints<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">addrinfo<pos:position pos:line="8" pos:column="18"/></name></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">ai_list<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">addrinfo<pos:position pos:line="9" pos:column="18"/></name></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">ai_ptr<pos:position pos:line="9" pos:column="26"/></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name> <specifier pos:line="12" pos:column="8">const<pos:position pos:line="12" pos:column="13"/></specifier> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">node<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><ternary><condition><expr><operator pos:line="12" pos:column="22">(<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">conf_node<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">!=<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">NULL<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">)<pos:position pos:line="12" pos:column="41"/></operator></expr> ?<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43"> <expr><name pos:line="12" pos:column="44">conf_node<pos:position pos:line="12" pos:column="53"/></name></expr> <pos:position pos:line="12" pos:column="54"/></then><else pos:line="12" pos:column="54">: <expr><name pos:line="12" pos:column="56">STATSD_DEFAULT_NODE<pos:position pos:line="12" pos:column="75"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="12" pos:column="76"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <specifier pos:line="13" pos:column="8">const<pos:position pos:line="13" pos:column="13"/></specifier> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">service<pos:position pos:line="13" pos:column="22"/></name> <init pos:line="13" pos:column="23">= <expr><ternary><condition><expr><operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">conf_service<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">!=<pos:position pos:line="13" pos:column="41"/></operator> <name pos:line="13" pos:column="42">NULL<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">)<pos:position pos:line="13" pos:column="47"/></operator></expr>
    ?<pos:position pos:line="14" pos:column="6"/></condition><then pos:line="14" pos:column="6"> <expr><name pos:line="14" pos:column="7">conf_service<pos:position pos:line="14" pos:column="19"/></name></expr> <pos:position pos:line="14" pos:column="20"/></then><else pos:line="14" pos:column="20">: <expr><name pos:line="14" pos:column="22">STATSD_DEFAULT_SERVICE<pos:position pos:line="14" pos:column="44"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="14" pos:column="45"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">memset<pos:position pos:line="16" pos:column="9"/></name> <argument_list pos:line="16" pos:column="10">(<argument><expr><operator pos:line="16" pos:column="11">&amp;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="12">ai_hints<pos:position pos:line="16" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="25">sizeof <argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">ai_hints<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">ai_hints<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">.<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">ai_flags<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">AI_PASSIVE<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">AI_ADDRCONFIG<pos:position pos:line="18" pos:column="21"/></name></cpp:ifdef>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">ai_hints<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">.<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">ai_flags<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">|=<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">AI_ADDRCONFIG<pos:position pos:line="19" pos:column="37"/></name></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">ai_hints<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">.<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">ai_family<pos:position pos:line="21" pos:column="21"/></name></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">AF_UNSPEC<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">ai_hints<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">.<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">ai_socktype<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">SOCK_DGRAM<pos:position pos:line="22" pos:column="36"/></name></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name pos:line="24" pos:column="3">status<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">getaddrinfo<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">node<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">service<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="40">&amp;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="41">ai_hints<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="51">&amp;<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="52">ai_list<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">status<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">!=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ERROR<pos:position pos:line="27" pos:column="10"/></name> <argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="string" pos:line="27" pos:column="12">"statsd plugin: getaddrinfo (\"%s\", \"%s\") failed: %s"<pos:position pos:line="27" pos:column="68"/></literal></expr></argument>,
        <argument><expr><name pos:line="28" pos:column="9">node<pos:position pos:line="28" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="15">service<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="24">gai_strerror<pos:position pos:line="28" pos:column="36"/></name> <argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">status<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">status<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">)<pos:position pos:line="29" pos:column="20"/></operator></expr>;<pos:position pos:line="29" pos:column="21"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <for pos:line="32" pos:column="3">for <control pos:line="32" pos:column="7">(<init><expr><name pos:line="32" pos:column="8">ai_ptr<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <name pos:line="32" pos:column="17">ai_list<pos:position pos:line="32" pos:column="24"/></name></expr>;<pos:position pos:line="32" pos:column="25"/></init> <condition><expr><name pos:line="32" pos:column="26">ai_ptr<pos:position pos:line="32" pos:column="32"/></name> <operator pos:line="32" pos:column="33">!=<pos:position pos:line="32" pos:column="35"/></operator> <name pos:line="32" pos:column="36">NULL<pos:position pos:line="32" pos:column="40"/></name></expr>;<pos:position pos:line="32" pos:column="41"/></condition> <incr><expr><name pos:line="32" pos:column="42">ai_ptr<pos:position pos:line="32" pos:column="48"/></name> <operator pos:line="32" pos:column="49">=<pos:position pos:line="32" pos:column="50"/></operator> <name><name pos:line="32" pos:column="51">ai_ptr<pos:position pos:line="32" pos:column="57"/></name><operator pos:line="32" pos:column="57">-&gt;<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="59">ai_next<pos:position pos:line="32" pos:column="66"/></name></name></expr></incr>)<pos:position pos:line="32" pos:column="67"/></control>
  <block pos:line="33" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">int<pos:position pos:line="34" pos:column="8"/></name></type> <name pos:line="34" pos:column="9">fd<pos:position pos:line="34" pos:column="11"/></name></decl>;<pos:position pos:line="34" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="35" pos:column="5">struct<pos:position pos:line="35" pos:column="11"/></name> <name pos:line="35" pos:column="12">pollfd<pos:position pos:line="35" pos:column="18"/></name></name> <modifier pos:line="35" pos:column="19">*<pos:position pos:line="35" pos:column="20"/></modifier></type><name pos:line="35" pos:column="20">tmp<pos:position pos:line="35" pos:column="23"/></name></decl>;<pos:position pos:line="35" pos:column="24"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="37" pos:column="5">char<pos:position pos:line="37" pos:column="9"/></name></type> <name><name pos:line="37" pos:column="10">dbg_node<pos:position pos:line="37" pos:column="18"/></name><index pos:line="37" pos:column="18">[<expr><name pos:line="37" pos:column="19">NI_MAXHOST<pos:position pos:line="37" pos:column="29"/></name></expr>]<pos:position pos:line="37" pos:column="30"/></index></name></decl>;<pos:position pos:line="37" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">char<pos:position pos:line="38" pos:column="9"/></name></type> <name><name pos:line="38" pos:column="10">dbg_service<pos:position pos:line="38" pos:column="21"/></name><index pos:line="38" pos:column="21">[<expr><name pos:line="38" pos:column="22">NI_MAXSERV<pos:position pos:line="38" pos:column="32"/></name></expr>]<pos:position pos:line="38" pos:column="33"/></index></name></decl>;<pos:position pos:line="38" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name pos:line="40" pos:column="5">fd<pos:position pos:line="40" pos:column="7"/></name> <operator pos:line="40" pos:column="8">=<pos:position pos:line="40" pos:column="9"/></operator> <call><name pos:line="40" pos:column="10">socket<pos:position pos:line="40" pos:column="16"/></name> <argument_list pos:line="40" pos:column="17">(<argument><expr><name><name pos:line="40" pos:column="18">ai_ptr<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">ai_family<pos:position pos:line="40" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="37">ai_ptr<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">ai_socktype<pos:position pos:line="40" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="58">ai_ptr<pos:position pos:line="40" pos:column="64"/></name><operator pos:line="40" pos:column="64">-&gt;<pos:position pos:line="40" pos:column="69"/></operator><name pos:line="40" pos:column="66">ai_protocol<pos:position pos:line="40" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="79"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">fd<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">&lt;<pos:position pos:line="41" pos:column="16"/></operator> <literal type="number" pos:line="41" pos:column="14">0<pos:position pos:line="41" pos:column="15"/></literal></expr>)<pos:position pos:line="41" pos:column="16"/></condition><then pos:line="41" pos:column="16">
    <block pos:line="42" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="43" pos:column="7">char<pos:position pos:line="43" pos:column="11"/></name></type> <name><name pos:line="43" pos:column="12">errbuf<pos:position pos:line="43" pos:column="18"/></name><index pos:line="43" pos:column="18">[<expr><literal type="number" pos:line="43" pos:column="19">1024<pos:position pos:line="43" pos:column="23"/></literal></expr>]<pos:position pos:line="43" pos:column="24"/></index></name></decl>;<pos:position pos:line="43" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">ERROR<pos:position pos:line="44" pos:column="12"/></name> <argument_list pos:line="44" pos:column="13">(<argument><expr><literal type="string" pos:line="44" pos:column="14">"statsd plugin: socket(2) failed: %s"<pos:position pos:line="44" pos:column="51"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="45" pos:column="11">sstrerror<pos:position pos:line="45" pos:column="20"/></name> <argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">errno<pos:position pos:line="45" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="29">errbuf<pos:position pos:line="45" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="37">sizeof <argument_list pos:line="45" pos:column="44">(<argument><expr><name pos:line="45" pos:column="45">errbuf<pos:position pos:line="45" pos:column="51"/></name></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt>
      <continue pos:line="46" pos:column="7">continue;<pos:position pos:line="46" pos:column="16"/></continue>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">getnameinfo<pos:position pos:line="49" pos:column="16"/></name> <argument_list pos:line="49" pos:column="17">(<argument><expr><name><name pos:line="49" pos:column="18">ai_ptr<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">ai_addr<pos:position pos:line="49" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="35">ai_ptr<pos:position pos:line="49" pos:column="41"/></name><operator pos:line="49" pos:column="41">-&gt;<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="43">ai_addrlen<pos:position pos:line="49" pos:column="53"/></name></name></expr></argument>,
        <argument><expr><name pos:line="50" pos:column="9">dbg_node<pos:position pos:line="50" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="19">sizeof <argument_list pos:line="50" pos:column="26">(<argument><expr><name pos:line="50" pos:column="27">dbg_node<pos:position pos:line="50" pos:column="35"/></name></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="50" pos:column="38">dbg_service<pos:position pos:line="50" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="51">sizeof <argument_list pos:line="50" pos:column="58">(<argument><expr><name pos:line="50" pos:column="59">dbg_service<pos:position pos:line="50" pos:column="70"/></name></expr></argument>)<pos:position pos:line="50" pos:column="71"/></argument_list></sizeof></expr></argument>,
        <argument><expr><name pos:line="51" pos:column="9">NI_DGRAM<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">|<pos:position pos:line="51" pos:column="19"/></operator> <name pos:line="51" pos:column="20">NI_NUMERICHOST<pos:position pos:line="51" pos:column="34"/></name> <operator pos:line="51" pos:column="35">|<pos:position pos:line="51" pos:column="36"/></operator> <name pos:line="51" pos:column="37">NI_NUMERICSERV<pos:position pos:line="51" pos:column="51"/></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">DEBUG<pos:position pos:line="52" pos:column="10"/></name> <argument_list pos:line="52" pos:column="11">(<argument><expr><literal type="string" pos:line="52" pos:column="12">"statsd plugin: Trying to bind to [%s]:%s ..."<pos:position pos:line="52" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="60">dbg_node<pos:position pos:line="52" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="70">dbg_service<pos:position pos:line="52" pos:column="81"/></name></expr></argument>)<pos:position pos:line="52" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="83"/></expr_stmt>

    <expr_stmt><expr><name pos:line="54" pos:column="5">status<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <call><name pos:line="54" pos:column="14">bind<pos:position pos:line="54" pos:column="18"/></name> <argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">fd<pos:position pos:line="54" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="24">ai_ptr<pos:position pos:line="54" pos:column="30"/></name><operator pos:line="54" pos:column="30">-&gt;<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="32">ai_addr<pos:position pos:line="54" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="41">ai_ptr<pos:position pos:line="54" pos:column="47"/></name><operator pos:line="54" pos:column="47">-&gt;<pos:position pos:line="54" pos:column="52"/></operator><name pos:line="54" pos:column="49">ai_addrlen<pos:position pos:line="54" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="61"/></expr_stmt>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">status<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">!=<pos:position pos:line="55" pos:column="18"/></operator> <literal type="number" pos:line="55" pos:column="19">0<pos:position pos:line="55" pos:column="20"/></literal></expr>)<pos:position pos:line="55" pos:column="21"/></condition><then pos:line="55" pos:column="21">
    <block pos:line="56" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="57" pos:column="7">char<pos:position pos:line="57" pos:column="11"/></name></type> <name><name pos:line="57" pos:column="12">errbuf<pos:position pos:line="57" pos:column="18"/></name><index pos:line="57" pos:column="18">[<expr><literal type="number" pos:line="57" pos:column="19">1024<pos:position pos:line="57" pos:column="23"/></literal></expr>]<pos:position pos:line="57" pos:column="24"/></index></name></decl>;<pos:position pos:line="57" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">ERROR<pos:position pos:line="58" pos:column="12"/></name> <argument_list pos:line="58" pos:column="13">(<argument><expr><literal type="string" pos:line="58" pos:column="14">"statsd plugin: bind(2) failed: %s"<pos:position pos:line="58" pos:column="49"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="59" pos:column="11">sstrerror<pos:position pos:line="59" pos:column="20"/></name> <argument_list pos:line="59" pos:column="21">(<argument><expr><name pos:line="59" pos:column="22">errno<pos:position pos:line="59" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="29">errbuf<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="37">sizeof <argument_list pos:line="59" pos:column="44">(<argument><expr><name pos:line="59" pos:column="45">errbuf<pos:position pos:line="59" pos:column="51"/></name></expr></argument>)<pos:position pos:line="59" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">close<pos:position pos:line="60" pos:column="12"/></name> <argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">fd<pos:position pos:line="60" pos:column="16"/></name></expr></argument>)<pos:position pos:line="60" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="18"/></expr_stmt>
      <continue pos:line="61" pos:column="7">continue;<pos:position pos:line="61" pos:column="16"/></continue>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="64" pos:column="5">tmp<pos:position pos:line="64" pos:column="8"/></name> <operator pos:line="64" pos:column="9">=<pos:position pos:line="64" pos:column="10"/></operator> <call><name pos:line="64" pos:column="11">realloc<pos:position pos:line="64" pos:column="18"/></name> <argument_list pos:line="64" pos:column="19">(<argument><expr><name pos:line="64" pos:column="20">fds<pos:position pos:line="64" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="25">sizeof <argument_list pos:line="64" pos:column="32">(<argument><expr><operator pos:line="64" pos:column="33">*<pos:position pos:line="64" pos:column="34"/></operator><name pos:line="64" pos:column="34">fds<pos:position pos:line="64" pos:column="37"/></name></expr></argument>)<pos:position pos:line="64" pos:column="38"/></argument_list></sizeof> <operator pos:line="64" pos:column="39">*<pos:position pos:line="64" pos:column="40"/></operator> <operator pos:line="64" pos:column="41">(<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="42">fds_num<pos:position pos:line="64" pos:column="49"/></name> <operator pos:line="64" pos:column="50">+<pos:position pos:line="64" pos:column="51"/></operator> <literal type="number" pos:line="64" pos:column="52">1<pos:position pos:line="64" pos:column="53"/></literal><operator pos:line="64" pos:column="53">)<pos:position pos:line="64" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="56"/></expr_stmt>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">tmp<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">==<pos:position pos:line="65" pos:column="15"/></operator> <name pos:line="65" pos:column="16">NULL<pos:position pos:line="65" pos:column="20"/></name></expr>)<pos:position pos:line="65" pos:column="21"/></condition><then pos:line="65" pos:column="21">
    <block pos:line="66" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">ERROR<pos:position pos:line="67" pos:column="12"/></name> <argument_list pos:line="67" pos:column="13">(<argument><expr><literal type="string" pos:line="67" pos:column="14">"statsd plugin: realloc failed."<pos:position pos:line="67" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">close<pos:position pos:line="68" pos:column="12"/></name> <argument_list pos:line="68" pos:column="13">(<argument><expr><name pos:line="68" pos:column="14">fd<pos:position pos:line="68" pos:column="16"/></name></expr></argument>)<pos:position pos:line="68" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="18"/></expr_stmt>
      <continue pos:line="69" pos:column="7">continue;<pos:position pos:line="69" pos:column="16"/></continue>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="71" pos:column="5">fds<pos:position pos:line="71" pos:column="8"/></name> <operator pos:line="71" pos:column="9">=<pos:position pos:line="71" pos:column="10"/></operator> <name pos:line="71" pos:column="11">tmp<pos:position pos:line="71" pos:column="14"/></name></expr>;<pos:position pos:line="71" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="72" pos:column="5">tmp<pos:position pos:line="72" pos:column="8"/></name> <operator pos:line="72" pos:column="9">=<pos:position pos:line="72" pos:column="10"/></operator> <name pos:line="72" pos:column="11">fds<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">+<pos:position pos:line="72" pos:column="16"/></operator> <name pos:line="72" pos:column="17">fds_num<pos:position pos:line="72" pos:column="24"/></name></expr>;<pos:position pos:line="72" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="73" pos:column="5">fds_num<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">++<pos:position pos:line="73" pos:column="14"/></operator></expr>;<pos:position pos:line="73" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="75" pos:column="5">memset<pos:position pos:line="75" pos:column="11"/></name> <argument_list pos:line="75" pos:column="12">(<argument><expr><name pos:line="75" pos:column="13">tmp<pos:position pos:line="75" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="18">0<pos:position pos:line="75" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="21">sizeof <argument_list pos:line="75" pos:column="28">(<argument><expr><operator pos:line="75" pos:column="29">*<pos:position pos:line="75" pos:column="30"/></operator><name pos:line="75" pos:column="30">tmp<pos:position pos:line="75" pos:column="33"/></name></expr></argument>)<pos:position pos:line="75" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="75" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="76" pos:column="5">tmp<pos:position pos:line="76" pos:column="8"/></name><operator pos:line="76" pos:column="8">-&gt;<pos:position pos:line="76" pos:column="13"/></operator><name pos:line="76" pos:column="10">fd<pos:position pos:line="76" pos:column="12"/></name></name> <operator pos:line="76" pos:column="13">=<pos:position pos:line="76" pos:column="14"/></operator> <name pos:line="76" pos:column="15">fd<pos:position pos:line="76" pos:column="17"/></name></expr>;<pos:position pos:line="76" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">tmp<pos:position pos:line="77" pos:column="8"/></name><operator pos:line="77" pos:column="8">-&gt;<pos:position pos:line="77" pos:column="13"/></operator><name pos:line="77" pos:column="10">events<pos:position pos:line="77" pos:column="16"/></name></name> <operator pos:line="77" pos:column="17">=<pos:position pos:line="77" pos:column="18"/></operator> <name pos:line="77" pos:column="19">POLLIN<pos:position pos:line="77" pos:column="25"/></name> <operator pos:line="77" pos:column="26">|<pos:position pos:line="77" pos:column="27"/></operator> <name pos:line="77" pos:column="28">POLLPRI<pos:position pos:line="77" pos:column="35"/></name></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="78" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="80" pos:column="3">freeaddrinfo<pos:position pos:line="80" pos:column="15"/></name> <argument_list pos:line="80" pos:column="16">(<argument><expr><name pos:line="80" pos:column="17">ai_list<pos:position pos:line="80" pos:column="24"/></name></expr></argument>)<pos:position pos:line="80" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="26"/></expr_stmt>

  <if pos:line="82" pos:column="3">if <condition pos:line="82" pos:column="6">(<expr><name pos:line="82" pos:column="7">fds_num<pos:position pos:line="82" pos:column="14"/></name> <operator pos:line="82" pos:column="15">==<pos:position pos:line="82" pos:column="17"/></operator> <literal type="number" pos:line="82" pos:column="18">0<pos:position pos:line="82" pos:column="19"/></literal></expr>)<pos:position pos:line="82" pos:column="20"/></condition><then pos:line="82" pos:column="20">
  <block pos:line="83" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">ERROR<pos:position pos:line="84" pos:column="10"/></name> <argument_list pos:line="84" pos:column="11">(<argument><expr><literal type="string" pos:line="84" pos:column="12">"statsd plugin: Unable to create listening socket for [%s]:%s."<pos:position pos:line="84" pos:column="75"/></literal></expr></argument>,
        <argument><expr><ternary><condition><expr><operator pos:line="85" pos:column="9">(<pos:position pos:line="85" pos:column="10"/></operator><name pos:line="85" pos:column="10">node<pos:position pos:line="85" pos:column="14"/></name> <operator pos:line="85" pos:column="15">!=<pos:position pos:line="85" pos:column="17"/></operator> <name pos:line="85" pos:column="18">NULL<pos:position pos:line="85" pos:column="22"/></name><operator pos:line="85" pos:column="22">)<pos:position pos:line="85" pos:column="23"/></operator></expr> ?<pos:position pos:line="85" pos:column="25"/></condition><then pos:line="85" pos:column="25"> <expr><name pos:line="85" pos:column="26">node<pos:position pos:line="85" pos:column="30"/></name></expr> <pos:position pos:line="85" pos:column="31"/></then><else pos:line="85" pos:column="31">: <expr><literal type="string" pos:line="85" pos:column="33">"::"<pos:position pos:line="85" pos:column="37"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="85" pos:column="39">service<pos:position pos:line="85" pos:column="46"/></name></expr></argument>)<pos:position pos:line="85" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="48"/></expr_stmt>
    <return pos:line="86" pos:column="5">return <expr><operator pos:line="86" pos:column="12">(<pos:position pos:line="86" pos:column="13"/></operator><name pos:line="86" pos:column="13">ENOENT<pos:position pos:line="86" pos:column="19"/></name><operator pos:line="86" pos:column="19">)<pos:position pos:line="86" pos:column="20"/></operator></expr>;<pos:position pos:line="86" pos:column="21"/></return>
  }<pos:position pos:line="87" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="89" pos:column="3">*<pos:position pos:line="89" pos:column="4"/></operator><name pos:line="89" pos:column="4">ret_fds<pos:position pos:line="89" pos:column="11"/></name> <operator pos:line="89" pos:column="12">=<pos:position pos:line="89" pos:column="13"/></operator> <name pos:line="89" pos:column="14">fds<pos:position pos:line="89" pos:column="17"/></name></expr>;<pos:position pos:line="89" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="90" pos:column="3">*<pos:position pos:line="90" pos:column="4"/></operator><name pos:line="90" pos:column="4">ret_fds_num<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <name pos:line="90" pos:column="18">fds_num<pos:position pos:line="90" pos:column="25"/></name></expr>;<pos:position pos:line="90" pos:column="26"/></expr_stmt>
  <return pos:line="91" pos:column="3">return <expr><operator pos:line="91" pos:column="10">(<pos:position pos:line="91" pos:column="11"/></operator><literal type="number" pos:line="91" pos:column="11">0<pos:position pos:line="91" pos:column="12"/></literal><operator pos:line="91" pos:column="12">)<pos:position pos:line="91" pos:column="13"/></operator></expr>;<pos:position pos:line="91" pos:column="14"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

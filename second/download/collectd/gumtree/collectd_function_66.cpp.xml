<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_66.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">us_handle_putval<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">FILE<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">fh<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">fields<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">fields_num<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">hostname<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">plugin<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">plugin_instance<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">type<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">type_instance<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type>   <name pos:line="8" pos:column="15">status<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type>   <name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">data_set_t<pos:position pos:line="11" pos:column="25"/></name> <modifier pos:line="11" pos:column="26">*<pos:position pos:line="11" pos:column="27"/></modifier></type><name pos:line="11" pos:column="27">ds<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">value_list_t<pos:position pos:line="12" pos:column="21"/></name></type> <name pos:line="12" pos:column="22">vl<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><name pos:line="12" pos:column="27">VALUE_LIST_INIT<pos:position pos:line="12" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="43"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier><modifier pos:line="14" pos:column="15">*<pos:position pos:line="14" pos:column="16"/></modifier></type><name pos:line="14" pos:column="16">value_ptr<pos:position pos:line="14" pos:column="25"/></name></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">fields_num<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">!=<pos:position pos:line="16" pos:column="26"/></operator> <literal type="number" pos:line="16" pos:column="27">3<pos:position pos:line="16" pos:column="28"/></literal></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29">
	<block pos:line="17" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">DEBUG<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><literal type="string" pos:line="18" pos:column="24">"unixsock plugin: Wrong number of fields: %i"<pos:position pos:line="18" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="71">fields_num<pos:position pos:line="18" pos:column="81"/></name></expr></argument>)<pos:position pos:line="18" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="83"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">fprintf<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">fh<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="30">"-1 Wrong number of fields: Got %i, expected 3.\n"<pos:position pos:line="19" pos:column="80"/></literal></expr></argument>,
				<argument><expr><name pos:line="20" pos:column="33">fields_num<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">fflush<pos:position pos:line="21" pos:column="23"/></name> <argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">fh<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">-<pos:position pos:line="22" pos:column="26"/></operator><literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal><operator pos:line="22" pos:column="27">)<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">parse_identifier<pos:position pos:line="25" pos:column="34"/></name> <argument_list pos:line="25" pos:column="35">(<argument><expr><name><name pos:line="25" pos:column="36">fields<pos:position pos:line="25" pos:column="42"/></name><index pos:line="25" pos:column="42">[<expr><literal type="number" pos:line="25" pos:column="43">1<pos:position pos:line="25" pos:column="44"/></literal></expr>]<pos:position pos:line="25" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="47">&amp;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="48">hostname<pos:position pos:line="25" pos:column="56"/></name></expr></argument>,
			<argument><expr><operator pos:line="26" pos:column="25">&amp;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="26">plugin<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="34">&amp;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="35">plugin_instance<pos:position pos:line="26" pos:column="50"/></name></expr></argument>,
			<argument><expr><operator pos:line="27" pos:column="25">&amp;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="26">type<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="32">&amp;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="33">type_instance<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">status<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">!=<pos:position pos:line="28" pos:column="22"/></operator> <literal type="number" pos:line="28" pos:column="23">0<pos:position pos:line="28" pos:column="24"/></literal></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25">
	<block pos:line="29" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">DEBUG<pos:position pos:line="30" pos:column="22"/></name> <argument_list pos:line="30" pos:column="23">(<argument><expr><literal type="string" pos:line="30" pos:column="24">"unixsock plugin: Cannot parse `%s'"<pos:position pos:line="30" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="62">fields<pos:position pos:line="30" pos:column="68"/></name><index pos:line="30" pos:column="68">[<expr><literal type="number" pos:line="30" pos:column="69">1<pos:position pos:line="30" pos:column="70"/></literal></expr>]<pos:position pos:line="30" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">fprintf<pos:position pos:line="31" pos:column="24"/></name> <argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">fh<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="30">"-1 Cannot parse identifier.\n"<pos:position pos:line="31" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">fflush<pos:position pos:line="32" pos:column="23"/></name> <argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">fh<pos:position pos:line="32" pos:column="27"/></name></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
		<return pos:line="33" pos:column="17">return <expr><operator pos:line="33" pos:column="24">(<pos:position pos:line="33" pos:column="25"/></operator><operator pos:line="33" pos:column="25">-<pos:position pos:line="33" pos:column="26"/></operator><literal type="number" pos:line="33" pos:column="26">1<pos:position pos:line="33" pos:column="27"/></literal><operator pos:line="33" pos:column="27">)<pos:position pos:line="33" pos:column="28"/></operator></expr>;<pos:position pos:line="33" pos:column="29"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><call><name pos:line="36" pos:column="14">strlen<pos:position pos:line="36" pos:column="20"/></name> <argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">hostname<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call> <operator pos:line="36" pos:column="32">&gt;=<pos:position pos:line="36" pos:column="37"/></operator> <sizeof pos:line="36" pos:column="35">sizeof <argument_list pos:line="36" pos:column="42">(<argument><expr><name><name pos:line="36" pos:column="43">vl<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">.<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="46">host<pos:position pos:line="36" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></sizeof><operator pos:line="36" pos:column="51">)<pos:position pos:line="36" pos:column="52"/></operator>
			<operator pos:line="37" pos:column="25">||<pos:position pos:line="37" pos:column="27"/></operator> <operator pos:line="37" pos:column="28">(<pos:position pos:line="37" pos:column="29"/></operator><call><name pos:line="37" pos:column="29">strlen<pos:position pos:line="37" pos:column="35"/></name> <argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">plugin<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call> <operator pos:line="37" pos:column="45">&gt;=<pos:position pos:line="37" pos:column="50"/></operator> <sizeof pos:line="37" pos:column="48">sizeof <argument_list pos:line="37" pos:column="55">(<argument><expr><name><name pos:line="37" pos:column="56">vl<pos:position pos:line="37" pos:column="58"/></name><operator pos:line="37" pos:column="58">.<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="59">plugin<pos:position pos:line="37" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></sizeof><operator pos:line="37" pos:column="66">)<pos:position pos:line="37" pos:column="67"/></operator>
			<operator pos:line="38" pos:column="25">||<pos:position pos:line="38" pos:column="27"/></operator> <operator pos:line="38" pos:column="28">(<pos:position pos:line="38" pos:column="29"/></operator><operator pos:line="38" pos:column="29">(<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">plugin_instance<pos:position pos:line="38" pos:column="45"/></name> <operator pos:line="38" pos:column="46">!=<pos:position pos:line="38" pos:column="48"/></operator> <name pos:line="38" pos:column="49">NULL<pos:position pos:line="38" pos:column="53"/></name><operator pos:line="38" pos:column="53">)<pos:position pos:line="38" pos:column="54"/></operator>
				<operator pos:line="39" pos:column="33">&amp;&amp;<pos:position pos:line="39" pos:column="43"/></operator> <operator pos:line="39" pos:column="36">(<pos:position pos:line="39" pos:column="37"/></operator><call><name pos:line="39" pos:column="37">strlen<pos:position pos:line="39" pos:column="43"/></name> <argument_list pos:line="39" pos:column="44">(<argument><expr><name pos:line="39" pos:column="45">plugin_instance<pos:position pos:line="39" pos:column="60"/></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call> <operator pos:line="39" pos:column="62">&gt;=<pos:position pos:line="39" pos:column="67"/></operator> <sizeof pos:line="39" pos:column="65">sizeof <argument_list pos:line="39" pos:column="72">(<argument><expr><name><name pos:line="39" pos:column="73">vl<pos:position pos:line="39" pos:column="75"/></name><operator pos:line="39" pos:column="75">.<pos:position pos:line="39" pos:column="76"/></operator><name pos:line="39" pos:column="76">plugin_instance<pos:position pos:line="39" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="92"/></argument_list></sizeof><operator pos:line="39" pos:column="92">)<pos:position pos:line="39" pos:column="93"/></operator><operator pos:line="39" pos:column="93">)<pos:position pos:line="39" pos:column="94"/></operator>
			<operator pos:line="40" pos:column="25">||<pos:position pos:line="40" pos:column="27"/></operator> <operator pos:line="40" pos:column="28">(<pos:position pos:line="40" pos:column="29"/></operator><operator pos:line="40" pos:column="29">(<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="30">type_instance<pos:position pos:line="40" pos:column="43"/></name> <operator pos:line="40" pos:column="44">!=<pos:position pos:line="40" pos:column="46"/></operator> <name pos:line="40" pos:column="47">NULL<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">)<pos:position pos:line="40" pos:column="52"/></operator>
				<operator pos:line="41" pos:column="33">&amp;&amp;<pos:position pos:line="41" pos:column="43"/></operator> <operator pos:line="41" pos:column="36">(<pos:position pos:line="41" pos:column="37"/></operator><call><name pos:line="41" pos:column="37">strlen<pos:position pos:line="41" pos:column="43"/></name> <argument_list pos:line="41" pos:column="44">(<argument><expr><name pos:line="41" pos:column="45">type_instance<pos:position pos:line="41" pos:column="58"/></name></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call> <operator pos:line="41" pos:column="60">&gt;=<pos:position pos:line="41" pos:column="65"/></operator> <sizeof pos:line="41" pos:column="63">sizeof <argument_list pos:line="41" pos:column="70">(<argument><expr><name><name pos:line="41" pos:column="71">vl<pos:position pos:line="41" pos:column="73"/></name><operator pos:line="41" pos:column="73">.<pos:position pos:line="41" pos:column="74"/></operator><name pos:line="41" pos:column="74">type_instance<pos:position pos:line="41" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="88"/></argument_list></sizeof><operator pos:line="41" pos:column="88">)<pos:position pos:line="41" pos:column="89"/></operator><operator pos:line="41" pos:column="89">)<pos:position pos:line="41" pos:column="90"/></operator></expr>)<pos:position pos:line="41" pos:column="91"/></condition><then pos:line="41" pos:column="91">
	<block pos:line="42" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">fprintf<pos:position pos:line="43" pos:column="24"/></name> <argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">fh<pos:position pos:line="43" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="30">"-1 Identifier too long."<pos:position pos:line="43" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt>
		<return pos:line="44" pos:column="17">return <expr><operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><operator pos:line="44" pos:column="25">-<pos:position pos:line="44" pos:column="26"/></operator><literal type="number" pos:line="44" pos:column="26">1<pos:position pos:line="44" pos:column="27"/></literal><operator pos:line="44" pos:column="27">)<pos:position pos:line="44" pos:column="28"/></operator></expr>;<pos:position pos:line="44" pos:column="29"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">strcpy<pos:position pos:line="47" pos:column="15"/></name> <argument_list pos:line="47" pos:column="16">(<argument><expr><name><name pos:line="47" pos:column="17">vl<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">.<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">host<pos:position pos:line="47" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="26">hostname<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">strcpy<pos:position pos:line="48" pos:column="15"/></name> <argument_list pos:line="48" pos:column="16">(<argument><expr><name><name pos:line="48" pos:column="17">vl<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">plugin<pos:position pos:line="48" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="28">plugin<pos:position pos:line="48" pos:column="34"/></name></expr></argument>)<pos:position pos:line="48" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">plugin_instance<pos:position pos:line="49" pos:column="28"/></name> <operator pos:line="49" pos:column="29">!=<pos:position pos:line="49" pos:column="31"/></operator> <name pos:line="49" pos:column="32">NULL<pos:position pos:line="49" pos:column="36"/></name></expr>)<pos:position pos:line="49" pos:column="37"/></condition><then pos:line="49" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="17">strcpy<pos:position pos:line="50" pos:column="23"/></name> <argument_list pos:line="50" pos:column="24">(<argument><expr><name><name pos:line="50" pos:column="25">vl<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">.<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="28">plugin_instance<pos:position pos:line="50" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="45">plugin_instance<pos:position pos:line="50" pos:column="60"/></name></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="62"/></expr_stmt></block></then></if>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">type_instance<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">!=<pos:position pos:line="51" pos:column="29"/></operator> <name pos:line="51" pos:column="30">NULL<pos:position pos:line="51" pos:column="34"/></name></expr>)<pos:position pos:line="51" pos:column="35"/></condition><then pos:line="51" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="17">strcpy<pos:position pos:line="52" pos:column="23"/></name> <argument_list pos:line="52" pos:column="24">(<argument><expr><name><name pos:line="52" pos:column="25">vl<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">.<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">type_instance<pos:position pos:line="52" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">type_instance<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt></block></then></if>

	<block pos:line="54" pos:column="9">{ <comment type="block" pos:line="54" pos:column="11">/* parse the time */</comment>
		<decl_stmt><decl><type><name pos:line="55" pos:column="17">char<pos:position pos:line="55" pos:column="21"/></name> <modifier pos:line="55" pos:column="22">*<pos:position pos:line="55" pos:column="23"/></modifier></type><name pos:line="55" pos:column="23">t<pos:position pos:line="55" pos:column="24"/></name> <init pos:line="55" pos:column="25">= <expr><name><name pos:line="55" pos:column="27">fields<pos:position pos:line="55" pos:column="33"/></name><index pos:line="55" pos:column="33">[<expr><literal type="number" pos:line="55" pos:column="34">2<pos:position pos:line="55" pos:column="35"/></literal></expr>]<pos:position pos:line="55" pos:column="36"/></index></name></expr></init></decl>;<pos:position pos:line="55" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="56" pos:column="17">char<pos:position pos:line="56" pos:column="21"/></name> <modifier pos:line="56" pos:column="22">*<pos:position pos:line="56" pos:column="23"/></modifier></type><name pos:line="56" pos:column="23">v<pos:position pos:line="56" pos:column="24"/></name> <init pos:line="56" pos:column="25">= <expr><call><name pos:line="56" pos:column="27">strchr<pos:position pos:line="56" pos:column="33"/></name> <argument_list pos:line="56" pos:column="34">(<argument><expr><name pos:line="56" pos:column="35">t<pos:position pos:line="56" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="56" pos:column="38">':'<pos:position pos:line="56" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="43"/></decl_stmt>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name pos:line="57" pos:column="21">v<pos:position pos:line="57" pos:column="22"/></name> <operator pos:line="57" pos:column="23">==<pos:position pos:line="57" pos:column="25"/></operator> <name pos:line="57" pos:column="26">NULL<pos:position pos:line="57" pos:column="30"/></name></expr>)<pos:position pos:line="57" pos:column="31"/></condition><then pos:line="57" pos:column="31">
		<block pos:line="58" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">fprintf<pos:position pos:line="59" pos:column="32"/></name> <argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">fh<pos:position pos:line="59" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="38">"-1 No time found."<pos:position pos:line="59" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="59"/></expr_stmt>
			<return pos:line="60" pos:column="25">return <expr><operator pos:line="60" pos:column="32">(<pos:position pos:line="60" pos:column="33"/></operator><operator pos:line="60" pos:column="33">-<pos:position pos:line="60" pos:column="34"/></operator><literal type="number" pos:line="60" pos:column="34">1<pos:position pos:line="60" pos:column="35"/></literal><operator pos:line="60" pos:column="35">)<pos:position pos:line="60" pos:column="36"/></operator></expr>;<pos:position pos:line="60" pos:column="37"/></return>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if>
		<expr_stmt><expr><operator pos:line="62" pos:column="17">*<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="18">v<pos:position pos:line="62" pos:column="19"/></name> <operator pos:line="62" pos:column="20">=<pos:position pos:line="62" pos:column="21"/></operator> <literal type="char" pos:line="62" pos:column="22">'\0'<pos:position pos:line="62" pos:column="26"/></literal></expr>;<pos:position pos:line="62" pos:column="27"/></expr_stmt> <expr_stmt><expr><name pos:line="62" pos:column="28">v<pos:position pos:line="62" pos:column="29"/></name><operator pos:line="62" pos:column="29">++<pos:position pos:line="62" pos:column="31"/></operator></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="64" pos:column="17">vl<pos:position pos:line="64" pos:column="19"/></name><operator pos:line="64" pos:column="19">.<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="20">time<pos:position pos:line="64" pos:column="24"/></name></name> <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <operator pos:line="64" pos:column="27">(<pos:position pos:line="64" pos:column="28"/></operator><name pos:line="64" pos:column="28">time_t<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">)<pos:position pos:line="64" pos:column="35"/></operator> <call><name pos:line="64" pos:column="36">atoi<pos:position pos:line="64" pos:column="40"/></name> <argument_list pos:line="64" pos:column="41">(<argument><expr><name pos:line="64" pos:column="42">t<pos:position pos:line="64" pos:column="43"/></name></expr></argument>)<pos:position pos:line="64" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="45"/></expr_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name><name pos:line="65" pos:column="21">vl<pos:position pos:line="65" pos:column="23"/></name><operator pos:line="65" pos:column="23">.<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="24">time<pos:position pos:line="65" pos:column="28"/></name></name> <operator pos:line="65" pos:column="29">==<pos:position pos:line="65" pos:column="31"/></operator> <literal type="number" pos:line="65" pos:column="32">0<pos:position pos:line="65" pos:column="33"/></literal></expr>)<pos:position pos:line="65" pos:column="34"/></condition><then pos:line="65" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="66" pos:column="25">vl<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">.<pos:position pos:line="66" pos:column="28"/></operator><name pos:line="66" pos:column="28">time<pos:position pos:line="66" pos:column="32"/></name></name> <operator pos:line="66" pos:column="33">=<pos:position pos:line="66" pos:column="34"/></operator> <call><name pos:line="66" pos:column="35">time<pos:position pos:line="66" pos:column="39"/></name> <argument_list pos:line="66" pos:column="40">(<argument><expr><name pos:line="66" pos:column="41">NULL<pos:position pos:line="66" pos:column="45"/></name></expr></argument>)<pos:position pos:line="66" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="47"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name><name pos:line="68" pos:column="17">fields<pos:position pos:line="68" pos:column="23"/></name><index pos:line="68" pos:column="23">[<expr><literal type="number" pos:line="68" pos:column="24">2<pos:position pos:line="68" pos:column="25"/></literal></expr>]<pos:position pos:line="68" pos:column="26"/></index></name> <operator pos:line="68" pos:column="27">=<pos:position pos:line="68" pos:column="28"/></operator> <name pos:line="68" pos:column="29">v<pos:position pos:line="68" pos:column="30"/></name></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="69" pos:column="10"/></block>

	<expr_stmt><expr><name pos:line="71" pos:column="9">ds<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">=<pos:position pos:line="71" pos:column="13"/></operator> <call><name pos:line="71" pos:column="14">plugin_get_ds<pos:position pos:line="71" pos:column="27"/></name> <argument_list pos:line="71" pos:column="28">(<argument><expr><name pos:line="71" pos:column="29">type<pos:position pos:line="71" pos:column="33"/></name></expr></argument>)<pos:position pos:line="71" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="35"/></expr_stmt>
	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">ds<pos:position pos:line="72" pos:column="15"/></name> <operator pos:line="72" pos:column="16">==<pos:position pos:line="72" pos:column="18"/></operator> <name pos:line="72" pos:column="19">NULL<pos:position pos:line="72" pos:column="23"/></name></expr>)<pos:position pos:line="72" pos:column="24"/></condition><then pos:line="72" pos:column="24">
		<block type="pseudo"><return pos:line="73" pos:column="17">return <expr><operator pos:line="73" pos:column="24">(<pos:position pos:line="73" pos:column="25"/></operator><operator pos:line="73" pos:column="25">-<pos:position pos:line="73" pos:column="26"/></operator><literal type="number" pos:line="73" pos:column="26">1<pos:position pos:line="73" pos:column="27"/></literal><operator pos:line="73" pos:column="27">)<pos:position pos:line="73" pos:column="28"/></operator></expr>;<pos:position pos:line="73" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="75" pos:column="9">value_ptr<pos:position pos:line="75" pos:column="18"/></name> <operator pos:line="75" pos:column="19">=<pos:position pos:line="75" pos:column="20"/></operator> <operator pos:line="75" pos:column="21">(<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="22">char<pos:position pos:line="75" pos:column="26"/></name> <operator pos:line="75" pos:column="27">*<pos:position pos:line="75" pos:column="28"/></operator><operator pos:line="75" pos:column="28">*<pos:position pos:line="75" pos:column="29"/></operator><operator pos:line="75" pos:column="29">)<pos:position pos:line="75" pos:column="30"/></operator> <call><name pos:line="75" pos:column="31">calloc<pos:position pos:line="75" pos:column="37"/></name> <argument_list pos:line="75" pos:column="38">(<argument><expr><name><name pos:line="75" pos:column="39">ds<pos:position pos:line="75" pos:column="41"/></name><operator pos:line="75" pos:column="41">-&gt;<pos:position pos:line="75" pos:column="46"/></operator><name pos:line="75" pos:column="43">ds_num<pos:position pos:line="75" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="51">sizeof <argument_list pos:line="75" pos:column="58">(<argument><expr><name pos:line="75" pos:column="59">char<pos:position pos:line="75" pos:column="63"/></name> <operator pos:line="75" pos:column="64">*<pos:position pos:line="75" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="75" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="75" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="68"/></expr_stmt>
	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">value_ptr<pos:position pos:line="76" pos:column="22"/></name> <operator pos:line="76" pos:column="23">==<pos:position pos:line="76" pos:column="25"/></operator> <name pos:line="76" pos:column="26">NULL<pos:position pos:line="76" pos:column="30"/></name></expr>)<pos:position pos:line="76" pos:column="31"/></condition><then pos:line="76" pos:column="31">
	<block pos:line="77" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="78" pos:column="17">fprintf<pos:position pos:line="78" pos:column="24"/></name> <argument_list pos:line="78" pos:column="25">(<argument><expr><name pos:line="78" pos:column="26">fh<pos:position pos:line="78" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="30">"-1 calloc failed."<pos:position pos:line="78" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="51"/></expr_stmt>
		<return pos:line="79" pos:column="17">return <expr><operator pos:line="79" pos:column="24">(<pos:position pos:line="79" pos:column="25"/></operator><operator pos:line="79" pos:column="25">-<pos:position pos:line="79" pos:column="26"/></operator><literal type="number" pos:line="79" pos:column="26">1<pos:position pos:line="79" pos:column="27"/></literal><operator pos:line="79" pos:column="27">)<pos:position pos:line="79" pos:column="28"/></operator></expr>;<pos:position pos:line="79" pos:column="29"/></return>
	}<pos:position pos:line="80" pos:column="10"/></block></then></if>

	<block pos:line="82" pos:column="9">{ <comment type="block" pos:line="82" pos:column="11">/* parse the value-list. It's colon-separated. */</comment>
		<decl_stmt><decl><type><name pos:line="83" pos:column="17">char<pos:position pos:line="83" pos:column="21"/></name> <modifier pos:line="83" pos:column="22">*<pos:position pos:line="83" pos:column="23"/></modifier></type><name pos:line="83" pos:column="23">dummy<pos:position pos:line="83" pos:column="28"/></name></decl>;<pos:position pos:line="83" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="84" pos:column="17">char<pos:position pos:line="84" pos:column="21"/></name> <modifier pos:line="84" pos:column="22">*<pos:position pos:line="84" pos:column="23"/></modifier></type><name pos:line="84" pos:column="23">ptr<pos:position pos:line="84" pos:column="26"/></name></decl>;<pos:position pos:line="84" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="85" pos:column="17">char<pos:position pos:line="85" pos:column="21"/></name> <modifier pos:line="85" pos:column="22">*<pos:position pos:line="85" pos:column="23"/></modifier></type><name pos:line="85" pos:column="23">saveptr<pos:position pos:line="85" pos:column="30"/></name></decl>;<pos:position pos:line="85" pos:column="31"/></decl_stmt>

		<expr_stmt><expr><name pos:line="87" pos:column="17">i<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">=<pos:position pos:line="87" pos:column="20"/></operator> <literal type="number" pos:line="87" pos:column="21">0<pos:position pos:line="87" pos:column="22"/></literal></expr>;<pos:position pos:line="87" pos:column="23"/></expr_stmt>
		<expr_stmt><expr><name pos:line="88" pos:column="17">dummy<pos:position pos:line="88" pos:column="22"/></name> <operator pos:line="88" pos:column="23">=<pos:position pos:line="88" pos:column="24"/></operator> <name><name pos:line="88" pos:column="25">fields<pos:position pos:line="88" pos:column="31"/></name><index pos:line="88" pos:column="31">[<expr><literal type="number" pos:line="88" pos:column="32">2<pos:position pos:line="88" pos:column="33"/></literal></expr>]<pos:position pos:line="88" pos:column="34"/></index></name></expr>;<pos:position pos:line="88" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="89" pos:column="17">saveptr<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">=<pos:position pos:line="89" pos:column="26"/></operator> <name pos:line="89" pos:column="27">NULL<pos:position pos:line="89" pos:column="31"/></name></expr>;<pos:position pos:line="89" pos:column="32"/></expr_stmt>
		<while pos:line="90" pos:column="17">while <condition pos:line="90" pos:column="23">(<expr><operator pos:line="90" pos:column="24">(<pos:position pos:line="90" pos:column="25"/></operator><name pos:line="90" pos:column="25">ptr<pos:position pos:line="90" pos:column="28"/></name> <operator pos:line="90" pos:column="29">=<pos:position pos:line="90" pos:column="30"/></operator> <call><name pos:line="90" pos:column="31">strtok_r<pos:position pos:line="90" pos:column="39"/></name> <argument_list pos:line="90" pos:column="40">(<argument><expr><name pos:line="90" pos:column="41">dummy<pos:position pos:line="90" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="48">":"<pos:position pos:line="90" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="90" pos:column="53">&amp;<pos:position pos:line="90" pos:column="58"/></operator><name pos:line="90" pos:column="54">saveptr<pos:position pos:line="90" pos:column="61"/></name></expr></argument>)<pos:position pos:line="90" pos:column="62"/></argument_list></call><operator pos:line="90" pos:column="62">)<pos:position pos:line="90" pos:column="63"/></operator> <operator pos:line="90" pos:column="64">!=<pos:position pos:line="90" pos:column="66"/></operator> <name pos:line="90" pos:column="67">NULL<pos:position pos:line="90" pos:column="71"/></name></expr>)<pos:position pos:line="90" pos:column="72"/></condition>
		<block pos:line="91" pos:column="17">{
			<expr_stmt><expr><name pos:line="92" pos:column="25">dummy<pos:position pos:line="92" pos:column="30"/></name> <operator pos:line="92" pos:column="31">=<pos:position pos:line="92" pos:column="32"/></operator> <name pos:line="92" pos:column="33">NULL<pos:position pos:line="92" pos:column="37"/></name></expr>;<pos:position pos:line="92" pos:column="38"/></expr_stmt>
			<if pos:line="93" pos:column="25">if <condition pos:line="93" pos:column="28">(<expr><name pos:line="93" pos:column="29">i<pos:position pos:line="93" pos:column="30"/></name> <operator pos:line="93" pos:column="31">&gt;=<pos:position pos:line="93" pos:column="36"/></operator> <name><name pos:line="93" pos:column="34">ds<pos:position pos:line="93" pos:column="36"/></name><operator pos:line="93" pos:column="36">-&gt;<pos:position pos:line="93" pos:column="41"/></operator><name pos:line="93" pos:column="38">ds_num<pos:position pos:line="93" pos:column="44"/></name></name></expr>)<pos:position pos:line="93" pos:column="45"/></condition><then pos:line="93" pos:column="45">
			<block pos:line="94" pos:column="25">{
				<expr_stmt><expr><name pos:line="95" pos:column="33">i<pos:position pos:line="95" pos:column="34"/></name> <operator pos:line="95" pos:column="35">=<pos:position pos:line="95" pos:column="36"/></operator> <name><name pos:line="95" pos:column="37">ds<pos:position pos:line="95" pos:column="39"/></name><operator pos:line="95" pos:column="39">-&gt;<pos:position pos:line="95" pos:column="44"/></operator><name pos:line="95" pos:column="41">ds_num<pos:position pos:line="95" pos:column="47"/></name></name> <operator pos:line="95" pos:column="48">+<pos:position pos:line="95" pos:column="49"/></operator> <literal type="number" pos:line="95" pos:column="50">1<pos:position pos:line="95" pos:column="51"/></literal></expr>;<pos:position pos:line="95" pos:column="52"/></expr_stmt>
				<break pos:line="96" pos:column="33">break;<pos:position pos:line="96" pos:column="39"/></break>
			}<pos:position pos:line="97" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name><name pos:line="98" pos:column="25">value_ptr<pos:position pos:line="98" pos:column="34"/></name><index pos:line="98" pos:column="34">[<expr><name pos:line="98" pos:column="35">i<pos:position pos:line="98" pos:column="36"/></name></expr>]<pos:position pos:line="98" pos:column="37"/></index></name> <operator pos:line="98" pos:column="38">=<pos:position pos:line="98" pos:column="39"/></operator> <name pos:line="98" pos:column="40">ptr<pos:position pos:line="98" pos:column="43"/></name></expr>;<pos:position pos:line="98" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="99" pos:column="25">i<pos:position pos:line="99" pos:column="26"/></name><operator pos:line="99" pos:column="26">++<pos:position pos:line="99" pos:column="28"/></operator></expr>;<pos:position pos:line="99" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="100" pos:column="18"/></block></while>

		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><name pos:line="102" pos:column="21">i<pos:position pos:line="102" pos:column="22"/></name> <operator pos:line="102" pos:column="23">!=<pos:position pos:line="102" pos:column="25"/></operator> <name><name pos:line="102" pos:column="26">ds<pos:position pos:line="102" pos:column="28"/></name><operator pos:line="102" pos:column="28">-&gt;<pos:position pos:line="102" pos:column="33"/></operator><name pos:line="102" pos:column="30">ds_num<pos:position pos:line="102" pos:column="36"/></name></name></expr>)<pos:position pos:line="102" pos:column="37"/></condition><then pos:line="102" pos:column="37">
		<block pos:line="103" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="104" pos:column="25">sfree<pos:position pos:line="104" pos:column="30"/></name> <argument_list pos:line="104" pos:column="31">(<argument><expr><name pos:line="104" pos:column="32">value_ptr<pos:position pos:line="104" pos:column="41"/></name></expr></argument>)<pos:position pos:line="104" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="105" pos:column="25">fprintf<pos:position pos:line="105" pos:column="32"/></name> <argument_list pos:line="105" pos:column="33">(<argument><expr><name pos:line="105" pos:column="34">fh<pos:position pos:line="105" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="38">"-1 Number of values incorrect: Got %i, "<pos:position pos:line="105" pos:column="79"/></literal>
					<literal type="string" pos:line="106" pos:column="41">"expected %i."<pos:position pos:line="106" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="57">i<pos:position pos:line="106" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="60">ds<pos:position pos:line="106" pos:column="62"/></name><operator pos:line="106" pos:column="62">-&gt;<pos:position pos:line="106" pos:column="67"/></operator><name pos:line="106" pos:column="64">ds_num<pos:position pos:line="106" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="72"/></expr_stmt>
			<return pos:line="107" pos:column="25">return <expr><operator pos:line="107" pos:column="32">(<pos:position pos:line="107" pos:column="33"/></operator><operator pos:line="107" pos:column="33">-<pos:position pos:line="107" pos:column="34"/></operator><literal type="number" pos:line="107" pos:column="34">1<pos:position pos:line="107" pos:column="35"/></literal><operator pos:line="107" pos:column="35">)<pos:position pos:line="107" pos:column="36"/></operator></expr>;<pos:position pos:line="107" pos:column="37"/></return>
		}<pos:position pos:line="108" pos:column="18"/></block></then></if>
	}<pos:position pos:line="109" pos:column="10"/></block> <comment type="block" pos:line="109" pos:column="11">/* done parsing the value-list */</comment>

	<expr_stmt><expr><name><name pos:line="111" pos:column="9">vl<pos:position pos:line="111" pos:column="11"/></name><operator pos:line="111" pos:column="11">.<pos:position pos:line="111" pos:column="12"/></operator><name pos:line="111" pos:column="12">values_len<pos:position pos:line="111" pos:column="22"/></name></name> <operator pos:line="111" pos:column="23">=<pos:position pos:line="111" pos:column="24"/></operator> <name><name pos:line="111" pos:column="25">ds<pos:position pos:line="111" pos:column="27"/></name><operator pos:line="111" pos:column="27">-&gt;<pos:position pos:line="111" pos:column="32"/></operator><name pos:line="111" pos:column="29">ds_num<pos:position pos:line="111" pos:column="35"/></name></name></expr>;<pos:position pos:line="111" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="112" pos:column="9">vl<pos:position pos:line="112" pos:column="11"/></name><operator pos:line="112" pos:column="11">.<pos:position pos:line="112" pos:column="12"/></operator><name pos:line="112" pos:column="12">values<pos:position pos:line="112" pos:column="18"/></name></name> <operator pos:line="112" pos:column="19">=<pos:position pos:line="112" pos:column="20"/></operator> <operator pos:line="112" pos:column="21">(<pos:position pos:line="112" pos:column="22"/></operator><name pos:line="112" pos:column="22">value_t<pos:position pos:line="112" pos:column="29"/></name> <operator pos:line="112" pos:column="30">*<pos:position pos:line="112" pos:column="31"/></operator><operator pos:line="112" pos:column="31">)<pos:position pos:line="112" pos:column="32"/></operator> <call><name pos:line="112" pos:column="33">malloc<pos:position pos:line="112" pos:column="39"/></name> <argument_list pos:line="112" pos:column="40">(<argument><expr><name><name pos:line="112" pos:column="41">vl<pos:position pos:line="112" pos:column="43"/></name><operator pos:line="112" pos:column="43">.<pos:position pos:line="112" pos:column="44"/></operator><name pos:line="112" pos:column="44">values_len<pos:position pos:line="112" pos:column="54"/></name></name> <operator pos:line="112" pos:column="55">*<pos:position pos:line="112" pos:column="56"/></operator> <sizeof pos:line="112" pos:column="57">sizeof <argument_list pos:line="112" pos:column="64">(<argument><expr><name pos:line="112" pos:column="65">value_t<pos:position pos:line="112" pos:column="72"/></name></expr></argument>)<pos:position pos:line="112" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="112" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="75"/></expr_stmt>
	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name><name pos:line="113" pos:column="13">vl<pos:position pos:line="113" pos:column="15"/></name><operator pos:line="113" pos:column="15">.<pos:position pos:line="113" pos:column="16"/></operator><name pos:line="113" pos:column="16">values<pos:position pos:line="113" pos:column="22"/></name></name> <operator pos:line="113" pos:column="23">==<pos:position pos:line="113" pos:column="25"/></operator> <name pos:line="113" pos:column="26">NULL<pos:position pos:line="113" pos:column="30"/></name></expr>)<pos:position pos:line="113" pos:column="31"/></condition><then pos:line="113" pos:column="31">
	<block pos:line="114" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="115" pos:column="17">sfree<pos:position pos:line="115" pos:column="22"/></name> <argument_list pos:line="115" pos:column="23">(<argument><expr><name pos:line="115" pos:column="24">value_ptr<pos:position pos:line="115" pos:column="33"/></name></expr></argument>)<pos:position pos:line="115" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="116" pos:column="17">fprintf<pos:position pos:line="116" pos:column="24"/></name> <argument_list pos:line="116" pos:column="25">(<argument><expr><name pos:line="116" pos:column="26">fh<pos:position pos:line="116" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="30">"-1 malloc failed."<pos:position pos:line="116" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="51"/></expr_stmt>
		<return pos:line="117" pos:column="17">return <expr><operator pos:line="117" pos:column="24">(<pos:position pos:line="117" pos:column="25"/></operator><operator pos:line="117" pos:column="25">-<pos:position pos:line="117" pos:column="26"/></operator><literal type="number" pos:line="117" pos:column="26">1<pos:position pos:line="117" pos:column="27"/></literal><operator pos:line="117" pos:column="27">)<pos:position pos:line="117" pos:column="28"/></operator></expr>;<pos:position pos:line="117" pos:column="29"/></return>
	}<pos:position pos:line="118" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="119" pos:column="9">DEBUG<pos:position pos:line="119" pos:column="14"/></name> <argument_list pos:line="119" pos:column="15">(<argument><expr><literal type="string" pos:line="119" pos:column="16">"value_ptr = 0x%p; vl.values = 0x%p;"<pos:position pos:line="119" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="119" pos:column="55">(<pos:position pos:line="119" pos:column="56"/></operator><name pos:line="119" pos:column="56">void<pos:position pos:line="119" pos:column="60"/></name> <operator pos:line="119" pos:column="61">*<pos:position pos:line="119" pos:column="62"/></operator><operator pos:line="119" pos:column="62">)<pos:position pos:line="119" pos:column="63"/></operator> <name pos:line="119" pos:column="64">value_ptr<pos:position pos:line="119" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="75">(<pos:position pos:line="119" pos:column="76"/></operator><name pos:line="119" pos:column="76">void<pos:position pos:line="119" pos:column="80"/></name> <operator pos:line="119" pos:column="81">*<pos:position pos:line="119" pos:column="82"/></operator><operator pos:line="119" pos:column="82">)<pos:position pos:line="119" pos:column="83"/></operator> <name><name pos:line="119" pos:column="84">vl<pos:position pos:line="119" pos:column="86"/></name><operator pos:line="119" pos:column="86">.<pos:position pos:line="119" pos:column="87"/></operator><name pos:line="119" pos:column="87">values<pos:position pos:line="119" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="95"/></expr_stmt>

	<for pos:line="121" pos:column="9">for <control pos:line="121" pos:column="13">(<init><expr><name pos:line="121" pos:column="14">i<pos:position pos:line="121" pos:column="15"/></name> <operator pos:line="121" pos:column="16">=<pos:position pos:line="121" pos:column="17"/></operator> <literal type="number" pos:line="121" pos:column="18">0<pos:position pos:line="121" pos:column="19"/></literal></expr>;<pos:position pos:line="121" pos:column="20"/></init> <condition><expr><name pos:line="121" pos:column="21">i<pos:position pos:line="121" pos:column="22"/></name> <operator pos:line="121" pos:column="23">&lt;<pos:position pos:line="121" pos:column="27"/></operator> <name><name pos:line="121" pos:column="25">ds<pos:position pos:line="121" pos:column="27"/></name><operator pos:line="121" pos:column="27">-&gt;<pos:position pos:line="121" pos:column="32"/></operator><name pos:line="121" pos:column="29">ds_num<pos:position pos:line="121" pos:column="35"/></name></name></expr>;<pos:position pos:line="121" pos:column="36"/></condition> <incr><expr><name pos:line="121" pos:column="37">i<pos:position pos:line="121" pos:column="38"/></name><operator pos:line="121" pos:column="38">++<pos:position pos:line="121" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="121" pos:column="41"/></control>
	<block pos:line="122" pos:column="9">{
		<if pos:line="123" pos:column="17">if <condition pos:line="123" pos:column="20">(<expr><call><name pos:line="123" pos:column="21">strcmp<pos:position pos:line="123" pos:column="27"/></name> <argument_list pos:line="123" pos:column="28">(<argument><expr><name><name pos:line="123" pos:column="29">value_ptr<pos:position pos:line="123" pos:column="38"/></name><index pos:line="123" pos:column="38">[<expr><name pos:line="123" pos:column="39">i<pos:position pos:line="123" pos:column="40"/></name></expr>]<pos:position pos:line="123" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="43">"U"<pos:position pos:line="123" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="47"/></argument_list></call> <operator pos:line="123" pos:column="48">==<pos:position pos:line="123" pos:column="50"/></operator> <literal type="number" pos:line="123" pos:column="51">0<pos:position pos:line="123" pos:column="52"/></literal></expr>)<pos:position pos:line="123" pos:column="53"/></condition><then pos:line="123" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="124" pos:column="25">vl<pos:position pos:line="124" pos:column="27"/></name><operator pos:line="124" pos:column="27">.<pos:position pos:line="124" pos:column="28"/></operator><name pos:line="124" pos:column="28">values<pos:position pos:line="124" pos:column="34"/></name><index pos:line="124" pos:column="34">[<expr><name pos:line="124" pos:column="35">i<pos:position pos:line="124" pos:column="36"/></name></expr>]<pos:position pos:line="124" pos:column="37"/></index></name><operator pos:line="124" pos:column="37">.<pos:position pos:line="124" pos:column="38"/></operator><name pos:line="124" pos:column="38">gauge<pos:position pos:line="124" pos:column="43"/></name> <operator pos:line="124" pos:column="44">=<pos:position pos:line="124" pos:column="45"/></operator> <name pos:line="124" pos:column="46">NAN<pos:position pos:line="124" pos:column="49"/></name></expr>;<pos:position pos:line="124" pos:column="50"/></expr_stmt></block></then>
		<elseif pos:line="125" pos:column="17">else <if pos:line="125" pos:column="22">if <condition pos:line="125" pos:column="25">(<expr><name><name pos:line="125" pos:column="26">ds<pos:position pos:line="125" pos:column="28"/></name><operator pos:line="125" pos:column="28">-&gt;<pos:position pos:line="125" pos:column="33"/></operator><name pos:line="125" pos:column="30">ds<pos:position pos:line="125" pos:column="32"/></name><index pos:line="125" pos:column="32">[<expr><name pos:line="125" pos:column="33">i<pos:position pos:line="125" pos:column="34"/></name></expr>]<pos:position pos:line="125" pos:column="35"/></index></name><operator pos:line="125" pos:column="35">.<pos:position pos:line="125" pos:column="36"/></operator><name pos:line="125" pos:column="36">type<pos:position pos:line="125" pos:column="40"/></name> <operator pos:line="125" pos:column="41">==<pos:position pos:line="125" pos:column="43"/></operator> <name pos:line="125" pos:column="44">DS_TYPE_COUNTER<pos:position pos:line="125" pos:column="59"/></name></expr>)<pos:position pos:line="125" pos:column="60"/></condition><then pos:line="125" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="126" pos:column="25">vl<pos:position pos:line="126" pos:column="27"/></name><operator pos:line="126" pos:column="27">.<pos:position pos:line="126" pos:column="28"/></operator><name pos:line="126" pos:column="28">values<pos:position pos:line="126" pos:column="34"/></name><index pos:line="126" pos:column="34">[<expr><name pos:line="126" pos:column="35">i<pos:position pos:line="126" pos:column="36"/></name></expr>]<pos:position pos:line="126" pos:column="37"/></index></name><operator pos:line="126" pos:column="37">.<pos:position pos:line="126" pos:column="38"/></operator><name pos:line="126" pos:column="38">counter<pos:position pos:line="126" pos:column="45"/></name> <operator pos:line="126" pos:column="46">=<pos:position pos:line="126" pos:column="47"/></operator> <call><name pos:line="126" pos:column="48">atoll<pos:position pos:line="126" pos:column="53"/></name> <argument_list pos:line="126" pos:column="54">(<argument><expr><name><name pos:line="126" pos:column="55">value_ptr<pos:position pos:line="126" pos:column="64"/></name><index pos:line="126" pos:column="64">[<expr><name pos:line="126" pos:column="65">i<pos:position pos:line="126" pos:column="66"/></name></expr>]<pos:position pos:line="126" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="126" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="69"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="127" pos:column="17">else <if pos:line="127" pos:column="22">if <condition pos:line="127" pos:column="25">(<expr><name><name pos:line="127" pos:column="26">ds<pos:position pos:line="127" pos:column="28"/></name><operator pos:line="127" pos:column="28">-&gt;<pos:position pos:line="127" pos:column="33"/></operator><name pos:line="127" pos:column="30">ds<pos:position pos:line="127" pos:column="32"/></name><index pos:line="127" pos:column="32">[<expr><name pos:line="127" pos:column="33">i<pos:position pos:line="127" pos:column="34"/></name></expr>]<pos:position pos:line="127" pos:column="35"/></index></name><operator pos:line="127" pos:column="35">.<pos:position pos:line="127" pos:column="36"/></operator><name pos:line="127" pos:column="36">type<pos:position pos:line="127" pos:column="40"/></name> <operator pos:line="127" pos:column="41">==<pos:position pos:line="127" pos:column="43"/></operator> <name pos:line="127" pos:column="44">DS_TYPE_GAUGE<pos:position pos:line="127" pos:column="57"/></name></expr>)<pos:position pos:line="127" pos:column="58"/></condition><then pos:line="127" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="128" pos:column="25">vl<pos:position pos:line="128" pos:column="27"/></name><operator pos:line="128" pos:column="27">.<pos:position pos:line="128" pos:column="28"/></operator><name pos:line="128" pos:column="28">values<pos:position pos:line="128" pos:column="34"/></name><index pos:line="128" pos:column="34">[<expr><name pos:line="128" pos:column="35">i<pos:position pos:line="128" pos:column="36"/></name></expr>]<pos:position pos:line="128" pos:column="37"/></index></name><operator pos:line="128" pos:column="37">.<pos:position pos:line="128" pos:column="38"/></operator><name pos:line="128" pos:column="38">gauge<pos:position pos:line="128" pos:column="43"/></name> <operator pos:line="128" pos:column="44">=<pos:position pos:line="128" pos:column="45"/></operator> <call><name pos:line="128" pos:column="46">atof<pos:position pos:line="128" pos:column="50"/></name> <argument_list pos:line="128" pos:column="51">(<argument><expr><name><name pos:line="128" pos:column="52">value_ptr<pos:position pos:line="128" pos:column="61"/></name><index pos:line="128" pos:column="61">[<expr><name pos:line="128" pos:column="62">i<pos:position pos:line="128" pos:column="63"/></name></expr>]<pos:position pos:line="128" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="128" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="66"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="129" pos:column="10"/></block></for> <comment type="block" pos:line="129" pos:column="11">/* for (i = 2 .. fields_num) */</comment>

	<expr_stmt><expr><call><name pos:line="131" pos:column="9">plugin_dispatch_values<pos:position pos:line="131" pos:column="31"/></name> <argument_list pos:line="131" pos:column="32">(<argument><expr><name pos:line="131" pos:column="33">type<pos:position pos:line="131" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="39">&amp;<pos:position pos:line="131" pos:column="44"/></operator><name pos:line="131" pos:column="40">vl<pos:position pos:line="131" pos:column="42"/></name></expr></argument>)<pos:position pos:line="131" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="133" pos:column="9">DEBUG<pos:position pos:line="133" pos:column="14"/></name> <argument_list pos:line="133" pos:column="15">(<argument><expr><literal type="string" pos:line="133" pos:column="16">"value_ptr = 0x%p; vl.values = 0x%p;"<pos:position pos:line="133" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="133" pos:column="55">(<pos:position pos:line="133" pos:column="56"/></operator><name pos:line="133" pos:column="56">void<pos:position pos:line="133" pos:column="60"/></name> <operator pos:line="133" pos:column="61">*<pos:position pos:line="133" pos:column="62"/></operator><operator pos:line="133" pos:column="62">)<pos:position pos:line="133" pos:column="63"/></operator> <name pos:line="133" pos:column="64">value_ptr<pos:position pos:line="133" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="133" pos:column="75">(<pos:position pos:line="133" pos:column="76"/></operator><name pos:line="133" pos:column="76">void<pos:position pos:line="133" pos:column="80"/></name> <operator pos:line="133" pos:column="81">*<pos:position pos:line="133" pos:column="82"/></operator><operator pos:line="133" pos:column="82">)<pos:position pos:line="133" pos:column="83"/></operator> <name><name pos:line="133" pos:column="84">vl<pos:position pos:line="133" pos:column="86"/></name><operator pos:line="133" pos:column="86">.<pos:position pos:line="133" pos:column="87"/></operator><name pos:line="133" pos:column="87">values<pos:position pos:line="133" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="95"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="135" pos:column="9">sfree<pos:position pos:line="135" pos:column="14"/></name> <argument_list pos:line="135" pos:column="15">(<argument><expr><name pos:line="135" pos:column="16">value_ptr<pos:position pos:line="135" pos:column="25"/></name></expr></argument>)<pos:position pos:line="135" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="136" pos:column="9">sfree<pos:position pos:line="136" pos:column="14"/></name> <argument_list pos:line="136" pos:column="15">(<argument><expr><name><name pos:line="136" pos:column="16">vl<pos:position pos:line="136" pos:column="18"/></name><operator pos:line="136" pos:column="18">.<pos:position pos:line="136" pos:column="19"/></operator><name pos:line="136" pos:column="19">values<pos:position pos:line="136" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="27"/></expr_stmt> 

	<expr_stmt><expr><call><name pos:line="138" pos:column="9">fprintf<pos:position pos:line="138" pos:column="16"/></name> <argument_list pos:line="138" pos:column="17">(<argument><expr><name pos:line="138" pos:column="18">fh<pos:position pos:line="138" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="22">"0 Success\n"<pos:position pos:line="138" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="139" pos:column="9">fflush<pos:position pos:line="139" pos:column="15"/></name> <argument_list pos:line="139" pos:column="16">(<argument><expr><name pos:line="139" pos:column="17">fh<pos:position pos:line="139" pos:column="19"/></name></expr></argument>)<pos:position pos:line="139" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="21"/></expr_stmt>

	<return pos:line="141" pos:column="9">return <expr><operator pos:line="141" pos:column="16">(<pos:position pos:line="141" pos:column="17"/></operator><literal type="number" pos:line="141" pos:column="17">0<pos:position pos:line="141" pos:column="18"/></literal><operator pos:line="141" pos:column="18">)<pos:position pos:line="141" pos:column="19"/></operator></expr>;<pos:position pos:line="141" pos:column="20"/></return>
}<pos:position pos:line="142" pos:column="2"/></block></function></unit>

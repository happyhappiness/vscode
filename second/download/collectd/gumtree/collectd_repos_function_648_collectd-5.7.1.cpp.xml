<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_648_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">agg_instance_create_name<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">agg_instance_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">inst<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="59">/* {{{ */</comment>
                                    <parameter><decl><type><name pos:line="2" pos:column="37">value_list_t<pos:position pos:line="2" pos:column="49"/></name> <specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">vl<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">aggregation_t<pos:position pos:line="3" pos:column="50"/></name> <specifier pos:line="3" pos:column="51">const<pos:position pos:line="3" pos:column="56"/></specifier> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">agg<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list> <block pos:line="3" pos:column="63">{
<cpp:define pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">define<pos:position pos:line="4" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="4" pos:column="9">COPY_FIELD<pos:position pos:line="4" pos:column="19"/></name><parameter_list pos:line="4" pos:column="19">(<parameter><type><name pos:line="4" pos:column="20">buffer<pos:position pos:line="4" pos:column="26"/></name></type></parameter>, <parameter><type><name pos:line="4" pos:column="28">buffer_size<pos:position pos:line="4" pos:column="39"/></name></type></parameter>, <parameter><type><name pos:line="4" pos:column="41">field<pos:position pos:line="4" pos:column="46"/></name></type></parameter>, <parameter><type><name pos:line="4" pos:column="48">group_mask<pos:position pos:line="4" pos:column="58"/></name></type></parameter>, <parameter><type><name pos:line="4" pos:column="60">all_value<pos:position pos:line="4" pos:column="69"/></name></type></parameter>)<pos:position pos:line="4" pos:column="70"/></parameter_list></cpp:macro>          \
  <cpp:value pos:line="5" pos:column="3">do {                                                                         \
    if (agg-&gt;set_##field != NULL)                                              \
      sstrncpy(buffer, agg-&gt;set_##field, buffer_size);                         \
    else if ((agg-&gt;regex_fields &amp; group_mask) &amp;&amp; (agg-&gt;group_by &amp; group_mask)) \
      sstrncpy(buffer, vl-&gt;field, buffer_size);                                \
    else if ((agg-&gt;regex_fields &amp; group_mask) &amp;&amp;                               \
             (AGG_MATCHES_ALL(agg-&gt;ident.field)))                              \
      sstrncpy(buffer, all_value, buffer_size);                                \
    else                                                                       \
      sstrncpy(buffer, agg-&gt;ident.field, buffer_size);                         \
  } while (0)<pos:position pos:line="15" pos:column="14"/></cpp:value></cpp:define>

  <comment type="block" pos:line="17" pos:column="3">/* Host */</comment>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">COPY_FIELD<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name><name pos:line="18" pos:column="14">inst<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">ident<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">host<pos:position pos:line="18" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="32">sizeof<argument_list pos:line="18" pos:column="38">(<argument><expr><name><name pos:line="18" pos:column="39">inst<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">ident<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">.<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">host<pos:position pos:line="18" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="18" pos:column="58">host<pos:position pos:line="18" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="64">LU_GROUP_BY_HOST<pos:position pos:line="18" pos:column="80"/></name></expr></argument>,
             <argument><expr><literal type="string" pos:line="19" pos:column="14">"global"<pos:position pos:line="19" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* Plugin */</comment>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name><name pos:line="22" pos:column="7">agg<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">set_plugin<pos:position pos:line="22" pos:column="22"/></name></name> <operator pos:line="22" pos:column="23">!=<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">NULL<pos:position pos:line="22" pos:column="30"/></name></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="5">sstrncpy<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name><name pos:line="23" pos:column="14">inst<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">ident<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">.<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">plugin<pos:position pos:line="23" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="34">agg<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">set_plugin<pos:position pos:line="23" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="51">sizeof<argument_list pos:line="23" pos:column="57">(<argument><expr><name><name pos:line="23" pos:column="58">inst<pos:position pos:line="23" pos:column="62"/></name><operator pos:line="23" pos:column="62">-&gt;<pos:position pos:line="23" pos:column="67"/></operator><name pos:line="23" pos:column="64">ident<pos:position pos:line="23" pos:column="69"/></name><operator pos:line="23" pos:column="69">.<pos:position pos:line="23" pos:column="70"/></operator><name pos:line="23" pos:column="70">plugin<pos:position pos:line="23" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="79"/></expr_stmt></block></then>
  <else pos:line="24" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="5">sstrncpy<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name><name pos:line="25" pos:column="14">inst<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">ident<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">.<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">plugin<pos:position pos:line="25" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="34">"aggregation"<pos:position pos:line="25" pos:column="47"/></literal></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="49">sizeof<argument_list pos:line="25" pos:column="55">(<argument><expr><name><name pos:line="25" pos:column="56">inst<pos:position pos:line="25" pos:column="60"/></name><operator pos:line="25" pos:column="60">-&gt;<pos:position pos:line="25" pos:column="65"/></operator><name pos:line="25" pos:column="62">ident<pos:position pos:line="25" pos:column="67"/></name><operator pos:line="25" pos:column="67">.<pos:position pos:line="25" pos:column="68"/></operator><name pos:line="25" pos:column="68">plugin<pos:position pos:line="25" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="77"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="27" pos:column="3">/* Plugin instance */</comment>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">agg<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">set_plugin_instance<pos:position pos:line="28" pos:column="31"/></name></name> <operator pos:line="28" pos:column="32">!=<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">NULL<pos:position pos:line="28" pos:column="39"/></name></expr>)<pos:position pos:line="28" pos:column="40"/></condition><then pos:line="28" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">sstrncpy<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name><name pos:line="29" pos:column="14">inst<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">-&gt;<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="20">ident<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">.<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">plugin_instance<pos:position pos:line="29" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="43">agg<pos:position pos:line="29" pos:column="46"/></name><operator pos:line="29" pos:column="46">-&gt;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="48">set_plugin_instance<pos:position pos:line="29" pos:column="67"/></name></name></expr></argument>,
             <argument><expr><sizeof pos:line="30" pos:column="14">sizeof<argument_list pos:line="30" pos:column="20">(<argument><expr><name><name pos:line="30" pos:column="21">inst<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">ident<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">.<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">plugin_instance<pos:position pos:line="30" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt></block></then>
  <else pos:line="31" pos:column="3">else <block pos:line="31" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">char<pos:position pos:line="32" pos:column="9"/></name></type> <name><name pos:line="32" pos:column="10">tmp_plugin<pos:position pos:line="32" pos:column="20"/></name><index pos:line="32" pos:column="20">[<expr><name pos:line="32" pos:column="21">DATA_MAX_NAME_LEN<pos:position pos:line="32" pos:column="38"/></name></expr>]<pos:position pos:line="32" pos:column="39"/></index></name></decl>;<pos:position pos:line="32" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name></type> <name><name pos:line="33" pos:column="10">tmp_plugin_instance<pos:position pos:line="33" pos:column="29"/></name><index pos:line="33" pos:column="29">[<expr><name pos:line="33" pos:column="30">DATA_MAX_NAME_LEN<pos:position pos:line="33" pos:column="47"/></name></expr>]<pos:position pos:line="33" pos:column="48"/></index></name> <init pos:line="33" pos:column="49">= <expr><literal type="string" pos:line="33" pos:column="51">""<pos:position pos:line="33" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="54"/></decl_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">(<pos:position pos:line="35" pos:column="10"/></operator><name><name pos:line="35" pos:column="10">agg<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">regex_fields<pos:position pos:line="35" pos:column="27"/></name></name> <operator pos:line="35" pos:column="28">&amp;<pos:position pos:line="35" pos:column="33"/></operator> <name pos:line="35" pos:column="30">LU_GROUP_BY_PLUGIN<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">)<pos:position pos:line="35" pos:column="49"/></operator> <operator pos:line="35" pos:column="50">&amp;&amp;<pos:position pos:line="35" pos:column="60"/></operator>
        <operator pos:line="36" pos:column="9">(<pos:position pos:line="36" pos:column="10"/></operator><name><name pos:line="36" pos:column="10">agg<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">group_by<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">&amp;<pos:position pos:line="36" pos:column="29"/></operator> <name pos:line="36" pos:column="26">LU_GROUP_BY_PLUGIN<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">)<pos:position pos:line="36" pos:column="45"/></operator></expr>)<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="7">sstrncpy<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><name pos:line="37" pos:column="16">tmp_plugin<pos:position pos:line="37" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="28">vl<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">plugin<pos:position pos:line="37" pos:column="38"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="40">sizeof<argument_list pos:line="37" pos:column="46">(<argument><expr><name pos:line="37" pos:column="47">tmp_plugin<pos:position pos:line="37" pos:column="57"/></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt></block></then>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><name><name pos:line="38" pos:column="15">agg<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">-&gt;<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="20">regex_fields<pos:position pos:line="38" pos:column="32"/></name></name> <operator pos:line="38" pos:column="33">&amp;<pos:position pos:line="38" pos:column="38"/></operator> <name pos:line="38" pos:column="35">LU_GROUP_BY_PLUGIN<pos:position pos:line="38" pos:column="53"/></name><operator pos:line="38" pos:column="53">)<pos:position pos:line="38" pos:column="54"/></operator> <operator pos:line="38" pos:column="55">&amp;&amp;<pos:position pos:line="38" pos:column="65"/></operator>
             <operator pos:line="39" pos:column="14">(<pos:position pos:line="39" pos:column="15"/></operator><call><name pos:line="39" pos:column="15">AGG_MATCHES_ALL<pos:position pos:line="39" pos:column="30"/></name><argument_list pos:line="39" pos:column="30">(<argument><expr><name><name pos:line="39" pos:column="31">agg<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">-&gt;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="36">ident<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">.<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">plugin<pos:position pos:line="39" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call><operator pos:line="39" pos:column="49">)<pos:position pos:line="39" pos:column="50"/></operator></expr>)<pos:position pos:line="39" pos:column="51"/></condition><then pos:line="39" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="7">sstrncpy<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">tmp_plugin<pos:position pos:line="40" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="28">""<pos:position pos:line="40" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="32">sizeof<argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">tmp_plugin<pos:position pos:line="40" pos:column="49"/></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <else pos:line="41" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">sstrncpy<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">tmp_plugin<pos:position pos:line="42" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="28">agg<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">-&gt;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="33">ident<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">.<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">plugin<pos:position pos:line="42" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="47">sizeof<argument_list pos:line="42" pos:column="53">(<argument><expr><name pos:line="42" pos:column="54">tmp_plugin<pos:position pos:line="42" pos:column="64"/></name></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt></block></else></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name><name pos:line="44" pos:column="10">agg<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">regex_fields<pos:position pos:line="44" pos:column="27"/></name></name> <operator pos:line="44" pos:column="28">&amp;<pos:position pos:line="44" pos:column="33"/></operator> <name pos:line="44" pos:column="30">LU_GROUP_BY_PLUGIN_INSTANCE<pos:position pos:line="44" pos:column="57"/></name><operator pos:line="44" pos:column="57">)<pos:position pos:line="44" pos:column="58"/></operator> <operator pos:line="44" pos:column="59">&amp;&amp;<pos:position pos:line="44" pos:column="69"/></operator>
        <operator pos:line="45" pos:column="9">(<pos:position pos:line="45" pos:column="10"/></operator><name><name pos:line="45" pos:column="10">agg<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">-&gt;<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="15">group_by<pos:position pos:line="45" pos:column="23"/></name></name> <operator pos:line="45" pos:column="24">&amp;<pos:position pos:line="45" pos:column="29"/></operator> <name pos:line="45" pos:column="26">LU_GROUP_BY_PLUGIN_INSTANCE<pos:position pos:line="45" pos:column="53"/></name><operator pos:line="45" pos:column="53">)<pos:position pos:line="45" pos:column="54"/></operator></expr>)<pos:position pos:line="45" pos:column="55"/></condition><then pos:line="45" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="7">sstrncpy<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><name pos:line="46" pos:column="16">tmp_plugin_instance<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="37">vl<pos:position pos:line="46" pos:column="39"/></name><operator pos:line="46" pos:column="39">-&gt;<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="41">plugin_instance<pos:position pos:line="46" pos:column="56"/></name></name></expr></argument>,
               <argument><expr><sizeof pos:line="47" pos:column="16">sizeof<argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">tmp_plugin_instance<pos:position pos:line="47" pos:column="42"/></name></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt></block></then>
    <elseif pos:line="48" pos:column="5">else <if pos:line="48" pos:column="10">if <condition pos:line="48" pos:column="13">(<expr><operator pos:line="48" pos:column="14">(<pos:position pos:line="48" pos:column="15"/></operator><name><name pos:line="48" pos:column="15">agg<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">regex_fields<pos:position pos:line="48" pos:column="32"/></name></name> <operator pos:line="48" pos:column="33">&amp;<pos:position pos:line="48" pos:column="38"/></operator> <name pos:line="48" pos:column="35">LU_GROUP_BY_PLUGIN_INSTANCE<pos:position pos:line="48" pos:column="62"/></name><operator pos:line="48" pos:column="62">)<pos:position pos:line="48" pos:column="63"/></operator> <operator pos:line="48" pos:column="64">&amp;&amp;<pos:position pos:line="48" pos:column="74"/></operator>
             <operator pos:line="49" pos:column="14">(<pos:position pos:line="49" pos:column="15"/></operator><call><name pos:line="49" pos:column="15">AGG_MATCHES_ALL<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><name><name pos:line="49" pos:column="31">agg<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">-&gt;<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="36">ident<pos:position pos:line="49" pos:column="41"/></name><operator pos:line="49" pos:column="41">.<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="42">plugin_instance<pos:position pos:line="49" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="58"/></argument_list></call><operator pos:line="49" pos:column="58">)<pos:position pos:line="49" pos:column="59"/></operator></expr>)<pos:position pos:line="49" pos:column="60"/></condition><then pos:line="49" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="7">sstrncpy<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><name pos:line="50" pos:column="16">tmp_plugin_instance<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="37">""<pos:position pos:line="50" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="41">sizeof<argument_list pos:line="50" pos:column="47">(<argument><expr><name pos:line="50" pos:column="48">tmp_plugin_instance<pos:position pos:line="50" pos:column="67"/></name></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="70"/></expr_stmt></block></then></if></elseif>
    <else pos:line="51" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="7">sstrncpy<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><name pos:line="52" pos:column="16">tmp_plugin_instance<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="37">agg<pos:position pos:line="52" pos:column="40"/></name><operator pos:line="52" pos:column="40">-&gt;<pos:position pos:line="52" pos:column="45"/></operator><name pos:line="52" pos:column="42">ident<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">.<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="48">plugin_instance<pos:position pos:line="52" pos:column="63"/></name></name></expr></argument>,
               <argument><expr><sizeof pos:line="53" pos:column="16">sizeof<argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">tmp_plugin_instance<pos:position pos:line="53" pos:column="42"/></name></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="45"/></expr_stmt></block></else></if>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">(<pos:position pos:line="55" pos:column="10"/></operator><call><name pos:line="55" pos:column="10">strcmp<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><literal type="string" pos:line="55" pos:column="17">""<pos:position pos:line="55" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="21">tmp_plugin<pos:position pos:line="55" pos:column="31"/></name></expr></argument>)<pos:position pos:line="55" pos:column="32"/></argument_list></call> <operator pos:line="55" pos:column="33">==<pos:position pos:line="55" pos:column="35"/></operator> <literal type="number" pos:line="55" pos:column="36">0<pos:position pos:line="55" pos:column="37"/></literal><operator pos:line="55" pos:column="37">)<pos:position pos:line="55" pos:column="38"/></operator> <operator pos:line="55" pos:column="39">&amp;&amp;<pos:position pos:line="55" pos:column="49"/></operator> <operator pos:line="55" pos:column="42">(<pos:position pos:line="55" pos:column="43"/></operator><call><name pos:line="55" pos:column="43">strcmp<pos:position pos:line="55" pos:column="49"/></name><argument_list pos:line="55" pos:column="49">(<argument><expr><literal type="string" pos:line="55" pos:column="50">""<pos:position pos:line="55" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="54">tmp_plugin_instance<pos:position pos:line="55" pos:column="73"/></name></expr></argument>)<pos:position pos:line="55" pos:column="74"/></argument_list></call> <operator pos:line="55" pos:column="75">==<pos:position pos:line="55" pos:column="77"/></operator> <literal type="number" pos:line="55" pos:column="78">0<pos:position pos:line="55" pos:column="79"/></literal><operator pos:line="55" pos:column="79">)<pos:position pos:line="55" pos:column="80"/></operator></expr>)<pos:position pos:line="55" pos:column="81"/></condition><then pos:line="55" pos:column="81">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="7">sstrncpy<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><name><name pos:line="56" pos:column="16">inst<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">-&gt;<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="22">ident<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">.<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="28">plugin_instance<pos:position pos:line="56" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="45">AGG_FUNC_PLACEHOLDER<pos:position pos:line="56" pos:column="65"/></name></expr></argument>,
               <argument><expr><sizeof pos:line="57" pos:column="16">sizeof<argument_list pos:line="57" pos:column="22">(<argument><expr><name><name pos:line="57" pos:column="23">inst<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">-&gt;<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="29">ident<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">.<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="35">plugin_instance<pos:position pos:line="57" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="53"/></expr_stmt></block></then>
    <elseif pos:line="58" pos:column="5">else <if pos:line="58" pos:column="10">if <condition pos:line="58" pos:column="13">(<expr><call><name pos:line="58" pos:column="14">strcmp<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><literal type="string" pos:line="58" pos:column="21">""<pos:position pos:line="58" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="25">tmp_plugin<pos:position pos:line="58" pos:column="35"/></name></expr></argument>)<pos:position pos:line="58" pos:column="36"/></argument_list></call> <operator pos:line="58" pos:column="37">!=<pos:position pos:line="58" pos:column="39"/></operator> <literal type="number" pos:line="58" pos:column="40">0<pos:position pos:line="58" pos:column="41"/></literal></expr>)<pos:position pos:line="58" pos:column="42"/></condition><then pos:line="58" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="7">ssnprintf<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name><name pos:line="59" pos:column="17">inst<pos:position pos:line="59" pos:column="21"/></name><operator pos:line="59" pos:column="21">-&gt;<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="23">ident<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">.<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="29">plugin_instance<pos:position pos:line="59" pos:column="44"/></name></name></expr></argument>,
                <argument><expr><sizeof pos:line="60" pos:column="17">sizeof<argument_list pos:line="60" pos:column="23">(<argument><expr><name><name pos:line="60" pos:column="24">inst<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">-&gt;<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="30">ident<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">.<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="36">plugin_instance<pos:position pos:line="60" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="54">"%s-%s"<pos:position pos:line="60" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="63">tmp_plugin<pos:position pos:line="60" pos:column="73"/></name></expr></argument>,
                <argument><expr><name pos:line="61" pos:column="17">AGG_FUNC_PLACEHOLDER<pos:position pos:line="61" pos:column="37"/></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="62" pos:column="5">else <if pos:line="62" pos:column="10">if <condition pos:line="62" pos:column="13">(<expr><call><name pos:line="62" pos:column="14">strcmp<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><literal type="string" pos:line="62" pos:column="21">""<pos:position pos:line="62" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="25">tmp_plugin_instance<pos:position pos:line="62" pos:column="44"/></name></expr></argument>)<pos:position pos:line="62" pos:column="45"/></argument_list></call> <operator pos:line="62" pos:column="46">!=<pos:position pos:line="62" pos:column="48"/></operator> <literal type="number" pos:line="62" pos:column="49">0<pos:position pos:line="62" pos:column="50"/></literal></expr>)<pos:position pos:line="62" pos:column="51"/></condition><then pos:line="62" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="7">ssnprintf<pos:position pos:line="63" pos:column="16"/></name><argument_list pos:line="63" pos:column="16">(<argument><expr><name><name pos:line="63" pos:column="17">inst<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">-&gt;<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="23">ident<pos:position pos:line="63" pos:column="28"/></name><operator pos:line="63" pos:column="28">.<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="29">plugin_instance<pos:position pos:line="63" pos:column="44"/></name></name></expr></argument>,
                <argument><expr><sizeof pos:line="64" pos:column="17">sizeof<argument_list pos:line="64" pos:column="23">(<argument><expr><name><name pos:line="64" pos:column="24">inst<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">ident<pos:position pos:line="64" pos:column="35"/></name><operator pos:line="64" pos:column="35">.<pos:position pos:line="64" pos:column="36"/></operator><name pos:line="64" pos:column="36">plugin_instance<pos:position pos:line="64" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="54">"%s-%s"<pos:position pos:line="64" pos:column="61"/></literal></expr></argument>,
                <argument><expr><name pos:line="65" pos:column="17">tmp_plugin_instance<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">AGG_FUNC_PLACEHOLDER<pos:position pos:line="65" pos:column="58"/></name></expr></argument>)<pos:position pos:line="65" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="60"/></expr_stmt></block></then></if></elseif>
    <else pos:line="66" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="7">ssnprintf<pos:position pos:line="67" pos:column="16"/></name><argument_list pos:line="67" pos:column="16">(<argument><expr><name><name pos:line="67" pos:column="17">inst<pos:position pos:line="67" pos:column="21"/></name><operator pos:line="67" pos:column="21">-&gt;<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="23">ident<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">.<pos:position pos:line="67" pos:column="29"/></operator><name pos:line="67" pos:column="29">plugin_instance<pos:position pos:line="67" pos:column="44"/></name></name></expr></argument>,
                <argument><expr><sizeof pos:line="68" pos:column="17">sizeof<argument_list pos:line="68" pos:column="23">(<argument><expr><name><name pos:line="68" pos:column="24">inst<pos:position pos:line="68" pos:column="28"/></name><operator pos:line="68" pos:column="28">-&gt;<pos:position pos:line="68" pos:column="33"/></operator><name pos:line="68" pos:column="30">ident<pos:position pos:line="68" pos:column="35"/></name><operator pos:line="68" pos:column="35">.<pos:position pos:line="68" pos:column="36"/></operator><name pos:line="68" pos:column="36">plugin_instance<pos:position pos:line="68" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="54">"%s-%s-%s"<pos:position pos:line="68" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="66">tmp_plugin<pos:position pos:line="68" pos:column="76"/></name></expr></argument>,
                <argument><expr><name pos:line="69" pos:column="17">tmp_plugin_instance<pos:position pos:line="69" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="38">AGG_FUNC_PLACEHOLDER<pos:position pos:line="69" pos:column="58"/></name></expr></argument>)<pos:position pos:line="69" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="60"/></expr_stmt></block></else></if>
  }<pos:position pos:line="70" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="72" pos:column="3">/* Type */</comment>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">sstrncpy<pos:position pos:line="73" pos:column="11"/></name><argument_list pos:line="73" pos:column="11">(<argument><expr><name><name pos:line="73" pos:column="12">inst<pos:position pos:line="73" pos:column="16"/></name><operator pos:line="73" pos:column="16">-&gt;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="18">ident<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">.<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="24">type<pos:position pos:line="73" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="30">agg<pos:position pos:line="73" pos:column="33"/></name><operator pos:line="73" pos:column="33">-&gt;<pos:position pos:line="73" pos:column="38"/></operator><name pos:line="73" pos:column="35">ident<pos:position pos:line="73" pos:column="40"/></name><operator pos:line="73" pos:column="40">.<pos:position pos:line="73" pos:column="41"/></operator><name pos:line="73" pos:column="41">type<pos:position pos:line="73" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="47">sizeof<argument_list pos:line="73" pos:column="53">(<argument><expr><name><name pos:line="73" pos:column="54">inst<pos:position pos:line="73" pos:column="58"/></name><operator pos:line="73" pos:column="58">-&gt;<pos:position pos:line="73" pos:column="63"/></operator><name pos:line="73" pos:column="60">ident<pos:position pos:line="73" pos:column="65"/></name><operator pos:line="73" pos:column="65">.<pos:position pos:line="73" pos:column="66"/></operator><name pos:line="73" pos:column="66">type<pos:position pos:line="73" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="73" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="73"/></expr_stmt>

  <comment type="block" pos:line="75" pos:column="3">/* Type instance */</comment>
  <expr_stmt><expr><call><name pos:line="76" pos:column="3">COPY_FIELD<pos:position pos:line="76" pos:column="13"/></name><argument_list pos:line="76" pos:column="13">(<argument><expr><name><name pos:line="76" pos:column="14">inst<pos:position pos:line="76" pos:column="18"/></name><operator pos:line="76" pos:column="18">-&gt;<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="20">ident<pos:position pos:line="76" pos:column="25"/></name><operator pos:line="76" pos:column="25">.<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="26">type_instance<pos:position pos:line="76" pos:column="39"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="41">sizeof<argument_list pos:line="76" pos:column="47">(<argument><expr><name><name pos:line="76" pos:column="48">inst<pos:position pos:line="76" pos:column="52"/></name><operator pos:line="76" pos:column="52">-&gt;<pos:position pos:line="76" pos:column="57"/></operator><name pos:line="76" pos:column="54">ident<pos:position pos:line="76" pos:column="59"/></name><operator pos:line="76" pos:column="59">.<pos:position pos:line="76" pos:column="60"/></operator><name pos:line="76" pos:column="60">type_instance<pos:position pos:line="76" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="74"/></argument_list></sizeof></expr></argument>,
             <argument><expr><name pos:line="77" pos:column="14">type_instance<pos:position pos:line="77" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="29">LU_GROUP_BY_TYPE_INSTANCE<pos:position pos:line="77" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="56">""<pos:position pos:line="77" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="60"/></expr_stmt>

<cpp:undef pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">undef<pos:position pos:line="79" pos:column="7"/></cpp:directive> <name pos:line="79" pos:column="8">COPY_FIELD<pos:position pos:line="79" pos:column="18"/></name></cpp:undef>

  <return pos:line="81" pos:column="3">return <expr><operator pos:line="81" pos:column="10">(<pos:position pos:line="81" pos:column="11"/></operator><literal type="number" pos:line="81" pos:column="11">0<pos:position pos:line="81" pos:column="12"/></literal><operator pos:line="81" pos:column="12">)<pos:position pos:line="81" pos:column="13"/></operator></expr>;<pos:position pos:line="81" pos:column="14"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

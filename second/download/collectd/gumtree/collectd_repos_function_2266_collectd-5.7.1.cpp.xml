<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2266_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cj_tree_free<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">c_avl_tree_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">tree<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <comment type="block" pos:line="1" pos:column="46">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">name<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">void<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">value<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><call><name pos:line="6" pos:column="10">c_avl_pick<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">tree<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="27">(<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">void<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></operator><operator pos:line="6" pos:column="34">)<pos:position pos:line="6" pos:column="35"/></operator><operator pos:line="6" pos:column="35">&amp;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="36">name<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="42">(<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">void<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">*<pos:position pos:line="6" pos:column="49"/></operator><operator pos:line="6" pos:column="49">)<pos:position pos:line="6" pos:column="50"/></operator><operator pos:line="6" pos:column="50">&amp;<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="51">value<pos:position pos:line="6" pos:column="56"/></name></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call> <operator pos:line="6" pos:column="58">==<pos:position pos:line="6" pos:column="60"/></operator> <literal type="number" pos:line="6" pos:column="61">0<pos:position pos:line="6" pos:column="62"/></literal></expr>)<pos:position pos:line="6" pos:column="63"/></condition> <block pos:line="6" pos:column="64">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">cj_key_t<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">key<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><operator pos:line="7" pos:column="21">(<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">cj_key_t<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></operator><operator pos:line="7" pos:column="32">)<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">value<pos:position pos:line="7" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">CJ_IS_KEY<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">key<pos:position pos:line="9" pos:column="22"/></name></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="7">cj_key_free<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">key<pos:position pos:line="10" pos:column="22"/></name></expr></argument>)<pos:position pos:line="10" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt></block></then>
    <else pos:line="11" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="7">cj_tree_free<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">c_avl_tree_t<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></operator><operator pos:line="12" pos:column="35">)<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">value<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">sfree<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">name<pos:position pos:line="14" pos:column="15"/></name></expr></argument>)<pos:position pos:line="14" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">c_avl_destroy<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">tree<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

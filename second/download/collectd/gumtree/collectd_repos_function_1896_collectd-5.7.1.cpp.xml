<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1896_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ntpd_receive_response<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">res_items<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">res_size<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier><modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">res_data<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">res_item_size<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list> <block pos:line="2" pos:column="53">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">sd<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">pollfd<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">poll_s<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">resp_pkt<pos:position pos:line="5" pos:column="18"/></name></name></type> <name pos:line="5" pos:column="19">res<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">done<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">items<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">items_num<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">timeval<pos:position pos:line="12" pos:column="17"/></name></name></type> <name pos:line="12" pos:column="18">time_end<pos:position pos:line="12" pos:column="26"/></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="13" pos:column="3">struct<pos:position pos:line="13" pos:column="9"/></name> <name pos:line="13" pos:column="10">timeval<pos:position pos:line="13" pos:column="17"/></name></name></type> <name pos:line="13" pos:column="18">time_now<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">timeout<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">pkt_item_num<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt> <comment type="block" pos:line="16" pos:column="21">/* items in this packet */</comment>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">int<pos:position pos:line="17" pos:column="6"/></name></type> <name pos:line="17" pos:column="7">pkt_item_len<pos:position pos:line="17" pos:column="19"/></name></decl>;<pos:position pos:line="17" pos:column="20"/></decl_stmt> <comment type="block" pos:line="17" pos:column="21">/* size of the items in this packet */</comment>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">pkt_sequence<pos:position pos:line="18" pos:column="19"/></name></decl>;<pos:position pos:line="18" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">char<pos:position pos:line="19" pos:column="7"/></name></type> <name><name pos:line="19" pos:column="8">pkt_recvd<pos:position pos:line="19" pos:column="17"/></name><index pos:line="19" pos:column="17">[<expr><name pos:line="19" pos:column="18">MAXSEQ<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">+<pos:position pos:line="19" pos:column="26"/></operator> <literal type="number" pos:line="19" pos:column="27">1<pos:position pos:line="19" pos:column="28"/></literal></expr>]<pos:position pos:line="19" pos:column="29"/></index></name> <init pos:line="19" pos:column="30">= <expr><block pos:line="19" pos:column="32">{
      <expr><literal type="number" pos:line="20" pos:column="7">0<pos:position pos:line="20" pos:column="8"/></literal></expr>}<pos:position pos:line="20" pos:column="9"/></block></expr></init></decl>;<pos:position pos:line="20" pos:column="10"/></decl_stmt>              <comment type="block" pos:line="20" pos:column="24">/* sequence numbers that have been received */</comment>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">int<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">pkt_recvd_num<pos:position pos:line="21" pos:column="20"/></name></decl>;<pos:position pos:line="21" pos:column="21"/></decl_stmt>   <comment type="block" pos:line="21" pos:column="24">/* number of packets that have been received */</comment>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">int<pos:position pos:line="22" pos:column="6"/></name></type> <name pos:line="22" pos:column="7">pkt_lastseq<pos:position pos:line="22" pos:column="18"/></name></decl>;<pos:position pos:line="22" pos:column="19"/></decl_stmt>     <comment type="block" pos:line="22" pos:column="24">/* the last sequence number */</comment>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">ssize_t<pos:position pos:line="23" pos:column="10"/></name></type> <name pos:line="23" pos:column="11">pkt_padding<pos:position pos:line="23" pos:column="22"/></name></decl>;<pos:position pos:line="23" pos:column="23"/></decl_stmt> <comment type="block" pos:line="23" pos:column="24">/* Padding in this packet */</comment>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">(<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">sd<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <call><name pos:line="25" pos:column="13">ntpd_connect<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">()<pos:position pos:line="25" pos:column="27"/></argument_list></call><operator pos:line="25" pos:column="27">)<pos:position pos:line="25" pos:column="28"/></operator> <operator pos:line="25" pos:column="29">&lt;<pos:position pos:line="25" pos:column="33"/></operator> <literal type="number" pos:line="25" pos:column="31">0<pos:position pos:line="25" pos:column="32"/></literal></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">(<pos:position pos:line="26" pos:column="13"/></operator><operator pos:line="26" pos:column="13">-<pos:position pos:line="26" pos:column="14"/></operator><literal type="number" pos:line="26" pos:column="14">1<pos:position pos:line="26" pos:column="15"/></literal><operator pos:line="26" pos:column="15">)<pos:position pos:line="26" pos:column="16"/></operator></expr>;<pos:position pos:line="26" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="28" pos:column="3">items<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <name pos:line="28" pos:column="11">NULL<pos:position pos:line="28" pos:column="15"/></name></expr>;<pos:position pos:line="28" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="29" pos:column="3">items_num<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <literal type="number" pos:line="29" pos:column="15">0<pos:position pos:line="29" pos:column="16"/></literal></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><name pos:line="31" pos:column="3">pkt_recvd_num<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <literal type="number" pos:line="31" pos:column="19">0<pos:position pos:line="31" pos:column="20"/></literal></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">pkt_lastseq<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <operator pos:line="32" pos:column="17">-<pos:position pos:line="32" pos:column="18"/></operator><literal type="number" pos:line="32" pos:column="18">1<pos:position pos:line="32" pos:column="19"/></literal></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="34" pos:column="3">*<pos:position pos:line="34" pos:column="4"/></operator><name pos:line="34" pos:column="4">res_items<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="35" pos:column="3">*<pos:position pos:line="35" pos:column="4"/></operator><name pos:line="35" pos:column="4">res_size<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <literal type="number" pos:line="35" pos:column="15">0<pos:position pos:line="35" pos:column="16"/></literal></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="36" pos:column="3">*<pos:position pos:line="36" pos:column="4"/></operator><name pos:line="36" pos:column="4">res_data<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">NULL<pos:position pos:line="36" pos:column="19"/></name></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><call><name pos:line="38" pos:column="7">gettimeofday<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><operator pos:line="38" pos:column="20">&amp;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="21">time_end<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="31">NULL<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call> <operator pos:line="38" pos:column="37">&lt;<pos:position pos:line="38" pos:column="41"/></operator> <literal type="number" pos:line="38" pos:column="39">0<pos:position pos:line="38" pos:column="40"/></literal></expr>)<pos:position pos:line="38" pos:column="41"/></condition><then pos:line="38" pos:column="41"> <block pos:line="38" pos:column="42">{
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">char<pos:position pos:line="39" pos:column="9"/></name></type> <name><name pos:line="39" pos:column="10">errbuf<pos:position pos:line="39" pos:column="16"/></name><index pos:line="39" pos:column="16">[<expr><literal type="number" pos:line="39" pos:column="17">1024<pos:position pos:line="39" pos:column="21"/></literal></expr>]<pos:position pos:line="39" pos:column="22"/></index></name></decl>;<pos:position pos:line="39" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ERROR<pos:position pos:line="40" pos:column="10"/></name><argument_list pos:line="40" pos:column="10">(<argument><expr><literal type="string" pos:line="40" pos:column="11">"ntpd plugin: gettimeofday failed: %s"<pos:position pos:line="40" pos:column="49"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="41" pos:column="11">sstrerror<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><name pos:line="41" pos:column="21">errno<pos:position pos:line="41" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="28">errbuf<pos:position pos:line="41" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="36">sizeof<argument_list pos:line="41" pos:column="42">(<argument><expr><name pos:line="41" pos:column="43">errbuf<pos:position pos:line="41" pos:column="49"/></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator><operator pos:line="42" pos:column="13">-<pos:position pos:line="42" pos:column="14"/></operator><literal type="number" pos:line="42" pos:column="14">1<pos:position pos:line="42" pos:column="15"/></literal><operator pos:line="42" pos:column="15">)<pos:position pos:line="42" pos:column="16"/></operator></expr>;<pos:position pos:line="42" pos:column="17"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">time_end<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">.<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="12">tv_sec<pos:position pos:line="44" pos:column="18"/></name></name><operator pos:line="44" pos:column="18">++<pos:position pos:line="44" pos:column="20"/></operator></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt> <comment type="block" pos:line="44" pos:column="22">/* wait for a most one second */</comment>

  <expr_stmt><expr><name pos:line="46" pos:column="3">done<pos:position pos:line="46" pos:column="7"/></name> <operator pos:line="46" pos:column="8">=<pos:position pos:line="46" pos:column="9"/></operator> <literal type="number" pos:line="46" pos:column="10">0<pos:position pos:line="46" pos:column="11"/></literal></expr>;<pos:position pos:line="46" pos:column="12"/></expr_stmt>
  <while pos:line="47" pos:column="3">while <condition pos:line="47" pos:column="9">(<expr><name pos:line="47" pos:column="10">done<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">==<pos:position pos:line="47" pos:column="17"/></operator> <literal type="number" pos:line="47" pos:column="18">0<pos:position pos:line="47" pos:column="19"/></literal></expr>)<pos:position pos:line="47" pos:column="20"/></condition> <block pos:line="47" pos:column="21">{
    <decl_stmt><decl><type><name><name pos:line="48" pos:column="5">struct<pos:position pos:line="48" pos:column="11"/></name> <name pos:line="48" pos:column="12">timeval<pos:position pos:line="48" pos:column="19"/></name></name></type> <name pos:line="48" pos:column="20">time_left<pos:position pos:line="48" pos:column="29"/></name></decl>;<pos:position pos:line="48" pos:column="30"/></decl_stmt>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><call><name pos:line="50" pos:column="9">gettimeofday<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><operator pos:line="50" pos:column="22">&amp;<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="23">time_now<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="33">NULL<pos:position pos:line="50" pos:column="37"/></name></expr></argument>)<pos:position pos:line="50" pos:column="38"/></argument_list></call> <operator pos:line="50" pos:column="39">&lt;<pos:position pos:line="50" pos:column="43"/></operator> <literal type="number" pos:line="50" pos:column="41">0<pos:position pos:line="50" pos:column="42"/></literal></expr>)<pos:position pos:line="50" pos:column="43"/></condition><then pos:line="50" pos:column="43"> <block pos:line="50" pos:column="44">{
      <decl_stmt><decl><type><name pos:line="51" pos:column="7">char<pos:position pos:line="51" pos:column="11"/></name></type> <name><name pos:line="51" pos:column="12">errbuf<pos:position pos:line="51" pos:column="18"/></name><index pos:line="51" pos:column="18">[<expr><literal type="number" pos:line="51" pos:column="19">1024<pos:position pos:line="51" pos:column="23"/></literal></expr>]<pos:position pos:line="51" pos:column="24"/></index></name></decl>;<pos:position pos:line="51" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">ERROR<pos:position pos:line="52" pos:column="12"/></name><argument_list pos:line="52" pos:column="12">(<argument><expr><literal type="string" pos:line="52" pos:column="13">"ntpd plugin: gettimeofday failed: %s"<pos:position pos:line="52" pos:column="51"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="53" pos:column="13">sstrerror<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">errno<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="30">errbuf<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="38">sizeof<argument_list pos:line="53" pos:column="44">(<argument><expr><name pos:line="53" pos:column="45">errbuf<pos:position pos:line="53" pos:column="51"/></name></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt>
      <return pos:line="54" pos:column="7">return <expr><operator pos:line="54" pos:column="14">(<pos:position pos:line="54" pos:column="15"/></operator><operator pos:line="54" pos:column="15">-<pos:position pos:line="54" pos:column="16"/></operator><literal type="number" pos:line="54" pos:column="16">1<pos:position pos:line="54" pos:column="17"/></literal><operator pos:line="54" pos:column="17">)<pos:position pos:line="54" pos:column="18"/></operator></expr>;<pos:position pos:line="54" pos:column="19"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><call><name pos:line="57" pos:column="9">timeval_cmp<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">time_end<pos:position pos:line="57" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="31">time_now<pos:position pos:line="57" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="41">&amp;<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="42">time_left<pos:position pos:line="57" pos:column="51"/></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call> <operator pos:line="57" pos:column="53">&lt;=<pos:position pos:line="57" pos:column="58"/></operator> <literal type="number" pos:line="57" pos:column="56">0<pos:position pos:line="57" pos:column="57"/></literal></expr>)<pos:position pos:line="57" pos:column="58"/></condition><then pos:line="57" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="7">timeout<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">=<pos:position pos:line="58" pos:column="16"/></operator> <literal type="number" pos:line="58" pos:column="17">0<pos:position pos:line="58" pos:column="18"/></literal></expr>;<pos:position pos:line="58" pos:column="19"/></expr_stmt></block></then>
    <else pos:line="59" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="7">timeout<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <literal type="number" pos:line="60" pos:column="17">1000<pos:position pos:line="60" pos:column="21"/></literal> <operator pos:line="60" pos:column="22">*<pos:position pos:line="60" pos:column="23"/></operator> <name><name pos:line="60" pos:column="24">time_left<pos:position pos:line="60" pos:column="33"/></name><operator pos:line="60" pos:column="33">.<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="34">tv_sec<pos:position pos:line="60" pos:column="40"/></name></name> <operator pos:line="60" pos:column="41">+<pos:position pos:line="60" pos:column="42"/></operator> <operator pos:line="60" pos:column="43">(<pos:position pos:line="60" pos:column="44"/></operator><operator pos:line="60" pos:column="44">(<pos:position pos:line="60" pos:column="45"/></operator><name><name pos:line="60" pos:column="45">time_left<pos:position pos:line="60" pos:column="54"/></name><operator pos:line="60" pos:column="54">.<pos:position pos:line="60" pos:column="55"/></operator><name pos:line="60" pos:column="55">tv_usec<pos:position pos:line="60" pos:column="62"/></name></name> <operator pos:line="60" pos:column="63">+<pos:position pos:line="60" pos:column="64"/></operator> <literal type="number" pos:line="60" pos:column="65">500<pos:position pos:line="60" pos:column="68"/></literal><operator pos:line="60" pos:column="68">)<pos:position pos:line="60" pos:column="69"/></operator> <operator pos:line="60" pos:column="70">/<pos:position pos:line="60" pos:column="71"/></operator> <literal type="number" pos:line="60" pos:column="72">1000<pos:position pos:line="60" pos:column="76"/></literal><operator pos:line="60" pos:column="76">)<pos:position pos:line="60" pos:column="77"/></operator></expr>;<pos:position pos:line="60" pos:column="78"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="62" pos:column="5">/* timeout reached */</comment>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">timeout<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">&lt;=<pos:position pos:line="63" pos:column="22"/></operator> <literal type="number" pos:line="63" pos:column="20">0<pos:position pos:line="63" pos:column="21"/></literal></expr>)<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22">
      <block type="pseudo"><break pos:line="64" pos:column="7">break;<pos:position pos:line="64" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name><name pos:line="66" pos:column="5">poll_s<pos:position pos:line="66" pos:column="11"/></name><operator pos:line="66" pos:column="11">.<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="12">fd<pos:position pos:line="66" pos:column="14"/></name></name> <operator pos:line="66" pos:column="15">=<pos:position pos:line="66" pos:column="16"/></operator> <name pos:line="66" pos:column="17">sd<pos:position pos:line="66" pos:column="19"/></name></expr>;<pos:position pos:line="66" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">poll_s<pos:position pos:line="67" pos:column="11"/></name><operator pos:line="67" pos:column="11">.<pos:position pos:line="67" pos:column="12"/></operator><name pos:line="67" pos:column="12">events<pos:position pos:line="67" pos:column="18"/></name></name> <operator pos:line="67" pos:column="19">=<pos:position pos:line="67" pos:column="20"/></operator> <name pos:line="67" pos:column="21">POLLIN<pos:position pos:line="67" pos:column="27"/></name> <operator pos:line="67" pos:column="28">|<pos:position pos:line="67" pos:column="29"/></operator> <name pos:line="67" pos:column="30">POLLPRI<pos:position pos:line="67" pos:column="37"/></name></expr>;<pos:position pos:line="67" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="68" pos:column="5">poll_s<pos:position pos:line="68" pos:column="11"/></name><operator pos:line="68" pos:column="11">.<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="12">revents<pos:position pos:line="68" pos:column="19"/></name></name> <operator pos:line="68" pos:column="20">=<pos:position pos:line="68" pos:column="21"/></operator> <literal type="number" pos:line="68" pos:column="22">0<pos:position pos:line="68" pos:column="23"/></literal></expr>;<pos:position pos:line="68" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="70" pos:column="5">DEBUG<pos:position pos:line="70" pos:column="10"/></name><argument_list pos:line="70" pos:column="10">(<argument><expr><literal type="string" pos:line="70" pos:column="11">"Polling for %ims"<pos:position pos:line="70" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="31">timeout<pos:position pos:line="70" pos:column="38"/></name></expr></argument>)<pos:position pos:line="70" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="71" pos:column="5">status<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">=<pos:position pos:line="71" pos:column="13"/></operator> <call><name pos:line="71" pos:column="14">poll<pos:position pos:line="71" pos:column="18"/></name><argument_list pos:line="71" pos:column="18">(<argument><expr><operator pos:line="71" pos:column="19">&amp;<pos:position pos:line="71" pos:column="24"/></operator><name pos:line="71" pos:column="20">poll_s<pos:position pos:line="71" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="28">1<pos:position pos:line="71" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="31">timeout<pos:position pos:line="71" pos:column="38"/></name></expr></argument>)<pos:position pos:line="71" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt>

    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><operator pos:line="73" pos:column="9">(<pos:position pos:line="73" pos:column="10"/></operator><name pos:line="73" pos:column="10">status<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">&lt;<pos:position pos:line="73" pos:column="21"/></operator> <literal type="number" pos:line="73" pos:column="19">0<pos:position pos:line="73" pos:column="20"/></literal><operator pos:line="73" pos:column="20">)<pos:position pos:line="73" pos:column="21"/></operator> <operator pos:line="73" pos:column="22">&amp;&amp;<pos:position pos:line="73" pos:column="32"/></operator> <operator pos:line="73" pos:column="25">(<pos:position pos:line="73" pos:column="26"/></operator><operator pos:line="73" pos:column="26">(<pos:position pos:line="73" pos:column="27"/></operator><name pos:line="73" pos:column="27">errno<pos:position pos:line="73" pos:column="32"/></name> <operator pos:line="73" pos:column="33">==<pos:position pos:line="73" pos:column="35"/></operator> <name pos:line="73" pos:column="36">EAGAIN<pos:position pos:line="73" pos:column="42"/></name><operator pos:line="73" pos:column="42">)<pos:position pos:line="73" pos:column="43"/></operator> <operator pos:line="73" pos:column="44">||<pos:position pos:line="73" pos:column="46"/></operator> <operator pos:line="73" pos:column="47">(<pos:position pos:line="73" pos:column="48"/></operator><name pos:line="73" pos:column="48">errno<pos:position pos:line="73" pos:column="53"/></name> <operator pos:line="73" pos:column="54">==<pos:position pos:line="73" pos:column="56"/></operator> <name pos:line="73" pos:column="57">EINTR<pos:position pos:line="73" pos:column="62"/></name><operator pos:line="73" pos:column="62">)<pos:position pos:line="73" pos:column="63"/></operator><operator pos:line="73" pos:column="63">)<pos:position pos:line="73" pos:column="64"/></operator></expr>)<pos:position pos:line="73" pos:column="65"/></condition><then pos:line="73" pos:column="65">
      <block type="pseudo"><continue pos:line="74" pos:column="7">continue;<pos:position pos:line="74" pos:column="16"/></continue></block></then></if>

    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">status<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">&lt;<pos:position pos:line="76" pos:column="20"/></operator> <literal type="number" pos:line="76" pos:column="18">0<pos:position pos:line="76" pos:column="19"/></literal></expr>)<pos:position pos:line="76" pos:column="20"/></condition><then pos:line="76" pos:column="20"> <block pos:line="76" pos:column="21">{
      <decl_stmt><decl><type><name pos:line="77" pos:column="7">char<pos:position pos:line="77" pos:column="11"/></name></type> <name><name pos:line="77" pos:column="12">errbuf<pos:position pos:line="77" pos:column="18"/></name><index pos:line="77" pos:column="18">[<expr><literal type="number" pos:line="77" pos:column="19">1024<pos:position pos:line="77" pos:column="23"/></literal></expr>]<pos:position pos:line="77" pos:column="24"/></index></name></decl>;<pos:position pos:line="77" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">ERROR<pos:position pos:line="78" pos:column="12"/></name><argument_list pos:line="78" pos:column="12">(<argument><expr><literal type="string" pos:line="78" pos:column="13">"ntpd plugin: poll failed: %s"<pos:position pos:line="78" pos:column="43"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="79" pos:column="13">sstrerror<pos:position pos:line="79" pos:column="22"/></name><argument_list pos:line="79" pos:column="22">(<argument><expr><name pos:line="79" pos:column="23">errno<pos:position pos:line="79" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="30">errbuf<pos:position pos:line="79" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="38">sizeof<argument_list pos:line="79" pos:column="44">(<argument><expr><name pos:line="79" pos:column="45">errbuf<pos:position pos:line="79" pos:column="51"/></name></expr></argument>)<pos:position pos:line="79" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="55"/></expr_stmt>
      <return pos:line="80" pos:column="7">return <expr><operator pos:line="80" pos:column="14">(<pos:position pos:line="80" pos:column="15"/></operator><operator pos:line="80" pos:column="15">-<pos:position pos:line="80" pos:column="16"/></operator><literal type="number" pos:line="80" pos:column="16">1<pos:position pos:line="80" pos:column="17"/></literal><operator pos:line="80" pos:column="17">)<pos:position pos:line="80" pos:column="18"/></operator></expr>;<pos:position pos:line="80" pos:column="19"/></return>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name pos:line="83" pos:column="9">status<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">==<pos:position pos:line="83" pos:column="18"/></operator> <literal type="number" pos:line="83" pos:column="19">0<pos:position pos:line="83" pos:column="20"/></literal></expr>)<pos:position pos:line="83" pos:column="21"/></condition><then pos:line="83" pos:column="21"> <comment type="block" pos:line="83" pos:column="22">/* timeout */</comment>
    <block pos:line="84" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="85" pos:column="7">DEBUG<pos:position pos:line="85" pos:column="12"/></name><argument_list pos:line="85" pos:column="12">(<argument><expr><literal type="string" pos:line="85" pos:column="13">"timeout reached."<pos:position pos:line="85" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="33"/></expr_stmt>
      <break pos:line="86" pos:column="7">break;<pos:position pos:line="86" pos:column="13"/></break>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="89" pos:column="5">memset<pos:position pos:line="89" pos:column="11"/></name><argument_list pos:line="89" pos:column="11">(<argument><expr><operator pos:line="89" pos:column="12">&amp;<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="13">res<pos:position pos:line="89" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="89" pos:column="18">'\0'<pos:position pos:line="89" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="89" pos:column="24">sizeof<argument_list pos:line="89" pos:column="30">(<argument><expr><name pos:line="89" pos:column="31">res<pos:position pos:line="89" pos:column="34"/></name></expr></argument>)<pos:position pos:line="89" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="89" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="90" pos:column="5">status<pos:position pos:line="90" pos:column="11"/></name> <operator pos:line="90" pos:column="12">=<pos:position pos:line="90" pos:column="13"/></operator> <call><name pos:line="90" pos:column="14">recv<pos:position pos:line="90" pos:column="18"/></name><argument_list pos:line="90" pos:column="18">(<argument><expr><name pos:line="90" pos:column="19">sd<pos:position pos:line="90" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="23">(<pos:position pos:line="90" pos:column="24"/></operator><name pos:line="90" pos:column="24">void<pos:position pos:line="90" pos:column="28"/></name> <operator pos:line="90" pos:column="29">*<pos:position pos:line="90" pos:column="30"/></operator><operator pos:line="90" pos:column="30">)<pos:position pos:line="90" pos:column="31"/></operator><operator pos:line="90" pos:column="31">&amp;<pos:position pos:line="90" pos:column="36"/></operator><name pos:line="90" pos:column="32">res<pos:position pos:line="90" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="37">sizeof<argument_list pos:line="90" pos:column="43">(<argument><expr><name pos:line="90" pos:column="44">res<pos:position pos:line="90" pos:column="47"/></name></expr></argument>)<pos:position pos:line="90" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="50">0<pos:position pos:line="90" pos:column="51"/></literal></expr></argument> <comment type="block" pos:line="90" pos:column="52">/* no flags */</comment>)<pos:position pos:line="90" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="68"/></expr_stmt>

    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><operator pos:line="92" pos:column="9">(<pos:position pos:line="92" pos:column="10"/></operator><name pos:line="92" pos:column="10">status<pos:position pos:line="92" pos:column="16"/></name> <operator pos:line="92" pos:column="17">&lt;<pos:position pos:line="92" pos:column="21"/></operator> <literal type="number" pos:line="92" pos:column="19">0<pos:position pos:line="92" pos:column="20"/></literal><operator pos:line="92" pos:column="20">)<pos:position pos:line="92" pos:column="21"/></operator> <operator pos:line="92" pos:column="22">&amp;&amp;<pos:position pos:line="92" pos:column="32"/></operator> <operator pos:line="92" pos:column="25">(<pos:position pos:line="92" pos:column="26"/></operator><operator pos:line="92" pos:column="26">(<pos:position pos:line="92" pos:column="27"/></operator><name pos:line="92" pos:column="27">errno<pos:position pos:line="92" pos:column="32"/></name> <operator pos:line="92" pos:column="33">==<pos:position pos:line="92" pos:column="35"/></operator> <name pos:line="92" pos:column="36">EAGAIN<pos:position pos:line="92" pos:column="42"/></name><operator pos:line="92" pos:column="42">)<pos:position pos:line="92" pos:column="43"/></operator> <operator pos:line="92" pos:column="44">||<pos:position pos:line="92" pos:column="46"/></operator> <operator pos:line="92" pos:column="47">(<pos:position pos:line="92" pos:column="48"/></operator><name pos:line="92" pos:column="48">errno<pos:position pos:line="92" pos:column="53"/></name> <operator pos:line="92" pos:column="54">==<pos:position pos:line="92" pos:column="56"/></operator> <name pos:line="92" pos:column="57">EINTR<pos:position pos:line="92" pos:column="62"/></name><operator pos:line="92" pos:column="62">)<pos:position pos:line="92" pos:column="63"/></operator><operator pos:line="92" pos:column="63">)<pos:position pos:line="92" pos:column="64"/></operator></expr>)<pos:position pos:line="92" pos:column="65"/></condition><then pos:line="92" pos:column="65">
      <block type="pseudo"><continue pos:line="93" pos:column="7">continue;<pos:position pos:line="93" pos:column="16"/></continue></block></then></if>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name pos:line="95" pos:column="9">status<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">&lt;<pos:position pos:line="95" pos:column="20"/></operator> <literal type="number" pos:line="95" pos:column="18">0<pos:position pos:line="95" pos:column="19"/></literal></expr>)<pos:position pos:line="95" pos:column="20"/></condition><then pos:line="95" pos:column="20"> <block pos:line="95" pos:column="21">{
      <decl_stmt><decl><type><name pos:line="96" pos:column="7">char<pos:position pos:line="96" pos:column="11"/></name></type> <name><name pos:line="96" pos:column="12">errbuf<pos:position pos:line="96" pos:column="18"/></name><index pos:line="96" pos:column="18">[<expr><literal type="number" pos:line="96" pos:column="19">1024<pos:position pos:line="96" pos:column="23"/></literal></expr>]<pos:position pos:line="96" pos:column="24"/></index></name></decl>;<pos:position pos:line="96" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">INFO<pos:position pos:line="97" pos:column="11"/></name><argument_list pos:line="97" pos:column="11">(<argument><expr><literal type="string" pos:line="97" pos:column="12">"recv(2) failed: %s"<pos:position pos:line="97" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name pos:line="97" pos:column="34">sstrerror<pos:position pos:line="97" pos:column="43"/></name><argument_list pos:line="97" pos:column="43">(<argument><expr><name pos:line="97" pos:column="44">errno<pos:position pos:line="97" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="51">errbuf<pos:position pos:line="97" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="59">sizeof<argument_list pos:line="97" pos:column="65">(<argument><expr><name pos:line="97" pos:column="66">errbuf<pos:position pos:line="97" pos:column="72"/></name></expr></argument>)<pos:position pos:line="97" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">DEBUG<pos:position pos:line="98" pos:column="12"/></name><argument_list pos:line="98" pos:column="12">(<argument><expr><literal type="string" pos:line="98" pos:column="13">"Closing socket #%i"<pos:position pos:line="98" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="35">sd<pos:position pos:line="98" pos:column="37"/></name></expr></argument>)<pos:position pos:line="98" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="99" pos:column="7">close<pos:position pos:line="99" pos:column="12"/></name><argument_list pos:line="99" pos:column="12">(<argument><expr><name pos:line="99" pos:column="13">sd<pos:position pos:line="99" pos:column="15"/></name></expr></argument>)<pos:position pos:line="99" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="100" pos:column="7">sock_descr<pos:position pos:line="100" pos:column="17"/></name> <operator pos:line="100" pos:column="18">=<pos:position pos:line="100" pos:column="19"/></operator> <name pos:line="100" pos:column="20">sd<pos:position pos:line="100" pos:column="22"/></name> <operator pos:line="100" pos:column="23">=<pos:position pos:line="100" pos:column="24"/></operator> <operator pos:line="100" pos:column="25">-<pos:position pos:line="100" pos:column="26"/></operator><literal type="number" pos:line="100" pos:column="26">1<pos:position pos:line="100" pos:column="27"/></literal></expr>;<pos:position pos:line="100" pos:column="28"/></expr_stmt>
      <return pos:line="101" pos:column="7">return <expr><operator pos:line="101" pos:column="14">(<pos:position pos:line="101" pos:column="15"/></operator><operator pos:line="101" pos:column="15">-<pos:position pos:line="101" pos:column="16"/></operator><literal type="number" pos:line="101" pos:column="16">1<pos:position pos:line="101" pos:column="17"/></literal><operator pos:line="101" pos:column="17">)<pos:position pos:line="101" pos:column="18"/></operator></expr>;<pos:position pos:line="101" pos:column="19"/></return>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="104" pos:column="5">DEBUG<pos:position pos:line="104" pos:column="10"/></name><argument_list pos:line="104" pos:column="10">(<argument><expr><literal type="string" pos:line="104" pos:column="11">"recv'd %i bytes"<pos:position pos:line="104" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="30">status<pos:position pos:line="104" pos:column="36"/></name></expr></argument>)<pos:position pos:line="104" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="106" pos:column="5">/*
     * Do some sanity checks first
     */</comment>
    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><name pos:line="109" pos:column="9">status<pos:position pos:line="109" pos:column="15"/></name> <operator pos:line="109" pos:column="16">&lt;<pos:position pos:line="109" pos:column="20"/></operator> <name pos:line="109" pos:column="18">RESP_HEADER_SIZE<pos:position pos:line="109" pos:column="34"/></name></expr>)<pos:position pos:line="109" pos:column="35"/></condition><then pos:line="109" pos:column="35"> <block pos:line="109" pos:column="36">{
      <expr_stmt><expr><call><name pos:line="110" pos:column="7">WARNING<pos:position pos:line="110" pos:column="14"/></name><argument_list pos:line="110" pos:column="14">(<argument><expr><literal type="string" pos:line="110" pos:column="15">"ntpd plugin: Short (%i bytes) packet received"<pos:position pos:line="110" pos:column="62"/></literal></expr></argument>, <argument><expr><operator pos:line="110" pos:column="64">(<pos:position pos:line="110" pos:column="65"/></operator><name pos:line="110" pos:column="65">int<pos:position pos:line="110" pos:column="68"/></name><operator pos:line="110" pos:column="68">)<pos:position pos:line="110" pos:column="69"/></operator><name pos:line="110" pos:column="69">status<pos:position pos:line="110" pos:column="75"/></name></expr></argument>)<pos:position pos:line="110" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="77"/></expr_stmt>
      <continue pos:line="111" pos:column="7">continue;<pos:position pos:line="111" pos:column="16"/></continue>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>
    <if pos:line="113" pos:column="5">if <condition pos:line="113" pos:column="8">(<expr><call><name pos:line="113" pos:column="9">INFO_MODE<pos:position pos:line="113" pos:column="18"/></name><argument_list pos:line="113" pos:column="18">(<argument><expr><name><name pos:line="113" pos:column="19">res<pos:position pos:line="113" pos:column="22"/></name><operator pos:line="113" pos:column="22">.<pos:position pos:line="113" pos:column="23"/></operator><name pos:line="113" pos:column="23">rm_vn_mode<pos:position pos:line="113" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="34"/></argument_list></call> <operator pos:line="113" pos:column="35">!=<pos:position pos:line="113" pos:column="37"/></operator> <name pos:line="113" pos:column="38">MODE_PRIVATE<pos:position pos:line="113" pos:column="50"/></name></expr>)<pos:position pos:line="113" pos:column="51"/></condition><then pos:line="113" pos:column="51"> <block pos:line="113" pos:column="52">{
      <expr_stmt><expr><call><name pos:line="114" pos:column="7">NOTICE<pos:position pos:line="114" pos:column="13"/></name><argument_list pos:line="114" pos:column="13">(<argument><expr><literal type="string" pos:line="114" pos:column="14">"ntpd plugin: Packet received with mode %i"<pos:position pos:line="114" pos:column="57"/></literal></expr></argument>,
             <argument><expr><call><name pos:line="115" pos:column="14">INFO_MODE<pos:position pos:line="115" pos:column="23"/></name><argument_list pos:line="115" pos:column="23">(<argument><expr><name><name pos:line="115" pos:column="24">res<pos:position pos:line="115" pos:column="27"/></name><operator pos:line="115" pos:column="27">.<pos:position pos:line="115" pos:column="28"/></operator><name pos:line="115" pos:column="28">rm_vn_mode<pos:position pos:line="115" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="115" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="41"/></expr_stmt>
      <continue pos:line="116" pos:column="7">continue;<pos:position pos:line="116" pos:column="16"/></continue>
    }<pos:position pos:line="117" pos:column="6"/></block></then></if>
    <if pos:line="118" pos:column="5">if <condition pos:line="118" pos:column="8">(<expr><call><name pos:line="118" pos:column="9">INFO_IS_AUTH<pos:position pos:line="118" pos:column="21"/></name><argument_list pos:line="118" pos:column="21">(<argument><expr><name><name pos:line="118" pos:column="22">res<pos:position pos:line="118" pos:column="25"/></name><operator pos:line="118" pos:column="25">.<pos:position pos:line="118" pos:column="26"/></operator><name pos:line="118" pos:column="26">auth_seq<pos:position pos:line="118" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="36"/></condition><then pos:line="118" pos:column="36"> <block pos:line="118" pos:column="37">{
      <expr_stmt><expr><call><name pos:line="119" pos:column="7">NOTICE<pos:position pos:line="119" pos:column="13"/></name><argument_list pos:line="119" pos:column="13">(<argument><expr><literal type="string" pos:line="119" pos:column="14">"ntpd plugin: Encrypted packet received"<pos:position pos:line="119" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="56"/></expr_stmt>
      <continue pos:line="120" pos:column="7">continue;<pos:position pos:line="120" pos:column="16"/></continue>
    }<pos:position pos:line="121" pos:column="6"/></block></then></if>
    <if pos:line="122" pos:column="5">if <condition pos:line="122" pos:column="8">(<expr><operator pos:line="122" pos:column="9">!<pos:position pos:line="122" pos:column="10"/></operator><call><name pos:line="122" pos:column="10">ISRESPONSE<pos:position pos:line="122" pos:column="20"/></name><argument_list pos:line="122" pos:column="20">(<argument><expr><name><name pos:line="122" pos:column="21">res<pos:position pos:line="122" pos:column="24"/></name><operator pos:line="122" pos:column="24">.<pos:position pos:line="122" pos:column="25"/></operator><name pos:line="122" pos:column="25">rm_vn_mode<pos:position pos:line="122" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="37"/></condition><then pos:line="122" pos:column="37"> <block pos:line="122" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="123" pos:column="7">NOTICE<pos:position pos:line="123" pos:column="13"/></name><argument_list pos:line="123" pos:column="13">(<argument><expr><literal type="string" pos:line="123" pos:column="14">"ntpd plugin: Received request packet, "<pos:position pos:line="123" pos:column="54"/></literal>
             <literal type="string" pos:line="124" pos:column="14">"wanted response"<pos:position pos:line="124" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="33"/></expr_stmt>
      <continue pos:line="125" pos:column="7">continue;<pos:position pos:line="125" pos:column="16"/></continue>
    }<pos:position pos:line="126" pos:column="6"/></block></then></if>
    <if pos:line="127" pos:column="5">if <condition pos:line="127" pos:column="8">(<expr><call><name pos:line="127" pos:column="9">INFO_MBZ<pos:position pos:line="127" pos:column="17"/></name><argument_list pos:line="127" pos:column="17">(<argument><expr><name><name pos:line="127" pos:column="18">res<pos:position pos:line="127" pos:column="21"/></name><operator pos:line="127" pos:column="21">.<pos:position pos:line="127" pos:column="22"/></operator><name pos:line="127" pos:column="22">mbz_itemsize<pos:position pos:line="127" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="36"/></condition><then pos:line="127" pos:column="36"> <block pos:line="127" pos:column="37">{
      <expr_stmt><expr><call><name pos:line="128" pos:column="7">WARNING<pos:position pos:line="128" pos:column="14"/></name><argument_list pos:line="128" pos:column="14">(<argument><expr><literal type="string" pos:line="128" pos:column="15">"ntpd plugin: Received packet with nonzero "<pos:position pos:line="128" pos:column="59"/></literal>
              <literal type="string" pos:line="129" pos:column="15">"MBZ field!"<pos:position pos:line="129" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="29"/></expr_stmt>
      <continue pos:line="130" pos:column="7">continue;<pos:position pos:line="130" pos:column="16"/></continue>
    }<pos:position pos:line="131" pos:column="6"/></block></then></if>
    <if pos:line="132" pos:column="5">if <condition pos:line="132" pos:column="8">(<expr><name><name pos:line="132" pos:column="9">res<pos:position pos:line="132" pos:column="12"/></name><operator pos:line="132" pos:column="12">.<pos:position pos:line="132" pos:column="13"/></operator><name pos:line="132" pos:column="13">implementation<pos:position pos:line="132" pos:column="27"/></name></name> <operator pos:line="132" pos:column="28">!=<pos:position pos:line="132" pos:column="30"/></operator> <name pos:line="132" pos:column="31">IMPL_XNTPD<pos:position pos:line="132" pos:column="41"/></name></expr>)<pos:position pos:line="132" pos:column="42"/></condition><then pos:line="132" pos:column="42"> <block pos:line="132" pos:column="43">{
      <expr_stmt><expr><call><name pos:line="133" pos:column="7">WARNING<pos:position pos:line="133" pos:column="14"/></name><argument_list pos:line="133" pos:column="14">(<argument><expr><literal type="string" pos:line="133" pos:column="15">"ntpd plugin: Asked for request of type %i, "<pos:position pos:line="133" pos:column="60"/></literal>
              <literal type="string" pos:line="134" pos:column="15">"got %i"<pos:position pos:line="134" pos:column="23"/></literal></expr></argument>,
              <argument><expr><operator pos:line="135" pos:column="15">(<pos:position pos:line="135" pos:column="16"/></operator><name pos:line="135" pos:column="16">int<pos:position pos:line="135" pos:column="19"/></name><operator pos:line="135" pos:column="19">)<pos:position pos:line="135" pos:column="20"/></operator><name pos:line="135" pos:column="20">IMPL_XNTPD<pos:position pos:line="135" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="135" pos:column="32">(<pos:position pos:line="135" pos:column="33"/></operator><name pos:line="135" pos:column="33">int<pos:position pos:line="135" pos:column="36"/></name><operator pos:line="135" pos:column="36">)<pos:position pos:line="135" pos:column="37"/></operator><name><name pos:line="135" pos:column="37">res<pos:position pos:line="135" pos:column="40"/></name><operator pos:line="135" pos:column="40">.<pos:position pos:line="135" pos:column="41"/></operator><name pos:line="135" pos:column="41">implementation<pos:position pos:line="135" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="57"/></expr_stmt>
      <continue pos:line="136" pos:column="7">continue;<pos:position pos:line="136" pos:column="16"/></continue>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="139" pos:column="5">/* Check for error code */</comment>
    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><call><name pos:line="140" pos:column="9">INFO_ERR<pos:position pos:line="140" pos:column="17"/></name><argument_list pos:line="140" pos:column="17">(<argument><expr><name><name pos:line="140" pos:column="18">res<pos:position pos:line="140" pos:column="21"/></name><operator pos:line="140" pos:column="21">.<pos:position pos:line="140" pos:column="22"/></operator><name pos:line="140" pos:column="22">err_nitems<pos:position pos:line="140" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="33"/></argument_list></call> <operator pos:line="140" pos:column="34">!=<pos:position pos:line="140" pos:column="36"/></operator> <literal type="number" pos:line="140" pos:column="37">0<pos:position pos:line="140" pos:column="38"/></literal></expr>)<pos:position pos:line="140" pos:column="39"/></condition><then pos:line="140" pos:column="39"> <block pos:line="140" pos:column="40">{
      <expr_stmt><expr><call><name pos:line="141" pos:column="7">ERROR<pos:position pos:line="141" pos:column="12"/></name><argument_list pos:line="141" pos:column="12">(<argument><expr><literal type="string" pos:line="141" pos:column="13">"ntpd plugin: Received error code %i"<pos:position pos:line="141" pos:column="50"/></literal></expr></argument>,
            <argument><expr><operator pos:line="142" pos:column="13">(<pos:position pos:line="142" pos:column="14"/></operator><name pos:line="142" pos:column="14">int<pos:position pos:line="142" pos:column="17"/></name><operator pos:line="142" pos:column="17">)<pos:position pos:line="142" pos:column="18"/></operator><call><name pos:line="142" pos:column="18">INFO_ERR<pos:position pos:line="142" pos:column="26"/></name><argument_list pos:line="142" pos:column="26">(<argument><expr><name><name pos:line="142" pos:column="27">res<pos:position pos:line="142" pos:column="30"/></name><operator pos:line="142" pos:column="30">.<pos:position pos:line="142" pos:column="31"/></operator><name pos:line="142" pos:column="31">err_nitems<pos:position pos:line="142" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="142" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="44"/></expr_stmt>
      <return pos:line="143" pos:column="7">return <expr><operator pos:line="143" pos:column="14">(<pos:position pos:line="143" pos:column="15"/></operator><operator pos:line="143" pos:column="15">(<pos:position pos:line="143" pos:column="16"/></operator><name pos:line="143" pos:column="16">int<pos:position pos:line="143" pos:column="19"/></name><operator pos:line="143" pos:column="19">)<pos:position pos:line="143" pos:column="20"/></operator><call><name pos:line="143" pos:column="20">INFO_ERR<pos:position pos:line="143" pos:column="28"/></name><argument_list pos:line="143" pos:column="28">(<argument><expr><name><name pos:line="143" pos:column="29">res<pos:position pos:line="143" pos:column="32"/></name><operator pos:line="143" pos:column="32">.<pos:position pos:line="143" pos:column="33"/></operator><name pos:line="143" pos:column="33">err_nitems<pos:position pos:line="143" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="143" pos:column="44"/></argument_list></call><operator pos:line="143" pos:column="44">)<pos:position pos:line="143" pos:column="45"/></operator></expr>;<pos:position pos:line="143" pos:column="46"/></return>
    }<pos:position pos:line="144" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="146" pos:column="5">/* extract number of items in this packet and the size of these items */</comment>
    <expr_stmt><expr><name pos:line="147" pos:column="5">pkt_item_num<pos:position pos:line="147" pos:column="17"/></name> <operator pos:line="147" pos:column="18">=<pos:position pos:line="147" pos:column="19"/></operator> <call><name pos:line="147" pos:column="20">INFO_NITEMS<pos:position pos:line="147" pos:column="31"/></name><argument_list pos:line="147" pos:column="31">(<argument><expr><name><name pos:line="147" pos:column="32">res<pos:position pos:line="147" pos:column="35"/></name><operator pos:line="147" pos:column="35">.<pos:position pos:line="147" pos:column="36"/></operator><name pos:line="147" pos:column="36">err_nitems<pos:position pos:line="147" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="148" pos:column="5">pkt_item_len<pos:position pos:line="148" pos:column="17"/></name> <operator pos:line="148" pos:column="18">=<pos:position pos:line="148" pos:column="19"/></operator> <call><name pos:line="148" pos:column="20">INFO_ITEMSIZE<pos:position pos:line="148" pos:column="33"/></name><argument_list pos:line="148" pos:column="33">(<argument><expr><name><name pos:line="148" pos:column="34">res<pos:position pos:line="148" pos:column="37"/></name><operator pos:line="148" pos:column="37">.<pos:position pos:line="148" pos:column="38"/></operator><name pos:line="148" pos:column="38">mbz_itemsize<pos:position pos:line="148" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="149" pos:column="5">DEBUG<pos:position pos:line="149" pos:column="10"/></name><argument_list pos:line="149" pos:column="10">(<argument><expr><literal type="string" pos:line="149" pos:column="11">"pkt_item_num = %i; pkt_item_len = %i;"<pos:position pos:line="149" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="149" pos:column="52">pkt_item_num<pos:position pos:line="149" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="66">pkt_item_len<pos:position pos:line="149" pos:column="78"/></name></expr></argument>)<pos:position pos:line="149" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="80"/></expr_stmt>

    <comment type="block" pos:line="151" pos:column="5">/* Check if the reported items fit in the packet */</comment>
    <if pos:line="152" pos:column="5">if <condition pos:line="152" pos:column="8">(<expr><operator pos:line="152" pos:column="9">(<pos:position pos:line="152" pos:column="10"/></operator><name pos:line="152" pos:column="10">pkt_item_num<pos:position pos:line="152" pos:column="22"/></name> <operator pos:line="152" pos:column="23">*<pos:position pos:line="152" pos:column="24"/></operator> <name pos:line="152" pos:column="25">pkt_item_len<pos:position pos:line="152" pos:column="37"/></name><operator pos:line="152" pos:column="37">)<pos:position pos:line="152" pos:column="38"/></operator> <operator pos:line="152" pos:column="39">&gt;<pos:position pos:line="152" pos:column="43"/></operator> <operator pos:line="152" pos:column="41">(<pos:position pos:line="152" pos:column="42"/></operator><name pos:line="152" pos:column="42">status<pos:position pos:line="152" pos:column="48"/></name> <operator pos:line="152" pos:column="49">-<pos:position pos:line="152" pos:column="50"/></operator> <name pos:line="152" pos:column="51">RESP_HEADER_SIZE<pos:position pos:line="152" pos:column="67"/></name><operator pos:line="152" pos:column="67">)<pos:position pos:line="152" pos:column="68"/></operator></expr>)<pos:position pos:line="152" pos:column="69"/></condition><then pos:line="152" pos:column="69"> <block pos:line="152" pos:column="70">{
      <expr_stmt><expr><call><name pos:line="153" pos:column="7">ERROR<pos:position pos:line="153" pos:column="12"/></name><argument_list pos:line="153" pos:column="12">(<argument><expr><literal type="string" pos:line="153" pos:column="13">"ntpd plugin: %i items * %i bytes &gt; "<pos:position pos:line="153" pos:column="53"/></literal>
            <literal type="string" pos:line="154" pos:column="13">"%i bytes - %i bytes header"<pos:position pos:line="154" pos:column="41"/></literal></expr></argument>,
            <argument><expr><operator pos:line="155" pos:column="13">(<pos:position pos:line="155" pos:column="14"/></operator><name pos:line="155" pos:column="14">int<pos:position pos:line="155" pos:column="17"/></name><operator pos:line="155" pos:column="17">)<pos:position pos:line="155" pos:column="18"/></operator><name pos:line="155" pos:column="18">pkt_item_num<pos:position pos:line="155" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="155" pos:column="32">(<pos:position pos:line="155" pos:column="33"/></operator><name pos:line="155" pos:column="33">int<pos:position pos:line="155" pos:column="36"/></name><operator pos:line="155" pos:column="36">)<pos:position pos:line="155" pos:column="37"/></operator><name pos:line="155" pos:column="37">pkt_item_len<pos:position pos:line="155" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="155" pos:column="51">(<pos:position pos:line="155" pos:column="52"/></operator><name pos:line="155" pos:column="52">int<pos:position pos:line="155" pos:column="55"/></name><operator pos:line="155" pos:column="55">)<pos:position pos:line="155" pos:column="56"/></operator><name pos:line="155" pos:column="56">status<pos:position pos:line="155" pos:column="62"/></name></expr></argument>,
            <argument><expr><operator pos:line="156" pos:column="13">(<pos:position pos:line="156" pos:column="14"/></operator><name pos:line="156" pos:column="14">int<pos:position pos:line="156" pos:column="17"/></name><operator pos:line="156" pos:column="17">)<pos:position pos:line="156" pos:column="18"/></operator><name pos:line="156" pos:column="18">RESP_HEADER_SIZE<pos:position pos:line="156" pos:column="34"/></name></expr></argument>)<pos:position pos:line="156" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="36"/></expr_stmt>
      <continue pos:line="157" pos:column="7">continue;<pos:position pos:line="157" pos:column="16"/></continue>
    }<pos:position pos:line="158" pos:column="6"/></block></then></if>

    <if pos:line="160" pos:column="5">if <condition pos:line="160" pos:column="8">(<expr><name pos:line="160" pos:column="9">pkt_item_len<pos:position pos:line="160" pos:column="21"/></name> <operator pos:line="160" pos:column="22">&gt;<pos:position pos:line="160" pos:column="26"/></operator> <name pos:line="160" pos:column="24">res_item_size<pos:position pos:line="160" pos:column="37"/></name></expr>)<pos:position pos:line="160" pos:column="38"/></condition><then pos:line="160" pos:column="38"> <block pos:line="160" pos:column="39">{
      <expr_stmt><expr><call><name pos:line="161" pos:column="7">ERROR<pos:position pos:line="161" pos:column="12"/></name><argument_list pos:line="161" pos:column="12">(<argument><expr><literal type="string" pos:line="161" pos:column="13">"ntpd plugin: (pkt_item_len = %i) "<pos:position pos:line="161" pos:column="48"/></literal>
            <literal type="string" pos:line="162" pos:column="13">"&gt;= (res_item_size = %i)"<pos:position pos:line="162" pos:column="41"/></literal></expr></argument>,
            <argument><expr><name pos:line="163" pos:column="13">pkt_item_len<pos:position pos:line="163" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="27">res_item_size<pos:position pos:line="163" pos:column="40"/></name></expr></argument>)<pos:position pos:line="163" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="42"/></expr_stmt>
      <continue pos:line="164" pos:column="7">continue;<pos:position pos:line="164" pos:column="16"/></continue>
    }<pos:position pos:line="165" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="167" pos:column="5">/* If this is the first packet (time wise, not sequence wise),
     * set `res_size'. If it's not the first packet check if the
     * items have the same size. Discard invalid packets. */</comment>
    <if pos:line="170" pos:column="5">if <condition pos:line="170" pos:column="8">(<expr><name pos:line="170" pos:column="9">items_num<pos:position pos:line="170" pos:column="18"/></name> <operator pos:line="170" pos:column="19">==<pos:position pos:line="170" pos:column="21"/></operator> <literal type="number" pos:line="170" pos:column="22">0<pos:position pos:line="170" pos:column="23"/></literal></expr>)<pos:position pos:line="170" pos:column="24"/></condition><then pos:line="170" pos:column="24"> <comment type="block" pos:line="170" pos:column="25">/* first packet */</comment>
    <block pos:line="171" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="172" pos:column="7">DEBUG<pos:position pos:line="172" pos:column="12"/></name><argument_list pos:line="172" pos:column="12">(<argument><expr><literal type="string" pos:line="172" pos:column="13">"*res_size = %i"<pos:position pos:line="172" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="172" pos:column="31">pkt_item_len<pos:position pos:line="172" pos:column="43"/></name></expr></argument>)<pos:position pos:line="172" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="173" pos:column="7">*<pos:position pos:line="173" pos:column="8"/></operator><name pos:line="173" pos:column="8">res_size<pos:position pos:line="173" pos:column="16"/></name> <operator pos:line="173" pos:column="17">=<pos:position pos:line="173" pos:column="18"/></operator> <name pos:line="173" pos:column="19">pkt_item_len<pos:position pos:line="173" pos:column="31"/></name></expr>;<pos:position pos:line="173" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="174" pos:column="6"/></block></then> <elseif pos:line="174" pos:column="7">else <if pos:line="174" pos:column="12">if <condition pos:line="174" pos:column="15">(<expr><operator pos:line="174" pos:column="16">*<pos:position pos:line="174" pos:column="17"/></operator><name pos:line="174" pos:column="17">res_size<pos:position pos:line="174" pos:column="25"/></name> <operator pos:line="174" pos:column="26">!=<pos:position pos:line="174" pos:column="28"/></operator> <name pos:line="174" pos:column="29">pkt_item_len<pos:position pos:line="174" pos:column="41"/></name></expr>)<pos:position pos:line="174" pos:column="42"/></condition><then pos:line="174" pos:column="42"> <block pos:line="174" pos:column="43">{
      <expr_stmt><expr><call><name pos:line="175" pos:column="7">DEBUG<pos:position pos:line="175" pos:column="12"/></name><argument_list pos:line="175" pos:column="12">(<argument><expr><literal type="string" pos:line="175" pos:column="13">"Error: *res_size = %i; pkt_item_len = %i;"<pos:position pos:line="175" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="175" pos:column="58">*<pos:position pos:line="175" pos:column="59"/></operator><name pos:line="175" pos:column="59">res_size<pos:position pos:line="175" pos:column="67"/></name></expr></argument>,
            <argument><expr><name pos:line="176" pos:column="13">pkt_item_len<pos:position pos:line="176" pos:column="25"/></name></expr></argument>)<pos:position pos:line="176" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="177" pos:column="7">ERROR<pos:position pos:line="177" pos:column="12"/></name><argument_list pos:line="177" pos:column="12">(<argument><expr><literal type="string" pos:line="177" pos:column="13">"Item sizes differ."<pos:position pos:line="177" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="35"/></expr_stmt>
      <continue pos:line="178" pos:column="7">continue;<pos:position pos:line="178" pos:column="16"/></continue>
    }<pos:position pos:line="179" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="181" pos:column="5">/*
     * Because the items in the packet may be smaller than the
     * items requested, the following holds true:
     */</comment>
    <expr_stmt><expr><call><name pos:line="185" pos:column="5">assert<pos:position pos:line="185" pos:column="11"/></name><argument_list pos:line="185" pos:column="11">(<argument><expr><operator pos:line="185" pos:column="12">(<pos:position pos:line="185" pos:column="13"/></operator><operator pos:line="185" pos:column="13">*<pos:position pos:line="185" pos:column="14"/></operator><name pos:line="185" pos:column="14">res_size<pos:position pos:line="185" pos:column="22"/></name> <operator pos:line="185" pos:column="23">==<pos:position pos:line="185" pos:column="25"/></operator> <name pos:line="185" pos:column="26">pkt_item_len<pos:position pos:line="185" pos:column="38"/></name><operator pos:line="185" pos:column="38">)<pos:position pos:line="185" pos:column="39"/></operator> <operator pos:line="185" pos:column="40">&amp;&amp;<pos:position pos:line="185" pos:column="50"/></operator> <operator pos:line="185" pos:column="43">(<pos:position pos:line="185" pos:column="44"/></operator><name pos:line="185" pos:column="44">pkt_item_len<pos:position pos:line="185" pos:column="56"/></name> <operator pos:line="185" pos:column="57">&lt;=<pos:position pos:line="185" pos:column="62"/></operator> <name pos:line="185" pos:column="60">res_item_size<pos:position pos:line="185" pos:column="73"/></name><operator pos:line="185" pos:column="73">)<pos:position pos:line="185" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="185" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="76"/></expr_stmt>

    <comment type="block" pos:line="187" pos:column="5">/* Calculate the padding. No idea why there might be any padding.. */</comment>
    <expr_stmt><expr><name pos:line="188" pos:column="5">pkt_padding<pos:position pos:line="188" pos:column="16"/></name> <operator pos:line="188" pos:column="17">=<pos:position pos:line="188" pos:column="18"/></operator> <literal type="number" pos:line="188" pos:column="19">0<pos:position pos:line="188" pos:column="20"/></literal></expr>;<pos:position pos:line="188" pos:column="21"/></expr_stmt>
    <if pos:line="189" pos:column="5">if <condition pos:line="189" pos:column="8">(<expr><name pos:line="189" pos:column="9">pkt_item_len<pos:position pos:line="189" pos:column="21"/></name> <operator pos:line="189" pos:column="22">&lt;<pos:position pos:line="189" pos:column="26"/></operator> <name pos:line="189" pos:column="24">res_item_size<pos:position pos:line="189" pos:column="37"/></name></expr>)<pos:position pos:line="189" pos:column="38"/></condition><then pos:line="189" pos:column="38">
      <block type="pseudo"><expr_stmt><expr><name pos:line="190" pos:column="7">pkt_padding<pos:position pos:line="190" pos:column="18"/></name> <operator pos:line="190" pos:column="19">=<pos:position pos:line="190" pos:column="20"/></operator> <name pos:line="190" pos:column="21">res_item_size<pos:position pos:line="190" pos:column="34"/></name> <operator pos:line="190" pos:column="35">-<pos:position pos:line="190" pos:column="36"/></operator> <name pos:line="190" pos:column="37">pkt_item_len<pos:position pos:line="190" pos:column="49"/></name></expr>;<pos:position pos:line="190" pos:column="50"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="191" pos:column="5">DEBUG<pos:position pos:line="191" pos:column="10"/></name><argument_list pos:line="191" pos:column="10">(<argument><expr><literal type="string" pos:line="191" pos:column="11">"res_item_size = %i; pkt_padding = %zi;"<pos:position pos:line="191" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="53">res_item_size<pos:position pos:line="191" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="68">pkt_padding<pos:position pos:line="191" pos:column="79"/></name></expr></argument>)<pos:position pos:line="191" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="81"/></expr_stmt>

    <comment type="block" pos:line="193" pos:column="5">/* Extract the sequence number */</comment>
    <expr_stmt><expr><name pos:line="194" pos:column="5">pkt_sequence<pos:position pos:line="194" pos:column="17"/></name> <operator pos:line="194" pos:column="18">=<pos:position pos:line="194" pos:column="19"/></operator> <call><name pos:line="194" pos:column="20">INFO_SEQ<pos:position pos:line="194" pos:column="28"/></name><argument_list pos:line="194" pos:column="28">(<argument><expr><name><name pos:line="194" pos:column="29">res<pos:position pos:line="194" pos:column="32"/></name><operator pos:line="194" pos:column="32">.<pos:position pos:line="194" pos:column="33"/></operator><name pos:line="194" pos:column="33">auth_seq<pos:position pos:line="194" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="194" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="43"/></expr_stmt>
    <if pos:line="195" pos:column="5">if <condition pos:line="195" pos:column="8">(<expr><operator pos:line="195" pos:column="9">(<pos:position pos:line="195" pos:column="10"/></operator><name pos:line="195" pos:column="10">pkt_sequence<pos:position pos:line="195" pos:column="22"/></name> <operator pos:line="195" pos:column="23">&lt;<pos:position pos:line="195" pos:column="27"/></operator> <literal type="number" pos:line="195" pos:column="25">0<pos:position pos:line="195" pos:column="26"/></literal><operator pos:line="195" pos:column="26">)<pos:position pos:line="195" pos:column="27"/></operator> <operator pos:line="195" pos:column="28">||<pos:position pos:line="195" pos:column="30"/></operator> <operator pos:line="195" pos:column="31">(<pos:position pos:line="195" pos:column="32"/></operator><name pos:line="195" pos:column="32">pkt_sequence<pos:position pos:line="195" pos:column="44"/></name> <operator pos:line="195" pos:column="45">&gt;<pos:position pos:line="195" pos:column="49"/></operator> <name pos:line="195" pos:column="47">MAXSEQ<pos:position pos:line="195" pos:column="53"/></name><operator pos:line="195" pos:column="53">)<pos:position pos:line="195" pos:column="54"/></operator></expr>)<pos:position pos:line="195" pos:column="55"/></condition><then pos:line="195" pos:column="55"> <block pos:line="195" pos:column="56">{
      <expr_stmt><expr><call><name pos:line="196" pos:column="7">ERROR<pos:position pos:line="196" pos:column="12"/></name><argument_list pos:line="196" pos:column="12">(<argument><expr><literal type="string" pos:line="196" pos:column="13">"ntpd plugin: Received packet with sequence %i"<pos:position pos:line="196" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="196" pos:column="62">pkt_sequence<pos:position pos:line="196" pos:column="74"/></name></expr></argument>)<pos:position pos:line="196" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="76"/></expr_stmt>
      <continue pos:line="197" pos:column="7">continue;<pos:position pos:line="197" pos:column="16"/></continue>
    }<pos:position pos:line="198" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="200" pos:column="5">/* Check if this sequence has been received before. If so, discard it. */</comment>
    <if pos:line="201" pos:column="5">if <condition pos:line="201" pos:column="8">(<expr><name><name pos:line="201" pos:column="9">pkt_recvd<pos:position pos:line="201" pos:column="18"/></name><index pos:line="201" pos:column="18">[<expr><name pos:line="201" pos:column="19">pkt_sequence<pos:position pos:line="201" pos:column="31"/></name></expr>]<pos:position pos:line="201" pos:column="32"/></index></name> <operator pos:line="201" pos:column="33">!=<pos:position pos:line="201" pos:column="35"/></operator> <literal type="char" pos:line="201" pos:column="36">'\0'<pos:position pos:line="201" pos:column="40"/></literal></expr>)<pos:position pos:line="201" pos:column="41"/></condition><then pos:line="201" pos:column="41"> <block pos:line="201" pos:column="42">{
      <expr_stmt><expr><call><name pos:line="202" pos:column="7">NOTICE<pos:position pos:line="202" pos:column="13"/></name><argument_list pos:line="202" pos:column="13">(<argument><expr><literal type="string" pos:line="202" pos:column="14">"ntpd plugin: Sequence %i received twice"<pos:position pos:line="202" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="202" pos:column="57">pkt_sequence<pos:position pos:line="202" pos:column="69"/></name></expr></argument>)<pos:position pos:line="202" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="71"/></expr_stmt>
      <continue pos:line="203" pos:column="7">continue;<pos:position pos:line="203" pos:column="16"/></continue>
    }<pos:position pos:line="204" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="206" pos:column="5">/* If `pkt_lastseq != -1' another packet without `more bit' has
     * been received. */</comment>
    <if pos:line="208" pos:column="5">if <condition pos:line="208" pos:column="8">(<expr><operator pos:line="208" pos:column="9">!<pos:position pos:line="208" pos:column="10"/></operator><call><name pos:line="208" pos:column="10">ISMORE<pos:position pos:line="208" pos:column="16"/></name><argument_list pos:line="208" pos:column="16">(<argument><expr><name><name pos:line="208" pos:column="17">res<pos:position pos:line="208" pos:column="20"/></name><operator pos:line="208" pos:column="20">.<pos:position pos:line="208" pos:column="21"/></operator><name pos:line="208" pos:column="21">rm_vn_mode<pos:position pos:line="208" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="208" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="208" pos:column="33"/></condition><then pos:line="208" pos:column="33"> <block pos:line="208" pos:column="34">{
      <if pos:line="209" pos:column="7">if <condition pos:line="209" pos:column="10">(<expr><name pos:line="209" pos:column="11">pkt_lastseq<pos:position pos:line="209" pos:column="22"/></name> <operator pos:line="209" pos:column="23">!=<pos:position pos:line="209" pos:column="25"/></operator> <operator pos:line="209" pos:column="26">-<pos:position pos:line="209" pos:column="27"/></operator><literal type="number" pos:line="209" pos:column="27">1<pos:position pos:line="209" pos:column="28"/></literal></expr>)<pos:position pos:line="209" pos:column="29"/></condition><then pos:line="209" pos:column="29"> <block pos:line="209" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="210" pos:column="9">ERROR<pos:position pos:line="210" pos:column="14"/></name><argument_list pos:line="210" pos:column="14">(<argument><expr><literal type="string" pos:line="210" pos:column="15">"ntpd plugin: Two packets which both "<pos:position pos:line="210" pos:column="53"/></literal>
              <literal type="string" pos:line="211" pos:column="15">"claim to be the last one in the "<pos:position pos:line="211" pos:column="49"/></literal>
              <literal type="string" pos:line="212" pos:column="15">"sequence have been received."<pos:position pos:line="212" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="47"/></expr_stmt>
        <continue pos:line="213" pos:column="9">continue;<pos:position pos:line="213" pos:column="18"/></continue>
      }<pos:position pos:line="214" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="215" pos:column="7">pkt_lastseq<pos:position pos:line="215" pos:column="18"/></name> <operator pos:line="215" pos:column="19">=<pos:position pos:line="215" pos:column="20"/></operator> <name pos:line="215" pos:column="21">pkt_sequence<pos:position pos:line="215" pos:column="33"/></name></expr>;<pos:position pos:line="215" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="216" pos:column="7">DEBUG<pos:position pos:line="216" pos:column="12"/></name><argument_list pos:line="216" pos:column="12">(<argument><expr><literal type="string" pos:line="216" pos:column="13">"Last sequence = %i;"<pos:position pos:line="216" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="216" pos:column="36">pkt_lastseq<pos:position pos:line="216" pos:column="47"/></name></expr></argument>)<pos:position pos:line="216" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="217" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="219" pos:column="5">/*
     * Enough with the checks. Copy the data now.
     * We start by allocating some more memory.
     */</comment>
    <expr_stmt><expr><call><name pos:line="223" pos:column="5">DEBUG<pos:position pos:line="223" pos:column="10"/></name><argument_list pos:line="223" pos:column="10">(<argument><expr><literal type="string" pos:line="223" pos:column="11">"realloc (%p, %zu)"<pos:position pos:line="223" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="223" pos:column="32">(<pos:position pos:line="223" pos:column="33"/></operator><name pos:line="223" pos:column="33">void<pos:position pos:line="223" pos:column="37"/></name> <operator pos:line="223" pos:column="38">*<pos:position pos:line="223" pos:column="39"/></operator><operator pos:line="223" pos:column="39">)<pos:position pos:line="223" pos:column="40"/></operator><operator pos:line="223" pos:column="40">*<pos:position pos:line="223" pos:column="41"/></operator><name pos:line="223" pos:column="41">res_data<pos:position pos:line="223" pos:column="49"/></name></expr></argument>,
          <argument><expr><operator pos:line="224" pos:column="11">(<pos:position pos:line="224" pos:column="12"/></operator><name pos:line="224" pos:column="12">items_num<pos:position pos:line="224" pos:column="21"/></name> <operator pos:line="224" pos:column="22">+<pos:position pos:line="224" pos:column="23"/></operator> <name pos:line="224" pos:column="24">pkt_item_num<pos:position pos:line="224" pos:column="36"/></name><operator pos:line="224" pos:column="36">)<pos:position pos:line="224" pos:column="37"/></operator> <operator pos:line="224" pos:column="38">*<pos:position pos:line="224" pos:column="39"/></operator> <name pos:line="224" pos:column="40">res_item_size<pos:position pos:line="224" pos:column="53"/></name></expr></argument>)<pos:position pos:line="224" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="225" pos:column="5">items<pos:position pos:line="225" pos:column="10"/></name> <operator pos:line="225" pos:column="11">=<pos:position pos:line="225" pos:column="12"/></operator> <call><name pos:line="225" pos:column="13">realloc<pos:position pos:line="225" pos:column="20"/></name><argument_list pos:line="225" pos:column="20">(<argument><expr><operator pos:line="225" pos:column="21">*<pos:position pos:line="225" pos:column="22"/></operator><name pos:line="225" pos:column="22">res_data<pos:position pos:line="225" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="225" pos:column="32">(<pos:position pos:line="225" pos:column="33"/></operator><name pos:line="225" pos:column="33">items_num<pos:position pos:line="225" pos:column="42"/></name> <operator pos:line="225" pos:column="43">+<pos:position pos:line="225" pos:column="44"/></operator> <name pos:line="225" pos:column="45">pkt_item_num<pos:position pos:line="225" pos:column="57"/></name><operator pos:line="225" pos:column="57">)<pos:position pos:line="225" pos:column="58"/></operator> <operator pos:line="225" pos:column="59">*<pos:position pos:line="225" pos:column="60"/></operator> <name pos:line="225" pos:column="61">res_item_size<pos:position pos:line="225" pos:column="74"/></name></expr></argument>)<pos:position pos:line="225" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="76"/></expr_stmt>
    <if pos:line="226" pos:column="5">if <condition pos:line="226" pos:column="8">(<expr><name pos:line="226" pos:column="9">items<pos:position pos:line="226" pos:column="14"/></name> <operator pos:line="226" pos:column="15">==<pos:position pos:line="226" pos:column="17"/></operator> <name pos:line="226" pos:column="18">NULL<pos:position pos:line="226" pos:column="22"/></name></expr>)<pos:position pos:line="226" pos:column="23"/></condition><then pos:line="226" pos:column="23"> <block pos:line="226" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="227" pos:column="7">ERROR<pos:position pos:line="227" pos:column="12"/></name><argument_list pos:line="227" pos:column="12">(<argument><expr><literal type="string" pos:line="227" pos:column="13">"ntpd plugin: realloc failed."<pos:position pos:line="227" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="45"/></expr_stmt>
      <continue pos:line="228" pos:column="7">continue;<pos:position pos:line="228" pos:column="16"/></continue>
    }<pos:position pos:line="229" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="230" pos:column="5">items_num<pos:position pos:line="230" pos:column="14"/></name> <operator pos:line="230" pos:column="15">+=<pos:position pos:line="230" pos:column="17"/></operator> <name pos:line="230" pos:column="18">pkt_item_num<pos:position pos:line="230" pos:column="30"/></name></expr>;<pos:position pos:line="230" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="231" pos:column="5">*<pos:position pos:line="231" pos:column="6"/></operator><name pos:line="231" pos:column="6">res_data<pos:position pos:line="231" pos:column="14"/></name> <operator pos:line="231" pos:column="15">=<pos:position pos:line="231" pos:column="16"/></operator> <name pos:line="231" pos:column="17">items<pos:position pos:line="231" pos:column="22"/></name></expr>;<pos:position pos:line="231" pos:column="23"/></expr_stmt>

    <for pos:line="233" pos:column="5">for <control pos:line="233" pos:column="9">(<init><decl><type><name pos:line="233" pos:column="10">int<pos:position pos:line="233" pos:column="13"/></name></type> <name pos:line="233" pos:column="14">i<pos:position pos:line="233" pos:column="15"/></name> <init pos:line="233" pos:column="16">= <expr><literal type="number" pos:line="233" pos:column="18">0<pos:position pos:line="233" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="233" pos:column="20"/></init> <condition><expr><name pos:line="233" pos:column="21">i<pos:position pos:line="233" pos:column="22"/></name> <operator pos:line="233" pos:column="23">&lt;<pos:position pos:line="233" pos:column="27"/></operator> <name pos:line="233" pos:column="25">pkt_item_num<pos:position pos:line="233" pos:column="37"/></name></expr>;<pos:position pos:line="233" pos:column="38"/></condition> <incr><expr><name pos:line="233" pos:column="39">i<pos:position pos:line="233" pos:column="40"/></name><operator pos:line="233" pos:column="40">++<pos:position pos:line="233" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="233" pos:column="43"/></control> <block pos:line="233" pos:column="44">{
      <comment type="block" pos:line="234" pos:column="7">/* dst: There are already `*res_items' items with
       *      res_item_size bytes each in in `*res_data'. Set
       *      dst to the first byte after that. */</comment>
      <decl_stmt><decl><type><name pos:line="237" pos:column="7">void<pos:position pos:line="237" pos:column="11"/></name> <modifier pos:line="237" pos:column="12">*<pos:position pos:line="237" pos:column="13"/></modifier></type><name pos:line="237" pos:column="13">dst<pos:position pos:line="237" pos:column="16"/></name> <init pos:line="237" pos:column="17">= <expr><operator pos:line="237" pos:column="19">(<pos:position pos:line="237" pos:column="20"/></operator><name pos:line="237" pos:column="20">void<pos:position pos:line="237" pos:column="24"/></name> <operator pos:line="237" pos:column="25">*<pos:position pos:line="237" pos:column="26"/></operator><operator pos:line="237" pos:column="26">)<pos:position pos:line="237" pos:column="27"/></operator><operator pos:line="237" pos:column="27">(<pos:position pos:line="237" pos:column="28"/></operator><operator pos:line="237" pos:column="28">*<pos:position pos:line="237" pos:column="29"/></operator><name pos:line="237" pos:column="29">res_data<pos:position pos:line="237" pos:column="37"/></name> <operator pos:line="237" pos:column="38">+<pos:position pos:line="237" pos:column="39"/></operator> <operator pos:line="237" pos:column="40">(<pos:position pos:line="237" pos:column="41"/></operator><operator pos:line="237" pos:column="41">(<pos:position pos:line="237" pos:column="42"/></operator><operator pos:line="237" pos:column="42">*<pos:position pos:line="237" pos:column="43"/></operator><name pos:line="237" pos:column="43">res_items<pos:position pos:line="237" pos:column="52"/></name><operator pos:line="237" pos:column="52">)<pos:position pos:line="237" pos:column="53"/></operator> <operator pos:line="237" pos:column="54">*<pos:position pos:line="237" pos:column="55"/></operator> <name pos:line="237" pos:column="56">res_item_size<pos:position pos:line="237" pos:column="69"/></name><operator pos:line="237" pos:column="69">)<pos:position pos:line="237" pos:column="70"/></operator><operator pos:line="237" pos:column="70">)<pos:position pos:line="237" pos:column="71"/></operator></expr></init></decl>;<pos:position pos:line="237" pos:column="72"/></decl_stmt>
      <comment type="block" pos:line="238" pos:column="7">/* src: We use `pkt_item_len' to calculate the offset
       *      from the beginning of the packet, because the
       *      items in the packet may be smaller than the
       *      items that were requested. We skip `i' such
       *      items. */</comment>
      <decl_stmt><decl><type><name pos:line="243" pos:column="7">void<pos:position pos:line="243" pos:column="11"/></name> <modifier pos:line="243" pos:column="12">*<pos:position pos:line="243" pos:column="13"/></modifier></type><name pos:line="243" pos:column="13">src<pos:position pos:line="243" pos:column="16"/></name> <init pos:line="243" pos:column="17">= <expr><operator pos:line="243" pos:column="19">(<pos:position pos:line="243" pos:column="20"/></operator><name pos:line="243" pos:column="20">void<pos:position pos:line="243" pos:column="24"/></name> <operator pos:line="243" pos:column="25">*<pos:position pos:line="243" pos:column="26"/></operator><operator pos:line="243" pos:column="26">)<pos:position pos:line="243" pos:column="27"/></operator><operator pos:line="243" pos:column="27">(<pos:position pos:line="243" pos:column="28"/></operator><operator pos:line="243" pos:column="28">(<pos:position pos:line="243" pos:column="29"/></operator><operator pos:line="243" pos:column="29">(<pos:position pos:line="243" pos:column="30"/></operator><name pos:line="243" pos:column="30">char<pos:position pos:line="243" pos:column="34"/></name> <operator pos:line="243" pos:column="35">*<pos:position pos:line="243" pos:column="36"/></operator><operator pos:line="243" pos:column="36">)<pos:position pos:line="243" pos:column="37"/></operator><name><name pos:line="243" pos:column="37">res<pos:position pos:line="243" pos:column="40"/></name><operator pos:line="243" pos:column="40">.<pos:position pos:line="243" pos:column="41"/></operator><name pos:line="243" pos:column="41">data<pos:position pos:line="243" pos:column="45"/></name></name><operator pos:line="243" pos:column="45">)<pos:position pos:line="243" pos:column="46"/></operator> <operator pos:line="243" pos:column="47">+<pos:position pos:line="243" pos:column="48"/></operator> <operator pos:line="243" pos:column="49">(<pos:position pos:line="243" pos:column="50"/></operator><name pos:line="243" pos:column="50">i<pos:position pos:line="243" pos:column="51"/></name> <operator pos:line="243" pos:column="52">*<pos:position pos:line="243" pos:column="53"/></operator> <name pos:line="243" pos:column="54">pkt_item_len<pos:position pos:line="243" pos:column="66"/></name><operator pos:line="243" pos:column="66">)<pos:position pos:line="243" pos:column="67"/></operator><operator pos:line="243" pos:column="67">)<pos:position pos:line="243" pos:column="68"/></operator></expr></init></decl>;<pos:position pos:line="243" pos:column="69"/></decl_stmt>

      <comment type="block" pos:line="245" pos:column="7">/* Set the padding to zeros */</comment>
      <if pos:line="246" pos:column="7">if <condition pos:line="246" pos:column="10">(<expr><name pos:line="246" pos:column="11">pkt_padding<pos:position pos:line="246" pos:column="22"/></name> <operator pos:line="246" pos:column="23">!=<pos:position pos:line="246" pos:column="25"/></operator> <literal type="number" pos:line="246" pos:column="26">0<pos:position pos:line="246" pos:column="27"/></literal></expr>)<pos:position pos:line="246" pos:column="28"/></condition><then pos:line="246" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="247" pos:column="9">memset<pos:position pos:line="247" pos:column="15"/></name><argument_list pos:line="247" pos:column="15">(<argument><expr><name pos:line="247" pos:column="16">dst<pos:position pos:line="247" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="247" pos:column="21">'\0'<pos:position pos:line="247" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="247" pos:column="27">res_item_size<pos:position pos:line="247" pos:column="40"/></name></expr></argument>)<pos:position pos:line="247" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="42"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="248" pos:column="7">memcpy<pos:position pos:line="248" pos:column="13"/></name><argument_list pos:line="248" pos:column="13">(<argument><expr><name pos:line="248" pos:column="14">dst<pos:position pos:line="248" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="19">src<pos:position pos:line="248" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="248" pos:column="24">(<pos:position pos:line="248" pos:column="25"/></operator><name pos:line="248" pos:column="25">size_t<pos:position pos:line="248" pos:column="31"/></name><operator pos:line="248" pos:column="31">)<pos:position pos:line="248" pos:column="32"/></operator><name pos:line="248" pos:column="32">pkt_item_len<pos:position pos:line="248" pos:column="44"/></name></expr></argument>)<pos:position pos:line="248" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="46"/></expr_stmt>

      <comment type="block" pos:line="250" pos:column="7">/* Increment `*res_items' by one, so `dst' will end up
       * one further in the next round. */</comment>
      <expr_stmt><expr><operator pos:line="252" pos:column="7">(<pos:position pos:line="252" pos:column="8"/></operator><operator pos:line="252" pos:column="8">*<pos:position pos:line="252" pos:column="9"/></operator><name pos:line="252" pos:column="9">res_items<pos:position pos:line="252" pos:column="18"/></name><operator pos:line="252" pos:column="18">)<pos:position pos:line="252" pos:column="19"/></operator><operator pos:line="252" pos:column="19">++<pos:position pos:line="252" pos:column="21"/></operator></expr>;<pos:position pos:line="252" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="253" pos:column="6"/></block></for> <comment type="block" pos:line="253" pos:column="7">/* for (pkt_item_num) */</comment>

    <expr_stmt><expr><name><name pos:line="255" pos:column="5">pkt_recvd<pos:position pos:line="255" pos:column="14"/></name><index pos:line="255" pos:column="14">[<expr><name pos:line="255" pos:column="15">pkt_sequence<pos:position pos:line="255" pos:column="27"/></name></expr>]<pos:position pos:line="255" pos:column="28"/></index></name> <operator pos:line="255" pos:column="29">=<pos:position pos:line="255" pos:column="30"/></operator> <operator pos:line="255" pos:column="31">(<pos:position pos:line="255" pos:column="32"/></operator><name pos:line="255" pos:column="32">char<pos:position pos:line="255" pos:column="36"/></name><operator pos:line="255" pos:column="36">)<pos:position pos:line="255" pos:column="37"/></operator><literal type="number" pos:line="255" pos:column="37">1<pos:position pos:line="255" pos:column="38"/></literal></expr>;<pos:position pos:line="255" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="256" pos:column="5">pkt_recvd_num<pos:position pos:line="256" pos:column="18"/></name><operator pos:line="256" pos:column="18">++<pos:position pos:line="256" pos:column="20"/></operator></expr>;<pos:position pos:line="256" pos:column="21"/></expr_stmt>

    <if pos:line="258" pos:column="5">if <condition pos:line="258" pos:column="8">(<expr><operator pos:line="258" pos:column="9">(<pos:position pos:line="258" pos:column="10"/></operator><name pos:line="258" pos:column="10">pkt_recvd_num<pos:position pos:line="258" pos:column="23"/></name> <operator pos:line="258" pos:column="24">-<pos:position pos:line="258" pos:column="25"/></operator> <literal type="number" pos:line="258" pos:column="26">1<pos:position pos:line="258" pos:column="27"/></literal><operator pos:line="258" pos:column="27">)<pos:position pos:line="258" pos:column="28"/></operator> <operator pos:line="258" pos:column="29">==<pos:position pos:line="258" pos:column="31"/></operator> <name pos:line="258" pos:column="32">pkt_lastseq<pos:position pos:line="258" pos:column="43"/></name></expr>)<pos:position pos:line="258" pos:column="44"/></condition><then pos:line="258" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><name pos:line="259" pos:column="7">done<pos:position pos:line="259" pos:column="11"/></name> <operator pos:line="259" pos:column="12">=<pos:position pos:line="259" pos:column="13"/></operator> <literal type="number" pos:line="259" pos:column="14">1<pos:position pos:line="259" pos:column="15"/></literal></expr>;<pos:position pos:line="259" pos:column="16"/></expr_stmt></block></then></if>
  }<pos:position pos:line="260" pos:column="4"/></block></while> <comment type="block" pos:line="260" pos:column="5">/* while (done == 0) */</comment>

  <return pos:line="262" pos:column="3">return <expr><operator pos:line="262" pos:column="10">(<pos:position pos:line="262" pos:column="11"/></operator><literal type="number" pos:line="262" pos:column="11">0<pos:position pos:line="262" pos:column="12"/></literal><operator pos:line="262" pos:column="12">)<pos:position pos:line="262" pos:column="13"/></operator></expr>;<pos:position pos:line="262" pos:column="14"/></return>
}<pos:position pos:line="263" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_308_collectd-4.0.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pplugin_call_all<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">type<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="40">...<pos:position pos:line="1" pos:column="43"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">SV<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">tmp<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">NULL<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">plugin<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">I32<pos:position pos:line="6" pos:column="12"/></name></type>  <name pos:line="6" pos:column="14">len<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">type<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal><operator pos:line="8" pos:column="22">)<pos:position pos:line="8" pos:column="23"/></operator> <operator pos:line="8" pos:column="24">||<pos:position pos:line="8" pos:column="26"/></operator> <operator pos:line="8" pos:column="27">(<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">type<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">&gt;=<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="36">PLUGIN_TYPES<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">)<pos:position pos:line="8" pos:column="49"/></operator></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">-<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal> <operator pos:line="11" pos:column="15">==<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">Perl_hv_iterinit<pos:position pos:line="11" pos:column="34"/></name> <argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">perl<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="42">plugins<pos:position pos:line="11" pos:column="49"/></name><index pos:line="11" pos:column="49">[<expr><name pos:line="11" pos:column="50">type<pos:position pos:line="11" pos:column="54"/></name></expr>]<pos:position pos:line="11" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="57"/></condition><then pos:line="11" pos:column="57">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>

	<while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">!=<pos:position pos:line="14" pos:column="23"/></operator> <operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">tmp<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <call><name pos:line="14" pos:column="31">Perl_hv_iternextsv<pos:position pos:line="14" pos:column="49"/></name> <argument_list pos:line="14" pos:column="50">(<argument><expr><name pos:line="14" pos:column="51">perl<pos:position pos:line="14" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="57">plugins<pos:position pos:line="14" pos:column="64"/></name><index pos:line="14" pos:column="64">[<expr><name pos:line="14" pos:column="65">type<pos:position pos:line="14" pos:column="69"/></name></expr>]<pos:position pos:line="14" pos:column="70"/></index></name></expr></argument>,
			<argument><expr><operator pos:line="15" pos:column="25">&amp;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="26">plugin<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="34">&amp;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="35">len<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call><operator pos:line="15" pos:column="39">)<pos:position pos:line="15" pos:column="40"/></operator></expr>)<pos:position pos:line="15" pos:column="41"/></condition> <block pos:line="15" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">pplugin_t<pos:position pos:line="16" pos:column="26"/></name> <modifier pos:line="16" pos:column="27">*<pos:position pos:line="16" pos:column="28"/></modifier></type><name pos:line="16" pos:column="28">p<pos:position pos:line="16" pos:column="29"/></name></decl>;<pos:position pos:line="16" pos:column="30"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">va_list<pos:position pos:line="17" pos:column="24"/></name></type>   <name pos:line="17" pos:column="27">ap<pos:position pos:line="17" pos:column="29"/></name></decl>;<pos:position pos:line="17" pos:column="30"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="19" pos:column="17">int<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">status<pos:position pos:line="19" pos:column="27"/></name></decl>;<pos:position pos:line="19" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="21" pos:column="17">va_start<pos:position pos:line="21" pos:column="25"/></name> <argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">ap<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="31">type<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>

		<expr_stmt><expr><name pos:line="23" pos:column="17">p<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <operator pos:line="23" pos:column="21">(<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">pplugin_t<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">*<pos:position pos:line="23" pos:column="33"/></operator><operator pos:line="23" pos:column="33">)<pos:position pos:line="23" pos:column="34"/></operator><call><name pos:line="23" pos:column="34">SvIV<pos:position pos:line="23" pos:column="38"/></name> <argument_list pos:line="23" pos:column="39">(<argument><expr><operator pos:line="23" pos:column="40">(<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="41">SV<pos:position pos:line="23" pos:column="43"/></name> <operator pos:line="23" pos:column="44">*<pos:position pos:line="23" pos:column="45"/></operator><operator pos:line="23" pos:column="45">)<pos:position pos:line="23" pos:column="46"/></operator><call><name pos:line="23" pos:column="46">SvRV<pos:position pos:line="23" pos:column="50"/></name> <argument_list pos:line="23" pos:column="51">(<argument><expr><name pos:line="23" pos:column="52">tmp<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="58"/></expr_stmt>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">p<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">wait_left<pos:position pos:line="25" pos:column="33"/></name></name> <operator pos:line="25" pos:column="34">&gt;<pos:position pos:line="25" pos:column="38"/></operator> <literal type="number" pos:line="25" pos:column="36">0<pos:position pos:line="25" pos:column="37"/></literal></expr>)<pos:position pos:line="25" pos:column="38"/></condition><then pos:line="25" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="25">p<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">wait_left<pos:position pos:line="26" pos:column="37"/></name></name> <operator pos:line="26" pos:column="38">-=<pos:position pos:line="26" pos:column="40"/></operator> <name pos:line="26" pos:column="41">interval_g<pos:position pos:line="26" pos:column="51"/></name></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt></block></then></if>

		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name><name pos:line="28" pos:column="21">p<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">wait_left<pos:position pos:line="28" pos:column="33"/></name></name> <operator pos:line="28" pos:column="34">&gt;<pos:position pos:line="28" pos:column="38"/></operator> <literal type="number" pos:line="28" pos:column="36">0<pos:position pos:line="28" pos:column="37"/></literal></expr>)<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38">
			<block type="pseudo"><continue pos:line="29" pos:column="25">continue;<pos:position pos:line="29" pos:column="34"/></continue></block></then></if>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><literal type="number" pos:line="31" pos:column="21">0<pos:position pos:line="31" pos:column="22"/></literal> <operator pos:line="31" pos:column="23">==<pos:position pos:line="31" pos:column="25"/></operator> <operator pos:line="31" pos:column="26">(<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">status<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">=<pos:position pos:line="31" pos:column="35"/></operator> <call><name pos:line="31" pos:column="36">pplugin_call<pos:position pos:line="31" pos:column="48"/></name> <argument_list pos:line="31" pos:column="49">(<argument><expr><name pos:line="31" pos:column="50">type<pos:position pos:line="31" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="56">plugin<pos:position pos:line="31" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="64">p<pos:position pos:line="31" pos:column="65"/></name><operator pos:line="31" pos:column="65">-&gt;<pos:position pos:line="31" pos:column="70"/></operator><name pos:line="31" pos:column="67">sub<pos:position pos:line="31" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="72">ap<pos:position pos:line="31" pos:column="74"/></name></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call><operator pos:line="31" pos:column="75">)<pos:position pos:line="31" pos:column="76"/></operator></expr>)<pos:position pos:line="31" pos:column="77"/></condition><then pos:line="31" pos:column="77"> <block pos:line="31" pos:column="78">{
			<expr_stmt><expr><name><name pos:line="32" pos:column="25">p<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">wait_left<pos:position pos:line="32" pos:column="37"/></name></name> <operator pos:line="32" pos:column="38">=<pos:position pos:line="32" pos:column="39"/></operator> <literal type="number" pos:line="32" pos:column="40">0<pos:position pos:line="32" pos:column="41"/></literal></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="33" pos:column="25">p<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">wait_time<pos:position pos:line="33" pos:column="37"/></name></name> <operator pos:line="33" pos:column="38">=<pos:position pos:line="33" pos:column="39"/></operator> <name pos:line="33" pos:column="40">interval_g<pos:position pos:line="33" pos:column="50"/></name></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></then>
		<elseif pos:line="35" pos:column="17">else <if pos:line="35" pos:column="22">if <condition pos:line="35" pos:column="25">(<expr><name pos:line="35" pos:column="26">PLUGIN_READ<pos:position pos:line="35" pos:column="37"/></name> <operator pos:line="35" pos:column="38">==<pos:position pos:line="35" pos:column="40"/></operator> <name pos:line="35" pos:column="41">type<pos:position pos:line="35" pos:column="45"/></name></expr>)<pos:position pos:line="35" pos:column="46"/></condition><then pos:line="35" pos:column="46"> <block pos:line="35" pos:column="47">{
			<expr_stmt><expr><name><name pos:line="36" pos:column="25">p<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">wait_left<pos:position pos:line="36" pos:column="37"/></name></name> <operator pos:line="36" pos:column="38">=<pos:position pos:line="36" pos:column="39"/></operator> <name><name pos:line="36" pos:column="40">p<pos:position pos:line="36" pos:column="41"/></name><operator pos:line="36" pos:column="41">-&gt;<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="43">wait_time<pos:position pos:line="36" pos:column="52"/></name></name></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="37" pos:column="25">p<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">-&gt;<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="28">wait_time<pos:position pos:line="37" pos:column="37"/></name></name> <operator pos:line="37" pos:column="38">&lt;&lt;=<pos:position pos:line="37" pos:column="47"/></operator> <literal type="number" pos:line="37" pos:column="42">1<pos:position pos:line="37" pos:column="43"/></literal></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>

			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name><name pos:line="39" pos:column="29">p<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">wait_time<pos:position pos:line="39" pos:column="41"/></name></name> <operator pos:line="39" pos:column="42">&gt;<pos:position pos:line="39" pos:column="46"/></operator> <literal type="number" pos:line="39" pos:column="44">86400<pos:position pos:line="39" pos:column="49"/></literal></expr>)<pos:position pos:line="39" pos:column="50"/></condition><then pos:line="39" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="33">p<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">-&gt;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="36">wait_time<pos:position pos:line="40" pos:column="45"/></name></name> <operator pos:line="40" pos:column="46">=<pos:position pos:line="40" pos:column="47"/></operator> <literal type="number" pos:line="40" pos:column="48">86400<pos:position pos:line="40" pos:column="53"/></literal></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt></block></then></if>

			<expr_stmt><expr><call><name pos:line="42" pos:column="25">log_warn<pos:position pos:line="42" pos:column="33"/></name> <argument_list pos:line="42" pos:column="34">(<argument><expr><literal type="string" pos:line="42" pos:column="35">"%s-&gt;read() failed. Will suspend it for %i seconds."<pos:position pos:line="42" pos:column="90"/></literal></expr></argument>,
					<argument><expr><name pos:line="43" pos:column="41">plugin<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="49">p<pos:position pos:line="43" pos:column="50"/></name><operator pos:line="43" pos:column="50">-&gt;<pos:position pos:line="43" pos:column="55"/></operator><name pos:line="43" pos:column="52">wait_left<pos:position pos:line="43" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="63"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="45" pos:column="17">else <if pos:line="45" pos:column="22">if <condition pos:line="45" pos:column="25">(<expr><name pos:line="45" pos:column="26">PLUGIN_INIT<pos:position pos:line="45" pos:column="37"/></name> <operator pos:line="45" pos:column="38">==<pos:position pos:line="45" pos:column="40"/></operator> <name pos:line="45" pos:column="41">type<pos:position pos:line="45" pos:column="45"/></name></expr>)<pos:position pos:line="45" pos:column="46"/></condition><then pos:line="45" pos:column="46"> <block pos:line="45" pos:column="47">{
			<decl_stmt><decl><type><name pos:line="46" pos:column="25">int<pos:position pos:line="46" pos:column="28"/></name></type> <name pos:line="46" pos:column="29">i<pos:position pos:line="46" pos:column="30"/></name> <init pos:line="46" pos:column="31">= <expr><literal type="number" pos:line="46" pos:column="33">0<pos:position pos:line="46" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="46" pos:column="35"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="48" pos:column="25">log_err<pos:position pos:line="48" pos:column="32"/></name> <argument_list pos:line="48" pos:column="33">(<argument><expr><literal type="string" pos:line="48" pos:column="34">"%s-&gt;init() failed. Plugin will be disabled."<pos:position pos:line="48" pos:column="82"/></literal></expr></argument>,
					<argument><expr><name pos:line="49" pos:column="41">plugin<pos:position pos:line="49" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="49">status<pos:position pos:line="49" pos:column="55"/></name></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="57"/></expr_stmt>

			<for pos:line="51" pos:column="25">for <control pos:line="51" pos:column="29">(<init><expr><name pos:line="51" pos:column="30">i<pos:position pos:line="51" pos:column="31"/></name> <operator pos:line="51" pos:column="32">=<pos:position pos:line="51" pos:column="33"/></operator> <literal type="number" pos:line="51" pos:column="34">0<pos:position pos:line="51" pos:column="35"/></literal></expr>;<pos:position pos:line="51" pos:column="36"/></init> <condition><expr><name pos:line="51" pos:column="37">i<pos:position pos:line="51" pos:column="38"/></name> <operator pos:line="51" pos:column="39">&lt;<pos:position pos:line="51" pos:column="43"/></operator> <name pos:line="51" pos:column="41">PLUGIN_TYPES<pos:position pos:line="51" pos:column="53"/></name></expr>;<pos:position pos:line="51" pos:column="54"/></condition> <incr><expr><operator pos:line="51" pos:column="55">++<pos:position pos:line="51" pos:column="57"/></operator><name pos:line="51" pos:column="57">i<pos:position pos:line="51" pos:column="58"/></name></expr></incr>)<pos:position pos:line="51" pos:column="59"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="33">pplugin_unregister<pos:position pos:line="52" pos:column="51"/></name> <argument_list pos:line="52" pos:column="52">(<argument><expr><name pos:line="52" pos:column="53">i<pos:position pos:line="52" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="56">plugin<pos:position pos:line="52" pos:column="62"/></name></expr></argument>)<pos:position pos:line="52" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="64"/></expr_stmt></block></for>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="54" pos:column="17">else <if pos:line="54" pos:column="22">if <condition pos:line="54" pos:column="25">(<expr><name pos:line="54" pos:column="26">PLUGIN_LOG<pos:position pos:line="54" pos:column="36"/></name> <operator pos:line="54" pos:column="37">!=<pos:position pos:line="54" pos:column="39"/></operator> <name pos:line="54" pos:column="40">type<pos:position pos:line="54" pos:column="44"/></name></expr>)<pos:position pos:line="54" pos:column="45"/></condition><then pos:line="54" pos:column="45"> <block pos:line="54" pos:column="46">{
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">log_warn<pos:position pos:line="55" pos:column="33"/></name> <argument_list pos:line="55" pos:column="34">(<argument><expr><literal type="string" pos:line="55" pos:column="35">"%s-&gt;%s() failed with status %i."<pos:position pos:line="55" pos:column="71"/></literal></expr></argument>,
					<argument><expr><name pos:line="56" pos:column="41">plugin<pos:position pos:line="56" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="49">plugin_types<pos:position pos:line="56" pos:column="61"/></name><index pos:line="56" pos:column="61">[<expr><name pos:line="56" pos:column="62">type<pos:position pos:line="56" pos:column="66"/></name></expr>]<pos:position pos:line="56" pos:column="67"/></index></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="69">status<pos:position pos:line="56" pos:column="75"/></name></expr></argument>)<pos:position pos:line="56" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="77"/></expr_stmt>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if></elseif></if>

		<expr_stmt><expr><call><name pos:line="59" pos:column="17">va_end<pos:position pos:line="59" pos:column="23"/></name> <argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">ap<pos:position pos:line="59" pos:column="27"/></name></expr></argument>)<pos:position pos:line="59" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></while>
	<return pos:line="61" pos:column="9">return <expr><literal type="number" pos:line="61" pos:column="16">0<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

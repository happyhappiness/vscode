<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1292_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">olsrd_cb_topology<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">lineno<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="43">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">size_t<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">fields_num<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier><modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">fields<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* Fields:
   *  0 = Dest. IP
   *  1 = Last hop IP
   *  2 = LQ
   *  3 = NLQ
   *  4 = Cost */</comment>

  <decl_stmt><decl><specifier pos:line="11" pos:column="3">static<pos:position pos:line="11" pos:column="9"/></specifier> <type><name pos:line="11" pos:column="10">double<pos:position pos:line="11" pos:column="16"/></name></type>   <name pos:line="11" pos:column="19">lq_sum<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="12" pos:column="3">static<pos:position pos:line="12" pos:column="9"/></specifier> <type><name pos:line="12" pos:column="10">uint32_t<pos:position pos:line="12" pos:column="18"/></name></type> <name pos:line="12" pos:column="19">lq_num<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>

  <decl_stmt><decl><specifier pos:line="14" pos:column="3">static<pos:position pos:line="14" pos:column="9"/></specifier> <type><name pos:line="14" pos:column="10">uint32_t<pos:position pos:line="14" pos:column="18"/></name></type> <name pos:line="14" pos:column="19">links_num<pos:position pos:line="14" pos:column="28"/></name></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="16" pos:column="3">double<pos:position pos:line="16" pos:column="9"/></name></type> <name pos:line="16" pos:column="10">lq<pos:position pos:line="16" pos:column="12"/></name></decl>;<pos:position pos:line="16" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name> <modifier pos:line="17" pos:column="8">*<pos:position pos:line="17" pos:column="9"/></modifier></type><name pos:line="17" pos:column="9">endptr<pos:position pos:line="17" pos:column="15"/></name></decl>;<pos:position pos:line="17" pos:column="16"/></decl_stmt>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">config_want_topology<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">==<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">OLSRD_WANT_NOT<pos:position pos:line="19" pos:column="45"/></name></expr>)<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">0<pos:position pos:line="20" pos:column="14"/></literal><operator pos:line="20" pos:column="14">)<pos:position pos:line="20" pos:column="15"/></operator></expr>;<pos:position pos:line="20" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="22" pos:column="3">/* Special handling of the first line */</comment>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">lineno<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">&lt;=<pos:position pos:line="23" pos:column="19"/></operator> <literal type="number" pos:line="23" pos:column="17">0<pos:position pos:line="23" pos:column="18"/></literal></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19">
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><name pos:line="25" pos:column="5">lq_sum<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <literal type="number" pos:line="25" pos:column="14">0.0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">lq_num<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">links_num<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>

    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><literal type="number" pos:line="29" pos:column="13">0<pos:position pos:line="29" pos:column="14"/></literal><operator pos:line="29" pos:column="14">)<pos:position pos:line="29" pos:column="15"/></operator></expr>;<pos:position pos:line="29" pos:column="16"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="32" pos:column="3">/* Special handling after the last line */</comment>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">fields_num<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">==<pos:position pos:line="33" pos:column="20"/></operator> <literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal></expr>)<pos:position pos:line="33" pos:column="23"/></condition><then pos:line="33" pos:column="23">
  <block pos:line="34" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">DEBUG<pos:position pos:line="35" pos:column="10"/></name> <argument_list pos:line="35" pos:column="11">(<argument><expr><literal type="string" pos:line="35" pos:column="12">"olsrd plugin: topology: Number of links: %"<pos:position pos:line="35" pos:column="56"/></literal><name pos:line="35" pos:column="56">PRIu32<pos:position pos:line="35" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="64">links_num<pos:position pos:line="35" pos:column="73"/></name></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">olsrd_submit<pos:position pos:line="36" pos:column="17"/></name> <argument_list pos:line="36" pos:column="18">(<comment type="block" pos:line="36" pos:column="19">/* p.-inst = */</comment> <argument><expr><literal type="string" pos:line="36" pos:column="35">"topology"<pos:position pos:line="36" pos:column="45"/></literal></expr></argument>, <comment type="block" pos:line="36" pos:column="47">/* type = */</comment> <argument><expr><literal type="string" pos:line="36" pos:column="60">"links"<pos:position pos:line="36" pos:column="67"/></literal></expr></argument>,
        <comment type="block" pos:line="37" pos:column="9">/* t.-inst = */</comment> <argument><expr><name pos:line="37" pos:column="25">NULL<pos:position pos:line="37" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="31">(<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">gauge_t<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">)<pos:position pos:line="37" pos:column="40"/></operator> <name pos:line="37" pos:column="41">links_num<pos:position pos:line="37" pos:column="50"/></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><name pos:line="39" pos:column="5">lq<pos:position pos:line="39" pos:column="7"/></name> <operator pos:line="39" pos:column="8">=<pos:position pos:line="39" pos:column="9"/></operator> <name pos:line="39" pos:column="10">NAN<pos:position pos:line="39" pos:column="13"/></name></expr>;<pos:position pos:line="39" pos:column="14"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">lq_num<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">&gt;<pos:position pos:line="40" pos:column="20"/></operator> <literal type="number" pos:line="40" pos:column="18">0<pos:position pos:line="40" pos:column="19"/></literal></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">lq<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <name pos:line="41" pos:column="12">lq_sum<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">/<pos:position pos:line="41" pos:column="20"/></operator> <operator pos:line="41" pos:column="21">(<pos:position pos:line="41" pos:column="22"/></operator><operator pos:line="41" pos:column="22">(<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">double<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">)<pos:position pos:line="41" pos:column="30"/></operator> <name pos:line="41" pos:column="31">lq_sum<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">)<pos:position pos:line="41" pos:column="38"/></operator></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">DEBUG<pos:position pos:line="42" pos:column="10"/></name> <argument_list pos:line="42" pos:column="11">(<argument><expr><literal type="string" pos:line="42" pos:column="12">"olsrd plugin: topology: Average link quality: %g"<pos:position pos:line="42" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="64">lq<pos:position pos:line="42" pos:column="66"/></name></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">olsrd_submit<pos:position pos:line="43" pos:column="17"/></name> <argument_list pos:line="43" pos:column="18">(<comment type="block" pos:line="43" pos:column="19">/* p.-inst = */</comment> <argument><expr><literal type="string" pos:line="43" pos:column="35">"topology"<pos:position pos:line="43" pos:column="45"/></literal></expr></argument>, <comment type="block" pos:line="43" pos:column="47">/* type = */</comment> <argument><expr><literal type="string" pos:line="43" pos:column="60">"signal_quality"<pos:position pos:line="43" pos:column="76"/></literal></expr></argument>,
        <comment type="block" pos:line="44" pos:column="9">/* t.-inst = */</comment> <argument><expr><literal type="string" pos:line="44" pos:column="25">"average"<pos:position pos:line="44" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="36">lq<pos:position pos:line="44" pos:column="38"/></name></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>

    <return pos:line="46" pos:column="5">return <expr><operator pos:line="46" pos:column="12">(<pos:position pos:line="46" pos:column="13"/></operator><literal type="number" pos:line="46" pos:column="13">0<pos:position pos:line="46" pos:column="14"/></literal><operator pos:line="46" pos:column="14">)<pos:position pos:line="46" pos:column="15"/></operator></expr>;<pos:position pos:line="46" pos:column="16"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">fields_num<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">!=<pos:position pos:line="49" pos:column="20"/></operator> <literal type="number" pos:line="49" pos:column="21">5<pos:position pos:line="49" pos:column="22"/></literal></expr>)<pos:position pos:line="49" pos:column="23"/></condition><then pos:line="49" pos:column="23">
    <block type="pseudo"><return pos:line="50" pos:column="5">return <expr><operator pos:line="50" pos:column="12">(<pos:position pos:line="50" pos:column="13"/></operator><operator pos:line="50" pos:column="13">-<pos:position pos:line="50" pos:column="14"/></operator><literal type="number" pos:line="50" pos:column="14">1<pos:position pos:line="50" pos:column="15"/></literal><operator pos:line="50" pos:column="15">)<pos:position pos:line="50" pos:column="16"/></operator></expr>;<pos:position pos:line="50" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="52" pos:column="3">links_num<pos:position pos:line="52" pos:column="12"/></name><operator pos:line="52" pos:column="12">++<pos:position pos:line="52" pos:column="14"/></operator></expr>;<pos:position pos:line="52" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><name pos:line="54" pos:column="3">errno<pos:position pos:line="54" pos:column="8"/></name> <operator pos:line="54" pos:column="9">=<pos:position pos:line="54" pos:column="10"/></operator> <literal type="number" pos:line="54" pos:column="11">0<pos:position pos:line="54" pos:column="12"/></literal></expr>;<pos:position pos:line="54" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="55" pos:column="3">endptr<pos:position pos:line="55" pos:column="9"/></name> <operator pos:line="55" pos:column="10">=<pos:position pos:line="55" pos:column="11"/></operator> <name pos:line="55" pos:column="12">NULL<pos:position pos:line="55" pos:column="16"/></name></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="56" pos:column="3">lq<pos:position pos:line="56" pos:column="5"/></name> <operator pos:line="56" pos:column="6">=<pos:position pos:line="56" pos:column="7"/></operator> <call><name pos:line="56" pos:column="8">strtod<pos:position pos:line="56" pos:column="14"/></name> <argument_list pos:line="56" pos:column="15">(<argument><expr><name><name pos:line="56" pos:column="16">fields<pos:position pos:line="56" pos:column="22"/></name><index pos:line="56" pos:column="22">[<expr><literal type="number" pos:line="56" pos:column="23">2<pos:position pos:line="56" pos:column="24"/></literal></expr>]<pos:position pos:line="56" pos:column="25"/></index></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="27">&amp;<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="28">endptr<pos:position pos:line="56" pos:column="34"/></name></expr></argument>)<pos:position pos:line="56" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>
  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><operator pos:line="57" pos:column="7">(<pos:position pos:line="57" pos:column="8"/></operator><name pos:line="57" pos:column="8">errno<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">!=<pos:position pos:line="57" pos:column="16"/></operator> <literal type="number" pos:line="57" pos:column="17">0<pos:position pos:line="57" pos:column="18"/></literal><operator pos:line="57" pos:column="18">)<pos:position pos:line="57" pos:column="19"/></operator> <operator pos:line="57" pos:column="20">||<pos:position pos:line="57" pos:column="22"/></operator> <operator pos:line="57" pos:column="23">(<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="24">endptr<pos:position pos:line="57" pos:column="30"/></name> <operator pos:line="57" pos:column="31">==<pos:position pos:line="57" pos:column="33"/></operator> <name><name pos:line="57" pos:column="34">fields<pos:position pos:line="57" pos:column="40"/></name><index pos:line="57" pos:column="40">[<expr><literal type="number" pos:line="57" pos:column="41">2<pos:position pos:line="57" pos:column="42"/></literal></expr>]<pos:position pos:line="57" pos:column="43"/></index></name><operator pos:line="57" pos:column="43">)<pos:position pos:line="57" pos:column="44"/></operator></expr>)<pos:position pos:line="57" pos:column="45"/></condition><then pos:line="57" pos:column="45">
  <block pos:line="58" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">ERROR<pos:position pos:line="59" pos:column="10"/></name> <argument_list pos:line="59" pos:column="11">(<argument><expr><literal type="string" pos:line="59" pos:column="12">"olsrd plugin: Unable to parse LQ: %s"<pos:position pos:line="59" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="52">fields<pos:position pos:line="59" pos:column="58"/></name><index pos:line="59" pos:column="58">[<expr><literal type="number" pos:line="59" pos:column="59">2<pos:position pos:line="59" pos:column="60"/></literal></expr>]<pos:position pos:line="59" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="59" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="60" pos:column="4"/></block></then>
  <else pos:line="61" pos:column="3">else
  <block pos:line="62" pos:column="3">{
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><operator pos:line="63" pos:column="9">!<pos:position pos:line="63" pos:column="10"/></operator><call><name pos:line="63" pos:column="10">isnan<pos:position pos:line="63" pos:column="15"/></name> <argument_list pos:line="63" pos:column="16">(<argument><expr><name pos:line="63" pos:column="17">lq<pos:position pos:line="63" pos:column="19"/></name></expr></argument>)<pos:position pos:line="63" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="21"/></condition><then pos:line="63" pos:column="21">
    <block pos:line="64" pos:column="5">{
      <expr_stmt><expr><name pos:line="65" pos:column="7">lq_sum<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">+=<pos:position pos:line="65" pos:column="16"/></operator> <name pos:line="65" pos:column="17">lq<pos:position pos:line="65" pos:column="19"/></name></expr>;<pos:position pos:line="65" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="66" pos:column="7">lq_num<pos:position pos:line="66" pos:column="13"/></name><operator pos:line="66" pos:column="13">++<pos:position pos:line="66" pos:column="15"/></operator></expr>;<pos:position pos:line="66" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name pos:line="69" pos:column="9">config_want_topology<pos:position pos:line="69" pos:column="29"/></name> <operator pos:line="69" pos:column="30">==<pos:position pos:line="69" pos:column="32"/></operator> <name pos:line="69" pos:column="33">OLSRD_WANT_DETAIL<pos:position pos:line="69" pos:column="50"/></name></expr>)<pos:position pos:line="69" pos:column="51"/></condition><then pos:line="69" pos:column="51">
    <block pos:line="70" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="71" pos:column="7">char<pos:position pos:line="71" pos:column="11"/></name></type> <name><name pos:line="71" pos:column="12">type_instance<pos:position pos:line="71" pos:column="25"/></name><index pos:line="71" pos:column="25">[<expr><name pos:line="71" pos:column="26">DATA_MAX_NAME_LEN<pos:position pos:line="71" pos:column="43"/></name></expr>]<pos:position pos:line="71" pos:column="44"/></index></name></decl>;<pos:position pos:line="71" pos:column="45"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="73" pos:column="7">memset<pos:position pos:line="73" pos:column="13"/></name> <argument_list pos:line="73" pos:column="14">(<argument><expr><name pos:line="73" pos:column="15">type_instance<pos:position pos:line="73" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="30">0<pos:position pos:line="73" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="33">sizeof <argument_list pos:line="73" pos:column="40">(<argument><expr><name pos:line="73" pos:column="41">type_instance<pos:position pos:line="73" pos:column="54"/></name></expr></argument>)<pos:position pos:line="73" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="73" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">ssnprintf<pos:position pos:line="74" pos:column="16"/></name> <argument_list pos:line="74" pos:column="17">(<argument><expr><name pos:line="74" pos:column="18">type_instance<pos:position pos:line="74" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="74" pos:column="33">sizeof <argument_list pos:line="74" pos:column="40">(<argument><expr><name pos:line="74" pos:column="41">type_instance<pos:position pos:line="74" pos:column="54"/></name></expr></argument>)<pos:position pos:line="74" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="57">"%s-%s-lq"<pos:position pos:line="74" pos:column="67"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="75" pos:column="11">fields<pos:position pos:line="75" pos:column="17"/></name><index pos:line="75" pos:column="17">[<expr><literal type="number" pos:line="75" pos:column="18">0<pos:position pos:line="75" pos:column="19"/></literal></expr>]<pos:position pos:line="75" pos:column="20"/></index></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="22">fields<pos:position pos:line="75" pos:column="28"/></name><index pos:line="75" pos:column="28">[<expr><literal type="number" pos:line="75" pos:column="29">1<pos:position pos:line="75" pos:column="30"/></literal></expr>]<pos:position pos:line="75" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="75" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">DEBUG<pos:position pos:line="76" pos:column="12"/></name> <argument_list pos:line="76" pos:column="13">(<argument><expr><literal type="string" pos:line="76" pos:column="14">"olsrd plugin: type_instance = %s; lq = %g;"<pos:position pos:line="76" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="60">type_instance<pos:position pos:line="76" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="75">lq<pos:position pos:line="76" pos:column="77"/></name></expr></argument>)<pos:position pos:line="76" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">olsrd_submit<pos:position pos:line="77" pos:column="19"/></name> <argument_list pos:line="77" pos:column="20">(<comment type="block" pos:line="77" pos:column="21">/* p.-inst = */</comment> <argument><expr><literal type="string" pos:line="77" pos:column="37">"topology"<pos:position pos:line="77" pos:column="47"/></literal></expr></argument>, <comment type="block" pos:line="77" pos:column="49">/* type = */</comment> <argument><expr><literal type="string" pos:line="77" pos:column="62">"signal_quality"<pos:position pos:line="77" pos:column="78"/></literal></expr></argument>,
          <argument><expr><name pos:line="78" pos:column="11">type_instance<pos:position pos:line="78" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="26">lq<pos:position pos:line="78" pos:column="28"/></name></expr></argument>)<pos:position pos:line="78" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>
  }<pos:position pos:line="80" pos:column="4"/></block></else></if>

  <if pos:line="82" pos:column="3">if <condition pos:line="82" pos:column="6">(<expr><name pos:line="82" pos:column="7">config_want_topology<pos:position pos:line="82" pos:column="27"/></name> <operator pos:line="82" pos:column="28">==<pos:position pos:line="82" pos:column="30"/></operator> <name pos:line="82" pos:column="31">OLSRD_WANT_DETAIL<pos:position pos:line="82" pos:column="48"/></name></expr>)<pos:position pos:line="82" pos:column="49"/></condition><then pos:line="82" pos:column="49">
  <block pos:line="83" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="84" pos:column="5">double<pos:position pos:line="84" pos:column="11"/></name></type> <name pos:line="84" pos:column="12">nlq<pos:position pos:line="84" pos:column="15"/></name></decl>;<pos:position pos:line="84" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="86" pos:column="5">errno<pos:position pos:line="86" pos:column="10"/></name> <operator pos:line="86" pos:column="11">=<pos:position pos:line="86" pos:column="12"/></operator> <literal type="number" pos:line="86" pos:column="13">0<pos:position pos:line="86" pos:column="14"/></literal></expr>;<pos:position pos:line="86" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="87" pos:column="5">endptr<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <name pos:line="87" pos:column="14">NULL<pos:position pos:line="87" pos:column="18"/></name></expr>;<pos:position pos:line="87" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="88" pos:column="5">nlq<pos:position pos:line="88" pos:column="8"/></name> <operator pos:line="88" pos:column="9">=<pos:position pos:line="88" pos:column="10"/></operator> <call><name pos:line="88" pos:column="11">strtod<pos:position pos:line="88" pos:column="17"/></name> <argument_list pos:line="88" pos:column="18">(<argument><expr><name><name pos:line="88" pos:column="19">fields<pos:position pos:line="88" pos:column="25"/></name><index pos:line="88" pos:column="25">[<expr><literal type="number" pos:line="88" pos:column="26">3<pos:position pos:line="88" pos:column="27"/></literal></expr>]<pos:position pos:line="88" pos:column="28"/></index></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="30">&amp;<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="31">endptr<pos:position pos:line="88" pos:column="37"/></name></expr></argument>)<pos:position pos:line="88" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="39"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><operator pos:line="89" pos:column="9">(<pos:position pos:line="89" pos:column="10"/></operator><name pos:line="89" pos:column="10">errno<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">!=<pos:position pos:line="89" pos:column="18"/></operator> <literal type="number" pos:line="89" pos:column="19">0<pos:position pos:line="89" pos:column="20"/></literal><operator pos:line="89" pos:column="20">)<pos:position pos:line="89" pos:column="21"/></operator> <operator pos:line="89" pos:column="22">||<pos:position pos:line="89" pos:column="24"/></operator> <operator pos:line="89" pos:column="25">(<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="26">endptr<pos:position pos:line="89" pos:column="32"/></name> <operator pos:line="89" pos:column="33">==<pos:position pos:line="89" pos:column="35"/></operator> <name><name pos:line="89" pos:column="36">fields<pos:position pos:line="89" pos:column="42"/></name><index pos:line="89" pos:column="42">[<expr><literal type="number" pos:line="89" pos:column="43">3<pos:position pos:line="89" pos:column="44"/></literal></expr>]<pos:position pos:line="89" pos:column="45"/></index></name><operator pos:line="89" pos:column="45">)<pos:position pos:line="89" pos:column="46"/></operator></expr>)<pos:position pos:line="89" pos:column="47"/></condition><then pos:line="89" pos:column="47">
    <block pos:line="90" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">ERROR<pos:position pos:line="91" pos:column="12"/></name> <argument_list pos:line="91" pos:column="13">(<argument><expr><literal type="string" pos:line="91" pos:column="14">"olsrd plugin: Unable to parse NLQ: %s"<pos:position pos:line="91" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="55">fields<pos:position pos:line="91" pos:column="61"/></name><index pos:line="91" pos:column="61">[<expr><literal type="number" pos:line="91" pos:column="62">3<pos:position pos:line="91" pos:column="63"/></literal></expr>]<pos:position pos:line="91" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="91" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then>
    <else pos:line="93" pos:column="5">else
    <block pos:line="94" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="95" pos:column="7">char<pos:position pos:line="95" pos:column="11"/></name></type> <name><name pos:line="95" pos:column="12">type_instance<pos:position pos:line="95" pos:column="25"/></name><index pos:line="95" pos:column="25">[<expr><name pos:line="95" pos:column="26">DATA_MAX_NAME_LEN<pos:position pos:line="95" pos:column="43"/></name></expr>]<pos:position pos:line="95" pos:column="44"/></index></name></decl>;<pos:position pos:line="95" pos:column="45"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="97" pos:column="7">memset<pos:position pos:line="97" pos:column="13"/></name> <argument_list pos:line="97" pos:column="14">(<argument><expr><name pos:line="97" pos:column="15">type_instance<pos:position pos:line="97" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="30">0<pos:position pos:line="97" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="33">sizeof <argument_list pos:line="97" pos:column="40">(<argument><expr><name pos:line="97" pos:column="41">type_instance<pos:position pos:line="97" pos:column="54"/></name></expr></argument>)<pos:position pos:line="97" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">ssnprintf<pos:position pos:line="98" pos:column="16"/></name> <argument_list pos:line="98" pos:column="17">(<argument><expr><name pos:line="98" pos:column="18">type_instance<pos:position pos:line="98" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="98" pos:column="33">sizeof <argument_list pos:line="98" pos:column="40">(<argument><expr><name pos:line="98" pos:column="41">type_instance<pos:position pos:line="98" pos:column="54"/></name></expr></argument>)<pos:position pos:line="98" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="57">"%s-%s-nlq"<pos:position pos:line="98" pos:column="68"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="99" pos:column="11">fields<pos:position pos:line="99" pos:column="17"/></name><index pos:line="99" pos:column="17">[<expr><literal type="number" pos:line="99" pos:column="18">0<pos:position pos:line="99" pos:column="19"/></literal></expr>]<pos:position pos:line="99" pos:column="20"/></index></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="22">fields<pos:position pos:line="99" pos:column="28"/></name><index pos:line="99" pos:column="28">[<expr><literal type="number" pos:line="99" pos:column="29">1<pos:position pos:line="99" pos:column="30"/></literal></expr>]<pos:position pos:line="99" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="99" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="100" pos:column="7">DEBUG<pos:position pos:line="100" pos:column="12"/></name> <argument_list pos:line="100" pos:column="13">(<argument><expr><literal type="string" pos:line="100" pos:column="14">"olsrd plugin: type_instance = %s; nlq = %g;"<pos:position pos:line="100" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="61">type_instance<pos:position pos:line="100" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="76">nlq<pos:position pos:line="100" pos:column="79"/></name></expr></argument>)<pos:position pos:line="100" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="81"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="101" pos:column="7">olsrd_submit<pos:position pos:line="101" pos:column="19"/></name> <argument_list pos:line="101" pos:column="20">(<comment type="block" pos:line="101" pos:column="21">/* p.-inst = */</comment> <argument><expr><literal type="string" pos:line="101" pos:column="37">"topology"<pos:position pos:line="101" pos:column="47"/></literal></expr></argument>, <comment type="block" pos:line="101" pos:column="49">/* type = */</comment> <argument><expr><literal type="string" pos:line="101" pos:column="62">"signal_quality"<pos:position pos:line="101" pos:column="78"/></literal></expr></argument>,
          <argument><expr><name pos:line="102" pos:column="11">type_instance<pos:position pos:line="102" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="26">nlq<pos:position pos:line="102" pos:column="29"/></name></expr></argument>)<pos:position pos:line="102" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></else></if>
  }<pos:position pos:line="104" pos:column="4"/></block></then></if>

  <return pos:line="106" pos:column="3">return <expr><operator pos:line="106" pos:column="10">(<pos:position pos:line="106" pos:column="11"/></operator><literal type="number" pos:line="106" pos:column="11">0<pos:position pos:line="106" pos:column="12"/></literal><operator pos:line="106" pos:column="12">)<pos:position pos:line="106" pos:column="13"/></operator></expr>;<pos:position pos:line="106" pos:column="14"/></return>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_899_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">init_counter<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name><name pos:line="2" pos:column="14">struct<pos:position pos:line="2" pos:column="20"/></name> <name pos:line="2" pos:column="21">thread_data<pos:position pos:line="2" pos:column="32"/></name></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">thread_base<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="47">struct<pos:position pos:line="2" pos:column="53"/></name> <name pos:line="2" pos:column="54">core_data<pos:position pos:line="2" pos:column="63"/></name></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">core_base<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">pkg_data<pos:position pos:line="3" pos:column="24"/></name></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">pkg_base<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="36">unsigned<pos:position pos:line="3" pos:column="44"/></name> <name pos:line="3" pos:column="45">int<pos:position pos:line="3" pos:column="48"/></name></type> <name pos:line="3" pos:column="49">cpu_id<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">thread_data<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">t<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">core_data<pos:position pos:line="6" pos:column="25"/></name></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">c<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">pkg_data<pos:position pos:line="7" pos:column="24"/></name></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">p<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">cpu_topology<pos:position pos:line="8" pos:column="28"/></name></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">cpu<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><operator pos:line="8" pos:column="36">&amp;<pos:position pos:line="8" pos:column="41"/></operator><name><name pos:line="8" pos:column="37">topology<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">.<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">cpus<pos:position pos:line="8" pos:column="50"/></name><index pos:line="8" pos:column="50">[<expr><name pos:line="8" pos:column="51">cpu_id<pos:position pos:line="8" pos:column="57"/></name></expr>]<pos:position pos:line="8" pos:column="58"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="59"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">t<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">GET_THREAD<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">thread_base<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="37">!<pos:position pos:line="10" pos:column="38"/></operator><operator pos:line="10" pos:column="38">(<pos:position pos:line="10" pos:column="39"/></operator><name><name pos:line="10" pos:column="39">cpu<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">first_thread_in_core<pos:position pos:line="10" pos:column="64"/></name></name><operator pos:line="10" pos:column="64">)<pos:position pos:line="10" pos:column="65"/></operator></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="67">cpu<pos:position pos:line="10" pos:column="70"/></name><operator pos:line="10" pos:column="70">-&gt;<pos:position pos:line="10" pos:column="75"/></operator><name pos:line="10" pos:column="72">core_id<pos:position pos:line="10" pos:column="79"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="81">cpu<pos:position pos:line="10" pos:column="84"/></name><operator pos:line="10" pos:column="84">-&gt;<pos:position pos:line="10" pos:column="89"/></operator><name pos:line="10" pos:column="86">package_id<pos:position pos:line="10" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="98"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">c<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <call><name pos:line="11" pos:column="13">GET_CORE<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">core_base<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="33">cpu<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">core_id<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="47">cpu<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">-&gt;<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="52">package_id<pos:position pos:line="11" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">p<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">GET_PKG<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">pkg_base<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="31">cpu<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">package_id<pos:position pos:line="12" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="14" pos:column="9">t<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">cpu_id<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">cpu_id<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">cpu<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">first_thread_in_core<pos:position pos:line="15" pos:column="38"/></name></name></expr>)<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="17">t<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">flags<pos:position pos:line="16" pos:column="25"/></name></name> <operator pos:line="16" pos:column="26">|=<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">CPU_IS_FIRST_THREAD_IN_CORE<pos:position pos:line="16" pos:column="56"/></name></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">cpu<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">first_core_in_package<pos:position pos:line="17" pos:column="39"/></name></name></expr>)<pos:position pos:line="17" pos:column="40"/></condition><then pos:line="17" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="17">t<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">flags<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">|=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">CPU_IS_FIRST_CORE_IN_PACKAGE<pos:position pos:line="18" pos:column="57"/></name></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">c<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">core_id<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name><name pos:line="20" pos:column="22">cpu<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">core_id<pos:position pos:line="20" pos:column="34"/></name></name></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">p<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">package_id<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name><name pos:line="21" pos:column="25">cpu<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">package_id<pos:position pos:line="21" pos:column="40"/></name></name></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1507_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">format_alert<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">yajl_gen<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">g<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">notification_t<pos:position pos:line="1" pos:column="52"/></name> <specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">n<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <comment type="block" pos:line="1" pos:column="63">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">yajl_gen_array_open<pos:position pos:line="3" pos:column="22"/></name> <argument_list pos:line="3" pos:column="23">(<argument><expr><name pos:line="3" pos:column="24">g<pos:position pos:line="3" pos:column="25"/></name></expr></argument>)<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">yajl_gen_map_open<pos:position pos:line="4" pos:column="20"/></name> <argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">g<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt> <comment type="block" pos:line="4" pos:column="26">/* BEGIN alert */</comment>

  <comment type="block" pos:line="6" pos:column="3">/*
   * labels
   */</comment>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">JSON_ADD<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">g<pos:position pos:line="9" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="16">"labels"<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">yajl_gen_map_open<pos:position pos:line="10" pos:column="20"/></name> <argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">g<pos:position pos:line="10" pos:column="23"/></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt> <comment type="block" pos:line="10" pos:column="26">/* BEGIN labels */</comment>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">JSON_ADD<pos:position pos:line="12" pos:column="11"/></name> <argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">g<pos:position pos:line="12" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="16">"alertname"<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><call><name pos:line="13" pos:column="7">strncmp<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><name><name pos:line="13" pos:column="16">n<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">plugin<pos:position pos:line="13" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="27">n<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">type<pos:position pos:line="13" pos:column="34"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="36">strlen<pos:position pos:line="13" pos:column="42"/></name> <argument_list pos:line="13" pos:column="43">(<argument><expr><name><name pos:line="13" pos:column="44">n<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">plugin<pos:position pos:line="13" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call> <operator pos:line="13" pos:column="56">==<pos:position pos:line="13" pos:column="58"/></operator> <literal type="number" pos:line="13" pos:column="59">0<pos:position pos:line="13" pos:column="60"/></literal></expr>)<pos:position pos:line="13" pos:column="61"/></condition><then pos:line="13" pos:column="61">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="5">JSON_ADDF<pos:position pos:line="14" pos:column="14"/></name> <argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">g<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="19">"collectd_%s"<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="34">n<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">type<pos:position pos:line="14" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt></block></then>
  <else pos:line="15" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="5">JSON_ADDF<pos:position pos:line="16" pos:column="14"/></name> <argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">g<pos:position pos:line="16" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"collectd_%s_%s"<pos:position pos:line="16" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="37">n<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">plugin<pos:position pos:line="16" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="48">n<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">type<pos:position pos:line="16" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">JSON_ADD<pos:position pos:line="18" pos:column="11"/></name> <argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">g<pos:position pos:line="18" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="16">"instance"<pos:position pos:line="18" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">JSON_ADD<pos:position pos:line="19" pos:column="11"/></name> <argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">g<pos:position pos:line="19" pos:column="14"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="16">n<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">host<pos:position pos:line="19" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* mangling of plugin instance and type instance into labels is copied from
   * the Prometheus collectd exporter. */</comment>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><call><name pos:line="23" pos:column="7">strlen<pos:position pos:line="23" pos:column="13"/></name> <argument_list pos:line="23" pos:column="14">(<argument><expr><name><name pos:line="23" pos:column="15">n<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">plugin_instance<pos:position pos:line="23" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call> <operator pos:line="23" pos:column="35">&gt;<pos:position pos:line="23" pos:column="39"/></operator> <literal type="number" pos:line="23" pos:column="37">0<pos:position pos:line="23" pos:column="38"/></literal></expr>)<pos:position pos:line="23" pos:column="39"/></condition><then pos:line="23" pos:column="39">
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">JSON_ADD<pos:position pos:line="25" pos:column="13"/></name> <argument_list pos:line="25" pos:column="14">(<argument><expr><name pos:line="25" pos:column="15">g<pos:position pos:line="25" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="18">n<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">plugin<pos:position pos:line="25" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">JSON_ADD<pos:position pos:line="26" pos:column="13"/></name> <argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">g<pos:position pos:line="26" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="18">n<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">plugin_instance<pos:position pos:line="26" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><call><name pos:line="28" pos:column="7">strlen<pos:position pos:line="28" pos:column="13"/></name> <argument_list pos:line="28" pos:column="14">(<argument><expr><name><name pos:line="28" pos:column="15">n<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">type_instance<pos:position pos:line="28" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call> <operator pos:line="28" pos:column="33">&gt;<pos:position pos:line="28" pos:column="37"/></operator> <literal type="number" pos:line="28" pos:column="35">0<pos:position pos:line="28" pos:column="36"/></literal></expr>)<pos:position pos:line="28" pos:column="37"/></condition><then pos:line="28" pos:column="37">
  <block pos:line="29" pos:column="3">{
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">strlen<pos:position pos:line="30" pos:column="15"/></name> <argument_list pos:line="30" pos:column="16">(<argument><expr><name><name pos:line="30" pos:column="17">n<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">-&gt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">plugin_instance<pos:position pos:line="30" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call> <operator pos:line="30" pos:column="37">&gt;<pos:position pos:line="30" pos:column="41"/></operator> <literal type="number" pos:line="30" pos:column="39">0<pos:position pos:line="30" pos:column="40"/></literal></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="7">JSON_ADD<pos:position pos:line="31" pos:column="15"/></name> <argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">g<pos:position pos:line="31" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="20">"type"<pos:position pos:line="31" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt></block></then>
    <else pos:line="32" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="7">JSON_ADD<pos:position pos:line="33" pos:column="15"/></name> <argument_list pos:line="33" pos:column="16">(<argument><expr><name pos:line="33" pos:column="17">g<pos:position pos:line="33" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="20">n<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">plugin<pos:position pos:line="33" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">JSON_ADD<pos:position pos:line="34" pos:column="13"/></name> <argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">g<pos:position pos:line="34" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="18">n<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">-&gt;<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="21">type_instance<pos:position pos:line="34" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">JSON_ADD<pos:position pos:line="37" pos:column="11"/></name> <argument_list pos:line="37" pos:column="12">(<argument><expr><name pos:line="37" pos:column="13">g<pos:position pos:line="37" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="16">"severity"<pos:position pos:line="37" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">JSON_ADD<pos:position pos:line="38" pos:column="11"/></name> <argument_list pos:line="38" pos:column="12">(<argument><expr><name pos:line="38" pos:column="13">g<pos:position pos:line="38" pos:column="14"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="38" pos:column="16">(<pos:position pos:line="38" pos:column="17"/></operator><name><name pos:line="38" pos:column="17">n<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">-&gt;<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="20">severity<pos:position pos:line="38" pos:column="28"/></name></name> <operator pos:line="38" pos:column="29">==<pos:position pos:line="38" pos:column="31"/></operator> <name pos:line="38" pos:column="32">NOTIF_FAILURE<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">)<pos:position pos:line="38" pos:column="46"/></operator></expr> ?<pos:position pos:line="38" pos:column="48"/></condition><then pos:line="38" pos:column="48"> <expr><literal type="string" pos:line="38" pos:column="49">"FAILURE"<pos:position pos:line="38" pos:column="58"/></literal></expr>
                   <pos:position pos:line="39" pos:column="20"/></then><else pos:line="39" pos:column="20">: <expr><ternary><condition><expr><operator pos:line="39" pos:column="22">(<pos:position pos:line="39" pos:column="23"/></operator><name><name pos:line="39" pos:column="23">n<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">severity<pos:position pos:line="39" pos:column="34"/></name></name> <operator pos:line="39" pos:column="35">==<pos:position pos:line="39" pos:column="37"/></operator> <name pos:line="39" pos:column="38">NOTIF_WARNING<pos:position pos:line="39" pos:column="51"/></name><operator pos:line="39" pos:column="51">)<pos:position pos:line="39" pos:column="52"/></operator></expr> ?<pos:position pos:line="39" pos:column="54"/></condition><then pos:line="39" pos:column="54"> <expr><literal type="string" pos:line="39" pos:column="55">"WARNING"<pos:position pos:line="39" pos:column="64"/></literal></expr>
                   <pos:position pos:line="40" pos:column="20"/></then><else pos:line="40" pos:column="20">: <expr><ternary><condition><expr><operator pos:line="40" pos:column="22">(<pos:position pos:line="40" pos:column="23"/></operator><name><name pos:line="40" pos:column="23">n<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">severity<pos:position pos:line="40" pos:column="34"/></name></name> <operator pos:line="40" pos:column="35">==<pos:position pos:line="40" pos:column="37"/></operator> <name pos:line="40" pos:column="38">NOTIF_OKAY<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">)<pos:position pos:line="40" pos:column="49"/></operator></expr> ?<pos:position pos:line="40" pos:column="51"/></condition><then pos:line="40" pos:column="51"> <expr><literal type="string" pos:line="40" pos:column="52">"OKAY"<pos:position pos:line="40" pos:column="58"/></literal></expr>
                   <pos:position pos:line="41" pos:column="20"/></then><else pos:line="41" pos:column="20">: <expr><literal type="string" pos:line="41" pos:column="22">"UNKNOWN"<pos:position pos:line="41" pos:column="31"/></literal></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></argument>)<pos:position pos:line="41" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">JSON_ADD<pos:position pos:line="43" pos:column="11"/></name> <argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">g<pos:position pos:line="43" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="16">"service"<pos:position pos:line="43" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">JSON_ADD<pos:position pos:line="44" pos:column="11"/></name> <argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">g<pos:position pos:line="44" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="16">"collectd"<pos:position pos:line="44" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="46" pos:column="3">yajl_gen_map_close<pos:position pos:line="46" pos:column="21"/></name> <argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">g<pos:position pos:line="46" pos:column="24"/></name></expr></argument>)<pos:position pos:line="46" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt> <comment type="block" pos:line="46" pos:column="27">/* END labels */</comment>

  <comment type="block" pos:line="48" pos:column="3">/*
   * annotations
   */</comment>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">JSON_ADD<pos:position pos:line="51" pos:column="11"/></name> <argument_list pos:line="51" pos:column="12">(<argument><expr><name pos:line="51" pos:column="13">g<pos:position pos:line="51" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="16">"annotations"<pos:position pos:line="51" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="52" pos:column="3">yajl_gen_map_open<pos:position pos:line="52" pos:column="20"/></name> <argument_list pos:line="52" pos:column="21">(<argument><expr><name pos:line="52" pos:column="22">g<pos:position pos:line="52" pos:column="23"/></name></expr></argument>)<pos:position pos:line="52" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt> <comment type="block" pos:line="52" pos:column="26">/* BEGIN annotations */</comment>

  <expr_stmt><expr><call><name pos:line="54" pos:column="3">JSON_ADD<pos:position pos:line="54" pos:column="11"/></name> <argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">g<pos:position pos:line="54" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="16">"summary"<pos:position pos:line="54" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">JSON_ADD<pos:position pos:line="55" pos:column="11"/></name> <argument_list pos:line="55" pos:column="12">(<argument><expr><name pos:line="55" pos:column="13">g<pos:position pos:line="55" pos:column="14"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="16">n<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="19">message<pos:position pos:line="55" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="28"/></expr_stmt>

  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><call><name pos:line="57" pos:column="7">format_json_meta<pos:position pos:line="57" pos:column="23"/></name> <argument_list pos:line="57" pos:column="24">(<argument><expr><name pos:line="57" pos:column="25">g<pos:position pos:line="57" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="28">n<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">-&gt;<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="31">meta<pos:position pos:line="57" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="36"/></argument_list></call> <operator pos:line="57" pos:column="37">!=<pos:position pos:line="57" pos:column="39"/></operator> <literal type="number" pos:line="57" pos:column="40">0<pos:position pos:line="57" pos:column="41"/></literal></expr>)<pos:position pos:line="57" pos:column="42"/></condition><then pos:line="57" pos:column="42">
    <block type="pseudo"><return pos:line="58" pos:column="5">return <expr><operator pos:line="58" pos:column="12">-<pos:position pos:line="58" pos:column="13"/></operator><literal type="number" pos:line="58" pos:column="13">1<pos:position pos:line="58" pos:column="14"/></literal></expr>;<pos:position pos:line="58" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="60" pos:column="3">yajl_gen_map_close<pos:position pos:line="60" pos:column="21"/></name> <argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">g<pos:position pos:line="60" pos:column="24"/></name></expr></argument>)<pos:position pos:line="60" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="26"/></expr_stmt> <comment type="block" pos:line="60" pos:column="27">/* END annotations */</comment>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">JSON_ADD<pos:position pos:line="62" pos:column="11"/></name> <argument_list pos:line="62" pos:column="12">(<argument><expr><name pos:line="62" pos:column="13">g<pos:position pos:line="62" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="16">"startsAt"<pos:position pos:line="62" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="63" pos:column="3">format_time<pos:position pos:line="63" pos:column="14"/></name> <argument_list pos:line="63" pos:column="15">(<argument><expr><name pos:line="63" pos:column="16">g<pos:position pos:line="63" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="19">n<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">time<pos:position pos:line="63" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="65" pos:column="3">yajl_gen_map_close<pos:position pos:line="65" pos:column="21"/></name> <argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">g<pos:position pos:line="65" pos:column="24"/></name></expr></argument>)<pos:position pos:line="65" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="26"/></expr_stmt> <comment type="block" pos:line="65" pos:column="27">/* END alert */</comment>
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">yajl_gen_array_close<pos:position pos:line="66" pos:column="23"/></name> <argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">g<pos:position pos:line="66" pos:column="26"/></name></expr></argument>)<pos:position pos:line="66" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>

  <return pos:line="68" pos:column="3">return <expr><literal type="number" pos:line="68" pos:column="10">0<pos:position pos:line="68" pos:column="11"/></literal></expr>;<pos:position pos:line="68" pos:column="12"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_169_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">varnish_read<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">user_data_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ud<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list> <comment type="block" pos:line="1" pos:column="42">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">||<pos:position pos:line="3" pos:column="23"/></operator> <name pos:line="3" pos:column="24">HAVE_VARNISH_V4<pos:position pos:line="3" pos:column="39"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">VSM_data<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">vd<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">_Bool<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">ok<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">c_varnish_stats_t<pos:position pos:line="6" pos:column="26"/></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">stats<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
<cpp:elif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">elif<pos:position pos:line="7" pos:column="6"/></cpp:directive> <expr><name pos:line="7" pos:column="7">HAVE_VARNISH_V5<pos:position pos:line="7" pos:column="22"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">vsm<pos:position pos:line="8" pos:column="13"/></name></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">vd<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">vsc<pos:position pos:line="9" pos:column="13"/></name></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">vsc<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">vsm_status<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">user_config_t<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type><name pos:line="13" pos:column="18">conf<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">ud<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">==<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">NULL<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">)<pos:position pos:line="15" pos:column="19"/></operator> <operator pos:line="15" pos:column="20">||<pos:position pos:line="15" pos:column="22"/></operator> <operator pos:line="15" pos:column="23">(<pos:position pos:line="15" pos:column="24"/></operator><name><name pos:line="15" pos:column="24">ud<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">data<pos:position pos:line="15" pos:column="32"/></name></name> <operator pos:line="15" pos:column="33">==<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="36">NULL<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">)<pos:position pos:line="15" pos:column="41"/></operator></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">EINVAL<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">conf<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <name><name pos:line="18" pos:column="10">ud<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">data<pos:position pos:line="18" pos:column="18"/></name></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><name pos:line="20" pos:column="3">vd<pos:position pos:line="20" pos:column="5"/></name> <operator pos:line="20" pos:column="6">=<pos:position pos:line="20" pos:column="7"/></operator> <call><name pos:line="20" pos:column="8">VSM_New<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">()<pos:position pos:line="20" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>

<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><name pos:line="22" pos:column="5">HAVE_VARNISH_V5<pos:position pos:line="22" pos:column="20"/></name></expr></cpp:if>
  <expr_stmt><expr><name pos:line="23" pos:column="3">vsc<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <call><name pos:line="23" pos:column="9">VSC_New<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">()<pos:position pos:line="23" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">if<pos:position pos:line="26" pos:column="4"/></cpp:directive> <expr><name pos:line="26" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="26" pos:column="20"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">VSC_Setup<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">vd<pos:position pos:line="27" pos:column="15"/></name></expr></argument>)<pos:position pos:line="27" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name><name pos:line="30" pos:column="7">conf<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">instance<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">!=<pos:position pos:line="30" pos:column="24"/></operator> <name pos:line="30" pos:column="25">NULL<pos:position pos:line="30" pos:column="29"/></name></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30"> <block pos:line="30" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">int<pos:position pos:line="31" pos:column="8"/></name></type> <name pos:line="31" pos:column="9">status<pos:position pos:line="31" pos:column="15"/></name></decl>;<pos:position pos:line="31" pos:column="16"/></decl_stmt>

<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">||<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">HAVE_VARNISH_V4<pos:position pos:line="33" pos:column="39"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="34" pos:column="5">status<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <call><name pos:line="34" pos:column="14">VSM_n_Arg<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">vd<pos:position pos:line="34" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="28">conf<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">-&gt;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="34">instance<pos:position pos:line="34" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>
<cpp:elif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">elif<pos:position pos:line="35" pos:column="6"/></cpp:directive> <expr><name pos:line="35" pos:column="7">HAVE_VARNISH_V5<pos:position pos:line="35" pos:column="22"/></name></expr></cpp:elif>
    <expr_stmt><expr><name pos:line="36" pos:column="5">status<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">VSM_Arg<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">vd<pos:position pos:line="36" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="26">'n'<pos:position pos:line="36" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="31">conf<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">-&gt;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="37">instance<pos:position pos:line="36" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">status<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">&lt;<pos:position pos:line="39" pos:column="20"/></operator> <literal type="number" pos:line="39" pos:column="18">0<pos:position pos:line="39" pos:column="19"/></literal></expr>)<pos:position pos:line="39" pos:column="20"/></condition><then pos:line="39" pos:column="20"> <block pos:line="39" pos:column="21">{
<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><name pos:line="40" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">||<pos:position pos:line="40" pos:column="23"/></operator> <name pos:line="40" pos:column="24">HAVE_VARNISH_V4<pos:position pos:line="40" pos:column="39"/></name></expr></cpp:if>
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">VSM_Delete<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><name pos:line="41" pos:column="18">vd<pos:position pos:line="41" pos:column="20"/></name></expr></argument>)<pos:position pos:line="41" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="22"/></expr_stmt>
<cpp:elif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">elif<pos:position pos:line="42" pos:column="6"/></cpp:directive> <expr><name pos:line="42" pos:column="7">HAVE_VARNISH_V5<pos:position pos:line="42" pos:column="22"/></name></expr></cpp:elif>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">VSC_Destroy<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><operator pos:line="43" pos:column="19">&amp;<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="20">vsc<pos:position pos:line="43" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="25">vd<pos:position pos:line="43" pos:column="27"/></name></expr></argument>)<pos:position pos:line="43" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">VSM_Destroy<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><operator pos:line="44" pos:column="19">&amp;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="20">vd<pos:position pos:line="44" pos:column="22"/></name></expr></argument>)<pos:position pos:line="44" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">ERROR<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">(<argument><expr><literal type="string" pos:line="46" pos:column="13">"varnish plugin: VSM_Arg (\"%s\") failed "<pos:position pos:line="46" pos:column="55"/></literal>
            <literal type="string" pos:line="47" pos:column="13">"with status %i."<pos:position pos:line="47" pos:column="30"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="48" pos:column="13">conf<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">instance<pos:position pos:line="48" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="29">status<pos:position pos:line="48" pos:column="35"/></name></expr></argument>)<pos:position pos:line="48" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>
      <return pos:line="49" pos:column="7">return <expr><operator pos:line="49" pos:column="14">-<pos:position pos:line="49" pos:column="15"/></operator><literal type="number" pos:line="49" pos:column="15">1<pos:position pos:line="49" pos:column="16"/></literal></expr>;<pos:position pos:line="49" pos:column="17"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

<cpp:if pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">if<pos:position pos:line="53" pos:column="4"/></cpp:directive> <expr><name pos:line="53" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="53" pos:column="20"/></name></expr></cpp:if>
  <expr_stmt><expr><name pos:line="54" pos:column="3">ok<pos:position pos:line="54" pos:column="5"/></name> <operator pos:line="54" pos:column="6">=<pos:position pos:line="54" pos:column="7"/></operator> <operator pos:line="54" pos:column="8">(<pos:position pos:line="54" pos:column="9"/></operator><call><name pos:line="54" pos:column="9">VSC_Open<pos:position pos:line="54" pos:column="17"/></name><argument_list pos:line="54" pos:column="17">(<argument><expr><name pos:line="54" pos:column="18">vd<pos:position pos:line="54" pos:column="20"/></name></expr></argument>, <comment type="block" pos:line="54" pos:column="22">/* diag = */</comment> <argument><expr><literal type="number" pos:line="54" pos:column="35">1<pos:position pos:line="54" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="37"/></argument_list></call> <operator pos:line="54" pos:column="38">==<pos:position pos:line="54" pos:column="40"/></operator> <literal type="number" pos:line="54" pos:column="41">0<pos:position pos:line="54" pos:column="42"/></literal><operator pos:line="54" pos:column="42">)<pos:position pos:line="54" pos:column="43"/></operator></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt>
<cpp:elif pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">elif<pos:position pos:line="55" pos:column="6"/></cpp:directive> <expr><name pos:line="55" pos:column="7">HAVE_VARNISH_V4<pos:position pos:line="55" pos:column="22"/></name></expr></cpp:elif>
  <expr_stmt><expr><name pos:line="56" pos:column="3">ok<pos:position pos:line="56" pos:column="5"/></name> <operator pos:line="56" pos:column="6">=<pos:position pos:line="56" pos:column="7"/></operator> <operator pos:line="56" pos:column="8">(<pos:position pos:line="56" pos:column="9"/></operator><call><name pos:line="56" pos:column="9">VSM_Open<pos:position pos:line="56" pos:column="17"/></name><argument_list pos:line="56" pos:column="17">(<argument><expr><name pos:line="56" pos:column="18">vd<pos:position pos:line="56" pos:column="20"/></name></expr></argument>)<pos:position pos:line="56" pos:column="21"/></argument_list></call> <operator pos:line="56" pos:column="22">==<pos:position pos:line="56" pos:column="24"/></operator> <literal type="number" pos:line="56" pos:column="25">0<pos:position pos:line="56" pos:column="26"/></literal><operator pos:line="56" pos:column="26">)<pos:position pos:line="56" pos:column="27"/></operator></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">if<pos:position pos:line="58" pos:column="4"/></cpp:directive> <expr><name pos:line="58" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">||<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">HAVE_VARNISH_V4<pos:position pos:line="58" pos:column="39"/></name></expr></cpp:if>
  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><operator pos:line="59" pos:column="7">!<pos:position pos:line="59" pos:column="8"/></operator><name pos:line="59" pos:column="8">ok<pos:position pos:line="59" pos:column="10"/></name></expr>)<pos:position pos:line="59" pos:column="11"/></condition><then pos:line="59" pos:column="11"> <block pos:line="59" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">VSM_Delete<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><name pos:line="60" pos:column="16">vd<pos:position pos:line="60" pos:column="18"/></name></expr></argument>)<pos:position pos:line="60" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">ERROR<pos:position pos:line="61" pos:column="10"/></name><argument_list pos:line="61" pos:column="10">(<argument><expr><literal type="string" pos:line="61" pos:column="11">"varnish plugin: Unable to open connection."<pos:position pos:line="61" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="57"/></expr_stmt>
    <return pos:line="62" pos:column="5">return <expr><operator pos:line="62" pos:column="12">-<pos:position pos:line="62" pos:column="13"/></operator><literal type="number" pos:line="62" pos:column="13">1<pos:position pos:line="62" pos:column="14"/></literal></expr>;<pos:position pos:line="62" pos:column="15"/></return>
  }<pos:position pos:line="63" pos:column="4"/></block></then></if>
<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">if<pos:position pos:line="66" pos:column="4"/></cpp:directive> <expr><name pos:line="66" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="66" pos:column="20"/></name></expr></cpp:if>
  <expr_stmt><expr><name pos:line="67" pos:column="3">stats<pos:position pos:line="67" pos:column="8"/></name> <operator pos:line="67" pos:column="9">=<pos:position pos:line="67" pos:column="10"/></operator> <call><name pos:line="67" pos:column="11">VSC_Main<pos:position pos:line="67" pos:column="19"/></name><argument_list pos:line="67" pos:column="19">(<argument><expr><name pos:line="67" pos:column="20">vd<pos:position pos:line="67" pos:column="22"/></name></expr></argument>)<pos:position pos:line="67" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt>
<cpp:elif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">elif<pos:position pos:line="68" pos:column="6"/></cpp:directive> <expr><name pos:line="68" pos:column="7">HAVE_VARNISH_V4<pos:position pos:line="68" pos:column="22"/></name></expr></cpp:elif>
  <expr_stmt><expr><name pos:line="69" pos:column="3">stats<pos:position pos:line="69" pos:column="8"/></name> <operator pos:line="69" pos:column="9">=<pos:position pos:line="69" pos:column="10"/></operator> <call><name pos:line="69" pos:column="11">VSC_Main<pos:position pos:line="69" pos:column="19"/></name><argument_list pos:line="69" pos:column="19">(<argument><expr><name pos:line="69" pos:column="20">vd<pos:position pos:line="69" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="24">NULL<pos:position pos:line="69" pos:column="28"/></name></expr></argument>)<pos:position pos:line="69" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">if<pos:position pos:line="71" pos:column="4"/></cpp:directive> <expr><name pos:line="71" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="71" pos:column="20"/></name> <operator pos:line="71" pos:column="21">||<pos:position pos:line="71" pos:column="23"/></operator> <name pos:line="71" pos:column="24">HAVE_VARNISH_V4<pos:position pos:line="71" pos:column="39"/></name></expr></cpp:if>
  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><operator pos:line="72" pos:column="7">!<pos:position pos:line="72" pos:column="8"/></operator><name pos:line="72" pos:column="8">stats<pos:position pos:line="72" pos:column="13"/></name></expr>)<pos:position pos:line="72" pos:column="14"/></condition><then pos:line="72" pos:column="14"> <block pos:line="72" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">VSM_Delete<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><name pos:line="73" pos:column="16">vd<pos:position pos:line="73" pos:column="18"/></name></expr></argument>)<pos:position pos:line="73" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">ERROR<pos:position pos:line="74" pos:column="10"/></name><argument_list pos:line="74" pos:column="10">(<argument><expr><literal type="string" pos:line="74" pos:column="11">"varnish plugin: Unable to get statistics."<pos:position pos:line="74" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="56"/></expr_stmt>
    <return pos:line="75" pos:column="5">return <expr><operator pos:line="75" pos:column="12">-<pos:position pos:line="75" pos:column="13"/></operator><literal type="number" pos:line="75" pos:column="13">1<pos:position pos:line="75" pos:column="14"/></literal></expr>;<pos:position pos:line="75" pos:column="15"/></return>
  }<pos:position pos:line="76" pos:column="4"/></block></then></if>
<cpp:endif pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">endif<pos:position pos:line="77" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">if<pos:position pos:line="79" pos:column="4"/></cpp:directive> <expr><name pos:line="79" pos:column="5">HAVE_VARNISH_V5<pos:position pos:line="79" pos:column="20"/></name></expr></cpp:if>
  <if pos:line="80" pos:column="3">if <condition pos:line="80" pos:column="6">(<expr><call><name pos:line="80" pos:column="7">VSM_Attach<pos:position pos:line="80" pos:column="17"/></name><argument_list pos:line="80" pos:column="17">(<argument><expr><name pos:line="80" pos:column="18">vd<pos:position pos:line="80" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="22">STDERR_FILENO<pos:position pos:line="80" pos:column="35"/></name></expr></argument>)<pos:position pos:line="80" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="37"/></condition><then pos:line="80" pos:column="37"> <block pos:line="80" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">ERROR<pos:position pos:line="81" pos:column="10"/></name><argument_list pos:line="81" pos:column="10">(<argument><expr><literal type="string" pos:line="81" pos:column="11">"varnish plugin: Cannot attach to varnish. %s"<pos:position pos:line="81" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="81" pos:column="59">VSM_Error<pos:position pos:line="81" pos:column="68"/></name><argument_list pos:line="81" pos:column="68">(<argument><expr><name pos:line="81" pos:column="69">vd<pos:position pos:line="81" pos:column="71"/></name></expr></argument>)<pos:position pos:line="81" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">VSC_Destroy<pos:position pos:line="82" pos:column="16"/></name><argument_list pos:line="82" pos:column="16">(<argument><expr><operator pos:line="82" pos:column="17">&amp;<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="18">vsc<pos:position pos:line="82" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="23">vd<pos:position pos:line="82" pos:column="25"/></name></expr></argument>)<pos:position pos:line="82" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">VSM_Destroy<pos:position pos:line="83" pos:column="16"/></name><argument_list pos:line="83" pos:column="16">(<argument><expr><operator pos:line="83" pos:column="17">&amp;<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="18">vd<pos:position pos:line="83" pos:column="20"/></name></expr></argument>)<pos:position pos:line="83" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="22"/></expr_stmt>
    <return pos:line="84" pos:column="5">return <expr><operator pos:line="84" pos:column="12">-<pos:position pos:line="84" pos:column="13"/></operator><literal type="number" pos:line="84" pos:column="13">1<pos:position pos:line="84" pos:column="14"/></literal></expr>;<pos:position pos:line="84" pos:column="15"/></return>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="87" pos:column="3">vsm_status<pos:position pos:line="87" pos:column="13"/></name> <operator pos:line="87" pos:column="14">=<pos:position pos:line="87" pos:column="15"/></operator> <call><name pos:line="87" pos:column="16">VSM_Status<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><name pos:line="87" pos:column="27">vd<pos:position pos:line="87" pos:column="29"/></name></expr></argument>)<pos:position pos:line="87" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="31"/></expr_stmt>
  <if pos:line="88" pos:column="3">if <condition pos:line="88" pos:column="6">(<expr><name pos:line="88" pos:column="7">vsm_status<pos:position pos:line="88" pos:column="17"/></name> <operator pos:line="88" pos:column="18">&amp;<pos:position pos:line="88" pos:column="23"/></operator> <operator pos:line="88" pos:column="20">~<pos:position pos:line="88" pos:column="21"/></operator><operator pos:line="88" pos:column="21">(<pos:position pos:line="88" pos:column="22"/></operator><name pos:line="88" pos:column="22">VSM_MGT_RUNNING<pos:position pos:line="88" pos:column="37"/></name> <operator pos:line="88" pos:column="38">|<pos:position pos:line="88" pos:column="39"/></operator> <name pos:line="88" pos:column="40">VSM_WRK_RUNNING<pos:position pos:line="88" pos:column="55"/></name><operator pos:line="88" pos:column="55">)<pos:position pos:line="88" pos:column="56"/></operator></expr>)<pos:position pos:line="88" pos:column="57"/></condition><then pos:line="88" pos:column="57"> <block pos:line="88" pos:column="58">{
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">ERROR<pos:position pos:line="89" pos:column="10"/></name><argument_list pos:line="89" pos:column="10">(<argument><expr><literal type="string" pos:line="89" pos:column="11">"varnish plugin: Unable to get statistics."<pos:position pos:line="89" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">VSC_Destroy<pos:position pos:line="90" pos:column="16"/></name><argument_list pos:line="90" pos:column="16">(<argument><expr><operator pos:line="90" pos:column="17">&amp;<pos:position pos:line="90" pos:column="22"/></operator><name pos:line="90" pos:column="18">vsc<pos:position pos:line="90" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="23">vd<pos:position pos:line="90" pos:column="25"/></name></expr></argument>)<pos:position pos:line="90" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">VSM_Destroy<pos:position pos:line="91" pos:column="16"/></name><argument_list pos:line="91" pos:column="16">(<argument><expr><operator pos:line="91" pos:column="17">&amp;<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="18">vd<pos:position pos:line="91" pos:column="20"/></name></expr></argument>)<pos:position pos:line="91" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="22"/></expr_stmt>
    <return pos:line="92" pos:column="5">return <expr><operator pos:line="92" pos:column="12">-<pos:position pos:line="92" pos:column="13"/></operator><literal type="number" pos:line="92" pos:column="13">1<pos:position pos:line="92" pos:column="14"/></literal></expr>;<pos:position pos:line="92" pos:column="15"/></return>
  }<pos:position pos:line="93" pos:column="4"/></block></then></if>
<cpp:endif pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">endif<pos:position pos:line="94" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">if<pos:position pos:line="96" pos:column="4"/></cpp:directive> <expr><name pos:line="96" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="96" pos:column="20"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="97" pos:column="3">VSC_Iter<pos:position pos:line="97" pos:column="11"/></name><argument_list pos:line="97" pos:column="11">(<argument><expr><name pos:line="97" pos:column="12">vd<pos:position pos:line="97" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="16">varnish_monitor<pos:position pos:line="97" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="33">conf<pos:position pos:line="97" pos:column="37"/></name></expr></argument>)<pos:position pos:line="97" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="39"/></expr_stmt>
<cpp:elif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">elif<pos:position pos:line="98" pos:column="6"/></cpp:directive> <expr><name pos:line="98" pos:column="7">HAVE_VARNISH_V4<pos:position pos:line="98" pos:column="22"/></name></expr></cpp:elif>
  <expr_stmt><expr><call><name pos:line="99" pos:column="3">VSC_Iter<pos:position pos:line="99" pos:column="11"/></name><argument_list pos:line="99" pos:column="11">(<argument><expr><name pos:line="99" pos:column="12">vd<pos:position pos:line="99" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="16">NULL<pos:position pos:line="99" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="22">varnish_monitor<pos:position pos:line="99" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="39">conf<pos:position pos:line="99" pos:column="43"/></name></expr></argument>)<pos:position pos:line="99" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="45"/></expr_stmt>
<cpp:elif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">elif<pos:position pos:line="100" pos:column="6"/></cpp:directive> <expr><name pos:line="100" pos:column="7">HAVE_VARNISH_V5<pos:position pos:line="100" pos:column="22"/></name></expr></cpp:elif>
  <expr_stmt><expr><call><name pos:line="101" pos:column="3">VSC_Iter<pos:position pos:line="101" pos:column="11"/></name><argument_list pos:line="101" pos:column="11">(<argument><expr><name pos:line="101" pos:column="12">vsc<pos:position pos:line="101" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="17">vd<pos:position pos:line="101" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="21">varnish_monitor<pos:position pos:line="101" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="38">conf<pos:position pos:line="101" pos:column="42"/></name></expr></argument>)<pos:position pos:line="101" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif<pos:position pos:line="102" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">if<pos:position pos:line="104" pos:column="4"/></cpp:directive> <expr><name pos:line="104" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="104" pos:column="20"/></name> <operator pos:line="104" pos:column="21">||<pos:position pos:line="104" pos:column="23"/></operator> <name pos:line="104" pos:column="24">HAVE_VARNISH_V4<pos:position pos:line="104" pos:column="39"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="105" pos:column="3">VSM_Delete<pos:position pos:line="105" pos:column="13"/></name><argument_list pos:line="105" pos:column="13">(<argument><expr><name pos:line="105" pos:column="14">vd<pos:position pos:line="105" pos:column="16"/></name></expr></argument>)<pos:position pos:line="105" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="18"/></expr_stmt>
<cpp:elif pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">elif<pos:position pos:line="106" pos:column="6"/></cpp:directive> <expr><name pos:line="106" pos:column="7">HAVE_VARNISH_V5<pos:position pos:line="106" pos:column="22"/></name></expr></cpp:elif>
  <expr_stmt><expr><call><name pos:line="107" pos:column="3">VSC_Destroy<pos:position pos:line="107" pos:column="14"/></name><argument_list pos:line="107" pos:column="14">(<argument><expr><operator pos:line="107" pos:column="15">&amp;<pos:position pos:line="107" pos:column="20"/></operator><name pos:line="107" pos:column="16">vsc<pos:position pos:line="107" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="21">vd<pos:position pos:line="107" pos:column="23"/></name></expr></argument>)<pos:position pos:line="107" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="108" pos:column="3">VSM_Destroy<pos:position pos:line="108" pos:column="14"/></name><argument_list pos:line="108" pos:column="14">(<argument><expr><operator pos:line="108" pos:column="15">&amp;<pos:position pos:line="108" pos:column="20"/></operator><name pos:line="108" pos:column="16">vd<pos:position pos:line="108" pos:column="18"/></name></expr></argument>)<pos:position pos:line="108" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif<pos:position pos:line="109" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="111" pos:column="3">return <expr><literal type="number" pos:line="111" pos:column="10">0<pos:position pos:line="111" pos:column="11"/></literal></expr>;<pos:position pos:line="111" pos:column="12"/></return>
}<pos:position pos:line="112" pos:column="2"/></block></function></unit>

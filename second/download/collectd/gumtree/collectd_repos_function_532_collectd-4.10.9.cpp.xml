<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_532_collectd-4.10.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">sstrerror<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">errnum<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">buf<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">size_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">buflen<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name><name pos:line="3" pos:column="9">buf<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr>]<pos:position pos:line="3" pos:column="15"/></index></name> <operator pos:line="3" pos:column="16">=<pos:position pos:line="3" pos:column="17"/></operator> <literal type="char" pos:line="3" pos:column="18">'\0'<pos:position pos:line="3" pos:column="22"/></literal></expr>;<pos:position pos:line="3" pos:column="23"/></expr_stmt>

<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><operator pos:line="5" pos:column="5">!<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">HAVE_STRERROR_R<pos:position pos:line="5" pos:column="21"/></name></expr></cpp:if>
	<block pos:line="6" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">char<pos:position pos:line="7" pos:column="21"/></name> <modifier pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></modifier></type><name pos:line="7" pos:column="23">temp<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="9" pos:column="17">pthread_mutex_lock<pos:position pos:line="9" pos:column="35"/></name> <argument_list pos:line="9" pos:column="36">(<argument><expr><operator pos:line="9" pos:column="37">&amp;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="38">strerror_r_lock<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>

		<expr_stmt><expr><name pos:line="11" pos:column="17">temp<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <call><name pos:line="11" pos:column="24">strerror<pos:position pos:line="11" pos:column="32"/></name> <argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">errnum<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">sstrncpy<pos:position pos:line="12" pos:column="25"/></name> <argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">buf<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">temp<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">buflen<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="14" pos:column="17">pthread_mutex_unlock<pos:position pos:line="14" pos:column="37"/></name> <argument_list pos:line="14" pos:column="38">(<argument><expr><operator pos:line="14" pos:column="39">&amp;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="40">strerror_r_lock<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block>
<comment type="block" pos:line="16" pos:column="1">/* #endif !HAVE_STRERROR_R */</comment>

<cpp:elif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">elif<pos:position pos:line="18" pos:column="6"/></cpp:directive> <expr><name pos:line="18" pos:column="7">STRERROR_R_CHAR_P<pos:position pos:line="18" pos:column="24"/></name></expr></cpp:elif>
	<block pos:line="19" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">char<pos:position pos:line="20" pos:column="21"/></name> <modifier pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></modifier></type><name pos:line="20" pos:column="23">temp<pos:position pos:line="20" pos:column="27"/></name></decl>;<pos:position pos:line="20" pos:column="28"/></decl_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">temp<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">strerror_r<pos:position pos:line="21" pos:column="34"/></name> <argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">errnum<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">buf<pos:position pos:line="21" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">buflen<pos:position pos:line="21" pos:column="55"/></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">buf<pos:position pos:line="22" pos:column="24"/></name><index pos:line="22" pos:column="24">[<expr><literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr>]<pos:position pos:line="22" pos:column="27"/></index></name> <operator pos:line="22" pos:column="28">==<pos:position pos:line="22" pos:column="30"/></operator> <literal type="char" pos:line="22" pos:column="31">'\0'<pos:position pos:line="22" pos:column="35"/></literal></expr>)<pos:position pos:line="22" pos:column="36"/></condition><then pos:line="22" pos:column="36">
		<block pos:line="23" pos:column="17">{
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><operator pos:line="24" pos:column="29">(<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">temp<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">!=<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="38">NULL<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">)<pos:position pos:line="24" pos:column="43"/></operator> <operator pos:line="24" pos:column="44">&amp;&amp;<pos:position pos:line="24" pos:column="54"/></operator> <operator pos:line="24" pos:column="47">(<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="48">temp<pos:position pos:line="24" pos:column="52"/></name> <operator pos:line="24" pos:column="53">!=<pos:position pos:line="24" pos:column="55"/></operator> <name pos:line="24" pos:column="56">buf<pos:position pos:line="24" pos:column="59"/></name><operator pos:line="24" pos:column="59">)<pos:position pos:line="24" pos:column="60"/></operator> <operator pos:line="24" pos:column="61">&amp;&amp;<pos:position pos:line="24" pos:column="71"/></operator> <operator pos:line="24" pos:column="64">(<pos:position pos:line="24" pos:column="65"/></operator><name><name pos:line="24" pos:column="65">temp<pos:position pos:line="24" pos:column="69"/></name><index pos:line="24" pos:column="69">[<expr><literal type="number" pos:line="24" pos:column="70">0<pos:position pos:line="24" pos:column="71"/></literal></expr>]<pos:position pos:line="24" pos:column="72"/></index></name> <operator pos:line="24" pos:column="73">!=<pos:position pos:line="24" pos:column="75"/></operator> <literal type="char" pos:line="24" pos:column="76">'\0'<pos:position pos:line="24" pos:column="80"/></literal><operator pos:line="24" pos:column="80">)<pos:position pos:line="24" pos:column="81"/></operator></expr>)<pos:position pos:line="24" pos:column="82"/></condition><then pos:line="24" pos:column="82">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="33">sstrncpy<pos:position pos:line="25" pos:column="41"/></name> <argument_list pos:line="25" pos:column="42">(<argument><expr><name pos:line="25" pos:column="43">buf<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">temp<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">buflen<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt></block></then>
			<else pos:line="26" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="33">sstrncpy<pos:position pos:line="27" pos:column="41"/></name> <argument_list pos:line="27" pos:column="42">(<argument><expr><name pos:line="27" pos:column="43">buf<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="48">"strerror_r did not return "<pos:position pos:line="27" pos:column="76"/></literal>
						<literal type="string" pos:line="28" pos:column="49">"an error message"<pos:position pos:line="28" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="69">buflen<pos:position pos:line="28" pos:column="75"/></name></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt></block></else></if>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block>
<comment type="block" pos:line="31" pos:column="1">/* #endif STRERROR_R_CHAR_P */</comment>

<cpp:else pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">else<pos:position pos:line="33" pos:column="6"/></cpp:directive></cpp:else>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">strerror_r<pos:position pos:line="34" pos:column="23"/></name> <argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">errnum<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="33">buf<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="38">buflen<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call> <operator pos:line="34" pos:column="46">!=<pos:position pos:line="34" pos:column="48"/></operator> <literal type="number" pos:line="34" pos:column="49">0<pos:position pos:line="34" pos:column="50"/></literal></expr>)<pos:position pos:line="34" pos:column="51"/></condition><then pos:line="34" pos:column="51">
	<block pos:line="35" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">ssnprintf<pos:position pos:line="36" pos:column="26"/></name> <argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">buf<pos:position pos:line="36" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="33">buflen<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="41">"Error #%i; "<pos:position pos:line="36" pos:column="54"/></literal>
				<literal type="string" pos:line="37" pos:column="33">"Additionally, strerror_r failed."<pos:position pos:line="37" pos:column="67"/></literal></expr></argument>,
				<argument><expr><name pos:line="38" pos:column="33">errnum<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="40" pos:column="8">/* STRERROR_R_CHAR_P */</comment>

	<return pos:line="42" pos:column="9">return <expr><operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="17">buf<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">)<pos:position pos:line="42" pos:column="21"/></operator></expr>;<pos:position pos:line="42" pos:column="22"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2130_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cj_cb_inc_array_index<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">ctx<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">_Bool<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">update_key<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list> <block pos:line="1" pos:column="64">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">cj_t<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">db<pos:position pos:line="2" pos:column="11"/></name> <init pos:line="2" pos:column="12">= <expr><operator pos:line="2" pos:column="14">(<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">cj_t<pos:position pos:line="2" pos:column="19"/></name> <operator pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></operator><operator pos:line="2" pos:column="21">)<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">ctx<pos:position pos:line="2" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name><name pos:line="4" pos:column="8">db<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">-&gt;<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="12">state<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><name><name pos:line="4" pos:column="18">db<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">depth<pos:position pos:line="4" pos:column="27"/></name></name></expr>]<pos:position pos:line="4" pos:column="28"/></index></name><operator pos:line="4" pos:column="28">.<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">in_array<pos:position pos:line="4" pos:column="37"/></name></expr>)<pos:position pos:line="4" pos:column="38"/></condition><then pos:line="4" pos:column="38">
    <block type="pseudo"><return pos:line="5" pos:column="5">return;<pos:position pos:line="5" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="7" pos:column="3">db<pos:position pos:line="7" pos:column="5"/></name><operator pos:line="7" pos:column="5">-&gt;<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="7">state<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><name><name pos:line="7" pos:column="13">db<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">depth<pos:position pos:line="7" pos:column="22"/></name></name></expr>]<pos:position pos:line="7" pos:column="23"/></index></name><operator pos:line="7" pos:column="23">.<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">index<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">++<pos:position pos:line="7" pos:column="31"/></operator></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">update_key<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">name<pos:position pos:line="10" pos:column="14"/></name><index pos:line="10" pos:column="14">[<expr><name pos:line="10" pos:column="15">DATA_MAX_NAME_LEN<pos:position pos:line="10" pos:column="32"/></name></expr>]<pos:position pos:line="10" pos:column="33"/></index></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ssnprintf<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">name<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="21">sizeof<argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">name<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="35">"%d"<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="41">db<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">state<pos:position pos:line="12" pos:column="50"/></name><index pos:line="12" pos:column="50">[<expr><name><name pos:line="12" pos:column="51">db<pos:position pos:line="12" pos:column="53"/></name><operator pos:line="12" pos:column="53">-&gt;<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="55">depth<pos:position pos:line="12" pos:column="60"/></name></name></expr>]<pos:position pos:line="12" pos:column="61"/></index></name><operator pos:line="12" pos:column="61">.<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="62">index<pos:position pos:line="12" pos:column="67"/></name> <operator pos:line="12" pos:column="68">-<pos:position pos:line="12" pos:column="69"/></operator> <literal type="number" pos:line="12" pos:column="70">1<pos:position pos:line="12" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="73"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">cj_cb_map_key<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">ctx<pos:position pos:line="14" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">unsigned<pos:position pos:line="14" pos:column="33"/></name> <name pos:line="14" pos:column="34">char<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">*<pos:position pos:line="14" pos:column="40"/></operator><operator pos:line="14" pos:column="40">)<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="41">name<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="47">(<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="48">yajl_len_t<pos:position pos:line="14" pos:column="58"/></name><operator pos:line="14" pos:column="58">)<pos:position pos:line="14" pos:column="59"/></operator><call><name pos:line="14" pos:column="59">strlen<pos:position pos:line="14" pos:column="65"/></name><argument_list pos:line="14" pos:column="65">(<argument><expr><name pos:line="14" pos:column="66">name<pos:position pos:line="14" pos:column="70"/></name></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_588_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">cmd_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">cmd_parse_option<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">field<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ret_key<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier><modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">ret_value<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">cmd_error_handler_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">err<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list> <block pos:line="2" pos:column="57">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">key<pos:position pos:line="3" pos:column="12"/></name></decl>, <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="15">value<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">field<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">==<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21"> <block pos:line="5" pos:column="22">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">errno<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <name pos:line="6" pos:column="13">EINVAL<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">cmd_error<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">CMD_ERROR<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="26">err<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="31">"Invalid argument to cmd_parse_option."<pos:position pos:line="7" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="72"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">CMD_ERROR<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">)<pos:position pos:line="8" pos:column="23"/></operator></expr>;<pos:position pos:line="8" pos:column="24"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="10" pos:column="3">key<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <name pos:line="10" pos:column="9">value<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">field<pos:position pos:line="10" pos:column="22"/></name></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* Look for the equal sign. */</comment>
  <while pos:line="13" pos:column="3">while <condition pos:line="13" pos:column="9">(<expr><call><name pos:line="13" pos:column="10">isalnum<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">int<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator><name><name pos:line="13" pos:column="23">value<pos:position pos:line="13" pos:column="28"/></name><index pos:line="13" pos:column="28">[<expr><literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr>]<pos:position pos:line="13" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call> <operator pos:line="13" pos:column="33">||<pos:position pos:line="13" pos:column="35"/></operator> <operator pos:line="13" pos:column="36">(<pos:position pos:line="13" pos:column="37"/></operator><name><name pos:line="13" pos:column="37">value<pos:position pos:line="13" pos:column="42"/></name><index pos:line="13" pos:column="42">[<expr><literal type="number" pos:line="13" pos:column="43">0<pos:position pos:line="13" pos:column="44"/></literal></expr>]<pos:position pos:line="13" pos:column="45"/></index></name> <operator pos:line="13" pos:column="46">==<pos:position pos:line="13" pos:column="48"/></operator> <literal type="char" pos:line="13" pos:column="49">'_'<pos:position pos:line="13" pos:column="52"/></literal><operator pos:line="13" pos:column="52">)<pos:position pos:line="13" pos:column="53"/></operator> <operator pos:line="13" pos:column="54">||<pos:position pos:line="13" pos:column="56"/></operator> <operator pos:line="13" pos:column="57">(<pos:position pos:line="13" pos:column="58"/></operator><name><name pos:line="13" pos:column="58">value<pos:position pos:line="13" pos:column="63"/></name><index pos:line="13" pos:column="63">[<expr><literal type="number" pos:line="13" pos:column="64">0<pos:position pos:line="13" pos:column="65"/></literal></expr>]<pos:position pos:line="13" pos:column="66"/></index></name> <operator pos:line="13" pos:column="67">==<pos:position pos:line="13" pos:column="69"/></operator> <literal type="char" pos:line="13" pos:column="70">':'<pos:position pos:line="13" pos:column="73"/></literal><operator pos:line="13" pos:column="73">)<pos:position pos:line="13" pos:column="74"/></operator></expr>)<pos:position pos:line="13" pos:column="75"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="5">value<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">++<pos:position pos:line="14" pos:column="12"/></operator></expr>;<pos:position pos:line="14" pos:column="13"/></expr_stmt></block></while>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><name><name pos:line="15" pos:column="8">value<pos:position pos:line="15" pos:column="13"/></name><index pos:line="15" pos:column="13">[<expr><literal type="number" pos:line="15" pos:column="14">0<pos:position pos:line="15" pos:column="15"/></literal></expr>]<pos:position pos:line="15" pos:column="16"/></index></name> <operator pos:line="15" pos:column="17">!=<pos:position pos:line="15" pos:column="19"/></operator> <literal type="char" pos:line="15" pos:column="20">'='<pos:position pos:line="15" pos:column="23"/></literal><operator pos:line="15" pos:column="23">)<pos:position pos:line="15" pos:column="24"/></operator> <operator pos:line="15" pos:column="25">||<pos:position pos:line="15" pos:column="27"/></operator> <operator pos:line="15" pos:column="28">(<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">value<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">==<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="38">key<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">)<pos:position pos:line="15" pos:column="42"/></operator></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
    <comment type="block" pos:line="16" pos:column="5">/* Whether this is a fatal error is up to the caller. */</comment>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">CMD_NO_OPTION<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">)<pos:position pos:line="17" pos:column="27"/></operator></expr>;<pos:position pos:line="17" pos:column="28"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="19" pos:column="3">*<pos:position pos:line="19" pos:column="4"/></operator><name pos:line="19" pos:column="4">value<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="char" pos:line="19" pos:column="12">'\0'<pos:position pos:line="19" pos:column="16"/></literal></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">value<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">++<pos:position pos:line="20" pos:column="10"/></operator></expr>;<pos:position pos:line="20" pos:column="11"/></expr_stmt>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">ret_key<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">!=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">NULL<pos:position pos:line="22" pos:column="22"/></name></expr>)<pos:position pos:line="22" pos:column="23"/></condition><then pos:line="22" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="23" pos:column="5">*<pos:position pos:line="23" pos:column="6"/></operator><name pos:line="23" pos:column="6">ret_key<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">key<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt></block></then></if>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">ret_value<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">!=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">NULL<pos:position pos:line="24" pos:column="24"/></name></expr>)<pos:position pos:line="24" pos:column="25"/></condition><then pos:line="24" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="25" pos:column="5">*<pos:position pos:line="25" pos:column="6"/></operator><name pos:line="25" pos:column="6">ret_value<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">value<pos:position pos:line="25" pos:column="23"/></name></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt></block></then></if>

  <return pos:line="27" pos:column="3">return <expr><operator pos:line="27" pos:column="10">(<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">CMD_OK<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">)<pos:position pos:line="27" pos:column="18"/></operator></expr>;<pos:position pos:line="27" pos:column="19"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2026_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensors_config<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">key<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">value<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <block pos:line="1" pos:column="63">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">sensor_list<pos:position pos:line="2" pos:column="18"/></name> <operator pos:line="2" pos:column="19">==<pos:position pos:line="2" pos:column="21"/></operator> <name pos:line="2" pos:column="22">NULL<pos:position pos:line="2" pos:column="26"/></name></expr>)<pos:position pos:line="2" pos:column="27"/></condition><then pos:line="2" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="3" pos:column="5">sensor_list<pos:position pos:line="3" pos:column="16"/></name> <operator pos:line="3" pos:column="17">=<pos:position pos:line="3" pos:column="18"/></operator> <call><name pos:line="3" pos:column="19">ignorelist_create<pos:position pos:line="3" pos:column="36"/></name><argument_list pos:line="3" pos:column="36">(<argument><expr><literal type="number" pos:line="3" pos:column="37">1<pos:position pos:line="3" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="40"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="5" pos:column="3">/* TODO: This setting exists for compatibility with old versions of
   * lm-sensors. Remove support for those ancient versions in the next
   * major release. */</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">strcasecmp<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">key<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"SensorConfigFile"<pos:position pos:line="8" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call> <operator pos:line="8" pos:column="43">==<pos:position pos:line="8" pos:column="45"/></operator> <literal type="number" pos:line="8" pos:column="46">0<pos:position pos:line="8" pos:column="47"/></literal></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48"> <block pos:line="8" pos:column="49">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">tmp<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><call><name pos:line="9" pos:column="17">strdup<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">value<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">tmp<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">!=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">sfree<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">conffile<pos:position pos:line="11" pos:column="21"/></name></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="12" pos:column="7">conffile<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">tmp<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
  }<pos:position pos:line="14" pos:column="4"/></block></then> <elseif pos:line="14" pos:column="5">else <if pos:line="14" pos:column="10">if <condition pos:line="14" pos:column="13">(<expr><call><name pos:line="14" pos:column="14">strcasecmp<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">key<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">"Sensor"<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call> <operator pos:line="14" pos:column="40">==<pos:position pos:line="14" pos:column="42"/></operator> <literal type="number" pos:line="14" pos:column="43">0<pos:position pos:line="14" pos:column="44"/></literal></expr>)<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45"> <block pos:line="14" pos:column="46">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">ignorelist_add<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">sensor_list<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="37">value<pos:position pos:line="15" pos:column="42"/></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="44"/></condition><then pos:line="15" pos:column="44"> <block pos:line="15" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">ERROR<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><literal type="string" pos:line="16" pos:column="13">"sensors plugin: "<pos:position pos:line="16" pos:column="31"/></literal>
            <literal type="string" pos:line="17" pos:column="13">"Cannot add value to ignorelist."<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
      <return pos:line="18" pos:column="7">return <expr><operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator><literal type="number" pos:line="18" pos:column="15">1<pos:position pos:line="18" pos:column="16"/></literal><operator pos:line="18" pos:column="16">)<pos:position pos:line="18" pos:column="17"/></operator></expr>;<pos:position pos:line="18" pos:column="18"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if></elseif> <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><call><name pos:line="20" pos:column="14">strcasecmp<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">key<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="30">"IgnoreSelected"<pos:position pos:line="20" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call> <operator pos:line="20" pos:column="48">==<pos:position pos:line="20" pos:column="50"/></operator> <literal type="number" pos:line="20" pos:column="51">0<pos:position pos:line="20" pos:column="52"/></literal></expr>)<pos:position pos:line="20" pos:column="53"/></condition><then pos:line="20" pos:column="53"> <block pos:line="20" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ignorelist_set_invert<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">sensor_list<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="40">1<pos:position pos:line="21" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">IS_TRUE<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">value<pos:position pos:line="22" pos:column="22"/></name></expr></argument>)<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="7">ignorelist_set_invert<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">sensor_list<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="42">0<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt></block></then></if>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if></elseif>
<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><operator pos:line="25" pos:column="5">(<pos:position pos:line="25" pos:column="6"/></operator><name pos:line="25" pos:column="6">SENSORS_API_VERSION<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">&gt;=<pos:position pos:line="25" pos:column="31"/></operator> <literal type="number" pos:line="25" pos:column="29">0x400<pos:position pos:line="25" pos:column="34"/></literal><operator pos:line="25" pos:column="34">)<pos:position pos:line="25" pos:column="35"/></operator> <operator pos:line="25" pos:column="36">&amp;&amp;<pos:position pos:line="25" pos:column="46"/></operator> <operator pos:line="25" pos:column="39">(<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="40">SENSORS_API_VERSION<pos:position pos:line="25" pos:column="59"/></name> <operator pos:line="25" pos:column="60">&lt;<pos:position pos:line="25" pos:column="64"/></operator> <literal type="number" pos:line="25" pos:column="62">0x500<pos:position pos:line="25" pos:column="67"/></literal><operator pos:line="25" pos:column="67">)<pos:position pos:line="25" pos:column="68"/></operator></expr></cpp:if>
  <elseif pos:line="26" pos:column="3">else <if pos:line="26" pos:column="8">if <condition pos:line="26" pos:column="11">(<expr><call><name pos:line="26" pos:column="12">strcasecmp<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">key<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="28">"UseLabels"<pos:position pos:line="26" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call> <operator pos:line="26" pos:column="41">==<pos:position pos:line="26" pos:column="43"/></operator> <literal type="number" pos:line="26" pos:column="44">0<pos:position pos:line="26" pos:column="45"/></literal></expr>)<pos:position pos:line="26" pos:column="46"/></condition><then pos:line="26" pos:column="46"> <block pos:line="26" pos:column="47">{
    <expr_stmt><expr><name pos:line="27" pos:column="5">use_labels<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <ternary><condition><expr><call><name pos:line="27" pos:column="18">IS_TRUE<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">value<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr> ?<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34"> <expr><literal type="number" pos:line="27" pos:column="35">1<pos:position pos:line="27" pos:column="36"/></literal></expr> <pos:position pos:line="27" pos:column="37"/></then><else pos:line="27" pos:column="37">: <expr><literal type="number" pos:line="27" pos:column="39">0<pos:position pos:line="27" pos:column="40"/></literal></expr></else></ternary></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if></elseif>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
  <else pos:line="30" pos:column="3">else <block pos:line="30" pos:column="8">{
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><operator pos:line="31" pos:column="13">-<pos:position pos:line="31" pos:column="14"/></operator><literal type="number" pos:line="31" pos:column="14">1<pos:position pos:line="31" pos:column="15"/></literal><operator pos:line="31" pos:column="15">)<pos:position pos:line="31" pos:column="16"/></operator></expr>;<pos:position pos:line="31" pos:column="17"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></else></if>

  <return pos:line="34" pos:column="3">return <expr><operator pos:line="34" pos:column="10">(<pos:position pos:line="34" pos:column="11"/></operator><literal type="number" pos:line="34" pos:column="11">0<pos:position pos:line="34" pos:column="12"/></literal><operator pos:line="34" pos:column="12">)<pos:position pos:line="34" pos:column="13"/></operator></expr>;<pos:position pos:line="34" pos:column="14"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

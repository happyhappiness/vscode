<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_43_collectd-4.0.7.cpp" pos:tabs="8"><function_decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">lt_ptr<pos:position pos:line="1" pos:column="14"/></name></type>
<name pos:line="2" pos:column="1">sys_dyld_sym<pos:position pos:line="2" pos:column="13"/></name> <parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">loader_data<pos:position pos:line="2" pos:column="26"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">module<pos:position pos:line="2" pos:column="34"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">symbol<pos:position pos:line="2" pos:column="42"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">lt_user_data<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">loader_data<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">lt_module<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">module<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="5" pos:column="6">const<pos:position pos:line="5" pos:column="11"/></specifier> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">symbol<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">lt_ptr<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">address<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
  	<decl_stmt><decl><type><name pos:line="8" pos:column="9">NSSymbol<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">nssym<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
  	<decl_stmt><decl><type><name pos:line="9" pos:column="9">void<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">unused<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
  	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name><name pos:line="10" pos:column="15">struct<pos:position pos:line="10" pos:column="21"/></name> <name pos:line="10" pos:column="22">mach_header<pos:position pos:line="10" pos:column="33"/></name></name> <modifier pos:line="10" pos:column="34">*<pos:position pos:line="10" pos:column="35"/></modifier></type><name pos:line="10" pos:column="35">mh<pos:position pos:line="10" pos:column="37"/></name><init pos:line="10" pos:column="37">=<expr><name pos:line="10" pos:column="38">NULL<pos:position pos:line="10" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="43"/></decl_stmt>
  	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name></type> <name><name pos:line="11" pos:column="14">saveError<pos:position pos:line="11" pos:column="23"/></name><index pos:line="11" pos:column="23">[<expr><literal type="number" pos:line="11" pos:column="24">256<pos:position pos:line="11" pos:column="27"/></literal></expr>]<pos:position pos:line="11" pos:column="28"/></index></name> <init pos:line="11" pos:column="29">= <expr><literal type="string" pos:line="11" pos:column="31">"Symbol not found"<pos:position pos:line="11" pos:column="49"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="50"/></decl_stmt>
  	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">module<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">==<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="23">(<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">lt_module<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">)<pos:position pos:line="12" pos:column="34"/></operator><operator pos:line="12" pos:column="34">-<pos:position pos:line="12" pos:column="35"/></operator><literal type="number" pos:line="12" pos:column="35">1<pos:position pos:line="12" pos:column="36"/></literal></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
  	<block pos:line="13" pos:column="9">{
  		<expr_stmt><expr><call><name pos:line="14" pos:column="17">_dyld_lookup_and_bind<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name pos:line="14" pos:column="39">symbol<pos:position pos:line="14" pos:column="45"/></name></expr></argument>,<argument><expr><operator pos:line="14" pos:column="46">(<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="47">unsigned<pos:position pos:line="14" pos:column="55"/></name> <name pos:line="14" pos:column="56">long<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">*<pos:position pos:line="14" pos:column="61"/></operator><operator pos:line="14" pos:column="61">)<pos:position pos:line="14" pos:column="62"/></operator><operator pos:line="14" pos:column="62">&amp;<pos:position pos:line="14" pos:column="67"/></operator><name pos:line="14" pos:column="63">address<pos:position pos:line="14" pos:column="70"/></name></expr></argument>,<argument><expr><operator pos:line="14" pos:column="71">&amp;<pos:position pos:line="14" pos:column="76"/></operator><name pos:line="14" pos:column="72">unused<pos:position pos:line="14" pos:column="78"/></name></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="80"/></expr_stmt>
  		<return pos:line="15" pos:column="17">return <expr><name pos:line="15" pos:column="24">address<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></return>
  	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">__BIG_ENDIAN__<pos:position pos:line="17" pos:column="22"/></name></cpp:ifdef>
  	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator>struct <name pos:line="18" pos:column="22">mach_header<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">*<pos:position pos:line="18" pos:column="35"/></operator><operator pos:line="18" pos:column="35">)<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="36">module<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">)<pos:position pos:line="18" pos:column="43"/></operator><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">magic<pos:position pos:line="18" pos:column="50"/></name> <operator pos:line="18" pos:column="51">==<pos:position pos:line="18" pos:column="53"/></operator> <name pos:line="18" pos:column="54">MH_MAGIC<pos:position pos:line="18" pos:column="62"/></name></expr>)<pos:position pos:line="18" pos:column="63"/></condition><then pos:line="18" pos:column="63">
<cpp:else pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">else<pos:position pos:line="19" pos:column="6"/></cpp:directive></cpp:else>
    <block type="pseudo"><if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator>struct <name pos:line="20" pos:column="18">mach_header<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">*<pos:position pos:line="20" pos:column="31"/></operator><operator pos:line="20" pos:column="31">)<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="32">module<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">)<pos:position pos:line="20" pos:column="39"/></operator><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">magic<pos:position pos:line="20" pos:column="46"/></name> <operator pos:line="20" pos:column="47">==<pos:position pos:line="20" pos:column="49"/></operator> <name pos:line="20" pos:column="50">MH_CIGAM<pos:position pos:line="20" pos:column="58"/></name></expr>)<pos:position pos:line="20" pos:column="59"/></condition><then pos:line="20" pos:column="59">
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
  	<block pos:line="22" pos:column="9">{
  	    <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">ltdl_NSIsSymbolNameDefinedInImage<pos:position pos:line="23" pos:column="50"/></name> <operator pos:line="23" pos:column="51">&amp;&amp;<pos:position pos:line="23" pos:column="61"/></operator> <name pos:line="23" pos:column="54">ltdl_NSLookupSymbolInImage<pos:position pos:line="23" pos:column="80"/></name></expr>)<pos:position pos:line="23" pos:column="81"/></condition><then pos:line="23" pos:column="81">
  	    <block pos:line="24" pos:column="13">{
  	    	<expr_stmt><expr><name pos:line="25" pos:column="17">mh<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">module<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><call><name pos:line="26" pos:column="29">ltdl_NSIsSymbolNameDefinedInImage<pos:position pos:line="26" pos:column="62"/></name><argument_list pos:line="26" pos:column="62">(<argument><expr><operator pos:line="26" pos:column="63">(<pos:position pos:line="26" pos:column="64"/></operator>struct <name pos:line="26" pos:column="71">mach_header<pos:position pos:line="26" pos:column="82"/></name><operator pos:line="26" pos:column="82">*<pos:position pos:line="26" pos:column="83"/></operator><operator pos:line="26" pos:column="83">)<pos:position pos:line="26" pos:column="84"/></operator><name pos:line="26" pos:column="84">module<pos:position pos:line="26" pos:column="90"/></name></expr></argument>,<argument><expr><name pos:line="26" pos:column="91">symbol<pos:position pos:line="26" pos:column="97"/></name></expr></argument>)<pos:position pos:line="26" pos:column="98"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="99"/></condition><then pos:line="26" pos:column="99">
			<block pos:line="27" pos:column="25">{
				<expr_stmt><expr><name pos:line="28" pos:column="33">nssym<pos:position pos:line="28" pos:column="38"/></name> <operator pos:line="28" pos:column="39">=<pos:position pos:line="28" pos:column="40"/></operator> <call><name pos:line="28" pos:column="41">ltdl_NSLookupSymbolInImage<pos:position pos:line="28" pos:column="67"/></name><argument_list pos:line="28" pos:column="67">(<argument><expr><operator pos:line="28" pos:column="68">(<pos:position pos:line="28" pos:column="69"/></operator>struct <name pos:line="28" pos:column="76">mach_header<pos:position pos:line="28" pos:column="87"/></name><operator pos:line="28" pos:column="87">*<pos:position pos:line="28" pos:column="88"/></operator><operator pos:line="28" pos:column="88">)<pos:position pos:line="28" pos:column="89"/></operator><name pos:line="28" pos:column="89">module<pos:position pos:line="28" pos:column="95"/></name></expr></argument>,
											<argument><expr><name pos:line="29" pos:column="89">symbol<pos:position pos:line="29" pos:column="95"/></name></expr></argument>,
											<argument><expr><name pos:line="30" pos:column="89">NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW<pos:position pos:line="30" pos:column="126"/></name>
											<operator pos:line="31" pos:column="89">|<pos:position pos:line="31" pos:column="90"/></operator> <name pos:line="31" pos:column="91">NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR<pos:position pos:line="31" pos:column="135"/></name></expr></argument>
											)<pos:position pos:line="32" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="91"/></expr_stmt>
			}<pos:position pos:line="33" pos:column="26"/></block></then></if>
	    }<pos:position pos:line="34" pos:column="14"/></block></then></if>

  	}<pos:position pos:line="36" pos:column="10"/></block></then>
  <else pos:line="37" pos:column="3">else <block pos:line="37" pos:column="8">{
	<expr_stmt><expr><name pos:line="38" pos:column="9">nssym<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <call><name pos:line="38" pos:column="17">NSLookupSymbolInModule<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr><name pos:line="38" pos:column="40">module<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="48">symbol<pos:position pos:line="38" pos:column="54"/></name></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></else></if></block></then></if>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">nssym<pos:position pos:line="40" pos:column="19"/></name></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20">
	<block pos:line="41" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">strncpy<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">saveError<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="36">lt_int_dyld_error<pos:position pos:line="42" pos:column="53"/></name><argument_list pos:line="42" pos:column="53">(<argument><expr><call><name pos:line="42" pos:column="54">LT_DLSTRERROR<pos:position pos:line="42" pos:column="67"/></name><argument_list pos:line="42" pos:column="67">(<argument><expr><name pos:line="42" pos:column="68">SYMBOL_NOT_FOUND<pos:position pos:line="42" pos:column="84"/></name></expr></argument>)<pos:position pos:line="42" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="86"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="88">255<pos:position pos:line="42" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="93"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">saveError<pos:position pos:line="43" pos:column="26"/></name><index pos:line="43" pos:column="26">[<expr><literal type="number" pos:line="43" pos:column="27">255<pos:position pos:line="43" pos:column="30"/></literal></expr>]<pos:position pos:line="43" pos:column="31"/></index></name> <operator pos:line="43" pos:column="32">=<pos:position pos:line="43" pos:column="33"/></operator> <literal type="number" pos:line="43" pos:column="34">0<pos:position pos:line="43" pos:column="35"/></literal></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><operator pos:line="44" pos:column="21">!<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">mh<pos:position pos:line="44" pos:column="24"/></name></expr>)<pos:position pos:line="44" pos:column="25"/></condition><then pos:line="44" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="26">mh<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">=<pos:position pos:line="44" pos:column="29"/></operator><call><name pos:line="44" pos:column="29">lt_int_dyld_get_mach_header_from_nsmodule<pos:position pos:line="44" pos:column="70"/></name><argument_list pos:line="44" pos:column="70">(<argument><expr><name pos:line="44" pos:column="71">module<pos:position pos:line="44" pos:column="77"/></name></expr></argument>)<pos:position pos:line="44" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="79"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="45" pos:column="17">nssym<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <call><name pos:line="45" pos:column="25">lt_int_dyld_NSlookupSymbolInLinkedLibs<pos:position pos:line="45" pos:column="63"/></name><argument_list pos:line="45" pos:column="63">(<argument><expr><name pos:line="45" pos:column="64">symbol<pos:position pos:line="45" pos:column="70"/></name></expr></argument>,<argument><expr><name pos:line="45" pos:column="71">mh<pos:position pos:line="45" pos:column="73"/></name></expr></argument>)<pos:position pos:line="45" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">nssym<pos:position pos:line="47" pos:column="19"/></name></expr>)<pos:position pos:line="47" pos:column="20"/></condition><then pos:line="47" pos:column="20">
	<block pos:line="48" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">LT_DLMUTEX_SETERROR<pos:position pos:line="49" pos:column="36"/></name> <argument_list pos:line="49" pos:column="37">(<argument><expr><name pos:line="49" pos:column="38">saveError<pos:position pos:line="49" pos:column="47"/></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="49"/></expr_stmt>
		<return pos:line="50" pos:column="17">return <expr><name pos:line="50" pos:column="24">NULL<pos:position pos:line="50" pos:column="28"/></name></expr>;<pos:position pos:line="50" pos:column="29"/></return>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>
	<return pos:line="52" pos:column="9">return <expr><call><name pos:line="52" pos:column="16">NSAddressOfSymbol<pos:position pos:line="52" pos:column="33"/></name><argument_list pos:line="52" pos:column="33">(<argument><expr><name pos:line="52" pos:column="34">nssym<pos:position pos:line="52" pos:column="39"/></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="41"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function_decl></unit>

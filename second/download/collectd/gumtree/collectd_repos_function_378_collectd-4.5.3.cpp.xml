<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_378_collectd-4.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">iptables_read<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">num_failures<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Init the iptc handle structure and query the correct table */</comment>    
    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">i<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></init> <condition><expr><name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&lt;<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="21">chain_num<pos:position pos:line="7" pos:column="30"/></name></expr>;<pos:position pos:line="7" pos:column="31"/></condition> <incr><expr><name pos:line="7" pos:column="32">i<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">++<pos:position pos:line="7" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="36"/></control>
    <block pos:line="8" pos:column="5">{
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">iptc_handle_t<pos:position pos:line="9" pos:column="22"/></name></type> <name pos:line="9" pos:column="23">handle<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">ip_chain_t<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">chain<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
	
	<expr_stmt><expr><name pos:line="12" pos:column="9">chain<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name><name pos:line="12" pos:column="17">chain_list<pos:position pos:line="12" pos:column="27"/></name><index pos:line="12" pos:column="27">[<expr><name pos:line="12" pos:column="28">i<pos:position pos:line="12" pos:column="29"/></name></expr>]<pos:position pos:line="12" pos:column="30"/></index></name></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">chain<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
	<block pos:line="14" pos:column="9">{
	    <expr_stmt><expr><call><name pos:line="15" pos:column="13">DEBUG<pos:position pos:line="15" pos:column="18"/></name> <argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="string" pos:line="15" pos:column="20">"iptables plugin: chain == NULL"<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
	    <continue pos:line="16" pos:column="13">continue;<pos:position pos:line="16" pos:column="22"/></continue>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="19" pos:column="9">handle<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">iptc_init<pos:position pos:line="19" pos:column="27"/></name> <argument_list pos:line="19" pos:column="28">(<argument><expr><name><name pos:line="19" pos:column="29">chain<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">table<pos:position pos:line="19" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">handle<pos:position pos:line="20" pos:column="20"/></name></expr>)<pos:position pos:line="20" pos:column="21"/></condition><then pos:line="20" pos:column="21">
	<block pos:line="21" pos:column="9">{
	    <expr_stmt><expr><call><name pos:line="22" pos:column="13">ERROR<pos:position pos:line="22" pos:column="18"/></name> <argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="string" pos:line="22" pos:column="20">"iptables plugin: iptc_init (%s) failed: %s"<pos:position pos:line="22" pos:column="64"/></literal></expr></argument>,
		    <argument><expr><name><name pos:line="23" pos:column="21">chain<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">table<pos:position pos:line="23" pos:column="33"/></name></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="35">iptc_strerror<pos:position pos:line="23" pos:column="48"/></name> <argument_list pos:line="23" pos:column="49">(<argument><expr><name pos:line="23" pos:column="50">errno<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="58"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="24" pos:column="13">num_failures<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">++<pos:position pos:line="24" pos:column="27"/></operator></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
	    <continue pos:line="25" pos:column="13">continue;<pos:position pos:line="25" pos:column="22"/></continue>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">submit_chain<pos:position pos:line="28" pos:column="21"/></name> <argument_list pos:line="28" pos:column="22">(<argument><expr><operator pos:line="28" pos:column="23">&amp;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="24">handle<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="32">chain<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">iptc_free<pos:position pos:line="29" pos:column="18"/></name> <argument_list pos:line="29" pos:column="19">(<argument><expr><operator pos:line="29" pos:column="20">&amp;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="21">handle<pos:position pos:line="29" pos:column="27"/></name></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></for> <comment type="block" pos:line="30" pos:column="7">/* for (i = 0 .. chain_num) */</comment>

    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><ternary><condition><expr><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">num_failures<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">&lt;<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="29">chain_num<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">)<pos:position pos:line="32" pos:column="39"/></operator></expr> ?<pos:position pos:line="32" pos:column="41"/></condition><then pos:line="32" pos:column="41"> <expr><literal type="number" pos:line="32" pos:column="42">0<pos:position pos:line="32" pos:column="43"/></literal></expr> <pos:position pos:line="32" pos:column="44"/></then><else pos:line="32" pos:column="44">: <expr><operator pos:line="32" pos:column="46">-<pos:position pos:line="32" pos:column="47"/></operator><literal type="number" pos:line="32" pos:column="47">1<pos:position pos:line="32" pos:column="48"/></literal></expr></else></ternary><operator pos:line="32" pos:column="48">)<pos:position pos:line="32" pos:column="49"/></operator></expr>;<pos:position pos:line="32" pos:column="50"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

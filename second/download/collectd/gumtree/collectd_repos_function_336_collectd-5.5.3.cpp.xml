<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_336_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">camqp_close_connection<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">camqp_config_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">conf<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list> <comment type="block" pos:line="1" pos:column="59">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">sockfd<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">conf<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">==<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">)<pos:position pos:line="5" pos:column="23"/></operator> <operator pos:line="5" pos:column="24">||<pos:position pos:line="5" pos:column="26"/></operator> <operator pos:line="5" pos:column="27">(<pos:position pos:line="5" pos:column="28"/></operator><name><name pos:line="5" pos:column="28">conf<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">connection<pos:position pos:line="5" pos:column="44"/></name></name> <operator pos:line="5" pos:column="45">==<pos:position pos:line="5" pos:column="47"/></operator> <name pos:line="5" pos:column="48">NULL<pos:position pos:line="5" pos:column="52"/></name><operator pos:line="5" pos:column="52">)<pos:position pos:line="5" pos:column="53"/></operator></expr>)<pos:position pos:line="5" pos:column="54"/></condition><then pos:line="5" pos:column="54">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="8" pos:column="5">sockfd<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">amqp_get_sockfd<pos:position pos:line="8" pos:column="29"/></name> <argument_list pos:line="8" pos:column="30">(<argument><expr><name><name pos:line="8" pos:column="31">conf<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">connection<pos:position pos:line="8" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">amqp_channel_close<pos:position pos:line="9" pos:column="23"/></name> <argument_list pos:line="9" pos:column="24">(<argument><expr><name><name pos:line="9" pos:column="25">conf<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">connection<pos:position pos:line="9" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="43">CAMQP_CHANNEL<pos:position pos:line="9" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="58">AMQP_REPLY_SUCCESS<pos:position pos:line="9" pos:column="76"/></name></expr></argument>)<pos:position pos:line="9" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">amqp_connection_close<pos:position pos:line="10" pos:column="26"/></name> <argument_list pos:line="10" pos:column="27">(<argument><expr><name><name pos:line="10" pos:column="28">conf<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">connection<pos:position pos:line="10" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="46">AMQP_REPLY_SUCCESS<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">amqp_destroy_connection<pos:position pos:line="11" pos:column="28"/></name> <argument_list pos:line="11" pos:column="29">(<argument><expr><name><name pos:line="11" pos:column="30">conf<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">connection<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">close<pos:position pos:line="12" pos:column="10"/></name> <argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">sockfd<pos:position pos:line="12" pos:column="18"/></name></expr></argument>)<pos:position pos:line="12" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">conf<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">connection<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

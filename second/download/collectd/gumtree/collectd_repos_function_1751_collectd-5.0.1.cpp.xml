<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1751_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">vmem_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">KERNEL_LINUX<pos:position pos:line="3" pos:column="17"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">derive_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">pgpgin<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">derive_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">pgpgout<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">pgpgvalid<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">derive_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">pswpin<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">derive_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">pswpout<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">pswpvalid<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">derive_t<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">pgfault<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">derive_t<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">pgmajfault<pos:position pos:line="13" pos:column="22"/></name> <init pos:line="13" pos:column="23">= <expr><literal type="number" pos:line="13" pos:column="25">0<pos:position pos:line="13" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">pgfaultvalid<pos:position pos:line="14" pos:column="19"/></name> <init pos:line="14" pos:column="20">= <expr><literal type="number" pos:line="14" pos:column="22">0<pos:position pos:line="14" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="16" pos:column="3">FILE<pos:position pos:line="16" pos:column="7"/></name> <modifier pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></modifier></type><name pos:line="16" pos:column="9">fh<pos:position pos:line="16" pos:column="11"/></name></decl>;<pos:position pos:line="16" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name></type> <name><name pos:line="17" pos:column="8">buffer<pos:position pos:line="17" pos:column="14"/></name><index pos:line="17" pos:column="14">[<expr><literal type="number" pos:line="17" pos:column="15">1024<pos:position pos:line="17" pos:column="19"/></literal></expr>]<pos:position pos:line="17" pos:column="20"/></index></name></decl>;<pos:position pos:line="17" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">fh<pos:position pos:line="19" pos:column="5"/></name> <operator pos:line="19" pos:column="6">=<pos:position pos:line="19" pos:column="7"/></operator> <call><name pos:line="19" pos:column="8">fopen<pos:position pos:line="19" pos:column="13"/></name> <argument_list pos:line="19" pos:column="14">(<argument><expr><literal type="string" pos:line="19" pos:column="15">"/proc/vmstat"<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="31">"r"<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">fh<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">==<pos:position pos:line="20" pos:column="12"/></operator> <name pos:line="20" pos:column="13">NULL<pos:position pos:line="20" pos:column="17"/></name></expr>)<pos:position pos:line="20" pos:column="18"/></condition><then pos:line="20" pos:column="18">
  <block pos:line="21" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">char<pos:position pos:line="22" pos:column="9"/></name></type> <name><name pos:line="22" pos:column="10">errbuf<pos:position pos:line="22" pos:column="16"/></name><index pos:line="22" pos:column="16">[<expr><literal type="number" pos:line="22" pos:column="17">1024<pos:position pos:line="22" pos:column="21"/></literal></expr>]<pos:position pos:line="22" pos:column="22"/></index></name></decl>;<pos:position pos:line="22" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name> <argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="string" pos:line="23" pos:column="12">"vmem plugin: fopen (/proc/vmstat) failed: %s"<pos:position pos:line="23" pos:column="58"/></literal></expr></argument>,
	<argument><expr><call><name pos:line="24" pos:column="9">sstrerror<pos:position pos:line="24" pos:column="18"/></name> <argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">errno<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="27">errbuf<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="35">sizeof <argument_list pos:line="24" pos:column="42">(<argument><expr><name pos:line="24" pos:column="43">errbuf<pos:position pos:line="24" pos:column="49"/></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><operator pos:line="25" pos:column="13">-<pos:position pos:line="25" pos:column="14"/></operator><literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal><operator pos:line="25" pos:column="15">)<pos:position pos:line="25" pos:column="16"/></operator></expr>;<pos:position pos:line="25" pos:column="17"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <while pos:line="28" pos:column="3">while <condition pos:line="28" pos:column="9">(<expr><call><name pos:line="28" pos:column="10">fgets<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">buffer<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="25">sizeof <argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">buffer<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">fh<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call> <operator pos:line="28" pos:column="46">!=<pos:position pos:line="28" pos:column="48"/></operator> <name pos:line="28" pos:column="49">NULL<pos:position pos:line="28" pos:column="53"/></name></expr>)<pos:position pos:line="28" pos:column="54"/></condition>
  <block pos:line="29" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">char<pos:position pos:line="30" pos:column="9"/></name> <modifier pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></modifier></type><name><name pos:line="30" pos:column="11">fields<pos:position pos:line="30" pos:column="17"/></name><index pos:line="30" pos:column="17">[<expr><literal type="number" pos:line="30" pos:column="18">4<pos:position pos:line="30" pos:column="19"/></literal></expr>]<pos:position pos:line="30" pos:column="20"/></index></name></decl>;<pos:position pos:line="30" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">int<pos:position pos:line="31" pos:column="8"/></name></type> <name pos:line="31" pos:column="9">fields_num<pos:position pos:line="31" pos:column="19"/></name></decl>;<pos:position pos:line="31" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">char<pos:position pos:line="32" pos:column="9"/></name> <modifier pos:line="32" pos:column="10">*<pos:position pos:line="32" pos:column="11"/></modifier></type><name pos:line="32" pos:column="11">key<pos:position pos:line="32" pos:column="14"/></name></decl>;<pos:position pos:line="32" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name> <modifier pos:line="33" pos:column="10">*<pos:position pos:line="33" pos:column="11"/></modifier></type><name pos:line="33" pos:column="11">endptr<pos:position pos:line="33" pos:column="17"/></name></decl>;<pos:position pos:line="33" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">derive_t<pos:position pos:line="34" pos:column="13"/></name></type> <name pos:line="34" pos:column="14">counter<pos:position pos:line="34" pos:column="21"/></name></decl>;<pos:position pos:line="34" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">gauge_t<pos:position pos:line="35" pos:column="12"/></name></type> <name pos:line="35" pos:column="13">gauge<pos:position pos:line="35" pos:column="18"/></name></decl>;<pos:position pos:line="35" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="37" pos:column="5">fields_num<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">strsplit<pos:position pos:line="37" pos:column="26"/></name> <argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">buffer<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="36">fields<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="44">STATIC_ARRAY_SIZE<pos:position pos:line="37" pos:column="61"/></name> <argument_list pos:line="37" pos:column="62">(<argument><expr><name pos:line="37" pos:column="63">fields<pos:position pos:line="37" pos:column="69"/></name></expr></argument>)<pos:position pos:line="37" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="72"/></expr_stmt>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">fields_num<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">!=<pos:position pos:line="38" pos:column="22"/></operator> <literal type="number" pos:line="38" pos:column="23">2<pos:position pos:line="38" pos:column="24"/></literal></expr>)<pos:position pos:line="38" pos:column="25"/></condition><then pos:line="38" pos:column="25">
      <block type="pseudo"><continue pos:line="39" pos:column="7">continue;<pos:position pos:line="39" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="41" pos:column="5">key<pos:position pos:line="41" pos:column="8"/></name> <operator pos:line="41" pos:column="9">=<pos:position pos:line="41" pos:column="10"/></operator> <name><name pos:line="41" pos:column="11">fields<pos:position pos:line="41" pos:column="17"/></name><index pos:line="41" pos:column="17">[<expr><literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr>]<pos:position pos:line="41" pos:column="20"/></index></name></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="43" pos:column="5">endptr<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <name pos:line="43" pos:column="14">NULL<pos:position pos:line="43" pos:column="18"/></name></expr>;<pos:position pos:line="43" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">counter<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <call><name pos:line="44" pos:column="15">strtoll<pos:position pos:line="44" pos:column="22"/></name> <argument_list pos:line="44" pos:column="23">(<argument><expr><name><name pos:line="44" pos:column="24">fields<pos:position pos:line="44" pos:column="30"/></name><index pos:line="44" pos:column="30">[<expr><literal type="number" pos:line="44" pos:column="31">1<pos:position pos:line="44" pos:column="32"/></literal></expr>]<pos:position pos:line="44" pos:column="33"/></index></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="35">&amp;<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="36">endptr<pos:position pos:line="44" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="44">10<pos:position pos:line="44" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name><name pos:line="45" pos:column="9">fields<pos:position pos:line="45" pos:column="15"/></name><index pos:line="45" pos:column="15">[<expr><literal type="number" pos:line="45" pos:column="16">1<pos:position pos:line="45" pos:column="17"/></literal></expr>]<pos:position pos:line="45" pos:column="18"/></index></name> <operator pos:line="45" pos:column="19">==<pos:position pos:line="45" pos:column="21"/></operator> <name pos:line="45" pos:column="22">endptr<pos:position pos:line="45" pos:column="28"/></name></expr>)<pos:position pos:line="45" pos:column="29"/></condition><then pos:line="45" pos:column="29">
      <block type="pseudo"><continue pos:line="46" pos:column="7">continue;<pos:position pos:line="46" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="48" pos:column="5">endptr<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <name pos:line="48" pos:column="14">NULL<pos:position pos:line="48" pos:column="18"/></name></expr>;<pos:position pos:line="48" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">gauge<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">=<pos:position pos:line="49" pos:column="12"/></operator> <call><name pos:line="49" pos:column="13">strtod<pos:position pos:line="49" pos:column="19"/></name> <argument_list pos:line="49" pos:column="20">(<argument><expr><name><name pos:line="49" pos:column="21">fields<pos:position pos:line="49" pos:column="27"/></name><index pos:line="49" pos:column="27">[<expr><literal type="number" pos:line="49" pos:column="28">1<pos:position pos:line="49" pos:column="29"/></literal></expr>]<pos:position pos:line="49" pos:column="30"/></index></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="32">&amp;<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="33">endptr<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">fields<pos:position pos:line="50" pos:column="15"/></name><index pos:line="50" pos:column="15">[<expr><literal type="number" pos:line="50" pos:column="16">1<pos:position pos:line="50" pos:column="17"/></literal></expr>]<pos:position pos:line="50" pos:column="18"/></index></name> <operator pos:line="50" pos:column="19">==<pos:position pos:line="50" pos:column="21"/></operator> <name pos:line="50" pos:column="22">endptr<pos:position pos:line="50" pos:column="28"/></name></expr>)<pos:position pos:line="50" pos:column="29"/></condition><then pos:line="50" pos:column="29">
      <block type="pseudo"><continue pos:line="51" pos:column="7">continue;<pos:position pos:line="51" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="53" pos:column="5">/* 
     * Number of pages
     *
     * The total number of {inst} pages, e. g dirty pages.
     */</comment>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><call><name pos:line="58" pos:column="9">strncmp<pos:position pos:line="58" pos:column="16"/></name> <argument_list pos:line="58" pos:column="17">(<argument><expr><literal type="string" pos:line="58" pos:column="18">"nr_"<pos:position pos:line="58" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="25">key<pos:position pos:line="58" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="30">strlen<pos:position pos:line="58" pos:column="36"/></name> <argument_list pos:line="58" pos:column="37">(<argument><expr><literal type="string" pos:line="58" pos:column="38">"nr_"<pos:position pos:line="58" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call> <operator pos:line="58" pos:column="46">==<pos:position pos:line="58" pos:column="48"/></operator> <literal type="number" pos:line="58" pos:column="49">0<pos:position pos:line="58" pos:column="50"/></literal></expr>)<pos:position pos:line="58" pos:column="51"/></condition><then pos:line="58" pos:column="51">
    <block pos:line="59" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="60" pos:column="7">char<pos:position pos:line="60" pos:column="11"/></name> <modifier pos:line="60" pos:column="12">*<pos:position pos:line="60" pos:column="13"/></modifier></type><name pos:line="60" pos:column="13">inst<pos:position pos:line="60" pos:column="17"/></name> <init pos:line="60" pos:column="18">= <expr><name pos:line="60" pos:column="20">key<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">+<pos:position pos:line="60" pos:column="25"/></operator> <call><name pos:line="60" pos:column="26">strlen<pos:position pos:line="60" pos:column="32"/></name> <argument_list pos:line="60" pos:column="33">(<argument><expr><literal type="string" pos:line="60" pos:column="34">"nr_"<pos:position pos:line="60" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="60" pos:column="41"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="61" pos:column="7">value_t<pos:position pos:line="61" pos:column="14"/></name></type> <name pos:line="61" pos:column="15">value<pos:position pos:line="61" pos:column="20"/></name> <init pos:line="61" pos:column="21">= <expr><block pos:line="61" pos:column="23">{ <expr><operator pos:line="61" pos:column="25">.<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="26">gauge<pos:position pos:line="61" pos:column="31"/></name> <operator pos:line="61" pos:column="32">=<pos:position pos:line="61" pos:column="33"/></operator> <name pos:line="61" pos:column="34">gauge<pos:position pos:line="61" pos:column="39"/></name></expr> }<pos:position pos:line="61" pos:column="41"/></block></expr></init></decl>;<pos:position pos:line="61" pos:column="42"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">submit_one<pos:position pos:line="62" pos:column="17"/></name> <argument_list pos:line="62" pos:column="18">(<argument><expr><name pos:line="62" pos:column="19">NULL<pos:position pos:line="62" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="25">"vmpage_number"<pos:position pos:line="62" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="42">inst<pos:position pos:line="62" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="48">value<pos:position pos:line="62" pos:column="53"/></name></expr></argument>)<pos:position pos:line="62" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then>

    <comment type="block" pos:line="65" pos:column="5">/* 
     * Page in and page outs. For memory and swap.
     */</comment>
    <elseif pos:line="68" pos:column="5">else <if pos:line="68" pos:column="10">if <condition pos:line="68" pos:column="13">(<expr><call><name pos:line="68" pos:column="14">strcmp<pos:position pos:line="68" pos:column="20"/></name> <argument_list pos:line="68" pos:column="21">(<argument><expr><literal type="string" pos:line="68" pos:column="22">"pgpgin"<pos:position pos:line="68" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="32">key<pos:position pos:line="68" pos:column="35"/></name></expr></argument>)<pos:position pos:line="68" pos:column="36"/></argument_list></call> <operator pos:line="68" pos:column="37">==<pos:position pos:line="68" pos:column="39"/></operator> <literal type="number" pos:line="68" pos:column="40">0<pos:position pos:line="68" pos:column="41"/></literal></expr>)<pos:position pos:line="68" pos:column="42"/></condition><then pos:line="68" pos:column="42">
    <block pos:line="69" pos:column="5">{
      <expr_stmt><expr><name pos:line="70" pos:column="7">pgpgin<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator> <name pos:line="70" pos:column="16">counter<pos:position pos:line="70" pos:column="23"/></name></expr>;<pos:position pos:line="70" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="71" pos:column="7">pgpgvalid<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">|=<pos:position pos:line="71" pos:column="19"/></operator> <literal type="number" pos:line="71" pos:column="20">0x01<pos:position pos:line="71" pos:column="24"/></literal></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="73" pos:column="5">else <if pos:line="73" pos:column="10">if <condition pos:line="73" pos:column="13">(<expr><call><name pos:line="73" pos:column="14">strcmp<pos:position pos:line="73" pos:column="20"/></name> <argument_list pos:line="73" pos:column="21">(<argument><expr><literal type="string" pos:line="73" pos:column="22">"pgpgout"<pos:position pos:line="73" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="33">key<pos:position pos:line="73" pos:column="36"/></name></expr></argument>)<pos:position pos:line="73" pos:column="37"/></argument_list></call> <operator pos:line="73" pos:column="38">==<pos:position pos:line="73" pos:column="40"/></operator> <literal type="number" pos:line="73" pos:column="41">0<pos:position pos:line="73" pos:column="42"/></literal></expr>)<pos:position pos:line="73" pos:column="43"/></condition><then pos:line="73" pos:column="43">
    <block pos:line="74" pos:column="5">{
      <expr_stmt><expr><name pos:line="75" pos:column="7">pgpgout<pos:position pos:line="75" pos:column="14"/></name> <operator pos:line="75" pos:column="15">=<pos:position pos:line="75" pos:column="16"/></operator> <name pos:line="75" pos:column="17">counter<pos:position pos:line="75" pos:column="24"/></name></expr>;<pos:position pos:line="75" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="76" pos:column="7">pgpgvalid<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">|=<pos:position pos:line="76" pos:column="19"/></operator> <literal type="number" pos:line="76" pos:column="20">0x02<pos:position pos:line="76" pos:column="24"/></literal></expr>;<pos:position pos:line="76" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="78" pos:column="5">else <if pos:line="78" pos:column="10">if <condition pos:line="78" pos:column="13">(<expr><call><name pos:line="78" pos:column="14">strcmp<pos:position pos:line="78" pos:column="20"/></name> <argument_list pos:line="78" pos:column="21">(<argument><expr><literal type="string" pos:line="78" pos:column="22">"pswpin"<pos:position pos:line="78" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="32">key<pos:position pos:line="78" pos:column="35"/></name></expr></argument>)<pos:position pos:line="78" pos:column="36"/></argument_list></call> <operator pos:line="78" pos:column="37">==<pos:position pos:line="78" pos:column="39"/></operator> <literal type="number" pos:line="78" pos:column="40">0<pos:position pos:line="78" pos:column="41"/></literal></expr>)<pos:position pos:line="78" pos:column="42"/></condition><then pos:line="78" pos:column="42">
    <block pos:line="79" pos:column="5">{
      <expr_stmt><expr><name pos:line="80" pos:column="7">pswpin<pos:position pos:line="80" pos:column="13"/></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <name pos:line="80" pos:column="16">counter<pos:position pos:line="80" pos:column="23"/></name></expr>;<pos:position pos:line="80" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="81" pos:column="7">pswpvalid<pos:position pos:line="81" pos:column="16"/></name> <operator pos:line="81" pos:column="17">|=<pos:position pos:line="81" pos:column="19"/></operator> <literal type="number" pos:line="81" pos:column="20">0x01<pos:position pos:line="81" pos:column="24"/></literal></expr>;<pos:position pos:line="81" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="83" pos:column="5">else <if pos:line="83" pos:column="10">if <condition pos:line="83" pos:column="13">(<expr><call><name pos:line="83" pos:column="14">strcmp<pos:position pos:line="83" pos:column="20"/></name> <argument_list pos:line="83" pos:column="21">(<argument><expr><literal type="string" pos:line="83" pos:column="22">"pswpout"<pos:position pos:line="83" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="33">key<pos:position pos:line="83" pos:column="36"/></name></expr></argument>)<pos:position pos:line="83" pos:column="37"/></argument_list></call> <operator pos:line="83" pos:column="38">==<pos:position pos:line="83" pos:column="40"/></operator> <literal type="number" pos:line="83" pos:column="41">0<pos:position pos:line="83" pos:column="42"/></literal></expr>)<pos:position pos:line="83" pos:column="43"/></condition><then pos:line="83" pos:column="43">
    <block pos:line="84" pos:column="5">{
      <expr_stmt><expr><name pos:line="85" pos:column="7">pswpout<pos:position pos:line="85" pos:column="14"/></name> <operator pos:line="85" pos:column="15">=<pos:position pos:line="85" pos:column="16"/></operator> <name pos:line="85" pos:column="17">counter<pos:position pos:line="85" pos:column="24"/></name></expr>;<pos:position pos:line="85" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="86" pos:column="7">pswpvalid<pos:position pos:line="86" pos:column="16"/></name> <operator pos:line="86" pos:column="17">|=<pos:position pos:line="86" pos:column="19"/></operator> <literal type="number" pos:line="86" pos:column="20">0x02<pos:position pos:line="86" pos:column="24"/></literal></expr>;<pos:position pos:line="86" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="89" pos:column="5">/*
     * Pagefaults
     */</comment>
    <elseif pos:line="92" pos:column="5">else <if pos:line="92" pos:column="10">if <condition pos:line="92" pos:column="13">(<expr><call><name pos:line="92" pos:column="14">strcmp<pos:position pos:line="92" pos:column="20"/></name> <argument_list pos:line="92" pos:column="21">(<argument><expr><literal type="string" pos:line="92" pos:column="22">"pgfault"<pos:position pos:line="92" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="33">key<pos:position pos:line="92" pos:column="36"/></name></expr></argument>)<pos:position pos:line="92" pos:column="37"/></argument_list></call> <operator pos:line="92" pos:column="38">==<pos:position pos:line="92" pos:column="40"/></operator> <literal type="number" pos:line="92" pos:column="41">0<pos:position pos:line="92" pos:column="42"/></literal></expr>)<pos:position pos:line="92" pos:column="43"/></condition><then pos:line="92" pos:column="43">
    <block pos:line="93" pos:column="5">{
      <expr_stmt><expr><name pos:line="94" pos:column="7">pgfault<pos:position pos:line="94" pos:column="14"/></name> <operator pos:line="94" pos:column="15">=<pos:position pos:line="94" pos:column="16"/></operator> <name pos:line="94" pos:column="17">counter<pos:position pos:line="94" pos:column="24"/></name></expr>;<pos:position pos:line="94" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="95" pos:column="7">pgfaultvalid<pos:position pos:line="95" pos:column="19"/></name> <operator pos:line="95" pos:column="20">|=<pos:position pos:line="95" pos:column="22"/></operator> <literal type="number" pos:line="95" pos:column="23">0x01<pos:position pos:line="95" pos:column="27"/></literal></expr>;<pos:position pos:line="95" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="97" pos:column="5">else <if pos:line="97" pos:column="10">if <condition pos:line="97" pos:column="13">(<expr><call><name pos:line="97" pos:column="14">strcmp<pos:position pos:line="97" pos:column="20"/></name> <argument_list pos:line="97" pos:column="21">(<argument><expr><literal type="string" pos:line="97" pos:column="22">"pgmajfault"<pos:position pos:line="97" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="36">key<pos:position pos:line="97" pos:column="39"/></name></expr></argument>)<pos:position pos:line="97" pos:column="40"/></argument_list></call> <operator pos:line="97" pos:column="41">==<pos:position pos:line="97" pos:column="43"/></operator> <literal type="number" pos:line="97" pos:column="44">0<pos:position pos:line="97" pos:column="45"/></literal></expr>)<pos:position pos:line="97" pos:column="46"/></condition><then pos:line="97" pos:column="46">
    <block pos:line="98" pos:column="5">{
      <expr_stmt><expr><name pos:line="99" pos:column="7">pgmajfault<pos:position pos:line="99" pos:column="17"/></name> <operator pos:line="99" pos:column="18">=<pos:position pos:line="99" pos:column="19"/></operator> <name pos:line="99" pos:column="20">counter<pos:position pos:line="99" pos:column="27"/></name></expr>;<pos:position pos:line="99" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="100" pos:column="7">pgfaultvalid<pos:position pos:line="100" pos:column="19"/></name> <operator pos:line="100" pos:column="20">|=<pos:position pos:line="100" pos:column="22"/></operator> <literal type="number" pos:line="100" pos:column="23">0x02<pos:position pos:line="100" pos:column="27"/></literal></expr>;<pos:position pos:line="100" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="103" pos:column="5">/*
     * Skip the other statistics if verbose output is disabled.
     */</comment>
    <elseif pos:line="106" pos:column="5">else <if pos:line="106" pos:column="10">if <condition pos:line="106" pos:column="13">(<expr><name pos:line="106" pos:column="14">verbose_output<pos:position pos:line="106" pos:column="28"/></name> <operator pos:line="106" pos:column="29">==<pos:position pos:line="106" pos:column="31"/></operator> <literal type="number" pos:line="106" pos:column="32">0<pos:position pos:line="106" pos:column="33"/></literal></expr>)<pos:position pos:line="106" pos:column="34"/></condition><then pos:line="106" pos:column="34">
      <block type="pseudo"><continue pos:line="107" pos:column="7">continue;<pos:position pos:line="107" pos:column="16"/></continue></block></then></if></elseif>

    <comment type="block" pos:line="109" pos:column="5">/*
     * Number of page allocations, refills, steals and scans. This is collected
     * ``per zone'', i. e. for DMA, DMA32, normal and possibly highmem.
     */</comment>
    <elseif pos:line="113" pos:column="5">else <if pos:line="113" pos:column="10">if <condition pos:line="113" pos:column="13">(<expr><call><name pos:line="113" pos:column="14">strncmp<pos:position pos:line="113" pos:column="21"/></name> <argument_list pos:line="113" pos:column="22">(<argument><expr><literal type="string" pos:line="113" pos:column="23">"pgalloc_"<pos:position pos:line="113" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="35">key<pos:position pos:line="113" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="113" pos:column="40">strlen<pos:position pos:line="113" pos:column="46"/></name> <argument_list pos:line="113" pos:column="47">(<argument><expr><literal type="string" pos:line="113" pos:column="48">"pgalloc_"<pos:position pos:line="113" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="113" pos:column="60"/></argument_list></call> <operator pos:line="113" pos:column="61">==<pos:position pos:line="113" pos:column="63"/></operator> <literal type="number" pos:line="113" pos:column="64">0<pos:position pos:line="113" pos:column="65"/></literal></expr>)<pos:position pos:line="113" pos:column="66"/></condition><then pos:line="113" pos:column="66">
    <block pos:line="114" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="115" pos:column="7">char<pos:position pos:line="115" pos:column="11"/></name> <modifier pos:line="115" pos:column="12">*<pos:position pos:line="115" pos:column="13"/></modifier></type><name pos:line="115" pos:column="13">inst<pos:position pos:line="115" pos:column="17"/></name> <init pos:line="115" pos:column="18">= <expr><name pos:line="115" pos:column="20">key<pos:position pos:line="115" pos:column="23"/></name> <operator pos:line="115" pos:column="24">+<pos:position pos:line="115" pos:column="25"/></operator> <call><name pos:line="115" pos:column="26">strlen<pos:position pos:line="115" pos:column="32"/></name> <argument_list pos:line="115" pos:column="33">(<argument><expr><literal type="string" pos:line="115" pos:column="34">"pgalloc_"<pos:position pos:line="115" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="115" pos:column="46"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="116" pos:column="7">value_t<pos:position pos:line="116" pos:column="14"/></name></type> <name pos:line="116" pos:column="15">value<pos:position pos:line="116" pos:column="20"/></name>  <init pos:line="116" pos:column="22">= <expr><block pos:line="116" pos:column="24">{ <expr><operator pos:line="116" pos:column="26">.<pos:position pos:line="116" pos:column="27"/></operator><name pos:line="116" pos:column="27">derive<pos:position pos:line="116" pos:column="33"/></name> <operator pos:line="116" pos:column="34">=<pos:position pos:line="116" pos:column="35"/></operator> <name pos:line="116" pos:column="36">counter<pos:position pos:line="116" pos:column="43"/></name></expr> }<pos:position pos:line="116" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="116" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="117" pos:column="7">submit_one<pos:position pos:line="117" pos:column="17"/></name> <argument_list pos:line="117" pos:column="18">(<argument><expr><name pos:line="117" pos:column="19">inst<pos:position pos:line="117" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="25">"vmpage_action"<pos:position pos:line="117" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="42">"alloc"<pos:position pos:line="117" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="51">value<pos:position pos:line="117" pos:column="56"/></name></expr></argument>)<pos:position pos:line="117" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="118" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="119" pos:column="5">else <if pos:line="119" pos:column="10">if <condition pos:line="119" pos:column="13">(<expr><call><name pos:line="119" pos:column="14">strncmp<pos:position pos:line="119" pos:column="21"/></name> <argument_list pos:line="119" pos:column="22">(<argument><expr><literal type="string" pos:line="119" pos:column="23">"pgrefill_"<pos:position pos:line="119" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="119" pos:column="36">key<pos:position pos:line="119" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="119" pos:column="41">strlen<pos:position pos:line="119" pos:column="47"/></name> <argument_list pos:line="119" pos:column="48">(<argument><expr><literal type="string" pos:line="119" pos:column="49">"pgrefill_"<pos:position pos:line="119" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="119" pos:column="62"/></argument_list></call> <operator pos:line="119" pos:column="63">==<pos:position pos:line="119" pos:column="65"/></operator> <literal type="number" pos:line="119" pos:column="66">0<pos:position pos:line="119" pos:column="67"/></literal></expr>)<pos:position pos:line="119" pos:column="68"/></condition><then pos:line="119" pos:column="68">
    <block pos:line="120" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="121" pos:column="7">char<pos:position pos:line="121" pos:column="11"/></name> <modifier pos:line="121" pos:column="12">*<pos:position pos:line="121" pos:column="13"/></modifier></type><name pos:line="121" pos:column="13">inst<pos:position pos:line="121" pos:column="17"/></name> <init pos:line="121" pos:column="18">= <expr><name pos:line="121" pos:column="20">key<pos:position pos:line="121" pos:column="23"/></name> <operator pos:line="121" pos:column="24">+<pos:position pos:line="121" pos:column="25"/></operator> <call><name pos:line="121" pos:column="26">strlen<pos:position pos:line="121" pos:column="32"/></name> <argument_list pos:line="121" pos:column="33">(<argument><expr><literal type="string" pos:line="121" pos:column="34">"pgrefill_"<pos:position pos:line="121" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="121" pos:column="47"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="122" pos:column="7">value_t<pos:position pos:line="122" pos:column="14"/></name></type> <name pos:line="122" pos:column="15">value<pos:position pos:line="122" pos:column="20"/></name>  <init pos:line="122" pos:column="22">= <expr><block pos:line="122" pos:column="24">{ <expr><operator pos:line="122" pos:column="26">.<pos:position pos:line="122" pos:column="27"/></operator><name pos:line="122" pos:column="27">derive<pos:position pos:line="122" pos:column="33"/></name> <operator pos:line="122" pos:column="34">=<pos:position pos:line="122" pos:column="35"/></operator> <name pos:line="122" pos:column="36">counter<pos:position pos:line="122" pos:column="43"/></name></expr> }<pos:position pos:line="122" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="122" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="123" pos:column="7">submit_one<pos:position pos:line="123" pos:column="17"/></name> <argument_list pos:line="123" pos:column="18">(<argument><expr><name pos:line="123" pos:column="19">inst<pos:position pos:line="123" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="25">"vmpage_action"<pos:position pos:line="123" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="42">"refill"<pos:position pos:line="123" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="52">value<pos:position pos:line="123" pos:column="57"/></name></expr></argument>)<pos:position pos:line="123" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="125" pos:column="5">else <if pos:line="125" pos:column="10">if <condition pos:line="125" pos:column="13">(<expr><call><name pos:line="125" pos:column="14">strncmp<pos:position pos:line="125" pos:column="21"/></name> <argument_list pos:line="125" pos:column="22">(<argument><expr><literal type="string" pos:line="125" pos:column="23">"pgsteal_"<pos:position pos:line="125" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="35">key<pos:position pos:line="125" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="125" pos:column="40">strlen<pos:position pos:line="125" pos:column="46"/></name> <argument_list pos:line="125" pos:column="47">(<argument><expr><literal type="string" pos:line="125" pos:column="48">"pgsteal_"<pos:position pos:line="125" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="125" pos:column="60"/></argument_list></call> <operator pos:line="125" pos:column="61">==<pos:position pos:line="125" pos:column="63"/></operator> <literal type="number" pos:line="125" pos:column="64">0<pos:position pos:line="125" pos:column="65"/></literal></expr>)<pos:position pos:line="125" pos:column="66"/></condition><then pos:line="125" pos:column="66">
    <block pos:line="126" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="127" pos:column="7">char<pos:position pos:line="127" pos:column="11"/></name> <modifier pos:line="127" pos:column="12">*<pos:position pos:line="127" pos:column="13"/></modifier></type><name pos:line="127" pos:column="13">inst<pos:position pos:line="127" pos:column="17"/></name> <init pos:line="127" pos:column="18">= <expr><name pos:line="127" pos:column="20">key<pos:position pos:line="127" pos:column="23"/></name> <operator pos:line="127" pos:column="24">+<pos:position pos:line="127" pos:column="25"/></operator> <call><name pos:line="127" pos:column="26">strlen<pos:position pos:line="127" pos:column="32"/></name> <argument_list pos:line="127" pos:column="33">(<argument><expr><literal type="string" pos:line="127" pos:column="34">"pgsteal_"<pos:position pos:line="127" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="127" pos:column="46"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="128" pos:column="7">value_t<pos:position pos:line="128" pos:column="14"/></name></type> <name pos:line="128" pos:column="15">value<pos:position pos:line="128" pos:column="20"/></name>  <init pos:line="128" pos:column="22">= <expr><block pos:line="128" pos:column="24">{ <expr><operator pos:line="128" pos:column="26">.<pos:position pos:line="128" pos:column="27"/></operator><name pos:line="128" pos:column="27">derive<pos:position pos:line="128" pos:column="33"/></name> <operator pos:line="128" pos:column="34">=<pos:position pos:line="128" pos:column="35"/></operator> <name pos:line="128" pos:column="36">counter<pos:position pos:line="128" pos:column="43"/></name></expr> }<pos:position pos:line="128" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="128" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="129" pos:column="7">submit_one<pos:position pos:line="129" pos:column="17"/></name> <argument_list pos:line="129" pos:column="18">(<argument><expr><name pos:line="129" pos:column="19">inst<pos:position pos:line="129" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="25">"vmpage_action"<pos:position pos:line="129" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="42">"steal"<pos:position pos:line="129" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="51">value<pos:position pos:line="129" pos:column="56"/></name></expr></argument>)<pos:position pos:line="129" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="130" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="131" pos:column="5">else <if pos:line="131" pos:column="10">if <condition pos:line="131" pos:column="13">(<expr><call><name pos:line="131" pos:column="14">strncmp<pos:position pos:line="131" pos:column="21"/></name> <argument_list pos:line="131" pos:column="22">(<argument><expr><literal type="string" pos:line="131" pos:column="23">"pgscan_kswapd_"<pos:position pos:line="131" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="41">key<pos:position pos:line="131" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="131" pos:column="46">strlen<pos:position pos:line="131" pos:column="52"/></name> <argument_list pos:line="131" pos:column="53">(<argument><expr><literal type="string" pos:line="131" pos:column="54">"pgscan_kswapd_"<pos:position pos:line="131" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="131" pos:column="72"/></argument_list></call> <operator pos:line="131" pos:column="73">==<pos:position pos:line="131" pos:column="75"/></operator> <literal type="number" pos:line="131" pos:column="76">0<pos:position pos:line="131" pos:column="77"/></literal></expr>)<pos:position pos:line="131" pos:column="78"/></condition><then pos:line="131" pos:column="78">
    <block pos:line="132" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="133" pos:column="7">char<pos:position pos:line="133" pos:column="11"/></name> <modifier pos:line="133" pos:column="12">*<pos:position pos:line="133" pos:column="13"/></modifier></type><name pos:line="133" pos:column="13">inst<pos:position pos:line="133" pos:column="17"/></name> <init pos:line="133" pos:column="18">= <expr><name pos:line="133" pos:column="20">key<pos:position pos:line="133" pos:column="23"/></name> <operator pos:line="133" pos:column="24">+<pos:position pos:line="133" pos:column="25"/></operator> <call><name pos:line="133" pos:column="26">strlen<pos:position pos:line="133" pos:column="32"/></name> <argument_list pos:line="133" pos:column="33">(<argument><expr><literal type="string" pos:line="133" pos:column="34">"pgscan_kswapd_"<pos:position pos:line="133" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="133" pos:column="52"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="134" pos:column="7">value_t<pos:position pos:line="134" pos:column="14"/></name></type> <name pos:line="134" pos:column="15">value<pos:position pos:line="134" pos:column="20"/></name>  <init pos:line="134" pos:column="22">= <expr><block pos:line="134" pos:column="24">{ <expr><operator pos:line="134" pos:column="26">.<pos:position pos:line="134" pos:column="27"/></operator><name pos:line="134" pos:column="27">derive<pos:position pos:line="134" pos:column="33"/></name> <operator pos:line="134" pos:column="34">=<pos:position pos:line="134" pos:column="35"/></operator> <name pos:line="134" pos:column="36">counter<pos:position pos:line="134" pos:column="43"/></name></expr> }<pos:position pos:line="134" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="134" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="135" pos:column="7">submit_one<pos:position pos:line="135" pos:column="17"/></name> <argument_list pos:line="135" pos:column="18">(<argument><expr><name pos:line="135" pos:column="19">inst<pos:position pos:line="135" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="25">"vmpage_action"<pos:position pos:line="135" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="42">"scan_kswapd"<pos:position pos:line="135" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="135" pos:column="57">value<pos:position pos:line="135" pos:column="62"/></name></expr></argument>)<pos:position pos:line="135" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="136" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="137" pos:column="5">else <if pos:line="137" pos:column="10">if <condition pos:line="137" pos:column="13">(<expr><call><name pos:line="137" pos:column="14">strncmp<pos:position pos:line="137" pos:column="21"/></name> <argument_list pos:line="137" pos:column="22">(<argument><expr><literal type="string" pos:line="137" pos:column="23">"pgscan_direct_"<pos:position pos:line="137" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="137" pos:column="41">key<pos:position pos:line="137" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="137" pos:column="46">strlen<pos:position pos:line="137" pos:column="52"/></name> <argument_list pos:line="137" pos:column="53">(<argument><expr><literal type="string" pos:line="137" pos:column="54">"pgscan_direct_"<pos:position pos:line="137" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="72"/></argument_list></call> <operator pos:line="137" pos:column="73">==<pos:position pos:line="137" pos:column="75"/></operator> <literal type="number" pos:line="137" pos:column="76">0<pos:position pos:line="137" pos:column="77"/></literal></expr>)<pos:position pos:line="137" pos:column="78"/></condition><then pos:line="137" pos:column="78">
    <block pos:line="138" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="139" pos:column="7">char<pos:position pos:line="139" pos:column="11"/></name> <modifier pos:line="139" pos:column="12">*<pos:position pos:line="139" pos:column="13"/></modifier></type><name pos:line="139" pos:column="13">inst<pos:position pos:line="139" pos:column="17"/></name> <init pos:line="139" pos:column="18">= <expr><name pos:line="139" pos:column="20">key<pos:position pos:line="139" pos:column="23"/></name> <operator pos:line="139" pos:column="24">+<pos:position pos:line="139" pos:column="25"/></operator> <call><name pos:line="139" pos:column="26">strlen<pos:position pos:line="139" pos:column="32"/></name> <argument_list pos:line="139" pos:column="33">(<argument><expr><literal type="string" pos:line="139" pos:column="34">"pgscan_direct_"<pos:position pos:line="139" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="139" pos:column="52"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="140" pos:column="7">value_t<pos:position pos:line="140" pos:column="14"/></name></type> <name pos:line="140" pos:column="15">value<pos:position pos:line="140" pos:column="20"/></name>  <init pos:line="140" pos:column="22">= <expr><block pos:line="140" pos:column="24">{ <expr><operator pos:line="140" pos:column="26">.<pos:position pos:line="140" pos:column="27"/></operator><name pos:line="140" pos:column="27">derive<pos:position pos:line="140" pos:column="33"/></name> <operator pos:line="140" pos:column="34">=<pos:position pos:line="140" pos:column="35"/></operator> <name pos:line="140" pos:column="36">counter<pos:position pos:line="140" pos:column="43"/></name></expr> }<pos:position pos:line="140" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="140" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="141" pos:column="7">submit_one<pos:position pos:line="141" pos:column="17"/></name> <argument_list pos:line="141" pos:column="18">(<argument><expr><name pos:line="141" pos:column="19">inst<pos:position pos:line="141" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="25">"vmpage_action"<pos:position pos:line="141" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="42">"scan_direct"<pos:position pos:line="141" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="57">value<pos:position pos:line="141" pos:column="62"/></name></expr></argument>)<pos:position pos:line="141" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="142" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="144" pos:column="5">/*
     * Page action
     *
     * number of pages moved to the active or inactive lists and freed, i. e.
     * removed from either list.
     */</comment>
    <elseif pos:line="150" pos:column="5">else <if pos:line="150" pos:column="10">if <condition pos:line="150" pos:column="13">(<expr><call><name pos:line="150" pos:column="14">strcmp<pos:position pos:line="150" pos:column="20"/></name> <argument_list pos:line="150" pos:column="21">(<argument><expr><literal type="string" pos:line="150" pos:column="22">"pgfree"<pos:position pos:line="150" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="150" pos:column="32">key<pos:position pos:line="150" pos:column="35"/></name></expr></argument>)<pos:position pos:line="150" pos:column="36"/></argument_list></call> <operator pos:line="150" pos:column="37">==<pos:position pos:line="150" pos:column="39"/></operator> <literal type="number" pos:line="150" pos:column="40">0<pos:position pos:line="150" pos:column="41"/></literal></expr>)<pos:position pos:line="150" pos:column="42"/></condition><then pos:line="150" pos:column="42">
    <block pos:line="151" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="152" pos:column="7">value_t<pos:position pos:line="152" pos:column="14"/></name></type> <name pos:line="152" pos:column="15">value<pos:position pos:line="152" pos:column="20"/></name>  <init pos:line="152" pos:column="22">= <expr><block pos:line="152" pos:column="24">{ <expr><operator pos:line="152" pos:column="26">.<pos:position pos:line="152" pos:column="27"/></operator><name pos:line="152" pos:column="27">derive<pos:position pos:line="152" pos:column="33"/></name> <operator pos:line="152" pos:column="34">=<pos:position pos:line="152" pos:column="35"/></operator> <name pos:line="152" pos:column="36">counter<pos:position pos:line="152" pos:column="43"/></name></expr> }<pos:position pos:line="152" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="152" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="153" pos:column="7">submit_one<pos:position pos:line="153" pos:column="17"/></name> <argument_list pos:line="153" pos:column="18">(<argument><expr><name pos:line="153" pos:column="19">NULL<pos:position pos:line="153" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="25">"vmpage_action"<pos:position pos:line="153" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="42">"free"<pos:position pos:line="153" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="50">value<pos:position pos:line="153" pos:column="55"/></name></expr></argument>)<pos:position pos:line="153" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="154" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="155" pos:column="5">else <if pos:line="155" pos:column="10">if <condition pos:line="155" pos:column="13">(<expr><call><name pos:line="155" pos:column="14">strcmp<pos:position pos:line="155" pos:column="20"/></name> <argument_list pos:line="155" pos:column="21">(<argument><expr><literal type="string" pos:line="155" pos:column="22">"pgactivate"<pos:position pos:line="155" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="155" pos:column="36">key<pos:position pos:line="155" pos:column="39"/></name></expr></argument>)<pos:position pos:line="155" pos:column="40"/></argument_list></call> <operator pos:line="155" pos:column="41">==<pos:position pos:line="155" pos:column="43"/></operator> <literal type="number" pos:line="155" pos:column="44">0<pos:position pos:line="155" pos:column="45"/></literal></expr>)<pos:position pos:line="155" pos:column="46"/></condition><then pos:line="155" pos:column="46">
    <block pos:line="156" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="157" pos:column="7">value_t<pos:position pos:line="157" pos:column="14"/></name></type> <name pos:line="157" pos:column="15">value<pos:position pos:line="157" pos:column="20"/></name>  <init pos:line="157" pos:column="22">= <expr><block pos:line="157" pos:column="24">{ <expr><operator pos:line="157" pos:column="26">.<pos:position pos:line="157" pos:column="27"/></operator><name pos:line="157" pos:column="27">derive<pos:position pos:line="157" pos:column="33"/></name> <operator pos:line="157" pos:column="34">=<pos:position pos:line="157" pos:column="35"/></operator> <name pos:line="157" pos:column="36">counter<pos:position pos:line="157" pos:column="43"/></name></expr> }<pos:position pos:line="157" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="157" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="158" pos:column="7">submit_one<pos:position pos:line="158" pos:column="17"/></name> <argument_list pos:line="158" pos:column="18">(<argument><expr><name pos:line="158" pos:column="19">NULL<pos:position pos:line="158" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="25">"vmpage_action"<pos:position pos:line="158" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="42">"activate"<pos:position pos:line="158" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="54">value<pos:position pos:line="158" pos:column="59"/></name></expr></argument>)<pos:position pos:line="158" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="159" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="160" pos:column="5">else <if pos:line="160" pos:column="10">if <condition pos:line="160" pos:column="13">(<expr><call><name pos:line="160" pos:column="14">strcmp<pos:position pos:line="160" pos:column="20"/></name> <argument_list pos:line="160" pos:column="21">(<argument><expr><literal type="string" pos:line="160" pos:column="22">"pgdeactivate"<pos:position pos:line="160" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="160" pos:column="38">key<pos:position pos:line="160" pos:column="41"/></name></expr></argument>)<pos:position pos:line="160" pos:column="42"/></argument_list></call> <operator pos:line="160" pos:column="43">==<pos:position pos:line="160" pos:column="45"/></operator> <literal type="number" pos:line="160" pos:column="46">0<pos:position pos:line="160" pos:column="47"/></literal></expr>)<pos:position pos:line="160" pos:column="48"/></condition><then pos:line="160" pos:column="48">
    <block pos:line="161" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="162" pos:column="7">value_t<pos:position pos:line="162" pos:column="14"/></name></type> <name pos:line="162" pos:column="15">value<pos:position pos:line="162" pos:column="20"/></name>  <init pos:line="162" pos:column="22">= <expr><block pos:line="162" pos:column="24">{ <expr><operator pos:line="162" pos:column="26">.<pos:position pos:line="162" pos:column="27"/></operator><name pos:line="162" pos:column="27">derive<pos:position pos:line="162" pos:column="33"/></name> <operator pos:line="162" pos:column="34">=<pos:position pos:line="162" pos:column="35"/></operator> <name pos:line="162" pos:column="36">counter<pos:position pos:line="162" pos:column="43"/></name></expr> }<pos:position pos:line="162" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="162" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="163" pos:column="7">submit_one<pos:position pos:line="163" pos:column="17"/></name> <argument_list pos:line="163" pos:column="18">(<argument><expr><name pos:line="163" pos:column="19">NULL<pos:position pos:line="163" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="25">"vmpage_action"<pos:position pos:line="163" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="42">"deactivate"<pos:position pos:line="163" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="56">value<pos:position pos:line="163" pos:column="61"/></name></expr></argument>)<pos:position pos:line="163" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="164" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="165" pos:column="4"/></block></while> <comment type="block" pos:line="165" pos:column="5">/* while (fgets) */</comment>

  <expr_stmt><expr><call><name pos:line="167" pos:column="3">fclose<pos:position pos:line="167" pos:column="9"/></name> <argument_list pos:line="167" pos:column="10">(<argument><expr><name pos:line="167" pos:column="11">fh<pos:position pos:line="167" pos:column="13"/></name></expr></argument>)<pos:position pos:line="167" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="168" pos:column="3">fh<pos:position pos:line="168" pos:column="5"/></name> <operator pos:line="168" pos:column="6">=<pos:position pos:line="168" pos:column="7"/></operator> <name pos:line="168" pos:column="8">NULL<pos:position pos:line="168" pos:column="12"/></name></expr>;<pos:position pos:line="168" pos:column="13"/></expr_stmt>

  <if pos:line="170" pos:column="3">if <condition pos:line="170" pos:column="6">(<expr><name pos:line="170" pos:column="7">pgfaultvalid<pos:position pos:line="170" pos:column="19"/></name> <operator pos:line="170" pos:column="20">==<pos:position pos:line="170" pos:column="22"/></operator> <literal type="number" pos:line="170" pos:column="23">0x03<pos:position pos:line="170" pos:column="27"/></literal></expr>)<pos:position pos:line="170" pos:column="28"/></condition><then pos:line="170" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="171" pos:column="5">submit_two<pos:position pos:line="171" pos:column="15"/></name> <argument_list pos:line="171" pos:column="16">(<argument><expr><name pos:line="171" pos:column="17">NULL<pos:position pos:line="171" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="23">"vmpage_faults"<pos:position pos:line="171" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="171" pos:column="40">NULL<pos:position pos:line="171" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="46">pgfault<pos:position pos:line="171" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="55">pgmajfault<pos:position pos:line="171" pos:column="65"/></name></expr></argument>)<pos:position pos:line="171" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="67"/></expr_stmt></block></then></if>

  <if pos:line="173" pos:column="3">if <condition pos:line="173" pos:column="6">(<expr><name pos:line="173" pos:column="7">pgpgvalid<pos:position pos:line="173" pos:column="16"/></name> <operator pos:line="173" pos:column="17">==<pos:position pos:line="173" pos:column="19"/></operator> <literal type="number" pos:line="173" pos:column="20">0x03<pos:position pos:line="173" pos:column="24"/></literal></expr>)<pos:position pos:line="173" pos:column="25"/></condition><then pos:line="173" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="174" pos:column="5">submit_two<pos:position pos:line="174" pos:column="15"/></name> <argument_list pos:line="174" pos:column="16">(<argument><expr><name pos:line="174" pos:column="17">NULL<pos:position pos:line="174" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="23">"vmpage_io"<pos:position pos:line="174" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="36">"memory"<pos:position pos:line="174" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="174" pos:column="46">pgpgin<pos:position pos:line="174" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="54">pgpgout<pos:position pos:line="174" pos:column="61"/></name></expr></argument>)<pos:position pos:line="174" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="63"/></expr_stmt></block></then></if>

  <if pos:line="176" pos:column="3">if <condition pos:line="176" pos:column="6">(<expr><name pos:line="176" pos:column="7">pswpvalid<pos:position pos:line="176" pos:column="16"/></name> <operator pos:line="176" pos:column="17">==<pos:position pos:line="176" pos:column="19"/></operator> <literal type="number" pos:line="176" pos:column="20">0x03<pos:position pos:line="176" pos:column="24"/></literal></expr>)<pos:position pos:line="176" pos:column="25"/></condition><then pos:line="176" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="177" pos:column="5">submit_two<pos:position pos:line="177" pos:column="15"/></name> <argument_list pos:line="177" pos:column="16">(<argument><expr><name pos:line="177" pos:column="17">NULL<pos:position pos:line="177" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="23">"vmpage_io"<pos:position pos:line="177" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="36">"swap"<pos:position pos:line="177" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="177" pos:column="44">pswpin<pos:position pos:line="177" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="52">pswpout<pos:position pos:line="177" pos:column="59"/></name></expr></argument>)<pos:position pos:line="177" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="61"/></expr_stmt></block></then></if>
<cpp:endif pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">endif<pos:position pos:line="178" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="178" pos:column="8">/* KERNEL_LINUX */</comment>

  <return pos:line="180" pos:column="3">return <expr><operator pos:line="180" pos:column="10">(<pos:position pos:line="180" pos:column="11"/></operator><literal type="number" pos:line="180" pos:column="11">0<pos:position pos:line="180" pos:column="12"/></literal><operator pos:line="180" pos:column="12">)<pos:position pos:line="180" pos:column="13"/></operator></expr>;<pos:position pos:line="180" pos:column="14"/></return>
}<pos:position pos:line="181" pos:column="2"/></block></function></unit>

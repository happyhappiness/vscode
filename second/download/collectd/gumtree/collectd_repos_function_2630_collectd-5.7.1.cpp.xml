<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2630_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cf_register_complex<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">type<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><function_decl><type><name pos:line="1" pos:column="43">int<pos:position pos:line="1" pos:column="46"/></name></type> (<modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier><name pos:line="1" pos:column="49">callback<pos:position pos:line="1" pos:column="57"/></name>)<parameter_list pos:line="1" pos:column="58">(<parameter><decl><type><name pos:line="1" pos:column="59">oconfig_item_t<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list></function_decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list> <block pos:line="1" pos:column="78">{
  <expr_stmt><expr><name pos:line="2" pos:column="3">cf_complex_callback_t<pos:position pos:line="2" pos:column="24"/></name> <operator pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></operator><operator pos:line="2" pos:column="26">new<pos:position pos:line="2" pos:column="29"/></operator></expr>;<pos:position pos:line="2" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="4" pos:column="3">new<pos:position pos:line="4" pos:column="6"/></operator> <operator pos:line="4" pos:column="7">=<pos:position pos:line="4" pos:column="8"/></operator> <call><name pos:line="4" pos:column="9">malloc<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><sizeof pos:line="4" pos:column="16">sizeof<argument_list pos:line="4" pos:column="22">(<argument><expr><operator pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></operator><operator pos:line="4" pos:column="24">new<pos:position pos:line="4" pos:column="27"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="30"/></expr_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">new<pos:position pos:line="5" pos:column="10"/></operator> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <name pos:line="5" pos:column="14">NULL<pos:position pos:line="5" pos:column="18"/></name></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal><operator pos:line="6" pos:column="15">)<pos:position pos:line="6" pos:column="16"/></operator></expr>;<pos:position pos:line="6" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><operator pos:line="8" pos:column="3">new<pos:position pos:line="8" pos:column="6"/></operator><operator pos:line="8" pos:column="6">-&gt;<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="8">type<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">strdup<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">type<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">new<pos:position pos:line="9" pos:column="10"/></operator><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">type<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">==<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">NULL<pos:position pos:line="9" pos:column="24"/></name></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25"> <block pos:line="9" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">sfree<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><operator pos:line="10" pos:column="11">new<pos:position pos:line="10" pos:column="14"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="16"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="14" pos:column="3">new<pos:position pos:line="14" pos:column="6"/></operator><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">callback<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">callback<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="15" pos:column="3">new<pos:position pos:line="15" pos:column="6"/></operator><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">next<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">NULL<pos:position pos:line="15" pos:column="19"/></name></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="17" pos:column="3">new<pos:position pos:line="17" pos:column="6"/></operator><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">ctx<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">plugin_get_ctx<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">()<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">complex_callback_head<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">==<pos:position pos:line="19" pos:column="31"/></operator> <name pos:line="19" pos:column="32">NULL<pos:position pos:line="19" pos:column="36"/></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block pos:line="19" pos:column="38">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">complex_callback_head<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <operator pos:line="20" pos:column="29">new<pos:position pos:line="20" pos:column="32"/></operator></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then> <else pos:line="21" pos:column="5">else <block pos:line="21" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">cf_complex_callback_t<pos:position pos:line="22" pos:column="26"/></name> <modifier pos:line="22" pos:column="27">*<pos:position pos:line="22" pos:column="28"/></modifier></type><name pos:line="22" pos:column="28">last<pos:position pos:line="22" pos:column="32"/></name> <init pos:line="22" pos:column="33">= <expr><name pos:line="22" pos:column="35">complex_callback_head<pos:position pos:line="22" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="57"/></decl_stmt>
    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><name><name pos:line="23" pos:column="12">last<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">next<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">!=<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">NULL<pos:position pos:line="23" pos:column="30"/></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">last<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <name><name pos:line="24" pos:column="14">last<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">next<pos:position pos:line="24" pos:column="24"/></name></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt></block></while>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">last<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">next<pos:position pos:line="25" pos:column="15"/></name></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <operator pos:line="25" pos:column="18">new<pos:position pos:line="25" pos:column="21"/></operator></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></else></if>

  <return pos:line="28" pos:column="3">return <expr><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><literal type="number" pos:line="28" pos:column="11">0<pos:position pos:line="28" pos:column="12"/></literal><operator pos:line="28" pos:column="12">)<pos:position pos:line="28" pos:column="13"/></operator></expr>;<pos:position pos:line="28" pos:column="14"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

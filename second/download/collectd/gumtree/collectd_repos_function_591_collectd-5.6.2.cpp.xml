<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_591_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensu_config_node<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">oconfig_item_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">ci<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">sensu_host<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">host<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">NULL<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">oconfig_item_t<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">child<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">callback_name<pos:position pos:line="6" pos:column="21"/></name><index pos:line="6" pos:column="21">[<expr><name pos:line="6" pos:column="22">DATA_MAX_NAME_LEN<pos:position pos:line="6" pos:column="39"/></name></expr>]<pos:position pos:line="6" pos:column="40"/></index></name></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">host<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">calloc<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><literal type="number" pos:line="8" pos:column="22">1<pos:position pos:line="8" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="25">sizeof<argument_list pos:line="8" pos:column="31">(<argument><expr><operator pos:line="8" pos:column="32">*<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">host<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call><operator pos:line="8" pos:column="39">)<pos:position pos:line="8" pos:column="40"/></operator> <operator pos:line="8" pos:column="41">==<pos:position pos:line="8" pos:column="43"/></operator> <name pos:line="8" pos:column="44">NULL<pos:position pos:line="8" pos:column="48"/></name></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49"> <block pos:line="8" pos:column="50">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ERROR<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="string" pos:line="9" pos:column="11">"write_sensu plugin: calloc failed."<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">ENOMEM<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">pthread_mutex_init<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><operator pos:line="12" pos:column="22">&amp;<pos:position pos:line="12" pos:column="27"/></operator><name><name pos:line="12" pos:column="23">host<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">lock<pos:position pos:line="12" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">NULL<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">host<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">reference_count<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <literal type="number" pos:line="13" pos:column="27">1<pos:position pos:line="13" pos:column="28"/></literal></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">host<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">node<pos:position pos:line="14" pos:column="13"/></name></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">host<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">service<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">NULL<pos:position pos:line="15" pos:column="23"/></name></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">host<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">notifications<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <literal type="number" pos:line="16" pos:column="25">0<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">host<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">metrics<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">host<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">store_rates<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <literal type="number" pos:line="18" pos:column="23">1<pos:position pos:line="18" pos:column="24"/></literal></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">host<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">always_append_ds<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <literal type="number" pos:line="19" pos:column="28">0<pos:position pos:line="19" pos:column="29"/></literal></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">host<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">metric_handlers<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">nb_strs<pos:position pos:line="20" pos:column="32"/></name></name> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <literal type="number" pos:line="20" pos:column="35">0<pos:position pos:line="20" pos:column="36"/></literal></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">host<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">metric_handlers<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">.<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">strs<pos:position pos:line="21" pos:column="29"/></name></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="32">NULL<pos:position pos:line="21" pos:column="36"/></name></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">host<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">notification_handlers<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">.<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">nb_strs<pos:position pos:line="22" pos:column="38"/></name></name> <operator pos:line="22" pos:column="39">=<pos:position pos:line="22" pos:column="40"/></operator> <literal type="number" pos:line="22" pos:column="41">0<pos:position pos:line="22" pos:column="42"/></literal></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">host<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">notification_handlers<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">.<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">strs<pos:position pos:line="23" pos:column="35"/></name></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <name pos:line="23" pos:column="38">NULL<pos:position pos:line="23" pos:column="42"/></name></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">host<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">separator<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <call><name pos:line="24" pos:column="21">strdup<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><literal type="string" pos:line="24" pos:column="28">"/"<pos:position pos:line="24" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name><name pos:line="25" pos:column="7">host<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">separator<pos:position pos:line="25" pos:column="22"/></name></name> <operator pos:line="25" pos:column="23">==<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">NULL<pos:position pos:line="25" pos:column="30"/></name></expr>)<pos:position pos:line="25" pos:column="31"/></condition><then pos:line="25" pos:column="31"> <block pos:line="25" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">ERROR<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><literal type="string" pos:line="26" pos:column="11">"write_sensu plugin: Unable to alloc memory"<pos:position pos:line="26" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">sensu_free<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">host<pos:position pos:line="27" pos:column="20"/></name></expr></argument>)<pos:position pos:line="27" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">-<pos:position pos:line="28" pos:column="13"/></operator><literal type="number" pos:line="28" pos:column="13">1<pos:position pos:line="28" pos:column="14"/></literal></expr>;<pos:position pos:line="28" pos:column="15"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="31" pos:column="3">status<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <call><name pos:line="31" pos:column="12">cf_util_get_string<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">ci<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="35">&amp;<pos:position pos:line="31" pos:column="40"/></operator><name><name pos:line="31" pos:column="36">host<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">-&gt;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="42">name<pos:position pos:line="31" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">!=<pos:position pos:line="32" pos:column="16"/></operator> <literal type="number" pos:line="32" pos:column="17">0<pos:position pos:line="32" pos:column="18"/></literal></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19"> <block pos:line="32" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">WARNING<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><literal type="string" pos:line="33" pos:column="13">"write_sensu plugin: Required host name is missing."<pos:position pos:line="33" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">sensu_free<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">host<pos:position pos:line="34" pos:column="20"/></name></expr></argument>)<pos:position pos:line="34" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">-<pos:position pos:line="35" pos:column="13"/></operator><literal type="number" pos:line="35" pos:column="13">1<pos:position pos:line="35" pos:column="14"/></literal></expr>;<pos:position pos:line="35" pos:column="15"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <for pos:line="38" pos:column="3">for <control pos:line="38" pos:column="7">(<init><decl><type><name pos:line="38" pos:column="8">int<pos:position pos:line="38" pos:column="11"/></name></type> <name pos:line="38" pos:column="12">i<pos:position pos:line="38" pos:column="13"/></name> <init pos:line="38" pos:column="14">= <expr><literal type="number" pos:line="38" pos:column="16">0<pos:position pos:line="38" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="38" pos:column="18"/></init> <condition><expr><name pos:line="38" pos:column="19">i<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">&lt;<pos:position pos:line="38" pos:column="25"/></operator> <name><name pos:line="38" pos:column="23">ci<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">children_num<pos:position pos:line="38" pos:column="39"/></name></name></expr>;<pos:position pos:line="38" pos:column="40"/></condition> <incr><expr><name pos:line="38" pos:column="41">i<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">++<pos:position pos:line="38" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="45"/></control> <block pos:line="38" pos:column="46">{
    <expr_stmt><expr><name pos:line="39" pos:column="5">child<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <operator pos:line="39" pos:column="13">&amp;<pos:position pos:line="39" pos:column="18"/></operator><name><name pos:line="39" pos:column="14">ci<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">children<pos:position pos:line="39" pos:column="26"/></name><index pos:line="39" pos:column="26">[<expr><name pos:line="39" pos:column="27">i<pos:position pos:line="39" pos:column="28"/></name></expr>]<pos:position pos:line="39" pos:column="29"/></index></name></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">status<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <literal type="number" pos:line="40" pos:column="14">0<pos:position pos:line="40" pos:column="15"/></literal></expr>;<pos:position pos:line="40" pos:column="16"/></expr_stmt>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><call><name pos:line="42" pos:column="9">strcasecmp<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><literal type="string" pos:line="42" pos:column="20">"Host"<pos:position pos:line="42" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="28">child<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">-&gt;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="35">key<pos:position pos:line="42" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></call> <operator pos:line="42" pos:column="40">==<pos:position pos:line="42" pos:column="42"/></operator> <literal type="number" pos:line="42" pos:column="43">0<pos:position pos:line="42" pos:column="44"/></literal></expr>)<pos:position pos:line="42" pos:column="45"/></condition><then pos:line="42" pos:column="45"> <block pos:line="42" pos:column="46">{
      <expr_stmt><expr><name pos:line="43" pos:column="7">status<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <call><name pos:line="43" pos:column="16">cf_util_get_string<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><name pos:line="43" pos:column="35">child<pos:position pos:line="43" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="42">&amp;<pos:position pos:line="43" pos:column="47"/></operator><name><name pos:line="43" pos:column="43">host<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">-&gt;<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="49">node<pos:position pos:line="43" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="55"/></expr_stmt>
      <if pos:line="44" pos:column="7">if <condition pos:line="44" pos:column="10">(<expr><name pos:line="44" pos:column="11">status<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">!=<pos:position pos:line="44" pos:column="20"/></operator> <literal type="number" pos:line="44" pos:column="21">0<pos:position pos:line="44" pos:column="22"/></literal></expr>)<pos:position pos:line="44" pos:column="23"/></condition><then pos:line="44" pos:column="23">
        <block type="pseudo"><break pos:line="45" pos:column="9">break;<pos:position pos:line="45" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then> <elseif pos:line="46" pos:column="7">else <if pos:line="46" pos:column="12">if <condition pos:line="46" pos:column="15">(<expr><call><name pos:line="46" pos:column="16">strcasecmp<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><literal type="string" pos:line="46" pos:column="27">"Notifications"<pos:position pos:line="46" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="44">child<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">-&gt;<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="51">key<pos:position pos:line="46" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="55"/></argument_list></call> <operator pos:line="46" pos:column="56">==<pos:position pos:line="46" pos:column="58"/></operator> <literal type="number" pos:line="46" pos:column="59">0<pos:position pos:line="46" pos:column="60"/></literal></expr>)<pos:position pos:line="46" pos:column="61"/></condition><then pos:line="46" pos:column="61"> <block pos:line="46" pos:column="62">{
      <expr_stmt><expr><name pos:line="47" pos:column="7">status<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <call><name pos:line="47" pos:column="16">cf_util_get_boolean<pos:position pos:line="47" pos:column="35"/></name><argument_list pos:line="47" pos:column="35">(<argument><expr><name pos:line="47" pos:column="36">child<pos:position pos:line="47" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="43">&amp;<pos:position pos:line="47" pos:column="48"/></operator><name><name pos:line="47" pos:column="44">host<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">-&gt;<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="50">notifications<pos:position pos:line="47" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="65"/></expr_stmt>
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><name pos:line="48" pos:column="11">status<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">!=<pos:position pos:line="48" pos:column="20"/></operator> <literal type="number" pos:line="48" pos:column="21">0<pos:position pos:line="48" pos:column="22"/></literal></expr>)<pos:position pos:line="48" pos:column="23"/></condition><then pos:line="48" pos:column="23">
        <block type="pseudo"><break pos:line="49" pos:column="9">break;<pos:position pos:line="49" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if></elseif> <elseif pos:line="50" pos:column="7">else <if pos:line="50" pos:column="12">if <condition pos:line="50" pos:column="15">(<expr><call><name pos:line="50" pos:column="16">strcasecmp<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">(<argument><expr><literal type="string" pos:line="50" pos:column="27">"Metrics"<pos:position pos:line="50" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="38">child<pos:position pos:line="50" pos:column="43"/></name><operator pos:line="50" pos:column="43">-&gt;<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="45">key<pos:position pos:line="50" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call> <operator pos:line="50" pos:column="50">==<pos:position pos:line="50" pos:column="52"/></operator> <literal type="number" pos:line="50" pos:column="53">0<pos:position pos:line="50" pos:column="54"/></literal></expr>)<pos:position pos:line="50" pos:column="55"/></condition><then pos:line="50" pos:column="55"> <block pos:line="50" pos:column="56">{
      <expr_stmt><expr><name pos:line="51" pos:column="7">status<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <call><name pos:line="51" pos:column="16">cf_util_get_boolean<pos:position pos:line="51" pos:column="35"/></name><argument_list pos:line="51" pos:column="35">(<argument><expr><name pos:line="51" pos:column="36">child<pos:position pos:line="51" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="43">&amp;<pos:position pos:line="51" pos:column="48"/></operator><name><name pos:line="51" pos:column="44">host<pos:position pos:line="51" pos:column="48"/></name><operator pos:line="51" pos:column="48">-&gt;<pos:position pos:line="51" pos:column="53"/></operator><name pos:line="51" pos:column="50">metrics<pos:position pos:line="51" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="59"/></expr_stmt>
      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><name pos:line="52" pos:column="11">status<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">!=<pos:position pos:line="52" pos:column="20"/></operator> <literal type="number" pos:line="52" pos:column="21">0<pos:position pos:line="52" pos:column="22"/></literal></expr>)<pos:position pos:line="52" pos:column="23"/></condition><then pos:line="52" pos:column="23">
        <block type="pseudo"><break pos:line="53" pos:column="9">break;<pos:position pos:line="53" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if></elseif> <elseif pos:line="54" pos:column="7">else <if pos:line="54" pos:column="12">if <condition pos:line="54" pos:column="15">(<expr><call><name pos:line="54" pos:column="16">strcasecmp<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><literal type="string" pos:line="54" pos:column="27">"EventServicePrefix"<pos:position pos:line="54" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="49">child<pos:position pos:line="54" pos:column="54"/></name><operator pos:line="54" pos:column="54">-&gt;<pos:position pos:line="54" pos:column="59"/></operator><name pos:line="54" pos:column="56">key<pos:position pos:line="54" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="60"/></argument_list></call> <operator pos:line="54" pos:column="61">==<pos:position pos:line="54" pos:column="63"/></operator> <literal type="number" pos:line="54" pos:column="64">0<pos:position pos:line="54" pos:column="65"/></literal></expr>)<pos:position pos:line="54" pos:column="66"/></condition><then pos:line="54" pos:column="66"> <block pos:line="54" pos:column="67">{
      <expr_stmt><expr><name pos:line="55" pos:column="7">status<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call><name pos:line="55" pos:column="16">cf_util_get_string<pos:position pos:line="55" pos:column="34"/></name><argument_list pos:line="55" pos:column="34">(<argument><expr><name pos:line="55" pos:column="35">child<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="42">&amp;<pos:position pos:line="55" pos:column="47"/></operator><name><name pos:line="55" pos:column="43">host<pos:position pos:line="55" pos:column="47"/></name><operator pos:line="55" pos:column="47">-&gt;<pos:position pos:line="55" pos:column="52"/></operator><name pos:line="55" pos:column="49">event_service_prefix<pos:position pos:line="55" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="71"/></expr_stmt>
      <if pos:line="56" pos:column="7">if <condition pos:line="56" pos:column="10">(<expr><name pos:line="56" pos:column="11">status<pos:position pos:line="56" pos:column="17"/></name> <operator pos:line="56" pos:column="18">!=<pos:position pos:line="56" pos:column="20"/></operator> <literal type="number" pos:line="56" pos:column="21">0<pos:position pos:line="56" pos:column="22"/></literal></expr>)<pos:position pos:line="56" pos:column="23"/></condition><then pos:line="56" pos:column="23">
        <block type="pseudo"><break pos:line="57" pos:column="9">break;<pos:position pos:line="57" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if></elseif> <elseif pos:line="58" pos:column="7">else <if pos:line="58" pos:column="12">if <condition pos:line="58" pos:column="15">(<expr><call><name pos:line="58" pos:column="16">strcasecmp<pos:position pos:line="58" pos:column="26"/></name><argument_list pos:line="58" pos:column="26">(<argument><expr><literal type="string" pos:line="58" pos:column="27">"Separator"<pos:position pos:line="58" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="40">child<pos:position pos:line="58" pos:column="45"/></name><operator pos:line="58" pos:column="45">-&gt;<pos:position pos:line="58" pos:column="50"/></operator><name pos:line="58" pos:column="47">key<pos:position pos:line="58" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="51"/></argument_list></call> <operator pos:line="58" pos:column="52">==<pos:position pos:line="58" pos:column="54"/></operator> <literal type="number" pos:line="58" pos:column="55">0<pos:position pos:line="58" pos:column="56"/></literal></expr>)<pos:position pos:line="58" pos:column="57"/></condition><then pos:line="58" pos:column="57"> <block pos:line="58" pos:column="58">{
      <expr_stmt><expr><name pos:line="59" pos:column="7">status<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <call><name pos:line="59" pos:column="16">cf_util_get_string<pos:position pos:line="59" pos:column="34"/></name><argument_list pos:line="59" pos:column="34">(<argument><expr><name pos:line="59" pos:column="35">child<pos:position pos:line="59" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="42">&amp;<pos:position pos:line="59" pos:column="47"/></operator><name><name pos:line="59" pos:column="43">host<pos:position pos:line="59" pos:column="47"/></name><operator pos:line="59" pos:column="47">-&gt;<pos:position pos:line="59" pos:column="52"/></operator><name pos:line="59" pos:column="49">separator<pos:position pos:line="59" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="60"/></expr_stmt>
      <if pos:line="60" pos:column="7">if <condition pos:line="60" pos:column="10">(<expr><name pos:line="60" pos:column="11">status<pos:position pos:line="60" pos:column="17"/></name> <operator pos:line="60" pos:column="18">!=<pos:position pos:line="60" pos:column="20"/></operator> <literal type="number" pos:line="60" pos:column="21">0<pos:position pos:line="60" pos:column="22"/></literal></expr>)<pos:position pos:line="60" pos:column="23"/></condition><then pos:line="60" pos:column="23">
        <block type="pseudo"><break pos:line="61" pos:column="9">break;<pos:position pos:line="61" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if></elseif> <elseif pos:line="62" pos:column="7">else <if pos:line="62" pos:column="12">if <condition pos:line="62" pos:column="15">(<expr><call><name pos:line="62" pos:column="16">strcasecmp<pos:position pos:line="62" pos:column="26"/></name><argument_list pos:line="62" pos:column="26">(<argument><expr><literal type="string" pos:line="62" pos:column="27">"MetricHandler"<pos:position pos:line="62" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="44">child<pos:position pos:line="62" pos:column="49"/></name><operator pos:line="62" pos:column="49">-&gt;<pos:position pos:line="62" pos:column="54"/></operator><name pos:line="62" pos:column="51">key<pos:position pos:line="62" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="55"/></argument_list></call> <operator pos:line="62" pos:column="56">==<pos:position pos:line="62" pos:column="58"/></operator> <literal type="number" pos:line="62" pos:column="59">0<pos:position pos:line="62" pos:column="60"/></literal></expr>)<pos:position pos:line="62" pos:column="61"/></condition><then pos:line="62" pos:column="61"> <block pos:line="62" pos:column="62">{
      <decl_stmt><decl><type><name pos:line="63" pos:column="7">char<pos:position pos:line="63" pos:column="11"/></name> <modifier pos:line="63" pos:column="12">*<pos:position pos:line="63" pos:column="13"/></modifier></type><name pos:line="63" pos:column="13">temp_str<pos:position pos:line="63" pos:column="21"/></name> <init pos:line="63" pos:column="22">= <expr><name pos:line="63" pos:column="24">NULL<pos:position pos:line="63" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="63" pos:column="29"/></decl_stmt>
      <expr_stmt><expr><name pos:line="64" pos:column="7">status<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <call><name pos:line="64" pos:column="16">cf_util_get_string<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">(<argument><expr><name pos:line="64" pos:column="35">child<pos:position pos:line="64" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="42">&amp;<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="43">temp_str<pos:position pos:line="64" pos:column="51"/></name></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="53"/></expr_stmt>
      <if pos:line="65" pos:column="7">if <condition pos:line="65" pos:column="10">(<expr><name pos:line="65" pos:column="11">status<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">!=<pos:position pos:line="65" pos:column="20"/></operator> <literal type="number" pos:line="65" pos:column="21">0<pos:position pos:line="65" pos:column="22"/></literal></expr>)<pos:position pos:line="65" pos:column="23"/></condition><then pos:line="65" pos:column="23">
        <block type="pseudo"><break pos:line="66" pos:column="9">break;<pos:position pos:line="66" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="67" pos:column="7">status<pos:position pos:line="67" pos:column="13"/></name> <operator pos:line="67" pos:column="14">=<pos:position pos:line="67" pos:column="15"/></operator> <call><name pos:line="67" pos:column="16">add_str_to_list<pos:position pos:line="67" pos:column="31"/></name><argument_list pos:line="67" pos:column="31">(<argument><expr><operator pos:line="67" pos:column="32">&amp;<pos:position pos:line="67" pos:column="37"/></operator><operator pos:line="67" pos:column="33">(<pos:position pos:line="67" pos:column="34"/></operator><name><name pos:line="67" pos:column="34">host<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">-&gt;<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="40">metric_handlers<pos:position pos:line="67" pos:column="55"/></name></name><operator pos:line="67" pos:column="55">)<pos:position pos:line="67" pos:column="56"/></operator></expr></argument>, <argument><expr><name pos:line="67" pos:column="58">temp_str<pos:position pos:line="67" pos:column="66"/></name></expr></argument>)<pos:position pos:line="67" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">free<pos:position pos:line="68" pos:column="11"/></name><argument_list pos:line="68" pos:column="11">(<argument><expr><name pos:line="68" pos:column="12">temp_str<pos:position pos:line="68" pos:column="20"/></name></expr></argument>)<pos:position pos:line="68" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="22"/></expr_stmt>
      <if pos:line="69" pos:column="7">if <condition pos:line="69" pos:column="10">(<expr><name pos:line="69" pos:column="11">status<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">!=<pos:position pos:line="69" pos:column="20"/></operator> <literal type="number" pos:line="69" pos:column="21">0<pos:position pos:line="69" pos:column="22"/></literal></expr>)<pos:position pos:line="69" pos:column="23"/></condition><then pos:line="69" pos:column="23">
        <block type="pseudo"><break pos:line="70" pos:column="9">break;<pos:position pos:line="70" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if></elseif> <elseif pos:line="71" pos:column="7">else <if pos:line="71" pos:column="12">if <condition pos:line="71" pos:column="15">(<expr><call><name pos:line="71" pos:column="16">strcasecmp<pos:position pos:line="71" pos:column="26"/></name><argument_list pos:line="71" pos:column="26">(<argument><expr><literal type="string" pos:line="71" pos:column="27">"NotificationHandler"<pos:position pos:line="71" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="50">child<pos:position pos:line="71" pos:column="55"/></name><operator pos:line="71" pos:column="55">-&gt;<pos:position pos:line="71" pos:column="60"/></operator><name pos:line="71" pos:column="57">key<pos:position pos:line="71" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call> <operator pos:line="71" pos:column="62">==<pos:position pos:line="71" pos:column="64"/></operator> <literal type="number" pos:line="71" pos:column="65">0<pos:position pos:line="71" pos:column="66"/></literal></expr>)<pos:position pos:line="71" pos:column="67"/></condition><then pos:line="71" pos:column="67"> <block pos:line="71" pos:column="68">{
      <decl_stmt><decl><type><name pos:line="72" pos:column="7">char<pos:position pos:line="72" pos:column="11"/></name> <modifier pos:line="72" pos:column="12">*<pos:position pos:line="72" pos:column="13"/></modifier></type><name pos:line="72" pos:column="13">temp_str<pos:position pos:line="72" pos:column="21"/></name> <init pos:line="72" pos:column="22">= <expr><name pos:line="72" pos:column="24">NULL<pos:position pos:line="72" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="72" pos:column="29"/></decl_stmt>
      <expr_stmt><expr><name pos:line="73" pos:column="7">status<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">=<pos:position pos:line="73" pos:column="15"/></operator> <call><name pos:line="73" pos:column="16">cf_util_get_string<pos:position pos:line="73" pos:column="34"/></name><argument_list pos:line="73" pos:column="34">(<argument><expr><name pos:line="73" pos:column="35">child<pos:position pos:line="73" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="42">&amp;<pos:position pos:line="73" pos:column="47"/></operator><name pos:line="73" pos:column="43">temp_str<pos:position pos:line="73" pos:column="51"/></name></expr></argument>)<pos:position pos:line="73" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="53"/></expr_stmt>
      <if pos:line="74" pos:column="7">if <condition pos:line="74" pos:column="10">(<expr><name pos:line="74" pos:column="11">status<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">!=<pos:position pos:line="74" pos:column="20"/></operator> <literal type="number" pos:line="74" pos:column="21">0<pos:position pos:line="74" pos:column="22"/></literal></expr>)<pos:position pos:line="74" pos:column="23"/></condition><then pos:line="74" pos:column="23">
        <block type="pseudo"><break pos:line="75" pos:column="9">break;<pos:position pos:line="75" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="76" pos:column="7">status<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">=<pos:position pos:line="76" pos:column="15"/></operator> <call><name pos:line="76" pos:column="16">add_str_to_list<pos:position pos:line="76" pos:column="31"/></name><argument_list pos:line="76" pos:column="31">(<argument><expr><operator pos:line="76" pos:column="32">&amp;<pos:position pos:line="76" pos:column="37"/></operator><operator pos:line="76" pos:column="33">(<pos:position pos:line="76" pos:column="34"/></operator><name><name pos:line="76" pos:column="34">host<pos:position pos:line="76" pos:column="38"/></name><operator pos:line="76" pos:column="38">-&gt;<pos:position pos:line="76" pos:column="43"/></operator><name pos:line="76" pos:column="40">notification_handlers<pos:position pos:line="76" pos:column="61"/></name></name><operator pos:line="76" pos:column="61">)<pos:position pos:line="76" pos:column="62"/></operator></expr></argument>, <argument><expr><name pos:line="76" pos:column="64">temp_str<pos:position pos:line="76" pos:column="72"/></name></expr></argument>)<pos:position pos:line="76" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="74"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">free<pos:position pos:line="77" pos:column="11"/></name><argument_list pos:line="77" pos:column="11">(<argument><expr><name pos:line="77" pos:column="12">temp_str<pos:position pos:line="77" pos:column="20"/></name></expr></argument>)<pos:position pos:line="77" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="22"/></expr_stmt>
      <if pos:line="78" pos:column="7">if <condition pos:line="78" pos:column="10">(<expr><name pos:line="78" pos:column="11">status<pos:position pos:line="78" pos:column="17"/></name> <operator pos:line="78" pos:column="18">!=<pos:position pos:line="78" pos:column="20"/></operator> <literal type="number" pos:line="78" pos:column="21">0<pos:position pos:line="78" pos:column="22"/></literal></expr>)<pos:position pos:line="78" pos:column="23"/></condition><then pos:line="78" pos:column="23">
        <block type="pseudo"><break pos:line="79" pos:column="9">break;<pos:position pos:line="79" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if></elseif> <elseif pos:line="80" pos:column="7">else <if pos:line="80" pos:column="12">if <condition pos:line="80" pos:column="15">(<expr><call><name pos:line="80" pos:column="16">strcasecmp<pos:position pos:line="80" pos:column="26"/></name><argument_list pos:line="80" pos:column="26">(<argument><expr><literal type="string" pos:line="80" pos:column="27">"Port"<pos:position pos:line="80" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="35">child<pos:position pos:line="80" pos:column="40"/></name><operator pos:line="80" pos:column="40">-&gt;<pos:position pos:line="80" pos:column="45"/></operator><name pos:line="80" pos:column="42">key<pos:position pos:line="80" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="46"/></argument_list></call> <operator pos:line="80" pos:column="47">==<pos:position pos:line="80" pos:column="49"/></operator> <literal type="number" pos:line="80" pos:column="50">0<pos:position pos:line="80" pos:column="51"/></literal></expr>)<pos:position pos:line="80" pos:column="52"/></condition><then pos:line="80" pos:column="52"> <block pos:line="80" pos:column="53">{
      <expr_stmt><expr><name pos:line="81" pos:column="7">status<pos:position pos:line="81" pos:column="13"/></name> <operator pos:line="81" pos:column="14">=<pos:position pos:line="81" pos:column="15"/></operator> <call><name pos:line="81" pos:column="16">cf_util_get_service<pos:position pos:line="81" pos:column="35"/></name><argument_list pos:line="81" pos:column="35">(<argument><expr><name pos:line="81" pos:column="36">child<pos:position pos:line="81" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="43">&amp;<pos:position pos:line="81" pos:column="48"/></operator><name><name pos:line="81" pos:column="44">host<pos:position pos:line="81" pos:column="48"/></name><operator pos:line="81" pos:column="48">-&gt;<pos:position pos:line="81" pos:column="53"/></operator><name pos:line="81" pos:column="50">service<pos:position pos:line="81" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="59"/></expr_stmt>
      <if pos:line="82" pos:column="7">if <condition pos:line="82" pos:column="10">(<expr><name pos:line="82" pos:column="11">status<pos:position pos:line="82" pos:column="17"/></name> <operator pos:line="82" pos:column="18">!=<pos:position pos:line="82" pos:column="20"/></operator> <literal type="number" pos:line="82" pos:column="21">0<pos:position pos:line="82" pos:column="22"/></literal></expr>)<pos:position pos:line="82" pos:column="23"/></condition><then pos:line="82" pos:column="23"> <block pos:line="82" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">ERROR<pos:position pos:line="83" pos:column="14"/></name><argument_list pos:line="83" pos:column="14">(<argument><expr><literal type="string" pos:line="83" pos:column="15">"write_sensu plugin: Invalid argument "<pos:position pos:line="83" pos:column="54"/></literal>
              <literal type="string" pos:line="84" pos:column="15">"configured for the \"Port\" "<pos:position pos:line="84" pos:column="45"/></literal>
              <literal type="string" pos:line="85" pos:column="15">"option."<pos:position pos:line="85" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="26"/></expr_stmt>
        <break pos:line="86" pos:column="9">break;<pos:position pos:line="86" pos:column="15"/></break>
      }<pos:position pos:line="87" pos:column="8"/></block></then></if>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if></elseif> <elseif pos:line="88" pos:column="7">else <if pos:line="88" pos:column="12">if <condition pos:line="88" pos:column="15">(<expr><call><name pos:line="88" pos:column="16">strcasecmp<pos:position pos:line="88" pos:column="26"/></name><argument_list pos:line="88" pos:column="26">(<argument><expr><literal type="string" pos:line="88" pos:column="27">"StoreRates"<pos:position pos:line="88" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="41">child<pos:position pos:line="88" pos:column="46"/></name><operator pos:line="88" pos:column="46">-&gt;<pos:position pos:line="88" pos:column="51"/></operator><name pos:line="88" pos:column="48">key<pos:position pos:line="88" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="52"/></argument_list></call> <operator pos:line="88" pos:column="53">==<pos:position pos:line="88" pos:column="55"/></operator> <literal type="number" pos:line="88" pos:column="56">0<pos:position pos:line="88" pos:column="57"/></literal></expr>)<pos:position pos:line="88" pos:column="58"/></condition><then pos:line="88" pos:column="58"> <block pos:line="88" pos:column="59">{
      <expr_stmt><expr><name pos:line="89" pos:column="7">status<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">=<pos:position pos:line="89" pos:column="15"/></operator> <call><name pos:line="89" pos:column="16">cf_util_get_boolean<pos:position pos:line="89" pos:column="35"/></name><argument_list pos:line="89" pos:column="35">(<argument><expr><name pos:line="89" pos:column="36">child<pos:position pos:line="89" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="43">&amp;<pos:position pos:line="89" pos:column="48"/></operator><name><name pos:line="89" pos:column="44">host<pos:position pos:line="89" pos:column="48"/></name><operator pos:line="89" pos:column="48">-&gt;<pos:position pos:line="89" pos:column="53"/></operator><name pos:line="89" pos:column="50">store_rates<pos:position pos:line="89" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="63"/></expr_stmt>
      <if pos:line="90" pos:column="7">if <condition pos:line="90" pos:column="10">(<expr><name pos:line="90" pos:column="11">status<pos:position pos:line="90" pos:column="17"/></name> <operator pos:line="90" pos:column="18">!=<pos:position pos:line="90" pos:column="20"/></operator> <literal type="number" pos:line="90" pos:column="21">0<pos:position pos:line="90" pos:column="22"/></literal></expr>)<pos:position pos:line="90" pos:column="23"/></condition><then pos:line="90" pos:column="23">
        <block type="pseudo"><break pos:line="91" pos:column="9">break;<pos:position pos:line="91" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if></elseif> <elseif pos:line="92" pos:column="7">else <if pos:line="92" pos:column="12">if <condition pos:line="92" pos:column="15">(<expr><call><name pos:line="92" pos:column="16">strcasecmp<pos:position pos:line="92" pos:column="26"/></name><argument_list pos:line="92" pos:column="26">(<argument><expr><literal type="string" pos:line="92" pos:column="27">"AlwaysAppendDS"<pos:position pos:line="92" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="45">child<pos:position pos:line="92" pos:column="50"/></name><operator pos:line="92" pos:column="50">-&gt;<pos:position pos:line="92" pos:column="55"/></operator><name pos:line="92" pos:column="52">key<pos:position pos:line="92" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="56"/></argument_list></call> <operator pos:line="92" pos:column="57">==<pos:position pos:line="92" pos:column="59"/></operator> <literal type="number" pos:line="92" pos:column="60">0<pos:position pos:line="92" pos:column="61"/></literal></expr>)<pos:position pos:line="92" pos:column="62"/></condition><then pos:line="92" pos:column="62"> <block pos:line="92" pos:column="63">{
      <expr_stmt><expr><name pos:line="93" pos:column="7">status<pos:position pos:line="93" pos:column="13"/></name> <operator pos:line="93" pos:column="14">=<pos:position pos:line="93" pos:column="15"/></operator> <call><name pos:line="93" pos:column="16">cf_util_get_boolean<pos:position pos:line="93" pos:column="35"/></name><argument_list pos:line="93" pos:column="35">(<argument><expr><name pos:line="93" pos:column="36">child<pos:position pos:line="93" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="43">&amp;<pos:position pos:line="93" pos:column="48"/></operator><name><name pos:line="93" pos:column="44">host<pos:position pos:line="93" pos:column="48"/></name><operator pos:line="93" pos:column="48">-&gt;<pos:position pos:line="93" pos:column="53"/></operator><name pos:line="93" pos:column="50">always_append_ds<pos:position pos:line="93" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="68"/></expr_stmt>
      <if pos:line="94" pos:column="7">if <condition pos:line="94" pos:column="10">(<expr><name pos:line="94" pos:column="11">status<pos:position pos:line="94" pos:column="17"/></name> <operator pos:line="94" pos:column="18">!=<pos:position pos:line="94" pos:column="20"/></operator> <literal type="number" pos:line="94" pos:column="21">0<pos:position pos:line="94" pos:column="22"/></literal></expr>)<pos:position pos:line="94" pos:column="23"/></condition><then pos:line="94" pos:column="23">
        <block type="pseudo"><break pos:line="95" pos:column="9">break;<pos:position pos:line="95" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if></elseif> <else pos:line="96" pos:column="7">else <block pos:line="96" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">WARNING<pos:position pos:line="97" pos:column="14"/></name><argument_list pos:line="97" pos:column="14">(<argument><expr><literal type="string" pos:line="97" pos:column="15">"write_sensu plugin: ignoring unknown config "<pos:position pos:line="97" pos:column="61"/></literal>
              <literal type="string" pos:line="98" pos:column="15">"option: \"%s\""<pos:position pos:line="98" pos:column="31"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="99" pos:column="15">child<pos:position pos:line="99" pos:column="20"/></name><operator pos:line="99" pos:column="20">-&gt;<pos:position pos:line="99" pos:column="25"/></operator><name pos:line="99" pos:column="22">key<pos:position pos:line="99" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></else></if>
  }<pos:position pos:line="101" pos:column="4"/></block></for>
  <if pos:line="102" pos:column="3">if <condition pos:line="102" pos:column="6">(<expr><name pos:line="102" pos:column="7">status<pos:position pos:line="102" pos:column="13"/></name> <operator pos:line="102" pos:column="14">!=<pos:position pos:line="102" pos:column="16"/></operator> <literal type="number" pos:line="102" pos:column="17">0<pos:position pos:line="102" pos:column="18"/></literal></expr>)<pos:position pos:line="102" pos:column="19"/></condition><then pos:line="102" pos:column="19"> <block pos:line="102" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="103" pos:column="5">sensu_free<pos:position pos:line="103" pos:column="15"/></name><argument_list pos:line="103" pos:column="15">(<argument><expr><name pos:line="103" pos:column="16">host<pos:position pos:line="103" pos:column="20"/></name></expr></argument>)<pos:position pos:line="103" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="22"/></expr_stmt>
    <return pos:line="104" pos:column="5">return <expr><name pos:line="104" pos:column="12">status<pos:position pos:line="104" pos:column="18"/></name></expr>;<pos:position pos:line="104" pos:column="19"/></return>
  }<pos:position pos:line="105" pos:column="4"/></block></then></if>

  <if pos:line="107" pos:column="3">if <condition pos:line="107" pos:column="6">(<expr><name><name pos:line="107" pos:column="7">host<pos:position pos:line="107" pos:column="11"/></name><operator pos:line="107" pos:column="11">-&gt;<pos:position pos:line="107" pos:column="16"/></operator><name pos:line="107" pos:column="13">metrics<pos:position pos:line="107" pos:column="20"/></name></name> <operator pos:line="107" pos:column="21">&amp;&amp;<pos:position pos:line="107" pos:column="31"/></operator> <operator pos:line="107" pos:column="24">(<pos:position pos:line="107" pos:column="25"/></operator><name><name pos:line="107" pos:column="25">host<pos:position pos:line="107" pos:column="29"/></name><operator pos:line="107" pos:column="29">-&gt;<pos:position pos:line="107" pos:column="34"/></operator><name pos:line="107" pos:column="31">metric_handlers<pos:position pos:line="107" pos:column="46"/></name><operator pos:line="107" pos:column="46">.<pos:position pos:line="107" pos:column="47"/></operator><name pos:line="107" pos:column="47">nb_strs<pos:position pos:line="107" pos:column="54"/></name></name> <operator pos:line="107" pos:column="55">==<pos:position pos:line="107" pos:column="57"/></operator> <literal type="number" pos:line="107" pos:column="58">0<pos:position pos:line="107" pos:column="59"/></literal><operator pos:line="107" pos:column="59">)<pos:position pos:line="107" pos:column="60"/></operator></expr>)<pos:position pos:line="107" pos:column="61"/></condition><then pos:line="107" pos:column="61"> <block pos:line="107" pos:column="62">{
    <expr_stmt><expr><call><name pos:line="108" pos:column="5">sensu_free<pos:position pos:line="108" pos:column="15"/></name><argument_list pos:line="108" pos:column="15">(<argument><expr><name pos:line="108" pos:column="16">host<pos:position pos:line="108" pos:column="20"/></name></expr></argument>)<pos:position pos:line="108" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="109" pos:column="5">WARNING<pos:position pos:line="109" pos:column="12"/></name><argument_list pos:line="109" pos:column="12">(<argument><expr><literal type="string" pos:line="109" pos:column="13">"write_sensu plugin: metrics enabled but no MetricHandler defined. "<pos:position pos:line="109" pos:column="81"/></literal>
            <literal type="string" pos:line="110" pos:column="13">"Giving up."<pos:position pos:line="110" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="27"/></expr_stmt>
    <return pos:line="111" pos:column="5">return <expr><operator pos:line="111" pos:column="12">-<pos:position pos:line="111" pos:column="13"/></operator><literal type="number" pos:line="111" pos:column="13">1<pos:position pos:line="111" pos:column="14"/></literal></expr>;<pos:position pos:line="111" pos:column="15"/></return>
  }<pos:position pos:line="112" pos:column="4"/></block></then></if>

  <if pos:line="114" pos:column="3">if <condition pos:line="114" pos:column="6">(<expr><name><name pos:line="114" pos:column="7">host<pos:position pos:line="114" pos:column="11"/></name><operator pos:line="114" pos:column="11">-&gt;<pos:position pos:line="114" pos:column="16"/></operator><name pos:line="114" pos:column="13">notifications<pos:position pos:line="114" pos:column="26"/></name></name> <operator pos:line="114" pos:column="27">&amp;&amp;<pos:position pos:line="114" pos:column="37"/></operator> <operator pos:line="114" pos:column="30">(<pos:position pos:line="114" pos:column="31"/></operator><name><name pos:line="114" pos:column="31">host<pos:position pos:line="114" pos:column="35"/></name><operator pos:line="114" pos:column="35">-&gt;<pos:position pos:line="114" pos:column="40"/></operator><name pos:line="114" pos:column="37">notification_handlers<pos:position pos:line="114" pos:column="58"/></name><operator pos:line="114" pos:column="58">.<pos:position pos:line="114" pos:column="59"/></operator><name pos:line="114" pos:column="59">nb_strs<pos:position pos:line="114" pos:column="66"/></name></name> <operator pos:line="114" pos:column="67">==<pos:position pos:line="114" pos:column="69"/></operator> <literal type="number" pos:line="114" pos:column="70">0<pos:position pos:line="114" pos:column="71"/></literal><operator pos:line="114" pos:column="71">)<pos:position pos:line="114" pos:column="72"/></operator></expr>)<pos:position pos:line="114" pos:column="73"/></condition><then pos:line="114" pos:column="73"> <block pos:line="114" pos:column="74">{
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">sensu_free<pos:position pos:line="115" pos:column="15"/></name><argument_list pos:line="115" pos:column="15">(<argument><expr><name pos:line="115" pos:column="16">host<pos:position pos:line="115" pos:column="20"/></name></expr></argument>)<pos:position pos:line="115" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="116" pos:column="5">WARNING<pos:position pos:line="116" pos:column="12"/></name><argument_list pos:line="116" pos:column="12">(<argument><expr><literal type="string" pos:line="116" pos:column="13">"write_sensu plugin: notifications enabled but no "<pos:position pos:line="116" pos:column="64"/></literal>
            <literal type="string" pos:line="117" pos:column="13">"NotificationHandler defined. Giving up."<pos:position pos:line="117" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="56"/></expr_stmt>
    <return pos:line="118" pos:column="5">return <expr><operator pos:line="118" pos:column="12">-<pos:position pos:line="118" pos:column="13"/></operator><literal type="number" pos:line="118" pos:column="13">1<pos:position pos:line="118" pos:column="14"/></literal></expr>;<pos:position pos:line="118" pos:column="15"/></return>
  }<pos:position pos:line="119" pos:column="4"/></block></then></if>

  <if pos:line="121" pos:column="3">if <condition pos:line="121" pos:column="6">(<expr><operator pos:line="121" pos:column="7">(<pos:position pos:line="121" pos:column="8"/></operator><name><name pos:line="121" pos:column="8">host<pos:position pos:line="121" pos:column="12"/></name><operator pos:line="121" pos:column="12">-&gt;<pos:position pos:line="121" pos:column="17"/></operator><name pos:line="121" pos:column="14">notification_handlers<pos:position pos:line="121" pos:column="35"/></name><operator pos:line="121" pos:column="35">.<pos:position pos:line="121" pos:column="36"/></operator><name pos:line="121" pos:column="36">nb_strs<pos:position pos:line="121" pos:column="43"/></name></name> <operator pos:line="121" pos:column="44">&gt;<pos:position pos:line="121" pos:column="48"/></operator> <literal type="number" pos:line="121" pos:column="46">0<pos:position pos:line="121" pos:column="47"/></literal><operator pos:line="121" pos:column="47">)<pos:position pos:line="121" pos:column="48"/></operator> <operator pos:line="121" pos:column="49">&amp;&amp;<pos:position pos:line="121" pos:column="59"/></operator> <operator pos:line="121" pos:column="52">(<pos:position pos:line="121" pos:column="53"/></operator><name><name pos:line="121" pos:column="53">host<pos:position pos:line="121" pos:column="57"/></name><operator pos:line="121" pos:column="57">-&gt;<pos:position pos:line="121" pos:column="62"/></operator><name pos:line="121" pos:column="59">notifications<pos:position pos:line="121" pos:column="72"/></name></name> <operator pos:line="121" pos:column="73">==<pos:position pos:line="121" pos:column="75"/></operator> <literal type="number" pos:line="121" pos:column="76">0<pos:position pos:line="121" pos:column="77"/></literal><operator pos:line="121" pos:column="77">)<pos:position pos:line="121" pos:column="78"/></operator></expr>)<pos:position pos:line="121" pos:column="79"/></condition><then pos:line="121" pos:column="79"> <block pos:line="121" pos:column="80">{
    <expr_stmt><expr><call><name pos:line="122" pos:column="5">WARNING<pos:position pos:line="122" pos:column="12"/></name><argument_list pos:line="122" pos:column="12">(<argument><expr><literal type="string" pos:line="122" pos:column="13">"write_sensu plugin: NotificationHandler given so forcing "<pos:position pos:line="122" pos:column="72"/></literal>
            <literal type="string" pos:line="123" pos:column="13">"notifications to be enabled"<pos:position pos:line="123" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="124" pos:column="5">host<pos:position pos:line="124" pos:column="9"/></name><operator pos:line="124" pos:column="9">-&gt;<pos:position pos:line="124" pos:column="14"/></operator><name pos:line="124" pos:column="11">notifications<pos:position pos:line="124" pos:column="24"/></name></name> <operator pos:line="124" pos:column="25">=<pos:position pos:line="124" pos:column="26"/></operator> <literal type="number" pos:line="124" pos:column="27">1<pos:position pos:line="124" pos:column="28"/></literal></expr>;<pos:position pos:line="124" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="125" pos:column="4"/></block></then></if>

  <if pos:line="127" pos:column="3">if <condition pos:line="127" pos:column="6">(<expr><operator pos:line="127" pos:column="7">(<pos:position pos:line="127" pos:column="8"/></operator><name><name pos:line="127" pos:column="8">host<pos:position pos:line="127" pos:column="12"/></name><operator pos:line="127" pos:column="12">-&gt;<pos:position pos:line="127" pos:column="17"/></operator><name pos:line="127" pos:column="14">metric_handlers<pos:position pos:line="127" pos:column="29"/></name><operator pos:line="127" pos:column="29">.<pos:position pos:line="127" pos:column="30"/></operator><name pos:line="127" pos:column="30">nb_strs<pos:position pos:line="127" pos:column="37"/></name></name> <operator pos:line="127" pos:column="38">&gt;<pos:position pos:line="127" pos:column="42"/></operator> <literal type="number" pos:line="127" pos:column="40">0<pos:position pos:line="127" pos:column="41"/></literal><operator pos:line="127" pos:column="41">)<pos:position pos:line="127" pos:column="42"/></operator> <operator pos:line="127" pos:column="43">&amp;&amp;<pos:position pos:line="127" pos:column="53"/></operator> <operator pos:line="127" pos:column="46">(<pos:position pos:line="127" pos:column="47"/></operator><name><name pos:line="127" pos:column="47">host<pos:position pos:line="127" pos:column="51"/></name><operator pos:line="127" pos:column="51">-&gt;<pos:position pos:line="127" pos:column="56"/></operator><name pos:line="127" pos:column="53">metrics<pos:position pos:line="127" pos:column="60"/></name></name> <operator pos:line="127" pos:column="61">==<pos:position pos:line="127" pos:column="63"/></operator> <literal type="number" pos:line="127" pos:column="64">0<pos:position pos:line="127" pos:column="65"/></literal><operator pos:line="127" pos:column="65">)<pos:position pos:line="127" pos:column="66"/></operator></expr>)<pos:position pos:line="127" pos:column="67"/></condition><then pos:line="127" pos:column="67"> <block pos:line="127" pos:column="68">{
    <expr_stmt><expr><call><name pos:line="128" pos:column="5">WARNING<pos:position pos:line="128" pos:column="12"/></name><argument_list pos:line="128" pos:column="12">(<argument><expr><literal type="string" pos:line="128" pos:column="13">"write_sensu plugin: MetricHandler given so forcing metrics to be "<pos:position pos:line="128" pos:column="80"/></literal>
            <literal type="string" pos:line="129" pos:column="13">"enabled"<pos:position pos:line="129" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="130" pos:column="5">host<pos:position pos:line="130" pos:column="9"/></name><operator pos:line="130" pos:column="9">-&gt;<pos:position pos:line="130" pos:column="14"/></operator><name pos:line="130" pos:column="11">metrics<pos:position pos:line="130" pos:column="18"/></name></name> <operator pos:line="130" pos:column="19">=<pos:position pos:line="130" pos:column="20"/></operator> <literal type="number" pos:line="130" pos:column="21">1<pos:position pos:line="130" pos:column="22"/></literal></expr>;<pos:position pos:line="130" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="131" pos:column="4"/></block></then></if>

  <if pos:line="133" pos:column="3">if <condition pos:line="133" pos:column="6">(<expr><operator pos:line="133" pos:column="7">!<pos:position pos:line="133" pos:column="8"/></operator><operator pos:line="133" pos:column="8">(<pos:position pos:line="133" pos:column="9"/></operator><name><name pos:line="133" pos:column="9">host<pos:position pos:line="133" pos:column="13"/></name><operator pos:line="133" pos:column="13">-&gt;<pos:position pos:line="133" pos:column="18"/></operator><name pos:line="133" pos:column="15">notifications<pos:position pos:line="133" pos:column="28"/></name></name> <operator pos:line="133" pos:column="29">||<pos:position pos:line="133" pos:column="31"/></operator> <name><name pos:line="133" pos:column="32">host<pos:position pos:line="133" pos:column="36"/></name><operator pos:line="133" pos:column="36">-&gt;<pos:position pos:line="133" pos:column="41"/></operator><name pos:line="133" pos:column="38">metrics<pos:position pos:line="133" pos:column="45"/></name></name><operator pos:line="133" pos:column="45">)<pos:position pos:line="133" pos:column="46"/></operator></expr>)<pos:position pos:line="133" pos:column="47"/></condition><then pos:line="133" pos:column="47"> <block pos:line="133" pos:column="48">{
    <expr_stmt><expr><call><name pos:line="134" pos:column="5">WARNING<pos:position pos:line="134" pos:column="12"/></name><argument_list pos:line="134" pos:column="12">(<argument><expr><literal type="string" pos:line="134" pos:column="13">"write_sensu plugin: neither metrics nor notifications enabled. "<pos:position pos:line="134" pos:column="78"/></literal>
            <literal type="string" pos:line="135" pos:column="13">"Giving up."<pos:position pos:line="135" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="136" pos:column="5">sensu_free<pos:position pos:line="136" pos:column="15"/></name><argument_list pos:line="136" pos:column="15">(<argument><expr><name pos:line="136" pos:column="16">host<pos:position pos:line="136" pos:column="20"/></name></expr></argument>)<pos:position pos:line="136" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="22"/></expr_stmt>
    <return pos:line="137" pos:column="5">return <expr><operator pos:line="137" pos:column="12">-<pos:position pos:line="137" pos:column="13"/></operator><literal type="number" pos:line="137" pos:column="13">1<pos:position pos:line="137" pos:column="14"/></literal></expr>;<pos:position pos:line="137" pos:column="15"/></return>
  }<pos:position pos:line="138" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="140" pos:column="3">ssnprintf<pos:position pos:line="140" pos:column="12"/></name><argument_list pos:line="140" pos:column="12">(<argument><expr><name pos:line="140" pos:column="13">callback_name<pos:position pos:line="140" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="140" pos:column="28">sizeof<argument_list pos:line="140" pos:column="34">(<argument><expr><name pos:line="140" pos:column="35">callback_name<pos:position pos:line="140" pos:column="48"/></name></expr></argument>)<pos:position pos:line="140" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="51">"write_sensu/%s"<pos:position pos:line="140" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="69">host<pos:position pos:line="140" pos:column="73"/></name><operator pos:line="140" pos:column="73">-&gt;<pos:position pos:line="140" pos:column="78"/></operator><name pos:line="140" pos:column="75">name<pos:position pos:line="140" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="81"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="142" pos:column="3">user_data_t<pos:position pos:line="142" pos:column="14"/></name></type> <name pos:line="142" pos:column="15">ud<pos:position pos:line="142" pos:column="17"/></name> <init pos:line="142" pos:column="18">= <expr><block pos:line="142" pos:column="20">{<expr><operator pos:line="142" pos:column="21">.<pos:position pos:line="142" pos:column="22"/></operator><name pos:line="142" pos:column="22">data<pos:position pos:line="142" pos:column="26"/></name> <operator pos:line="142" pos:column="27">=<pos:position pos:line="142" pos:column="28"/></operator> <name pos:line="142" pos:column="29">host<pos:position pos:line="142" pos:column="33"/></name></expr>, <expr><operator pos:line="142" pos:column="35">.<pos:position pos:line="142" pos:column="36"/></operator><name pos:line="142" pos:column="36">free_func<pos:position pos:line="142" pos:column="45"/></name> <operator pos:line="142" pos:column="46">=<pos:position pos:line="142" pos:column="47"/></operator> <name pos:line="142" pos:column="48">sensu_free<pos:position pos:line="142" pos:column="58"/></name></expr>}<pos:position pos:line="142" pos:column="59"/></block></expr></init></decl>;<pos:position pos:line="142" pos:column="60"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="144" pos:column="3">pthread_mutex_lock<pos:position pos:line="144" pos:column="21"/></name><argument_list pos:line="144" pos:column="21">(<argument><expr><operator pos:line="144" pos:column="22">&amp;<pos:position pos:line="144" pos:column="27"/></operator><name><name pos:line="144" pos:column="23">host<pos:position pos:line="144" pos:column="27"/></name><operator pos:line="144" pos:column="27">-&gt;<pos:position pos:line="144" pos:column="32"/></operator><name pos:line="144" pos:column="29">lock<pos:position pos:line="144" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="144" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="35"/></expr_stmt>

  <if pos:line="146" pos:column="3">if <condition pos:line="146" pos:column="6">(<expr><name><name pos:line="146" pos:column="7">host<pos:position pos:line="146" pos:column="11"/></name><operator pos:line="146" pos:column="11">-&gt;<pos:position pos:line="146" pos:column="16"/></operator><name pos:line="146" pos:column="13">metrics<pos:position pos:line="146" pos:column="20"/></name></name></expr>)<pos:position pos:line="146" pos:column="21"/></condition><then pos:line="146" pos:column="21"> <block pos:line="146" pos:column="22">{
    <expr_stmt><expr><name pos:line="147" pos:column="5">status<pos:position pos:line="147" pos:column="11"/></name> <operator pos:line="147" pos:column="12">=<pos:position pos:line="147" pos:column="13"/></operator> <call><name pos:line="147" pos:column="14">plugin_register_write<pos:position pos:line="147" pos:column="35"/></name><argument_list pos:line="147" pos:column="35">(<argument><expr><name pos:line="147" pos:column="36">callback_name<pos:position pos:line="147" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="51">sensu_write<pos:position pos:line="147" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="147" pos:column="64">&amp;<pos:position pos:line="147" pos:column="69"/></operator><name pos:line="147" pos:column="65">ud<pos:position pos:line="147" pos:column="67"/></name></expr></argument>)<pos:position pos:line="147" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="69"/></expr_stmt>
    <if pos:line="148" pos:column="5">if <condition pos:line="148" pos:column="8">(<expr><name pos:line="148" pos:column="9">status<pos:position pos:line="148" pos:column="15"/></name> <operator pos:line="148" pos:column="16">!=<pos:position pos:line="148" pos:column="18"/></operator> <literal type="number" pos:line="148" pos:column="19">0<pos:position pos:line="148" pos:column="20"/></literal></expr>)<pos:position pos:line="148" pos:column="21"/></condition><then pos:line="148" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="149" pos:column="7">WARNING<pos:position pos:line="149" pos:column="14"/></name><argument_list pos:line="149" pos:column="14">(<argument><expr><literal type="string" pos:line="149" pos:column="15">"write_sensu plugin: plugin_register_write (\"%s\") "<pos:position pos:line="149" pos:column="68"/></literal>
              <literal type="string" pos:line="150" pos:column="15">"failed with status %i."<pos:position pos:line="150" pos:column="39"/></literal></expr></argument>,
              <argument><expr><name pos:line="151" pos:column="15">callback_name<pos:position pos:line="151" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="30">status<pos:position pos:line="151" pos:column="36"/></name></expr></argument>)<pos:position pos:line="151" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="38"/></expr_stmt></block></then>
    <else pos:line="152" pos:column="5">else <comment type="block" pos:line="152" pos:column="10">/* success */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="153" pos:column="7">host<pos:position pos:line="153" pos:column="11"/></name><operator pos:line="153" pos:column="11">-&gt;<pos:position pos:line="153" pos:column="16"/></operator><name pos:line="153" pos:column="13">reference_count<pos:position pos:line="153" pos:column="28"/></name></name><operator pos:line="153" pos:column="28">++<pos:position pos:line="153" pos:column="30"/></operator></expr>;<pos:position pos:line="153" pos:column="31"/></expr_stmt></block></else></if>
  }<pos:position pos:line="154" pos:column="4"/></block></then></if>

  <if pos:line="156" pos:column="3">if <condition pos:line="156" pos:column="6">(<expr><name><name pos:line="156" pos:column="7">host<pos:position pos:line="156" pos:column="11"/></name><operator pos:line="156" pos:column="11">-&gt;<pos:position pos:line="156" pos:column="16"/></operator><name pos:line="156" pos:column="13">notifications<pos:position pos:line="156" pos:column="26"/></name></name></expr>)<pos:position pos:line="156" pos:column="27"/></condition><then pos:line="156" pos:column="27"> <block pos:line="156" pos:column="28">{
    <expr_stmt><expr><name pos:line="157" pos:column="5">status<pos:position pos:line="157" pos:column="11"/></name> <operator pos:line="157" pos:column="12">=<pos:position pos:line="157" pos:column="13"/></operator>
        <call><name pos:line="158" pos:column="9">plugin_register_notification<pos:position pos:line="158" pos:column="37"/></name><argument_list pos:line="158" pos:column="37">(<argument><expr><name pos:line="158" pos:column="38">callback_name<pos:position pos:line="158" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="53">sensu_notification<pos:position pos:line="158" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="158" pos:column="73">&amp;<pos:position pos:line="158" pos:column="78"/></operator><name pos:line="158" pos:column="74">ud<pos:position pos:line="158" pos:column="76"/></name></expr></argument>)<pos:position pos:line="158" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="78"/></expr_stmt>
    <if pos:line="159" pos:column="5">if <condition pos:line="159" pos:column="8">(<expr><name pos:line="159" pos:column="9">status<pos:position pos:line="159" pos:column="15"/></name> <operator pos:line="159" pos:column="16">!=<pos:position pos:line="159" pos:column="18"/></operator> <literal type="number" pos:line="159" pos:column="19">0<pos:position pos:line="159" pos:column="20"/></literal></expr>)<pos:position pos:line="159" pos:column="21"/></condition><then pos:line="159" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="160" pos:column="7">WARNING<pos:position pos:line="160" pos:column="14"/></name><argument_list pos:line="160" pos:column="14">(<argument><expr><literal type="string" pos:line="160" pos:column="15">"write_sensu plugin: plugin_register_notification (\"%s\") "<pos:position pos:line="160" pos:column="75"/></literal>
              <literal type="string" pos:line="161" pos:column="15">"failed with status %i."<pos:position pos:line="161" pos:column="39"/></literal></expr></argument>,
              <argument><expr><name pos:line="162" pos:column="15">callback_name<pos:position pos:line="162" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="30">status<pos:position pos:line="162" pos:column="36"/></name></expr></argument>)<pos:position pos:line="162" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="38"/></expr_stmt></block></then>
    <else pos:line="163" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="164" pos:column="7">host<pos:position pos:line="164" pos:column="11"/></name><operator pos:line="164" pos:column="11">-&gt;<pos:position pos:line="164" pos:column="16"/></operator><name pos:line="164" pos:column="13">reference_count<pos:position pos:line="164" pos:column="28"/></name></name><operator pos:line="164" pos:column="28">++<pos:position pos:line="164" pos:column="30"/></operator></expr>;<pos:position pos:line="164" pos:column="31"/></expr_stmt></block></else></if>
  }<pos:position pos:line="165" pos:column="4"/></block></then></if>

  <if pos:line="167" pos:column="3">if <condition pos:line="167" pos:column="6">(<expr><name><name pos:line="167" pos:column="7">host<pos:position pos:line="167" pos:column="11"/></name><operator pos:line="167" pos:column="11">-&gt;<pos:position pos:line="167" pos:column="16"/></operator><name pos:line="167" pos:column="13">reference_count<pos:position pos:line="167" pos:column="28"/></name></name> <operator pos:line="167" pos:column="29">&lt;=<pos:position pos:line="167" pos:column="34"/></operator> <literal type="number" pos:line="167" pos:column="32">1<pos:position pos:line="167" pos:column="33"/></literal></expr>)<pos:position pos:line="167" pos:column="34"/></condition><then pos:line="167" pos:column="34"> <block pos:line="167" pos:column="35">{
    <comment type="block" pos:line="168" pos:column="5">/* Both callbacks failed =&gt; free memory.
     * We need to unlock here, because sensu_free() will lock.
     * This is not a race condition, because we're the only one
     * holding a reference. */</comment>
    <expr_stmt><expr><call><name pos:line="172" pos:column="5">pthread_mutex_unlock<pos:position pos:line="172" pos:column="25"/></name><argument_list pos:line="172" pos:column="25">(<argument><expr><operator pos:line="172" pos:column="26">&amp;<pos:position pos:line="172" pos:column="31"/></operator><name><name pos:line="172" pos:column="27">host<pos:position pos:line="172" pos:column="31"/></name><operator pos:line="172" pos:column="31">-&gt;<pos:position pos:line="172" pos:column="36"/></operator><name pos:line="172" pos:column="33">lock<pos:position pos:line="172" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="173" pos:column="5">sensu_free<pos:position pos:line="173" pos:column="15"/></name><argument_list pos:line="173" pos:column="15">(<argument><expr><name pos:line="173" pos:column="16">host<pos:position pos:line="173" pos:column="20"/></name></expr></argument>)<pos:position pos:line="173" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="22"/></expr_stmt>
    <return pos:line="174" pos:column="5">return <expr><operator pos:line="174" pos:column="12">-<pos:position pos:line="174" pos:column="13"/></operator><literal type="number" pos:line="174" pos:column="13">1<pos:position pos:line="174" pos:column="14"/></literal></expr>;<pos:position pos:line="174" pos:column="15"/></return>
  }<pos:position pos:line="175" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="177" pos:column="3">host<pos:position pos:line="177" pos:column="7"/></name><operator pos:line="177" pos:column="7">-&gt;<pos:position pos:line="177" pos:column="12"/></operator><name pos:line="177" pos:column="9">reference_count<pos:position pos:line="177" pos:column="24"/></name></name><operator pos:line="177" pos:column="24">--<pos:position pos:line="177" pos:column="26"/></operator></expr>;<pos:position pos:line="177" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="178" pos:column="3">pthread_mutex_unlock<pos:position pos:line="178" pos:column="23"/></name><argument_list pos:line="178" pos:column="23">(<argument><expr><operator pos:line="178" pos:column="24">&amp;<pos:position pos:line="178" pos:column="29"/></operator><name><name pos:line="178" pos:column="25">host<pos:position pos:line="178" pos:column="29"/></name><operator pos:line="178" pos:column="29">-&gt;<pos:position pos:line="178" pos:column="34"/></operator><name pos:line="178" pos:column="31">lock<pos:position pos:line="178" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="178" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="37"/></expr_stmt>

  <return pos:line="180" pos:column="3">return <expr><name pos:line="180" pos:column="10">status<pos:position pos:line="180" pos:column="16"/></name></expr>;<pos:position pos:line="180" pos:column="17"/></return>
}<pos:position pos:line="181" pos:column="2"/></block></function></unit>

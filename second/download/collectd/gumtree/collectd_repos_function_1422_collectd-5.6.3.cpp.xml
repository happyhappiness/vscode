<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1422_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">thread_init<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">os_handler_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ret_os_handler<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <block pos:line="1" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">os_handler_t<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">os_handler<pos:position pos:line="2" pos:column="27"/></name></decl>;<pos:position pos:line="2" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ipmi_con_t<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">smi_connection<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">NULL<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ipmi_domain_id_t<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">domain_id<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">os_handler<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <call><name pos:line="7" pos:column="16">ipmi_posix_thread_setup_os_handler<pos:position pos:line="7" pos:column="50"/></name><argument_list pos:line="7" pos:column="50">(<argument><expr><name pos:line="7" pos:column="51">SIGIO<pos:position pos:line="7" pos:column="56"/></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="58"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">os_handler<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">NULL<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26"> <block pos:line="8" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ERROR<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="string" pos:line="9" pos:column="11">"ipmi plugin: ipmi_posix_thread_setup_os_handler failed."<pos:position pos:line="9" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="70"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">-<pos:position pos:line="10" pos:column="14"/></operator><literal type="number" pos:line="10" pos:column="14">1<pos:position pos:line="10" pos:column="15"/></literal><operator pos:line="10" pos:column="15">)<pos:position pos:line="10" pos:column="16"/></operator></expr>;<pos:position pos:line="10" pos:column="17"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">ipmi_init<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">os_handler<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">status<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">ipmi_smi_setup_con<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<comment type="block" pos:line="15" pos:column="31">/* if_num = */</comment> <argument><expr><literal type="number" pos:line="15" pos:column="46">0<pos:position pos:line="15" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="49">os_handler<pos:position pos:line="15" pos:column="59"/></name></expr></argument>,
                              <comment type="block" pos:line="16" pos:column="31">/* user data = */</comment> <argument><expr><name pos:line="16" pos:column="49">NULL<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="55">&amp;<pos:position pos:line="16" pos:column="60"/></operator><name pos:line="16" pos:column="56">smi_connection<pos:position pos:line="16" pos:column="70"/></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">status<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">!=<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="17">0<pos:position pos:line="17" pos:column="18"/></literal></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19"> <block pos:line="17" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">c_ipmi_error<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><literal type="string" pos:line="18" pos:column="18">"ipmi_smi_setup_con"<pos:position pos:line="18" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">status<pos:position pos:line="18" pos:column="46"/></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="22" pos:column="3">ipmi_open_option_t<pos:position pos:line="22" pos:column="21"/></name></type> <name><name pos:line="22" pos:column="22">open_option<pos:position pos:line="22" pos:column="33"/></name><index pos:line="22" pos:column="33">[<expr><literal type="number" pos:line="22" pos:column="34">1<pos:position pos:line="22" pos:column="35"/></literal></expr>]<pos:position pos:line="22" pos:column="36"/></index></name> <init pos:line="22" pos:column="37">= <expr><block pos:line="22" pos:column="39">{<expr><index pos:line="22" pos:column="40">[<expr><literal type="number" pos:line="22" pos:column="41">0<pos:position pos:line="22" pos:column="42"/></literal></expr>]<pos:position pos:line="22" pos:column="43"/></index> <operator pos:line="22" pos:column="44">=<pos:position pos:line="22" pos:column="45"/></operator> <block pos:line="22" pos:column="46">{<expr><operator pos:line="22" pos:column="47">.<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="48">option<pos:position pos:line="22" pos:column="54"/></name> <operator pos:line="22" pos:column="55">=<pos:position pos:line="22" pos:column="56"/></operator> <name pos:line="22" pos:column="57">IPMI_OPEN_OPTION_ALL<pos:position pos:line="22" pos:column="77"/></name></expr>,
                                              <expr><block pos:line="23" pos:column="47">{<expr><operator pos:line="23" pos:column="48">.<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="49">ival<pos:position pos:line="23" pos:column="53"/></name> <operator pos:line="23" pos:column="54">=<pos:position pos:line="23" pos:column="55"/></operator> <literal type="number" pos:line="23" pos:column="56">1<pos:position pos:line="23" pos:column="57"/></literal></expr>}<pos:position pos:line="23" pos:column="58"/></block></expr>}<pos:position pos:line="23" pos:column="59"/></block></expr>}<pos:position pos:line="23" pos:column="60"/></block></expr></init></decl>;<pos:position pos:line="23" pos:column="61"/></decl_stmt>

  <expr_stmt><expr><name pos:line="25" pos:column="3">status<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">ipmi_open_domain<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(
      <argument><expr><literal type="string" pos:line="26" pos:column="7">"mydomain"<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="19">&amp;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="20">smi_connection<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <comment type="block" pos:line="26" pos:column="36">/* num_con = */</comment> <argument><expr><literal type="number" pos:line="26" pos:column="52">1<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>,
      <argument><expr><name pos:line="27" pos:column="7">domain_connection_change_handler<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <comment type="block" pos:line="27" pos:column="41">/* user data = */</comment> <argument><expr><name pos:line="27" pos:column="59">NULL<pos:position pos:line="27" pos:column="63"/></name></expr></argument>,
      <comment type="block" pos:line="28" pos:column="7">/* domain_fully_up_handler = */</comment> <argument><expr><name pos:line="28" pos:column="39">NULL<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <comment type="block" pos:line="28" pos:column="45">/* user data = */</comment> <argument><expr><name pos:line="28" pos:column="63">NULL<pos:position pos:line="28" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="69">open_option<pos:position pos:line="28" pos:column="80"/></name></expr></argument>,
      <argument><expr><sizeof pos:line="29" pos:column="7">sizeof<argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">open_option<pos:position pos:line="29" pos:column="25"/></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></sizeof> <operator pos:line="29" pos:column="27">/<pos:position pos:line="29" pos:column="28"/></operator> <sizeof pos:line="29" pos:column="29">sizeof<argument_list pos:line="29" pos:column="35">(<argument><expr><name><name pos:line="29" pos:column="36">open_option<pos:position pos:line="29" pos:column="47"/></name><index pos:line="29" pos:column="47">[<expr><literal type="number" pos:line="29" pos:column="48">0<pos:position pos:line="29" pos:column="49"/></literal></expr>]<pos:position pos:line="29" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="29" pos:column="53">&amp;<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="54">domain_id<pos:position pos:line="29" pos:column="63"/></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">status<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">!=<pos:position pos:line="30" pos:column="16"/></operator> <literal type="number" pos:line="30" pos:column="17">0<pos:position pos:line="30" pos:column="18"/></literal></expr>)<pos:position pos:line="30" pos:column="19"/></condition><then pos:line="30" pos:column="19"> <block pos:line="30" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">c_ipmi_error<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><literal type="string" pos:line="31" pos:column="18">"ipmi_open_domain"<pos:position pos:line="31" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">status<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><operator pos:line="32" pos:column="13">-<pos:position pos:line="32" pos:column="14"/></operator><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal><operator pos:line="32" pos:column="15">)<pos:position pos:line="32" pos:column="16"/></operator></expr>;<pos:position pos:line="32" pos:column="17"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="35" pos:column="3">*<pos:position pos:line="35" pos:column="4"/></operator><name pos:line="35" pos:column="4">ret_os_handler<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="21">os_handler<pos:position pos:line="35" pos:column="31"/></name></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
  <return pos:line="36" pos:column="3">return <expr><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><literal type="number" pos:line="36" pos:column="11">0<pos:position pos:line="36" pos:column="12"/></literal><operator pos:line="36" pos:column="12">)<pos:position pos:line="36" pos:column="13"/></operator></expr>;<pos:position pos:line="36" pos:column="14"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

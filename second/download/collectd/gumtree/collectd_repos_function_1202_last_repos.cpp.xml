<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1202_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">logfile_config<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">key<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">value<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <block pos:line="1" pos:column="63">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><literal type="number" pos:line="2" pos:column="7">0<pos:position pos:line="2" pos:column="8"/></literal> <operator pos:line="2" pos:column="9">==<pos:position pos:line="2" pos:column="11"/></operator> <call><name pos:line="2" pos:column="12">strcasecmp<pos:position pos:line="2" pos:column="22"/></name><argument_list pos:line="2" pos:column="22">(<argument><expr><name pos:line="2" pos:column="23">key<pos:position pos:line="2" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2" pos:column="28">"LogLevel"<pos:position pos:line="2" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="2" pos:column="40"/></condition><then pos:line="2" pos:column="40"> <block pos:line="2" pos:column="41">{
    <expr_stmt><expr><name pos:line="3" pos:column="5">log_level<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">=<pos:position pos:line="3" pos:column="16"/></operator> <call><name pos:line="3" pos:column="17">parse_log_severity<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><name pos:line="3" pos:column="36">value<pos:position pos:line="3" pos:column="41"/></name></expr></argument>)<pos:position pos:line="3" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="43"/></expr_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">log_level<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">&lt;<pos:position pos:line="4" pos:column="23"/></operator> <literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23"> <block pos:line="4" pos:column="24">{
      <expr_stmt><expr><name pos:line="5" pos:column="7">log_level<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">LOG_INFO<pos:position pos:line="5" pos:column="27"/></name></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="6" pos:column="7">ERROR<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><literal type="string" pos:line="6" pos:column="13">"logfile: invalid loglevel [%s] defaulting to 'info'"<pos:position pos:line="6" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="68">value<pos:position pos:line="6" pos:column="73"/></name></expr></argument>)<pos:position pos:line="6" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="75"/></expr_stmt>
      <return pos:line="7" pos:column="7">return <expr><literal type="number" pos:line="7" pos:column="14">1<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
  }<pos:position pos:line="9" pos:column="4"/></block></then> <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">strcasecmp<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">key<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="35">"File"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <block pos:line="9" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">sfree<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">log_file<pos:position pos:line="10" pos:column="19"/></name></expr></argument>)<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">log_file<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">strdup<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">value<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if></elseif> <elseif pos:line="12" pos:column="5">else <if pos:line="12" pos:column="10">if <condition pos:line="12" pos:column="13">(<expr><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal> <operator pos:line="12" pos:column="16">==<pos:position pos:line="12" pos:column="18"/></operator> <call><name pos:line="12" pos:column="19">strcasecmp<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">key<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="35">"Timestamp"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="48"/></condition><then pos:line="12" pos:column="48"> <block pos:line="12" pos:column="49">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">IS_FALSE<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">value<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="7">print_timestamp<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt></block></then>
    <else pos:line="15" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="7">print_timestamp<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt></block></else></if>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if></elseif> <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><literal type="number" pos:line="17" pos:column="14">0<pos:position pos:line="17" pos:column="15"/></literal> <operator pos:line="17" pos:column="16">==<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">strcasecmp<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">key<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="35">"PrintSeverity"<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52"> <block pos:line="17" pos:column="53">{
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">IS_FALSE<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">value<pos:position pos:line="18" pos:column="23"/></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="7">print_severity<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt></block></then>
    <else pos:line="20" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="7">print_severity<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="24">1<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt></block></else></if>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if></elseif> <else pos:line="22" pos:column="5">else <block pos:line="22" pos:column="10">{
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">-<pos:position pos:line="23" pos:column="13"/></operator><literal type="number" pos:line="23" pos:column="13">1<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></else></if>
  <return pos:line="25" pos:column="3">return <expr><literal type="number" pos:line="25" pos:column="10">0<pos:position pos:line="25" pos:column="11"/></literal></expr>;<pos:position pos:line="25" pos:column="12"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

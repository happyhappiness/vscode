<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_248_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cpu_read<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">PROCESSOR_CPU_LOAD_INFO<pos:position pos:line="3" pos:column="28"/></name> <operator pos:line="3" pos:column="29">||<pos:position pos:line="3" pos:column="31"/></operator> <name pos:line="3" pos:column="32">PROCESSOR_TEMPERATURE<pos:position pos:line="3" pos:column="53"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">cpu<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">kern_return_t<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">status<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">PROCESSOR_CPU_LOAD_INFO<pos:position pos:line="8" pos:column="28"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">processor_cpu_load_info_data_t<pos:position pos:line="9" pos:column="39"/></name></type> <name pos:line="9" pos:column="40">cpu_info<pos:position pos:line="9" pos:column="48"/></name></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">mach_msg_type_number_t<pos:position pos:line="10" pos:column="31"/></name></type>         <name pos:line="10" pos:column="40">cpu_info_len<pos:position pos:line="10" pos:column="52"/></name></decl>;<pos:position pos:line="10" pos:column="53"/></decl_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">PROCESSOR_TEMPERATURE<pos:position pos:line="12" pos:column="26"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">processor_info_data_t<pos:position pos:line="13" pos:column="30"/></name></type>          <name pos:line="13" pos:column="40">cpu_temp<pos:position pos:line="13" pos:column="48"/></name></decl>;<pos:position pos:line="13" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">mach_msg_type_number_t<pos:position pos:line="14" pos:column="31"/></name></type>         <name pos:line="14" pos:column="40">cpu_temp_len<pos:position pos:line="14" pos:column="52"/></name></decl>;<pos:position pos:line="14" pos:column="53"/></decl_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

	<decl_stmt><decl><type><name pos:line="17" pos:column="9">host_t<pos:position pos:line="17" pos:column="15"/></name></type> <name pos:line="17" pos:column="16">cpu_host<pos:position pos:line="17" pos:column="24"/></name></decl>;<pos:position pos:line="17" pos:column="25"/></decl_stmt>

	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">cpu<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></init> <condition><expr><name pos:line="19" pos:column="23">cpu<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">&lt;<pos:position pos:line="19" pos:column="31"/></operator> <name pos:line="19" pos:column="29">cpu_list_len<pos:position pos:line="19" pos:column="41"/></name></expr>;<pos:position pos:line="19" pos:column="42"/></condition> <incr><expr><name pos:line="19" pos:column="43">cpu<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">++<pos:position pos:line="19" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="49"/></control>
	<block pos:line="20" pos:column="9">{
<cpp:if pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">if<pos:position pos:line="21" pos:column="4"/></cpp:directive> <expr><name pos:line="21" pos:column="5">PROCESSOR_CPU_LOAD_INFO<pos:position pos:line="21" pos:column="28"/></name></expr></cpp:if>
		<expr_stmt><expr><name pos:line="22" pos:column="17">cpu_host<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">cpu_info_len<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">PROCESSOR_BASIC_INFO_COUNT<pos:position pos:line="23" pos:column="58"/></name></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">(<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">status<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <call><name pos:line="25" pos:column="31">processor_info<pos:position pos:line="25" pos:column="45"/></name> <argument_list pos:line="25" pos:column="46">(<argument><expr><name><name pos:line="25" pos:column="47">cpu_list<pos:position pos:line="25" pos:column="55"/></name><index pos:line="25" pos:column="55">[<expr><name pos:line="25" pos:column="56">cpu<pos:position pos:line="25" pos:column="59"/></name></expr>]<pos:position pos:line="25" pos:column="60"/></index></name></expr></argument>,
						<argument><expr><name pos:line="26" pos:column="49">PROCESSOR_CPU_LOAD_INFO<pos:position pos:line="26" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="74">&amp;<pos:position pos:line="26" pos:column="79"/></operator><name pos:line="26" pos:column="75">cpu_host<pos:position pos:line="26" pos:column="83"/></name></expr></argument>,
						<argument><expr><operator pos:line="27" pos:column="49">(<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">processor_info_t<pos:position pos:line="27" pos:column="66"/></name><operator pos:line="27" pos:column="66">)<pos:position pos:line="27" pos:column="67"/></operator> <operator pos:line="27" pos:column="68">&amp;<pos:position pos:line="27" pos:column="73"/></operator><name pos:line="27" pos:column="69">cpu_info<pos:position pos:line="27" pos:column="77"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="79">&amp;<pos:position pos:line="27" pos:column="84"/></operator><name pos:line="27" pos:column="80">cpu_info_len<pos:position pos:line="27" pos:column="92"/></name></expr></argument>)<pos:position pos:line="27" pos:column="93"/></argument_list></call><operator pos:line="27" pos:column="93">)<pos:position pos:line="27" pos:column="94"/></operator> <operator pos:line="27" pos:column="95">!=<pos:position pos:line="27" pos:column="97"/></operator> <name pos:line="27" pos:column="98">KERN_SUCCESS<pos:position pos:line="27" pos:column="110"/></name></expr>)<pos:position pos:line="27" pos:column="111"/></condition><then pos:line="27" pos:column="111">
		<block pos:line="28" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">ERROR<pos:position pos:line="29" pos:column="30"/></name> <argument_list pos:line="29" pos:column="31">(<argument><expr><literal type="string" pos:line="29" pos:column="32">"cpu plugin: processor_info failed with status %i"<pos:position pos:line="29" pos:column="82"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="84">(<pos:position pos:line="29" pos:column="85"/></operator><name pos:line="29" pos:column="85">int<pos:position pos:line="29" pos:column="88"/></name><operator pos:line="29" pos:column="88">)<pos:position pos:line="29" pos:column="89"/></operator> <name pos:line="29" pos:column="90">status<pos:position pos:line="29" pos:column="96"/></name></expr></argument>)<pos:position pos:line="29" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="98"/></expr_stmt>
			<continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">cpu_info_len<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">&lt;<pos:position pos:line="33" pos:column="38"/></operator> <name pos:line="33" pos:column="36">CPU_STATE_MAX<pos:position pos:line="33" pos:column="49"/></name></expr>)<pos:position pos:line="33" pos:column="50"/></condition><then pos:line="33" pos:column="50">
		<block pos:line="34" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">ERROR<pos:position pos:line="35" pos:column="30"/></name> <argument_list pos:line="35" pos:column="31">(<argument><expr><literal type="string" pos:line="35" pos:column="32">"cpu plugin: processor_info returned only %i elements.."<pos:position pos:line="35" pos:column="88"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="90">cpu_info_len<pos:position pos:line="35" pos:column="102"/></name></expr></argument>)<pos:position pos:line="35" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="104"/></expr_stmt>
			<continue pos:line="36" pos:column="25">continue;<pos:position pos:line="36" pos:column="34"/></continue>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="39" pos:column="17">submit<pos:position pos:line="39" pos:column="23"/></name> <argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">cpu<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="30">"user"<pos:position pos:line="39" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="38">(<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="39">counter_t<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">)<pos:position pos:line="39" pos:column="49"/></operator> <name><name pos:line="39" pos:column="50">cpu_info<pos:position pos:line="39" pos:column="58"/></name><operator pos:line="39" pos:column="58">.<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="59">cpu_ticks<pos:position pos:line="39" pos:column="68"/></name><index pos:line="39" pos:column="68">[<expr><name pos:line="39" pos:column="69">CPU_STATE_USER<pos:position pos:line="39" pos:column="83"/></name></expr>]<pos:position pos:line="39" pos:column="84"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="86"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">submit<pos:position pos:line="40" pos:column="23"/></name> <argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">cpu<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="30">"nice"<pos:position pos:line="40" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="40" pos:column="38">(<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="39">counter_t<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">)<pos:position pos:line="40" pos:column="49"/></operator> <name><name pos:line="40" pos:column="50">cpu_info<pos:position pos:line="40" pos:column="58"/></name><operator pos:line="40" pos:column="58">.<pos:position pos:line="40" pos:column="59"/></operator><name pos:line="40" pos:column="59">cpu_ticks<pos:position pos:line="40" pos:column="68"/></name><index pos:line="40" pos:column="68">[<expr><name pos:line="40" pos:column="69">CPU_STATE_NICE<pos:position pos:line="40" pos:column="83"/></name></expr>]<pos:position pos:line="40" pos:column="84"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="86"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">submit<pos:position pos:line="41" pos:column="23"/></name> <argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">cpu<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="30">"system"<pos:position pos:line="41" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="40">(<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="41">counter_t<pos:position pos:line="41" pos:column="50"/></name><operator pos:line="41" pos:column="50">)<pos:position pos:line="41" pos:column="51"/></operator> <name><name pos:line="41" pos:column="52">cpu_info<pos:position pos:line="41" pos:column="60"/></name><operator pos:line="41" pos:column="60">.<pos:position pos:line="41" pos:column="61"/></operator><name pos:line="41" pos:column="61">cpu_ticks<pos:position pos:line="41" pos:column="70"/></name><index pos:line="41" pos:column="70">[<expr><name pos:line="41" pos:column="71">CPU_STATE_SYSTEM<pos:position pos:line="41" pos:column="87"/></name></expr>]<pos:position pos:line="41" pos:column="88"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="90"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">submit<pos:position pos:line="42" pos:column="23"/></name> <argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">cpu<pos:position pos:line="42" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="30">"idle"<pos:position pos:line="42" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="42" pos:column="38">(<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">counter_t<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">)<pos:position pos:line="42" pos:column="49"/></operator> <name><name pos:line="42" pos:column="50">cpu_info<pos:position pos:line="42" pos:column="58"/></name><operator pos:line="42" pos:column="58">.<pos:position pos:line="42" pos:column="59"/></operator><name pos:line="42" pos:column="59">cpu_ticks<pos:position pos:line="42" pos:column="68"/></name><index pos:line="42" pos:column="68">[<expr><name pos:line="42" pos:column="69">CPU_STATE_IDLE<pos:position pos:line="42" pos:column="83"/></name></expr>]<pos:position pos:line="42" pos:column="84"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="86"/></expr_stmt>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="43" pos:column="8">/* PROCESSOR_CPU_LOAD_INFO */</comment>
<cpp:if pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">if<pos:position pos:line="44" pos:column="4"/></cpp:directive> <expr><name pos:line="44" pos:column="5">PROCESSOR_TEMPERATURE<pos:position pos:line="44" pos:column="26"/></name></expr></cpp:if>
		<comment type="block" pos:line="45" pos:column="17">/*
		 * Not all Apple computers do have this ability. To minimize
		 * the messages sent to the syslog we do an exponential
		 * stepback if `processor_info' fails. We still try ~once a day
		 * though..
		 */</comment>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name pos:line="51" pos:column="21">cpu_temp_retry_counter<pos:position pos:line="51" pos:column="43"/></name> <operator pos:line="51" pos:column="44">&gt;<pos:position pos:line="51" pos:column="48"/></operator> <literal type="number" pos:line="51" pos:column="46">0<pos:position pos:line="51" pos:column="47"/></literal></expr>)<pos:position pos:line="51" pos:column="48"/></condition><then pos:line="51" pos:column="48">
		<block pos:line="52" pos:column="17">{
			<expr_stmt><expr><name pos:line="53" pos:column="25">cpu_temp_retry_counter<pos:position pos:line="53" pos:column="47"/></name><operator pos:line="53" pos:column="47">--<pos:position pos:line="53" pos:column="49"/></operator></expr>;<pos:position pos:line="53" pos:column="50"/></expr_stmt>
			<continue pos:line="54" pos:column="25">continue;<pos:position pos:line="54" pos:column="34"/></continue>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="57" pos:column="17">cpu_temp_len<pos:position pos:line="57" pos:column="29"/></name> <operator pos:line="57" pos:column="30">=<pos:position pos:line="57" pos:column="31"/></operator> <name pos:line="57" pos:column="32">PROCESSOR_INFO_MAX<pos:position pos:line="57" pos:column="50"/></name></expr>;<pos:position pos:line="57" pos:column="51"/></expr_stmt>

		<expr_stmt><expr><name pos:line="59" pos:column="17">status<pos:position pos:line="59" pos:column="23"/></name> <operator pos:line="59" pos:column="24">=<pos:position pos:line="59" pos:column="25"/></operator> <call><name pos:line="59" pos:column="26">processor_info<pos:position pos:line="59" pos:column="40"/></name> <argument_list pos:line="59" pos:column="41">(<argument><expr><name><name pos:line="59" pos:column="42">cpu_list<pos:position pos:line="59" pos:column="50"/></name><index pos:line="59" pos:column="50">[<expr><name pos:line="59" pos:column="51">cpu<pos:position pos:line="59" pos:column="54"/></name></expr>]<pos:position pos:line="59" pos:column="55"/></index></name></expr></argument>,
				<argument><expr><name pos:line="60" pos:column="33">PROCESSOR_TEMPERATURE<pos:position pos:line="60" pos:column="54"/></name></expr></argument>,
				<argument><expr><operator pos:line="61" pos:column="33">&amp;<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="34">cpu_host<pos:position pos:line="61" pos:column="42"/></name></expr></argument>,
				<argument><expr><name pos:line="62" pos:column="33">cpu_temp<pos:position pos:line="62" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="43">&amp;<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="44">cpu_temp_len<pos:position pos:line="62" pos:column="56"/></name></expr></argument>)<pos:position pos:line="62" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="58"/></expr_stmt>
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><name pos:line="63" pos:column="21">status<pos:position pos:line="63" pos:column="27"/></name> <operator pos:line="63" pos:column="28">!=<pos:position pos:line="63" pos:column="30"/></operator> <name pos:line="63" pos:column="31">KERN_SUCCESS<pos:position pos:line="63" pos:column="43"/></name></expr>)<pos:position pos:line="63" pos:column="44"/></condition><then pos:line="63" pos:column="44">
		<block pos:line="64" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="65" pos:column="25">ERROR<pos:position pos:line="65" pos:column="30"/></name> <argument_list pos:line="65" pos:column="31">(<argument><expr><literal type="string" pos:line="65" pos:column="32">"cpu plugin: processor_info failed: %s"<pos:position pos:line="65" pos:column="71"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="66" pos:column="41">mach_error_string<pos:position pos:line="66" pos:column="58"/></name> <argument_list pos:line="66" pos:column="59">(<argument><expr><name pos:line="66" pos:column="60">status<pos:position pos:line="66" pos:column="66"/></name></expr></argument>)<pos:position pos:line="66" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="69"/></expr_stmt>

			<expr_stmt><expr><name pos:line="68" pos:column="25">cpu_temp_retry_counter<pos:position pos:line="68" pos:column="47"/></name> <operator pos:line="68" pos:column="48">=<pos:position pos:line="68" pos:column="49"/></operator> <name pos:line="68" pos:column="50">cpu_temp_retry_step<pos:position pos:line="68" pos:column="69"/></name></expr>;<pos:position pos:line="68" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><name pos:line="69" pos:column="25">cpu_temp_retry_step<pos:position pos:line="69" pos:column="44"/></name> <operator pos:line="69" pos:column="45">*=<pos:position pos:line="69" pos:column="47"/></operator> <literal type="number" pos:line="69" pos:column="48">2<pos:position pos:line="69" pos:column="49"/></literal></expr>;<pos:position pos:line="69" pos:column="50"/></expr_stmt>
			<if pos:line="70" pos:column="25">if <condition pos:line="70" pos:column="28">(<expr><name pos:line="70" pos:column="29">cpu_temp_retry_step<pos:position pos:line="70" pos:column="48"/></name> <operator pos:line="70" pos:column="49">&gt;<pos:position pos:line="70" pos:column="53"/></operator> <name pos:line="70" pos:column="51">cpu_temp_retry_max<pos:position pos:line="70" pos:column="69"/></name></expr>)<pos:position pos:line="70" pos:column="70"/></condition><then pos:line="70" pos:column="70">
				<block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="33">cpu_temp_retry_step<pos:position pos:line="71" pos:column="52"/></name> <operator pos:line="71" pos:column="53">=<pos:position pos:line="71" pos:column="54"/></operator> <name pos:line="71" pos:column="55">cpu_temp_retry_max<pos:position pos:line="71" pos:column="73"/></name></expr>;<pos:position pos:line="71" pos:column="74"/></expr_stmt></block></then></if>

			<continue pos:line="73" pos:column="25">continue;<pos:position pos:line="73" pos:column="34"/></continue>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if>

		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name pos:line="76" pos:column="21">cpu_temp_len<pos:position pos:line="76" pos:column="33"/></name> <operator pos:line="76" pos:column="34">!=<pos:position pos:line="76" pos:column="36"/></operator> <literal type="number" pos:line="76" pos:column="37">1<pos:position pos:line="76" pos:column="38"/></literal></expr>)<pos:position pos:line="76" pos:column="39"/></condition><then pos:line="76" pos:column="39">
		<block pos:line="77" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="78" pos:column="25">DEBUG<pos:position pos:line="78" pos:column="30"/></name> <argument_list pos:line="78" pos:column="31">(<argument><expr><literal type="string" pos:line="78" pos:column="32">"processor_info (PROCESSOR_TEMPERATURE) returned %i elements..?"<pos:position pos:line="78" pos:column="96"/></literal></expr></argument>,
				       	<argument><expr><operator pos:line="79" pos:column="41">(<pos:position pos:line="79" pos:column="42"/></operator><name pos:line="79" pos:column="42">int<pos:position pos:line="79" pos:column="45"/></name><operator pos:line="79" pos:column="45">)<pos:position pos:line="79" pos:column="46"/></operator> <name pos:line="79" pos:column="47">cpu_temp_len<pos:position pos:line="79" pos:column="59"/></name></expr></argument>)<pos:position pos:line="79" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="61"/></expr_stmt>
			<continue pos:line="80" pos:column="25">continue;<pos:position pos:line="80" pos:column="34"/></continue>
		}<pos:position pos:line="81" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="83" pos:column="17">cpu_temp_retry_counter<pos:position pos:line="83" pos:column="39"/></name> <operator pos:line="83" pos:column="40">=<pos:position pos:line="83" pos:column="41"/></operator> <literal type="number" pos:line="83" pos:column="42">0<pos:position pos:line="83" pos:column="43"/></literal></expr>;<pos:position pos:line="83" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="84" pos:column="17">cpu_temp_retry_step<pos:position pos:line="84" pos:column="36"/></name>    <operator pos:line="84" pos:column="40">=<pos:position pos:line="84" pos:column="41"/></operator> <literal type="number" pos:line="84" pos:column="42">1<pos:position pos:line="84" pos:column="43"/></literal></expr>;<pos:position pos:line="84" pos:column="44"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="86" pos:column="17">DEBUG<pos:position pos:line="86" pos:column="22"/></name> <argument_list pos:line="86" pos:column="23">(<argument><expr><literal type="string" pos:line="86" pos:column="24">"cpu_temp = %i"<pos:position pos:line="86" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="86" pos:column="41">(<pos:position pos:line="86" pos:column="42"/></operator><name pos:line="86" pos:column="42">int<pos:position pos:line="86" pos:column="45"/></name><operator pos:line="86" pos:column="45">)<pos:position pos:line="86" pos:column="46"/></operator> <name pos:line="86" pos:column="47">cpu_temp<pos:position pos:line="86" pos:column="55"/></name></expr></argument>)<pos:position pos:line="86" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="87" pos:column="8">/* PROCESSOR_TEMPERATURE */</comment>
	}<pos:position pos:line="88" pos:column="10"/></block></for>
<comment type="block" pos:line="89" pos:column="1">/* #endif PROCESSOR_CPU_LOAD_INFO */</comment>

<cpp:elif pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">elif<pos:position pos:line="91" pos:column="6"/></cpp:directive> <expr><call><name pos:line="91" pos:column="7">defined<pos:position pos:line="91" pos:column="14"/></name><argument_list pos:line="91" pos:column="14">(<argument><expr><name pos:line="91" pos:column="15">KERNEL_LINUX<pos:position pos:line="91" pos:column="27"/></name></expr></argument>)<pos:position pos:line="91" pos:column="28"/></argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="92" pos:column="9">int<pos:position pos:line="92" pos:column="12"/></name></type> <name pos:line="92" pos:column="13">cpu<pos:position pos:line="92" pos:column="16"/></name></decl>;<pos:position pos:line="92" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="93" pos:column="9">counter_t<pos:position pos:line="93" pos:column="18"/></name></type> <name pos:line="93" pos:column="19">user<pos:position pos:line="93" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="93" pos:column="25">nice<pos:position pos:line="93" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="93" pos:column="31">syst<pos:position pos:line="93" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="93" pos:column="37">idle<pos:position pos:line="93" pos:column="41"/></name></decl>;<pos:position pos:line="93" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="94" pos:column="9">counter_t<pos:position pos:line="94" pos:column="18"/></name></type> <name pos:line="94" pos:column="19">wait<pos:position pos:line="94" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="94" pos:column="25">intr<pos:position pos:line="94" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="94" pos:column="31">sitr<pos:position pos:line="94" pos:column="35"/></name></decl>;<pos:position pos:line="94" pos:column="36"/></decl_stmt> <comment type="block" pos:line="94" pos:column="37">/* sitr == soft interrupt */</comment>
	<decl_stmt><decl><type><name pos:line="95" pos:column="9">FILE<pos:position pos:line="95" pos:column="13"/></name> <modifier pos:line="95" pos:column="14">*<pos:position pos:line="95" pos:column="15"/></modifier></type><name pos:line="95" pos:column="15">fh<pos:position pos:line="95" pos:column="17"/></name></decl>;<pos:position pos:line="95" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="96" pos:column="9">char<pos:position pos:line="96" pos:column="13"/></name></type> <name><name pos:line="96" pos:column="14">buf<pos:position pos:line="96" pos:column="17"/></name><index pos:line="96" pos:column="17">[<expr><literal type="number" pos:line="96" pos:column="18">1024<pos:position pos:line="96" pos:column="22"/></literal></expr>]<pos:position pos:line="96" pos:column="23"/></index></name></decl>;<pos:position pos:line="96" pos:column="24"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="98" pos:column="9">char<pos:position pos:line="98" pos:column="13"/></name> <modifier pos:line="98" pos:column="14">*<pos:position pos:line="98" pos:column="15"/></modifier></type><name><name pos:line="98" pos:column="15">fields<pos:position pos:line="98" pos:column="21"/></name><index pos:line="98" pos:column="21">[<expr><literal type="number" pos:line="98" pos:column="22">9<pos:position pos:line="98" pos:column="23"/></literal></expr>]<pos:position pos:line="98" pos:column="24"/></index></name></decl>;<pos:position pos:line="98" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="99" pos:column="9">int<pos:position pos:line="99" pos:column="12"/></name></type> <name pos:line="99" pos:column="13">numfields<pos:position pos:line="99" pos:column="22"/></name></decl>;<pos:position pos:line="99" pos:column="23"/></decl_stmt>

	<if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><operator pos:line="101" pos:column="13">(<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="14">fh<pos:position pos:line="101" pos:column="16"/></name> <operator pos:line="101" pos:column="17">=<pos:position pos:line="101" pos:column="18"/></operator> <call><name pos:line="101" pos:column="19">fopen<pos:position pos:line="101" pos:column="24"/></name> <argument_list pos:line="101" pos:column="25">(<argument><expr><literal type="string" pos:line="101" pos:column="26">"/proc/stat"<pos:position pos:line="101" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="40">"r"<pos:position pos:line="101" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="44"/></argument_list></call><operator pos:line="101" pos:column="44">)<pos:position pos:line="101" pos:column="45"/></operator> <operator pos:line="101" pos:column="46">==<pos:position pos:line="101" pos:column="48"/></operator> <name pos:line="101" pos:column="49">NULL<pos:position pos:line="101" pos:column="53"/></name></expr>)<pos:position pos:line="101" pos:column="54"/></condition><then pos:line="101" pos:column="54">
	<block pos:line="102" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="103" pos:column="17">char<pos:position pos:line="103" pos:column="21"/></name></type> <name><name pos:line="103" pos:column="22">errbuf<pos:position pos:line="103" pos:column="28"/></name><index pos:line="103" pos:column="28">[<expr><literal type="number" pos:line="103" pos:column="29">1024<pos:position pos:line="103" pos:column="33"/></literal></expr>]<pos:position pos:line="103" pos:column="34"/></index></name></decl>;<pos:position pos:line="103" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="104" pos:column="17">ERROR<pos:position pos:line="104" pos:column="22"/></name> <argument_list pos:line="104" pos:column="23">(<argument><expr><literal type="string" pos:line="104" pos:column="24">"cpu plugin: fopen (/proc/stat) failed: %s"<pos:position pos:line="104" pos:column="67"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="105" pos:column="33">sstrerror<pos:position pos:line="105" pos:column="42"/></name> <argument_list pos:line="105" pos:column="43">(<argument><expr><name pos:line="105" pos:column="44">errno<pos:position pos:line="105" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="51">errbuf<pos:position pos:line="105" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="105" pos:column="59">sizeof <argument_list pos:line="105" pos:column="66">(<argument><expr><name pos:line="105" pos:column="67">errbuf<pos:position pos:line="105" pos:column="73"/></name></expr></argument>)<pos:position pos:line="105" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="105" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="105" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="77"/></expr_stmt>
		<return pos:line="106" pos:column="17">return <expr><operator pos:line="106" pos:column="24">(<pos:position pos:line="106" pos:column="25"/></operator><operator pos:line="106" pos:column="25">-<pos:position pos:line="106" pos:column="26"/></operator><literal type="number" pos:line="106" pos:column="26">1<pos:position pos:line="106" pos:column="27"/></literal><operator pos:line="106" pos:column="27">)<pos:position pos:line="106" pos:column="28"/></operator></expr>;<pos:position pos:line="106" pos:column="29"/></return>
	}<pos:position pos:line="107" pos:column="10"/></block></then></if>

	<while pos:line="109" pos:column="9">while <condition pos:line="109" pos:column="15">(<expr><call><name pos:line="109" pos:column="16">fgets<pos:position pos:line="109" pos:column="21"/></name> <argument_list pos:line="109" pos:column="22">(<argument><expr><name pos:line="109" pos:column="23">buf<pos:position pos:line="109" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="28">1024<pos:position pos:line="109" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="34">fh<pos:position pos:line="109" pos:column="36"/></name></expr></argument>)<pos:position pos:line="109" pos:column="37"/></argument_list></call> <operator pos:line="109" pos:column="38">!=<pos:position pos:line="109" pos:column="40"/></operator> <name pos:line="109" pos:column="41">NULL<pos:position pos:line="109" pos:column="45"/></name></expr>)<pos:position pos:line="109" pos:column="46"/></condition>
	<block pos:line="110" pos:column="9">{
		<if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><call><name pos:line="111" pos:column="21">strncmp<pos:position pos:line="111" pos:column="28"/></name> <argument_list pos:line="111" pos:column="29">(<argument><expr><name pos:line="111" pos:column="30">buf<pos:position pos:line="111" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="35">"cpu"<pos:position pos:line="111" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="42">3<pos:position pos:line="111" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="45"/></condition><then pos:line="111" pos:column="45">
			<block type="pseudo"><continue pos:line="112" pos:column="25">continue;<pos:position pos:line="112" pos:column="34"/></continue></block></then></if>
		<if pos:line="113" pos:column="17">if <condition pos:line="113" pos:column="20">(<expr><operator pos:line="113" pos:column="21">(<pos:position pos:line="113" pos:column="22"/></operator><name><name pos:line="113" pos:column="22">buf<pos:position pos:line="113" pos:column="25"/></name><index pos:line="113" pos:column="25">[<expr><literal type="number" pos:line="113" pos:column="26">3<pos:position pos:line="113" pos:column="27"/></literal></expr>]<pos:position pos:line="113" pos:column="28"/></index></name> <operator pos:line="113" pos:column="29">&lt;<pos:position pos:line="113" pos:column="33"/></operator> <literal type="char" pos:line="113" pos:column="31">'0'<pos:position pos:line="113" pos:column="34"/></literal><operator pos:line="113" pos:column="34">)<pos:position pos:line="113" pos:column="35"/></operator> <operator pos:line="113" pos:column="36">||<pos:position pos:line="113" pos:column="38"/></operator> <operator pos:line="113" pos:column="39">(<pos:position pos:line="113" pos:column="40"/></operator><name><name pos:line="113" pos:column="40">buf<pos:position pos:line="113" pos:column="43"/></name><index pos:line="113" pos:column="43">[<expr><literal type="number" pos:line="113" pos:column="44">3<pos:position pos:line="113" pos:column="45"/></literal></expr>]<pos:position pos:line="113" pos:column="46"/></index></name> <operator pos:line="113" pos:column="47">&gt;<pos:position pos:line="113" pos:column="51"/></operator> <literal type="char" pos:line="113" pos:column="49">'9'<pos:position pos:line="113" pos:column="52"/></literal><operator pos:line="113" pos:column="52">)<pos:position pos:line="113" pos:column="53"/></operator></expr>)<pos:position pos:line="113" pos:column="54"/></condition><then pos:line="113" pos:column="54">
			<block type="pseudo"><continue pos:line="114" pos:column="25">continue;<pos:position pos:line="114" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="116" pos:column="17">numfields<pos:position pos:line="116" pos:column="26"/></name> <operator pos:line="116" pos:column="27">=<pos:position pos:line="116" pos:column="28"/></operator> <call><name pos:line="116" pos:column="29">strsplit<pos:position pos:line="116" pos:column="37"/></name> <argument_list pos:line="116" pos:column="38">(<argument><expr><name pos:line="116" pos:column="39">buf<pos:position pos:line="116" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="44">fields<pos:position pos:line="116" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="52">9<pos:position pos:line="116" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="55"/></expr_stmt>
		<if pos:line="117" pos:column="17">if <condition pos:line="117" pos:column="20">(<expr><name pos:line="117" pos:column="21">numfields<pos:position pos:line="117" pos:column="30"/></name> <operator pos:line="117" pos:column="31">&lt;<pos:position pos:line="117" pos:column="35"/></operator> <literal type="number" pos:line="117" pos:column="33">5<pos:position pos:line="117" pos:column="34"/></literal></expr>)<pos:position pos:line="117" pos:column="35"/></condition><then pos:line="117" pos:column="35">
			<block type="pseudo"><continue pos:line="118" pos:column="25">continue;<pos:position pos:line="118" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="120" pos:column="17">cpu<pos:position pos:line="120" pos:column="20"/></name> <operator pos:line="120" pos:column="21">=<pos:position pos:line="120" pos:column="22"/></operator> <call><name pos:line="120" pos:column="23">atoi<pos:position pos:line="120" pos:column="27"/></name> <argument_list pos:line="120" pos:column="28">(<argument><expr><name><name pos:line="120" pos:column="29">fields<pos:position pos:line="120" pos:column="35"/></name><index pos:line="120" pos:column="35">[<expr><literal type="number" pos:line="120" pos:column="36">0<pos:position pos:line="120" pos:column="37"/></literal></expr>]<pos:position pos:line="120" pos:column="38"/></index></name> <operator pos:line="120" pos:column="39">+<pos:position pos:line="120" pos:column="40"/></operator> <literal type="number" pos:line="120" pos:column="41">3<pos:position pos:line="120" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="121" pos:column="17">user<pos:position pos:line="121" pos:column="21"/></name> <operator pos:line="121" pos:column="22">=<pos:position pos:line="121" pos:column="23"/></operator> <call><name pos:line="121" pos:column="24">atoll<pos:position pos:line="121" pos:column="29"/></name> <argument_list pos:line="121" pos:column="30">(<argument><expr><name><name pos:line="121" pos:column="31">fields<pos:position pos:line="121" pos:column="37"/></name><index pos:line="121" pos:column="37">[<expr><literal type="number" pos:line="121" pos:column="38">1<pos:position pos:line="121" pos:column="39"/></literal></expr>]<pos:position pos:line="121" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="121" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="122" pos:column="17">nice<pos:position pos:line="122" pos:column="21"/></name> <operator pos:line="122" pos:column="22">=<pos:position pos:line="122" pos:column="23"/></operator> <call><name pos:line="122" pos:column="24">atoll<pos:position pos:line="122" pos:column="29"/></name> <argument_list pos:line="122" pos:column="30">(<argument><expr><name><name pos:line="122" pos:column="31">fields<pos:position pos:line="122" pos:column="37"/></name><index pos:line="122" pos:column="37">[<expr><literal type="number" pos:line="122" pos:column="38">2<pos:position pos:line="122" pos:column="39"/></literal></expr>]<pos:position pos:line="122" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="122" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="123" pos:column="17">syst<pos:position pos:line="123" pos:column="21"/></name> <operator pos:line="123" pos:column="22">=<pos:position pos:line="123" pos:column="23"/></operator> <call><name pos:line="123" pos:column="24">atoll<pos:position pos:line="123" pos:column="29"/></name> <argument_list pos:line="123" pos:column="30">(<argument><expr><name><name pos:line="123" pos:column="31">fields<pos:position pos:line="123" pos:column="37"/></name><index pos:line="123" pos:column="37">[<expr><literal type="number" pos:line="123" pos:column="38">3<pos:position pos:line="123" pos:column="39"/></literal></expr>]<pos:position pos:line="123" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="123" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="124" pos:column="17">idle<pos:position pos:line="124" pos:column="21"/></name> <operator pos:line="124" pos:column="22">=<pos:position pos:line="124" pos:column="23"/></operator> <call><name pos:line="124" pos:column="24">atoll<pos:position pos:line="124" pos:column="29"/></name> <argument_list pos:line="124" pos:column="30">(<argument><expr><name><name pos:line="124" pos:column="31">fields<pos:position pos:line="124" pos:column="37"/></name><index pos:line="124" pos:column="37">[<expr><literal type="number" pos:line="124" pos:column="38">4<pos:position pos:line="124" pos:column="39"/></literal></expr>]<pos:position pos:line="124" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="124" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="42"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="126" pos:column="17">submit<pos:position pos:line="126" pos:column="23"/></name> <argument_list pos:line="126" pos:column="24">(<argument><expr><name pos:line="126" pos:column="25">cpu<pos:position pos:line="126" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="30">"user"<pos:position pos:line="126" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="126" pos:column="38">user<pos:position pos:line="126" pos:column="42"/></name></expr></argument>)<pos:position pos:line="126" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="127" pos:column="17">submit<pos:position pos:line="127" pos:column="23"/></name> <argument_list pos:line="127" pos:column="24">(<argument><expr><name pos:line="127" pos:column="25">cpu<pos:position pos:line="127" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="30">"nice"<pos:position pos:line="127" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="38">nice<pos:position pos:line="127" pos:column="42"/></name></expr></argument>)<pos:position pos:line="127" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="128" pos:column="17">submit<pos:position pos:line="128" pos:column="23"/></name> <argument_list pos:line="128" pos:column="24">(<argument><expr><name pos:line="128" pos:column="25">cpu<pos:position pos:line="128" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="30">"system"<pos:position pos:line="128" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="40">syst<pos:position pos:line="128" pos:column="44"/></name></expr></argument>)<pos:position pos:line="128" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="129" pos:column="17">submit<pos:position pos:line="129" pos:column="23"/></name> <argument_list pos:line="129" pos:column="24">(<argument><expr><name pos:line="129" pos:column="25">cpu<pos:position pos:line="129" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="30">"idle"<pos:position pos:line="129" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="38">idle<pos:position pos:line="129" pos:column="42"/></name></expr></argument>)<pos:position pos:line="129" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="44"/></expr_stmt>

		<if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><name pos:line="131" pos:column="21">numfields<pos:position pos:line="131" pos:column="30"/></name> <operator pos:line="131" pos:column="31">&gt;=<pos:position pos:line="131" pos:column="36"/></operator> <literal type="number" pos:line="131" pos:column="34">8<pos:position pos:line="131" pos:column="35"/></literal></expr>)<pos:position pos:line="131" pos:column="36"/></condition><then pos:line="131" pos:column="36">
		<block pos:line="132" pos:column="17">{
			<expr_stmt><expr><name pos:line="133" pos:column="25">wait<pos:position pos:line="133" pos:column="29"/></name> <operator pos:line="133" pos:column="30">=<pos:position pos:line="133" pos:column="31"/></operator> <call><name pos:line="133" pos:column="32">atoll<pos:position pos:line="133" pos:column="37"/></name> <argument_list pos:line="133" pos:column="38">(<argument><expr><name><name pos:line="133" pos:column="39">fields<pos:position pos:line="133" pos:column="45"/></name><index pos:line="133" pos:column="45">[<expr><literal type="number" pos:line="133" pos:column="46">5<pos:position pos:line="133" pos:column="47"/></literal></expr>]<pos:position pos:line="133" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="133" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="134" pos:column="25">intr<pos:position pos:line="134" pos:column="29"/></name> <operator pos:line="134" pos:column="30">=<pos:position pos:line="134" pos:column="31"/></operator> <call><name pos:line="134" pos:column="32">atoll<pos:position pos:line="134" pos:column="37"/></name> <argument_list pos:line="134" pos:column="38">(<argument><expr><name><name pos:line="134" pos:column="39">fields<pos:position pos:line="134" pos:column="45"/></name><index pos:line="134" pos:column="45">[<expr><literal type="number" pos:line="134" pos:column="46">6<pos:position pos:line="134" pos:column="47"/></literal></expr>]<pos:position pos:line="134" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="134" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="135" pos:column="25">sitr<pos:position pos:line="135" pos:column="29"/></name> <operator pos:line="135" pos:column="30">=<pos:position pos:line="135" pos:column="31"/></operator> <call><name pos:line="135" pos:column="32">atoll<pos:position pos:line="135" pos:column="37"/></name> <argument_list pos:line="135" pos:column="38">(<argument><expr><name><name pos:line="135" pos:column="39">fields<pos:position pos:line="135" pos:column="45"/></name><index pos:line="135" pos:column="45">[<expr><literal type="number" pos:line="135" pos:column="46">7<pos:position pos:line="135" pos:column="47"/></literal></expr>]<pos:position pos:line="135" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="135" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="50"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="137" pos:column="25">submit<pos:position pos:line="137" pos:column="31"/></name> <argument_list pos:line="137" pos:column="32">(<argument><expr><name pos:line="137" pos:column="33">cpu<pos:position pos:line="137" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="38">"wait"<pos:position pos:line="137" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="137" pos:column="46">wait<pos:position pos:line="137" pos:column="50"/></name></expr></argument>)<pos:position pos:line="137" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="138" pos:column="25">submit<pos:position pos:line="138" pos:column="31"/></name> <argument_list pos:line="138" pos:column="32">(<argument><expr><name pos:line="138" pos:column="33">cpu<pos:position pos:line="138" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="38">"interrupt"<pos:position pos:line="138" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="138" pos:column="51">intr<pos:position pos:line="138" pos:column="55"/></name></expr></argument>)<pos:position pos:line="138" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="139" pos:column="25">submit<pos:position pos:line="139" pos:column="31"/></name> <argument_list pos:line="139" pos:column="32">(<argument><expr><name pos:line="139" pos:column="33">cpu<pos:position pos:line="139" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="38">"softirq"<pos:position pos:line="139" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="139" pos:column="49">sitr<pos:position pos:line="139" pos:column="53"/></name></expr></argument>)<pos:position pos:line="139" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="55"/></expr_stmt>

			<if pos:line="141" pos:column="25">if <condition pos:line="141" pos:column="28">(<expr><name pos:line="141" pos:column="29">numfields<pos:position pos:line="141" pos:column="38"/></name> <operator pos:line="141" pos:column="39">&gt;=<pos:position pos:line="141" pos:column="44"/></operator> <literal type="number" pos:line="141" pos:column="42">9<pos:position pos:line="141" pos:column="43"/></literal></expr>)<pos:position pos:line="141" pos:column="44"/></condition><then pos:line="141" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="142" pos:column="33">submit<pos:position pos:line="142" pos:column="39"/></name> <argument_list pos:line="142" pos:column="40">(<argument><expr><name pos:line="142" pos:column="41">cpu<pos:position pos:line="142" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="46">"steal"<pos:position pos:line="142" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="142" pos:column="55">atoll<pos:position pos:line="142" pos:column="60"/></name> <argument_list pos:line="142" pos:column="61">(<argument><expr><name><name pos:line="142" pos:column="62">fields<pos:position pos:line="142" pos:column="68"/></name><index pos:line="142" pos:column="68">[<expr><literal type="number" pos:line="142" pos:column="69">8<pos:position pos:line="142" pos:column="70"/></literal></expr>]<pos:position pos:line="142" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="142" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="142" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="74"/></expr_stmt></block></then></if>
		}<pos:position pos:line="143" pos:column="18"/></block></then></if>
	}<pos:position pos:line="144" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="146" pos:column="9">fclose<pos:position pos:line="146" pos:column="15"/></name> <argument_list pos:line="146" pos:column="16">(<argument><expr><name pos:line="146" pos:column="17">fh<pos:position pos:line="146" pos:column="19"/></name></expr></argument>)<pos:position pos:line="146" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="21"/></expr_stmt>
<comment type="block" pos:line="147" pos:column="1">/* #endif defined(KERNEL_LINUX) */</comment>

<cpp:elif pos:line="149" pos:column="1">#<cpp:directive pos:line="149" pos:column="2">elif<pos:position pos:line="149" pos:column="6"/></cpp:directive> <expr><call><name pos:line="149" pos:column="7">defined<pos:position pos:line="149" pos:column="14"/></name><argument_list pos:line="149" pos:column="14">(<argument><expr><name pos:line="149" pos:column="15">HAVE_LIBKSTAT<pos:position pos:line="149" pos:column="28"/></name></expr></argument>)<pos:position pos:line="149" pos:column="29"/></argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="150" pos:column="9">int<pos:position pos:line="150" pos:column="12"/></name></type> <name pos:line="150" pos:column="13">cpu<pos:position pos:line="150" pos:column="16"/></name></decl>;<pos:position pos:line="150" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="151" pos:column="9">counter_t<pos:position pos:line="151" pos:column="18"/></name></type> <name pos:line="151" pos:column="19">user<pos:position pos:line="151" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="151" pos:column="25">syst<pos:position pos:line="151" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="151" pos:column="31">idle<pos:position pos:line="151" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="151" pos:column="37">wait<pos:position pos:line="151" pos:column="41"/></name></decl>;<pos:position pos:line="151" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="152" pos:column="9">static<pos:position pos:line="152" pos:column="15"/></specifier> <type><name pos:line="152" pos:column="16">cpu_stat_t<pos:position pos:line="152" pos:column="26"/></name></type> <name pos:line="152" pos:column="27">cs<pos:position pos:line="152" pos:column="29"/></name></decl>;<pos:position pos:line="152" pos:column="30"/></decl_stmt>

	<if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><name pos:line="154" pos:column="13">kc<pos:position pos:line="154" pos:column="15"/></name> <operator pos:line="154" pos:column="16">==<pos:position pos:line="154" pos:column="18"/></operator> <name pos:line="154" pos:column="19">NULL<pos:position pos:line="154" pos:column="23"/></name></expr>)<pos:position pos:line="154" pos:column="24"/></condition><then pos:line="154" pos:column="24">
		<block type="pseudo"><return pos:line="155" pos:column="17">return <expr><operator pos:line="155" pos:column="24">(<pos:position pos:line="155" pos:column="25"/></operator><operator pos:line="155" pos:column="25">-<pos:position pos:line="155" pos:column="26"/></operator><literal type="number" pos:line="155" pos:column="26">1<pos:position pos:line="155" pos:column="27"/></literal><operator pos:line="155" pos:column="27">)<pos:position pos:line="155" pos:column="28"/></operator></expr>;<pos:position pos:line="155" pos:column="29"/></return></block></then></if>

	<for pos:line="157" pos:column="9">for <control pos:line="157" pos:column="13">(<init><expr><name pos:line="157" pos:column="14">cpu<pos:position pos:line="157" pos:column="17"/></name> <operator pos:line="157" pos:column="18">=<pos:position pos:line="157" pos:column="19"/></operator> <literal type="number" pos:line="157" pos:column="20">0<pos:position pos:line="157" pos:column="21"/></literal></expr>;<pos:position pos:line="157" pos:column="22"/></init> <condition><expr><name pos:line="157" pos:column="23">cpu<pos:position pos:line="157" pos:column="26"/></name> <operator pos:line="157" pos:column="27">&lt;<pos:position pos:line="157" pos:column="31"/></operator> <name pos:line="157" pos:column="29">numcpu<pos:position pos:line="157" pos:column="35"/></name></expr>;<pos:position pos:line="157" pos:column="36"/></condition> <incr><expr><name pos:line="157" pos:column="37">cpu<pos:position pos:line="157" pos:column="40"/></name><operator pos:line="157" pos:column="40">++<pos:position pos:line="157" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="157" pos:column="43"/></control>
	<block pos:line="158" pos:column="9">{
		<if pos:line="159" pos:column="17">if <condition pos:line="159" pos:column="20">(<expr><call><name pos:line="159" pos:column="21">kstat_read<pos:position pos:line="159" pos:column="31"/></name> <argument_list pos:line="159" pos:column="32">(<argument><expr><name pos:line="159" pos:column="33">kc<pos:position pos:line="159" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="159" pos:column="37">ksp<pos:position pos:line="159" pos:column="40"/></name><index pos:line="159" pos:column="40">[<expr><name pos:line="159" pos:column="41">cpu<pos:position pos:line="159" pos:column="44"/></name></expr>]<pos:position pos:line="159" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="159" pos:column="47">&amp;<pos:position pos:line="159" pos:column="52"/></operator><name pos:line="159" pos:column="48">cs<pos:position pos:line="159" pos:column="50"/></name></expr></argument>)<pos:position pos:line="159" pos:column="51"/></argument_list></call> <operator pos:line="159" pos:column="52">==<pos:position pos:line="159" pos:column="54"/></operator> <operator pos:line="159" pos:column="55">-<pos:position pos:line="159" pos:column="56"/></operator><literal type="number" pos:line="159" pos:column="56">1<pos:position pos:line="159" pos:column="57"/></literal></expr>)<pos:position pos:line="159" pos:column="58"/></condition><then pos:line="159" pos:column="58">
			<block type="pseudo"><continue pos:line="160" pos:column="25">continue;<pos:position pos:line="160" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="160" pos:column="35">/* error message? */</comment>

		<expr_stmt><expr><name pos:line="162" pos:column="17">idle<pos:position pos:line="162" pos:column="21"/></name> <operator pos:line="162" pos:column="22">=<pos:position pos:line="162" pos:column="23"/></operator> <operator pos:line="162" pos:column="24">(<pos:position pos:line="162" pos:column="25"/></operator><name pos:line="162" pos:column="25">counter_t<pos:position pos:line="162" pos:column="34"/></name><operator pos:line="162" pos:column="34">)<pos:position pos:line="162" pos:column="35"/></operator> <name><name pos:line="162" pos:column="36">cs<pos:position pos:line="162" pos:column="38"/></name><operator pos:line="162" pos:column="38">.<pos:position pos:line="162" pos:column="39"/></operator><name pos:line="162" pos:column="39">cpu_sysinfo<pos:position pos:line="162" pos:column="50"/></name><operator pos:line="162" pos:column="50">.<pos:position pos:line="162" pos:column="51"/></operator><name pos:line="162" pos:column="51">cpu<pos:position pos:line="162" pos:column="54"/></name><index pos:line="162" pos:column="54">[<expr><name pos:line="162" pos:column="55">CPU_IDLE<pos:position pos:line="162" pos:column="63"/></name></expr>]<pos:position pos:line="162" pos:column="64"/></index></name></expr>;<pos:position pos:line="162" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name pos:line="163" pos:column="17">user<pos:position pos:line="163" pos:column="21"/></name> <operator pos:line="163" pos:column="22">=<pos:position pos:line="163" pos:column="23"/></operator> <operator pos:line="163" pos:column="24">(<pos:position pos:line="163" pos:column="25"/></operator><name pos:line="163" pos:column="25">counter_t<pos:position pos:line="163" pos:column="34"/></name><operator pos:line="163" pos:column="34">)<pos:position pos:line="163" pos:column="35"/></operator> <name><name pos:line="163" pos:column="36">cs<pos:position pos:line="163" pos:column="38"/></name><operator pos:line="163" pos:column="38">.<pos:position pos:line="163" pos:column="39"/></operator><name pos:line="163" pos:column="39">cpu_sysinfo<pos:position pos:line="163" pos:column="50"/></name><operator pos:line="163" pos:column="50">.<pos:position pos:line="163" pos:column="51"/></operator><name pos:line="163" pos:column="51">cpu<pos:position pos:line="163" pos:column="54"/></name><index pos:line="163" pos:column="54">[<expr><name pos:line="163" pos:column="55">CPU_USER<pos:position pos:line="163" pos:column="63"/></name></expr>]<pos:position pos:line="163" pos:column="64"/></index></name></expr>;<pos:position pos:line="163" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name pos:line="164" pos:column="17">syst<pos:position pos:line="164" pos:column="21"/></name> <operator pos:line="164" pos:column="22">=<pos:position pos:line="164" pos:column="23"/></operator> <operator pos:line="164" pos:column="24">(<pos:position pos:line="164" pos:column="25"/></operator><name pos:line="164" pos:column="25">counter_t<pos:position pos:line="164" pos:column="34"/></name><operator pos:line="164" pos:column="34">)<pos:position pos:line="164" pos:column="35"/></operator> <name><name pos:line="164" pos:column="36">cs<pos:position pos:line="164" pos:column="38"/></name><operator pos:line="164" pos:column="38">.<pos:position pos:line="164" pos:column="39"/></operator><name pos:line="164" pos:column="39">cpu_sysinfo<pos:position pos:line="164" pos:column="50"/></name><operator pos:line="164" pos:column="50">.<pos:position pos:line="164" pos:column="51"/></operator><name pos:line="164" pos:column="51">cpu<pos:position pos:line="164" pos:column="54"/></name><index pos:line="164" pos:column="54">[<expr><name pos:line="164" pos:column="55">CPU_KERNEL<pos:position pos:line="164" pos:column="65"/></name></expr>]<pos:position pos:line="164" pos:column="66"/></index></name></expr>;<pos:position pos:line="164" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name pos:line="165" pos:column="17">wait<pos:position pos:line="165" pos:column="21"/></name> <operator pos:line="165" pos:column="22">=<pos:position pos:line="165" pos:column="23"/></operator> <operator pos:line="165" pos:column="24">(<pos:position pos:line="165" pos:column="25"/></operator><name pos:line="165" pos:column="25">counter_t<pos:position pos:line="165" pos:column="34"/></name><operator pos:line="165" pos:column="34">)<pos:position pos:line="165" pos:column="35"/></operator> <name><name pos:line="165" pos:column="36">cs<pos:position pos:line="165" pos:column="38"/></name><operator pos:line="165" pos:column="38">.<pos:position pos:line="165" pos:column="39"/></operator><name pos:line="165" pos:column="39">cpu_sysinfo<pos:position pos:line="165" pos:column="50"/></name><operator pos:line="165" pos:column="50">.<pos:position pos:line="165" pos:column="51"/></operator><name pos:line="165" pos:column="51">cpu<pos:position pos:line="165" pos:column="54"/></name><index pos:line="165" pos:column="54">[<expr><name pos:line="165" pos:column="55">CPU_WAIT<pos:position pos:line="165" pos:column="63"/></name></expr>]<pos:position pos:line="165" pos:column="64"/></index></name></expr>;<pos:position pos:line="165" pos:column="65"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="167" pos:column="17">submit<pos:position pos:line="167" pos:column="23"/></name> <argument_list pos:line="167" pos:column="24">(<argument><expr><name><name pos:line="167" pos:column="25">ksp<pos:position pos:line="167" pos:column="28"/></name><index pos:line="167" pos:column="28">[<expr><name pos:line="167" pos:column="29">cpu<pos:position pos:line="167" pos:column="32"/></name></expr>]<pos:position pos:line="167" pos:column="33"/></index></name><operator pos:line="167" pos:column="33">-&gt;<pos:position pos:line="167" pos:column="38"/></operator><name pos:line="167" pos:column="35">ks_instance<pos:position pos:line="167" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="48">"user"<pos:position pos:line="167" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="167" pos:column="56">user<pos:position pos:line="167" pos:column="60"/></name></expr></argument>)<pos:position pos:line="167" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="168" pos:column="17">submit<pos:position pos:line="168" pos:column="23"/></name> <argument_list pos:line="168" pos:column="24">(<argument><expr><name><name pos:line="168" pos:column="25">ksp<pos:position pos:line="168" pos:column="28"/></name><index pos:line="168" pos:column="28">[<expr><name pos:line="168" pos:column="29">cpu<pos:position pos:line="168" pos:column="32"/></name></expr>]<pos:position pos:line="168" pos:column="33"/></index></name><operator pos:line="168" pos:column="33">-&gt;<pos:position pos:line="168" pos:column="38"/></operator><name pos:line="168" pos:column="35">ks_instance<pos:position pos:line="168" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="48">"system"<pos:position pos:line="168" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="168" pos:column="58">syst<pos:position pos:line="168" pos:column="62"/></name></expr></argument>)<pos:position pos:line="168" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="169" pos:column="17">submit<pos:position pos:line="169" pos:column="23"/></name> <argument_list pos:line="169" pos:column="24">(<argument><expr><name><name pos:line="169" pos:column="25">ksp<pos:position pos:line="169" pos:column="28"/></name><index pos:line="169" pos:column="28">[<expr><name pos:line="169" pos:column="29">cpu<pos:position pos:line="169" pos:column="32"/></name></expr>]<pos:position pos:line="169" pos:column="33"/></index></name><operator pos:line="169" pos:column="33">-&gt;<pos:position pos:line="169" pos:column="38"/></operator><name pos:line="169" pos:column="35">ks_instance<pos:position pos:line="169" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="48">"idle"<pos:position pos:line="169" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="169" pos:column="56">idle<pos:position pos:line="169" pos:column="60"/></name></expr></argument>)<pos:position pos:line="169" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="170" pos:column="17">submit<pos:position pos:line="170" pos:column="23"/></name> <argument_list pos:line="170" pos:column="24">(<argument><expr><name><name pos:line="170" pos:column="25">ksp<pos:position pos:line="170" pos:column="28"/></name><index pos:line="170" pos:column="28">[<expr><name pos:line="170" pos:column="29">cpu<pos:position pos:line="170" pos:column="32"/></name></expr>]<pos:position pos:line="170" pos:column="33"/></index></name><operator pos:line="170" pos:column="33">-&gt;<pos:position pos:line="170" pos:column="38"/></operator><name pos:line="170" pos:column="35">ks_instance<pos:position pos:line="170" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="48">"wait"<pos:position pos:line="170" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="56">wait<pos:position pos:line="170" pos:column="60"/></name></expr></argument>)<pos:position pos:line="170" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="171" pos:column="10"/></block></for>
<comment type="block" pos:line="172" pos:column="1">/* #endif defined(HAVE_LIBKSTAT) */</comment>

<cpp:elif pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">elif<pos:position pos:line="174" pos:column="6"/></cpp:directive> <expr><name pos:line="174" pos:column="7">CAN_USE_SYSCTL<pos:position pos:line="174" pos:column="21"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="175" pos:column="9">uint64_t<pos:position pos:line="175" pos:column="17"/></name></type> <name><name pos:line="175" pos:column="18">cpuinfo<pos:position pos:line="175" pos:column="25"/></name><index pos:line="175" pos:column="25">[<expr><name pos:line="175" pos:column="26">numcpu<pos:position pos:line="175" pos:column="32"/></name></expr>]<pos:position pos:line="175" pos:column="33"/></index><index pos:line="175" pos:column="33">[<expr><name pos:line="175" pos:column="34">CPUSTATES<pos:position pos:line="175" pos:column="43"/></name></expr>]<pos:position pos:line="175" pos:column="44"/></index></name></decl>;<pos:position pos:line="175" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="176" pos:column="9">size_t<pos:position pos:line="176" pos:column="15"/></name></type> <name pos:line="176" pos:column="16">cpuinfo_size<pos:position pos:line="176" pos:column="28"/></name></decl>;<pos:position pos:line="176" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="177" pos:column="9">int<pos:position pos:line="177" pos:column="12"/></name></type> <name pos:line="177" pos:column="13">status<pos:position pos:line="177" pos:column="19"/></name></decl>;<pos:position pos:line="177" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="178" pos:column="9">int<pos:position pos:line="178" pos:column="12"/></name></type> <name pos:line="178" pos:column="13">i<pos:position pos:line="178" pos:column="14"/></name></decl>;<pos:position pos:line="178" pos:column="15"/></decl_stmt>

	<if pos:line="180" pos:column="9">if <condition pos:line="180" pos:column="12">(<expr><name pos:line="180" pos:column="13">numcpu<pos:position pos:line="180" pos:column="19"/></name> <operator pos:line="180" pos:column="20">&lt;<pos:position pos:line="180" pos:column="24"/></operator> <literal type="number" pos:line="180" pos:column="22">1<pos:position pos:line="180" pos:column="23"/></literal></expr>)<pos:position pos:line="180" pos:column="24"/></condition><then pos:line="180" pos:column="24">
	<block pos:line="181" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="182" pos:column="17">ERROR<pos:position pos:line="182" pos:column="22"/></name> <argument_list pos:line="182" pos:column="23">(<argument><expr><literal type="string" pos:line="182" pos:column="24">"cpu plugin: Could not determine number of "<pos:position pos:line="182" pos:column="68"/></literal>
				<literal type="string" pos:line="183" pos:column="33">"installed CPUs using sysctl(3)."<pos:position pos:line="183" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="68"/></expr_stmt>
		<return pos:line="184" pos:column="17">return <expr><operator pos:line="184" pos:column="24">(<pos:position pos:line="184" pos:column="25"/></operator><operator pos:line="184" pos:column="25">-<pos:position pos:line="184" pos:column="26"/></operator><literal type="number" pos:line="184" pos:column="26">1<pos:position pos:line="184" pos:column="27"/></literal><operator pos:line="184" pos:column="27">)<pos:position pos:line="184" pos:column="28"/></operator></expr>;<pos:position pos:line="184" pos:column="29"/></return>
	}<pos:position pos:line="185" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="187" pos:column="9">memset<pos:position pos:line="187" pos:column="15"/></name> <argument_list pos:line="187" pos:column="16">(<argument><expr><name pos:line="187" pos:column="17">cpuinfo<pos:position pos:line="187" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="187" pos:column="26">0<pos:position pos:line="187" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="187" pos:column="29">sizeof <argument_list pos:line="187" pos:column="36">(<argument><expr><name pos:line="187" pos:column="37">cpuinfo<pos:position pos:line="187" pos:column="44"/></name></expr></argument>)<pos:position pos:line="187" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="187" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="47"/></expr_stmt>

<cpp:if pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">if<pos:position pos:line="189" pos:column="4"/></cpp:directive> <expr><call><name pos:line="189" pos:column="5">defined<pos:position pos:line="189" pos:column="12"/></name><argument_list pos:line="189" pos:column="12">(<argument><expr><name pos:line="189" pos:column="13">KERN_CPTIME2<pos:position pos:line="189" pos:column="25"/></name></expr></argument>)<pos:position pos:line="189" pos:column="26"/></argument_list></call></expr></cpp:if>
	<if pos:line="190" pos:column="9">if <condition pos:line="190" pos:column="12">(<expr><name pos:line="190" pos:column="13">numcpu<pos:position pos:line="190" pos:column="19"/></name> <operator pos:line="190" pos:column="20">&gt;<pos:position pos:line="190" pos:column="24"/></operator> <literal type="number" pos:line="190" pos:column="22">1<pos:position pos:line="190" pos:column="23"/></literal></expr>)<pos:position pos:line="190" pos:column="24"/></condition><then pos:line="190" pos:column="24"> <block pos:line="190" pos:column="25">{
		<for pos:line="191" pos:column="17">for <control pos:line="191" pos:column="21">(<init><expr><name pos:line="191" pos:column="22">i<pos:position pos:line="191" pos:column="23"/></name> <operator pos:line="191" pos:column="24">=<pos:position pos:line="191" pos:column="25"/></operator> <literal type="number" pos:line="191" pos:column="26">0<pos:position pos:line="191" pos:column="27"/></literal></expr>;<pos:position pos:line="191" pos:column="28"/></init> <condition><expr><name pos:line="191" pos:column="29">i<pos:position pos:line="191" pos:column="30"/></name> <operator pos:line="191" pos:column="31">&lt;<pos:position pos:line="191" pos:column="35"/></operator> <name pos:line="191" pos:column="33">numcpu<pos:position pos:line="191" pos:column="39"/></name></expr>;<pos:position pos:line="191" pos:column="40"/></condition> <incr><expr><name pos:line="191" pos:column="41">i<pos:position pos:line="191" pos:column="42"/></name><operator pos:line="191" pos:column="42">++<pos:position pos:line="191" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="191" pos:column="45"/></control> <block pos:line="191" pos:column="46">{
			<decl_stmt><decl><type><name pos:line="192" pos:column="25">int<pos:position pos:line="192" pos:column="28"/></name></type> <name><name pos:line="192" pos:column="29">mib<pos:position pos:line="192" pos:column="32"/></name><index pos:line="192" pos:column="32">[]<pos:position pos:line="192" pos:column="34"/></index></name> <init pos:line="192" pos:column="35">= <expr><block pos:line="192" pos:column="37">{<expr><name pos:line="192" pos:column="38">CTL_KERN<pos:position pos:line="192" pos:column="46"/></name></expr>, <expr><name pos:line="192" pos:column="48">KERN_CPTIME2<pos:position pos:line="192" pos:column="60"/></name></expr>, <expr><name pos:line="192" pos:column="62">i<pos:position pos:line="192" pos:column="63"/></name></expr>}<pos:position pos:line="192" pos:column="64"/></block></expr></init></decl>;<pos:position pos:line="192" pos:column="65"/></decl_stmt>

			<expr_stmt><expr><name pos:line="194" pos:column="25">cpuinfo_size<pos:position pos:line="194" pos:column="37"/></name> <operator pos:line="194" pos:column="38">=<pos:position pos:line="194" pos:column="39"/></operator> <sizeof pos:line="194" pos:column="40">sizeof <argument_list pos:line="194" pos:column="47">(<argument><expr><name><name pos:line="194" pos:column="48">cpuinfo<pos:position pos:line="194" pos:column="55"/></name><index pos:line="194" pos:column="55">[<expr><literal type="number" pos:line="194" pos:column="56">0<pos:position pos:line="194" pos:column="57"/></literal></expr>]<pos:position pos:line="194" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="194" pos:column="59"/></argument_list></sizeof></expr>;<pos:position pos:line="194" pos:column="60"/></expr_stmt>

			<expr_stmt><expr><name pos:line="196" pos:column="25">status<pos:position pos:line="196" pos:column="31"/></name> <operator pos:line="196" pos:column="32">=<pos:position pos:line="196" pos:column="33"/></operator> <call><name pos:line="196" pos:column="34">sysctl<pos:position pos:line="196" pos:column="40"/></name> <argument_list pos:line="196" pos:column="41">(<argument><expr><name pos:line="196" pos:column="42">mib<pos:position pos:line="196" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="196" pos:column="47">STATIC_ARRAY_SIZE<pos:position pos:line="196" pos:column="64"/></name> <argument_list pos:line="196" pos:column="65">(<argument><expr><name pos:line="196" pos:column="66">mib<pos:position pos:line="196" pos:column="69"/></name></expr></argument>)<pos:position pos:line="196" pos:column="70"/></argument_list></call></expr></argument>,
					<argument><expr><name><name pos:line="197" pos:column="41">cpuinfo<pos:position pos:line="197" pos:column="48"/></name><index pos:line="197" pos:column="48">[<expr><name pos:line="197" pos:column="49">i<pos:position pos:line="197" pos:column="50"/></name></expr>]<pos:position pos:line="197" pos:column="51"/></index></name></expr></argument>, <argument><expr><operator pos:line="197" pos:column="53">&amp;<pos:position pos:line="197" pos:column="58"/></operator><name pos:line="197" pos:column="54">cpuinfo_size<pos:position pos:line="197" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="68">NULL<pos:position pos:line="197" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="197" pos:column="74">0<pos:position pos:line="197" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="197" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="77"/></expr_stmt>
			<if pos:line="198" pos:column="25">if <condition pos:line="198" pos:column="28">(<expr><name pos:line="198" pos:column="29">status<pos:position pos:line="198" pos:column="35"/></name> <operator pos:line="198" pos:column="36">==<pos:position pos:line="198" pos:column="38"/></operator> <operator pos:line="198" pos:column="39">-<pos:position pos:line="198" pos:column="40"/></operator><literal type="number" pos:line="198" pos:column="40">1<pos:position pos:line="198" pos:column="41"/></literal></expr>)<pos:position pos:line="198" pos:column="42"/></condition><then pos:line="198" pos:column="42"> <block pos:line="198" pos:column="43">{
				<decl_stmt><decl><type><name pos:line="199" pos:column="33">char<pos:position pos:line="199" pos:column="37"/></name></type> <name><name pos:line="199" pos:column="38">errbuf<pos:position pos:line="199" pos:column="44"/></name><index pos:line="199" pos:column="44">[<expr><literal type="number" pos:line="199" pos:column="45">1024<pos:position pos:line="199" pos:column="49"/></literal></expr>]<pos:position pos:line="199" pos:column="50"/></index></name></decl>;<pos:position pos:line="199" pos:column="51"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="200" pos:column="33">ERROR<pos:position pos:line="200" pos:column="38"/></name> <argument_list pos:line="200" pos:column="39">(<argument><expr><literal type="string" pos:line="200" pos:column="40">"cpu plugin: sysctl failed: %s."<pos:position pos:line="200" pos:column="72"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="201" pos:column="49">sstrerror<pos:position pos:line="201" pos:column="58"/></name> <argument_list pos:line="201" pos:column="59">(<argument><expr><name pos:line="201" pos:column="60">errno<pos:position pos:line="201" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="67">errbuf<pos:position pos:line="201" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="201" pos:column="75">sizeof <argument_list pos:line="201" pos:column="82">(<argument><expr><name pos:line="201" pos:column="83">errbuf<pos:position pos:line="201" pos:column="89"/></name></expr></argument>)<pos:position pos:line="201" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="201" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="201" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="93"/></expr_stmt>
				<return pos:line="202" pos:column="33">return <expr><operator pos:line="202" pos:column="40">(<pos:position pos:line="202" pos:column="41"/></operator><operator pos:line="202" pos:column="41">-<pos:position pos:line="202" pos:column="42"/></operator><literal type="number" pos:line="202" pos:column="42">1<pos:position pos:line="202" pos:column="43"/></literal><operator pos:line="202" pos:column="43">)<pos:position pos:line="202" pos:column="44"/></operator></expr>;<pos:position pos:line="202" pos:column="45"/></return>
			}<pos:position pos:line="203" pos:column="26"/></block></then></if>
		}<pos:position pos:line="204" pos:column="18"/></block></for>
	}<pos:position pos:line="205" pos:column="10"/></block></then>
	<else pos:line="206" pos:column="9">else
<cpp:endif pos:line="207" pos:column="1">#<cpp:directive pos:line="207" pos:column="2">endif<pos:position pos:line="207" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="207" pos:column="8">/* defined(KERN_CPTIME2) */</comment>
	<block pos:line="208" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="209" pos:column="17">int<pos:position pos:line="209" pos:column="20"/></name></type> <name><name pos:line="209" pos:column="21">mib<pos:position pos:line="209" pos:column="24"/></name><index pos:line="209" pos:column="24">[]<pos:position pos:line="209" pos:column="26"/></index></name> <init pos:line="209" pos:column="27">= <expr><block pos:line="209" pos:column="29">{<expr><name pos:line="209" pos:column="30">CTL_KERN<pos:position pos:line="209" pos:column="38"/></name></expr>, <expr><name pos:line="209" pos:column="40">KERN_CPTIME<pos:position pos:line="209" pos:column="51"/></name></expr>}<pos:position pos:line="209" pos:column="52"/></block></expr></init></decl>;<pos:position pos:line="209" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="210" pos:column="17">long<pos:position pos:line="210" pos:column="21"/></name></type> <name><name pos:line="210" pos:column="22">cpuinfo_tmp<pos:position pos:line="210" pos:column="33"/></name><index pos:line="210" pos:column="33">[<expr><name pos:line="210" pos:column="34">CPUSTATES<pos:position pos:line="210" pos:column="43"/></name></expr>]<pos:position pos:line="210" pos:column="44"/></index></name></decl>;<pos:position pos:line="210" pos:column="45"/></decl_stmt>

		<expr_stmt><expr><name pos:line="212" pos:column="17">cpuinfo_size<pos:position pos:line="212" pos:column="29"/></name> <operator pos:line="212" pos:column="30">=<pos:position pos:line="212" pos:column="31"/></operator> <sizeof pos:line="212" pos:column="32">sizeof<argument_list pos:line="212" pos:column="38">(<argument><expr><name pos:line="212" pos:column="39">cpuinfo_tmp<pos:position pos:line="212" pos:column="50"/></name></expr></argument>)<pos:position pos:line="212" pos:column="51"/></argument_list></sizeof></expr>;<pos:position pos:line="212" pos:column="52"/></expr_stmt>

		<expr_stmt><expr><name pos:line="214" pos:column="17">status<pos:position pos:line="214" pos:column="23"/></name> <operator pos:line="214" pos:column="24">=<pos:position pos:line="214" pos:column="25"/></operator> <call><name pos:line="214" pos:column="26">sysctl<pos:position pos:line="214" pos:column="32"/></name> <argument_list pos:line="214" pos:column="33">(<argument><expr><name pos:line="214" pos:column="34">mib<pos:position pos:line="214" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="214" pos:column="39">STATIC_ARRAY_SIZE<pos:position pos:line="214" pos:column="56"/></name> <argument_list pos:line="214" pos:column="57">(<argument><expr><name pos:line="214" pos:column="58">mib<pos:position pos:line="214" pos:column="61"/></name></expr></argument>)<pos:position pos:line="214" pos:column="62"/></argument_list></call></expr></argument>,
					<argument><expr><operator pos:line="215" pos:column="41">&amp;<pos:position pos:line="215" pos:column="46"/></operator><name pos:line="215" pos:column="42">cpuinfo_tmp<pos:position pos:line="215" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="215" pos:column="55">&amp;<pos:position pos:line="215" pos:column="60"/></operator><name pos:line="215" pos:column="56">cpuinfo_size<pos:position pos:line="215" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="70">NULL<pos:position pos:line="215" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="215" pos:column="76">0<pos:position pos:line="215" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="79"/></expr_stmt>
		<if pos:line="216" pos:column="17">if <condition pos:line="216" pos:column="20">(<expr><name pos:line="216" pos:column="21">status<pos:position pos:line="216" pos:column="27"/></name> <operator pos:line="216" pos:column="28">==<pos:position pos:line="216" pos:column="30"/></operator> <operator pos:line="216" pos:column="31">-<pos:position pos:line="216" pos:column="32"/></operator><literal type="number" pos:line="216" pos:column="32">1<pos:position pos:line="216" pos:column="33"/></literal></expr>)<pos:position pos:line="216" pos:column="34"/></condition><then pos:line="216" pos:column="34">
		<block pos:line="217" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="218" pos:column="25">char<pos:position pos:line="218" pos:column="29"/></name></type> <name><name pos:line="218" pos:column="30">errbuf<pos:position pos:line="218" pos:column="36"/></name><index pos:line="218" pos:column="36">[<expr><literal type="number" pos:line="218" pos:column="37">1024<pos:position pos:line="218" pos:column="41"/></literal></expr>]<pos:position pos:line="218" pos:column="42"/></index></name></decl>;<pos:position pos:line="218" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="219" pos:column="25">ERROR<pos:position pos:line="219" pos:column="30"/></name> <argument_list pos:line="219" pos:column="31">(<argument><expr><literal type="string" pos:line="219" pos:column="32">"cpu plugin: sysctl failed: %s."<pos:position pos:line="219" pos:column="64"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="220" pos:column="41">sstrerror<pos:position pos:line="220" pos:column="50"/></name> <argument_list pos:line="220" pos:column="51">(<argument><expr><name pos:line="220" pos:column="52">errno<pos:position pos:line="220" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="59">errbuf<pos:position pos:line="220" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="220" pos:column="67">sizeof <argument_list pos:line="220" pos:column="74">(<argument><expr><name pos:line="220" pos:column="75">errbuf<pos:position pos:line="220" pos:column="81"/></name></expr></argument>)<pos:position pos:line="220" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="220" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="220" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="85"/></expr_stmt>
			<return pos:line="221" pos:column="25">return <expr><operator pos:line="221" pos:column="32">(<pos:position pos:line="221" pos:column="33"/></operator><operator pos:line="221" pos:column="33">-<pos:position pos:line="221" pos:column="34"/></operator><literal type="number" pos:line="221" pos:column="34">1<pos:position pos:line="221" pos:column="35"/></literal><operator pos:line="221" pos:column="35">)<pos:position pos:line="221" pos:column="36"/></operator></expr>;<pos:position pos:line="221" pos:column="37"/></return>
		}<pos:position pos:line="222" pos:column="18"/></block></then></if>

		<for pos:line="224" pos:column="17">for<control pos:line="224" pos:column="20">(<init><expr><name pos:line="224" pos:column="21">i<pos:position pos:line="224" pos:column="22"/></name> <operator pos:line="224" pos:column="23">=<pos:position pos:line="224" pos:column="24"/></operator> <literal type="number" pos:line="224" pos:column="25">0<pos:position pos:line="224" pos:column="26"/></literal></expr>;<pos:position pos:line="224" pos:column="27"/></init> <condition><expr><name pos:line="224" pos:column="28">i<pos:position pos:line="224" pos:column="29"/></name> <operator pos:line="224" pos:column="30">&lt;<pos:position pos:line="224" pos:column="34"/></operator> <name pos:line="224" pos:column="32">CPUSTATES<pos:position pos:line="224" pos:column="41"/></name></expr>;<pos:position pos:line="224" pos:column="42"/></condition> <incr><expr><name pos:line="224" pos:column="43">i<pos:position pos:line="224" pos:column="44"/></name><operator pos:line="224" pos:column="44">++<pos:position pos:line="224" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="224" pos:column="47"/></control> <block pos:line="224" pos:column="48">{
			<expr_stmt><expr><name><name pos:line="225" pos:column="25">cpuinfo<pos:position pos:line="225" pos:column="32"/></name><index pos:line="225" pos:column="32">[<expr><literal type="number" pos:line="225" pos:column="33">0<pos:position pos:line="225" pos:column="34"/></literal></expr>]<pos:position pos:line="225" pos:column="35"/></index><index pos:line="225" pos:column="35">[<expr><name pos:line="225" pos:column="36">i<pos:position pos:line="225" pos:column="37"/></name></expr>]<pos:position pos:line="225" pos:column="38"/></index></name> <operator pos:line="225" pos:column="39">=<pos:position pos:line="225" pos:column="40"/></operator> <name><name pos:line="225" pos:column="41">cpuinfo_tmp<pos:position pos:line="225" pos:column="52"/></name><index pos:line="225" pos:column="52">[<expr><name pos:line="225" pos:column="53">i<pos:position pos:line="225" pos:column="54"/></name></expr>]<pos:position pos:line="225" pos:column="55"/></index></name></expr>;<pos:position pos:line="225" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="226" pos:column="18"/></block></for>
	}<pos:position pos:line="227" pos:column="10"/></block></else></if>

	<for pos:line="229" pos:column="9">for <control pos:line="229" pos:column="13">(<init><expr><name pos:line="229" pos:column="14">i<pos:position pos:line="229" pos:column="15"/></name> <operator pos:line="229" pos:column="16">=<pos:position pos:line="229" pos:column="17"/></operator> <literal type="number" pos:line="229" pos:column="18">0<pos:position pos:line="229" pos:column="19"/></literal></expr>;<pos:position pos:line="229" pos:column="20"/></init> <condition><expr><name pos:line="229" pos:column="21">i<pos:position pos:line="229" pos:column="22"/></name> <operator pos:line="229" pos:column="23">&lt;<pos:position pos:line="229" pos:column="27"/></operator> <name pos:line="229" pos:column="25">numcpu<pos:position pos:line="229" pos:column="31"/></name></expr>;<pos:position pos:line="229" pos:column="32"/></condition> <incr><expr><name pos:line="229" pos:column="33">i<pos:position pos:line="229" pos:column="34"/></name><operator pos:line="229" pos:column="34">++<pos:position pos:line="229" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="229" pos:column="37"/></control> <block pos:line="229" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="230" pos:column="17">submit<pos:position pos:line="230" pos:column="23"/></name> <argument_list pos:line="230" pos:column="24">(<argument><expr><name pos:line="230" pos:column="25">i<pos:position pos:line="230" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="28">"user"<pos:position pos:line="230" pos:column="34"/></literal></expr></argument>,      <argument><expr><name><name pos:line="230" pos:column="41">cpuinfo<pos:position pos:line="230" pos:column="48"/></name><index pos:line="230" pos:column="48">[<expr><name pos:line="230" pos:column="49">i<pos:position pos:line="230" pos:column="50"/></name></expr>]<pos:position pos:line="230" pos:column="51"/></index><index pos:line="230" pos:column="51">[<expr><name pos:line="230" pos:column="52">CP_USER<pos:position pos:line="230" pos:column="59"/></name></expr>]<pos:position pos:line="230" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="230" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="231" pos:column="17">submit<pos:position pos:line="231" pos:column="23"/></name> <argument_list pos:line="231" pos:column="24">(<argument><expr><name pos:line="231" pos:column="25">i<pos:position pos:line="231" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="28">"nice"<pos:position pos:line="231" pos:column="34"/></literal></expr></argument>,      <argument><expr><name><name pos:line="231" pos:column="41">cpuinfo<pos:position pos:line="231" pos:column="48"/></name><index pos:line="231" pos:column="48">[<expr><name pos:line="231" pos:column="49">i<pos:position pos:line="231" pos:column="50"/></name></expr>]<pos:position pos:line="231" pos:column="51"/></index><index pos:line="231" pos:column="51">[<expr><name pos:line="231" pos:column="52">CP_NICE<pos:position pos:line="231" pos:column="59"/></name></expr>]<pos:position pos:line="231" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="231" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="232" pos:column="17">submit<pos:position pos:line="232" pos:column="23"/></name> <argument_list pos:line="232" pos:column="24">(<argument><expr><name pos:line="232" pos:column="25">i<pos:position pos:line="232" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="232" pos:column="28">"system"<pos:position pos:line="232" pos:column="36"/></literal></expr></argument>,    <argument><expr><name><name pos:line="232" pos:column="41">cpuinfo<pos:position pos:line="232" pos:column="48"/></name><index pos:line="232" pos:column="48">[<expr><name pos:line="232" pos:column="49">i<pos:position pos:line="232" pos:column="50"/></name></expr>]<pos:position pos:line="232" pos:column="51"/></index><index pos:line="232" pos:column="51">[<expr><name pos:line="232" pos:column="52">CP_SYS<pos:position pos:line="232" pos:column="58"/></name></expr>]<pos:position pos:line="232" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="232" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="233" pos:column="17">submit<pos:position pos:line="233" pos:column="23"/></name> <argument_list pos:line="233" pos:column="24">(<argument><expr><name pos:line="233" pos:column="25">i<pos:position pos:line="233" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="233" pos:column="28">"idle"<pos:position pos:line="233" pos:column="34"/></literal></expr></argument>,      <argument><expr><name><name pos:line="233" pos:column="41">cpuinfo<pos:position pos:line="233" pos:column="48"/></name><index pos:line="233" pos:column="48">[<expr><name pos:line="233" pos:column="49">i<pos:position pos:line="233" pos:column="50"/></name></expr>]<pos:position pos:line="233" pos:column="51"/></index><index pos:line="233" pos:column="51">[<expr><name pos:line="233" pos:column="52">CP_IDLE<pos:position pos:line="233" pos:column="59"/></name></expr>]<pos:position pos:line="233" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="233" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="234" pos:column="17">submit<pos:position pos:line="234" pos:column="23"/></name> <argument_list pos:line="234" pos:column="24">(<argument><expr><name pos:line="234" pos:column="25">i<pos:position pos:line="234" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="28">"interrupt"<pos:position pos:line="234" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="234" pos:column="41">cpuinfo<pos:position pos:line="234" pos:column="48"/></name><index pos:line="234" pos:column="48">[<expr><name pos:line="234" pos:column="49">i<pos:position pos:line="234" pos:column="50"/></name></expr>]<pos:position pos:line="234" pos:column="51"/></index><index pos:line="234" pos:column="51">[<expr><name pos:line="234" pos:column="52">CP_INTR<pos:position pos:line="234" pos:column="59"/></name></expr>]<pos:position pos:line="234" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="234" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="235" pos:column="10"/></block></for>
<comment type="block" pos:line="236" pos:column="1">/* #endif CAN_USE_SYSCTL */</comment>
<cpp:elif pos:line="237" pos:column="1">#<cpp:directive pos:line="237" pos:column="2">elif<pos:position pos:line="237" pos:column="6"/></cpp:directive> <expr><call><name pos:line="237" pos:column="7">defined<pos:position pos:line="237" pos:column="14"/></name><argument_list pos:line="237" pos:column="14">(<argument><expr><name pos:line="237" pos:column="15">HAVE_SYSCTLBYNAME<pos:position pos:line="237" pos:column="32"/></name></expr></argument>)<pos:position pos:line="237" pos:column="33"/></argument_list></call> <operator pos:line="237" pos:column="34">&amp;&amp;<pos:position pos:line="237" pos:column="44"/></operator> <call><name pos:line="237" pos:column="37">defined<pos:position pos:line="237" pos:column="44"/></name><argument_list pos:line="237" pos:column="44">(<argument><expr><name pos:line="237" pos:column="45">HAVE_SYSCTL_KERN_CP_TIMES<pos:position pos:line="237" pos:column="70"/></name></expr></argument>)<pos:position pos:line="237" pos:column="71"/></argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="238" pos:column="9">long<pos:position pos:line="238" pos:column="13"/></name></type> <name><name pos:line="238" pos:column="14">cpuinfo<pos:position pos:line="238" pos:column="21"/></name><index pos:line="238" pos:column="21">[<expr><name pos:line="238" pos:column="22">maxcpu<pos:position pos:line="238" pos:column="28"/></name></expr>]<pos:position pos:line="238" pos:column="29"/></index><index pos:line="238" pos:column="29">[<expr><name pos:line="238" pos:column="30">CPUSTATES<pos:position pos:line="238" pos:column="39"/></name></expr>]<pos:position pos:line="238" pos:column="40"/></index></name></decl>;<pos:position pos:line="238" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="239" pos:column="9">size_t<pos:position pos:line="239" pos:column="15"/></name></type> <name pos:line="239" pos:column="16">cpuinfo_size<pos:position pos:line="239" pos:column="28"/></name></decl>;<pos:position pos:line="239" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="240" pos:column="9">int<pos:position pos:line="240" pos:column="12"/></name></type> <name pos:line="240" pos:column="13">i<pos:position pos:line="240" pos:column="14"/></name></decl>;<pos:position pos:line="240" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="242" pos:column="9">memset<pos:position pos:line="242" pos:column="15"/></name> <argument_list pos:line="242" pos:column="16">(<argument><expr><name pos:line="242" pos:column="17">cpuinfo<pos:position pos:line="242" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="242" pos:column="26">0<pos:position pos:line="242" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="242" pos:column="29">sizeof <argument_list pos:line="242" pos:column="36">(<argument><expr><name pos:line="242" pos:column="37">cpuinfo<pos:position pos:line="242" pos:column="44"/></name></expr></argument>)<pos:position pos:line="242" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="242" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><name pos:line="244" pos:column="9">cpuinfo_size<pos:position pos:line="244" pos:column="21"/></name> <operator pos:line="244" pos:column="22">=<pos:position pos:line="244" pos:column="23"/></operator> <sizeof pos:line="244" pos:column="24">sizeof <argument_list pos:line="244" pos:column="31">(<argument><expr><name pos:line="244" pos:column="32">cpuinfo<pos:position pos:line="244" pos:column="39"/></name></expr></argument>)<pos:position pos:line="244" pos:column="40"/></argument_list></sizeof></expr>;<pos:position pos:line="244" pos:column="41"/></expr_stmt>
	<if pos:line="245" pos:column="9">if <condition pos:line="245" pos:column="12">(<expr><call><name pos:line="245" pos:column="13">sysctlbyname<pos:position pos:line="245" pos:column="25"/></name><argument_list pos:line="245" pos:column="25">(<argument><expr><literal type="string" pos:line="245" pos:column="26">"kern.cp_times"<pos:position pos:line="245" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="245" pos:column="43">&amp;<pos:position pos:line="245" pos:column="48"/></operator><name pos:line="245" pos:column="44">cpuinfo<pos:position pos:line="245" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="245" pos:column="53">&amp;<pos:position pos:line="245" pos:column="58"/></operator><name pos:line="245" pos:column="54">cpuinfo_size<pos:position pos:line="245" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="68">NULL<pos:position pos:line="245" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="245" pos:column="74">0<pos:position pos:line="245" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="245" pos:column="76"/></argument_list></call> <operator pos:line="245" pos:column="77">&lt;<pos:position pos:line="245" pos:column="81"/></operator> <literal type="number" pos:line="245" pos:column="79">0<pos:position pos:line="245" pos:column="80"/></literal></expr>)<pos:position pos:line="245" pos:column="81"/></condition><then pos:line="245" pos:column="81">
	<block pos:line="246" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="247" pos:column="17">char<pos:position pos:line="247" pos:column="21"/></name></type> <name><name pos:line="247" pos:column="22">errbuf<pos:position pos:line="247" pos:column="28"/></name><index pos:line="247" pos:column="28">[<expr><literal type="number" pos:line="247" pos:column="29">1024<pos:position pos:line="247" pos:column="33"/></literal></expr>]<pos:position pos:line="247" pos:column="34"/></index></name></decl>;<pos:position pos:line="247" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="248" pos:column="17">ERROR<pos:position pos:line="248" pos:column="22"/></name> <argument_list pos:line="248" pos:column="23">(<argument><expr><literal type="string" pos:line="248" pos:column="24">"cpu plugin: sysctlbyname failed: %s."<pos:position pos:line="248" pos:column="62"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="249" pos:column="33">sstrerror<pos:position pos:line="249" pos:column="42"/></name> <argument_list pos:line="249" pos:column="43">(<argument><expr><name pos:line="249" pos:column="44">errno<pos:position pos:line="249" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="51">errbuf<pos:position pos:line="249" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="249" pos:column="59">sizeof <argument_list pos:line="249" pos:column="66">(<argument><expr><name pos:line="249" pos:column="67">errbuf<pos:position pos:line="249" pos:column="73"/></name></expr></argument>)<pos:position pos:line="249" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="249" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="249" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="77"/></expr_stmt>
		<return pos:line="250" pos:column="17">return <expr><operator pos:line="250" pos:column="24">(<pos:position pos:line="250" pos:column="25"/></operator><operator pos:line="250" pos:column="25">-<pos:position pos:line="250" pos:column="26"/></operator><literal type="number" pos:line="250" pos:column="26">1<pos:position pos:line="250" pos:column="27"/></literal><operator pos:line="250" pos:column="27">)<pos:position pos:line="250" pos:column="28"/></operator></expr>;<pos:position pos:line="250" pos:column="29"/></return>
	}<pos:position pos:line="251" pos:column="10"/></block></then></if>

	<for pos:line="253" pos:column="9">for <control pos:line="253" pos:column="13">(<init><expr><name pos:line="253" pos:column="14">i<pos:position pos:line="253" pos:column="15"/></name> <operator pos:line="253" pos:column="16">=<pos:position pos:line="253" pos:column="17"/></operator> <literal type="number" pos:line="253" pos:column="18">0<pos:position pos:line="253" pos:column="19"/></literal></expr>;<pos:position pos:line="253" pos:column="20"/></init> <condition><expr><name pos:line="253" pos:column="21">i<pos:position pos:line="253" pos:column="22"/></name> <operator pos:line="253" pos:column="23">&lt;<pos:position pos:line="253" pos:column="27"/></operator> <name pos:line="253" pos:column="25">numcpu<pos:position pos:line="253" pos:column="31"/></name></expr>;<pos:position pos:line="253" pos:column="32"/></condition> <incr><expr><name pos:line="253" pos:column="33">i<pos:position pos:line="253" pos:column="34"/></name><operator pos:line="253" pos:column="34">++<pos:position pos:line="253" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="253" pos:column="37"/></control> <block pos:line="253" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="254" pos:column="17">submit<pos:position pos:line="254" pos:column="23"/></name> <argument_list pos:line="254" pos:column="24">(<argument><expr><name pos:line="254" pos:column="25">i<pos:position pos:line="254" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="254" pos:column="28">"user"<pos:position pos:line="254" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="254" pos:column="36">cpuinfo<pos:position pos:line="254" pos:column="43"/></name><index pos:line="254" pos:column="43">[<expr><name pos:line="254" pos:column="44">i<pos:position pos:line="254" pos:column="45"/></name></expr>]<pos:position pos:line="254" pos:column="46"/></index><index pos:line="254" pos:column="46">[<expr><name pos:line="254" pos:column="47">CP_USER<pos:position pos:line="254" pos:column="54"/></name></expr>]<pos:position pos:line="254" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="254" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="255" pos:column="17">submit<pos:position pos:line="255" pos:column="23"/></name> <argument_list pos:line="255" pos:column="24">(<argument><expr><name pos:line="255" pos:column="25">i<pos:position pos:line="255" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="28">"nice"<pos:position pos:line="255" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="255" pos:column="36">cpuinfo<pos:position pos:line="255" pos:column="43"/></name><index pos:line="255" pos:column="43">[<expr><name pos:line="255" pos:column="44">i<pos:position pos:line="255" pos:column="45"/></name></expr>]<pos:position pos:line="255" pos:column="46"/></index><index pos:line="255" pos:column="46">[<expr><name pos:line="255" pos:column="47">CP_NICE<pos:position pos:line="255" pos:column="54"/></name></expr>]<pos:position pos:line="255" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="255" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="256" pos:column="17">submit<pos:position pos:line="256" pos:column="23"/></name> <argument_list pos:line="256" pos:column="24">(<argument><expr><name pos:line="256" pos:column="25">i<pos:position pos:line="256" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="256" pos:column="28">"system"<pos:position pos:line="256" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="256" pos:column="38">cpuinfo<pos:position pos:line="256" pos:column="45"/></name><index pos:line="256" pos:column="45">[<expr><name pos:line="256" pos:column="46">i<pos:position pos:line="256" pos:column="47"/></name></expr>]<pos:position pos:line="256" pos:column="48"/></index><index pos:line="256" pos:column="48">[<expr><name pos:line="256" pos:column="49">CP_SYS<pos:position pos:line="256" pos:column="55"/></name></expr>]<pos:position pos:line="256" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="256" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="257" pos:column="17">submit<pos:position pos:line="257" pos:column="23"/></name> <argument_list pos:line="257" pos:column="24">(<argument><expr><name pos:line="257" pos:column="25">i<pos:position pos:line="257" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="28">"idle"<pos:position pos:line="257" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="257" pos:column="36">cpuinfo<pos:position pos:line="257" pos:column="43"/></name><index pos:line="257" pos:column="43">[<expr><name pos:line="257" pos:column="44">i<pos:position pos:line="257" pos:column="45"/></name></expr>]<pos:position pos:line="257" pos:column="46"/></index><index pos:line="257" pos:column="46">[<expr><name pos:line="257" pos:column="47">CP_IDLE<pos:position pos:line="257" pos:column="54"/></name></expr>]<pos:position pos:line="257" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="257" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="258" pos:column="17">submit<pos:position pos:line="258" pos:column="23"/></name> <argument_list pos:line="258" pos:column="24">(<argument><expr><name pos:line="258" pos:column="25">i<pos:position pos:line="258" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="28">"interrupt"<pos:position pos:line="258" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="258" pos:column="41">cpuinfo<pos:position pos:line="258" pos:column="48"/></name><index pos:line="258" pos:column="48">[<expr><name pos:line="258" pos:column="49">i<pos:position pos:line="258" pos:column="50"/></name></expr>]<pos:position pos:line="258" pos:column="51"/></index><index pos:line="258" pos:column="51">[<expr><name pos:line="258" pos:column="52">CP_INTR<pos:position pos:line="258" pos:column="59"/></name></expr>]<pos:position pos:line="258" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="258" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="259" pos:column="10"/></block></for>
<comment type="block" pos:line="260" pos:column="1">/* #endif HAVE_SYSCTL_KERN_CP_TIMES */</comment>
<cpp:elif pos:line="261" pos:column="1">#<cpp:directive pos:line="261" pos:column="2">elif<pos:position pos:line="261" pos:column="6"/></cpp:directive> <expr><call><name pos:line="261" pos:column="7">defined<pos:position pos:line="261" pos:column="14"/></name><argument_list pos:line="261" pos:column="14">(<argument><expr><name pos:line="261" pos:column="15">HAVE_SYSCTLBYNAME<pos:position pos:line="261" pos:column="32"/></name></expr></argument>)<pos:position pos:line="261" pos:column="33"/></argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="262" pos:column="9">long<pos:position pos:line="262" pos:column="13"/></name></type> <name><name pos:line="262" pos:column="14">cpuinfo<pos:position pos:line="262" pos:column="21"/></name><index pos:line="262" pos:column="21">[<expr><name pos:line="262" pos:column="22">CPUSTATES<pos:position pos:line="262" pos:column="31"/></name></expr>]<pos:position pos:line="262" pos:column="32"/></index></name></decl>;<pos:position pos:line="262" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="263" pos:column="9">size_t<pos:position pos:line="263" pos:column="15"/></name></type> <name pos:line="263" pos:column="16">cpuinfo_size<pos:position pos:line="263" pos:column="28"/></name></decl>;<pos:position pos:line="263" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="265" pos:column="9">cpuinfo_size<pos:position pos:line="265" pos:column="21"/></name> <operator pos:line="265" pos:column="22">=<pos:position pos:line="265" pos:column="23"/></operator> <sizeof pos:line="265" pos:column="24">sizeof <argument_list pos:line="265" pos:column="31">(<argument><expr><name pos:line="265" pos:column="32">cpuinfo<pos:position pos:line="265" pos:column="39"/></name></expr></argument>)<pos:position pos:line="265" pos:column="40"/></argument_list></sizeof></expr>;<pos:position pos:line="265" pos:column="41"/></expr_stmt>

	<if pos:line="267" pos:column="9">if <condition pos:line="267" pos:column="12">(<expr><call><name pos:line="267" pos:column="13">sysctlbyname<pos:position pos:line="267" pos:column="25"/></name><argument_list pos:line="267" pos:column="25">(<argument><expr><literal type="string" pos:line="267" pos:column="26">"kern.cp_time"<pos:position pos:line="267" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="267" pos:column="42">&amp;<pos:position pos:line="267" pos:column="47"/></operator><name pos:line="267" pos:column="43">cpuinfo<pos:position pos:line="267" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="267" pos:column="52">&amp;<pos:position pos:line="267" pos:column="57"/></operator><name pos:line="267" pos:column="53">cpuinfo_size<pos:position pos:line="267" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="67">NULL<pos:position pos:line="267" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="267" pos:column="73">0<pos:position pos:line="267" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="267" pos:column="75"/></argument_list></call> <operator pos:line="267" pos:column="76">&lt;<pos:position pos:line="267" pos:column="80"/></operator> <literal type="number" pos:line="267" pos:column="78">0<pos:position pos:line="267" pos:column="79"/></literal></expr>)<pos:position pos:line="267" pos:column="80"/></condition><then pos:line="267" pos:column="80">
	<block pos:line="268" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="269" pos:column="17">char<pos:position pos:line="269" pos:column="21"/></name></type> <name><name pos:line="269" pos:column="22">errbuf<pos:position pos:line="269" pos:column="28"/></name><index pos:line="269" pos:column="28">[<expr><literal type="number" pos:line="269" pos:column="29">1024<pos:position pos:line="269" pos:column="33"/></literal></expr>]<pos:position pos:line="269" pos:column="34"/></index></name></decl>;<pos:position pos:line="269" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="270" pos:column="17">ERROR<pos:position pos:line="270" pos:column="22"/></name> <argument_list pos:line="270" pos:column="23">(<argument><expr><literal type="string" pos:line="270" pos:column="24">"cpu plugin: sysctlbyname failed: %s."<pos:position pos:line="270" pos:column="62"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="271" pos:column="33">sstrerror<pos:position pos:line="271" pos:column="42"/></name> <argument_list pos:line="271" pos:column="43">(<argument><expr><name pos:line="271" pos:column="44">errno<pos:position pos:line="271" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="271" pos:column="51">errbuf<pos:position pos:line="271" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="271" pos:column="59">sizeof <argument_list pos:line="271" pos:column="66">(<argument><expr><name pos:line="271" pos:column="67">errbuf<pos:position pos:line="271" pos:column="73"/></name></expr></argument>)<pos:position pos:line="271" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="271" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="271" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="77"/></expr_stmt>
		<return pos:line="272" pos:column="17">return <expr><operator pos:line="272" pos:column="24">(<pos:position pos:line="272" pos:column="25"/></operator><operator pos:line="272" pos:column="25">-<pos:position pos:line="272" pos:column="26"/></operator><literal type="number" pos:line="272" pos:column="26">1<pos:position pos:line="272" pos:column="27"/></literal><operator pos:line="272" pos:column="27">)<pos:position pos:line="272" pos:column="28"/></operator></expr>;<pos:position pos:line="272" pos:column="29"/></return>
	}<pos:position pos:line="273" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="275" pos:column="9">submit<pos:position pos:line="275" pos:column="15"/></name> <argument_list pos:line="275" pos:column="16">(<argument><expr><literal type="number" pos:line="275" pos:column="17">0<pos:position pos:line="275" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="275" pos:column="20">"user"<pos:position pos:line="275" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="275" pos:column="28">cpuinfo<pos:position pos:line="275" pos:column="35"/></name><index pos:line="275" pos:column="35">[<expr><name pos:line="275" pos:column="36">CP_USER<pos:position pos:line="275" pos:column="43"/></name></expr>]<pos:position pos:line="275" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="275" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="276" pos:column="9">submit<pos:position pos:line="276" pos:column="15"/></name> <argument_list pos:line="276" pos:column="16">(<argument><expr><literal type="number" pos:line="276" pos:column="17">0<pos:position pos:line="276" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="276" pos:column="20">"nice"<pos:position pos:line="276" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="276" pos:column="28">cpuinfo<pos:position pos:line="276" pos:column="35"/></name><index pos:line="276" pos:column="35">[<expr><name pos:line="276" pos:column="36">CP_NICE<pos:position pos:line="276" pos:column="43"/></name></expr>]<pos:position pos:line="276" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="276" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="277" pos:column="9">submit<pos:position pos:line="277" pos:column="15"/></name> <argument_list pos:line="277" pos:column="16">(<argument><expr><literal type="number" pos:line="277" pos:column="17">0<pos:position pos:line="277" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="277" pos:column="20">"system"<pos:position pos:line="277" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="277" pos:column="30">cpuinfo<pos:position pos:line="277" pos:column="37"/></name><index pos:line="277" pos:column="37">[<expr><name pos:line="277" pos:column="38">CP_SYS<pos:position pos:line="277" pos:column="44"/></name></expr>]<pos:position pos:line="277" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="277" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="278" pos:column="9">submit<pos:position pos:line="278" pos:column="15"/></name> <argument_list pos:line="278" pos:column="16">(<argument><expr><literal type="number" pos:line="278" pos:column="17">0<pos:position pos:line="278" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="278" pos:column="20">"idle"<pos:position pos:line="278" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="278" pos:column="28">cpuinfo<pos:position pos:line="278" pos:column="35"/></name><index pos:line="278" pos:column="35">[<expr><name pos:line="278" pos:column="36">CP_IDLE<pos:position pos:line="278" pos:column="43"/></name></expr>]<pos:position pos:line="278" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="278" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="279" pos:column="9">submit<pos:position pos:line="279" pos:column="15"/></name> <argument_list pos:line="279" pos:column="16">(<argument><expr><literal type="number" pos:line="279" pos:column="17">0<pos:position pos:line="279" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="279" pos:column="20">"interrupt"<pos:position pos:line="279" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="279" pos:column="33">cpuinfo<pos:position pos:line="279" pos:column="40"/></name><index pos:line="279" pos:column="40">[<expr><name pos:line="279" pos:column="41">CP_INTR<pos:position pos:line="279" pos:column="48"/></name></expr>]<pos:position pos:line="279" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="279" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="51"/></expr_stmt>
<comment type="block" pos:line="280" pos:column="1">/* #endif HAVE_SYSCTLBYNAME */</comment>

<cpp:elif pos:line="282" pos:column="1">#<cpp:directive pos:line="282" pos:column="2">elif<pos:position pos:line="282" pos:column="6"/></cpp:directive> <expr><call><name pos:line="282" pos:column="7">defined<pos:position pos:line="282" pos:column="14"/></name><argument_list pos:line="282" pos:column="14">(<argument><expr><name pos:line="282" pos:column="15">HAVE_LIBSTATGRAB<pos:position pos:line="282" pos:column="31"/></name></expr></argument>)<pos:position pos:line="282" pos:column="32"/></argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="283" pos:column="9">sg_cpu_stats<pos:position pos:line="283" pos:column="21"/></name> <modifier pos:line="283" pos:column="22">*<pos:position pos:line="283" pos:column="23"/></modifier></type><name pos:line="283" pos:column="23">cs<pos:position pos:line="283" pos:column="25"/></name></decl>;<pos:position pos:line="283" pos:column="26"/></decl_stmt>
	<expr_stmt><expr><name pos:line="284" pos:column="9">cs<pos:position pos:line="284" pos:column="11"/></name> <operator pos:line="284" pos:column="12">=<pos:position pos:line="284" pos:column="13"/></operator> <call><name pos:line="284" pos:column="14">sg_get_cpu_stats<pos:position pos:line="284" pos:column="30"/></name> <argument_list pos:line="284" pos:column="31">()<pos:position pos:line="284" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="34"/></expr_stmt>

	<if pos:line="286" pos:column="9">if <condition pos:line="286" pos:column="12">(<expr><name pos:line="286" pos:column="13">cs<pos:position pos:line="286" pos:column="15"/></name> <operator pos:line="286" pos:column="16">==<pos:position pos:line="286" pos:column="18"/></operator> <name pos:line="286" pos:column="19">NULL<pos:position pos:line="286" pos:column="23"/></name></expr>)<pos:position pos:line="286" pos:column="24"/></condition><then pos:line="286" pos:column="24">
	<block pos:line="287" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="288" pos:column="17">ERROR<pos:position pos:line="288" pos:column="22"/></name> <argument_list pos:line="288" pos:column="23">(<argument><expr><literal type="string" pos:line="288" pos:column="24">"cpu plugin: sg_get_cpu_stats failed."<pos:position pos:line="288" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="288" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="64"/></expr_stmt>
		<return pos:line="289" pos:column="17">return <expr><operator pos:line="289" pos:column="24">(<pos:position pos:line="289" pos:column="25"/></operator><operator pos:line="289" pos:column="25">-<pos:position pos:line="289" pos:column="26"/></operator><literal type="number" pos:line="289" pos:column="26">1<pos:position pos:line="289" pos:column="27"/></literal><operator pos:line="289" pos:column="27">)<pos:position pos:line="289" pos:column="28"/></operator></expr>;<pos:position pos:line="289" pos:column="29"/></return>
	}<pos:position pos:line="290" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="292" pos:column="9">submit<pos:position pos:line="292" pos:column="15"/></name> <argument_list pos:line="292" pos:column="16">(<argument><expr><literal type="number" pos:line="292" pos:column="17">0<pos:position pos:line="292" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="20">"idle"<pos:position pos:line="292" pos:column="26"/></literal></expr></argument>,   <argument><expr><operator pos:line="292" pos:column="30">(<pos:position pos:line="292" pos:column="31"/></operator><name pos:line="292" pos:column="31">counter_t<pos:position pos:line="292" pos:column="40"/></name><operator pos:line="292" pos:column="40">)<pos:position pos:line="292" pos:column="41"/></operator> <name><name pos:line="292" pos:column="42">cs<pos:position pos:line="292" pos:column="44"/></name><operator pos:line="292" pos:column="44">-&gt;<pos:position pos:line="292" pos:column="49"/></operator><name pos:line="292" pos:column="46">idle<pos:position pos:line="292" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="292" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="293" pos:column="9">submit<pos:position pos:line="293" pos:column="15"/></name> <argument_list pos:line="293" pos:column="16">(<argument><expr><literal type="number" pos:line="293" pos:column="17">0<pos:position pos:line="293" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="293" pos:column="20">"nice"<pos:position pos:line="293" pos:column="26"/></literal></expr></argument>,   <argument><expr><operator pos:line="293" pos:column="30">(<pos:position pos:line="293" pos:column="31"/></operator><name pos:line="293" pos:column="31">counter_t<pos:position pos:line="293" pos:column="40"/></name><operator pos:line="293" pos:column="40">)<pos:position pos:line="293" pos:column="41"/></operator> <name><name pos:line="293" pos:column="42">cs<pos:position pos:line="293" pos:column="44"/></name><operator pos:line="293" pos:column="44">-&gt;<pos:position pos:line="293" pos:column="49"/></operator><name pos:line="293" pos:column="46">nice<pos:position pos:line="293" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="293" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="294" pos:column="9">submit<pos:position pos:line="294" pos:column="15"/></name> <argument_list pos:line="294" pos:column="16">(<argument><expr><literal type="number" pos:line="294" pos:column="17">0<pos:position pos:line="294" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="20">"swap"<pos:position pos:line="294" pos:column="26"/></literal></expr></argument>,   <argument><expr><operator pos:line="294" pos:column="30">(<pos:position pos:line="294" pos:column="31"/></operator><name pos:line="294" pos:column="31">counter_t<pos:position pos:line="294" pos:column="40"/></name><operator pos:line="294" pos:column="40">)<pos:position pos:line="294" pos:column="41"/></operator> <name><name pos:line="294" pos:column="42">cs<pos:position pos:line="294" pos:column="44"/></name><operator pos:line="294" pos:column="44">-&gt;<pos:position pos:line="294" pos:column="49"/></operator><name pos:line="294" pos:column="46">swap<pos:position pos:line="294" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="294" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="295" pos:column="9">submit<pos:position pos:line="295" pos:column="15"/></name> <argument_list pos:line="295" pos:column="16">(<argument><expr><literal type="number" pos:line="295" pos:column="17">0<pos:position pos:line="295" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="295" pos:column="20">"system"<pos:position pos:line="295" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="295" pos:column="30">(<pos:position pos:line="295" pos:column="31"/></operator><name pos:line="295" pos:column="31">counter_t<pos:position pos:line="295" pos:column="40"/></name><operator pos:line="295" pos:column="40">)<pos:position pos:line="295" pos:column="41"/></operator> <name><name pos:line="295" pos:column="42">cs<pos:position pos:line="295" pos:column="44"/></name><operator pos:line="295" pos:column="44">-&gt;<pos:position pos:line="295" pos:column="49"/></operator><name pos:line="295" pos:column="46">kernel<pos:position pos:line="295" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="295" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="296" pos:column="9">submit<pos:position pos:line="296" pos:column="15"/></name> <argument_list pos:line="296" pos:column="16">(<argument><expr><literal type="number" pos:line="296" pos:column="17">0<pos:position pos:line="296" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="296" pos:column="20">"user"<pos:position pos:line="296" pos:column="26"/></literal></expr></argument>,   <argument><expr><operator pos:line="296" pos:column="30">(<pos:position pos:line="296" pos:column="31"/></operator><name pos:line="296" pos:column="31">counter_t<pos:position pos:line="296" pos:column="40"/></name><operator pos:line="296" pos:column="40">)<pos:position pos:line="296" pos:column="41"/></operator> <name><name pos:line="296" pos:column="42">cs<pos:position pos:line="296" pos:column="44"/></name><operator pos:line="296" pos:column="44">-&gt;<pos:position pos:line="296" pos:column="49"/></operator><name pos:line="296" pos:column="46">user<pos:position pos:line="296" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="296" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="297" pos:column="9">submit<pos:position pos:line="297" pos:column="15"/></name> <argument_list pos:line="297" pos:column="16">(<argument><expr><literal type="number" pos:line="297" pos:column="17">0<pos:position pos:line="297" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="297" pos:column="20">"wait"<pos:position pos:line="297" pos:column="26"/></literal></expr></argument>,   <argument><expr><operator pos:line="297" pos:column="30">(<pos:position pos:line="297" pos:column="31"/></operator><name pos:line="297" pos:column="31">counter_t<pos:position pos:line="297" pos:column="40"/></name><operator pos:line="297" pos:column="40">)<pos:position pos:line="297" pos:column="41"/></operator> <name><name pos:line="297" pos:column="42">cs<pos:position pos:line="297" pos:column="44"/></name><operator pos:line="297" pos:column="44">-&gt;<pos:position pos:line="297" pos:column="49"/></operator><name pos:line="297" pos:column="46">iowait<pos:position pos:line="297" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="297" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="54"/></expr_stmt>
<comment type="block" pos:line="298" pos:column="1">/* #endif HAVE_LIBSTATGRAB */</comment>

<cpp:elif pos:line="300" pos:column="1">#<cpp:directive pos:line="300" pos:column="2">elif<pos:position pos:line="300" pos:column="6"/></cpp:directive> <expr><call><name pos:line="300" pos:column="7">defined<pos:position pos:line="300" pos:column="14"/></name><argument_list pos:line="300" pos:column="14">(<argument><expr><name pos:line="300" pos:column="15">HAVE_PERFSTAT<pos:position pos:line="300" pos:column="28"/></name></expr></argument>)<pos:position pos:line="300" pos:column="29"/></argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="301" pos:column="9">perfstat_id_t<pos:position pos:line="301" pos:column="22"/></name></type> <name pos:line="301" pos:column="23">id<pos:position pos:line="301" pos:column="25"/></name></decl>;<pos:position pos:line="301" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="302" pos:column="9">int<pos:position pos:line="302" pos:column="12"/></name></type> <name pos:line="302" pos:column="13">i<pos:position pos:line="302" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="302" pos:column="16">cpus<pos:position pos:line="302" pos:column="20"/></name></decl>;<pos:position pos:line="302" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name pos:line="304" pos:column="9">numcpu<pos:position pos:line="304" pos:column="15"/></name> <operator pos:line="304" pos:column="16">=<pos:position pos:line="304" pos:column="17"/></operator>  <call><name pos:line="304" pos:column="19">perfstat_cpu<pos:position pos:line="304" pos:column="31"/></name><argument_list pos:line="304" pos:column="31">(<argument><expr><name pos:line="304" pos:column="32">NULL<pos:position pos:line="304" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="38">NULL<pos:position pos:line="304" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="304" pos:column="44">sizeof<argument_list pos:line="304" pos:column="50">(<argument><expr><name pos:line="304" pos:column="51">perfstat_cpu_t<pos:position pos:line="304" pos:column="65"/></name></expr></argument>)<pos:position pos:line="304" pos:column="66"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="304" pos:column="68">0<pos:position pos:line="304" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="304" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="71"/></expr_stmt>
	<if pos:line="305" pos:column="9">if<condition pos:line="305" pos:column="11">(<expr><name pos:line="305" pos:column="12">numcpu<pos:position pos:line="305" pos:column="18"/></name> <operator pos:line="305" pos:column="19">==<pos:position pos:line="305" pos:column="21"/></operator> <operator pos:line="305" pos:column="22">-<pos:position pos:line="305" pos:column="23"/></operator><literal type="number" pos:line="305" pos:column="23">1<pos:position pos:line="305" pos:column="24"/></literal></expr>)<pos:position pos:line="305" pos:column="25"/></condition><then pos:line="305" pos:column="25">
	<block pos:line="306" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="307" pos:column="17">char<pos:position pos:line="307" pos:column="21"/></name></type> <name><name pos:line="307" pos:column="22">errbuf<pos:position pos:line="307" pos:column="28"/></name><index pos:line="307" pos:column="28">[<expr><literal type="number" pos:line="307" pos:column="29">1024<pos:position pos:line="307" pos:column="33"/></literal></expr>]<pos:position pos:line="307" pos:column="34"/></index></name></decl>;<pos:position pos:line="307" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="308" pos:column="17">WARNING<pos:position pos:line="308" pos:column="24"/></name> <argument_list pos:line="308" pos:column="25">(<argument><expr><literal type="string" pos:line="308" pos:column="26">"cpu plugin: perfstat_cpu: %s"<pos:position pos:line="308" pos:column="56"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="309" pos:column="25">sstrerror<pos:position pos:line="309" pos:column="34"/></name> <argument_list pos:line="309" pos:column="35">(<argument><expr><name pos:line="309" pos:column="36">errno<pos:position pos:line="309" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="43">errbuf<pos:position pos:line="309" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="309" pos:column="51">sizeof <argument_list pos:line="309" pos:column="58">(<argument><expr><name pos:line="309" pos:column="59">errbuf<pos:position pos:line="309" pos:column="65"/></name></expr></argument>)<pos:position pos:line="309" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="309" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="309" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="69"/></expr_stmt>
		<return pos:line="310" pos:column="17">return <expr><operator pos:line="310" pos:column="24">(<pos:position pos:line="310" pos:column="25"/></operator><operator pos:line="310" pos:column="25">-<pos:position pos:line="310" pos:column="26"/></operator><literal type="number" pos:line="310" pos:column="26">1<pos:position pos:line="310" pos:column="27"/></literal><operator pos:line="310" pos:column="27">)<pos:position pos:line="310" pos:column="28"/></operator></expr>;<pos:position pos:line="310" pos:column="29"/></return>
	}<pos:position pos:line="311" pos:column="10"/></block></then></if>
	
	<if pos:line="313" pos:column="9">if <condition pos:line="313" pos:column="12">(<expr><name pos:line="313" pos:column="13">pnumcpu<pos:position pos:line="313" pos:column="20"/></name> <operator pos:line="313" pos:column="21">!=<pos:position pos:line="313" pos:column="23"/></operator> <name pos:line="313" pos:column="24">numcpu<pos:position pos:line="313" pos:column="30"/></name> <operator pos:line="313" pos:column="31">||<pos:position pos:line="313" pos:column="33"/></operator> <name pos:line="313" pos:column="34">perfcpu<pos:position pos:line="313" pos:column="41"/></name> <operator pos:line="313" pos:column="42">==<pos:position pos:line="313" pos:column="44"/></operator> <name pos:line="313" pos:column="45">NULL<pos:position pos:line="313" pos:column="49"/></name></expr>)<pos:position pos:line="313" pos:column="50"/></condition><then pos:line="313" pos:column="50"> 
	<block pos:line="314" pos:column="9">{
		<if pos:line="315" pos:column="17">if <condition pos:line="315" pos:column="20">(<expr><name pos:line="315" pos:column="21">perfcpu<pos:position pos:line="315" pos:column="28"/></name> <operator pos:line="315" pos:column="29">!=<pos:position pos:line="315" pos:column="31"/></operator> <name pos:line="315" pos:column="32">NULL<pos:position pos:line="315" pos:column="36"/></name></expr>)<pos:position pos:line="315" pos:column="37"/></condition><then pos:line="315" pos:column="37"> 
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="316" pos:column="25">free<pos:position pos:line="316" pos:column="29"/></name><argument_list pos:line="316" pos:column="29">(<argument><expr><name pos:line="316" pos:column="30">perfcpu<pos:position pos:line="316" pos:column="37"/></name></expr></argument>)<pos:position pos:line="316" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="39"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="317" pos:column="17">perfcpu<pos:position pos:line="317" pos:column="24"/></name> <operator pos:line="317" pos:column="25">=<pos:position pos:line="317" pos:column="26"/></operator> <call><name pos:line="317" pos:column="27">malloc<pos:position pos:line="317" pos:column="33"/></name><argument_list pos:line="317" pos:column="33">(<argument><expr><name pos:line="317" pos:column="34">numcpu<pos:position pos:line="317" pos:column="40"/></name> <operator pos:line="317" pos:column="41">*<pos:position pos:line="317" pos:column="42"/></operator> <sizeof pos:line="317" pos:column="43">sizeof<argument_list pos:line="317" pos:column="49">(<argument><expr><name pos:line="317" pos:column="50">perfstat_cpu_t<pos:position pos:line="317" pos:column="64"/></name></expr></argument>)<pos:position pos:line="317" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="317" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="318" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="319" pos:column="9">pnumcpu<pos:position pos:line="319" pos:column="16"/></name> <operator pos:line="319" pos:column="17">=<pos:position pos:line="319" pos:column="18"/></operator> <name pos:line="319" pos:column="19">numcpu<pos:position pos:line="319" pos:column="25"/></name></expr>;<pos:position pos:line="319" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="321" pos:column="9">id<pos:position pos:line="321" pos:column="11"/></name><operator pos:line="321" pos:column="11">.<pos:position pos:line="321" pos:column="12"/></operator><name pos:line="321" pos:column="12">name<pos:position pos:line="321" pos:column="16"/></name><index pos:line="321" pos:column="16">[<expr><literal type="number" pos:line="321" pos:column="17">0<pos:position pos:line="321" pos:column="18"/></literal></expr>]<pos:position pos:line="321" pos:column="19"/></index></name> <operator pos:line="321" pos:column="20">=<pos:position pos:line="321" pos:column="21"/></operator> <literal type="char" pos:line="321" pos:column="22">'\0'<pos:position pos:line="321" pos:column="26"/></literal></expr>;<pos:position pos:line="321" pos:column="27"/></expr_stmt>
	<if pos:line="322" pos:column="9">if <condition pos:line="322" pos:column="12">(<expr><operator pos:line="322" pos:column="13">(<pos:position pos:line="322" pos:column="14"/></operator><name pos:line="322" pos:column="14">cpus<pos:position pos:line="322" pos:column="18"/></name> <operator pos:line="322" pos:column="19">=<pos:position pos:line="322" pos:column="20"/></operator> <call><name pos:line="322" pos:column="21">perfstat_cpu<pos:position pos:line="322" pos:column="33"/></name><argument_list pos:line="322" pos:column="33">(<argument><expr><operator pos:line="322" pos:column="34">&amp;<pos:position pos:line="322" pos:column="39"/></operator><name pos:line="322" pos:column="35">id<pos:position pos:line="322" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="322" pos:column="39">perfcpu<pos:position pos:line="322" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="322" pos:column="48">sizeof<argument_list pos:line="322" pos:column="54">(<argument><expr><name pos:line="322" pos:column="55">perfstat_cpu_t<pos:position pos:line="322" pos:column="69"/></name></expr></argument>)<pos:position pos:line="322" pos:column="70"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="322" pos:column="72">numcpu<pos:position pos:line="322" pos:column="78"/></name></expr></argument>)<pos:position pos:line="322" pos:column="79"/></argument_list></call><operator pos:line="322" pos:column="79">)<pos:position pos:line="322" pos:column="80"/></operator> <operator pos:line="322" pos:column="81">&lt;<pos:position pos:line="322" pos:column="85"/></operator> <literal type="number" pos:line="322" pos:column="83">0<pos:position pos:line="322" pos:column="84"/></literal></expr>)<pos:position pos:line="322" pos:column="85"/></condition><then pos:line="322" pos:column="85">
	<block pos:line="323" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="324" pos:column="17">char<pos:position pos:line="324" pos:column="21"/></name></type> <name><name pos:line="324" pos:column="22">errbuf<pos:position pos:line="324" pos:column="28"/></name><index pos:line="324" pos:column="28">[<expr><literal type="number" pos:line="324" pos:column="29">1024<pos:position pos:line="324" pos:column="33"/></literal></expr>]<pos:position pos:line="324" pos:column="34"/></index></name></decl>;<pos:position pos:line="324" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="325" pos:column="17">WARNING<pos:position pos:line="325" pos:column="24"/></name> <argument_list pos:line="325" pos:column="25">(<argument><expr><literal type="string" pos:line="325" pos:column="26">"cpu plugin: perfstat_cpu: %s"<pos:position pos:line="325" pos:column="56"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="326" pos:column="25">sstrerror<pos:position pos:line="326" pos:column="34"/></name> <argument_list pos:line="326" pos:column="35">(<argument><expr><name pos:line="326" pos:column="36">errno<pos:position pos:line="326" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="326" pos:column="43">errbuf<pos:position pos:line="326" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="326" pos:column="51">sizeof <argument_list pos:line="326" pos:column="58">(<argument><expr><name pos:line="326" pos:column="59">errbuf<pos:position pos:line="326" pos:column="65"/></name></expr></argument>)<pos:position pos:line="326" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="326" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="326" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="69"/></expr_stmt>
		<return pos:line="327" pos:column="17">return <expr><operator pos:line="327" pos:column="24">(<pos:position pos:line="327" pos:column="25"/></operator><operator pos:line="327" pos:column="25">-<pos:position pos:line="327" pos:column="26"/></operator><literal type="number" pos:line="327" pos:column="26">1<pos:position pos:line="327" pos:column="27"/></literal><operator pos:line="327" pos:column="27">)<pos:position pos:line="327" pos:column="28"/></operator></expr>;<pos:position pos:line="327" pos:column="29"/></return>
	}<pos:position pos:line="328" pos:column="10"/></block></then></if>

	<for pos:line="330" pos:column="9">for <control pos:line="330" pos:column="13">(<init><expr><name pos:line="330" pos:column="14">i<pos:position pos:line="330" pos:column="15"/></name> <operator pos:line="330" pos:column="16">=<pos:position pos:line="330" pos:column="17"/></operator> <literal type="number" pos:line="330" pos:column="18">0<pos:position pos:line="330" pos:column="19"/></literal></expr>;<pos:position pos:line="330" pos:column="20"/></init> <condition><expr><name pos:line="330" pos:column="21">i<pos:position pos:line="330" pos:column="22"/></name> <operator pos:line="330" pos:column="23">&lt;<pos:position pos:line="330" pos:column="27"/></operator> <name pos:line="330" pos:column="25">cpus<pos:position pos:line="330" pos:column="29"/></name></expr>;<pos:position pos:line="330" pos:column="30"/></condition> <incr><expr><name pos:line="330" pos:column="31">i<pos:position pos:line="330" pos:column="32"/></name><operator pos:line="330" pos:column="32">++<pos:position pos:line="330" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="330" pos:column="35"/></control> 
	<block pos:line="331" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="332" pos:column="17">submit<pos:position pos:line="332" pos:column="23"/></name> <argument_list pos:line="332" pos:column="24">(<argument><expr><name pos:line="332" pos:column="25">i<pos:position pos:line="332" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="332" pos:column="28">"idle"<pos:position pos:line="332" pos:column="34"/></literal></expr></argument>,   <argument><expr><operator pos:line="332" pos:column="38">(<pos:position pos:line="332" pos:column="39"/></operator><name pos:line="332" pos:column="39">counter_t<pos:position pos:line="332" pos:column="48"/></name><operator pos:line="332" pos:column="48">)<pos:position pos:line="332" pos:column="49"/></operator> <name><name pos:line="332" pos:column="50">perfcpu<pos:position pos:line="332" pos:column="57"/></name><index pos:line="332" pos:column="57">[<expr><name pos:line="332" pos:column="58">i<pos:position pos:line="332" pos:column="59"/></name></expr>]<pos:position pos:line="332" pos:column="60"/></index></name><operator pos:line="332" pos:column="60">.<pos:position pos:line="332" pos:column="61"/></operator><name pos:line="332" pos:column="61">idle<pos:position pos:line="332" pos:column="65"/></name></expr></argument>)<pos:position pos:line="332" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="333" pos:column="17">submit<pos:position pos:line="333" pos:column="23"/></name> <argument_list pos:line="333" pos:column="24">(<argument><expr><name pos:line="333" pos:column="25">i<pos:position pos:line="333" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="333" pos:column="28">"system"<pos:position pos:line="333" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="333" pos:column="38">(<pos:position pos:line="333" pos:column="39"/></operator><name pos:line="333" pos:column="39">counter_t<pos:position pos:line="333" pos:column="48"/></name><operator pos:line="333" pos:column="48">)<pos:position pos:line="333" pos:column="49"/></operator> <name><name pos:line="333" pos:column="50">perfcpu<pos:position pos:line="333" pos:column="57"/></name><index pos:line="333" pos:column="57">[<expr><name pos:line="333" pos:column="58">i<pos:position pos:line="333" pos:column="59"/></name></expr>]<pos:position pos:line="333" pos:column="60"/></index></name><operator pos:line="333" pos:column="60">.<pos:position pos:line="333" pos:column="61"/></operator><name pos:line="333" pos:column="61">sys<pos:position pos:line="333" pos:column="64"/></name></expr></argument>)<pos:position pos:line="333" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="334" pos:column="17">submit<pos:position pos:line="334" pos:column="23"/></name> <argument_list pos:line="334" pos:column="24">(<argument><expr><name pos:line="334" pos:column="25">i<pos:position pos:line="334" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="334" pos:column="28">"user"<pos:position pos:line="334" pos:column="34"/></literal></expr></argument>,   <argument><expr><operator pos:line="334" pos:column="38">(<pos:position pos:line="334" pos:column="39"/></operator><name pos:line="334" pos:column="39">counter_t<pos:position pos:line="334" pos:column="48"/></name><operator pos:line="334" pos:column="48">)<pos:position pos:line="334" pos:column="49"/></operator> <name><name pos:line="334" pos:column="50">perfcpu<pos:position pos:line="334" pos:column="57"/></name><index pos:line="334" pos:column="57">[<expr><name pos:line="334" pos:column="58">i<pos:position pos:line="334" pos:column="59"/></name></expr>]<pos:position pos:line="334" pos:column="60"/></index></name><operator pos:line="334" pos:column="60">.<pos:position pos:line="334" pos:column="61"/></operator><name pos:line="334" pos:column="61">user<pos:position pos:line="334" pos:column="65"/></name></expr></argument>)<pos:position pos:line="334" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="335" pos:column="17">submit<pos:position pos:line="335" pos:column="23"/></name> <argument_list pos:line="335" pos:column="24">(<argument><expr><name pos:line="335" pos:column="25">i<pos:position pos:line="335" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="335" pos:column="28">"wait"<pos:position pos:line="335" pos:column="34"/></literal></expr></argument>,   <argument><expr><operator pos:line="335" pos:column="38">(<pos:position pos:line="335" pos:column="39"/></operator><name pos:line="335" pos:column="39">counter_t<pos:position pos:line="335" pos:column="48"/></name><operator pos:line="335" pos:column="48">)<pos:position pos:line="335" pos:column="49"/></operator> <name><name pos:line="335" pos:column="50">perfcpu<pos:position pos:line="335" pos:column="57"/></name><index pos:line="335" pos:column="57">[<expr><name pos:line="335" pos:column="58">i<pos:position pos:line="335" pos:column="59"/></name></expr>]<pos:position pos:line="335" pos:column="60"/></index></name><operator pos:line="335" pos:column="60">.<pos:position pos:line="335" pos:column="61"/></operator><name pos:line="335" pos:column="61">wait<pos:position pos:line="335" pos:column="65"/></name></expr></argument>)<pos:position pos:line="335" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="336" pos:column="10"/></block></for>
<cpp:endif pos:line="337" pos:column="1">#<cpp:directive pos:line="337" pos:column="2">endif<pos:position pos:line="337" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="337" pos:column="8">/* HAVE_PERFSTAT */</comment>

	<return pos:line="339" pos:column="9">return <expr><operator pos:line="339" pos:column="16">(<pos:position pos:line="339" pos:column="17"/></operator><literal type="number" pos:line="339" pos:column="17">0<pos:position pos:line="339" pos:column="18"/></literal><operator pos:line="339" pos:column="18">)<pos:position pos:line="339" pos:column="19"/></operator></expr>;<pos:position pos:line="339" pos:column="20"/></return>
}<pos:position pos:line="340" pos:column="2"/></block></function></unit>

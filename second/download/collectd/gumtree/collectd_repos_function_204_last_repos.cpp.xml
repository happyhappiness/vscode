<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_204_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">strlisttonums<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">s<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">uint64_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">nums<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">size_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">max<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list> <block pos:line="1" pos:column="66">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name></decl>;<pos:position pos:line="2" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">index<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">saveptr<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">s<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">==<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">||<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">nums<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">==<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="28">NULL<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">||<pos:position pos:line="6" pos:column="35"/></operator> <name pos:line="6" pos:column="36">max<pos:position pos:line="6" pos:column="39"/></name> <operator pos:line="6" pos:column="40">==<pos:position pos:line="6" pos:column="42"/></operator> <literal type="number" pos:line="6" pos:column="43">0<pos:position pos:line="6" pos:column="44"/></literal></expr>)<pos:position pos:line="6" pos:column="45"/></condition><then pos:line="6" pos:column="45">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">index<pos:position pos:line="7" pos:column="17"/></name></expr>;<pos:position pos:line="7" pos:column="18"/></return></block></then></if>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init pos:line="9" pos:column="8">;<pos:position pos:line="9" pos:column="9"/></init><condition pos:line="9" pos:column="9">;<pos:position pos:line="9" pos:column="10"/></condition><incr/>)<pos:position pos:line="9" pos:column="11"/></control> <block pos:line="9" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">p<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><name pos:line="10" pos:column="15">NULL<pos:position pos:line="10" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">token<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><name pos:line="11" pos:column="19">NULL<pos:position pos:line="11" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">token<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">strtok_r<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">s<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="25">","<pos:position pos:line="13" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="30">&amp;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="31">saveptr<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">token<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">==<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">NULL<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23">
      <block type="pseudo"><break pos:line="15" pos:column="7">break;<pos:position pos:line="15" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">s<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <name pos:line="17" pos:column="9">NULL<pos:position pos:line="17" pos:column="13"/></name></expr>;<pos:position pos:line="17" pos:column="14"/></expr_stmt>

    <while pos:line="19" pos:column="5">while <condition pos:line="19" pos:column="11">(<expr><call><name pos:line="19" pos:column="12">isspace<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><operator pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">token<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="28"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="7">token<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">++<pos:position pos:line="20" pos:column="14"/></operator></expr>;<pos:position pos:line="20" pos:column="15"/></expr_stmt></block></while>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">token<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">==<pos:position pos:line="21" pos:column="18"/></operator> <literal type="char" pos:line="21" pos:column="19">'\0'<pos:position pos:line="21" pos:column="23"/></literal></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24">
      <block type="pseudo"><continue pos:line="22" pos:column="7">continue;<pos:position pos:line="22" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="24" pos:column="5">p<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <call><name pos:line="24" pos:column="9">strchr<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">token<pos:position pos:line="24" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="23">'-'<pos:position pos:line="24" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">p<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">!=<pos:position pos:line="25" pos:column="13"/></operator> <name pos:line="25" pos:column="14">NULL<pos:position pos:line="25" pos:column="18"/></name></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19"> <block pos:line="25" pos:column="20">{
      <decl_stmt><decl><type><name pos:line="26" pos:column="7">uint64_t<pos:position pos:line="26" pos:column="15"/></name></type> <name pos:line="26" pos:column="16">n<pos:position pos:line="26" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="26" pos:column="19">start<pos:position pos:line="26" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="26" pos:column="26">end<pos:position pos:line="26" pos:column="29"/></name></decl>;<pos:position pos:line="26" pos:column="30"/></decl_stmt>
      <expr_stmt><expr><operator pos:line="27" pos:column="7">*<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">p<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <literal type="char" pos:line="27" pos:column="12">'\0'<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">ret<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">strtouint64<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">token<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="32">&amp;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="33">start<pos:position pos:line="28" pos:column="38"/></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name pos:line="29" pos:column="11">ret<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">&lt;<pos:position pos:line="29" pos:column="19"/></operator> <literal type="number" pos:line="29" pos:column="17">0<pos:position pos:line="29" pos:column="18"/></literal></expr>)<pos:position pos:line="29" pos:column="19"/></condition><then pos:line="29" pos:column="19">
        <block type="pseudo"><return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="31" pos:column="7">ret<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <call><name pos:line="31" pos:column="13">strtouint64<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">p<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">+<pos:position pos:line="31" pos:column="28"/></operator> <literal type="number" pos:line="31" pos:column="29">1<pos:position pos:line="31" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="32">&amp;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="33">end<pos:position pos:line="31" pos:column="36"/></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
      <if pos:line="32" pos:column="7">if <condition pos:line="32" pos:column="10">(<expr><name pos:line="32" pos:column="11">ret<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">&lt;<pos:position pos:line="32" pos:column="19"/></operator> <literal type="number" pos:line="32" pos:column="17">0<pos:position pos:line="32" pos:column="18"/></literal></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19">
        <block type="pseudo"><return pos:line="33" pos:column="9">return <expr><literal type="number" pos:line="33" pos:column="16">0<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></return></block></then></if>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">start<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">&gt;<pos:position pos:line="34" pos:column="21"/></operator> <name pos:line="34" pos:column="19">end<pos:position pos:line="34" pos:column="22"/></name></expr>)<pos:position pos:line="34" pos:column="23"/></condition><then pos:line="34" pos:column="23"> <block pos:line="34" pos:column="24">{
        <return pos:line="35" pos:column="9">return <expr><literal type="number" pos:line="35" pos:column="16">0<pos:position pos:line="35" pos:column="17"/></literal></expr>;<pos:position pos:line="35" pos:column="18"/></return>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>
      <for pos:line="37" pos:column="7">for <control pos:line="37" pos:column="11">(<init><expr><name pos:line="37" pos:column="12">n<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <name pos:line="37" pos:column="16">start<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></init> <condition><expr><name pos:line="37" pos:column="23">n<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">&lt;=<pos:position pos:line="37" pos:column="30"/></operator> <name pos:line="37" pos:column="28">end<pos:position pos:line="37" pos:column="31"/></name></expr>;<pos:position pos:line="37" pos:column="32"/></condition> <incr><expr><name pos:line="37" pos:column="33">n<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">++<pos:position pos:line="37" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="37"/></control> <block pos:line="37" pos:column="38">{
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><call><name pos:line="38" pos:column="15">isdup<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name pos:line="38" pos:column="21">nums<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="27">index<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="34">n<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call><operator pos:line="38" pos:column="36">)<pos:position pos:line="38" pos:column="37"/></operator></expr>)<pos:position pos:line="38" pos:column="38"/></condition><then pos:line="38" pos:column="38"> <block pos:line="38" pos:column="39">{
          <expr_stmt><expr><name><name pos:line="39" pos:column="11">nums<pos:position pos:line="39" pos:column="15"/></name><index pos:line="39" pos:column="15">[<expr><name pos:line="39" pos:column="16">index<pos:position pos:line="39" pos:column="21"/></name></expr>]<pos:position pos:line="39" pos:column="22"/></index></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="25">n<pos:position pos:line="39" pos:column="26"/></name></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
          <expr_stmt><expr><name pos:line="40" pos:column="11">index<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">++<pos:position pos:line="40" pos:column="18"/></operator></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">index<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">&gt;=<pos:position pos:line="42" pos:column="24"/></operator> <name pos:line="42" pos:column="22">max<pos:position pos:line="42" pos:column="25"/></name></expr>)<pos:position pos:line="42" pos:column="26"/></condition><then pos:line="42" pos:column="26">
          <block type="pseudo"><return pos:line="43" pos:column="11">return <expr><name pos:line="43" pos:column="18">index<pos:position pos:line="43" pos:column="23"/></name></expr>;<pos:position pos:line="43" pos:column="24"/></return></block></then></if>
      }<pos:position pos:line="44" pos:column="8"/></block></for>
    }<pos:position pos:line="45" pos:column="6"/></block></then> <else pos:line="45" pos:column="7">else <block pos:line="45" pos:column="12">{
      <decl_stmt><decl><type><name pos:line="46" pos:column="7">uint64_t<pos:position pos:line="46" pos:column="15"/></name></type> <name pos:line="46" pos:column="16">val<pos:position pos:line="46" pos:column="19"/></name></decl>;<pos:position pos:line="46" pos:column="20"/></decl_stmt>

      <expr_stmt><expr><name pos:line="48" pos:column="7">ret<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <call><name pos:line="48" pos:column="13">strtouint64<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">token<pos:position pos:line="48" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="32">&amp;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="33">val<pos:position pos:line="48" pos:column="36"/></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><name pos:line="49" pos:column="11">ret<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">&lt;<pos:position pos:line="49" pos:column="19"/></operator> <literal type="number" pos:line="49" pos:column="17">0<pos:position pos:line="49" pos:column="18"/></literal></expr>)<pos:position pos:line="49" pos:column="19"/></condition><then pos:line="49" pos:column="19">
        <block type="pseudo"><return pos:line="50" pos:column="9">return <expr><literal type="number" pos:line="50" pos:column="16">0<pos:position pos:line="50" pos:column="17"/></literal></expr>;<pos:position pos:line="50" pos:column="18"/></return></block></then></if>

      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><operator pos:line="52" pos:column="11">!<pos:position pos:line="52" pos:column="12"/></operator><operator pos:line="52" pos:column="12">(<pos:position pos:line="52" pos:column="13"/></operator><call><name pos:line="52" pos:column="13">isdup<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">(<argument><expr><name pos:line="52" pos:column="19">nums<pos:position pos:line="52" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="25">index<pos:position pos:line="52" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="32">val<pos:position pos:line="52" pos:column="35"/></name></expr></argument>)<pos:position pos:line="52" pos:column="36"/></argument_list></call><operator pos:line="52" pos:column="36">)<pos:position pos:line="52" pos:column="37"/></operator></expr>)<pos:position pos:line="52" pos:column="38"/></condition><then pos:line="52" pos:column="38"> <block pos:line="52" pos:column="39">{
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">nums<pos:position pos:line="53" pos:column="13"/></name><index pos:line="53" pos:column="13">[<expr><name pos:line="53" pos:column="14">index<pos:position pos:line="53" pos:column="19"/></name></expr>]<pos:position pos:line="53" pos:column="20"/></index></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <name pos:line="53" pos:column="23">val<pos:position pos:line="53" pos:column="26"/></name></expr>;<pos:position pos:line="53" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">index<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">++<pos:position pos:line="54" pos:column="16"/></operator></expr>;<pos:position pos:line="54" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="55" pos:column="8"/></block></then></if>
      <if pos:line="56" pos:column="7">if <condition pos:line="56" pos:column="10">(<expr><name pos:line="56" pos:column="11">index<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">&gt;=<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="20">max<pos:position pos:line="56" pos:column="23"/></name></expr>)<pos:position pos:line="56" pos:column="24"/></condition><then pos:line="56" pos:column="24">
        <block type="pseudo"><return pos:line="57" pos:column="9">return <expr><name pos:line="57" pos:column="16">index<pos:position pos:line="57" pos:column="21"/></name></expr>;<pos:position pos:line="57" pos:column="22"/></return></block></then></if>
    }<pos:position pos:line="58" pos:column="6"/></block></else></if>
  }<pos:position pos:line="59" pos:column="4"/></block></for>

  <return pos:line="61" pos:column="3">return <expr><name pos:line="61" pos:column="10">index<pos:position pos:line="61" pos:column="15"/></name></expr>;<pos:position pos:line="61" pos:column="16"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

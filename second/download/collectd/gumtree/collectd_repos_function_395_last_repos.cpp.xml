<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_395_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_instance_list_add<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">csnmp_list_instances_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier><modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">head<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">csnmp_list_instances_t<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier><modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">tail<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="3" pos:column="36">const<pos:position pos:line="3" pos:column="41"/></specifier> <name><name pos:line="3" pos:column="42">struct<pos:position pos:line="3" pos:column="48"/></name> <name pos:line="3" pos:column="49">snmp_pdu<pos:position pos:line="3" pos:column="57"/></name></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">res<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="4" pos:column="36">const<pos:position pos:line="4" pos:column="41"/></specifier> <name pos:line="4" pos:column="42">host_definition_t<pos:position pos:line="4" pos:column="59"/></name> <modifier pos:line="4" pos:column="60">*<pos:position pos:line="4" pos:column="61"/></modifier></type><name pos:line="4" pos:column="61">hd<pos:position pos:line="4" pos:column="63"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="5" pos:column="36">const<pos:position pos:line="5" pos:column="41"/></specifier> <name pos:line="5" pos:column="42">data_definition_t<pos:position pos:line="5" pos:column="59"/></name> <modifier pos:line="5" pos:column="60">*<pos:position pos:line="5" pos:column="61"/></modifier></type><name pos:line="5" pos:column="61">dd<pos:position pos:line="5" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="64"/></parameter_list> <block pos:line="5" pos:column="65">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">csnmp_list_instances_t<pos:position pos:line="6" pos:column="25"/></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">il<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">variable_list<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">vb<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">oid_t<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">vb_name<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* Set vb on the last variable */</comment>
  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><expr><name pos:line="12" pos:column="8">vb<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name><name pos:line="12" pos:column="13">res<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">variables<pos:position pos:line="12" pos:column="27"/></name></name></expr>;<pos:position pos:line="12" pos:column="28"/></init> <condition><expr><operator pos:line="12" pos:column="29">(<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">vb<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">!=<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">NULL<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">)<pos:position pos:line="12" pos:column="41"/></operator> <operator pos:line="12" pos:column="42">&amp;&amp;<pos:position pos:line="12" pos:column="52"/></operator> <operator pos:line="12" pos:column="45">(<pos:position pos:line="12" pos:column="46"/></operator><name><name pos:line="12" pos:column="46">vb<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">next_variable<pos:position pos:line="12" pos:column="63"/></name></name> <operator pos:line="12" pos:column="64">!=<pos:position pos:line="12" pos:column="66"/></operator> <name pos:line="12" pos:column="67">NULL<pos:position pos:line="12" pos:column="71"/></name><operator pos:line="12" pos:column="71">)<pos:position pos:line="12" pos:column="72"/></operator></expr>;<pos:position pos:line="12" pos:column="73"/></condition>
       <incr><expr><name pos:line="13" pos:column="8">vb<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name><name pos:line="13" pos:column="13">vb<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">next_variable<pos:position pos:line="13" pos:column="30"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="31"/></control>
    <comment type="block" pos:line="14" pos:column="5">/* do nothing */</comment><block type="pseudo"><empty_stmt pos:line="14" pos:column="21">;<pos:position pos:line="14" pos:column="22"/></empty_stmt></block></for>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">vb<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">==<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">NULL<pos:position pos:line="15" pos:column="17"/></name></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">-<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">csnmp_oid_init<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><operator pos:line="18" pos:column="18">&amp;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="19">vb_name<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="28">vb<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">name<pos:position pos:line="18" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="38">vb<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">name_length<pos:position pos:line="18" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><name pos:line="20" pos:column="3">il<pos:position pos:line="20" pos:column="5"/></name> <operator pos:line="20" pos:column="6">=<pos:position pos:line="20" pos:column="7"/></operator> <call><name pos:line="20" pos:column="8">calloc<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><literal type="number" pos:line="20" pos:column="15">1<pos:position pos:line="20" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="18">sizeof<argument_list pos:line="20" pos:column="24">(<argument><expr><operator pos:line="20" pos:column="25">*<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">il<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">il<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">==<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">NULL<pos:position pos:line="21" pos:column="17"/></name></expr>)<pos:position pos:line="21" pos:column="18"/></condition><then pos:line="21" pos:column="18"> <block pos:line="21" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">ERROR<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><literal type="string" pos:line="22" pos:column="11">"snmp plugin: calloc failed."<pos:position pos:line="22" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">-<pos:position pos:line="23" pos:column="13"/></operator><literal type="number" pos:line="23" pos:column="13">1<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">il<pos:position pos:line="25" pos:column="5"/></name><operator pos:line="25" pos:column="5">-&gt;<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="7">next<pos:position pos:line="25" pos:column="11"/></name></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <name pos:line="25" pos:column="14">NULL<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><name pos:line="27" pos:column="3">status<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <call><name pos:line="27" pos:column="12">csnmp_oid_suffix<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><operator pos:line="27" pos:column="29">&amp;<pos:position pos:line="27" pos:column="34"/></operator><name><name pos:line="27" pos:column="30">il<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">suffix<pos:position pos:line="27" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="42">&amp;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="43">vb_name<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="52">&amp;<pos:position pos:line="27" pos:column="57"/></operator><name><name pos:line="27" pos:column="53">dd<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">instance<pos:position pos:line="27" pos:column="65"/></name><operator pos:line="27" pos:column="65">.<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="66">oid<pos:position pos:line="27" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">status<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">!=<pos:position pos:line="28" pos:column="16"/></operator> <literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19"> <block pos:line="28" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">sfree<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">il<pos:position pos:line="29" pos:column="13"/></name></expr></argument>)<pos:position pos:line="29" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="15"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">status<pos:position pos:line="30" pos:column="18"/></name></expr>;<pos:position pos:line="30" pos:column="19"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="33" pos:column="3">/* Get instance name */</comment>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><operator pos:line="34" pos:column="7">(<pos:position pos:line="34" pos:column="8"/></operator><name><name pos:line="34" pos:column="8">vb<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">type<pos:position pos:line="34" pos:column="16"/></name></name> <operator pos:line="34" pos:column="17">==<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">ASN_OCTET_STR<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">)<pos:position pos:line="34" pos:column="34"/></operator> <operator pos:line="34" pos:column="35">||<pos:position pos:line="34" pos:column="37"/></operator> <operator pos:line="34" pos:column="38">(<pos:position pos:line="34" pos:column="39"/></operator><name><name pos:line="34" pos:column="39">vb<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">-&gt;<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="43">type<pos:position pos:line="34" pos:column="47"/></name></name> <operator pos:line="34" pos:column="48">==<pos:position pos:line="34" pos:column="50"/></operator> <name pos:line="34" pos:column="51">ASN_BIT_STR<pos:position pos:line="34" pos:column="62"/></name><operator pos:line="34" pos:column="62">)<pos:position pos:line="34" pos:column="63"/></operator> <operator pos:line="34" pos:column="64">||<pos:position pos:line="34" pos:column="66"/></operator>
      <operator pos:line="35" pos:column="7">(<pos:position pos:line="35" pos:column="8"/></operator><name><name pos:line="35" pos:column="8">vb<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">type<pos:position pos:line="35" pos:column="16"/></name></name> <operator pos:line="35" pos:column="17">==<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">ASN_IPADDRESS<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">)<pos:position pos:line="35" pos:column="34"/></operator></expr>)<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35"> <block pos:line="35" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">char<pos:position pos:line="36" pos:column="9"/></name> <modifier pos:line="36" pos:column="10">*<pos:position pos:line="36" pos:column="11"/></modifier></type><name pos:line="36" pos:column="11">ptr<pos:position pos:line="36" pos:column="14"/></name></decl>;<pos:position pos:line="36" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">csnmp_strvbcopy<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name><name pos:line="38" pos:column="21">il<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">instance<pos:position pos:line="38" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">vb<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="39">sizeof<argument_list pos:line="38" pos:column="45">(<argument><expr><name><name pos:line="38" pos:column="46">il<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">-&gt;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="50">instance<pos:position pos:line="38" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="61"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">_Bool<pos:position pos:line="39" pos:column="10"/></name></type> <name pos:line="39" pos:column="11">is_matched<pos:position pos:line="39" pos:column="21"/></name> <init pos:line="39" pos:column="22">= <expr><literal type="number" pos:line="39" pos:column="24">0<pos:position pos:line="39" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="26"/></decl_stmt>
    <for pos:line="40" pos:column="5">for <control pos:line="40" pos:column="9">(<init><decl><type><name pos:line="40" pos:column="10">uint32_t<pos:position pos:line="40" pos:column="18"/></name></type> <name pos:line="40" pos:column="19">i<pos:position pos:line="40" pos:column="20"/></name> <init pos:line="40" pos:column="21">= <expr><literal type="number" pos:line="40" pos:column="23">0<pos:position pos:line="40" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="40" pos:column="25"/></init> <condition><expr><name pos:line="40" pos:column="26">i<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">&lt;<pos:position pos:line="40" pos:column="32"/></operator> <name><name pos:line="40" pos:column="30">dd<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">-&gt;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="34">ignores_len<pos:position pos:line="40" pos:column="45"/></name></name></expr>;<pos:position pos:line="40" pos:column="46"/></condition> <incr><expr><name pos:line="40" pos:column="47">i<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">++<pos:position pos:line="40" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="51"/></control> <block pos:line="40" pos:column="52">{
      <expr_stmt><expr><name pos:line="41" pos:column="7">status<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">fnmatch<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><name><name pos:line="41" pos:column="24">dd<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">-&gt;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="28">ignores<pos:position pos:line="41" pos:column="35"/></name><index pos:line="41" pos:column="35">[<expr><name pos:line="41" pos:column="36">i<pos:position pos:line="41" pos:column="37"/></name></expr>]<pos:position pos:line="41" pos:column="38"/></index></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="40">il<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">instance<pos:position pos:line="41" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="54">0<pos:position pos:line="41" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="57"/></expr_stmt>
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><name pos:line="42" pos:column="11">status<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">==<pos:position pos:line="42" pos:column="20"/></operator> <literal type="number" pos:line="42" pos:column="21">0<pos:position pos:line="42" pos:column="22"/></literal></expr>)<pos:position pos:line="42" pos:column="23"/></condition><then pos:line="42" pos:column="23"> <block pos:line="42" pos:column="24">{
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><name><name pos:line="43" pos:column="14">dd<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">invert_match<pos:position pos:line="43" pos:column="30"/></name></name></expr>)<pos:position pos:line="43" pos:column="31"/></condition><then pos:line="43" pos:column="31"> <block pos:line="43" pos:column="32">{
          <expr_stmt><expr><call><name pos:line="44" pos:column="11">sfree<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name pos:line="44" pos:column="17">il<pos:position pos:line="44" pos:column="19"/></name></expr></argument>)<pos:position pos:line="44" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>
          <return pos:line="45" pos:column="11">return <expr><literal type="number" pos:line="45" pos:column="18">0<pos:position pos:line="45" pos:column="19"/></literal></expr>;<pos:position pos:line="45" pos:column="20"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then> <else pos:line="46" pos:column="11">else <block pos:line="46" pos:column="16">{
          <expr_stmt><expr><name pos:line="47" pos:column="11">is_matched<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <literal type="number" pos:line="47" pos:column="24">1<pos:position pos:line="47" pos:column="25"/></literal></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
          <break pos:line="48" pos:column="11">break;<pos:position pos:line="48" pos:column="17"/></break>
        }<pos:position pos:line="49" pos:column="10"/></block></else></if>
      }<pos:position pos:line="50" pos:column="8"/></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></for>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name><name pos:line="52" pos:column="9">dd<pos:position pos:line="52" pos:column="11"/></name><operator pos:line="52" pos:column="11">-&gt;<pos:position pos:line="52" pos:column="16"/></operator><name pos:line="52" pos:column="13">invert_match<pos:position pos:line="52" pos:column="25"/></name></name> <operator pos:line="52" pos:column="26">&amp;&amp;<pos:position pos:line="52" pos:column="36"/></operator> <operator pos:line="52" pos:column="29">!<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">is_matched<pos:position pos:line="52" pos:column="40"/></name></expr>)<pos:position pos:line="52" pos:column="41"/></condition><then pos:line="52" pos:column="41"> <block pos:line="52" pos:column="42">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">sfree<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><name pos:line="53" pos:column="13">il<pos:position pos:line="53" pos:column="15"/></name></expr></argument>)<pos:position pos:line="53" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="17"/></expr_stmt>
      <return pos:line="54" pos:column="7">return <expr><literal type="number" pos:line="54" pos:column="14">0<pos:position pos:line="54" pos:column="15"/></literal></expr>;<pos:position pos:line="54" pos:column="16"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <for pos:line="56" pos:column="5">for <control pos:line="56" pos:column="9">(<init><expr><name pos:line="56" pos:column="10">ptr<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">=<pos:position pos:line="56" pos:column="15"/></operator> <name><name pos:line="56" pos:column="16">il<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">-&gt;<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="20">instance<pos:position pos:line="56" pos:column="28"/></name></name></expr>;<pos:position pos:line="56" pos:column="29"/></init> <condition><expr><operator pos:line="56" pos:column="30">*<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="31">ptr<pos:position pos:line="56" pos:column="34"/></name> <operator pos:line="56" pos:column="35">!=<pos:position pos:line="56" pos:column="37"/></operator> <literal type="char" pos:line="56" pos:column="38">'\0'<pos:position pos:line="56" pos:column="42"/></literal></expr>;<pos:position pos:line="56" pos:column="43"/></condition> <incr><expr><name pos:line="56" pos:column="44">ptr<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">++<pos:position pos:line="56" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="50"/></control> <block pos:line="56" pos:column="51">{
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><operator pos:line="57" pos:column="11">(<pos:position pos:line="57" pos:column="12"/></operator><operator pos:line="57" pos:column="12">*<pos:position pos:line="57" pos:column="13"/></operator><name pos:line="57" pos:column="13">ptr<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">&gt;<pos:position pos:line="57" pos:column="21"/></operator> <literal type="number" pos:line="57" pos:column="19">0<pos:position pos:line="57" pos:column="20"/></literal><operator pos:line="57" pos:column="20">)<pos:position pos:line="57" pos:column="21"/></operator> <operator pos:line="57" pos:column="22">&amp;&amp;<pos:position pos:line="57" pos:column="32"/></operator> <operator pos:line="57" pos:column="25">(<pos:position pos:line="57" pos:column="26"/></operator><operator pos:line="57" pos:column="26">*<pos:position pos:line="57" pos:column="27"/></operator><name pos:line="57" pos:column="27">ptr<pos:position pos:line="57" pos:column="30"/></name> <operator pos:line="57" pos:column="31">&lt;<pos:position pos:line="57" pos:column="35"/></operator> <literal type="number" pos:line="57" pos:column="33">32<pos:position pos:line="57" pos:column="35"/></literal><operator pos:line="57" pos:column="35">)<pos:position pos:line="57" pos:column="36"/></operator></expr>)<pos:position pos:line="57" pos:column="37"/></condition><then pos:line="57" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="58" pos:column="9">*<pos:position pos:line="58" pos:column="10"/></operator><name pos:line="58" pos:column="10">ptr<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <literal type="char" pos:line="58" pos:column="16">' '<pos:position pos:line="58" pos:column="19"/></literal></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt></block></then>
      <elseif pos:line="59" pos:column="7">else <if pos:line="59" pos:column="12">if <condition pos:line="59" pos:column="15">(<expr><operator pos:line="59" pos:column="16">*<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="17">ptr<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">==<pos:position pos:line="59" pos:column="23"/></operator> <literal type="char" pos:line="59" pos:column="24">'/'<pos:position pos:line="59" pos:column="27"/></literal></expr>)<pos:position pos:line="59" pos:column="28"/></condition><then pos:line="59" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="60" pos:column="9">*<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">ptr<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <literal type="char" pos:line="60" pos:column="16">'_'<pos:position pos:line="60" pos:column="19"/></literal></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="61" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">DEBUG<pos:position pos:line="62" pos:column="10"/></name><argument_list pos:line="62" pos:column="10">(<argument><expr><literal type="string" pos:line="62" pos:column="11">"snmp plugin: il-&gt;instance = `%s';"<pos:position pos:line="62" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="48">il<pos:position pos:line="62" pos:column="50"/></name><operator pos:line="62" pos:column="50">-&gt;<pos:position pos:line="62" pos:column="55"/></operator><name pos:line="62" pos:column="52">instance<pos:position pos:line="62" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="62"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></then> <else pos:line="63" pos:column="5">else <block pos:line="63" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="64" pos:column="5">value_t<pos:position pos:line="64" pos:column="12"/></name></type> <name pos:line="64" pos:column="13">val<pos:position pos:line="64" pos:column="16"/></name> <init pos:line="64" pos:column="17">= <expr><call><name pos:line="64" pos:column="19">csnmp_value_list_to_value<pos:position pos:line="64" pos:column="44"/></name><argument_list pos:line="64" pos:column="44">(
        <argument><expr><name pos:line="65" pos:column="9">vb<pos:position pos:line="65" pos:column="11"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="13">DS_TYPE_COUNTER<pos:position pos:line="65" pos:column="28"/></name></expr></argument>,
        <comment type="block" pos:line="66" pos:column="9">/* scale = */</comment> <argument><expr><literal type="number" pos:line="66" pos:column="23">1.0<pos:position pos:line="66" pos:column="26"/></literal></expr></argument>, <comment type="block" pos:line="66" pos:column="28">/* shift = */</comment> <argument><expr><literal type="number" pos:line="66" pos:column="42">0.0<pos:position pos:line="66" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="47">hd<pos:position pos:line="66" pos:column="49"/></name><operator pos:line="66" pos:column="49">-&gt;<pos:position pos:line="66" pos:column="54"/></operator><name pos:line="66" pos:column="51">name<pos:position pos:line="66" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="57">dd<pos:position pos:line="66" pos:column="59"/></name><operator pos:line="66" pos:column="59">-&gt;<pos:position pos:line="66" pos:column="64"/></operator><name pos:line="66" pos:column="61">name<pos:position pos:line="66" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="66" pos:column="67"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">snprintf<pos:position pos:line="67" pos:column="13"/></name><argument_list pos:line="67" pos:column="13">(<argument><expr><name><name pos:line="67" pos:column="14">il<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">-&gt;<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="18">instance<pos:position pos:line="67" pos:column="26"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="28">sizeof<argument_list pos:line="67" pos:column="34">(<argument><expr><name><name pos:line="67" pos:column="35">il<pos:position pos:line="67" pos:column="37"/></name><operator pos:line="67" pos:column="37">-&gt;<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="39">instance<pos:position pos:line="67" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="50">"%llu"<pos:position pos:line="67" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="58">val<pos:position pos:line="67" pos:column="61"/></name><operator pos:line="67" pos:column="61">.<pos:position pos:line="67" pos:column="62"/></operator><name pos:line="67" pos:column="62">counter<pos:position pos:line="67" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="71"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="70" pos:column="3">/* TODO: Debugging output */</comment>

  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><operator pos:line="72" pos:column="7">*<pos:position pos:line="72" pos:column="8"/></operator><name pos:line="72" pos:column="8">head<pos:position pos:line="72" pos:column="12"/></name> <operator pos:line="72" pos:column="13">==<pos:position pos:line="72" pos:column="15"/></operator> <name pos:line="72" pos:column="16">NULL<pos:position pos:line="72" pos:column="20"/></name></expr>)<pos:position pos:line="72" pos:column="21"/></condition><then pos:line="72" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="73" pos:column="5">*<pos:position pos:line="73" pos:column="6"/></operator><name pos:line="73" pos:column="6">head<pos:position pos:line="73" pos:column="10"/></name> <operator pos:line="73" pos:column="11">=<pos:position pos:line="73" pos:column="12"/></operator> <name pos:line="73" pos:column="13">il<pos:position pos:line="73" pos:column="15"/></name></expr>;<pos:position pos:line="73" pos:column="16"/></expr_stmt></block></then>
  <else pos:line="74" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><operator pos:line="75" pos:column="5">(<pos:position pos:line="75" pos:column="6"/></operator><operator pos:line="75" pos:column="6">*<pos:position pos:line="75" pos:column="7"/></operator><name pos:line="75" pos:column="7">tail<pos:position pos:line="75" pos:column="11"/></name><operator pos:line="75" pos:column="11">)<pos:position pos:line="75" pos:column="12"/></operator><operator pos:line="75" pos:column="12">-&gt;<pos:position pos:line="75" pos:column="17"/></operator><name pos:line="75" pos:column="14">next<pos:position pos:line="75" pos:column="18"/></name></name> <operator pos:line="75" pos:column="19">=<pos:position pos:line="75" pos:column="20"/></operator> <name pos:line="75" pos:column="21">il<pos:position pos:line="75" pos:column="23"/></name></expr>;<pos:position pos:line="75" pos:column="24"/></expr_stmt></block></else></if>
  <expr_stmt><expr><operator pos:line="76" pos:column="3">*<pos:position pos:line="76" pos:column="4"/></operator><name pos:line="76" pos:column="4">tail<pos:position pos:line="76" pos:column="8"/></name> <operator pos:line="76" pos:column="9">=<pos:position pos:line="76" pos:column="10"/></operator> <name pos:line="76" pos:column="11">il<pos:position pos:line="76" pos:column="13"/></name></expr>;<pos:position pos:line="76" pos:column="14"/></expr_stmt>

  <return pos:line="78" pos:column="3">return <expr><literal type="number" pos:line="78" pos:column="10">0<pos:position pos:line="78" pos:column="11"/></literal></expr>;<pos:position pos:line="78" pos:column="12"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

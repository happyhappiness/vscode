<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_904_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">conn_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">size<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">nconn<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">void<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">data<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">netinfo_header<pos:position pos:line="7" pos:column="24"/></name></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">header<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">netinfo_conn<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">conn<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">conn_reset_port_entry<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">()<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">size<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <call><name pos:line="12" pos:column="10">netinfo<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">NETINFO_TCP<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="31">0<pos:position pos:line="12" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="34">0<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="37">0<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">size<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">&lt;<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="14">0<pos:position pos:line="13" pos:column="15"/></literal></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16">
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ERROR<pos:position pos:line="15" pos:column="10"/></name> <argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="string" pos:line="15" pos:column="12">"tcpconns plugin: netinfo failed return: %i"<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="58">size<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">size<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">==<pos:position pos:line="19" pos:column="14"/></operator> <literal type="number" pos:line="19" pos:column="15">0<pos:position pos:line="19" pos:column="16"/></literal></expr>)<pos:position pos:line="19" pos:column="17"/></condition><then pos:line="19" pos:column="17">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">0<pos:position pos:line="20" pos:column="14"/></literal><operator pos:line="20" pos:column="14">)<pos:position pos:line="20" pos:column="15"/></operator></expr>;<pos:position pos:line="20" pos:column="16"/></return></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">(<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">size<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">-<pos:position pos:line="22" pos:column="14"/></operator> <sizeof pos:line="22" pos:column="15">sizeof <argument_list pos:line="22" pos:column="22">(<argument><expr pos:line="22" pos:column="23">struct <name pos:line="22" pos:column="30">netinfo_header<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></sizeof><operator pos:line="22" pos:column="45">)<pos:position pos:line="22" pos:column="46"/></operator> <operator pos:line="22" pos:column="47">%<pos:position pos:line="22" pos:column="48"/></operator> <sizeof pos:line="22" pos:column="49">sizeof <argument_list pos:line="22" pos:column="56">(<argument><expr pos:line="22" pos:column="57">struct <name pos:line="22" pos:column="64">netinfo_conn<pos:position pos:line="22" pos:column="76"/></name></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></sizeof></expr>)<pos:position pos:line="22" pos:column="78"/></condition><then pos:line="22" pos:column="78">
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">ERROR<pos:position pos:line="24" pos:column="10"/></name> <argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="string" pos:line="24" pos:column="12">"tcpconns plugin: invalid buffer size"<pos:position pos:line="24" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><operator pos:line="25" pos:column="13">-<pos:position pos:line="25" pos:column="14"/></operator><literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal><operator pos:line="25" pos:column="15">)<pos:position pos:line="25" pos:column="16"/></operator></expr>;<pos:position pos:line="25" pos:column="17"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="28" pos:column="3">data<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <call><name pos:line="28" pos:column="10">malloc<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">size<pos:position pos:line="28" pos:column="21"/></name></expr></argument>)<pos:position pos:line="28" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">data<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">==<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">NULL<pos:position pos:line="29" pos:column="19"/></name></expr>)<pos:position pos:line="29" pos:column="20"/></condition><then pos:line="29" pos:column="20">
  <block pos:line="30" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ERROR<pos:position pos:line="31" pos:column="10"/></name> <argument_list pos:line="31" pos:column="11">(<argument><expr><literal type="string" pos:line="31" pos:column="12">"tcpconns plugin: malloc failed"<pos:position pos:line="31" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><operator pos:line="32" pos:column="13">-<pos:position pos:line="32" pos:column="14"/></operator><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal><operator pos:line="32" pos:column="15">)<pos:position pos:line="32" pos:column="16"/></operator></expr>;<pos:position pos:line="32" pos:column="17"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><call><name pos:line="35" pos:column="7">netinfo<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">NETINFO_TCP<pos:position pos:line="35" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="28">data<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="34">&amp;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="35">size<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="41">0<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call> <operator pos:line="35" pos:column="44">&lt;<pos:position pos:line="35" pos:column="48"/></operator> <literal type="number" pos:line="35" pos:column="46">0<pos:position pos:line="35" pos:column="47"/></literal></expr>)<pos:position pos:line="35" pos:column="48"/></condition><then pos:line="35" pos:column="48">
  <block pos:line="36" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">ERROR<pos:position pos:line="37" pos:column="10"/></name> <argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="string" pos:line="37" pos:column="12">"tcpconns plugin: netinfo failed"<pos:position pos:line="37" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">free<pos:position pos:line="38" pos:column="9"/></name><argument_list pos:line="38" pos:column="9">(<argument><expr><name pos:line="38" pos:column="10">data<pos:position pos:line="38" pos:column="14"/></name></expr></argument>)<pos:position pos:line="38" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="16"/></expr_stmt>
    <return pos:line="39" pos:column="5">return <expr><operator pos:line="39" pos:column="12">(<pos:position pos:line="39" pos:column="13"/></operator><operator pos:line="39" pos:column="13">-<pos:position pos:line="39" pos:column="14"/></operator><literal type="number" pos:line="39" pos:column="14">1<pos:position pos:line="39" pos:column="15"/></literal><operator pos:line="39" pos:column="15">)<pos:position pos:line="39" pos:column="16"/></operator></expr>;<pos:position pos:line="39" pos:column="17"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="42" pos:column="3">header<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator>struct <name pos:line="42" pos:column="20">netinfo_header<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">*<pos:position pos:line="42" pos:column="36"/></operator><operator pos:line="42" pos:column="36">)<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="37">data<pos:position pos:line="42" pos:column="41"/></name></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name pos:line="43" pos:column="3">nconn<pos:position pos:line="43" pos:column="8"/></name> <operator pos:line="43" pos:column="9">=<pos:position pos:line="43" pos:column="10"/></operator> <name><name pos:line="43" pos:column="11">header<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">-&gt;<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="19">size<pos:position pos:line="43" pos:column="23"/></name></name></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="44" pos:column="3">conn<pos:position pos:line="44" pos:column="7"/></name> <operator pos:line="44" pos:column="8">=<pos:position pos:line="44" pos:column="9"/></operator> <operator pos:line="44" pos:column="10">(<pos:position pos:line="44" pos:column="11"/></operator>struct <name pos:line="44" pos:column="18">netinfo_conn<pos:position pos:line="44" pos:column="30"/></name> <operator pos:line="44" pos:column="31">*<pos:position pos:line="44" pos:column="32"/></operator><operator pos:line="44" pos:column="32">)<pos:position pos:line="44" pos:column="33"/></operator><operator pos:line="44" pos:column="33">(<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="34">data<pos:position pos:line="44" pos:column="38"/></name> <operator pos:line="44" pos:column="39">+<pos:position pos:line="44" pos:column="40"/></operator> <sizeof pos:line="44" pos:column="41">sizeof<argument_list pos:line="44" pos:column="47">(<argument><expr pos:line="44" pos:column="48">struct <name pos:line="44" pos:column="55">netinfo_header<pos:position pos:line="44" pos:column="69"/></name></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></sizeof><operator pos:line="44" pos:column="70">)<pos:position pos:line="44" pos:column="71"/></operator></expr>;<pos:position pos:line="44" pos:column="72"/></expr_stmt>

  <for pos:line="46" pos:column="3">for <control pos:line="46" pos:column="7">(<init><expr><name pos:line="46" pos:column="8">i<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator><literal type="number" pos:line="46" pos:column="10">0<pos:position pos:line="46" pos:column="11"/></literal></expr>;<pos:position pos:line="46" pos:column="12"/></init> <condition><expr><name pos:line="46" pos:column="13">i<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">&lt;<pos:position pos:line="46" pos:column="19"/></operator> <name pos:line="46" pos:column="17">nconn<pos:position pos:line="46" pos:column="22"/></name></expr>;<pos:position pos:line="46" pos:column="23"/></condition> <incr><expr><name pos:line="46" pos:column="24">conn<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">++<pos:position pos:line="46" pos:column="30"/></operator></expr><operator pos:line="46" pos:column="30">,<pos:position pos:line="46" pos:column="31"/></operator> <expr><name pos:line="46" pos:column="32">i<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">++<pos:position pos:line="46" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="46" pos:column="36"/></control>
  <block pos:line="47" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">conn_handle_ports<pos:position pos:line="48" pos:column="22"/></name> <argument_list pos:line="48" pos:column="23">(<argument><expr><name><name pos:line="48" pos:column="24">conn<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">srcport<pos:position pos:line="48" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="39">conn<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">-&gt;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="45">dstport<pos:position pos:line="48" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="54">conn<pos:position pos:line="48" pos:column="58"/></name><operator pos:line="48" pos:column="58">-&gt;<pos:position pos:line="48" pos:column="63"/></operator><name pos:line="48" pos:column="60">tcp_state<pos:position pos:line="48" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="71"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="51" pos:column="3">free<pos:position pos:line="51" pos:column="7"/></name><argument_list pos:line="51" pos:column="7">(<argument><expr><name pos:line="51" pos:column="8">data<pos:position pos:line="51" pos:column="12"/></name></expr></argument>)<pos:position pos:line="51" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="14"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="53" pos:column="3">conn_submit_all<pos:position pos:line="53" pos:column="18"/></name> <argument_list pos:line="53" pos:column="19">()<pos:position pos:line="53" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt>

  <return pos:line="55" pos:column="3">return <expr><operator pos:line="55" pos:column="10">(<pos:position pos:line="55" pos:column="11"/></operator><literal type="number" pos:line="55" pos:column="11">0<pos:position pos:line="55" pos:column="12"/></literal><operator pos:line="55" pos:column="12">)<pos:position pos:line="55" pos:column="13"/></operator></expr>;<pos:position pos:line="55" pos:column="14"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

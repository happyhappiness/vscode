<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2707_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">value_list_t<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type>
<name pos:line="2" pos:column="1">plugin_value_list_clone<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">value_list_t<pos:position pos:line="2" pos:column="37"/></name> <specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">vl_orig<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list> <comment type="block" pos:line="2" pos:column="54">/* {{{ */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">value_list_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">vl<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">vl_orig<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">==<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">)<pos:position pos:line="7" pos:column="18"/></operator></expr>;<pos:position pos:line="7" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="9" pos:column="3">vl<pos:position pos:line="9" pos:column="5"/></name> <operator pos:line="9" pos:column="6">=<pos:position pos:line="9" pos:column="7"/></operator> <call><name pos:line="9" pos:column="8">malloc<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><sizeof pos:line="9" pos:column="15">sizeof<argument_list pos:line="9" pos:column="21">(<argument><expr><operator pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">vl<pos:position pos:line="9" pos:column="25"/></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">vl<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">==<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">NULL<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">)<pos:position pos:line="11" pos:column="18"/></operator></expr>;<pos:position pos:line="11" pos:column="19"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">memcpy<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><name pos:line="12" pos:column="10">vl<pos:position pos:line="12" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="14">vl_orig<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="23">sizeof<argument_list pos:line="12" pos:column="29">(<argument><expr><operator pos:line="12" pos:column="30">*<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">vl<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">vl<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">host<pos:position pos:line="14" pos:column="15"/></name><index pos:line="14" pos:column="15">[<expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>]<pos:position pos:line="14" pos:column="18"/></index></name> <operator pos:line="14" pos:column="19">==<pos:position pos:line="14" pos:column="21"/></operator> <literal type="number" pos:line="14" pos:column="22">0<pos:position pos:line="14" pos:column="23"/></literal></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">sstrncpy<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name><name pos:line="15" pos:column="14">vl<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">host<pos:position pos:line="15" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="24">hostname_g<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="36">sizeof<argument_list pos:line="15" pos:column="42">(<argument><expr><name><name pos:line="15" pos:column="43">vl<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">host<pos:position pos:line="15" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="17" pos:column="3">vl<pos:position pos:line="17" pos:column="5"/></name><operator pos:line="17" pos:column="5">-&gt;<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="7">values<pos:position pos:line="17" pos:column="13"/></name></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <call><name pos:line="17" pos:column="16">calloc<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name><name pos:line="17" pos:column="23">vl_orig<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">values_len<pos:position pos:line="17" pos:column="42"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="44">sizeof<argument_list pos:line="17" pos:column="50">(<argument><expr><operator pos:line="17" pos:column="51">*<pos:position pos:line="17" pos:column="52"/></operator><name><name pos:line="17" pos:column="52">vl<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">values<pos:position pos:line="17" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name><name pos:line="18" pos:column="7">vl<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">values<pos:position pos:line="18" pos:column="17"/></name></name> <operator pos:line="18" pos:column="18">==<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">NULL<pos:position pos:line="18" pos:column="25"/></name></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26"> <block pos:line="18" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">plugin_value_list_free<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">vl<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">NULL<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">)<pos:position pos:line="20" pos:column="18"/></operator></expr>;<pos:position pos:line="20" pos:column="19"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">memcpy<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><name><name pos:line="22" pos:column="10">vl<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">values<pos:position pos:line="22" pos:column="20"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="22">vl_orig<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">-&gt;<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="31">values<pos:position pos:line="22" pos:column="37"/></name></name></expr></argument>,
         <argument><expr><name><name pos:line="23" pos:column="10">vl_orig<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">values_len<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">*<pos:position pos:line="23" pos:column="31"/></operator> <sizeof pos:line="23" pos:column="32">sizeof<argument_list pos:line="23" pos:column="38">(<argument><expr><operator pos:line="23" pos:column="39">*<pos:position pos:line="23" pos:column="40"/></operator><name><name pos:line="23" pos:column="40">vl<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">-&gt;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="44">values<pos:position pos:line="23" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="25" pos:column="3">vl<pos:position pos:line="25" pos:column="5"/></name><operator pos:line="25" pos:column="5">-&gt;<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="7">meta<pos:position pos:line="25" pos:column="11"/></name></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">meta_data_clone<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name><name pos:line="25" pos:column="30">vl<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">meta<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><operator pos:line="26" pos:column="7">(<pos:position pos:line="26" pos:column="8"/></operator><name><name pos:line="26" pos:column="8">vl_orig<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">meta<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">!=<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">NULL<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">)<pos:position pos:line="26" pos:column="30"/></operator> <operator pos:line="26" pos:column="31">&amp;&amp;<pos:position pos:line="26" pos:column="41"/></operator> <operator pos:line="26" pos:column="34">(<pos:position pos:line="26" pos:column="35"/></operator><name><name pos:line="26" pos:column="35">vl<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">meta<pos:position pos:line="26" pos:column="43"/></name></name> <operator pos:line="26" pos:column="44">==<pos:position pos:line="26" pos:column="46"/></operator> <name pos:line="26" pos:column="47">NULL<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">)<pos:position pos:line="26" pos:column="52"/></operator></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53"> <block pos:line="26" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">plugin_value_list_free<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">vl<pos:position pos:line="27" pos:column="30"/></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">NULL<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">)<pos:position pos:line="28" pos:column="18"/></operator></expr>;<pos:position pos:line="28" pos:column="19"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name><name pos:line="31" pos:column="7">vl<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">time<pos:position pos:line="31" pos:column="15"/></name></name> <operator pos:line="31" pos:column="16">==<pos:position pos:line="31" pos:column="18"/></operator> <literal type="number" pos:line="31" pos:column="19">0<pos:position pos:line="31" pos:column="20"/></literal></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="5">vl<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">time<pos:position pos:line="32" pos:column="13"/></name></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">cdtime<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">()<pos:position pos:line="32" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="34" pos:column="3">/* Fill in the interval from the thread context, if it is zero. */</comment>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name><name pos:line="35" pos:column="7">vl<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">-&gt;<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="11">interval<pos:position pos:line="35" pos:column="19"/></name></name> <operator pos:line="35" pos:column="20">==<pos:position pos:line="35" pos:column="22"/></operator> <literal type="number" pos:line="35" pos:column="23">0<pos:position pos:line="35" pos:column="24"/></literal></expr>)<pos:position pos:line="35" pos:column="25"/></condition><then pos:line="35" pos:column="25"> <block pos:line="35" pos:column="26">{
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">plugin_ctx_t<pos:position pos:line="36" pos:column="17"/></name></type> <name pos:line="36" pos:column="18">ctx<pos:position pos:line="36" pos:column="21"/></name> <init pos:line="36" pos:column="22">= <expr><call><name pos:line="36" pos:column="24">plugin_get_ctx<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">()<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="41"/></decl_stmt>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">ctx<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">.<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">interval<pos:position pos:line="38" pos:column="21"/></name></name> <operator pos:line="38" pos:column="22">!=<pos:position pos:line="38" pos:column="24"/></operator> <literal type="number" pos:line="38" pos:column="25">0<pos:position pos:line="38" pos:column="26"/></literal></expr>)<pos:position pos:line="38" pos:column="27"/></condition><then pos:line="38" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="7">vl<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">-&gt;<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="11">interval<pos:position pos:line="39" pos:column="19"/></name></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <name><name pos:line="39" pos:column="22">ctx<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">.<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="26">interval<pos:position pos:line="39" pos:column="34"/></name></name></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt></block></then>
    <else pos:line="40" pos:column="5">else <block pos:line="40" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="41" pos:column="7">char<pos:position pos:line="41" pos:column="11"/></name></type> <name><name pos:line="41" pos:column="12">name<pos:position pos:line="41" pos:column="16"/></name><index pos:line="41" pos:column="16">[<expr><literal type="number" pos:line="41" pos:column="17">6<pos:position pos:line="41" pos:column="18"/></literal> <operator pos:line="41" pos:column="19">*<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">DATA_MAX_NAME_LEN<pos:position pos:line="41" pos:column="38"/></name></expr>]<pos:position pos:line="41" pos:column="39"/></index></name></decl>;<pos:position pos:line="41" pos:column="40"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">FORMAT_VL<pos:position pos:line="42" pos:column="16"/></name><argument_list pos:line="42" pos:column="16">(<argument><expr><name pos:line="42" pos:column="17">name<pos:position pos:line="42" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="23">sizeof<argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">name<pos:position pos:line="42" pos:column="34"/></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="42" pos:column="37">vl<pos:position pos:line="42" pos:column="39"/></name></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">ERROR<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><literal type="string" pos:line="43" pos:column="13">"plugin_value_list_clone: Unable to determine "<pos:position pos:line="43" pos:column="60"/></literal>
            <literal type="string" pos:line="44" pos:column="13">"interval from context for "<pos:position pos:line="44" pos:column="41"/></literal>
            <literal type="string" pos:line="45" pos:column="13">"value list \"%s\". "<pos:position pos:line="45" pos:column="34"/></literal>
            <literal type="string" pos:line="46" pos:column="13">"This indicates a broken plugin. "<pos:position pos:line="46" pos:column="47"/></literal>
            <literal type="string" pos:line="47" pos:column="13">"Please report this problem to the "<pos:position pos:line="47" pos:column="49"/></literal>
            <literal type="string" pos:line="48" pos:column="13">"collectd mailing list or at "<pos:position pos:line="48" pos:column="43"/></literal>
            <literal type="string" pos:line="49" pos:column="13">"&lt;http://collectd.org/bugs/&gt;."<pos:position pos:line="49" pos:column="49"/></literal></expr></argument>,
            <argument><expr><name pos:line="50" pos:column="13">name<pos:position pos:line="50" pos:column="17"/></name></expr></argument>)<pos:position pos:line="50" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="51" pos:column="7">vl<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">-&gt;<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="11">interval<pos:position pos:line="51" pos:column="19"/></name></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <call><name pos:line="51" pos:column="22">cf_get_default_interval<pos:position pos:line="51" pos:column="45"/></name><argument_list pos:line="51" pos:column="45">()<pos:position pos:line="51" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></else></if>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <return pos:line="55" pos:column="3">return <expr><operator pos:line="55" pos:column="10">(<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">vl<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">)<pos:position pos:line="55" pos:column="14"/></operator></expr>;<pos:position pos:line="55" pos:column="15"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/ChangeLog /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/ChangeLog
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/ChangeLog	2016-07-26 13:56:09.805207954 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/ChangeLog	2016-11-29 00:08:22.379470177 +0800
@@ -1,6 +1,58 @@
+2016-11-28, Version 5.5.3
+	* collectd: Write threads are stopped before shutdown callbacks are
+	  called. Thanks to Florian Forster. #1110
+	* collectd: A compile error on AIX has been fixed: "MSG_DONTWAIT" is not
+	  available on AIX. Thanks to Chao Yang.
+	* libcollectdclient: Lines printed to "STDERR" are now guarded by the
+	  environment variable "COLLECTD_TRACE". Thanks to Florian Forster. #105
+	* collectd.conf(5): Various typos have been fixed. Thanks to Marc
+	  Fournier.
+	* Build system: Detection of the Java environment has been made
+	  deterministic to allow for reproducible builds. Thanks to Marc
+	  Fournier. #1523
+	* APC UPS plugin: Unavailable metrics are now skipped instead of
+	  reported as 0 (zero). Thanks to Florian Forster. #2025
+	* Battery plugin: The minimum value has been removed from the power type
+	  to allow the plugin to report discharging batteries as negative power.
+	  Thanks to Florian Forster.
+	* DBI, Oracle and PostgreSQL plugins: An error message when the type
+	  instance is truncated has been added. Thanks to Florian Forster. #4
+	* cURL-JSON plugin: A possible segmentation fault when parsing
+	  unexpected JSON has been fixed. Thanks to Florian Forster. #1896
+	* DF plugin: Compilation with xfsprogs ≥ 4.7.0 has been fixed. Thanks
+	  to Thomas Deutschmann. #1877
+	* Modbus plugin: Build issues on FreeBSD have been fixed. Thanks to
+	  Florian Forster.
+	* Network plugin: An error message has been corrected. Thanks to Florian
+	  Forster.
+	* Network plugin: Handling of errors form secure memory initialization
+	  has been improved: the plugin fails gracefully now instead of calling
+	  "abort()". Thanks to Sebastian Harl.
+	* Network plugin: The gcrypt library is only initialized when it is
+	  actually required due to the network plugin's configuration. Thanks to
+	  Florian Forster. #1902
+	* Ping plugin: The init callback has been changed to be idempotent,
+	  fixing errors being reported on Solaris. Thanks to Florian Forster.
+	  #869
+	* PostgreSQL plugin: The query_plans and query_plans_by_table queries
+	  have been improved to return 0 (zero) instead of "NULL" when not
+	  available. Thanks to Bernd Zeimetz. #1905
+	* PowerDNS plugin: The "recursor command" has been fixed so PowerDNS can
+	  correctly parse all requested fields. Thanks to Ruben Kerkhof.
+	* Python plugin: Handling of data sets with multiple data sources of
+	  different type has been fixed. Thanks to Sebastian Harl.
+	* RRDCacheD plugin: Reconnection behavior after failed operations has
+	  been added. Thanks to Sebastian Harl. Debian#657877
+	* Write Graphite and AMQP plugins: A bug that could lead to a missing
+	  null-termination has been fixed. Thanks to Markus Linnala.
+	* Write Kafka plugin: Support for librdkafka 0.9.0 has been added.
+	  Thanks to Florian Forster.
+	* Write Riemann plugin: Build issues on Solaris have been fixed. Thanks
+	  to Florian Forster.
+
 2016-07-25, Version 5.5.2
 	* collectd: A division by zero has been fixed in the
 	  "plugin_dispatch_multivalue()" function. Thanks to Corey Kosak.
 	* collectd: The address of the Free Software Foundation has been fixed
 	  in GPL license headers. Thanks to Ruben Kerkhof.
 	* Build system: Detection and handling of librrd 1.6 and later has been
@@ -25,16 +77,12 @@
 	* Network plugin: A heap overflow has been fixed in the server code.
 	  This issue can be triggered remotely and is potentially exploitable.
 	  Thanks to Emilien Gaspar. CVE-2016-6254
 	* Perl plugin: Init callbacks have been changed to run essentially
 	  single-threaded to avoid race conditions by init functions which
 	  create additional threads. Thanks to Pavel Rochnyack. #1706
-	* Processes plugin: A compilation error on systems without "regex.h" has
-	  been fixed. Thanks to Corey Kosak.
-	* Processes plugin: A memory leak on Solaris has been fixed. Thanks to
-	  Jim Quinn.
 	* Processes plugin: A warning about too long process names has been
 	  added. Thanks to Marc Fournier. #1284
 	* Redis plugin: A memory leak in an error handling code path has been
 	  fixed. Thanks to Andrés J. Díaz.
 	* Redis plugin: The data source type of the expired_keys metric has been
 	  corrected to "DERIVE". Thanks to Marc Falzon and Marc Fournier. #1483.
@@ -398,12 +446,190 @@
 	  Young, Michael Schenck and Pierre-Yves Ritschard. #703, #772, #945
 	* ZFS ARC plugin: Support for ZFS-on-Linux has been added. Thanks to
 	  Marc Fournier and Wilfried Goesgens. #552
 	* Zookeeper plugin: This new plugin reads data from the Apache Zookeeper
 	  "MNTR" command. Thanks to Jeremy Katz. #826
 
+2016-07-26, Version 5.4.3
+	* Build system: A deprecation warning has been removed. Thanks to
+	  Florian Forster.
+	* Build system: An ordering issue when build the AMQP plugin was
+	  corrected. Thanks to Shahul Hameed.
+	* Build system: Building the gmond plugin against recent libganglia
+	  versions has been added. Thanks to Marc Fournier. #1129
+	* Build system: "collectd-tg" now builds on AIX. Thanks to Manuel Luis
+	  Sanmartín Rozada. #542
+	* Build system: "version-gen.sh" portablility was improved. Thanks to
+	  Marc Fournier and Ruben Kerkhof.
+	* Build system: Compiling utils_dns.c on Solaris has beed fixed. Thanks
+	  to Yves Mettier, Dagobert Michelsen and Florian Forster. #348
+	* Build system: Default JDK detection got improved. Thanks to Ruben
+	  Kerkhof and Marc Fournier.
+	* Build system: Detection and handling of librrd 1.6 and later has been
+	  fixed. Thanks to Ruben Kerkhof.
+	* Build system: notify_email build options got corrected to make it
+	  build on non-GNU libc systems. Thanks to Marc Fournier.
+	* Build system: Protobuf building and logging has been improved. Thanks
+	  to Ruben Kerkhof.
+	* Build system: The "make distcheck" target was fixed to properly handle
+	  java build artifacts. Thanks to Florian Forster.
+	* Build system: The configure script got fixed to work properly when
+	  called with "CC="gcc -Wall -Werror"" . Thanks to Marc Fournier.
+	* Build system: The configure script will now fail if pkg-config isn't
+	  available. Thanks to Ruben Kerkhof.
+	* Build system: The users plugin now builds properly on Solaris when
+	  libstatgrab is available. Thanks to Dagobert Michelsen. #1061
+	* Build system: Various fixes have been done to improve library
+	  detection on FreeBSD. Thanks to Ruben Kerkhof.
+	* collectd2html: Several perl errors have been corrected. Thanks to Ruud
+	  van Melick. #1103
+	* collectd: A global gauge format-string is now used to avoid loss of
+	  precision. Thanks to Florian Forster. #1039
+	* collectd: A race condition at plugin initialization time was fixed.
+	  Thanks to Jan Andres. #1316
+	* collectd: Autoloading now properly sets plugin context, allowing
+	  plugins to determine the interval. Thanks to Florian Forster. #1069
+	* collectd: Empty "Plugin" blocks are now supported by the configuration
+	  file parser. Thanks to Manuel Luis Sanmartín Rozada. #1035
+	* collectd: The address of the Free Software Foundation has been fixed
+	  in GPL license headers. Thanks to Ruben Kerkhof.
+	* collectd: Writing to a closed TCP socket is now properly handled.
+	  Thanks to Tamás Földesi. #1104
+	* Documentation: iptables plugin: IPv6 configuration option has been
+	  added to the collectd.conf(5) manpage. Thanks to 'Marc Fournier''.
+	  #1496
+	* AMQP plugin: The plugin was fixed to build against librabbitmq 0.6.0.
+	  Thanks to Remi Collet. #1008
+	* Apache plugin: A warning about a possible misconfiguration has been
+	  added. Thanks to Marc Fournier.
+	* Apache plugin: The plugin was extended to parse the whole response,
+	  required to support Apache versions greater than 2.4.17. Thanks to
+	  Marc Fournier and Florian Forster. #1170, #1343
+	* APC UPS plugin: Log messages are now prefixed with the plugin name.
+	  Thanks to Sergey. #1329
+	* Bind plugin: The type_instance now gets properly sanitized. Thanks to
+	  Thomas Kho. #992
+	* CPU plugin: Error messages on MacOSX have been improved. Thanks to
+	  Florian Forster. #22
+	* cURL plugin: A typo in an error message got corrected. Thanks to Marc
+	  Fournier.
+	* cURL, cURL-JSON and cURL-XML plugins: A memory leak when allocating
+	  more memory fails has been fixed. Thanks to Brandon Arp.
+	* DF plugin: An bug preventing filesystems which don't report inodes
+	  such as btrfs has been corrected. Thanks to Marek Becka. #1096
+	* DF plugin: Duplicate entries are no longer reported twice. Thanks to
+	  Stefan Brüns and Florian Forster. #1402
+	* DF plugin: Legacy code for skipping "rootfs" mount points has been
+	  removed. Thanks to Marc Fournier. #1402
+	* DF plugin: Legacy references to the "ReportReserved" option have been
+	  removed. Thanks to Marc Fournier.
+	* DF plugin: Reading the mtab now uses a reentrant function when
+	  possible. Thanks to Ruben Kerkhof. #1163
+	* Ethstat plugin: Code to strip leading whitespace from device names.
+	  This works around an issue in the VMXNet3 driver. Thanks to Thomas
+	  Guthmann. #1059
+	* Exec plugin: A file descriptor leak when the plugin is configured to
+	  run as a non-existing user was corrected. Thanks to Gautam BT and Marc
+	  Fournier. #762
+	* Exec plugin: A problem in the error handling of an fdopen() failure
+	  has been fixed. Thanks to @ciomaire.
+	* Interface plugin: Documentation about regular expressions in the
+	  ignore list has been added. Thanks to Jakub Jankowski.
+	* IRQ plugin: The "FIQ" line is now skipped as it doesn't contain any
+	  counter. Thanks to Ruben Kerkhof. #971
+	* Modbus plugin: The debug output has been disabled by default. It is
+	  now only enabled when building with "--enable-debug". Thanks to Eric
+	  Sandeen and Marc Fournier.
+	* MongoDB plugin: A memory leak has been fixed and some adaptations to
+	  the current API of the mongo-c-driver have been made. Thanks to
+	  Florian Forster. #956
+	* Network plugin: A check for the initialization of secure memory has
+	  been added. Previously, failure to initialize this memory was ignored.
+	  Thanks to @yujokang. #1665
+	* Network plugin: A heap overflow has been fixed in the server code.
+	  This issue can be triggered remotely and is potentially exploitable.
+	  Thanks to Emilien Gaspar. CVE-2016-6254
+	* Network plugin: The TimeToLive option handling was made more robust.
+	  Thanks to Tim Laszlo. #654
+	* NTPd plugin: Documentation about the required "mode 7" has been added.
+	  Thanks to Jakub Jankowski.
+	* NTPd plugin: Reporting of "time_offset-loop" was corrected to match
+	  the values from ntpq/ntpdc. Thanks to Pierre Fersing and Florian
+	  Forster. #1300
+	* OpenVPN plugin: The plugin was fixe to avoid signaling an error when
+	  no clients were connected. Thanks to Florian Forster. #731
+	* Perl plugin: Init callbacks have been changed to run essentially
+	  single-threaded to avoid race conditions by init functions which
+	  create additional threads. Thanks to Pavel Rochnyack. #1706
+	* PF plugin and DNS plugin: These plugins have been fixed to build
+	  properly on OpenBSD again. Thanks to Ruben Kerkhof.
+	* Processes plugin: A compilation error on systems without "regex.h" has
+	  been fixed. Thanks to Corey Kosak.
+	* Processes plugin: A memory leak on Solaris has been fixed. Thanks to
+	  Jim Quinn.
+	* Processes plugin and Swap plugin: These plugins have been corrected to
+	  also work inside FreeBSD jails. Thanks to biancalana. #1019
+	* Processes plugin: A warning about too long process names has been
+	  added. Thanks to Marc Fournier. #1284
+	* Processes plugin: Process counting on the FreeBSD and OpenBSD
+	  platforms has been fixed. Thanks to Herve COMMOWICK. #1298
+	* Processes plugin: The plugin was fixed to work properly on Solaris.
+	  Thanks to Jan Andres. #919
+	* Python plugin: A double-free bug got fixed. Thanks to Sven Trenkel.
+	  #1285
+	* RRDtool plugin: A race condition leading to corrupt RRD file creation
+	  has been fixed. Thanks to Manuel Luis Sanmartín Rozada. #1031
+	* SNMP plugin: The "Gauge32" signedness was corrected to match RFC1902.
+	  Thanks to Nathan Ward. #1325
+	* StatsD plugin: A deadlock on plugin shutdown has been fixed. Thanks to
+	  Pavel Rochnyack #1703
+	* StatsD plugin: A memory leak was corrected. Thanks to Florian Forster.
+	  #997
+	* StatsD plugin: A symbol lookup error was fixed by properly linking the
+	  plugin against libm. Thanks to Florian Forster.
+	* StatsD plugin: "utils_latency": Support for including values above
+	  1000 in percentile calculation has been added. Thanks to Yoga
+	  Ramalingam. #401
+	* StatsD plugin: "utils_latency": Two division by zero error conditions
+	  have been corrected. Thanks to Wilfried Goesgens. #655
+	* StatsD plugin: Counters absolute counts are now also reported. Thanks
+	  to Pierre-Yves Ritschard. #1311
+	* StatsD plugin: The plugin now emits NaN values when no timer event is
+	  recorded. Thanks to Florian Forster. #1038, #1039
+	* StatsD plugin: The plugin was corrected to avoid crashing when
+	  negative timer values are submitted. Thanks to Florian Forster. #1131
+	* Tail CSV plugin: The plugin was fixed to work properly with multiple
+	  "Collect" options and a bug got fixed when no "TimeFrom" is specified.
+	  Thanks to Manuel Luis Sanmartín Rozada and Florian Forster. #1032
+	* TCPConns plugin: A memory leak was fixed. Thanks to Florian Forster.
+	  #1074
+	* TCPConns plugin: An bug causing collectd to enter an inifinite loop on
+	  OpenBSD was fixed. Thanks to Landry Breuil. #1094
+	* Threshold plugin: Threshold configuration blocks can now be defined in
+	  different files. Thanks to Michael Salmon. #551
+	* vmem plugin: Support for pgsteal in recent Linux kernels has been
+	  added. Thanks to Jakub Jankowski. #1307
+	* vmem plugin: The DSType for nr_dirtied and nr_written was corrected to
+	  report a derive. Thanks to Marek Becka. #1072
+	* Write Graphite plugin: Error handling when submitting metrics to the
+	  server is now more robust. Thanks to Sam Pointer. #1364
+	* Write HTTP plugin: Freeing of memory holding HTTP headers during
+	  shutdown has been fixed. Thanks to Tolga Ceylan.
+	* Write Redis plugin: Multi-Valued key was made easier to parse by
+	  adding a "|" character as a delimiter. Thanks to brianpkelly and
+	  Florian Forster. #1070
+	* Write Redis plugin: The timestamp format was corrected. Thanks to
+	  Florian Forster.
+	* ZFS ARC plugin: The plugin was will not emit warning about missing
+	  "l2_size" stats anymore. Thanks to Jan Andres. #919
+	* 152 patches have been applied to numerous plugins and core components,
+	  fixing various programming errors which were reported by scan-build,
+	  libasan, FBInfer, coverity-scan, clang and gcc-6: Thanks to Ruben
+	  Kerkhof, Florian Forster, Marc Fournier, Corey Kosak, Laurent,
+	  Claudius Zingerli and Fabien Wernli.
+
 2015-02-26, Version 5.4.2
 	* Build system: Numerous fixes. Thanks to Bjørn Nordbø, Jim Radford,
 	  KOMEDA Shinji, Lauri Tirkkonen, Manuel Luis Sanmartin Rozada, Marc
 	  Fournier, Rainer Müller, Yoga Ramalingam and Yves Mettier. #326,
 	  #373, #653, #828
 	* collectd: A use-after-free has been fixed in the "parse_value()"
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2: compile
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2: config.guess
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2: config.sub
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/configure	2016-07-26 13:58:56.909743809 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/configure	2016-11-29 00:09:18.624058221 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for collectd 5.5.2.
+# Generated by GNU Autoconf 2.69 for collectd 5.5.3.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
 #
 #
 # This configure script is free software; the Free Software Foundation
@@ -588,14 +588,14 @@
 MFLAGS=
 MAKEFLAGS=
 
 # Identity of this package.
 PACKAGE_NAME='collectd'
 PACKAGE_TARNAME='collectd'
-PACKAGE_VERSION='5.5.2'
-PACKAGE_STRING='collectd 5.5.2'
+PACKAGE_VERSION='5.5.3'
+PACKAGE_STRING='collectd 5.5.3'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
 ac_unique_file="src/"
 : "${ARFLAGS=cr} ${AR_FLAGS=cr}"
 # Factoring default headers for most tests.
@@ -2070,13 +2070,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures collectd 5.5.2 to adapt to many kinds of systems.
+\`configure' configures collectd 5.5.3 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -2140,13 +2140,13 @@
   --host=HOST       cross-compile to build programs to run on HOST [BUILD]
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of collectd 5.5.2:";;
+     short | recursive ) echo "Configuration of collectd 5.5.3:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-option-checking  ignore unrecognized --enable/--with options
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
@@ -2502,13 +2502,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-collectd configure 5.5.2
+collectd configure 5.5.3
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
 _ACEOF
@@ -3078,13 +3078,13 @@
 
 } # ac_fn_c_check_member
 cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by collectd $as_me 5.5.2, which was
+It was created by collectd $as_me 5.5.3, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 exec 5>>config.log
@@ -13549,13 +13549,13 @@
   fi
 fi
 
 
 # Define the identity of the package.
  PACKAGE='collectd'
- VERSION='5.5.2'
+ VERSION='5.5.3'
 
 
 cat >>confdefs.h <<_ACEOF
 #define PACKAGE "$PACKAGE"
 _ACEOF
 
@@ -16513,12 +16513,24 @@
 else
   have_linux_raid_md_u_h="no"
 fi
 
 done
 
+	for ac_header in sys/sysmacros.h
+do :
+  ac_fn_c_check_header_mongrel "$LINENO" "sys/sysmacros.h" "ac_cv_header_sys_sysmacros_h" "$ac_includes_default"
+if test "x$ac_cv_header_sys_sysmacros_h" = xyes; then :
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_SYS_SYSMACROS_H 1
+_ACEOF
+
+fi
+
+done
+
 else
 	have_linux_raid_md_u_h="no"
 fi
 
 # For the swap module
 have_linux_wireless_h="no"
@@ -21649,39 +21661,39 @@
 if test "x$with_java" = "xyes"
 then
 	if test -d "$with_java_home"
 	then
 		{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for jni.h" >&5
 $as_echo_n "checking for jni.h... " >&6; }
-		TMPVAR=`find -L "$with_java_home" -name jni.h -type f -exec 'dirname' '{}' ';' 2>/dev/null | head -n 1`
+		TMPVAR=`find -L "$with_java_home" -name jni.h -type f -exec 'dirname' '{}' ';' 2>/dev/null | LC_ALL=C sort | head -n 1`
 		if test "x$TMPVAR" != "x"
 		then
 			{ $as_echo "$as_me:${as_lineno-$LINENO}: result: found in $TMPVAR" >&5
 $as_echo "found in $TMPVAR" >&6; }
 			JAVA_CPPFLAGS="$JAVA_CPPFLAGS -I$TMPVAR"
 		else
 			{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
 $as_echo "not found" >&6; }
 		fi
 
 		{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for jni_md.h" >&5
 $as_echo_n "checking for jni_md.h... " >&6; }
-		TMPVAR=`find -L "$with_java_home" -name jni_md.h -type f -exec 'dirname' '{}' ';' 2>/dev/null | head -n 1`
+		TMPVAR=`find -L "$with_java_home" -name jni_md.h -type f -exec 'dirname' '{}' ';' 2>/dev/null | LC_ALL=C sort | head -n 1`
 		if test "x$TMPVAR" != "x"
 		then
 			{ $as_echo "$as_me:${as_lineno-$LINENO}: result: found in $TMPVAR" >&5
 $as_echo "found in $TMPVAR" >&6; }
 			JAVA_CPPFLAGS="$JAVA_CPPFLAGS -I$TMPVAR"
 		else
 			{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
 $as_echo "not found" >&6; }
 		fi
 
 		{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for libjvm.so" >&5
 $as_echo_n "checking for libjvm.so... " >&6; }
-		TMPVAR=`find -L "$with_java_home" -type f \( -name libjvm.so -o -name libjvm.dylib \) -exec 'dirname' '{}' ';' 2>/dev/null | head -n 1`
+		TMPVAR=`find -L "$with_java_home" -type f \( -name libjvm.so -o -name libjvm.dylib \) -exec 'dirname' '{}' ';' 2>/dev/null | LC_ALL=C sort | head -n 1`
 		if test "x$TMPVAR" != "x"
 		then
 			{ $as_echo "$as_me:${as_lineno-$LINENO}: result: found in $TMPVAR" >&5
 $as_echo "found in $TMPVAR" >&6; }
 			JAVA_LDFLAGS="$JAVA_LDFLAGS -L$TMPVAR -Wl,-rpath -Wl,$TMPVAR"
 		else
@@ -21690,13 +21702,13 @@
 		fi
 
 		if test "x$JAVAC" = "x"
 		then
 			{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for javac" >&5
 $as_echo_n "checking for javac... " >&6; }
-			TMPVAR=`find -L "$with_java_home" -name javac -type f 2>/dev/null | head -n 1`
+			TMPVAR=`find -L "$with_java_home" -name javac -type f 2>/dev/null | LC_ALL=C sort | head -n 1`
 			if test "x$TMPVAR" != "x"
 			then
 				JAVAC="$TMPVAR"
 				{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $JAVAC" >&5
 $as_echo "$JAVAC" >&6; }
 			else
@@ -21705,13 +21717,13 @@
 			fi
 		fi
 		if test "x$JAR" = "x"
 		then
 			{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for jar" >&5
 $as_echo_n "checking for jar... " >&6; }
-			TMPVAR=`find -L "$with_java_home" -name jar -type f 2>/dev/null | head -n 1`
+			TMPVAR=`find -L "$with_java_home" -name jar -type f 2>/dev/null | LC_ALL=C sort | head -n 1`
 			if test "x$TMPVAR" != "x"
 			then
 				JAR="$TMPVAR"
 				{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $JAR" >&5
 $as_echo "$JAR" >&6; }
 			else
@@ -24939,19 +24951,18 @@
 
   if test "x$with_librdkafka_log_cb" = "xyes"
   then
 
 $as_echo "#define HAVE_LIBRDKAFKA_LOG_CB 1" >>confdefs.h
 
-  fi
-  if test "x$with_librdkafka_logger" = "xyes"
+  else if test "x$with_librdkafka_logger" = "xyes"
   then
 
 $as_echo "#define HAVE_LIBRDKAFKA_LOGGER 1" >>confdefs.h
 
-  fi
+  fi; fi
 fi
 CPPFLAGS="$SAVE_CPPFLAGS"
 LDFLAGS="$SAVE_LDFLAGS"
  if test "x$with_librdkafka" = "xyes"; then
   BUILD_WITH_LIBRDKAFKA_TRUE=
   BUILD_WITH_LIBRDKAFKA_FALSE='#'
@@ -37907,13 +37918,13 @@
 
 cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # Save the log message, to keep $0 and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by collectd $as_me 5.5.2, which was
+This file was extended by collectd $as_me 5.5.3, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -37973,13 +37984,13 @@
 Report bugs to the package provider."
 
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-collectd config.status 5.5.2
+collectd config.status 5.5.3
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/configure.ac	2016-07-26 13:57:19.849451134 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/configure.ac	2016-11-29 00:08:22.383470218 +0800
@@ -437,12 +437,13 @@
 			 [have_linux_raid_md_u_h="no"],
 [
 #include <sys/ioctl.h>
 #include <linux/major.h>
 #include <linux/types.h>
 ])
+	AC_CHECK_HEADERS([sys/sysmacros.h])
 else
 	have_linux_raid_md_u_h="no"
 fi
 
 # For the swap module
 have_linux_wireless_h="no"
@@ -2255,57 +2256,57 @@
 [with_java="yes"])
 if test "x$with_java" = "xyes"
 then
 	if test -d "$with_java_home"
 	then
 		AC_MSG_CHECKING([for jni.h])
-		TMPVAR=`find -L "$with_java_home" -name jni.h -type f -exec 'dirname' '{}' ';' 2>/dev/null | head -n 1`
+		TMPVAR=`find -L "$with_java_home" -name jni.h -type f -exec 'dirname' '{}' ';' 2>/dev/null | LC_ALL=C sort | head -n 1`
 		if test "x$TMPVAR" != "x"
 		then
 			AC_MSG_RESULT([found in $TMPVAR])
 			JAVA_CPPFLAGS="$JAVA_CPPFLAGS -I$TMPVAR"
 		else
 			AC_MSG_RESULT([not found])
 		fi
 
 		AC_MSG_CHECKING([for jni_md.h])
-		TMPVAR=`find -L "$with_java_home" -name jni_md.h -type f -exec 'dirname' '{}' ';' 2>/dev/null | head -n 1`
+		TMPVAR=`find -L "$with_java_home" -name jni_md.h -type f -exec 'dirname' '{}' ';' 2>/dev/null | LC_ALL=C sort | head -n 1`
 		if test "x$TMPVAR" != "x"
 		then
 			AC_MSG_RESULT([found in $TMPVAR])
 			JAVA_CPPFLAGS="$JAVA_CPPFLAGS -I$TMPVAR"
 		else
 			AC_MSG_RESULT([not found])
 		fi
 
 		AC_MSG_CHECKING([for libjvm.so])
-		TMPVAR=`find -L "$with_java_home" -type f \( -name libjvm.so -o -name libjvm.dylib \) -exec 'dirname' '{}' ';' 2>/dev/null | head -n 1`
+		TMPVAR=`find -L "$with_java_home" -type f \( -name libjvm.so -o -name libjvm.dylib \) -exec 'dirname' '{}' ';' 2>/dev/null | LC_ALL=C sort | head -n 1`
 		if test "x$TMPVAR" != "x"
 		then
 			AC_MSG_RESULT([found in $TMPVAR])
 			JAVA_LDFLAGS="$JAVA_LDFLAGS -L$TMPVAR -Wl,-rpath -Wl,$TMPVAR"
 		else
 			AC_MSG_RESULT([not found])
 		fi
 
 		if test "x$JAVAC" = "x"
 		then
 			AC_MSG_CHECKING([for javac])
-			TMPVAR=`find -L "$with_java_home" -name javac -type f 2>/dev/null | head -n 1`
+			TMPVAR=`find -L "$with_java_home" -name javac -type f 2>/dev/null | LC_ALL=C sort | head -n 1`
 			if test "x$TMPVAR" != "x"
 			then
 				JAVAC="$TMPVAR"
 				AC_MSG_RESULT([$JAVAC])
 			else
 				AC_MSG_RESULT([not found])
 			fi
 		fi
 		if test "x$JAR" = "x"
 		then
 			AC_MSG_CHECKING([for jar])
-			TMPVAR=`find -L "$with_java_home" -name jar -type f 2>/dev/null | head -n 1`
+			TMPVAR=`find -L "$with_java_home" -name jar -type f 2>/dev/null | LC_ALL=C sort | head -n 1`
 			if test "x$TMPVAR" != "x"
 			then
 				JAR="$TMPVAR"
 				AC_MSG_RESULT([$JAR])
 			else
 				AC_MSG_RESULT([not found])
@@ -3910,17 +3911,16 @@
 	AC_SUBST(BUILD_WITH_LIBRDKAFKA_LDFLAGS)
 	AC_SUBST(BUILD_WITH_LIBRDKAFKA_LIBS)
 	AC_DEFINE(HAVE_LIBRDKAFKA, 1, [Define if librdkafka is present and usable.])
   if test "x$with_librdkafka_log_cb" = "xyes"
   then
         AC_DEFINE(HAVE_LIBRDKAFKA_LOG_CB, 1, [Define if librdkafka log facility is present and usable.])
-  fi
-  if test "x$with_librdkafka_logger" = "xyes"
+  else if test "x$with_librdkafka_logger" = "xyes"
   then
         AC_DEFINE(HAVE_LIBRDKAFKA_LOGGER, 1, [Define if librdkafka log facility is present and usable.])
-  fi
+  fi; fi
 fi
 CPPFLAGS="$SAVE_CPPFLAGS"
 LDFLAGS="$SAVE_LDFLAGS"
 AM_CONDITIONAL(BUILD_WITH_LIBRDKAFKA, test "x$with_librdkafka" = "xyes")
 
 # }}}
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/contrib/collection3: test.px
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/contrib/examples/myplugin.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/contrib/examples/myplugin.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/contrib/examples/myplugin.c	2016-07-25 19:51:13.036860810 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/contrib/examples/myplugin.c	2016-11-29 00:08:22.387470260 +0800
@@ -100,23 +100,23 @@
 	vl.time       = time (NULL);
 	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
 	sstrncpy (vl.plugin, "myplugin", sizeof (vl.plugin));
 
 	/* it is strongly recommended to use a type defined in the types.db file
 	 * instead of a custom type */
-	sstrncpy (vl.type, "myplugin", sizeof (vl.plugin));
+	sstrncpy (vl.type, "myplugin", sizeof (vl.type));
 	/* optionally set vl.plugin_instance and vl.type_instance to reasonable
 	 * values (default: "") */
 
 	/* dispatch the values to collectd which passes them on to all registered
 	 * write functions */
 	plugin_dispatch_values (&vl);
 
 	/* A return value != 0 indicates an error and the plugin will be skipped
 	 * for an increasing amount of time. */
-    return 0;
+	return 0;
 } /* static int my_read (void) */
 
 /*
  * This function is called after values have been dispatched to collectd.
  */
 static int my_write (const data_set_t *ds, const value_list_t *vl,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/contrib/migrate-4-5.px /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/contrib/migrate-4-5.px
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/contrib/migrate-4-5.px	2016-07-19 16:42:46.619749771 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/contrib/migrate-4-5.px	2016-11-29 00:08:22.387470260 +0800
@@ -101,14 +101,12 @@
   pg_n_tup_c => ["value"],
   pg_scan => ["value"],
   pg_xact => ["value"],
   protocol_counter => ["value"],
   ps_cputime => ["user", "syst"],
   ps_pagefaults => ["minflt", "majflt"],
-  ps_code => ["value"],
-  ps_data => ["value"],
   serial_octets => ["rx", "tx"],
   swap_io => ["value"],
   virt_cpu_total => ["ns"],
   virt_vcpu => ["ns"],
   vmpage_action => ["value"],
   vmpage_faults => ["minflt", "majflt"],
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/contrib/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/contrib/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/contrib/README	2016-07-26 13:57:19.849451134 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/contrib/README	2016-11-29 00:08:22.383470218 +0800
@@ -14,12 +14,17 @@
 collectd-network.py
 -------------------
   This Python module by Adrian Perez implements the collectd network protocol
 in pure Python. It currently supports to receive data and notifications from
 collectd.
 
+collectd.service
+----------------
+  Service file for systemd. Please ship this file as
+  /lib/systemd/system/collectd.service in any linux package of collectd.
+
 collectd-unixsock.py
 --------------------
   This Python module by Clay Loveless provides an interface to collect's
 unixsock plugin.
 
 collectd2html.pl
@@ -98,11 +103,6 @@
 them in, so others can profit from it.
 
 solaris-smf
 -----------
   Manifest file for the Solaris SMF system and detailed information on how to
 register collectd as a service with this system.
-
-collectd.service
-----------------
-  Service file for systemd. Please ship this file as
-  /lib/systemd/system/collectd.service in any linux package of collectd.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/contrib/redhat/collectd.spec /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/contrib/redhat/collectd.spec
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/contrib/redhat/collectd.spec	2016-07-26 13:57:19.849451134 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/contrib/redhat/collectd.spec	2016-11-29 00:08:22.391470301 +0800
@@ -213,16 +213,16 @@
 %define with_write_kafka 0%{!?_without_write_kafka:0}
 # plugin write_mongodb disabled, requires libmongoc
 %define with_write_mongodb 0%{!?_without_write_mongodb:0}
 
 Summary:	statistics collection and monitoring daemon
 Name:		collectd
-Version:	5.5.1
+Version:	5.5.2
 Release:	1%{?dist}
-URL:		http://collectd.org
-Source:		http://collectd.org/files/%{name}-%{version}.tar.bz2
+URL:		https://collectd.org
+Source:		https://collectd.org/files/%{name}-%{version}.tar.bz2
 License:	GPLv2
 Group:		System Environment/Daemons
 BuildRoot:	%{_tmppath}/%{name}-%{version}-root
 BuildRequires:	libgcrypt-devel, kernel-headers, libtool-ltdl-devel, libcap-devel
 Vendor:		collectd development team <collectd@verplant.org>
 
@@ -2346,12 +2346,20 @@
 %{_sysconfdir}/httpd/conf.d/php-collection.conf
 
 %files contrib
 %doc contrib/
 
 %changelog
+* Tue Jul 26 2016 Ruben Kerkhof <ruben@rubenkerkhof.com> - 5.5.2-1
+- New upstream version
+- Contains fix for CVE-2016-6254
+- Change collectd.org url to https
+
+* Sat Jun 04 2016 Ruben Kerkhof <ruben@rubenkerkhof.com> 5.5.1-1
+- New upstream version
+
 * Wed May 27 2015 Marc Fournier <marc.fournier@camptocamp.com> 5.5.0-1
 - New upstream version
 - New plugins enabled by default: ceph, drbd, log_logstash, write_tsdb, smart,
   openldap, redis, write_redis, zookeeper, write_log, write_sensu, ipc,
   turbostat, fhcount
 - New plugins disabled by default: barometer, write_kafka
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/contrib: wiki2commonmark.pl
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2: depcomp
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2: INSTALL
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2: install-sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/libltdl/config/ylwrap /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/libltdl/config/ylwrap
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/libltdl/config/ylwrap	2014-07-18 16:21:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/libltdl/config/ylwrap	2016-11-29 00:09:18.128053001 +0800
@@ -1,13 +1,12 @@
 #! /bin/sh
 # ylwrap - wrapper for lex/yacc invocations.
 
-scriptversion=2011-08-25.18; # UTC
+scriptversion=2013-01-12.17; # UTC
 
-# Copyright (C) 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005,
-# 2007, 2009, 2010, 2011 Free Software Foundation, Inc.
+# Copyright (C) 1996-2013 Free Software Foundation, Inc.
 #
 # Written by Tom Tromey <tromey@cygnus.com>.
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2, or (at your option)
@@ -27,15 +26,47 @@
 # the same distribution terms that you use for the rest of that program.
 
 # This file is maintained in Automake, please report
 # bugs to <bug-automake@gnu.org> or send patches to
 # <automake-patches@gnu.org>.
 
+get_dirname ()
+{
+  case $1 in
+    */*|*\\*) printf '%s\n' "$1" | sed -e 's|\([\\/]\)[^\\/]*$|\1|';;
+    # Otherwise,  we want the empty string (not ".").
+  esac
+}
+
+# guard FILE
+# ----------
+# The CPP macro used to guard inclusion of FILE.
+guard ()
+{
+  printf '%s\n' "$1"                                                    \
+    | sed                                                               \
+        -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'   \
+        -e 's/[^ABCDEFGHIJKLMNOPQRSTUVWXYZ]/_/g'                        \
+        -e 's/__*/_/g'
+}
+
+# quote_for_sed [STRING]
+# ----------------------
+# Return STRING (or stdin) quoted to be used as a sed pattern.
+quote_for_sed ()
+{
+  case $# in
+    0) cat;;
+    1) printf '%s\n' "$1";;
+  esac \
+    | sed -e 's|[][\\.*]|\\&|g'
+}
+
 case "$1" in
   '')
-    echo "$0: No files given.  Try \`$0 --help' for more information." 1>&2
+    echo "$0: No files given.  Try '$0 --help' for more information." 1>&2
     exit 1
     ;;
   --basedir)
     basedir=$2
     shift 2
     ;;
@@ -62,45 +93,77 @@
     exit $?
     ;;
 esac
 
 
 # The input.
-input="$1"
+input=$1
 shift
-case "$input" in
+# We'll later need for a correct munging of "#line" directives.
+input_sub_rx=`get_dirname "$input" | quote_for_sed`
+case $input in
   [\\/]* | ?:[\\/]*)
     # Absolute path; do nothing.
     ;;
   *)
     # Relative path.  Make it absolute.
-    input="`pwd`/$input"
+    input=`pwd`/$input
     ;;
 esac
+input_rx=`get_dirname "$input" | quote_for_sed`
+
+# Since DOS filename conventions don't allow two dots,
+# the DOS version of Bison writes out y_tab.c instead of y.tab.c
+# and y_tab.h instead of y.tab.h. Test to see if this is the case.
+y_tab_nodot=false
+if test -f y_tab.c || test -f y_tab.h; then
+  y_tab_nodot=true
+fi
+
+# The parser itself, the first file, is the destination of the .y.c
+# rule in the Makefile.
+parser=$1
+
+# A sed program to s/FROM/TO/g for all the FROM/TO so that, for
+# instance, we rename #include "y.tab.h" into #include "parse.h"
+# during the conversion from y.tab.c to parse.c.
+sed_fix_filenames=
+
+# Also rename header guards, as Bison 2.7 for instance uses its header
+# guard in its implementation file.
+sed_fix_header_guards=
 
-pairlist=
-while test "$#" -ne 0; do
-  if test "$1" = "--"; then
+while test $# -ne 0; do
+  if test x"$1" = x"--"; then
     shift
     break
   fi
-  pairlist="$pairlist $1"
+  from=$1
+  # Handle y_tab.c and y_tab.h output by DOS
+  if $y_tab_nodot; then
+    case $from in
+      "y.tab.c") from=y_tab.c;;
+      "y.tab.h") from=y_tab.h;;
+    esac
+  fi
+  shift
+  to=$1
   shift
+  sed_fix_filenames="${sed_fix_filenames}s|"`quote_for_sed "$from"`"|$to|g;"
+  sed_fix_header_guards="${sed_fix_header_guards}s|"`guard "$from"`"|"`guard "$to"`"|g;"
 done
 
 # The program to run.
-prog="$1"
+prog=$1
 shift
 # Make any relative path in $prog absolute.
-case "$prog" in
+case $prog in
   [\\/]* | ?:[\\/]*) ;;
-  *[\\/]*) prog="`pwd`/$prog" ;;
+  *[\\/]*) prog=`pwd`/$prog ;;
 esac
 
-# FIXME: add hostname here for parallel makes that run commands on
-# other machines.  But that might take us over the 14-char limit.
 dirname=ylwrap$$
 do_exit="cd '`pwd`' && rm -rf $dirname > /dev/null 2>&1;"' (exit $ret); exit $ret'
 trap "ret=129; $do_exit" 1
 trap "ret=130; $do_exit" 2
 trap "ret=141; $do_exit" 13
 trap "ret=143; $do_exit" 15
@@ -112,104 +175,62 @@
   0) "$prog" "$input" ;;
   *) "$prog" "$@" "$input" ;;
 esac
 ret=$?
 
 if test $ret -eq 0; then
-  set X $pairlist
-  shift
-  first=yes
-  # Since DOS filename conventions don't allow two dots,
-  # the DOS version of Bison writes out y_tab.c instead of y.tab.c
-  # and y_tab.h instead of y.tab.h. Test to see if this is the case.
-  y_tab_nodot="no"
-  if test -f y_tab.c || test -f y_tab.h; then
-    y_tab_nodot="yes"
-  fi
-
-  # The directory holding the input.
-  input_dir=`echo "$input" | sed -e 's,\([\\/]\)[^\\/]*$,\1,'`
-  # Quote $INPUT_DIR so we can use it in a regexp.
-  # FIXME: really we should care about more than `.' and `\'.
-  input_rx=`echo "$input_dir" | sed 's,\\\\,\\\\\\\\,g;s,\\.,\\\\.,g'`
-
-  while test "$#" -ne 0; do
-    from="$1"
-    # Handle y_tab.c and y_tab.h output by DOS
-    if test $y_tab_nodot = "yes"; then
-      if test $from = "y.tab.c"; then
-        from="y_tab.c"
-      else
-        if test $from = "y.tab.h"; then
-          from="y_tab.h"
-        fi
-      fi
-    fi
+  for from in *
+  do
+    to=`printf '%s\n' "$from" | sed "$sed_fix_filenames"`
     if test -f "$from"; then
       # If $2 is an absolute path name, then just use that,
-      # otherwise prepend `../'.
-      case "$2" in
-        [\\/]* | ?:[\\/]*) target="$2";;
-        *) target="../$2";;
+      # otherwise prepend '../'.
+      case $to in
+        [\\/]* | ?:[\\/]*) target=$to;;
+        *) target=../$to;;
       esac
 
-      # We do not want to overwrite a header file if it hasn't
-      # changed.  This avoid useless recompilations.  However the
-      # parser itself (the first file) should always be updated,
-      # because it is the destination of the .y.c rule in the
-      # Makefile.  Divert the output of all other files to a temporary
-      # file so we can compare them to existing versions.
-      if test $first = no; then
-        realtarget="$target"
-        target="tmp-`echo $target | sed s/.*[\\/]//g`"
+      # Do not overwrite unchanged header files to avoid useless
+      # recompilations.  Always update the parser itself: it is the
+      # destination of the .y.c rule in the Makefile.  Divert the
+      # output of all other files to a temporary file so we can
+      # compare them to existing versions.
+      if test $from != $parser; then
+        realtarget=$target
+        target=tmp-`printf '%s\n' "$target" | sed 's|.*[\\/]||g'`
       fi
-      # Edit out `#line' or `#' directives.
-      #
-      # We don't want the resulting debug information to point at
-      # an absolute srcdir; it is better for it to just mention the
-      # .y file with no path.
-      #
-      # We want to use the real output file name, not yy.lex.c for
-      # instance.
-      #
-      # We want the include guards to be adjusted too.
-      FROM=`echo "$from" | sed \
-            -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\
-            -e 's/[^ABCDEFGHIJKLMNOPQRSTUVWXYZ]/_/g'`
-      TARGET=`echo "$2" | sed \
-            -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'\
-            -e 's/[^ABCDEFGHIJKLMNOPQRSTUVWXYZ]/_/g'`
 
-      sed -e "/^#/!b" -e "s,$input_rx,," -e "s,$from,$2," \
-          -e "s,$FROM,$TARGET," "$from" >"$target" || ret=$?
+      # Munge "#line" or "#" directives.  Don't let the resulting
+      # debug information point at an absolute srcdir.  Use the real
+      # output file name, not yy.lex.c for instance.  Adjust the
+      # include guards too.
+      sed -e "/^#/!b"                           \
+          -e "s|$input_rx|$input_sub_rx|"       \
+          -e "$sed_fix_filenames"               \
+          -e "$sed_fix_header_guards"           \
+        "$from" >"$target" || ret=$?
 
-      # Check whether header files must be updated.
-      if test $first = no; then
+      # Check whether files must be updated.
+      if test "$from" != "$parser"; then
         if test -f "$realtarget" && cmp -s "$realtarget" "$target"; then
-          echo "$2" is unchanged
+          echo "$to is unchanged"
           rm -f "$target"
         else
-          echo updating "$2"
+          echo "updating $to"
           mv -f "$target" "$realtarget"
         fi
       fi
     else
-      # A missing file is only an error for the first file.  This
-      # is a blatant hack to let us support using "yacc -d".  If -d
-      # is not specified, we don't want an error when the header
-      # file is "missing".
-      if test $first = yes; then
+      # A missing file is only an error for the parser.  This is a
+      # blatant hack to let us support using "yacc -d".  If -d is not
+      # specified, don't fail when the header file is "missing".
+      if test "$from" = "$parser"; then
         ret=1
       fi
     fi
-    shift
-    shift
-    first=no
   done
-else
-  ret=$?
 fi
 
 # Remove the directory.
 cd ..
 rm -rf $dirname
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2: ltmain.sh
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/Makefile.in	2016-07-26 13:58:55.385739532 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/Makefile.in	2016-11-29 00:09:17.336044668 +0800
@@ -79,18 +79,16 @@
 host_triplet = @host@
 @BUILD_INCLUDED_LTDL_TRUE@am__append_1 = libltdl
 subdir = .
 DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
 	$(top_srcdir)/configure $(am__configure_deps) \
 	$(top_srcdir)/src/libcollectdclient/collectd/lcc_features.h.in \
-	AUTHORS COPYING ChangeLog INSTALL NEWS README TODO compile \
-	libltdl/config/compile config.guess \
-	libltdl/config/config.guess config.sub \
-	libltdl/config/config.sub depcomp libltdl/config/depcomp \
-	install-sh libltdl/config/install-sh missing \
-	libltdl/config/missing ylwrap libltdl/config/ylwrap ltmain.sh \
+	AUTHORS COPYING ChangeLog NEWS README TODO \
+	libltdl/config/compile libltdl/config/config.guess \
+	libltdl/config/config.sub libltdl/config/depcomp \
+	libltdl/config/install-sh libltdl/config/missing \
 	libltdl/config/ltmain.sh $(top_srcdir)/libltdl/config/compile \
 	$(top_srcdir)/libltdl/config/config.guess \
 	$(top_srcdir)/libltdl/config/config.sub \
 	$(top_srcdir)/libltdl/config/install-sh \
 	$(top_srcdir)/libltdl/config/ltmain.sh \
 	$(top_srcdir)/libltdl/config/missing
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2: missing
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/apache.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/apache.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/apache.c	2016-07-26 13:57:19.849451134 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/apache.c	2016-11-29 00:08:22.391470301 +0800
@@ -247,13 +247,13 @@
 		ud.free_func = (void *) apache_free;
 
 		memset (callback_name, 0, sizeof (callback_name));
 		ssnprintf (callback_name, sizeof (callback_name),
 				"apache/%s/%s",
 				(st->host != NULL) ? st->host : hostname_g,
-				(st->name != NULL) ? st->name : "default"),
+				(st->name != NULL) ? st->name : "default");
 
 		status = plugin_register_complex_read (/* group = */ NULL,
 				/* name      = */ callback_name,
 				/* callback  = */ apache_read_host,
 				/* interval  = */ NULL,
 				/* user_data = */ &ud);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/apcups.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/apcups.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/apcups.c	2016-07-26 13:57:19.849451134 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/apcups.c	2016-11-29 00:08:22.391470301 +0800
@@ -49,23 +49,23 @@
 
 #define APCUPS_DEFAULT_HOST "localhost"
 
 /*
  * Private data types
  */
-struct apc_detail_s
+typedef struct
 {
-	double linev;
-	double loadpct;
-	double bcharge;
-	double timeleft;
-	double outputv;
-	double itemp;
-	double battv;
-	double linefreq;
-};
+	gauge_t linev;
+	gauge_t loadpct;
+	gauge_t bcharge;
+	gauge_t timeleft;
+	gauge_t outputv;
+	gauge_t itemp;
+	gauge_t battv;
+	gauge_t linefreq;
+} apc_detail_t;
 
 /*
  * Private variables
  */
 /* Default values for contacting daemon */
 static char *conf_host = NULL;
@@ -261,20 +261,18 @@
 
 	return (0);
 }
 
 /* Get and print status from apcupsd NIS server */
 static int apc_query_server (char *host, int port,
-		struct apc_detail_s *apcups_detail)
+		apc_detail_t *apcups_detail)
 {
 	int     n;
 	char    recvline[1024];
 	char   *tokptr;
 	char   *toksaveptr;
-	char   *key;
-	double  value;
 	_Bool retry = 1;
 	int status;
 
 #if APCMAIN
 # define PRINT_VALUE(name, val) printf("  Found property: name = %s; value = %f;\n", name, val)
 #else
@@ -337,16 +335,19 @@
 #endif /* if APCMAIN */
 
 		toksaveptr = NULL;
 		tokptr = strtok_r (recvline, " :\t", &toksaveptr);
 		while (tokptr != NULL)
 		{
-			key = tokptr;
+			char *key = tokptr;
 			if ((tokptr = strtok_r (NULL, " :\t", &toksaveptr)) == NULL)
 				continue;
-			value = atof (tokptr);
+
+			gauge_t value;
+			if (strtogauge (tokptr, &value) != 0)
+				continue;
 
 			PRINT_VALUE (key, value);
 
 			if (strcmp ("LINEV", key) == 0)
 				apcups_detail->linev = value;
 			else if (strcmp ("BATTV", key) == 0)
@@ -422,17 +423,20 @@
 	{
 		return (-1);
 	}
 	return (0);
 }
 
-static void apc_submit_generic (char *type, char *type_inst, double value)
+static void apc_submit_generic (char *type, char *type_inst, gauge_t value)
 {
 	value_t values[1];
 	value_list_t vl = VALUE_LIST_INIT;
 
+	if (isnan (value))
+		return;
+
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
 	sstrncpy (vl.plugin, "apcups", sizeof (vl.plugin));
@@ -440,13 +444,13 @@
 	sstrncpy (vl.type, type, sizeof (vl.type));
 	sstrncpy (vl.type_instance, type_inst, sizeof (vl.type_instance));
 
 	plugin_dispatch_values (&vl);
 }
 
-static void apc_submit (struct apc_detail_s *apcups_detail)
+static void apc_submit (apc_detail_t const *apcups_detail)
 {
 	apc_submit_generic ("voltage",    "input",   apcups_detail->linev);
 	apc_submit_generic ("voltage",    "output",  apcups_detail->outputv);
 	apc_submit_generic ("voltage",    "battery", apcups_detail->battv);
 	apc_submit_generic ("charge",     "",        apcups_detail->bcharge);
 	apc_submit_generic ("percent",    "load",    apcups_detail->loadpct);
@@ -454,41 +458,33 @@
 	apc_submit_generic ("temperature", "",       apcups_detail->itemp);
 	apc_submit_generic ("frequency",  "input",   apcups_detail->linefreq);
 }
 
 static int apcups_read (void)
 {
-	struct apc_detail_s apcups_detail;
-	int status;
-
-	apcups_detail.linev    =   -1.0;
-	apcups_detail.outputv  =   -1.0;
-	apcups_detail.battv    =   -1.0;
-	apcups_detail.loadpct  =   -1.0;
-	apcups_detail.bcharge  =   -1.0;
-	apcups_detail.timeleft =    NAN;
-	apcups_detail.itemp    = -300.0;
-	apcups_detail.linefreq =   -1.0;
+	apc_detail_t apcups_detail = {
+		.linev    = NAN,
+		.outputv  = NAN,
+		.battv    = NAN,
+		.loadpct  = NAN,
+		.bcharge  = NAN,
+		.timeleft = NAN,
+		.itemp    = NAN,
+		.linefreq = NAN,
+	};
 
-	status = apc_query_server (conf_host == NULL
+	int status = apc_query_server (conf_host == NULL
 			? APCUPS_DEFAULT_HOST
 			: conf_host,
 			conf_port, &apcups_detail);
-
-	/*
-	 * if we did not connect then do not bother submitting
-	 * zeros. We want rrd files to have NAN.
-	 */
 	if (status != 0)
 	{
 		DEBUG ("apcups plugin: apc_query_server (%s, %i) = %i",
-				conf_host == NULL
-				? APCUPS_DEFAULT_HOST
-				: conf_host,
+				conf_host == NULL ? APCUPS_DEFAULT_HOST : conf_host,
 				conf_port, status);
-		return (-1);
+		return (status);
 	}
 
 	apc_submit (&apcups_detail);
 
 	return (0);
 } /* apcups_read */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/battery.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/battery.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/battery.c	2016-07-26 13:57:19.849451134 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/battery.c	2016-11-29 00:08:22.391470301 +0800
@@ -794,13 +794,13 @@
 
 	DEBUG ("battery plugin: Trying pmu ...");
 	status = read_pmu ();
 	if (status == 0)
 		return (0);
 
-	ERROR ("battery plugin: Add available input methods failed.");
+	ERROR ("battery plugin: All available input methods failed.");
 	return (-1);
 } /* }}} int battery_read */
 #endif /* KERNEL_LINUX */
 
 static int battery_config (oconfig_item_t *ci)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd.1	2016-07-25 19:53:29.268996646 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd.1	2016-11-29 00:09:58.860483387 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD 1"
-.TH COLLECTD 1 "2016-07-25" "5.5.1.166.g0e60b30" "collectd"
+.TH COLLECTD 1 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd \- System statistics collection daemon
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd.conf.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd.conf.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd.conf.5	2016-07-26 14:00:15.313952924 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd.conf.5	2016-11-29 00:09:59.432489455 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD.CONF 5"
-.TH COLLECTD.CONF 5 "2016-07-26" "5.5.2" "collectd"
+.TH COLLECTD.CONF 5 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd.conf \- Configuration for the system statistics collection daemon collectd
@@ -360,12 +360,18 @@
 .IX Item "PluginDir Directory"
 Path to the plugins (shared objects) of collectd.
 .IP "\fBTypesDB\fR \fIFile\fR [\fIFile\fR ...]" 4
 .IX Item "TypesDB File [File ...]"
 Set one or more files that contain the data-set descriptions. See
 \&\fItypes.db\fR\|(5) for a description of the format of this file.
+.Sp
+If this option is not specified, a default file is read. If you need to define
+custom types in addition to the types defined in the default file, you need to
+explicitly load both. In other words, if the \fBTypesDB\fR option is encountered
+the default behavior is disabled and if you need the default types you have to
+also explicitly load them.
 .IP "\fBInterval\fR \fISeconds\fR" 4
 .IX Item "Interval Seconds"
 Configures the interval in which to query the read plugins. Obviously smaller
 values lead to a higher system load produced by collectd, while higher values
 lead to more coarse statistics.
 .Sp
@@ -989,13 +995,13 @@
 It was developed and tested under Linux only. The only platform dependency is
 the standard Linux i2c\-dev interface (the particular bus driver has to
 support the \s-1SM\s0 Bus command subset).
 .PP
 The reduction or normalization to mean sea level pressure requires (depending
 on selected method/approximation) also altitude and reference to temperature
-sensor(s).  When multiple temperature sensors are configured the minumum of
+sensor(s).  When multiple temperature sensors are configured the minimum of
 their values is always used (expecting that the warmer ones are affected by
 e.g. direct sun light at that moment).
 .PP
 Synopsis:
 .PP
 .Vb 9
@@ -1093,13 +1099,13 @@
 .PD
 The altitude (in meters) of the location where you meassure the pressure.
 .IP "\fBTemperatureSensor\fR \fIreference\fR" 4
 .IX Item "TemperatureSensor reference"
 Temperature sensor(s) which should be used as a reference when normalizing the
 pressure using \f(CW\*(C`Normalization\*(C'\fR method 2.
-When specified more sensors a minumum is found and used each time.  The
+When specified more sensors a minimum is found and used each time.  The
 temperature reading directly from this pressure sensor/plugin is typically not
 suitable as the pressure sensor will be probably inside while we want outside
 temperature.  The collectd reference name is something like
 <hostname>/<plugin_name>\-<plugin_instance>/<type>\-<type_instance>
 (<type_instance> is usually omitted when there is just single value type). Or
 you can figure it out from the path of the output data files.
@@ -1990,13 +1996,13 @@
 .Sp
 Unfortunately, drivers are not too keen to report errors when an unknown option
 is passed to them, so invalid settings here may go unnoticed. This is not the
 plugin's fault, it will report errors if it gets them from the library\ /
 the driver. If a driver complains about an option, the plugin will dump a
 complete list of all options understood by that driver to the log. There is no
-way to programatically find out if an option expects a string or a numeric
+way to programmatically find out if an option expects a string or a numeric
 argument, so you will have to refer to the appropriate \s-1DBD\s0's documentation to
 find this out. Sorry.
 .IP "\fBSelectDB\fR \fIDatabase\fR" 4
 .IX Item "SelectDB Database"
 In some cases, the database name you connect with is not the database name you
 want to use for querying data. If this option is set, the plugin will \*(L"select\*(R"
@@ -4762,13 +4768,13 @@
 amount of time will be lost, for example, if a single statement within the
 transaction fails or if the database server crashes.
 .IP "\fBInstance\fR \fIname\fR" 4
 .IX Item "Instance name"
 Specify the plugin instance name that should be used instead of the database
 name (which is the default, if this option has not been specified). This
-allows to query multiple databases of the same name on the same host (e.g.
+allows one to query multiple databases of the same name on the same host (e.g.
 when running multiple database server versions in parallel).
 .IP "\fBHost\fR \fIhostname\fR" 4
 .IX Item "Host hostname"
 Specify the hostname or \s-1IP\s0 of the PostgreSQL server to connect to. If the
 value begins with a slash, it is interpreted as the directory name in which to
 look for the \s-1UNIX\s0 domain socket.
@@ -4812,13 +4818,13 @@
 .RS 4
 .RE
 .IP "\fBInstance\fR \fIname\fR" 4
 .IX Item "Instance name"
 Specify the plugin instance name that should be used instead of the database
 name (which is the default, if this option has not been specified). This
-allows to query multiple databases of the same name on the same host (e.g.
+allows one to query multiple databases of the same name on the same host (e.g.
 when running multiple database server versions in parallel).
 .IP "\fBKRBSrvName\fR \fIkerberos_service_name\fR" 4
 .IX Item "KRBSrvName kerberos_service_name"
 Specify the Kerberos service name to use when authenticating with Kerberos 5
 or \s-1GSSAPI.\s0 See the sections \*(L"Kerberos authentication\*(R" and \*(L"\s-1GSSAPI\*(R"\s0 of the
 \&\fBPostgreSQL Documentation\fR for details.
@@ -4999,17 +5005,17 @@
 io data (where available) and minor and major pagefaults.
 .Sp
 Some platforms have a limit on the length of process names. \fIName\fR must stay
 below this limit.
 .IP "\fBProcessMatch\fR \fIname\fR \fIregex\fR" 4
 .IX Item "ProcessMatch name regex"
-Similar to the \fBProcess\fR option this allows to select more detailed
+Similar to the \fBProcess\fR option this allows one to select more detailed
 statistics of processes matching the specified \fIregex\fR (see \fIregex\fR\|(7) for
 details). The statistics of all matching processes are summed up and
 dispatched to the daemon using the specified \fIname\fR as an identifier. This
-allows to \*(L"group\*(R" several processes together. \fIname\fR must not contain
+allows one to \*(L"group\*(R" several processes together. \fIname\fR must not contain
 slashes.
 .ie n .SS "Plugin ""protocols"""
 .el .SS "Plugin \f(CWprotocols\fP"
 .IX Subsection "Plugin protocols"
 Collects a lot of information about various network protocols, such as \fI\s-1IP\s0\fR,
 \&\fI\s-1TCP\s0\fR, \fI\s-1UDP\s0\fR, etc.
@@ -5186,14 +5192,14 @@
 way the \f(CW\*(C`rrdtool\*(C'\fR plugin works (see below). The added abstraction layer
 provides a number of benefits, though: Because the cache is not within
 \&\f(CW\*(C`collectd\*(C'\fR anymore, it does not need to be flushed when \f(CW\*(C`collectd\*(C'\fR is to be
 restarted. This results in much shorter (if any) gaps in graphs, especially
 under heavy load. Also, the \f(CW\*(C`rrdtool\*(C'\fR command line utility is aware of the
 daemon so that it can flush values to disk automatically when needed. This
-allows to integrate automated flushing of values into graphing solutions much
-more easily.
+allows one to integrate automated flushing of values into graphing solutions
+much more easily.
 .PP
 There are disadvantages, though: The daemon may reside on a different host, so
 it may not be possible for \f(CW\*(C`collectd\*(C'\fR to create the appropriate \s-1RRD\s0 files
 anymore. And even if \f(CW\*(C`rrdcached\*(C'\fR runs on the same host, it may run in a
 different base directory, so relative paths may do weird stuff if you're not
 careful.
@@ -6706,13 +6712,13 @@
 .IP "\fBProperty\fR \fIString\fR \fIString\fR" 4
 .IX Item "Property String String"
 Configure the named property for the current topic. Properties are
 forwarded to the kafka producer library \fBlibrdkafka\fR.
 .IP "\fBKey\fR \fIString\fR" 4
 .IX Item "Key String"
-Use the specified string as a partioning key for the topic. Kafka breaks
+Use the specified string as a partitioning key for the topic. Kafka breaks
 topic into partitions and guarantees that for a given topology, the same
 consumer will be used for a specific key. The special (case insensitive)
 string \fBRandom\fR can be used to specify that an arbitrary partition should
 be used.
 .IP "\fBFormat\fR \fBCommand\fR|\fB\s-1JSON\s0\fR|\fBGraphite\fR" 4
 .IX Item "Format Command|JSON|Graphite"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd.conf.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd.conf.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd.conf.in	2016-07-26 13:57:19.849451134 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd.conf.in	2016-11-29 00:08:22.399470384 +0800
@@ -1313,12 +1313,13 @@
 #    LogSendErrors true
 #    Prefix "collectd"
 #    Postfix "collectd"
 #    StoreRates true
 #    AlwaysAppendDS false
 #    EscapeCharacter "_"
+#    SeparateInstances false
 #  </Node>
 #</Plugin>
 
 #<Plugin write_http>
 #	<Node "example">
 #		URL "http://example.com/collectd-post"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd.conf.pod /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd.conf.pod
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd.conf.pod	2016-07-26 13:57:19.853451148 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd.conf.pod	2016-11-29 00:08:22.399470384 +0800
@@ -229,12 +229,18 @@
 
 =item B<TypesDB> I<File> [I<File> ...]
 
 Set one or more files that contain the data-set descriptions. See
 L<types.db(5)> for a description of the format of this file.
 
+If this option is not specified, a default file is read. If you need to define
+custom types in addition to the types defined in the default file, you need to
+explicitly load both. In other words, if the B<TypesDB> option is encountered
+the default behavior is disabled and if you need the default types you have to
+also explicitly load them.
+
 =item B<Interval> I<Seconds>
 
 Configures the interval in which to query the read plugins. Obviously smaller
 values lead to a higher system load produced by collectd, while higher values
 lead to more coarse statistics.
 
@@ -928,13 +934,13 @@
 It was developed and tested under Linux only. The only platform dependency is
 the standard Linux i2c-dev interface (the particular bus driver has to
 support the SM Bus command subset).
 
 The reduction or normalization to mean sea level pressure requires (depending
 on selected method/approximation) also altitude and reference to temperature
-sensor(s).  When multiple temperature sensors are configured the minumum of
+sensor(s).  When multiple temperature sensors are configured the minimum of
 their values is always used (expecting that the warmer ones are affected by
 e.g. direct sun light at that moment).
 
 Synopsis:
 
   <Plugin "barometer">
@@ -1040,13 +1046,13 @@
 The altitude (in meters) of the location where you meassure the pressure.
 
 =item B<TemperatureSensor> I<reference>
 
 Temperature sensor(s) which should be used as a reference when normalizing the
 pressure using C<Normalization> method 2.
-When specified more sensors a minumum is found and used each time.  The
+When specified more sensors a minimum is found and used each time.  The
 temperature reading directly from this pressure sensor/plugin is typically not
 suitable as the pressure sensor will be probably inside while we want outside
 temperature.  The collectd reference name is something like
 <hostname>/<plugin_name>-<plugin_instance>/<type>-<type_instance>
 (<type_instance> is usually omitted when there is just single value type). Or
 you can figure it out from the path of the output data files.
@@ -2030,13 +2036,13 @@
 
 Unfortunately, drivers are not too keen to report errors when an unknown option
 is passed to them, so invalid settings here may go unnoticed. This is not the
 plugin's fault, it will report errors if it gets them from the libraryE<nbsp>/
 the driver. If a driver complains about an option, the plugin will dump a
 complete list of all options understood by that driver to the log. There is no
-way to programatically find out if an option expects a string or a numeric
+way to programmatically find out if an option expects a string or a numeric
 argument, so you will have to refer to the appropriate DBD's documentation to
 find this out. Sorry.
 
 =item B<SelectDB> I<Database>
 
 In some cases, the database name you connect with is not the database name you
@@ -5200,13 +5206,13 @@
 transaction fails or if the database server crashes.
 
 =item B<Instance> I<name>
 
 Specify the plugin instance name that should be used instead of the database
 name (which is the default, if this option has not been specified). This
-allows to query multiple databases of the same name on the same host (e.g.
+allows one to query multiple databases of the same name on the same host (e.g.
 when running multiple database server versions in parallel).
 
 =item B<Host> I<hostname>
 
 Specify the hostname or IP of the PostgreSQL server to connect to. If the
 value begins with a slash, it is interpreted as the directory name in which to
@@ -5261,13 +5267,13 @@
 =back
 
 =item B<Instance> I<name>
 
 Specify the plugin instance name that should be used instead of the database
 name (which is the default, if this option has not been specified). This
-allows to query multiple databases of the same name on the same host (e.g.
+allows one to query multiple databases of the same name on the same host (e.g.
 when running multiple database server versions in parallel).
 
 =item B<KRBSrvName> I<kerberos_service_name>
 
 Specify the Kerberos service name to use when authenticating with Kerberos 5
 or GSSAPI. See the sections "Kerberos authentication" and "GSSAPI" of the
@@ -5461,17 +5467,17 @@
 
 Some platforms have a limit on the length of process names. I<Name> must stay
 below this limit.
 
 =item B<ProcessMatch> I<name> I<regex>
 
-Similar to the B<Process> option this allows to select more detailed
+Similar to the B<Process> option this allows one to select more detailed
 statistics of processes matching the specified I<regex> (see L<regex(7)> for
 details). The statistics of all matching processes are summed up and
 dispatched to the daemon using the specified I<name> as an identifier. This
-allows to "group" several processes together. I<name> must not contain
+allows one to "group" several processes together. I<name> must not contain
 slashes.
 
 =back
 
 =head2 Plugin C<protocols>
 
@@ -5676,14 +5682,14 @@
 way the C<rrdtool> plugin works (see below). The added abstraction layer
 provides a number of benefits, though: Because the cache is not within
 C<collectd> anymore, it does not need to be flushed when C<collectd> is to be
 restarted. This results in much shorter (if any) gaps in graphs, especially
 under heavy load. Also, the C<rrdtool> command line utility is aware of the
 daemon so that it can flush values to disk automatically when needed. This
-allows to integrate automated flushing of values into graphing solutions much
-more easily.
+allows one to integrate automated flushing of values into graphing solutions
+much more easily.
 
 There are disadvantages, though: The daemon may reside on a different host, so
 it may not be possible for C<collectd> to create the appropriate RRD files
 anymore. And even if C<rrdcached> runs on the same host, it may run in a
 different base directory, so relative paths may do weird stuff if you're not
 careful.
@@ -7430,13 +7436,13 @@
 
 Configure the named property for the current topic. Properties are
 forwarded to the kafka producer library B<librdkafka>.
 
 =item B<Key> I<String>
 
-Use the specified string as a partioning key for the topic. Kafka breaks
+Use the specified string as a partitioning key for the topic. Kafka breaks
 topic into partitions and guarantees that for a given topology, the same
 consumer will be used for a specific key. The special (case insensitive)
 string B<Random> can be used to specify that an arbitrary partition should
 be used.
 
 =item B<Format> B<Command>|B<JSON>|B<Graphite>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectdctl.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectdctl.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectdctl.1	2016-07-25 19:53:29.408996787 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectdctl.1	2016-11-29 00:09:59.648491748 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTDCTL 1"
-.TH COLLECTDCTL 1 "2016-07-25" "5.5.1.166.g0e60b30" "collectd"
+.TH COLLECTDCTL 1 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectdctl \- Control interface for collectd
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-email.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-email.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-email.5	2016-07-25 19:53:29.208996585 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-email.5	2016-11-29 00:09:59.496490135 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-EMAIL 5"
-.TH COLLECTD-EMAIL 5 "2016-07-25" "5.5.1.166.g0e60b30" "collectd"
+.TH COLLECTD-EMAIL 5 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-email \- Documentation of collectd's "email plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-exec.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-exec.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-exec.5	2016-07-25 19:53:29.208996585 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-exec.5	2016-11-29 00:09:59.580491026 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-EXEC 5"
-.TH COLLECTD-EXEC 5 "2016-07-25" "5.5.1.166.g0e60b30" "collectd"
+.TH COLLECTD-EXEC 5 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-exec \- Documentation of collectd's "exec plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-java.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-java.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-java.5	2016-07-26 14:00:15.429953220 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-java.5	2016-11-29 00:09:59.756492893 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-JAVA 5"
-.TH COLLECTD-JAVA 5 "2016-07-26" "5.5.2" "collectd"
+.TH COLLECTD-JAVA 5 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-java \- Documentation of collectd's "java plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectdmon.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectdmon.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectdmon.1	2016-07-25 19:53:29.392996771 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectdmon.1	2016-11-29 00:09:59.828493657 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTDMON 1"
-.TH COLLECTDMON 1 "2016-07-25" "5.5.1.166.g0e60b30" "collectd"
+.TH COLLECTDMON 1 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectdmon \- Monitoring daemon for collectd
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-nagios.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-nagios.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-nagios.1	2016-07-25 19:53:29.536996916 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-nagios.1	2016-11-29 00:09:59.896494379 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-NAGIOS 1"
-.TH COLLECTD-NAGIOS 1 "2016-07-25" "5.5.1.166.g0e60b30" "collectd"
+.TH COLLECTD-NAGIOS 1 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-nagios \- Nagios plugin for querying collectd
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-perl.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-perl.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-perl.5	2016-07-25 19:53:29.796997178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-perl.5	2016-11-29 00:10:00.008495566 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-PERL 5"
-.TH COLLECTD-PERL 5 "2016-07-25" "5.5.1.166.g0e60b30" "collectd"
+.TH COLLECTD-PERL 5 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-perl \- Documentation of collectd's "perl plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-python.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-python.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-python.5	2016-07-25 19:53:29.776997158 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-python.5	2016-11-29 00:10:00.120496755 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-PYTHON 5"
-.TH COLLECTD-PYTHON 5 "2016-07-25" "5.5.1.166.g0e60b30" "collectd"
+.TH COLLECTD-PYTHON 5 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-python \- Documentation of collectd's "python plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-snmp.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-snmp.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-snmp.5	2016-07-25 19:53:29.908997290 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-snmp.5	2016-11-29 00:10:00.200497604 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-SNMP 5"
-.TH COLLECTD-SNMP 5 "2016-07-25" "5.5.1.166.g0e60b30" "collectd"
+.TH COLLECTD-SNMP 5 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-snmp \- Documentation of collectd's "snmp plugin"
@@ -326,15 +326,15 @@
 degrees Kelvin you could specify a shift of \fB273.15\fR here to store values in
 degrees Celsius. The default value is, of course, \fB0.0\fR.
 .Sp
 This value is not applied to counter-values.
 .IP "\fBIgnore\fR \fIValue\fR [, \fIValue\fR ...]" 4
 .IX Item "Ignore Value [, Value ...]"
-The ignore values allows to ignore Instances based on their name and the patterns
-specified by the various values you've entered. The match is a glob-type shell
-matching.
+The ignore values allows one to ignore Instances based on their name and the
+patterns specified by the various values you've entered. The match is a
+glob-type shell matching.
 .IP "\fBInvertMatch\fR \fItrue|false(default)\fR" 4
 .IX Item "InvertMatch true|false(default)"
 The invertmatch value should be use in combination of the Ignore option.
 It changes the behaviour of the Ignore option, from a blacklist behaviour
 when InvertMatch is set to false, to a whitelist when specified to true.
 .SS "The Host block"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-snmp.pod /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-snmp.pod
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-snmp.pod	2016-07-25 19:51:13.040860814 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-snmp.pod	2016-11-29 00:08:22.395470343 +0800
@@ -201,15 +201,15 @@
 degrees Celsius. The default value is, of course, B<0.0>.
 
 This value is not applied to counter-values.
 
 =item B<Ignore> I<Value> [, I<Value> ...]
 
-The ignore values allows to ignore Instances based on their name and the patterns
-specified by the various values you've entered. The match is a glob-type shell
-matching.
+The ignore values allows one to ignore Instances based on their name and the
+patterns specified by the various values you've entered. The match is a
+glob-type shell matching.
 
 =item B<InvertMatch> I<true|false(default)>
 
 The invertmatch value should be use in combination of the Ignore option.
 It changes the behaviour of the Ignore option, from a blacklist behaviour
 when InvertMatch is set to false, to a whitelist when specified to true.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-tg.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-tg.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-tg.1	2016-07-19 16:44:20.475958237 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-tg.1	2016-11-29 00:10:00.264498283 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-TG 1"
-.TH COLLECTD-TG 1 "2016-07-19" "5.4.2.398.g4474714" "collectd"
+.TH COLLECTD-TG 1 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-tg \- Traffic generator for collectd.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-threshold.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-threshold.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-threshold.5	2016-07-19 16:44:20.531958360 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-threshold.5	2016-11-29 00:10:00.340499090 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-THRESHOLD 5"
-.TH COLLECTD-THRESHOLD 5 "2016-07-19" "5.4.2.398.g4474714" "collectd"
+.TH COLLECTD-THRESHOLD 5 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-threshold \- Documentation of collectd's Threshold plugin
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-unixsock.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-unixsock.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/collectd-unixsock.5	2016-07-25 19:53:30.000997383 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/collectd-unixsock.5	2016-11-29 00:10:00.412499853 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-UNIXSOCK 5"
-.TH COLLECTD-UNIXSOCK 5 "2016-07-25" "5.5.1.166.g0e60b30" "collectd"
+.TH COLLECTD-UNIXSOCK 5 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-unixsock \- Documentation of collectd's "unixsock plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/config.h.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/config.h.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/config.h.in	2016-07-26 14:00:14.681951317 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/config.h.in	2016-11-29 00:09:58.792482667 +0800
@@ -1399,12 +1399,15 @@
 /* Define to 1 if you have the <sys/swap.h> header file. */
 #undef HAVE_SYS_SWAP_H
 
 /* Define to 1 if you have the <sys/sysctl.h> header file. */
 #undef HAVE_SYS_SYSCTL_H
 
+/* Define to 1 if you have the <sys/sysmacros.h> header file. */
+#undef HAVE_SYS_SYSMACROS_H
+
 /* Define to 1 if you have the <sys/types.h> header file. */
 #undef HAVE_SYS_TYPES_H
 
 /* Define to 1 if you have the <sys/ucred.h> header file. */
 #undef HAVE_SYS_UCRED_H
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/curl_json.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/curl_json.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/curl_json.c	2016-07-26 13:57:19.853451148 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/curl_json.c	2016-11-29 00:08:22.399470384 +0800
@@ -140,12 +140,15 @@
 } /* }}} size_t cj_curl_callback */
 
 static int cj_get_type (cj_key_t *key)
 {
   const data_set_t *ds;
 
+  if ((key == NULL) || !CJ_IS_KEY (key))
+    return -EINVAL;
+
   ds = plugin_get_ds (key->type);
   if (ds == NULL)
   {
     static char type[DATA_MAX_NAME_LEN] = "!!!invalid!!!";
 
     assert (key->type != NULL);
@@ -223,18 +226,21 @@
 
   /* Create a null-terminated version of the string. */
   memcpy (buffer, number, number_len);
   buffer[sizeof (buffer) - 1] = 0;
 
   if ((key == NULL) || !CJ_IS_KEY (key)) {
-    if (key != NULL && !db->state[db->depth].in_array/*can be inhomogeneous*/)
+    if (key != NULL && !db->state[db->depth].in_array/*can be inhomogeneous*/) {
       NOTICE ("curl_json plugin: Found \"%s\", but the configuration expects"
               " a map.", buffer);
+      return (CJ_CB_CONTINUE);
+    }
+
     cj_cb_inc_array_index (ctx, /* update_key = */ 1);
     key = db->state[db->depth].key;
-    if (key == NULL) {
+    if ((key == NULL) || !CJ_IS_KEY (key)) {
       return (CJ_CB_CONTINUE);
     }
   }
   else
   {
     cj_cb_inc_array_index (ctx, /* update_key = */ 1);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/daemon/common.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/daemon/common.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/daemon/common.c	2016-07-26 13:57:19.857451161 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/daemon/common.c	2016-11-29 00:08:22.403470426 +0800
@@ -61,12 +61,17 @@
 #endif
 
 #ifdef HAVE_LIBKSTAT
 extern kstat_ctl_t *kc;
 #endif
 
+/* AIX doesn't have MSG_DONTWAIT */
+#ifndef MSG_DONTWAIT
+#  define MSG_DONTWAIT MSG_NONBLOCK
+#endif
+
 #if !HAVE_GETPWNAM_R
 static pthread_mutex_t getpwnam_r_lock = PTHREAD_MUTEX_INITIALIZER;
 #endif
 
 #if !HAVE_STRERROR_R
 static pthread_mutex_t strerror_r_lock = PTHREAD_MUTEX_INITIALIZER;
@@ -1146,13 +1151,13 @@
       sfree (value);
       ERROR ("parse_value: Invalid data source type: %i.", ds_type);
       return -1;
   }
 
   if (value == endptr) {
-    ERROR ("parse_value: Failed to parse string as %s: %s.",
+    ERROR ("parse_value: Failed to parse string as %s: \"%s\".",
         DS_TYPE_TO_STRING (ds_type), value);
     sfree (value);
     return -1;
   }
   else if ((NULL != endptr) && ('\0' != *endptr))
     INFO ("parse_value: Ignoring trailing garbage \"%s\" after %s value. "
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/daemon/meta_data.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/daemon/meta_data.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/daemon/meta_data.c	2016-07-26 13:57:19.857451161 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/daemon/meta_data.c	2016-11-29 00:08:22.403470426 +0800
@@ -211,12 +211,23 @@
       break;
 
   return (e);
 } /* }}} meta_entry_t *md_entry_lookup */
 
 /*
+ * Each value_list_t*, as it is going through the system, is handled by exactly
+ * one thread. Plugins which pass a value_list_t* to another thread, e.g. the
+ * rrdtool plugin, must create a copy first. The meta data within a
+ * value_list_t* is not thread safe and doesn't need to be.
+ *
+ * The meta data associated with cache entries are a different story. There, we
+ * need to ensure exclusive locking to prevent leaks and other funky business.
+ * This is ensured by the uc_meta_data_get_*() functions.
+ */
+
+/*
  * Public functions
  */
 meta_data_t *meta_data_create (void) /* {{{ */
 {
   meta_data_t *md;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/daemon/plugin.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/daemon/plugin.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/daemon/plugin.c	2016-07-26 13:57:19.857451161 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/daemon/plugin.c	2016-11-29 00:08:22.403470426 +0800
@@ -1847,23 +1847,27 @@
 } /* int plugin_flush */
 
 void plugin_shutdown_all (void)
 {
 	llentry_t *le;
 
-	stop_read_threads ();
-
 	destroy_all_callbacks (&list_init);
 
+	stop_read_threads ();
+
 	pthread_mutex_lock (&read_lock);
 	llist_destroy (read_list);
 	read_list = NULL;
 	pthread_mutex_unlock (&read_lock);
 
 	destroy_read_heap ();
 
+	/* blocks until all write threads have shut down. */
+	stop_write_threads ();
+
+	/* ask all plugins to write out the state they kept. */
 	plugin_flush (/* plugin = */ NULL,
 			/* timeout = */ 0,
 			/* identifier = */ NULL);
 
 	le = NULL;
 	if (list_shutdown != NULL)
@@ -1887,14 +1891,12 @@
 
 		(*callback) ();
 
 		plugin_set_ctx (old_ctx);
 	}
 
-	stop_write_threads ();
-
 	/* Write plugins which use the `user_data' pointer usually need the
 	 * same data available to the flush callback. If this is the case, set
 	 * the free_function to NULL when registering the flush callback and to
 	 * the real free function when registering the write callback. This way
 	 * the data isn't freed twice. */
 	destroy_all_callbacks (&list_flush);
@@ -2268,13 +2270,13 @@
 		/* Set the value. */
 		switch (store_type)
 		{
 		case DS_TYPE_GAUGE:
 			vl->values[0].gauge = va_arg (ap, gauge_t);
 			if (store_percentage)
-				vl->values[0].gauge *= sum ? (100.0 / sum) : 0;
+				vl->values[0].gauge *= sum ? (100.0 / sum) : NAN;
 			break;
 		case DS_TYPE_ABSOLUTE:
 			vl->values[0].absolute = va_arg (ap, absolute_t);
 			break;
 		case DS_TYPE_COUNTER:
 			vl->values[0].counter  = va_arg (ap, counter_t);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/daemon/utils_match.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/daemon/utils_match.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/daemon/utils_match.c	2016-07-26 13:57:19.857451161 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/daemon/utils_match.c	2016-11-29 00:08:22.403470426 +0800
@@ -166,13 +166,13 @@
   {
     derive_t value;
     char *endptr = NULL;
 
     if (data->ds_type & UTILS_MATCH_CF_DERIVE_INC)
     {
-      data->value.counter++;
+      data->value.derive++;
       data->values_num++;
       return (0);
     }
 
     if (matches_num < 2)
       return (-1);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/libcollectdclient/client.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/libcollectdclient/client.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/libcollectdclient/client.c	2016-07-26 13:57:19.865451186 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/libcollectdclient/client.c	2016-11-29 00:08:22.407470467 +0800
@@ -33,12 +33,13 @@
 #endif
 
 #include "collectd/lcc_features.h"
 
 #include <stdlib.h>
 #include <stdio.h>
+#include <stdarg.h>
 #include <unistd.h>
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <sys/un.h>
 #include <string.h>
 #include <assert.h>
@@ -88,18 +89,12 @@
 
 #define LCC_SET_ERRSTR(c, ...) do { \
   snprintf ((c)->errbuf, sizeof ((c)->errbuf), __VA_ARGS__); \
   (c)->errbuf[sizeof ((c)->errbuf) - 1] = 0; \
 } while (0)
 
-#if COLLECT_DEBUG
-# define LCC_DEBUG(...) printf (__VA_ARGS__)
-#else
-# define LCC_DEBUG(...) /**/
-#endif
-
 /*
  * Types
  */
 struct lcc_connection_s
 {
   FILE *fh;
@@ -115,12 +110,28 @@
 };
 typedef struct lcc_response_s lcc_response_t;
 
 /*
  * Private functions
  */
+static int lcc_tracef(char const *format, ...)
+{
+  va_list ap;
+  int status;
+
+  char const *trace = getenv (LCC_TRACE_ENV);
+  if (!trace || (strcmp ("", trace) == 0) || (strcmp ("0", trace) == 0))
+    return 0;
+
+  va_start (ap, format);
+  status = vprintf (format, ap);
+  va_end (ap);
+
+  return status;
+}
+
 /* Even though Posix requires "strerror_r" to return an "int",
  * some systems (e.g. the GNU libc) return a "char *" _and_
  * ignore the second argument ... -tokkee */
 static char *sstrerror (int errnum, char *buf, size_t buflen)
 {
   buf[0] = 0;
@@ -247,13 +258,13 @@
 } /* }}} void lcc_response_free */
 
 static int lcc_send (lcc_connection_t *c, const char *command) /* {{{ */
 {
   int status;
 
-  LCC_DEBUG ("send:    --> %s\n", command);
+  lcc_tracef ("send:    --> %s\n", command);
 
   status = fprintf (c->fh, "%s\r\n", command);
   if (status < 0)
   {
     lcc_set_errno (c, errno);
     return (-1);
@@ -278,13 +289,13 @@
   if (ptr == NULL)
   {
     lcc_set_errno (c, errno);
     return (-1);
   }
   lcc_chomp (buffer);
-  LCC_DEBUG ("receive: <-- %s\n", buffer);
+  lcc_tracef ("receive: <-- %s\n", buffer);
 
   /* Convert the leading status to an integer and make `ptr' to point to the
    * beginning of the message. */
   ptr = NULL;
   errno = 0;
   res.status = strtol (buffer, &ptr, 0);
@@ -326,13 +337,13 @@
     if (ptr == NULL)
     {
       lcc_set_errno (c, errno);
       break;
     }
     lcc_chomp (buffer);
-    LCC_DEBUG ("receive: <-- %s\n", buffer);
+    lcc_tracef ("receive: <-- %s\n", buffer);
 
     res.lines[i] = strdup (buffer);
     if (res.lines[i] == NULL)
     {
       lcc_set_errno (c, ENOMEM);
       break;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/libcollectdclient/collectd/client.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/libcollectdclient/collectd/client.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/libcollectdclient/collectd/client.h	2016-07-26 13:57:19.865451186 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/libcollectdclient/collectd/client.h	2016-11-29 00:08:22.407470467 +0800
@@ -26,12 +26,19 @@
 
 #ifndef LIBCOLLECTD_COLLECTDCLIENT_H
 #define LIBCOLLECTD_COLLECTDCLIENT_H 1
 
 #include "lcc_features.h"
 
+/* COLLECTD_TRACE is the environment variable used to control trace output. When
+ * set to something non-zero, all lines sent to / received from the daemon are
+ * printed to STDOUT. */
+#ifndef LCC_TRACE_ENV
+# define LCC_TRACE_ENV "COLLECTD_TRACE"
+#endif
+
 /*
  * Includes (for data types)
  */
 #if HAVE_STDINT_H
 # include <stdint.h>
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/libcollectdclient/collectd/lcc_features.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/libcollectdclient/collectd/lcc_features.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/libcollectdclient/collectd/lcc_features.h	2016-07-26 13:59:26.001823799 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/libcollectdclient/collectd/lcc_features.h	2016-11-29 00:09:54.388435969 +0800
@@ -36,17 +36,17 @@
 #endif
 
 #define LCC_API_VERSION 0
 
 #define LCC_VERSION_MAJOR 5
 #define LCC_VERSION_MINOR 5
-#define LCC_VERSION_PATCH 2
+#define LCC_VERSION_PATCH 3
 
 #define LCC_VERSION_EXTRA ""
 
-#define LCC_VERSION_STRING "5.5.2"
+#define LCC_VERSION_STRING "5.5.3"
 
 #define LCC_VERSION_ENCODE(major, minor, patch) \
 	((major) * 10000 + (minor) * 100 + (patch))
 
 #define LCC_VERSION \
 	LCC_VERSION_ENCODE(LCC_VERSION_MAJOR, LCC_VERSION_MINOR, LCC_VERSION_PATCH)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/liboconfig/parser.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/liboconfig/parser.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/liboconfig/parser.c	2016-07-26 14:00:15.957954563 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/liboconfig/parser.c	2016-11-29 00:10:00.848504480 +0800
@@ -97,14 +97,14 @@
 #else
 # define YYERROR_VERBOSE 1
 #endif
 
 /* In a future release of Bison, this section will be replaced
    by #include "y.tab.h".  */
-#ifndef YY_YY_Y_TAB_H_INCLUDED
-# define YY_YY_Y_TAB_H_INCLUDED
+#ifndef YY_YY_PARSER_H_INCLUDED
+# define YY_YY_PARSER_H_INCLUDED
 /* Debug traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
 #endif
 #if YYDEBUG
 extern int yydebug;
@@ -160,13 +160,13 @@
 
 
 extern YYSTYPE yylval;
 
 int yyparse (void);
 
-#endif /* !YY_YY_Y_TAB_H_INCLUDED  */
+#endif /* !YY_YY_PARSER_H_INCLUDED  */
 
 /* Copy the second part of user declarations.  */
 
 #line 171 "parser.c" /* yacc.c:358  */
 
 #ifdef short
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/md.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/md.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/md.c	2016-07-19 16:42:46.635749808 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/md.c	2016-11-29 00:08:22.411470509 +0800
@@ -26,12 +26,16 @@
 
 #include <sys/ioctl.h>
 
 #include <linux/major.h>
 #include <linux/raid/md_u.h>
 
+#ifdef HAVE_SYS_SYSMACROS_H
+#include <sys/sysmacros.h>
+#endif
+
 #define PROC_DISKSTATS "/proc/diskstats"
 #define DEV_DIR "/dev"
 
 static const char *config_keys[] =
 {
   "Device",
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/modbus.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/modbus.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/modbus.c	2016-07-26 13:57:19.865451186 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/modbus.c	2016-11-29 00:08:22.411470509 +0800
@@ -18,19 +18,20 @@
  *
  * Authors:
  *   Florian Forster <octo at noris.net>
  **/
 
 #include "collectd.h"
+
 #include "common.h"
-#include "plugin.h"
 #include "configfile.h"
-
-#include <netdb.h>
+#include "plugin.h"
 
 #include <modbus.h>
+#include <netdb.h>
+#include <sys/socket.h>
 
 #ifndef LIBMODBUS_VERSION_CHECK
 /* Assume version 2.0.3 */
 # define LEGACY_LIBMODBUS 1
 #else
 /* Assume version 2.9.2 */
@@ -470,18 +471,15 @@
   if (host->connection == NULL)
   {
     status = EBADF;
   }
   else if (host->conntype == MBCONN_TCP)
   {
-    struct sockaddr sockaddr;
-    socklen_t saddrlen = sizeof (sockaddr);
-
-    status = getpeername (modbus_get_socket (host->connection),
-        &sockaddr, &saddrlen);
-    if (status != 0)
+    if (getpeername (modbus_get_socket (host->connection),
+          (void *) &(struct sockaddr_storage) {0},
+          &(socklen_t) {sizeof(struct sockaddr_storage)}) != 0)
       status = errno;
   }
 
   if ((status == EBADF) || (status == ENOTSOCK) || (status == ENOTCONN))
   {
     status = mb_init_connection (host);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/network.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/network.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/network.c	2016-07-26 13:57:19.869451200 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/network.c	2016-11-29 00:08:22.415470550 +0800
@@ -495,21 +495,21 @@
   n->meta = NULL;
 
   return (status);
 } /* }}} int network_dispatch_notification */
 
 #if HAVE_LIBGCRYPT
-static void network_init_gcrypt (void) /* {{{ */
+static int network_init_gcrypt (void) /* {{{ */
 {
   gcry_error_t err;
 
   /* http://lists.gnupg.org/pipermail/gcrypt-devel/2003-August/000458.html
    * Because you can't know in a library whether another library has
    * already initialized the library */
   if (gcry_control (GCRYCTL_ANY_INITIALIZATION_P))
-    return;
+    return (0);
 
  /* http://www.gnupg.org/documentation/manuals/gcrypt/Multi_002dThreading.html
   * To ensure thread-safety, it's important to set GCRYCTL_SET_THREAD_CBS
   * *before* initalizing Libgcrypt with gcry_check_version(), which itself must
   * be called before any other gcry_* function. GCRYCTL_ANY_INITIALIZATION_P
   * above doesn't count, as it doesn't implicitly initalize Libgcrypt.
@@ -517,27 +517,28 @@
   * tl;dr: keep all these gry_* statements in this exact order please. */
 # if GCRYPT_VERSION_NUMBER < 0x010600
   err = gcry_control (GCRYCTL_SET_THREAD_CBS, &gcry_threads_pthread);
   if (err)
   {
     ERROR ("network plugin: gcry_control (GCRYCTL_SET_THREAD_CBS) failed: %s", gcry_strerror (err));
-    abort ();
+    return (-1);
   }
 # endif
 
   gcry_check_version (NULL);
 
   err = gcry_control (GCRYCTL_INIT_SECMEM, 32768);
   if (err)
   {
-    ERROR ("network plugin: gcry_control (GCRYCTL_SET_THREAD_CBS) failed: %s", gcry_strerror (err));
-    abort ();
+    ERROR ("network plugin: gcry_control (GCRYCTL_INIT_SECMEM) failed: %s", gcry_strerror (err));
+    return (-1);
   }
 
   gcry_control (GCRYCTL_INITIALIZATION_FINISHED);
-} /* }}} void network_init_gcrypt */
+  return (0);
+} /* }}} int network_init_gcrypt */
 
 static gcry_cipher_hd_t network_get_aes256_cypher (sockent_t *se, /* {{{ */
     const void *iv, size_t iv_size, const char *username)
 {
   gcry_error_t err;
   gcry_cipher_hd_t *cyper_ptr;
@@ -2074,13 +2075,18 @@
 {
 #if HAVE_LIBGCRYPT /* {{{ */
 	if (se->type == SOCKENT_TYPE_CLIENT)
 	{
 		if (se->data.client.security_level > SECURITY_LEVEL_NONE)
 		{
-			network_init_gcrypt ();
+			if (network_init_gcrypt () < 0)
+			{
+				ERROR ("network plugin: Cannot configure client socket with "
+						"security: Failed to initialize crypto library.");
+				return (-1);
+			}
 
 			if ((se->data.client.username == NULL)
 					|| (se->data.client.password == NULL))
 			{
 				ERROR ("network plugin: Client socket with "
 						"security requested, but no "
@@ -2092,34 +2098,34 @@
 					se->data.client.password,
 					strlen (se->data.client.password));
 		}
 	}
 	else /* (se->type == SOCKENT_TYPE_SERVER) */
 	{
-		if (se->data.server.security_level > SECURITY_LEVEL_NONE)
+		if ((se->data.server.security_level > SECURITY_LEVEL_NONE)
+				&& (se->data.server.auth_file == NULL))
 		{
-			network_init_gcrypt ();
-
-			if (se->data.server.auth_file == NULL)
-			{
-				ERROR ("network plugin: Server socket with "
-						"security requested, but no "
-						"password file is configured.");
-				return (-1);
-			}
+			ERROR ("network plugin: Server socket with security requested, "
+					"but no \"AuthFile\" is configured.");
+			return (-1);
 		}
 		if (se->data.server.auth_file != NULL)
 		{
+			if (network_init_gcrypt () < 0)
+			{
+				ERROR ("network plugin: Cannot configure server socket with security: "
+						"Failed to initialize crypto library.");
+				return (-1);
+			}
+
 			se->data.server.userdb = fbh_create (se->data.server.auth_file);
 			if (se->data.server.userdb == NULL)
 			{
-				ERROR ("network plugin: Reading password file "
-						"`%s' failed.",
+				ERROR ("network plugin: Reading password file \"%s\" failed.",
 						se->data.server.auth_file);
-				if (se->data.server.security_level > SECURITY_LEVEL_NONE)
-					return (-1);
+				return (-1);
 			}
 		}
 	}
 #endif /* }}} HAVE_LIBGCRYPT */
 
 	return (0);
@@ -2906,12 +2912,17 @@
 
 static int network_write (const data_set_t *ds, const value_list_t *vl,
 		user_data_t __attribute__((unused)) *user_data)
 {
 	int status;
 
+	/* listen_loop is set to non-zero in the shutdown callback, which is
+	 * guaranteed to be called *after* all the write threads have been shut
+	 * down. */
+	assert (listen_loop == 0);
+
 	if (!check_send_okay (vl))
 	{
 #if COLLECT_DEBUG
 	  char name[6*DATA_MAX_NAME_LEN];
 	  FORMAT_VL (name, sizeof (name), vl);
 	  name[sizeof (name) - 1] = 0;
@@ -3544,16 +3555,12 @@
 	/* Check if we were already initialized. If so, just return - there's
 	 * nothing more to do (for now, that is). */
 	if (have_init)
 		return (0);
 	have_init = 1;
 
-#if HAVE_LIBGCRYPT
-	network_init_gcrypt ();
-#endif
-
 	if (network_config_stats != 0)
 		plugin_register_read ("network", network_stats_read);
 
 	plugin_register_shutdown ("network", network_shutdown);
 
 	send_buffer = malloc (network_config_packet_size);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/ping.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/ping.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/ping.c	2016-07-26 13:57:19.869451200 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/ping.c	2016-11-29 00:08:22.419470592 +0800
@@ -376,13 +376,13 @@
 
   pthread_mutex_lock (&ping_lock);
 
   if (ping_thread_loop != 0)
   {
     pthread_mutex_unlock (&ping_lock);
-    return (-1);
+    return (0);
   }
 
   ping_thread_loop = 1;
   ping_thread_error = 0;
   status = plugin_thread_create (&ping_thread_id, /* attr = */ NULL,
       ping_thread, /* arg = */ (void *) 0);
@@ -390,13 +390,13 @@
   {
     ping_thread_loop = 0;
     ERROR ("ping plugin: Starting thread failed.");
     pthread_mutex_unlock (&ping_lock);
     return (-1);
   }
-    
+
   pthread_mutex_unlock (&ping_lock);
   return (0);
 } /* }}} int start_thread */
 
 static int stop_thread (void) /* {{{ */
 {
@@ -441,16 +441,13 @@
   {
     ping_timeout = 0.9 * ping_interval;
     WARNING ("ping plugin: Timeout is greater than interval. "
         "Will use a timeout of %gs.", ping_timeout);
   }
 
-  if (start_thread () != 0)
-    return (-1);
-
-  return (0);
+  return (start_thread ());
 } /* }}} int ping_init */
 
 static int config_set_string (const char *name, /* {{{ */
     char **var, const char *value)
 {
   char *tmp;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/postgresql_default.conf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/postgresql_default.conf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/postgresql_default.conf	2016-07-19 16:42:46.643749825 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/postgresql_default.conf	2016-11-29 00:08:22.419470592 +0800
@@ -156,16 +156,16 @@
 	</Result>
 
 	MinVersion 80300
 </Query>
 
 <Query query_plans>
-	Statement "SELECT sum(seq_scan) AS seq, \
-			sum(seq_tup_read) AS seq_tup_read, \
-			sum(idx_scan) AS idx, \
-			sum(idx_tup_fetch) AS idx_tup_fetch \
+	Statement "SELECT coalesce(sum(seq_scan), 0) AS seq, \
+			  coalesce(sum(seq_tup_read), 0) AS seq_tup_read, \
+			  coalesce(sum(idx_scan), 0) AS idx, \
+			  coalesce(sum(idx_tup_fetch), 0) AS idx_tup_fetch \
 		FROM pg_stat_user_tables;"
 
 	<Result>
 		Type "pg_scan"
 		InstancePrefix "seq"
 		ValuesFrom "seq"
@@ -204,16 +204,16 @@
 
 	MinVersion 80300
 </Query>
 
 <Query query_plans_by_table>
 	Statement "SELECT schemaname, relname, \
-			seq_scan AS seq, \
-			seq_tup_read AS seq_tup_read, \
-			idx_scan AS idx, \
-			idx_tup_fetch AS idx_tup_fetch \
+			coalesce(seq_scan, 0) AS seq, \
+			coalesce(seq_tup_read, 0) AS seq_tup_read, \
+			coalesce(idx_scan, 0) AS idx, \
+			coalesce(idx_tup_fetch, 0) AS idx_tup_fetch \
 		FROM pg_stat_user_tables;"
 
 	<Result>
 		Type "pg_scan"
 		InstancePrefix "seq"
 		InstancesFrom "schemaname" "relname"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/powerdns.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/powerdns.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/powerdns.c	2016-07-26 13:57:19.869451200 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/powerdns.c	2016-11-29 00:08:22.419470592 +0800
@@ -48,13 +48,13 @@
 #define SERVER_SOCKET  LOCALSTATEDIR"/run/pdns.controlsocket"
 #define SERVER_COMMAND "SHOW * \n"
 
 #define RECURSOR_SOCKET  LOCALSTATEDIR"/run/pdns_recursor.controlsocket"
 #define RECURSOR_COMMAND "get noerror-answers nxdomain-answers " \
   "servfail-answers sys-msec user-msec qa-latency cache-entries cache-hits " \
-  "cache-misses questions\n"
+  "cache-misses questions \n"
 
 struct list_item_s;
 typedef struct list_item_s list_item_t;
 
 struct list_item_s
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/pyvalues.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/pyvalues.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/pyvalues.c	2016-07-26 13:57:19.873451213 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/pyvalues.c	2016-11-29 00:08:22.419470592 +0800
@@ -548,43 +548,48 @@
 		return NULL;
 	}
 	value = malloc(size * sizeof(*value));
 	for (i = 0; i < size; ++i) {
 		PyObject *item, *num;
 		item = PySequence_Fast_GET_ITEM(values, i); /* Borrowed reference. */
-		if (ds->ds->type == DS_TYPE_COUNTER) {
+		switch (ds->ds[i].type) {
+		case DS_TYPE_COUNTER:
 			num = PyNumber_Long(item); /* New reference. */
 			if (num != NULL) {
 				value[i].counter = PyLong_AsUnsignedLongLong(num);
 				Py_XDECREF(num);
 			}
-		} else if (ds->ds->type == DS_TYPE_GAUGE) {
+			break;
+		case DS_TYPE_GAUGE:
 			num = PyNumber_Float(item); /* New reference. */
 			if (num != NULL) {
 				value[i].gauge = PyFloat_AsDouble(num);
 				Py_XDECREF(num);
 			}
-		} else if (ds->ds->type == DS_TYPE_DERIVE) {
+			break;
+		case DS_TYPE_DERIVE:
 			/* This might overflow without raising an exception.
 			 * Not much we can do about it */
 			num = PyNumber_Long(item); /* New reference. */
 			if (num != NULL) {
 				value[i].derive = PyLong_AsLongLong(num);
 				Py_XDECREF(num);
 			}
-		} else if (ds->ds->type == DS_TYPE_ABSOLUTE) {
+			break;
+		case DS_TYPE_ABSOLUTE:
 			/* This might overflow without raising an exception.
 			 * Not much we can do about it */
 			num = PyNumber_Long(item); /* New reference. */
 			if (num != NULL) {
 				value[i].absolute = PyLong_AsUnsignedLongLong(num);
 				Py_XDECREF(num);
 			}
-		} else {
+			break;
+		default:
 			free(value);
-			PyErr_Format(PyExc_RuntimeError, "unknown data type %d for %s", ds->ds->type, value_list.type);
+			PyErr_Format(PyExc_RuntimeError, "unknown data type %d for %s", ds->ds[i].type, value_list.type);
 			return NULL;
 		}
 		if (PyErr_Occurred() != NULL) {
 			free(value);
 			return NULL;
 		}
@@ -652,43 +657,48 @@
 		return NULL;
 	}
 	value = malloc(size * sizeof(*value));
 	for (i = 0; i < size; ++i) {
 		PyObject *item, *num;
 		item = PySequence_Fast_GET_ITEM(values, i); /* Borrowed reference. */
-		if (ds->ds->type == DS_TYPE_COUNTER) {
+		switch (ds->ds[i].type) {
+		case DS_TYPE_COUNTER:
 			num = PyNumber_Long(item); /* New reference. */
 			if (num != NULL) {
 				value[i].counter = PyLong_AsUnsignedLongLong(num);
 				Py_XDECREF(num);
 			}
-		} else if (ds->ds->type == DS_TYPE_GAUGE) {
+			break;
+		case DS_TYPE_GAUGE:
 			num = PyNumber_Float(item); /* New reference. */
 			if (num != NULL) {
 				value[i].gauge = PyFloat_AsDouble(num);
 				Py_XDECREF(num);
 			}
-		} else if (ds->ds->type == DS_TYPE_DERIVE) {
+			break;
+		case DS_TYPE_DERIVE:
 			/* This might overflow without raising an exception.
 			 * Not much we can do about it */
 			num = PyNumber_Long(item); /* New reference. */
 			if (num != NULL) {
 				value[i].derive = PyLong_AsLongLong(num);
 				Py_XDECREF(num);
 			}
-		} else if (ds->ds->type == DS_TYPE_ABSOLUTE) {
+			break;
+		case DS_TYPE_ABSOLUTE:
 			/* This might overflow without raising an exception.
 			 * Not much we can do about it */
 			num = PyNumber_Long(item); /* New reference. */
 			if (num != NULL) {
 				value[i].absolute = PyLong_AsUnsignedLongLong(num);
 				Py_XDECREF(num);
 			}
-		} else {
+			break;
+		default:
 			free(value);
-			PyErr_Format(PyExc_RuntimeError, "unknown data type %d for %s", ds->ds->type, value_list.type);
+			PyErr_Format(PyExc_RuntimeError, "unknown data type %d for %s", ds->ds[i].type, value_list.type);
 			return NULL;
 		}
 		if (PyErr_Occurred() != NULL) {
 			free(value);
 			return NULL;
 		}
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/rrdcached.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/rrdcached.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/rrdcached.c	2016-07-26 13:57:19.873451213 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/rrdcached.c	2016-11-29 00:08:22.419470592 +0800
@@ -286,17 +286,38 @@
     plugin_register_write ("rrdcached", rc_write, /* user_data = */ NULL);
     plugin_register_flush ("rrdcached", rc_flush, /* user_data = */ NULL);
   }
   return (0);
 } /* int rc_config */
 
+static int try_reconnect (void)
+{
+  int status;
+
+  rrdc_disconnect ();
+
+  rrd_clear_error ();
+  status = rrdc_connect (daemon_address);
+  if (status != 0)
+  {
+    ERROR ("rrdcached plugin: Failed to reconnect to RRDCacheD "
+        "at %s: %s (status=%d)", daemon_address, rrd_get_error (), status);
+    return (-1);
+  }
+
+  INFO ("rrdcached plugin: Successfully reconnected to RRDCacheD "
+      "at %s", daemon_address);
+  return (0);
+} /* int try_reconnect */
+
 static int rc_read (void)
 {
   int status;
   rrdc_stats_t *head;
   rrdc_stats_t *ptr;
+  _Bool retried = 0;
 
   value_t values[1];
   value_list_t vl = VALUE_LIST_INIT;
 
   if (daemon_address == NULL)
     return (-1);
@@ -311,25 +332,41 @@
       || (daemon_address[0] == '/'))
     sstrncpy (vl.host, hostname_g, sizeof (vl.host));
   else
     sstrncpy (vl.host, daemon_address, sizeof (vl.host));
   sstrncpy (vl.plugin, "rrdcached", sizeof (vl.plugin));
 
+  rrd_clear_error ();
   status = rrdc_connect (daemon_address);
   if (status != 0)
   {
-    ERROR ("rrdcached plugin: rrdc_connect (%s) failed with status %i.",
-        daemon_address, status);
+    ERROR ("rrdcached plugin: Failed to connect to RRDCacheD "
+        "at %s: %s (status=%d)", daemon_address, rrd_get_error (), status);
     return (-1);
   }
 
-  head = NULL;
-  status = rrdc_stats_get (&head);
-  if (status != 0)
+  while (42)
   {
-    ERROR ("rrdcached plugin: rrdc_stats_get failed with status %i.", status);
+    /* The RRD client lib does not provide any means for checking a
+     * connection, hence we'll have to retry upon failed operations. */
+    head = NULL;
+    rrd_clear_error ();
+    status = rrdc_stats_get (&head);
+    if (status == 0)
+      break;
+
+    if (! retried)
+    {
+      retried = 1;
+      if (try_reconnect () == 0)
+        continue;
+      /* else: report the error and fail */
+    }
+
+    ERROR ("rrdcached plugin: rrdc_stats_get failed: %s (status=%i).",
+        rrd_get_error (), status);
     return (-1);
   }
 
   for (ptr = head; ptr != NULL; ptr = ptr->next)
   {
     if (ptr->type == RRDC_STATS_TYPE_GAUGE)
@@ -411,12 +448,13 @@
     user_data_t __attribute__((unused)) *user_data)
 {
   char filename[PATH_MAX];
   char values[512];
   char *values_array[2];
   int status;
+  _Bool retried = 0;
 
   if (daemon_address == NULL)
   {
     ERROR ("rrdcached plugin: daemon_address == NULL.");
     plugin_unregister_write ("rrdcached");
     return (-1);
@@ -467,60 +505,90 @@
       }
       else if (rrdcreate_config.async)
         return (0);
     }
   }
 
+  rrd_clear_error ();
   status = rrdc_connect (daemon_address);
   if (status != 0)
   {
-    ERROR ("rrdcached plugin: rrdc_connect (%s) failed with status %i.",
-        daemon_address, status);
+    ERROR ("rrdcached plugin: Failed to connect to RRDCacheD "
+        "at %s: %s (status=%d)", daemon_address, rrd_get_error (), status);
     return (-1);
   }
 
-  status = rrdc_update (filename, /* values_num = */ 1, (void *) values_array);
-  if (status != 0)
+  while (42)
   {
-    ERROR ("rrdcached plugin: rrdc_update (%s, [%s], 1) failed with "
-        "status %i.",
-        filename, values_array[0], status);
+    /* The RRD client lib does not provide any means for checking a
+     * connection, hence we'll have to retry upon failed operations. */
+    rrd_clear_error ();
+    status = rrdc_update (filename, /* values_num = */ 1, (void *) values_array);
+    if (status == 0)
+      break;
+
+    if (! retried)
+    {
+      retried = 1;
+      if (try_reconnect () == 0)
+        continue;
+      /* else: report the error and fail */
+    }
+
+    ERROR ("rrdcached plugin: rrdc_update (%s, [%s], 1) failed: %s (status=%i)",
+        filename, values_array[0], rrd_get_error (), status);
     return (-1);
   }
 
   return (0);
 } /* int rc_write */
 
 static int rc_flush (__attribute__((unused)) cdtime_t timeout, /* {{{ */
     const char *identifier,
     __attribute__((unused)) user_data_t *ud)
 {
   char filename[PATH_MAX + 1];
   int status;
+  _Bool retried = 0;
 
   if (identifier == NULL)
     return (EINVAL);
 
   if (datadir != NULL)
     ssnprintf (filename, sizeof (filename), "%s/%s.rrd", datadir, identifier);
   else
     ssnprintf (filename, sizeof (filename), "%s.rrd", identifier);
 
+  rrd_clear_error ();
   status = rrdc_connect (daemon_address);
   if (status != 0)
   {
-    ERROR ("rrdcached plugin: rrdc_connect (%s) failed with status %i.",
-        daemon_address, status);
+    ERROR ("rrdcached plugin: Failed to connect to RRDCacheD "
+        "at %s: %s (status=%d)", daemon_address, rrd_get_error (), status);
     return (-1);
   }
 
-  status = rrdc_flush (filename);
-  if (status != 0)
+  while (42)
   {
-    ERROR ("rrdcached plugin: rrdc_flush (%s) failed with status %i.",
-        filename, status);
+    /* The RRD client lib does not provide any means for checking a
+     * connection, hence we'll have to retry upon failed operations. */
+    rrd_clear_error ();
+    status = rrdc_flush (filename);
+    if (status == 0)
+      break;
+
+    if (! retried)
+    {
+      retried = 1;
+      if (try_reconnect () == 0)
+        continue;
+      /* else: report the error and fail */
+    }
+
+    ERROR ("rrdcached plugin: rrdc_flush (%s) failed: %s (status=%i).",
+        filename, rrd_get_error (), status);
     return (-1);
   }
   DEBUG ("rrdcached plugin: rrdc_flush (%s): Success.", filename);
 
   return (0);
 } /* }}} int rc_flush */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/tail_csv.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/tail_csv.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/tail_csv.c	2016-07-26 13:57:19.873451213 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/tail_csv.c	2016-11-29 00:08:22.423470634 +0800
@@ -542,13 +542,13 @@
                     md->type, md->name);
             continue;
         }
         else if (ds->ds_num != 1)
         {
             ERROR ("tail_csv plugin: The type \"%s\" has %i data sources. "
-                    "Only types with a single data soure are supported.",
+                    "Only types with a single data source are supported.",
                     ds->type, ds->ds_num);
             continue;
         }
 
         md->data_source_type = ds->ds->type;
     }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/types.db /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/types.db
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/types.db	2016-07-26 13:57:19.877451226 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/types.db	2016-11-29 00:08:22.423470634 +0800
@@ -155,13 +155,13 @@
 pg_scan			value:DERIVE:0:U
 pg_xact			value:DERIVE:0:U
 ping_droprate		value:GAUGE:0:100
 ping_stddev		value:GAUGE:0:65535
 ping			value:GAUGE:0:65535
 players			value:GAUGE:0:1000000
-power			value:GAUGE:0:U
+power			value:GAUGE:U:U
 pressure			value:GAUGE:0:U
 protocol_counter	value:DERIVE:0:U
 ps_code			value:GAUGE:0:9223372036854775807
 ps_count		processes:GAUGE:0:1000000, threads:GAUGE:0:1000000
 ps_cputime		user:DERIVE:0:U, syst:DERIVE:0:U
 ps_data			value:GAUGE:0:9223372036854775807
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/types.db.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/types.db.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/types.db.5	2016-07-25 19:53:29.944997326 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/types.db.5	2016-11-29 00:10:00.472500490 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "TYPES.DB 5"
-.TH TYPES.DB 5 "2016-07-25" "5.5.1.166.g0e60b30" "collectd"
+.TH TYPES.DB 5 "2016-11-28" "5.5.3" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 types.db \- Data\-set specifications for the system statistics collection daemon
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/utils_db_query.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/utils_db_query.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/utils_db_query.c	2016-07-26 13:57:19.877451226 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/utils_db_query.c	2016-11-29 00:08:22.427470675 +0800
@@ -243,21 +243,33 @@
           sizeof (vl.type_instance));
   }
   else /* if ((r->instances_num > 0) */
   {
     if (r->instance_prefix == NULL)
     {
-      strjoin (vl.type_instance, sizeof (vl.type_instance),
+      int status = strjoin (vl.type_instance, sizeof (vl.type_instance),
           r_area->instances_buffer, r->instances_num, "-");
+      if (status < 0)
+      {
+        ERROR ("udb_result_submit: creating type_instance failed with status %d.",
+            status);
+        return (status);
+      }
     }
     else
     {
       char tmp[DATA_MAX_NAME_LEN];
 
-      strjoin (tmp, sizeof (tmp), r_area->instances_buffer,
+      int status = strjoin (tmp, sizeof (tmp), r_area->instances_buffer,
           r->instances_num, "-");
+      if (status < 0)
+      {
+        ERROR ("udb_result_submit: creating type_instance failed with status %d.",
+            status);
+        return (status);
+      }
       tmp[sizeof (tmp) - 1] = 0;
 
       snprintf (vl.type_instance, sizeof (vl.type_instance), "%s-%s",
           r->instance_prefix, tmp);
     }
   }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/utils_format_graphite.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/utils_format_graphite.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/utils_format_graphite.c	2016-07-26 13:57:19.877451226 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/utils_format_graphite.c	2016-11-29 00:08:22.427470675 +0800
@@ -247,12 +247,13 @@
             ERROR ("format_graphite: target buffer too small");
             sfree (rates);
             return (-ENOMEM);
         }
         memcpy((void *) (buffer + buffer_pos), message, message_len);
         buffer_pos += message_len;
+        buffer[buffer_pos] = '\0';
     }
     sfree (rates);
     return (status);
 } /* int format_graphite */
 
 /* vim: set sw=2 sts=2 et fdm=marker : */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/utils_mount.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/utils_mount.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/utils_mount.c	2016-07-26 13:57:19.877451226 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/utils_mount.c	2016-11-29 00:08:22.427470675 +0800
@@ -21,22 +21,23 @@
 **/
 
 #if HAVE_CONFIG_H
 # include "config.h"
 #endif
 
+#define _GNU_SOURCE
+
+#include "collectd.h"
+#include "utils_mount.h"
+
 #if HAVE_XFS_XQM_H
-# define _GNU_SOURCE
 # include <xfs/xqm.h>
 #define XFS_SUPER_MAGIC_STR "XFSB"
 #define XFS_SUPER_MAGIC2_STR "BSFX"
 #endif
 
-#include "collectd.h"
-#include "utils_mount.h"
-
 #include "common.h" /* sstrncpy() et alii */
 #include "plugin.h" /* ERROR() macro */
 
 
 #if HAVE_GETVFSSTAT
 #  if HAVE_SYS_TYPES_H
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/vserver.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/vserver.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/vserver.c	2016-07-26 13:57:19.877451226 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/vserver.c	2016-11-29 00:08:22.427470675 +0800
@@ -128,21 +128,13 @@
 		return (-1);
 	return (v.derive);
 }
 
 static int vserver_read (void)
 {
-#if NAME_MAX < 1024
-# define DIRENT_BUFFER_SIZE (sizeof (struct dirent) + 1024 + 1)
-#else
-# define DIRENT_BUFFER_SIZE (sizeof (struct dirent) + NAME_MAX + 1)
-#endif
-
-	DIR 			*proc;
-	struct dirent 	*dent; /* 42 */
-	char dirent_buffer[DIRENT_BUFFER_SIZE];
+	DIR *proc;
 
 	errno = 0;
 	proc = opendir (PROCDIR);
 	if (proc == NULL)
 	{
 		char errbuf[1024];
@@ -150,37 +142,38 @@
 				sstrerror (errno, errbuf, sizeof (errbuf)));
 		return (-1);
 	}
 
 	while (42)
 	{
+		struct dirent *dent;
 		int len;
 		char file[BUFSIZE];
 
 		FILE *fh;
 		char buffer[BUFSIZE];
 
 		struct stat statbuf;
 		char *cols[4];
 
 		int status;
 
-		status = readdir_r (proc, (struct dirent *) dirent_buffer, &dent);
-		if (status != 0)
+		errno = 0;
+		dent = readdir (proc);
+		if (dent == NULL)
 		{
 			char errbuf[4096];
-			ERROR ("vserver plugin: readdir_r failed: %s",
-					sstrerror (errno, errbuf, sizeof (errbuf)));
+
+			if (errno == 0) /* end of directory */
+				break;
+
+			ERROR ("vserver plugin: failed to read directory %s: %s",
+					PROCDIR, sstrerror (errno, errbuf, sizeof (errbuf)));
 			closedir (proc);
 			return (-1);
 		}
-		else if (dent == NULL)
-		{
-			/* end of directory */
-			break;
-		}
 
 		if (dent->d_name[0] == '.')
 			continue;
 
 		len = ssnprintf (file, sizeof (file), PROCDIR "/%s", dent->d_name);
 		if ((len < 0) || (len >= BUFSIZE))
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/write_kafka.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/write_kafka.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/write_kafka.c	2016-07-26 13:57:19.877451226 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/write_kafka.c	2016-11-29 00:08:22.431470717 +0800
@@ -62,13 +63,20 @@
 
 static int kafka_handle(struct kafka_topic_context *);
 static int kafka_write(const data_set_t *, const value_list_t *, user_data_t *);
 static int32_t kafka_partition(const rd_kafka_topic_t *, const void *, size_t,
                                int32_t, void *, void *);
 
-#if defined HAVE_LIBRDKAFKA_LOGGER || defined HAVE_LIBRDKAFKA_LOG_CB
+/* Version 0.9.0 of librdkafka deprecates rd_kafka_set_logger() in favor of
+ * rd_kafka_conf_set_log_cb(). This is to make sure we're not using the
+ * deprecated function. */
+#ifdef HAVE_LIBRDKAFKA_LOG_CB
+# undef HAVE_LIBRDKAFKA_LOGGER
+#endif
+
+#if defined(HAVE_LIBRDKAFKA_LOGGER) || defined(HAVE_LIBRDKAFKA_LOG_CB)
 static void kafka_log(const rd_kafka_t *, int, const char *, const char *);
 
 static void kafka_log(const rd_kafka_t *rkt, int level,
                       const char *fac, const char *msg)
 {
     plugin_log(level, "%s", msg);
@@ -469,13 +477,13 @@
 				 "configuration option \"%s\" at top level.",
 				 child->key);
 		}
 	}
     if (conf != NULL)
         rd_kafka_conf_destroy(conf);
-	return (0);
+    return (0);
  errout:
     if (conf != NULL)
         rd_kafka_conf_destroy(conf);
     return -1;
 } /* }}} int kafka_config */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/write_redis.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/write_redis.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/write_redis.c	2016-07-26 13:57:19.877451226 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/write_redis.c	2016-11-29 00:08:22.431470717 +0800
@@ -80,13 +80,13 @@
 
   if (node->conn == NULL)
   {
     node->conn = redisConnectWithTimeout ((char *)node->host, node->port, node->timeout);
     if (node->conn == NULL)
     {
-      ERROR ("write_redis plugin: Connecting to host \"%s\" (port %i) failed: Unkown reason",
+      ERROR ("write_redis plugin: Connecting to host \"%s\" (port %i) failed: Unknown reason",
           (node->host != NULL) ? node->host : "localhost",
           (node->port != 0) ? node->port : 6379);
       pthread_mutex_unlock (&node->lock);
       return (-1);
     }
     else if (node->conn->err)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/write_riemann.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/write_riemann.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/write_riemann.c	2016-07-26 13:57:19.877451226 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/write_riemann.c	2016-11-29 00:08:22.431470717 +0800
@@ -23,20 +23,14 @@
  *
  * Authors:
  *   Pierre-Yves Ritschard <pyr at spootnik.org>
  *   Florian octo Forster <octo at collectd.org>
  */
 
-#include <sys/socket.h>
-#include <arpa/inet.h>
-#include <errno.h>
-#include <netdb.h>
-#include <inttypes.h>
-#include <pthread.h>
-
 #include "collectd.h"
+
 #include "plugin.h"
 #include "common.h"
 #include "configfile.h"
 #include "utils_cache.h"
 #include "riemann.pb-c.h"
 #include "write_riemann_threshold.h"
@@ -38,16 +32,20 @@
 #include "common.h"
 #include "configfile.h"
 #include "utils_cache.h"
 #include "riemann.pb-c.h"
 #include "write_riemann_threshold.h"
 
+#include <sys/socket.h>
+#include <arpa/inet.h>
+#include <netdb.h>
+
 #define RIEMANN_HOST		"localhost"
 #define RIEMANN_PORT		"5555"
 #define RIEMANN_TTL_FACTOR      2.0
-#define RIEMANN_BATCH_MAX      8192
+#define RIEMANN_BATCH_MAX	8192
 
 struct riemann_host {
 	char			*name;
 	char			*event_service_prefix;
 #define F_CONNECT	 0x01
 	uint8_t			 flags;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/write_riemann_threshold.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/write_riemann_threshold.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/write_riemann_threshold.c	2016-07-26 13:57:19.881451238 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/write_riemann_threshold.c	2016-11-29 00:08:22.431470717 +0800
@@ -22,17 +22,14 @@
  *   Pierre-Yves Ritschard <pyr at spootnik.org>
  *   Florian octo Forster <octo at collectd.org>
  *   Sebastian Harl <sh at tokkee.org>
  *   Andrés J. Díaz <ajdiaz at connectical.com>
  **/
 
-#include <assert.h>
-#include <ltdl.h>
-#include <pthread.h>
-
 #include "collectd.h"
+
 #include "common.h"
 #include "plugin.h"
 #include "utils_avltree.h"
 #include "utils_cache.h"
 #include "utils_threshold.h"
 #include "write_riemann_threshold.h"
@@ -34,12 +31,14 @@
 #include "plugin.h"
 #include "utils_avltree.h"
 #include "utils_cache.h"
 #include "utils_threshold.h"
 #include "write_riemann_threshold.h"
 
+#include <ltdl.h>
+
 /*
  * Threshold management
  * ====================
  * The following functions add, delete, etc. configured thresholds to
  * the underlying AVL trees.
  */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/write_riemann_threshold.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/write_riemann_threshold.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/src/write_riemann_threshold.h	2016-07-25 19:51:13.068860842 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/src/write_riemann_threshold.h	2016-11-29 00:08:22.431470717 +0800
@@ -1,6 +1,36 @@
+/**
+ * collectd - src/write_riemann_threshold.h
+ * Copyright (C) 2016       Ruben Kerkhof
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the
+ * Free Software Foundation; only version 2 of the License is applicable.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
+ *
+ * Author:
+ *   Ruben Kerkhof <ruben at rubenkerkhof.com>
+ **/
+
 #ifndef WRITE_RIEMANN_THRESHOLD_H
 #define WRITE_RIEMANN_THRESHOLD_H
 
-int write_riemann_threshold_check(const data_set_t *, const value_list_t *, int *);
+#include "plugin.h"
+
+/* write_riemann_threshold_check tests all matching thresholds and returns the
+ * worst result for each data source in "statuses". "statuses" must point to
+ * ds->ds_num integers to which the result is written.
+ *
+ * Returns zero on success and if no threshold has been configured. Returns
+ * less than zero on failure. */
+int write_riemann_threshold_check(const data_set_t *ds, const value_list_t *vl,
+    int *statuses);
 
-#endif
+#endif /* WRITE_RIEMANN_THRESHOLD_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/version-gen.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/version-gen.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2/version-gen.sh	2016-07-26 13:57:19.881451238 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.3/version-gen.sh	2016-11-29 00:08:22.431470717 +0800
@@ -1,9 +1,9 @@
 #!/bin/sh
 
-DEFAULT_VERSION="5.5.2.git"
+DEFAULT_VERSION="5.5.3.git"
 
 VERSION="`git describe 2> /dev/null | grep collectd | sed -e 's/^collectd-//'`"
 
 if test -z "$VERSION"; then
 	VERSION="$DEFAULT_VERSION"
 fi
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.5.2: ylwrap

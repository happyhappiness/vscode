diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/ChangeLog /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/ChangeLog
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/ChangeLog	2007-08-28 21:22:36.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/ChangeLog	2007-09-12 18:31:35.000000000 +0800
@@ -1,6 +1,16 @@
+2007-09-12, Version 4.0.8
+	* collectd: The `sstrerror' function was improved to work correctly
+	  with the broken GNU version of `strerror_r'.
+	* collectd: Write an error message to STDERR when loading of a plugin
+	  fails.
+	* apcups plugin: Fix the `types' used to submit the values: They still
+	  has an `apcups_' prefix which doesn't work anymore.
+	* rrdtool plugin: Create new RRD-files with the `begin' time set to
+	  whatever the client thinks is `now'..
+
 2007-08-26, Version 4.0.7
 	* documentation: Some typos have been fixed and some information has
 	  been improved.
 	* build system: Many fixes for detecting libraries in unusual places,
 	  such as on RedHat systems. The affected libraries are `libcurl',
 	  `libmysql', and `libupsclient'.
@@ -90,12 +100,15 @@
 	* apache plugin: Support for lighttpd's `BusyServers' (aka.
 	  connections) field was added by Florent Monbillard.
 	* collectd-nagios: The new `collectd-nagios' binary queries values
 	  from collectd, parses them and exits according to Nagios-standards.
 	* manpages: The manpages have been improved a lot.
 
+2007-08-31, Version 3.11.6
+	* processes plugin: Fix a potential segmentation fault.
+
 2007-05-29, Version 3.11.5
 	* configure: Added `AC_SYS_LARGEFILE' for LFS.
 	* ntpd plugin: Fix a potential buffer overflow.
 	* processes plugin: Fix a bug when run under Linux 2.4. All processes
 	  were accounted as `zombies'.
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/configure	2007-08-27 01:36:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/configure	2007-09-12 18:32:10.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.61 for collectd 4.0.7.
+# Generated by GNU Autoconf 2.61 for collectd 4.0.8.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
 # This configure script is free software; the Free Software Foundation
 # gives unlimited permission to copy, distribute and modify it.
 ## --------------------- ##
@@ -723,14 +723,14 @@
 MAKEFLAGS=
 SHELL=${CONFIG_SHELL-/bin/sh}
 
 # Identity of this package.
 PACKAGE_NAME='collectd'
 PACKAGE_TARNAME='collectd'
-PACKAGE_VERSION='4.0.7'
-PACKAGE_STRING='collectd 4.0.7'
+PACKAGE_VERSION='4.0.8'
+PACKAGE_STRING='collectd 4.0.8'
 PACKAGE_BUGREPORT=''
 
 ac_unique_file="src/collectd.c"
 ac_default_prefix="/opt/collectd"
 # Factoring default headers for most tests.
 ac_includes_default="\
@@ -1530,13 +1530,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures collectd 4.0.7 to adapt to many kinds of systems.
+\`configure' configures collectd 4.0.8 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -1600,13 +1600,13 @@
   --host=HOST       cross-compile to build programs to run on HOST [BUILD]
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of collectd 4.0.7:";;
+     short | recursive ) echo "Configuration of collectd 4.0.8:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
@@ -1777,13 +1777,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-collectd configure 4.0.7
+collectd configure 4.0.8
 generated by GNU Autoconf 2.61
 
 Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
@@ -1791,13 +1791,13 @@
   exit
 fi
 cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by collectd $as_me 4.0.7, which was
+It was created by collectd $as_me 4.0.8, which was
 generated by GNU Autoconf 2.61.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 exec 5>>config.log
@@ -2464,13 +2464,13 @@
   fi
 fi
 
 
 # Define the identity of the package.
  PACKAGE='collectd'
- VERSION='4.0.7'
+ VERSION='4.0.8'
 
 
 cat >>confdefs.h <<_ACEOF
 #define PACKAGE "$PACKAGE"
 _ACEOF
 
@@ -34697,12 +34697,301 @@
 _ACEOF
 
 fi
 done
 
 
+{ echo "$as_me:$LINENO: checking whether strerror_r is declared" >&5
+echo $ECHO_N "checking whether strerror_r is declared... $ECHO_C" >&6; }
+if test "${ac_cv_have_decl_strerror_r+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_includes_default
+int
+main ()
+{
+#ifndef strerror_r
+  (void) strerror_r;
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_cv_have_decl_strerror_r=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_have_decl_strerror_r=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_have_decl_strerror_r" >&5
+echo "${ECHO_T}$ac_cv_have_decl_strerror_r" >&6; }
+if test $ac_cv_have_decl_strerror_r = yes; then
+
+cat >>confdefs.h <<_ACEOF
+#define HAVE_DECL_STRERROR_R 1
+_ACEOF
+
+
+else
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_DECL_STRERROR_R 0
+_ACEOF
+
+
+fi
+
+
+
+for ac_func in strerror_r
+do
+as_ac_var=`echo "ac_cv_func_$ac_func" | $as_tr_sh`
+{ echo "$as_me:$LINENO: checking for $ac_func" >&5
+echo $ECHO_N "checking for $ac_func... $ECHO_C" >&6; }
+if { as_var=$as_ac_var; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+/* Define $ac_func to an innocuous variant, in case <limits.h> declares $ac_func.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define $ac_func innocuous_$ac_func
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char $ac_func (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef $ac_func
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char $ac_func ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_$ac_func || defined __stub___$ac_func
+choke me
+#endif
+
+int
+main ()
+{
+return $ac_func ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  eval "$as_ac_var=yes"
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	eval "$as_ac_var=no"
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+fi
+ac_res=`eval echo '${'$as_ac_var'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+if test `eval echo '${'$as_ac_var'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+done
+
+{ echo "$as_me:$LINENO: checking whether strerror_r returns char *" >&5
+echo $ECHO_N "checking whether strerror_r returns char *... $ECHO_C" >&6; }
+if test "${ac_cv_func_strerror_r_char_p+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+
+    ac_cv_func_strerror_r_char_p=no
+    if test $ac_cv_have_decl_strerror_r = yes; then
+      cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_includes_default
+int
+main ()
+{
+
+	  char buf[100];
+	  char x = *strerror_r (0, buf, sizeof buf);
+	  char *p = strerror_r (0, buf, sizeof buf);
+	  return !p || x;
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_cv_func_strerror_r_char_p=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+    else
+      # strerror_r is not declared.  Choose between
+      # systems that have relatively inaccessible declarations for the
+      # function.  BeOS and DEC UNIX 4.0 fall in this category, but the
+      # former has a strerror_r that returns char*, while the latter
+      # has a strerror_r that returns `int'.
+      # This test should segfault on the DEC system.
+      if test "$cross_compiling" = yes; then
+  :
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_includes_default
+	extern char *strerror_r ();
+int
+main ()
+{
+char buf[100];
+	  char x = *strerror_r (0, buf, sizeof buf);
+	  return ! isalpha (x);
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  ac_cv_func_strerror_r_char_p=yes
+else
+  echo "$as_me: program exited with status $ac_status" >&5
+echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
+fi
+
+
+    fi
+
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_func_strerror_r_char_p" >&5
+echo "${ECHO_T}$ac_cv_func_strerror_r_char_p" >&6; }
+if test $ac_cv_func_strerror_r_char_p = yes; then
+
+cat >>confdefs.h <<\_ACEOF
+#define STRERROR_R_CHAR_P 1
+_ACEOF
+
+fi
+
+
 
 for ac_func in getpwnam_r
 do
 as_ac_var=`echo "ac_cv_func_$ac_func" | $as_tr_sh`
 { echo "$as_me:$LINENO: checking for $ac_func" >&5
 echo $ECHO_N "checking for $ac_func... $ECHO_C" >&6; }
@@ -44699,13 +44988,13 @@
 exec 6>&1
 
 # Save the log message, to keep $[0] and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by collectd $as_me 4.0.7, which was
+This file was extended by collectd $as_me 4.0.8, which was
 generated by GNU Autoconf 2.61.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -44752,13 +45041,13 @@
 
 Report bugs to <bug-autoconf@gnu.org>."
 
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF
 ac_cs_version="\\
-collectd config.status 4.0.7
+collectd config.status 4.0.8
 configured by $0, generated by GNU Autoconf 2.61,
   with options \\"`echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
 Copyright (C) 2006 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/configure.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/configure.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/configure.in	2007-08-27 01:35:57.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/configure.in	2007-09-12 18:31:35.000000000 +0800
@@ -1,8 +1,8 @@
 dnl Process this file with autoconf to produce a configure script.
-AC_INIT(collectd, 4.0.7)
+AC_INIT(collectd, 4.0.8)
 AC_CONFIG_SRCDIR(src/collectd.c)
 AC_CONFIG_HEADERS(src/config.h)
 AM_INIT_AUTOMAKE(dist-bzip2)
 AC_LANG(C)
 
 AC_PREFIX_DEFAULT("/opt/collectd")
@@ -421,12 +421,14 @@
 AC_CHECK_FUNCS(gettimeofday select strdup strtol)
 AC_CHECK_FUNCS(getaddrinfo getnameinfo)
 AC_CHECK_FUNCS(strchr memcpy strstr strcmp strncmp strncpy strlen)
 AC_CHECK_FUNCS(strncasecmp strcasecmp)
 AC_CHECK_FUNCS(openlog syslog closelog)
 
+AC_FUNC_STRERROR_R
+
 AC_CHECK_FUNCS(getpwnam_r)
 AC_CHECK_FUNCS(getgrnam_r)
 
 socket_needs_socket="no"
 AC_CHECK_FUNCS(socket, [], AC_CHECK_LIB(socket, socket, [socket_needs_socket="yes"], AC_MSG_ERROR(cannot find socket)))
 AM_CONDITIONAL(BUILD_WITH_LIBSOCKET, test "x$socket_needs_socket" = "xyes")
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/contrib/collection.cgi /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/contrib/collection.cgi
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/contrib/collection.cgi	2007-08-27 01:07:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/contrib/collection.cgi	2007-09-12 18:31:35.000000000 +0800
@@ -12,17 +12,27 @@
 use Data::Dumper ();
 
 our $Config = "/etc/collection.conf";
 our @DataDirs = ();
 our $LibDir;
 
-our @RRDDefaultArgs = ('-w', '800');
+our $ValidTimespan =
+{
+  hour => 3600,
+  day => 86400,
+  week => 7 * 86400,
+  month => 31 * 86400,
+  year => 366 * 86400
+};
+
+our @RRDDefaultArgs = ('-w', '400');
 
 our $Args = {};
 
 our $GraphDefs;
+our $MetaGraphDefs = {};
 load_graph_definitions ();
 
 for (qw(action host plugin plugin_instance type type_instance timespan))
 {
 	$Args->{$_} = param ($_);
 }
@@ -73,134 +83,12 @@
 			print STDERR "Unknown key: $key\n";
 		}
 	}
 	close ($fh);
 } # read_config
 
-#sub validate_args
-#{
-#	if (!$Args->{'host'} || ($Args->{'host'} =~ m#/#)
-#		|| !$Args->{'plugin'} || ($Args->{'plugin'} =~ m#/#)
-#		|| (defined ($Args->{'plugin_instance'}) && ($Args->{'plugin_instance'} =~ m#/#))
-#		|| !$Args->{'type'} || ($Args->{'type'} =~ m#/#)
-#		|| (defined ($Args->{'type_instance'}) && ($Args->{'type_instance'} =~ m#/#)))
-#	{
-#		delete ($Args->{'host'});
-#		delete ($Args->{'plugin'});
-#		delete ($Args->{'plugin_instance'});
-#		delete ($Args->{'type'});
-#		delete ($Args->{'type_instance'});
-#	}
-#	elsif ($Args->{'type_instance'} eq '*')
-#	{
-#		my $subdir = $Args->{'host'} . '/'
-#		. $Args->{'plugin'} . (defined ($Args->{'plugin_instance'}) ? ('-' . $Args->{'plugin_instance'}) : '');
-#		my %type_instances = ();
-#		my $regex_str = '^' . quotemeta ($Args->{'type'}) . '-(.*)\.rrd';
-#		my $regex = qr/$regex_str/;
-#		my $mtime = 0;
-#
-#		for (my $i = 0; $i < @DataDirs; $i++)
-#		{
-#			my $dh;
-#			my @files = ();
-#			opendir ($dh, $DataDirs[$i] . '/' . $subdir) or next;
-#			for (readdir ($dh))
-#			{
-#				my $file = $_;
-#				if ($file =~ $regex)
-#				{
-#					my $tmp_mtime;
-#					my $type_instance = $1;
-#					my $filename = $DataDirs[$i] . '/' . $subdir . '/' . $Args->{'type'} . '-' . $type_instance . '.rrd';
-#
-#					$type_instances{$type_instance} = [] if (!exists ($type_instances{$type_instance}));
-#					$tmp_mtime = (stat ($filename))[9];
-#					next if (!$tmp_mtime);
-#
-#					push (@{$type_instances{$type_instance}}, $filename);
-#					$mtime = $tmp_mtime if ($mtime < $tmp_mtime);
-#				}
-#			}
-#			closedir ($dh);
-#		}
-#
-#		if (!keys %type_instances)
-#		{
-#			print STDOUT header (-Status => '404 File not found', -Content_Type => 'text/plain');
-#			print STDOUT <<MSG;
-#Sorry, the requested file could not be found anywhere.
-#DataDirs = ${\join ('; ', @DataDirs)}
-#subdir   = $subdir
-#MSG
-#			exit (0);
-#		}
-#
-#		$Args->{'files'} = \%type_instances;
-#		$Args->{'mtime'} = $mtime;
-#	}
-#	else
-#	{
-#		my $filename = $Args->{'host'} . '/'
-#		. $Args->{'plugin'} . (defined ($Args->{'plugin_instance'}) ? ('-' . $Args->{'plugin_instance'}) : '') . '/'
-#		. $Args->{'type'} . (defined ($Args->{'type_instance'}) ? ('-' . $Args->{'type_instance'}) : '') . '.rrd';
-#		my @files = ();
-#		my $mtime = 0;
-#
-#		for (my $i = 0; $i < @DataDirs; $i++)
-#		{
-#			my $tmp_file;
-#			my $tmp_mtime;
-#			$tmp_file = $DataDirs[$i] . '/' . $filename;
-#			next if (!-e $tmp_file);
-#			$tmp_mtime = (stat ($tmp_file))[9];
-#			next if (!$tmp_mtime);
-#
-#			push (@files, $tmp_file);
-#			$mtime = $tmp_mtime if ($mtime < $tmp_mtime);
-#		}
-#
-#		if (!@files)
-#		{
-#			print STDOUT header (-Status => '404 File not found', -Content_Type => 'text/plain');
-#			print STDOUT <<MSG;
-#Sorry, the requested file could not be found anywhere.
-#DataDirs = ${\join ('; ', @DataDirs)}
-#filename = $filename
-#MSG
-#			exit (0);
-#		}
-#		$Args->{'files'} = \@files;
-#		$Args->{'mtime'} = $mtime;
-#	}
-#
-#	if ($Args->{'timespan'})
-#	{
-#		if ($Args->{'timespan'} =~ m/^([0-9]+)$/)
-#		{
-#			$Args->{'timespan'} = (-1) * $1;
-#		}
-#		elsif ($Args->{'timespan'} =~ m/^(hour|day|week|month|year)$/)
-#		{
-#			my %map =
-#			(
-#				hour => -3600,
-#				day => -86400,
-#				week => 7 * -86400,
-#				month => 31 * -86400,
-#				year => 366 * -86400
-#			);
-#			$Args->{'timespan'} = $map{$1};
-#		}
-#		else
-#		{
-#			$Args->{'timespan'} = -86400;
-#		}
-#	}
-#} # validate_args
-
 sub validate_args
 {
 	if ($Args->{'action'} && ($Args->{'action'} =~ m/^(overview|show_host|show_plugin|show_type|show_graph)$/))
 	{
 		$Args->{'action'} = $1;
 	}
@@ -244,30 +132,67 @@
 	else
 	{
 	  $Args->{'timespan'} = 'day';
 	}
 } # validate_args
 
-sub _find_hosts
 {
-  my %hosts = ();
+  my $hosts;
+  sub _find_hosts
+  {
+    if (defined ($hosts))
+    {
+      return (keys %$hosts);
+    }
 
-  for (my $i = 0; $i < @DataDirs; $i++)
+    $hosts = {};
+
+    for (my $i = 0; $i < @DataDirs; $i++)
+    {
+      my @tmp;
+      my $dh;
+
+      opendir ($dh, $DataDirs[$i]) or next;
+      @tmp = grep { ($_ !~ m/^\./) && (-d $DataDirs[$i] . '/' . $_) } (readdir ($dh));
+      closedir ($dh);
+
+      $hosts->{$_} = 1 for (@tmp);
+    } # for (@DataDirs)
+
+    return (keys %$hosts);
+  } # _find_hosts
+}
+
+sub _get_param_host
+{
+  my %all_hosts = map { $_ => 1 } (_find_hosts ());
+  my @selected_hosts = ();
+  for (param ('host'))
   {
-    my @tmp;
-    my $dh;
+    if (defined ($all_hosts{$_}))
+    {
+      push (@selected_hosts, "$_");
+    }
+  }
+  return (@selected_hosts);
+} # _get_param_host
 
-    opendir ($dh, $DataDirs[$i]) or next;
-    @tmp = grep { ($_ !~ m/^\./) && (-d $DataDirs[$i] . '/' . $_) } (readdir ($dh));
-    closedir ($dh);
+sub _get_param_timespan
+{
+  my $timespan = param ('timespan');
 
-    $hosts{$_} = 1 for (@tmp);
-  } # for (@DataDirs)
+  $timespan ||= 'day';
+  $timespan = lc ($timespan);
 
-  return (keys %hosts);
-} # _find_hosts
+  if (!defined ($ValidTimespan->{$timespan}))
+  {
+    $timespan = 'day';
+  }
+
+  return ($timespan);
+} # _get_param_timespan
 
 sub _find_plugins
 {
   my $host = shift;
   my %plugins = ();
 
@@ -287,13 +212,13 @@
       $plugins{$plugin} = [] if (!$plugins{$plugin});
       push (@{$plugins{$plugin}}, $instance) if (defined ($instance));
     }
   } # for (@DataDirs)
 
   return (%plugins);
-} # _find_hosts
+} # _find_plugins
 
 sub _find_types
 {
   my $host = shift;
   my $plugin = shift;
   my $plugin_instance = shift;
@@ -319,91 +244,123 @@
     }
   } # for (@DataDirs)
 
   return (%types);
 } # _find_types
 
-# sub _find_files_plugin
-# {
-# 	my $host = shift;
-# 	my $plugin = shift;
-# 	my $plugin_instance = shift;
-# 	my $type = shift;
-# 	my $type_instance = shift;
-# 
-# 	my @plugins = ();
-# 	my %files = ();
-# 
-# 	if (!$plugin || ($plugin eq '*'))
-# 	{
-# 	}
-# 	else
-# 	{
-# 		@plugins = ($plugin);
-# 	}
-# } # _find_files_plugin
-# 
-# sub _find_files_host
-# {
-# 	my $host = shift;
-# 	my $plugin = shift;
-# 	my $plugin_instance = shift;
-# 	my $type = shift;
-# 	my $type_instance = shift;
-# 
-# 	my @hosts = ();
-# 	my %files = ();
-# 
-# 	if (!$host || ($host eq '*'))
-# 	{
-# 		my %hosts;
-# 		for (my $i = 0; $i < @DataDirs; $i++)
-# 		{
-# 			my @tmp;
-# 			my $dh;
-# 			
-# 			opendir ($dh, $DataDirs[$i]) or next;
-# 			@tmp = grep { ($_ !~ m/^\./) && (-d $_) } (readdir ($dh));
-# 			closedir ($dh);
-# 
-# 			$hosts{$_} = 1 for (@tmp);
-# 		} # for (@DataDirs)
-# 		@hosts = keys %hosts;
-# 	}
-# 	else
-# 	{
-# 		@hosts = ($host);
-# 	}
-# 
-# 	for (my $i = 0; $i < @hosts; $i++)
-# 	{
-# 		my @files = _find_files_plugin ($hosts[$i], $plugin,
-# 			$plugin_instance, $type, $type_instance);
-# 		$files{$_} = 1 for (@files);
-# 	}
-# 
-# 	return (wantarray () ? keys %files : [keys %files]);
-# } # _find_files_host
-# 
-# sub _find_files
-# {
-#   my $host = shift;
-#   my $plugin = shift;
-#   my $plugin_instance = shift;
-#   my $type = shift;
-#   my $type_instance = shift;
-# 
-#   if ($host eq '*')
-#   {
-#     my @hosts = _find_all_hosts ();
-# 
-#   for (my $i = 0; $i < @DataDirs; $i++)
-#   {
-# 
-#   } # for (i)
-# } # _find_files
+sub _find_files_for_host
+{
+  my $host = shift;
+  my $ret = {};
+
+  my %plugins = _find_plugins ($host);
+  for (keys %plugins)
+  {
+    my $plugin = $_;
+    my $plugin_instances = $plugins{$plugin};
+
+    if (!$plugin_instances || !@$plugin_instances)
+    {
+      $plugin_instances = ['-'];
+    }
+
+    $ret->{$plugin} = {};
+
+    for (@$plugin_instances)
+    {
+      my $plugin_instance = $_;
+      my %types = _find_types ($host, $plugin,
+	($plugin_instance ne '-') ? $plugin_instance : undef);
+
+      $ret->{$plugin}{$plugin_instance} = {};
+
+      for (keys %types)
+      {
+	my $type = $_;
+	my $type_instances = $types{$type};
+
+	$ret->{$plugin}{$plugin_instance}{$type} = {};
+
+	for (@$type_instances)
+	{
+	  $ret->{$plugin}{$plugin_instance}{$type}{$_} = 1;
+	}
+
+	if (!@$type_instances)
+	{
+	  $ret->{$plugin}{$plugin_instance}{$type}{'-'} = 1;
+	}
+      } # for (keys %types)
+    } # for (@$plugin_instances)
+  } # for (keys %plugins)
+
+  return ($ret);
+} # _find_files_for_host
+
+sub _find_files_for_hosts
+{
+  my @hosts = @_;
+  my $all_plugins = {};
+
+  for (my $i = 0; $i < @hosts; $i++)
+  {
+    my $tmp = _find_files_for_host ($hosts[$i]);
+    _files_union ($all_plugins, $tmp);
+  }
+
+  return ($all_plugins);
+} # _find_files_for_hosts
+
+sub _files_union
+{
+  my $dest = shift;
+  my $src = shift;
+
+  for (keys %$src)
+  {
+    my $plugin = $_;
+    $dest->{$plugin} ||= {};
+
+    for (keys %{$src->{$plugin}})
+    {
+      my $pinst = $_;
+      $dest->{$plugin}{$pinst} ||= {};
+
+      for (keys %{$src->{$plugin}{$pinst}})
+      {
+	my $type = $_;
+	$dest->{$plugin}{$pinst}{$type} ||= {};
+
+	for (keys %{$src->{$plugin}{$pinst}{$type}})
+	{
+	  my $tinst = $_;
+	  $dest->{$plugin}{$pinst}{$type}{$tinst} = 1;
+	}
+      }
+    }
+  }
+} # _files_union
+
+sub _files_plugin_inst_count
+{
+  my $src = shift;
+  my $i = 0;
+
+  for (keys %$src)
+  {
+    if (exists ($MetaGraphDefs->{$_}))
+    {
+      $i++;
+    }
+    else
+    {
+      $i = $i + keys %{$src->{$_}};
+    }
+  }
+  return ($i);
+} # _files_plugin_count
 
 sub list_hosts
 {
   my @hosts = _find_hosts ();
   @hosts = sort (@hosts);
 
@@ -415,87 +372,283 @@
 
     print qq(  <li><a href="${\script_name ()}?action=show_host;host=$host_url">$host_html</a></li>\n);
   }
   print "</ul>\n";
 } # list_hosts
 
+sub _string_to_color
+{
+  my $color = shift;
+  if ($color =~ m/([0-9A-Fa-f][0-9A-Fa-f])([0-9A-Fa-f][0-9A-Fa-f])([0-9A-Fa-f][0-9A-Fa-f])/)
+  {
+    return ([hex ($1) / 255.0, hex ($2) / 255.0, hex ($3) / 255.0]);
+  }
+  return;
+} # _string_to_color
+
+sub _color_to_string
+{
+  confess ("Wrong number of arguments") if (@_ != 1);
+  return (sprintf ('%02hx%02hx%02hx', map { int (255.0 * $_) } @{$_[0]}));
+} # _color_to_string
+
+sub _get_random_color
+{
+  my ($r, $g, $b) = (rand (), rand ());
+  my $min = 0.0;
+  my $max = 1.0;
+
+  if (($r + $g) < 1.0)
+  {
+    $min = 1.0 - ($r + $g);
+  }
+  else
+  {
+    $max = 2.0 - ($r + $g);
+  }
+
+  $b = $min + (rand () * ($max - $min));
+
+  return ([$r, $g, $b]);
+} # _get_random_color
+
+sub _get_faded_color
+{
+  my $fg = shift;
+  my $bg;
+  my %opts = @_;
+  my $ret = [undef, undef, undef];
+
+  $opts{'background'} ||= [1.0, 1.0, 1.0];
+  $opts{'alpha'} ||= 0.25;
+
+  if (!ref ($opts{'background'}))
+  {
+    $opts{'background'} = _string_to_color ($opts{'background'})
+      or confess ("Cannot parse background color " . $opts{'background'});
+  }
+  $bg = $opts{'background'};
+
+  for (my $i = 0; $i < 3; $i++)
+  {
+    $ret->[$i] = ($opts{'alpha'} * $fg->[$i])
+       + ((1.0 - $opts{'alpha'}) * $bg->[$i]);
+  }
+
+  return ($ret);
+} # _get_faded_color
+
+sub _custom_sort_arrayref
+{
+  my $array_ref = shift;
+  my $array_sort = shift;
+
+  my %elements = map { $_ => 1 } (@$array_ref);
+  splice (@$array_ref, 0);
+
+  for (@$array_sort)
+  {
+    next if (!exists ($elements{$_}));
+    push (@$array_ref, $_);
+    delete ($elements{$_});
+  }
+  push (@$array_ref, sort (keys %elements));
+} # _custom_sort_arrayref
+
 sub action_show_host
 {
-  my $host = shift;
-  my $host_url = uri_escape ($host);
-  my %plugins = _find_plugins ($host);
+  my @hosts = _get_param_host ();
+  @hosts = sort (@hosts);
+
+  my $timespan = _get_param_timespan ();
+  my $all_plugins = _find_files_for_hosts (@hosts);
+
+  my $url_prefix = script_name () . '?action=show_plugin'
+  . join ('', map { ';host=' . uri_escape ($_) } (@hosts))
+  . ';timespan=' . uri_escape ($timespan);
 
   print qq(    <div><a href="${\script_name ()}?action=overview">Back to list of hosts</a></div>\n);
 
-  print "<ul>\n";
-  for (sort (keys %plugins))
+  print "    <p>Available plugins:</p>\n"
+  . "    <ul>\n";
+  for (sort (keys %$all_plugins))
   {
     my $plugin = $_;
     my $plugin_html = encode_entities ($plugin);
-    my $plugin_url = uri_escape ($plugin);
-
-    for (@{$plugins{$plugin}})
-    {
-      my $instance = $_;
-      my $instance_html = encode_entities ($instance);
-      my $instance_url = uri_escape ($instance);
-
-      print qq#  <li><a href="${\script_name ()}?action=show_plugin;host=$host_url;plugin=$plugin_url;plugin_instance=$instance_url">$plugin_html ($instance_html)</a></li>\n#;
-    }
-
-    if (!@{$plugins{$plugin}})
-    {
-      print qq#  <li><a href="${\script_name ()}?action=show_plugin;host=$host_url;plugin=$plugin_url">$plugin_html</a></li>\n#;
-    }
-  } # for (%plugins)
-  print "</ul>\n";
+    my $url_plugin = $url_prefix . ';plugin=' . uri_escape ($plugin);
+    print qq(      <li><a href="$url_plugin">$plugin_html</a></li>\n);
+  }
+  print "   </ul>\n";
 } # action_show_host
 
 sub action_show_plugin
 {
-  my $host = shift;
+  my @hosts = _get_param_host ();
   my $plugin = shift;
   my $plugin_instance = shift;
+  my $timespan = _get_param_timespan ();
 
-  my $host_url = uri_escape ($host);
-  my $plugin_url = uri_escape ($plugin);
-  my $plugin_instance_url = defined ($plugin_instance) ? uri_escape ($plugin_instance) : undef;
-
-  my %types = _find_types ($host, $plugin, $plugin_instance);
-
-  my $url_prefix = script_name () . "?host=$host_url;plugin=$plugin_url";
-  $url_prefix .= ";plugin_instance=$plugin_instance_url" if (defined ($plugin_instance));
+  my $hosts_url = join (';', map { 'host=' . uri_escape ($_) } (@hosts));
+  my $url_prefix = script_name () . "?$hosts_url";
 
-  print qq(    <div><a href="${\script_name ()}?action=show_host;host=$host_url">Back to list of plugins</a></div>\n);
+  my $all_plugins = {};
+  my $plugins_per_host = {};
+  my $selected_plugins = {};
 
-  for (sort (keys %types))
+  for (my $i = 0; $i < @hosts; $i++)
   {
-    my $type = $_;
-    my $type_html = encode_entities ($type);
-    my $type_url = uri_escape ($type);
+    $plugins_per_host->{$hosts[$i]} = _find_files_for_host ($hosts[$i]);
+    _files_union ($all_plugins, $plugins_per_host->{$hosts[$i]});
+  }
 
-    if (!defined ($GraphDefs->{$type}))
+  for (param ('plugin'))
+  {
+    if (defined ($all_plugins->{$_}))
     {
-      print qq#  <div><em>Unknown type &quot;$type_html&quot;</em></div>\n#;
-      next;
+      $selected_plugins->{$_} = 1;
     }
+  }
 
-    for (@{$types{$type}})
-    {
-      my $instance = $_;
-      my $instance_html = encode_entities ($instance);
-      my $instance_url = uri_escape ($instance);
+  print qq(    <div><a href="${\script_name ()}?action=show_host;$hosts_url">Back to list of plugins</a></div>\n);
 
-      print qq#  <div><a href="$url_prefix;type=$type_url;type_instance=$instance_url;action=show_type"><img src="$url_prefix;type=$type_url;type_instance=$instance_url;action=show_graph" /></a></div>\n#;
-    }
+  # Print table header
+  print <<HTML;
+    <table class="graphs">
+      <tr>
+        <th>Plugins</th>
+HTML
+  for (@hosts)
+  {
+    print "\t<th>", encode_entities ($_), "</th>\n";
+  }
+  print "      </tr>\n";
 
-    if (!@{$types{$type}})
+  for (sort (keys %$selected_plugins))
+  {
+    my $plugin = $_;
+    my $plugin_html = encode_entities ($plugin);
+    my $plugin_url = "$url_prefix;plugin=" . uri_escape ($plugin);
+    my $all_pinst = $all_plugins->{$plugin};
+
+    for (sort (keys %$all_pinst))
     {
-      print qq#  <div><a href="$url_prefix;type=$type_url;action=show_type"><img src="$url_prefix;type=$type_url;action=show_graph" /></a></div>\n#;
-    }
-  }
+      my $pinst = $_;
+      my $pinst_html = '';
+      my $pinst_url = $plugin_url;
+
+      if ($pinst ne '-')
+      {
+	$pinst_html = encode_entities ($pinst);
+	$pinst_url .= ';plugin_instance=' . uri_escape ($pinst);
+      }
+
+      my $files_printed = 0;
+      my $files_num = _files_plugin_inst_count ($all_pinst->{$pinst});
+      if ($files_num < 1)
+      {
+	next;
+      }
+      my $rowspan = ($files_num == 1) ? '' : qq( rowspan="$files_num");
+
+      for (sort (keys %{$all_plugins->{$plugin}{$pinst}}))
+      {
+	my $type = $_;
+	my $type_html = encode_entities ($type);
+	my $type_url = "$pinst_url;type=" . uri_escape ($type);
+
+	if ($files_printed == 0)
+	{
+	  my $title = $plugin_html;
+	  if ($pinst ne '-')
+	  {
+	    $title .= " ($pinst_html)";
+	  }
+	  print "      <tr>\n";
+	  print "\t<td$rowspan>$title</td>\n";
+	}
+
+	if (exists ($MetaGraphDefs->{$type}))
+	{
+	  my $graph_url = script_name () . '?action=show_graph'
+	  . ';plugin=' . uri_escape ($plugin)
+	  . ';type=' . uri_escape ($type)
+	  . ';timespan=' . uri_escape ($timespan);
+	  if ($pinst ne '-')
+	  {
+	    $graph_url .= ';plugin_instance=' . uri_escape ($pinst);
+	  }
+
+	  if ($files_printed != 0)
+	  {
+	    print "      <tr>\n";
+	  }
+
+	  for (@hosts)
+	  {
+	    my $host = $_;
+	    my $host_graph_url = $graph_url . ';host=' . uri_escape ($host);
+
+	    print "\t<td>";
+	    if (exists $plugins_per_host->{$host}{$plugin}{$pinst}{$type})
+	    {
+	      print qq(<img src="$host_graph_url" />);
+	      #print encode_entities (qq(<img src="${\script_name ()}?action=show_graph;host=$host_esc;$param_plugin;$param_type;timespan=$timespan" />));
+	    }
+	    print "</td>\n";
+	  } # for (my $k = 0; $k < @hosts; $k++)
+
+	  print "      </tr>\n";
+
+	  $files_printed++;
+	  next; # pinst
+	} # if (exists ($MetaGraphDefs->{$type}))
+
+	for (sort (keys %{$all_plugins->{$plugin}{$pinst}{$type}}))
+	{
+	  my $tinst = $_;
+	  my $tinst_esc = encode_entities ($tinst);
+	  my $graph_url = script_name () . '?action=show_graph'
+	  . ';plugin=' . uri_escape ($plugin)
+	  . ';type=' . uri_escape ($type)
+	  . ';timespan=' . uri_escape ($timespan);
+	  if ($pinst ne '-')
+	  {
+	    $graph_url .= ';plugin_instance=' . uri_escape ($pinst);
+	  }
+	  if ($tinst ne '-')
+	  {
+	    $graph_url .= ';type_instance=' . uri_escape ($tinst);
+	  }
+
+	  if ($files_printed != 0)
+	  {
+	    print "      <tr>\n";
+	  }
+
+	  for (my $k = 0; $k < @hosts; $k++)
+	  {
+	    my $host = $hosts[$k];
+	    my $host_graph_url = $graph_url . ';host=' . uri_escape ($host);
+
+	    print "\t<td>";
+	    if ($plugins_per_host->{$host}{$plugin}{$pinst}{$type}{$tinst})
+	    {
+	      print qq(<img src="$host_graph_url" />);
+	      #print encode_entities (qq(<img src="${\script_name ()}?action=show_graph;host=$host_esc;$param_plugin;$param_type;timespan=$timespan" />));
+	    }
+	    print "</td>\n";
+	  } # for (my $k = 0; $k < @hosts; $k++)
+
+	  print "      </tr>\n";
+
+	  $files_printed++;
+	} # for ($tinst)
+      } # for ($type)
+    } # for ($pinst)
+  } # for ($plugin)
+  print "   </table>\n";
 } # action_show_plugin
 
 sub action_show_type
 {
   my $host = shift;
   my $plugin = shift;
@@ -540,33 +693,97 @@
   
   my %times = (hour => -3600, day => -86400, week => 7 * -86400, month => 31 * -86400, year => 366 * -86400);
   my $start_time = $times{$Args->{'timespan'}} || -86400;
 
   #print STDERR Data::Dumper->Dump ([$Args], ['Args']);
 
+  # FIXME
+  if (exists ($MetaGraphDefs->{$type}))
+  {
+    my %types = _find_types ($host, $plugin, $plugin_instance);
+    return $MetaGraphDefs->{$type}->($host, $plugin, $plugin_instance, $type, $types{$type});
+  }
+
   return if (!defined ($GraphDefs->{$type}));
   @rrd_args = @{$GraphDefs->{$type}};
 
   $title = "$host/$plugin" . (defined ($plugin_instance) ? "-$plugin_instance" : '')
   . "/$type" . (defined ($type_instance) ? "-$type_instance" : '');
 
   for (my $i = 0; $i < @DataDirs; $i++)
   {
     my $file = $DataDirs[$i] . "/$title.rrd";
     next if (!-f $file);
 
+    $file =~ s/:/\\:/g;
     s/{file}/$file/ for (@rrd_args);
 
     RRDs::graph ('-', '-a', 'PNG', '-s', $start_time, '-t', $title, @RRDDefaultArgs, @rrd_args);
     if (my $err = RRDs::error ())
     {
       die ("RRDs::graph: $err");
     }
   }
 } # action_show_graph
 
+sub print_selector
+{
+  my @hosts = _find_hosts ();
+  @hosts = sort (@hosts);
+
+  my %selected_hosts = map { $_ => 1 } (_get_param_host ());
+  my $timespan_selected = _get_param_timespan ();
+
+  print <<HTML;
+    <form action="${\script_name ()}" method="get">
+      <fieldset>
+	<legend>Selector</legend>
+	<select name="host" multiple="multiple" size="10">
+HTML
+  for (my $i = 0; $i < @hosts; $i++)
+  {
+    my $host = encode_entities ($hosts[$i]);
+    my $selected = defined ($selected_hosts{$hosts[$i]}) ? ' selected="selected"' : '';
+    print qq(\t  <option value="$host"$selected>$host</option>\n);
+  }
+  print "\t</select>\n";
+
+  if (keys %selected_hosts)
+  {
+    my $all_plugins = _find_files_for_hosts (keys %selected_hosts);
+    my %selected_plugins = map { $_ => 1 } (param ('plugin'));
+
+    print qq(\t<select name="plugin" multiple="multiple" size="10">\n);
+    for (sort (keys %$all_plugins))
+    {
+      my $plugin = $_;
+      my $plugin_html = encode_entities ($plugin);
+      my $selected = (defined ($selected_plugins{$plugin})
+	? ' selected="selected"' : '');
+      print qq(\t  <option value="$plugin_html"$selected>$plugin</option>\n);
+    }
+    print "</select>\n";
+  } # if (keys %selected_hosts)
+
+  print qq(\t<select name="timespan">\n);
+  for (qw(Hour Day Week Month Year))
+  {
+    my $timespan_uc = $_;
+    my $timespan_lc = lc ($_);
+    my $selected = ($timespan_selected eq $timespan_lc)
+      ? ' selected="selected"' : '';
+    print qq(\t  <option value="$timespan_lc"$selected>$timespan_uc</option>\n);
+  }
+  print <<HTML;
+	</select>
+	<input type="submit" name="button" value="Ok" />
+      </fieldset>
+    </form>
+HTML
+}
+
 sub print_header
 {
   print <<HEAD;
 Content-Type: application/xhtml+xml; charset=utf-8
 Cache-Control: no-cache
 
@@ -579,17 +796,28 @@
     <title>collection.cgi, Version 2</title>
     <style type="text/css">
       img
       {
 	border: none;
       }
+      table.graphs
+      {
+	border-collapse: collapse;
+      }
+      table.graphs td,
+      table.graphs th
+      {
+	border: 1px solid black;
+	empty-cells: hide;
+      }
     </style>
   </head>
 
   <body>
 HEAD
+  print_selector ();
 } # print_header
 
 sub print_footer
 {
   print <<FOOT;
   </body>
@@ -624,14 +852,13 @@
 	elsif (!$Args->{'plugin'})
 	{
 	  action_show_host ($Args->{'host'});
 	}
 	elsif (!$Args->{'type'})
 	{
-	  action_show_plugin ($Args->{'host'},
-	    $Args->{'plugin'}, $Args->{'plugin_instance'});
+	  action_show_plugin ($Args->{'plugin'}, $Args->{'plugin_instance'});
 	}
 	else
 	{
 	  action_show_type ($Args->{'host'},
 	    $Args->{'plugin'}, $Args->{'plugin_instance'},
 	    $Args->{'type'}, $Args->{'type_instance'});
@@ -702,12 +929,24 @@
     "LINE1:avg#$FullBlue:Processes",
     'GPRINT:min:MIN:%6.2lf Min,',
     'GPRINT:avg:AVERAGE:%6.2lf Avg,',
     'GPRINT:max:MAX:%6.2lf Max,',
     'GPRINT:avg:LAST:%6.2lf Last'
     ],
+    bitrate => ['-v', 'Bits/s',
+    'DEF:avg={file}:value:AVERAGE',
+    'DEF:min={file}:value:MIN',
+    'DEF:max={file}:value:MAX',
+    "AREA:max#$HalfBlue",
+    "AREA:min#$Canvas",
+    "LINE1:avg#$FullBlue:Bits/s",
+    'GPRINT:min:MIN:%5.1lf%s Min,',
+    'GPRINT:avg:AVERAGE:%5.1lf%s Average,',
+    'GPRINT:max:MAX:%5.1lf%s Max,',
+    'GPRINT:avg:LAST:%5.1lf%s Last\l'
+    ],
     charge => [
     'DEF:avg={file}:charge:AVERAGE',
     'DEF:min={file}:charge:MIN',
     'DEF:max={file}:charge:MAX',
     "AREA:max#$HalfBlue",
     "AREA:min#$Canvas",
@@ -750,13 +989,13 @@
     "LINE1:avg#$FullBlue:Current",
     'GPRINT:min:MIN:%5.1lf%sA Min,',
     'GPRINT:avg:AVERAGE:%5.1lf%sA Avg,',
     'GPRINT:max:MAX:%5.1lf%sA Max,',
     'GPRINT:avg:LAST:%5.1lf%sA Last\l'
     ],
-    df => ['-v', 'Percent',
+    df => ['-v', 'Percent', '-l', '0',
     'DEF:free_avg={file}:free:AVERAGE',
     'DEF:free_min={file}:free:MIN',
     'DEF:free_max={file}:free:MAX',
     'DEF:used_avg={file}:used:AVERAGE',
     'DEF:used_min={file}:used:MIN',
     'DEF:used_max={file}:used:MAX',
@@ -939,28 +1178,28 @@
     #'GPRINT:qry_min:MIN:%5.1lf %s Min,',
     'GPRINT:qry_avg:AVERAGE:%5.1lf%s Avg,',
     'GPRINT:qry_max:MAX:%5.1lf%s Max,',
     'GPRINT:qry_avg:LAST:%5.1lf%s Last',
     'GPRINT:qry_avg_sum:LAST:(ca. %5.1lf%sB Total)\l'
     ],
-    email => [
-    'DEF:avg={file}:count:AVERAGE',
-    'DEF:min={file}:count:MIN',
-    'DEF:max={file}:count:MAX',
+    email_count => ['-v', 'Mails',
+    'DEF:avg={file}:value:AVERAGE',
+    'DEF:min={file}:value:MIN',
+    'DEF:max={file}:value:MAX',
     "AREA:max#$HalfMagenta",
     "AREA:min#$Canvas",
     "LINE1:avg#$FullMagenta:Count ",
     'GPRINT:min:MIN:%4.1lf Min,',
     'GPRINT:avg:AVERAGE:%4.1lf Avg,',
     'GPRINT:max:MAX:%4.1lf Max,',
     'GPRINT:avg:LAST:%4.1lf Last\l'
     ],
-    email_size => [
-    'DEF:avg={file}:size:AVERAGE',
-    'DEF:min={file}:size:MIN',
-    'DEF:max={file}:size:MAX',
+    email_size => ['-v', 'Bytes',
+    'DEF:avg={file}:value:AVERAGE',
+    'DEF:min={file}:value:MIN',
+    'DEF:max={file}:value:MAX',
     "AREA:max#$HalfMagenta",
     "AREA:min#$Canvas",
     "LINE1:avg#$FullMagenta:Count ",
     'GPRINT:min:MIN:%4.1lf Min,',
     'GPRINT:avg:AVERAGE:%4.1lf Avg,',
     'GPRINT:max:MAX:%4.1lf Max,',
@@ -987,13 +1226,14 @@
     "LINE1:avg#$FullMagenta:Count ",
     'GPRINT:min:MIN:%4.1lf Min,',
     'GPRINT:avg:AVERAGE:%4.1lf Avg,',
     'GPRINT:max:MAX:%4.1lf Max,',
     'GPRINT:avg:LAST:%4.1lf Last\l'
     ],
-    entropy => ['DEF:avg={file}:entropy:AVERAGE',
+    entropy => ['-v', 'Bits',
+    'DEF:avg={file}:entropy:AVERAGE',
     'DEF:min={file}:entropy:MIN',
     'DEF:max={file}:entropy:MAX',
     "AREA:max#$HalfBlue",
     "AREA:min#$Canvas",
     "LINE1:avg#$FullBlue:Bits",
     'GPRINT:min:MIN:%4.0lfbit Min,',
@@ -1088,12 +1328,57 @@
     #'GPRINT:rx_min:MIN:%5.1lf %s Min,',
     'GPRINT:rx_avg:AVERAGE:%5.1lf%s Avg,',
     'GPRINT:rx_max:MAX:%5.1lf%s Max,',
     'GPRINT:rx_avg:LAST:%5.1lf%s Last',
     'GPRINT:rx_avg_sum:LAST:(ca. %4.0lf%s Total)\l'
     ],
+    if_collisions => ['-v', 'Collisions/s',
+    'DEF:min_raw={file}:value:MIN',
+    'DEF:avg_raw={file}:value:AVERAGE',
+    'DEF:max_raw={file}:value:MAX',
+    'CDEF:min=min_raw,8,*',
+    'CDEF:avg=avg_raw,8,*',
+    'CDEF:max=max_raw,8,*',
+    "AREA:max#$HalfBlue",
+    "AREA:min#$Canvas",
+    "LINE1:avg#$FullBlue:Collisions/s",
+    'GPRINT:min:MIN:%5.1lf %s Min,',
+    'GPRINT:avg:AVERAGE:%5.1lf%s Avg,',
+    'GPRINT:max:MAX:%5.1lf%s Max,',
+    'GPRINT:avg:LAST:%5.1lf%s Last\l'
+    ],
+    if_dropped => ['-v', 'Packets/s',
+    'DEF:tx_min={file}:tx:MIN',
+    'DEF:tx_avg={file}:tx:AVERAGE',
+    'DEF:tx_max={file}:tx:MAX',
+    'DEF:rx_min={file}:rx:MIN',
+    'DEF:rx_avg={file}:rx:AVERAGE',
+    'DEF:rx_max={file}:rx:MAX',
+    'CDEF:overlap=tx_avg,rx_avg,GT,rx_avg,tx_avg,IF',
+    'CDEF:mytime=tx_avg,TIME,TIME,IF',
+    'CDEF:sample_len_raw=mytime,PREV(mytime),-',
+    'CDEF:sample_len=sample_len_raw,UN,0,sample_len_raw,IF',
+    'CDEF:tx_avg_sample=tx_avg,UN,0,tx_avg,IF,sample_len,*',
+    'CDEF:tx_avg_sum=PREV,UN,0,PREV,IF,tx_avg_sample,+',
+    'CDEF:rx_avg_sample=rx_avg,UN,0,rx_avg,IF,sample_len,*',
+    'CDEF:rx_avg_sum=PREV,UN,0,PREV,IF,rx_avg_sample,+',
+    "AREA:tx_avg#$HalfGreen",
+    "AREA:rx_avg#$HalfBlue",
+    "AREA:overlap#$HalfBlueGreen",
+    "LINE1:tx_avg#$FullGreen:TX",
+    'GPRINT:tx_avg:AVERAGE:%5.1lf%s Avg,',
+    'GPRINT:tx_max:MAX:%5.1lf%s Max,',
+    'GPRINT:tx_avg:LAST:%5.1lf%s Last',
+    'GPRINT:tx_avg_sum:LAST:(ca. %4.0lf%s Total)\l',
+    "LINE1:rx_avg#$FullBlue:RX",
+    #'GPRINT:rx_min:MIN:%5.1lf %s Min,',
+    'GPRINT:rx_avg:AVERAGE:%5.1lf%s Avg,',
+    'GPRINT:rx_max:MAX:%5.1lf%s Max,',
+    'GPRINT:rx_avg:LAST:%5.1lf%s Last',
+    'GPRINT:rx_avg_sum:LAST:(ca. %4.0lf%s Total)\l'
+    ],
     if_packets => ['-v', 'Packets/s',
     'DEF:tx_min={file}:tx:MIN',
     'DEF:tx_avg={file}:tx:AVERAGE',
     'DEF:tx_max={file}:tx:MAX',
     'DEF:rx_min={file}:rx:MIN',
     'DEF:rx_avg={file}:rx:AVERAGE',
@@ -1118,12 +1403,28 @@
     #'GPRINT:rx_min:MIN:%5.1lf %s Min,',
     'GPRINT:rx_avg:AVERAGE:%5.1lf%s Avg,',
     'GPRINT:rx_max:MAX:%5.1lf%s Max,',
     'GPRINT:rx_avg:LAST:%5.1lf%s Last',
     'GPRINT:rx_avg_sum:LAST:(ca. %4.0lf%s Total)\l'
     ],
+    if_rx_errors => ['-v', 'Errors/s',
+    'DEF:min={file}:value:MIN',
+    'DEF:avg={file}:value:AVERAGE',
+    'DEF:max={file}:value:MAX',
+    'CDEF:mytime=avg,TIME,TIME,IF',
+    'CDEF:sample_len_raw=mytime,PREV(mytime),-',
+    'CDEF:sample_len=sample_len_raw,UN,0,sample_len_raw,IF',
+    'CDEF:avg_sample=avg,UN,0,avg,IF,sample_len,*',
+    'CDEF:avg_sum=PREV,UN,0,PREV,IF,avg_sample,+',
+    "AREA:avg#$HalfBlue",
+    "LINE1:avg#$FullBlue:Errors/s",
+    'GPRINT:avg:AVERAGE:%3.1lf%s Avg,',
+    'GPRINT:max:MAX:%3.1lf%s Max,',
+    'GPRINT:avg:LAST:%3.1lf%s Last',
+    'GPRINT:avg_sum:LAST:(ca. %2.0lf%s Total)\l'
+    ],
     ipt_bytes => ['-v', 'Bits/s',
     'DEF:min_raw={file}:value:MIN',
     'DEF:avg_raw={file}:value:AVERAGE',
     'DEF:max_raw={file}:value:MAX',
     'CDEF:min=min_raw,8,*',
     'CDEF:avg=avg_raw,8,*',
@@ -1166,13 +1467,14 @@
     "LINE1:avg#$FullBlue:Issues/s",
     'GPRINT:min:MIN:%6.2lf Min,',
     'GPRINT:avg:AVERAGE:%6.2lf Avg,',
     'GPRINT:max:MAX:%6.2lf Max,',
     'GPRINT:avg:LAST:%6.2lf Last\l'
     ],
-    load => ['DEF:s_avg={file}:shortterm:AVERAGE',
+    load => ['-v', 'System load',
+    'DEF:s_avg={file}:shortterm:AVERAGE',
     'DEF:s_min={file}:shortterm:MIN',
     'DEF:s_max={file}:shortterm:MAX',
     'DEF:m_avg={file}:midterm:AVERAGE',
     'DEF:m_min={file}:midterm:MIN',
     'DEF:m_max={file}:midterm:MAX',
     'DEF:l_avg={file}:longterm:AVERAGE',
@@ -1283,57 +1585,63 @@
     mysql_commands => ['-v', 'Issues/s',
     "DEF:val_avg={file}:value:AVERAGE",
     "DEF:val_min={file}:value:MIN",
     "DEF:val_max={file}:value:MAX",
     "AREA:val_max#$HalfBlue",
     "AREA:val_min#$Canvas",
-    "LINE1:val_avg#$FullBlue:{inst}",
+    "LINE1:val_avg#$FullBlue:Issues/s",
     'GPRINT:val_min:MIN:%5.2lf Min,',
     'GPRINT:val_avg:AVERAGE:%5.2lf Avg,',
     'GPRINT:val_max:MAX:%5.2lf Max,',
     'GPRINT:val_avg:LAST:%5.2lf Last'
     ],
     mysql_handler => ['-v', 'Issues/s',
     "DEF:val_avg={file}:value:AVERAGE",
     "DEF:val_min={file}:value:MIN",
     "DEF:val_max={file}:value:MAX",
     "AREA:val_max#$HalfBlue",
     "AREA:val_min#$Canvas",
-    "LINE1:val_avg#$FullBlue:{inst}",
+    "LINE1:val_avg#$FullBlue:Issues/s",
     'GPRINT:val_min:MIN:%5.2lf Min,',
     'GPRINT:val_avg:AVERAGE:%5.2lf Avg,',
     'GPRINT:val_max:MAX:%5.2lf Max,',
     'GPRINT:val_avg:LAST:%5.2lf Last'
     ],
-    mysql_octets => ['-v', 'Bytes/s',
+    mysql_octets => ['-v', 'Bits/s',
     'DEF:out_min={file}:tx:MIN',
     'DEF:out_avg={file}:tx:AVERAGE',
     'DEF:out_max={file}:tx:MAX',
     'DEF:inc_min={file}:rx:MIN',
     'DEF:inc_avg={file}:rx:AVERAGE',
     'DEF:inc_max={file}:rx:MAX',
-    'CDEF:overlap=out_avg,inc_avg,GT,inc_avg,out_avg,IF',
     'CDEF:mytime=out_avg,TIME,TIME,IF',
     'CDEF:sample_len_raw=mytime,PREV(mytime),-',
     'CDEF:sample_len=sample_len_raw,UN,0,sample_len_raw,IF',
     'CDEF:out_avg_sample=out_avg,UN,0,out_avg,IF,sample_len,*',
     'CDEF:out_avg_sum=PREV,UN,0,PREV,IF,out_avg_sample,+',
     'CDEF:inc_avg_sample=inc_avg,UN,0,inc_avg,IF,sample_len,*',
     'CDEF:inc_avg_sum=PREV,UN,0,PREV,IF,inc_avg_sample,+',
-    "AREA:out_avg#$HalfGreen",
-    "AREA:inc_avg#$HalfBlue",
+    'CDEF:out_bit_min=out_min,8,*',
+    'CDEF:out_bit_avg=out_avg,8,*',
+    'CDEF:out_bit_max=out_max,8,*',
+    'CDEF:inc_bit_min=inc_min,8,*',
+    'CDEF:inc_bit_avg=inc_avg,8,*',
+    'CDEF:inc_bit_max=inc_max,8,*',
+    'CDEF:overlap=out_bit_avg,inc_bit_avg,GT,inc_bit_avg,out_bit_avg,IF',
+    "AREA:out_bit_avg#$HalfGreen",
+    "AREA:inc_bit_avg#$HalfBlue",
     "AREA:overlap#$HalfBlueGreen",
-    "LINE1:out_avg#$FullGreen:Written",
-    'GPRINT:out_avg:AVERAGE:%5.1lf%s Avg,',
-    'GPRINT:out_max:MAX:%5.1lf%s Max,',
-    'GPRINT:out_avg:LAST:%5.1lf%s Last',
+    "LINE1:out_bit_avg#$FullGreen:Written",
+    'GPRINT:out_bit_avg:AVERAGE:%5.1lf%s Avg,',
+    'GPRINT:out_bit_max:MAX:%5.1lf%s Max,',
+    'GPRINT:out_bit_avg:LAST:%5.1lf%s Last',
     'GPRINT:out_avg_sum:LAST:(ca. %5.1lf%sB Total)\l',
-    "LINE1:inc_avg#$FullBlue:Read   ",
-    'GPRINT:inc_avg:AVERAGE:%5.1lf%s Avg,',
-    'GPRINT:inc_max:MAX:%5.1lf%s Max,',
-    'GPRINT:inc_avg:LAST:%5.1lf%s Last',
+    "LINE1:inc_bit_avg#$FullBlue:Read   ",
+    'GPRINT:inc_bit_avg:AVERAGE:%5.1lf%s Avg,',
+    'GPRINT:inc_bit_max:MAX:%5.1lf%s Max,',
+    'GPRINT:inc_bit_avg:LAST:%5.1lf%s Last',
     'GPRINT:inc_avg_sum:LAST:(ca. %5.1lf%sB Total)\l'
     ],
     mysql_qcache => ['-v', 'Queries/s',
     "DEF:hits_min={file}:hits:MIN",
     "DEF:hits_avg={file}:hits:AVERAGE",
     "DEF:hits_max={file}:hits:MAX",
@@ -1819,12 +2127,13 @@
     'GPRINT:used_avg:LAST:%5.1lf%s Last\l'
     ],
     temperature => ['-v', 'Celsius',
     'DEF:temp_avg={file}:value:AVERAGE',
     'DEF:temp_min={file}:value:MIN',
     'DEF:temp_max={file}:value:MAX',
+    'CDEF:average=temp_avg,0.2,*,PREV,UN,temp_avg,PREV,IF,0.8,*,+',
     "AREA:temp_max#$HalfRed",
     "AREA:temp_min#$Canvas",
     "LINE1:temp_avg#$FullRed:Temperature",
     'GPRINT:temp_min:MIN:%4.1lf Min,',
     'GPRINT:temp_avg:AVERAGE:%4.1lf Avg,',
     'GPRINT:temp_max:MAX:%4.1lf Max,',
@@ -1851,13 +2160,13 @@
     "LINE1:s_avg#$FullBlue:{inst}",
     'GPRINT:s_min:MIN:%7.3lf%s Min,',
     'GPRINT:s_avg:AVERAGE:%7.3lf%s Avg,',
     'GPRINT:s_max:MAX:%7.3lf%s Max,',
     'GPRINT:s_avg:LAST:%7.3lf%s Last'
     ],
-    if_octets => ['-v', 'Bits/s',
+    if_octets => ['-v', 'Bits/s', '-l', '0',
     'DEF:out_min_raw={file}:tx:MIN',
     'DEF:out_avg_raw={file}:tx:AVERAGE',
     'DEF:out_max_raw={file}:tx:MAX',
     'DEF:inc_min_raw={file}:rx:MIN',
     'DEF:inc_avg_raw={file}:rx:AVERAGE',
     'DEF:inc_max_raw={file}:rx:MAX',
@@ -2016,8 +2325,492 @@
     'GPRINT:proc_min:MIN:%4.1lf Min,',
     'GPRINT:proc_avg:AVERAGE:%4.1lf Avg.,',
     'GPRINT:proc_max:MAX:%4.1lf Max,',
     'GPRINT:proc_avg:LAST:%4.1lf Last\l'
     ],
   };
+  $GraphDefs->{'if_multicast'} = $GraphDefs->{'ipt_packets'};
+  $GraphDefs->{'if_tx_errors'} = $GraphDefs->{'if_rx_errors'};
+
+  $MetaGraphDefs->{'cpu'} = \&meta_graph_cpu;
+  $MetaGraphDefs->{'if_rx_errors'} = \&meta_graph_if_rx_errors;
+  $MetaGraphDefs->{'if_tx_errors'} = \&meta_graph_if_rx_errors;
+  $MetaGraphDefs->{'memory'} = \&meta_graph_memory;
+  $MetaGraphDefs->{'nfs_procedure'} = \&meta_graph_nfs_procedure;
+  $MetaGraphDefs->{'ps_state'} = \&meta_graph_ps_state;
+  $MetaGraphDefs->{'swap'} = \&meta_graph_swap;
+  $MetaGraphDefs->{'mysql_commands'} = \&meta_graph_mysql_commands;
+  $MetaGraphDefs->{'mysql_handler'} = \&meta_graph_mysql_commands;
 } # load_graph_definitions
+
+sub meta_graph_generic_stack
+{
+  confess ("Wrong number of arguments") if (@_ != 2);
+
+  my $opts = shift;
+  my $sources = shift;
+  my $i;
+
+  my $timespan_str = _get_param_timespan ();
+  my $timespan_int = (-1) * $ValidTimespan->{$timespan_str};
+
+  $opts->{'title'} ||= 'Unknown title';
+  $opts->{'rrd_opts'} ||= [];
+  $opts->{'colors'} ||= {};
+
+  my @cmd = ('-', '-a', 'PNG', '-s', $timespan_int,
+    '-t', $opts->{'title'} || 'Unknown title',
+    @RRDDefaultArgs, @{$opts->{'rrd_opts'}});
+
+  my $max_inst_name = 0;
+
+  for ($i = 0; $i < @$sources; $i++)
+  {
+    my $inst_data = $sources->[$i];
+    my $inst_name = $inst_data->{'name'} || confess;
+    my $file = $inst_data->{'file'} || confess;
+
+    if (length ($inst_name) > $max_inst_name)
+    {
+      $max_inst_name = length ($inst_name);
+    }
+
+    confess ("No such file: $file") if (!-e $file);
+
+    push (@cmd,
+      qq#DEF:${inst_name}_min=$file:value:MIN#,
+      qq#DEF:${inst_name}_avg=$file:value:AVERAGE#,
+      qq#DEF:${inst_name}_max=$file:value:MAX#,
+      qq#CDEF:${inst_name}_nnl=${inst_name}_avg,UN,0,${inst_name}_avg,IF#);
+  }
+
+  {
+    my $inst_data = $sources->[@$sources - 1];
+    my $inst_name = $inst_data->{'name'};
+
+    push (@cmd, qq#CDEF:${inst_name}_stk=${inst_name}_nnl#);
+  }
+  for (my $i = 1; $i < @$sources; $i++)
+  {
+    my $inst_data0 = $sources->[@$sources - ($i + 1)];
+    my $inst_data1 = $sources->[@$sources - $i];
+
+    my $inst_name0 = $inst_data0->{'name'};
+    my $inst_name1 = $inst_data1->{'name'};
+
+    push (@cmd, qq#CDEF:${inst_name0}_stk=${inst_name0}_nnl,${inst_name1}_stk,+#);
+  }
+
+  for (my $i = 0; $i < @$sources; $i++)
+  {
+    my $inst_data = $sources->[$i];
+    my $inst_name = $inst_data->{'name'};
+
+    my $legend = sprintf ('%-*s', $max_inst_name, $inst_name);
+
+    my $line_color;
+    my $area_color;
+
+    my $number_format = $opts->{'number_format'} || '%6.1lf';
+
+    if (exists ($opts->{'colors'}{$inst_name}))
+    {
+      $line_color = $opts->{'colors'}{$inst_name};
+      $area_color = _string_to_color ($line_color);
+    }
+    else
+    {
+      $area_color = _get_random_color ();
+      $line_color = _color_to_string ($area_color);
+    }
+    $area_color = _color_to_string (_get_faded_color ($area_color));
+
+    push (@cmd, qq(AREA:${inst_name}_stk#$area_color),
+      qq(LINE1:${inst_name}_stk#$line_color:$legend),
+      qq(GPRINT:${inst_name}_min:MIN:$number_format Min,),
+      qq(GPRINT:${inst_name}_avg:AVERAGE:$number_format Avg,),
+      qq(GPRINT:${inst_name}_max:MAX:$number_format Max,),
+      qq(GPRINT:${inst_name}_avg:LAST:$number_format Last\\l),
+    );
+  }
+
+  RRDs::graph (@cmd);
+  if (my $errmsg = RRDs::error ())
+  {
+    confess ("RRDs::graph: $errmsg");
+  }
+} # meta_graph_generic_stack
+
+sub meta_graph_cpu
+{
+  confess ("Wrong number of arguments") if (@_ != 5);
+
+  my $host = shift;
+  my $plugin = shift;
+  my $plugin_instance = shift;
+  my $type = shift;
+  my $type_instances = shift;
+
+  my $opts = {};
+  my $sources = [];
+
+  $opts->{'title'} = "$host/$plugin"
+  . (defined ($plugin_instance) ? "-$plugin_instance" : '') . "/$type";
+
+  my @files = ();
+
+  $opts->{'colors'} =
+  {
+    'idle'      => 'ffffff',
+    'nice'      => '00e000',
+    'user'      => '0000ff',
+    'wait'      => 'ffb000',
+    'system'    => 'ff0000',
+    'softirq'   => 'ff00ff',
+    'interrupt' => 'a000a0',
+    'steal'     => '000000'
+  };
+
+  _custom_sort_arrayref ($type_instances,
+    [qw(idle nice user wait system softirq interrupt steal)]);
+
+  for (@$type_instances)
+  {
+    my $inst = $_;
+    my $file = '';
+    my $title = $opts->{'title'};
+
+    for (@DataDirs)
+    {
+      if (-e "$_/$title-$inst.rrd")
+      {
+	$file = "$_/$title-$inst.rrd";
+	last;
+      }
+    }
+    confess ("No file found for $title") if ($file eq '');
+
+    push (@$sources,
+      {
+	name => $inst,
+	file => $file
+      }
+    );
+  } # for (@$type_instances)
+
+  return (meta_graph_generic_stack ($opts, $sources));
+} # meta_graph_cpu
+
+sub meta_graph_memory
+{
+  confess ("Wrong number of arguments") if (@_ != 5);
+
+  my $host = shift;
+  my $plugin = shift;
+  my $plugin_instance = shift;
+  my $type = shift;
+  my $type_instances = shift;
+
+  my $opts = {};
+  my $sources = [];
+
+  $opts->{'title'} = "$host/$plugin"
+  . (defined ($plugin_instance) ? "-$plugin_instance" : '') . "/$type";
+  $opts->{'number_format'} = '%5.1lf%s';
+
+  $opts->{'rrd_opts'} = ['-b', '1024'];
+
+  my @files = ();
+
+  $opts->{'colors'} =
+  {
+    'free'     => '00e000',
+    'cached'   => '0000ff',
+    'buffered' => 'ffb000',
+    'used'     => 'ff0000'
+  };
+
+  _custom_sort_arrayref ($type_instances,
+    [qw(free cached buffered used)]);
+
+  for (@$type_instances)
+  {
+    my $inst = $_;
+    my $file = '';
+    my $title = $opts->{'title'};
+
+    for (@DataDirs)
+    {
+      if (-e "$_/$title-$inst.rrd")
+      {
+	$file = "$_/$title-$inst.rrd";
+	last;
+      }
+    }
+    confess ("No file found for $title") if ($file eq '');
+
+    push (@$sources,
+      {
+	name => $inst,
+	file => $file
+      }
+    );
+  } # for (@$type_instances)
+
+  return (meta_graph_generic_stack ($opts, $sources));
+} # meta_graph_cpu
+
+sub meta_graph_if_rx_errors
+{
+  confess ("Wrong number of arguments") if (@_ != 5);
+
+  my $host = shift;
+  my $plugin = shift;
+  my $plugin_instance = shift;
+  my $type = shift;
+  my $type_instances = shift;
+
+  my $opts = {};
+  my $sources = [];
+
+  $opts->{'title'} = "$host/$plugin"
+  . (defined ($plugin_instance) ? "-$plugin_instance" : '') . "/$type";
+  $opts->{'number_format'} = '%5.2lf';
+  $opts->{'rrd_opts'} = ['-v', 'Errors/s'];
+
+  my @files = ();
+
+  for (sort @$type_instances)
+  {
+    my $inst = $_;
+    my $file = '';
+    my $title = $opts->{'title'};
+
+    for (@DataDirs)
+    {
+      if (-e "$_/$title-$inst.rrd")
+      {
+	$file = "$_/$title-$inst.rrd";
+	last;
+      }
+    }
+    confess ("No file found for $title") if ($file eq '');
+
+    push (@$sources,
+      {
+	name => $inst,
+	file => $file
+      }
+    );
+  } # for (@$type_instances)
+
+  return (meta_graph_generic_stack ($opts, $sources));
+} # meta_graph_if_rx_errors
+
+sub meta_graph_mysql_commands
+{
+  confess ("Wrong number of arguments") if (@_ != 5);
+
+  my $host = shift;
+  my $plugin = shift;
+  my $plugin_instance = shift;
+  my $type = shift;
+  my $type_instances = shift;
+
+  my $opts = {};
+  my $sources = [];
+
+  $opts->{'title'} = "$host/$plugin"
+  . (defined ($plugin_instance) ? "-$plugin_instance" : '') . "/$type";
+  $opts->{'number_format'} = '%5.2lf';
+
+  my @files = ();
+
+  for (sort @$type_instances)
+  {
+    my $inst = $_;
+    my $file = '';
+    my $title = $opts->{'title'};
+
+    for (@DataDirs)
+    {
+      if (-e "$_/$title-$inst.rrd")
+      {
+	$file = "$_/$title-$inst.rrd";
+	last;
+      }
+    }
+    confess ("No file found for $title") if ($file eq '');
+
+    push (@$sources,
+      {
+	name => $inst,
+	file => $file
+      }
+    );
+  } # for (@$type_instances)
+
+  return (meta_graph_generic_stack ($opts, $sources));
+} # meta_graph_mysql_commands
+
+sub meta_graph_nfs_procedure
+{
+  confess ("Wrong number of arguments") if (@_ != 5);
+
+  my $host = shift;
+  my $plugin = shift;
+  my $plugin_instance = shift;
+  my $type = shift;
+  my $type_instances = shift;
+
+  my $opts = {};
+  my $sources = [];
+
+  $opts->{'title'} = "$host/$plugin"
+  . (defined ($plugin_instance) ? "-$plugin_instance" : '') . "/$type";
+  $opts->{'number_format'} = '%5.1lf%s';
+
+  my @files = ();
+
+  for (sort @$type_instances)
+  {
+    my $inst = $_;
+    my $file = '';
+    my $title = $opts->{'title'};
+
+    for (@DataDirs)
+    {
+      if (-e "$_/$title-$inst.rrd")
+      {
+	$file = "$_/$title-$inst.rrd";
+	last;
+      }
+    }
+    confess ("No file found for $title") if ($file eq '');
+
+    push (@$sources,
+      {
+	name => $inst,
+	file => $file
+      }
+    );
+  } # for (@$type_instances)
+
+  return (meta_graph_generic_stack ($opts, $sources));
+} # meta_graph_nfs_procedure
+
+sub meta_graph_ps_state
+{
+  confess ("Wrong number of arguments") if (@_ != 5);
+
+  my $host = shift;
+  my $plugin = shift;
+  my $plugin_instance = shift;
+  my $type = shift;
+  my $type_instances = shift;
+
+  my $opts = {};
+  my $sources = [];
+
+  $opts->{'title'} = "$host/$plugin"
+  . (defined ($plugin_instance) ? "-$plugin_instance" : '') . "/$type";
+
+  my @files = ();
+
+  $opts->{'colors'} =
+  {
+    'Running'      => '00e000',
+    'Sleeping'  => '0000ff',
+    'Paging'      => 'ffb000',
+    'Zombies'   => 'ff0000',
+    'Blocked'   => 'ff00ff',
+    'Stopped' => 'a000a0'
+  };
+
+  _custom_sort_arrayref ($type_instances,
+    [qw(paging blocked zombies stopped running sleeping)]);
+
+  for (@$type_instances)
+  {
+    my $inst = $_;
+    my $file = '';
+    my $title = $opts->{'title'};
+
+    for (@DataDirs)
+    {
+      if (-e "$_/$title-$inst.rrd")
+      {
+	$file = "$_/$title-$inst.rrd";
+	last;
+      }
+    }
+    confess ("No file found for $title") if ($file eq '');
+
+    push (@$sources,
+      {
+	name => ucfirst ($inst),
+	file => $file
+      }
+    );
+  } # for (@$type_instances)
+
+  return (meta_graph_generic_stack ($opts, $sources));
+} # meta_graph_ps_state
+
+sub meta_graph_swap
+{
+  confess ("Wrong number of arguments") if (@_ != 5);
+
+  my $host = shift;
+  my $plugin = shift;
+  my $plugin_instance = shift;
+  my $type = shift;
+  my $type_instances = shift;
+
+  my $opts = {};
+  my $sources = [];
+
+  $opts->{'title'} = "$host/$plugin"
+  . (defined ($plugin_instance) ? "-$plugin_instance" : '') . "/$type";
+  $opts->{'number_format'} = '%5.1lf%s';
+
+  my @files = ();
+
+  $opts->{'colors'} =
+  {
+    'Free'   => '00e000',
+    'Cached'  => '0000ff',
+    'Reserved'      => 'ffb000',
+    'Used'   => 'ff0000'
+  };
+
+  _custom_sort_arrayref ($type_instances,
+    [qw(free cached reserved used)]);
+
+  for (@$type_instances)
+  {
+    my $inst = $_;
+    my $file = '';
+    my $title = $opts->{'title'};
+
+    for (@DataDirs)
+    {
+      if (-e "$_/$title-$inst.rrd")
+      {
+	$file = "$_/$title-$inst.rrd";
+	last;
+      }
+    }
+    confess ("No file found for $title") if ($file eq '');
+
+    push (@$sources,
+      {
+	name => ucfirst ($inst),
+	file => $file
+      }
+    );
+  } # for (@$type_instances)
+
+  return (meta_graph_generic_stack ($opts, $sources));
+} # meta_graph_swap
+
 # vim: shiftwidth=2:softtabstop=2:tabstop=8
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/contrib/PerlLib/Collectd.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/contrib/PerlLib/Collectd.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/contrib/PerlLib/Collectd.pm	2007-08-27 01:36:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/contrib/PerlLib/Collectd.pm	2007-09-12 20:43:19.000000000 +0800
@@ -41,12 +41,12 @@
 	push @{$EXPORT_TAGS{'all'}}, grep {! $seen{$_}++ } @{$EXPORT_TAGS{$_}}
 		foreach keys %EXPORT_TAGS;
 }
 
 Exporter::export_ok_tags('all');
 
-bootstrap Collectd "4.0.7";
+bootstrap Collectd "4.0.8";
 
 1;
 
 # vim: set sw=4 ts=4 tw=78 noexpandtab :
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/apcups.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/apcups.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/apcups.c	2007-08-27 01:07:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/apcups.c	2007-09-12 18:31:35.000000000 +0800
@@ -384,20 +384,20 @@
 
 	plugin_dispatch_values (type, &vl);
 }
 
 static void apc_submit (struct apc_detail_s *apcups_detail)
 {
-	apc_submit_generic ("apcups_voltage",    "input",   apcups_detail->linev);
-	apc_submit_generic ("apcups_voltage",    "output",  apcups_detail->outputv);
-	apc_submit_generic ("apcups_voltage",    "battery", apcups_detail->battv);
-	apc_submit_generic ("apcups_charge",     "",        apcups_detail->bcharge);
-	apc_submit_generic ("apcups_charge_pct", "",        apcups_detail->loadpct);
-	apc_submit_generic ("apcups_timeleft",   "",        apcups_detail->timeleft);
-	apc_submit_generic ("apcups_temp",       "",        apcups_detail->itemp);
-	apc_submit_generic ("apcups_frequency",  "input",   apcups_detail->linefreq);
+	apc_submit_generic ("voltage",    "input",   apcups_detail->linev);
+	apc_submit_generic ("voltage",    "output",  apcups_detail->outputv);
+	apc_submit_generic ("voltage",    "battery", apcups_detail->battv);
+	apc_submit_generic ("charge",     "",        apcups_detail->bcharge);
+	apc_submit_generic ("percent",    "charge",  apcups_detail->loadpct);
+	apc_submit_generic ("timeleft",   "",        apcups_detail->timeleft);
+	apc_submit_generic ("temperature", "",       apcups_detail->itemp);
+	apc_submit_generic ("frequency",  "input",   apcups_detail->linefreq);
 }
 
 static int apcups_read (void)
 {
 	struct apc_detail_s apcups_detail;
 	int status;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd.1	2007-08-27 01:39:46.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd.1	2007-09-12 20:33:26.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD 1"
-.TH COLLECTD 1 "2007-08-26" "4.0.7" "collectd"
+.TH COLLECTD 1 "2007-09-12" "4.0.8" "collectd"
 .SH "NAME"
 collectd \- System statistics collection daemon
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 collectd \fI[options]\fR
 .SH "DESCRIPTION"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd.c	2007-08-27 01:07:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd.c	2007-09-12 18:31:35.000000000 +0800
@@ -111,13 +111,13 @@
 	{
 		if (errno == ENOENT)
 		{
 			if (mkdir (orig_dir, 0755) == -1)
 			{
 				char errbuf[1024];
-				ERROR ("mkdir (%s): %s", orig_dir,
+				ERROR ("change_basedir: mkdir (%s): %s", orig_dir,
 						sstrerror (errno, errbuf,
 							sizeof (errbuf)));
 				return (-1);
 			}
 			else if (chdir (orig_dir) == -1)
 			{
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd.conf.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd.conf.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd.conf.5	2007-08-27 01:39:46.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd.conf.5	2007-09-12 20:33:26.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD.CONF 5"
-.TH COLLECTD.CONF 5 "2007-08-26" "4.0.7" "collectd"
+.TH COLLECTD.CONF 5 "2007-09-12" "4.0.8" "collectd"
 .SH "NAME"
 collectd.conf \- Configuration for the system statistics collection daemon \fBcollectd\fR
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 .Vb 3
 \&  BaseDir "/path/to/data/"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd-email.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd-email.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd-email.5	2007-08-27 01:39:47.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd-email.5	2007-09-12 20:33:26.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-EMAIL 5"
-.TH COLLECTD-EMAIL 5 "2007-08-26" "4.0.7" "collectd"
+.TH COLLECTD-EMAIL 5 "2007-08-31" "4.0.8" "collectd"
 .SH "NAME"
 collectd\-email \- Documentation of collectd's \f(CW\*(C`email plugin\*(C'\fR
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 .Vb 8
 \&  # See collectd.conf(5)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd-exec.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd-exec.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd-exec.5	2007-08-27 01:39:47.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd-exec.5	2007-09-12 20:33:26.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-EXEC 5"
-.TH COLLECTD-EXEC 5 "2007-08-26" "4.0.7" "collectd"
+.TH COLLECTD-EXEC 5 "2007-09-12" "4.0.8" "collectd"
 .SH "NAME"
 collectd\-exec \- Documentation of collectd's \f(CW\*(C`exec plugin\*(C'\fR
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 .Vb 7
 \&  # See collectd.conf(5)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd-nagios.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd-nagios.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd-nagios.1	2007-08-27 01:39:46.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd-nagios.1	2007-09-12 20:33:26.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-NAGIOS 1"
-.TH COLLECTD-NAGIOS 1 "2007-08-26" "4.0.7" "collectd"
+.TH COLLECTD-NAGIOS 1 "2007-09-02" "4.0.8" "collectd"
 .SH "NAME"
 collectd\-nagios \- Nagios plugin for querying collectd
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 collectd-nagios \fB\-s\fR \fIsocket\fR \fB\-n\fR \fIvalue_spec\fR \fB\-H\fR \fIhostname\fR \fI[options]\fR
 .SH "DESCRIPTION"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd-perl.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd-perl.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd-perl.5	2007-08-27 01:39:47.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd-perl.5	2007-09-12 20:33:26.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-PERL 5"
-.TH COLLECTD-PERL 5 "2007-08-26" "4.0.7" "collectd"
+.TH COLLECTD-PERL 5 "2007-09-02" "4.0.8" "collectd"
 .SH "NAME"
 collectd\-perl \- Documentation of collectd's \f(CW\*(C`perl plugin\*(C'\fR
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 .Vb 8
 \&  # See collectd.conf(5)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd-unixsock.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd-unixsock.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/collectd-unixsock.5	2007-08-27 01:39:47.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/collectd-unixsock.5	2007-09-12 20:33:27.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-UNIXSOCK 5"
-.TH COLLECTD-UNIXSOCK 5 "2007-08-26" "4.0.7" "collectd"
+.TH COLLECTD-UNIXSOCK 5 "2007-09-12" "4.0.8" "collectd"
 .SH "NAME"
 collectd\-unixsock \- Documentation of collectd's \f(CW\*(C`unixsock plugin\*(C'\fR
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 .Vb 8
 \&  # See collectd.conf(5)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/common.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/common.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/common.c	2007-08-27 01:07:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/common.c	2007-09-12 18:31:35.000000000 +0800
@@ -67,18 +67,41 @@
 		exit(3);
 	}
 
 	return (r);
 }
 
-/* Don't use the return value of `strerror_r', because the GNU-people got
- * inventive there.. -octo */
+/* Even though Posix requires "strerror_r" to return an "int",
+ * some systems (e.g. the GNU libc) return a "char *" _and_
+ * ignore the second argument ... -tokkee */
 char *sstrerror (int errnum, char *buf, size_t buflen)
 {
 	buf[0] = '\0';
-	strerror_r (errnum, buf, buflen);
+#ifdef STRERROR_R_CHAR_P
+	{
+		char *temp;
+		temp = strerror_r (errnum, buf, buflen);
+		if (buf[0] == '\0')
+		{
+			if ((temp != NULL) && (temp != buf) && (temp[0] != '\0'))
+				strncpy (buf, temp, buflen);
+			else
+				strncpy (buf, "strerror_r did not return "
+						"an error message", buflen);
+			buf[buflen - 1] = '\0';
+		}
+	}
+#else
+	if (strerror_r (errnum, buf, buflen) != 0)
+	{
+		snprintf (buf, buflen, "Error #%i; "
+				"Additionally, strerror_r failed.",
+				errnum);
+	}
+#endif /* STRERROR_R_CHAR_P */
+	buf[buflen - 1] = '\0';
 	return (buf);
 } /* char *sstrerror */
 
 void *smalloc (size_t size)
 {
 	void *r;
@@ -395,13 +418,13 @@
 		{
 			if (errno == ENOENT)
 			{
 				if (mkdir (dir, 0755) == -1)
 				{
 					char errbuf[1024];
-					ERROR ("mkdir (%s): %s", dir,
+					ERROR ("check_create_dir: mkdir (%s): %s", dir,
 							sstrerror (errno,
 								errbuf, sizeof (errbuf)));
 					return (-1);
 				}
 			}
 			else
@@ -418,13 +441,13 @@
 			ERROR ("stat (%s): Not a directory!", dir);
 			return (-1);
 		}
 	}
 
 	return (0);
-}
+} /* check_create_dir */
 
 #ifdef HAVE_LIBKSTAT
 int get_kstat (kstat_t **ksp_ptr, char *module, int instance, char *name)
 {
 	char ident[128];
 	
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/config.h.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/config.h.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/config.h.in	2007-08-27 01:38:36.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/config.h.in	2007-09-12 18:38:55.000000000 +0800
@@ -163,12 +163,16 @@
 /* Define to 1 if you have the <ctype.h> header file. */
 #undef HAVE_CTYPE_H
 
 /* Define to 1 if you have the <curl/curl.h> header file. */
 #undef HAVE_CURL_CURL_H
 
+/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
+   don't. */
+#undef HAVE_DECL_STRERROR_R
+
 /* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.
    */
 #undef HAVE_DIRENT_H
 
 /* Define to 1 if you have the <dlfcn.h> header file. */
 #undef HAVE_DLFCN_H
@@ -540,12 +544,15 @@
 /* Define to 1 if you have the `strcmp' function. */
 #undef HAVE_STRCMP
 
 /* Define to 1 if you have the `strdup' function. */
 #undef HAVE_STRDUP
 
+/* Define to 1 if you have the `strerror_r' function. */
+#undef HAVE_STRERROR_R
+
 /* Define to 1 if you have the <strings.h> header file. */
 #undef HAVE_STRINGS_H
 
 /* Define to 1 if you have the <string.h> header file. */
 #undef HAVE_STRING_H
 
@@ -759,12 +766,15 @@
 /* Define to the version of this package. */
 #undef PACKAGE_VERSION
 
 /* Define to 1 if you have the ANSI C header files. */
 #undef STDC_HEADERS
 
+/* Define to 1 if strerror_r returns char *. */
+#undef STRERROR_R_CHAR_P
+
 /* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
 #undef TIME_WITH_SYS_TIME
 
 /* Version number of package */
 #undef VERSION
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/dns.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/dns.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/dns.c	2007-08-27 01:07:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/dns.c	2007-09-12 18:31:35.000000000 +0800
@@ -236,19 +236,17 @@
 		return (NULL);
 	}
 
 	memset (&fp, 0, sizeof (fp));
 	if (pcap_compile (pcap_obj, &fp, "udp port 53", 1, 0) < 0)
 	{
-		DEBUG ("pcap_compile failed");
 		ERROR ("dns plugin: pcap_compile failed");
 		return (NULL);
 	}
 	if (pcap_setfilter (pcap_obj, &fp) < 0)
 	{
-		DEBUG ("pcap_setfilter failed");
 		ERROR ("dns plugin: pcap_setfilter failed");
 		return (NULL);
 	}
 
 	DEBUG ("PCAP object created.");
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/ntpd.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/ntpd.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/ntpd.c	2007-08-27 01:07:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/ntpd.c	2007-09-12 18:31:35.000000000 +0800
@@ -394,13 +394,12 @@
 	}
 
 	freeaddrinfo (ai_list);
 
 	if (sock_descr < 0)
 	{
-		DEBUG ("Unable to connect to server.");
 		ERROR ("ntpd plugin: Unable to connect to server.");
 	}
 
 	return (sock_descr);
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/plugin.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/plugin.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/plugin.c	2007-08-27 01:07:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/plugin.c	2007-09-12 18:31:35.000000000 +0800
@@ -130,13 +130,13 @@
 
 	if ((dlh = lt_dlopen (file)) == NULL)
 	{
 		const char *error = lt_dlerror ();
 
 		ERROR ("lt_dlopen failed: %s", error);
-		DEBUG ("lt_dlopen failed: %s", error);
+		fprintf (stderr, "lt_dlopen failed: %s\n", error);
 		return (1);
 	}
 
 	if ((reg_handle = (void (*) (void)) lt_dlsym (dlh, "module_register")) == NULL)
 	{
 		WARNING ("Couldn't find symbol ``module_register'' in ``%s'': %s\n",
@@ -353,12 +353,16 @@
 		if (plugin_load_file (filename) == 0)
 		{
 			/* success */
 			ret = 0;
 			break;
 		}
+		else
+		{
+			fprintf (stderr, "Unable to load plugin %s.\n", type);
+		}
 	}
 
 	closedir (dh);
 
 	return (ret);
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/rrdtool.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/rrdtool.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/rrdtool.c	2007-08-27 01:07:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/rrdtool.c	2007-09-12 18:31:35.000000000 +0800
@@ -280,22 +280,23 @@
 	}
 
 	*ret = ds_def;
 	return (ds_num);
 }
 
-static int rrd_create_file (char *filename, const data_set_t *ds)
+static int rrd_create_file (char *filename, const data_set_t *ds, const value_list_t *vl)
 {
 	char **argv;
 	int argc;
 	char **rra_def;
 	int rra_num;
 	char **ds_def;
 	int ds_num;
 	int i, j;
 	char stepsize_str[16];
+	char begin_str[16];
 	int status = 0;
 
 	if (check_create_dir (filename))
 		return (-1);
 
 	if ((rra_num = rra_get (&rra_def)) < 1)
@@ -307,13 +308,13 @@
 	if ((ds_num = ds_get (&ds_def, ds)) < 1)
 	{
 		ERROR ("rrd_create_file failed: Could not calculate DSes");
 		return (-1);
 	}
 
-	argc = ds_num + rra_num + 4;
+	argc = ds_num + rra_num + 6;
 
 	if ((argv = (char **) malloc (sizeof (char *) * (argc + 1))) == NULL)
 	{
 		char errbuf[1024];
 		ERROR ("rrd_create failed: %s",
 				sstrerror (errno, errbuf, sizeof (errbuf)));
@@ -325,18 +326,29 @@
 	if ((status < 1) || (status >= sizeof (stepsize_str)))
 	{
 		ERROR ("rrdtool plugin: snprintf failed.");
 		return (-1);
 	}
 
+	assert (vl->time > 10);
+	status = snprintf (begin_str, sizeof (begin_str),
+			"%llu", (unsigned long long) (vl->time - 10));
+	if ((status < 1) || (status >= sizeof (begin_str)))
+	{
+		ERROR ("rrdtool plugin: snprintf failed.");
+		return (-1);
+	}
+
 	argv[0] = "create";
 	argv[1] = filename;
-	argv[2] = "-s";
-	argv[3] = stepsize_str;
+	argv[2] = "-b";
+	argv[3] = begin_str;
+	argv[4] = "-s";
+	argv[5] = stepsize_str;
 
-	j = 4;
+	j = 6;
 	for (i = 0; i < ds_num; i++)
 		argv[j++] = ds_def[i];
 	for (i = 0; i < rra_num; i++)
 		argv[j++] = rra_def[i];
 	argv[j] = NULL;
 
@@ -647,13 +659,13 @@
 		return (-1);
 
 	if (stat (filename, &statbuf) == -1)
 	{
 		if (errno == ENOENT)
 		{
-			if (rrd_create_file (filename, ds))
+			if (rrd_create_file (filename, ds, vl))
 				return (-1);
 		}
 		else
 		{
 			char errbuf[1024];
 			ERROR ("stat(%s) failed: %s", filename,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/unixsock.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/unixsock.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.7/src/unixsock.c	2007-08-27 01:07:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.0.8/src/unixsock.c	2007-09-12 18:31:35.000000000 +0800
@@ -348,18 +348,19 @@
 	memset (&sa, '\0', sizeof (sa));
 	sa.sun_family = AF_UNIX;
 	strncpy (sa.sun_path, (sock_file != NULL) ? sock_file : US_DEFAULT_PATH,
 			sizeof (sa.sun_path) - 1);
 	/* unlink (sa.sun_path); */
 
+	DEBUG ("unixsock plugin: socket path = %s", sa.sun_path);
+
 	status = bind (sock_fd, (struct sockaddr *) &sa, sizeof (sa));
 	if (status != 0)
 	{
 		char errbuf[1024];
 		sstrerror (errno, errbuf, sizeof (errbuf));
-		DEBUG ("bind failed: %s; sa.sun_path = %s", errbuf, sa.sun_path);
 		ERROR ("unixsock plugin: bind failed: %s", errbuf);
 		close (sock_fd);
 		sock_fd = -1;
 		return (-1);
 	}
 

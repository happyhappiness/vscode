diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/ChangeLog /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/ChangeLog
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/ChangeLog	2017-01-23 15:53:57.676447933 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/ChangeLog	2017-06-07 02:13:54.661164699 +0800
@@ -1,6 +1,53 @@
+2017-06-06, Version 5.7.2
+	* Build system: The Notify Email plugin is no longer linked with
+	  indirect dependencies. Thanks to Marc Fournier.
+	* collectd: A race condition when calculating a metric's rate has been
+	  fixed. Thanks to Florian Forster. #1193
+	* AMQP, Exec, UnixSock, Write Kafka plugins: Parsing of the PUTVAL
+	  command with multiple values has been fixed. Thanks to Florian
+	  Forster. #2274
+	* AMQP plugin: The "ExchangeType" option is now also valid for
+	  publishers. Thanks to Florian Forster. #2286
+	* BIND plugin: Fix parsing of the sample time provided by BIND.
+	  Previously, the time was assumed to be in the local timezone when in
+	  fact it was in UTC. Thanks to Ed Ravin. #1268
+	* BIND plugin: Memory leaks have been fixed. Thanks to Ruben Kerkhof.
+	  #2303
+	* cURL-JSON plugin: Handling of arrays has been fixed. Thanks to Florian
+	  Forster. #2266
+	* DPDKStat plugin: Error handling during initialization has been
+	  improved. Thanks to Ruben Kerkhof.
+	* DPDKStat plugin: Handling of a number of metrics has been improved,
+	  for example "rx_q0bytes". Thanks to Przemyslaw Szczerbik. #2167
+	* Intel RDT plugin: Configuration handling has been changed to be more
+	  graceful. Thanks to Maryam Tahhan. #2165
+	* Log Logstash plugin: If writing the log entry fails, print it to
+	  "STDERR" instead. Thanks to Marc Fournier.
+	* LogFile plugin: If writing to the file fails, print log messages on
+	  "STDERR" instead. Thanks to Marc Fournier.
+	* memcachec, Tail plugins: A resource leak in the matching
+	  infrastructure has been fixed. Thanks to Krzysztof Matczak. #2192
+	* MQTT plugin: Invalid symbols in topic names are now replaced and a
+	  resource leak has been fixed. Thanks to Denys Fedoryshchenko. #2123
+	* Network plugin: A potential endless-loop has been fixed. This can be
+	  triggered remotely by sending a signed network packet to a server
+	  which is not set up to check signatures. Thanks to Marcin Kozlowski
+	  and Pavel Rochnyack. #2174, #2233, CVE-2017-7401
+	* Perl plugin: A potential double-free has been fixed. Thanks to Florian
+	  Forster. #2278
+	* Processes plugin: A compilation error on AIX has been fixed. Thanks to
+	  Pavel Rochnyack. #2210
+	* SMART plugin: A check for the "CAP_SYS_RAWIO" capability has been
+	  added. Thanks to Marc Fournier.
+	* Write Graphite plugin: Error handling in the case that calculating a
+	  metric's rate fails has been improved. Previously, the raw counter
+	  values were sent to Graphite. Thanks to Iain Buclaw. #2209
+	* Write Prometheus plugin: An incorrect use of "realloc(3)" has been
+	  fixed. Thanks to Florian Forster. #2275
+
 2017-01-23, Version 5.7.1
 	* collectd: Handling of boolean configuration options has been unified.
 	  Thanks to Sebastian Harl. #2083, #2098
 	* collectd: Reporting of internal statistics has been fixed. Thanks to
 	  Florian Forster. #2108
 	* collectd, various plugins: Bugs and issues reported by scan-build and
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/configure	2017-01-23 15:54:24.857260305 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/configure	2017-06-07 02:14:21.485159628 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for collectd 5.7.1.
+# Generated by GNU Autoconf 2.69 for collectd 5.7.2.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
 #
 #
 # This configure script is free software; the Free Software Foundation
@@ -588,14 +588,14 @@
 MFLAGS=
 MAKEFLAGS=
 
 # Identity of this package.
 PACKAGE_NAME='collectd'
 PACKAGE_TARNAME='collectd'
-PACKAGE_VERSION='5.7.1'
-PACKAGE_STRING='collectd 5.7.1'
+PACKAGE_VERSION='5.7.2'
+PACKAGE_STRING='collectd 5.7.2'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
 ac_unique_file="src/target_set.c"
 : "${ARFLAGS=cr} ${AR_FLAGS=cr}"
 # Factoring default headers for most tests.
@@ -2198,13 +2198,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures collectd 5.7.1 to adapt to many kinds of systems.
+\`configure' configures collectd 5.7.2 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -2268,13 +2268,13 @@
   --host=HOST       cross-compile to build programs to run on HOST [BUILD]
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of collectd 5.7.1:";;
+     short | recursive ) echo "Configuration of collectd 5.7.2:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-option-checking  ignore unrecognized --enable/--with options
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
@@ -2705,13 +2705,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-collectd configure 5.7.1
+collectd configure 5.7.2
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
 _ACEOF
@@ -3435,13 +3435,13 @@
 
 } # ac_fn_cxx_check_header_mongrel
 cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by collectd $as_me 5.7.1, which was
+It was created by collectd $as_me 5.7.2, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 exec 5>>config.log
@@ -13910,13 +13910,13 @@
   fi
 fi
 
 
 # Define the identity of the package.
  PACKAGE='collectd'
- VERSION='5.7.1'
+ VERSION='5.7.2'
 
 
 cat >>confdefs.h <<_ACEOF
 #define PACKAGE "$PACKAGE"
 _ACEOF
 
@@ -20926,15 +20926,15 @@
   have_capability="no (<sys/capability.h> not found)"
 fi
 
 done
 
 if test "x$have_capability" = "xyes"; then
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for cap_get_bound in -lcap" >&5
-$as_echo_n "checking for cap_get_bound in -lcap... " >&6; }
-if ${ac_cv_lib_cap_cap_get_bound+:} false; then :
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for cap_get_proc in -lcap" >&5
+$as_echo_n "checking for cap_get_proc in -lcap... " >&6; }
+if ${ac_cv_lib_cap_cap_get_proc+:} false; then :
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
 LIBS="-lcap  $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
@@ -20942,36 +20942,46 @@
 /* Override any GCC internal prototype to avoid an error.
    Use char because int might match the return type of a GCC
    builtin and then its argument prototype would still apply.  */
 #ifdef __cplusplus
 extern "C"
 #endif
-char cap_get_bound ();
+char cap_get_proc ();
 int
 main ()
 {
-return cap_get_bound ();
+return cap_get_proc ();
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_link "$LINENO"; then :
-  ac_cv_lib_cap_cap_get_bound=yes
+  ac_cv_lib_cap_cap_get_proc=yes
 else
-  ac_cv_lib_cap_cap_get_bound=no
+  ac_cv_lib_cap_cap_get_proc=no
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
 LIBS=$ac_check_lib_save_LIBS
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_cap_cap_get_bound" >&5
-$as_echo "$ac_cv_lib_cap_cap_get_bound" >&6; }
-if test "x$ac_cv_lib_cap_cap_get_bound" = xyes; then :
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_cap_cap_get_proc" >&5
+$as_echo "$ac_cv_lib_cap_cap_get_proc" >&6; }
+if test "x$ac_cv_lib_cap_cap_get_proc" = xyes; then :
   have_capability="yes"
 else
-  have_capability="no (cap_get_bound() not found)"
+  have_capability="no (cap_get_proc() not found)"
+fi
+
+fi
+if test "x$have_capability" = "xyes"; then
+ac_fn_c_check_decl "$LINENO" "CAP_IS_SUPPORTED" "ac_cv_have_decl_CAP_IS_SUPPORTED" "#include <sys/capability.h>
+"
+if test "x$ac_cv_have_decl_CAP_IS_SUPPORTED" = xyes; then :
+  have_capability="yes"
+else
+  have_capability="no (CAP_IS_SUPPORTED not found)"
 fi
 
 fi
 if test "x$have_capability" = "xyes"; then
 
 $as_echo "#define HAVE_CAPABILITY 1" >>confdefs.h
@@ -21975,12 +21985,138 @@
 if test "x$GCC" = "xyes"
 then
 	CFLAGS="$SAVE_CFLAGS"
 fi
 # }}} Check for strptime
 
+# Check for timegm {{{
+
+# These checks need -Werror because implicit function declarations are only a
+# warning ...
+SAVE_CFLAGS="$CFLAGS"
+CFLAGS="$CFLAGS -Werror"
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for timegm" >&5
+$as_echo_n "checking for timegm... " >&6; }
+if ${c_cv_have_timegm+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#if STRPTIME_NEEDS_STANDARDS
+# ifndef _ISOC99_SOURCE
+#  define _ISOC99_SOURCE 1
+# endif
+# ifndef _POSIX_C_SOURCE
+#  define _POSIX_C_SOURCE 200112L
+# endif
+# ifndef _XOPEN_SOURCE
+#  define _XOPEN_SOURCE 500
+# endif
+#endif
+#include <time.h>
+
+int
+main ()
+{
+
+ time_t t = timegm(&(struct tm){0});
+ if (t == ((time_t) -1)) {
+   return 1;
+ }
+
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  c_cv_have_timegm="yes"
+else
+  c_cv_have_timegm="no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $c_cv_have_timegm" >&5
+$as_echo "$c_cv_have_timegm" >&6; }
+
+if test "x$c_cv_have_timegm" != "xyes"
+then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for timegm with _BSD_SOURCE" >&5
+$as_echo_n "checking for timegm with _BSD_SOURCE... " >&6; }
+if ${c_cv_have_timegm_bsd+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#if STRPTIME_NEEDS_STANDARDS
+# ifndef _ISOC99_SOURCE
+#  define _ISOC99_SOURCE 1
+# endif
+# ifndef _POSIX_C_SOURCE
+#  define _POSIX_C_SOURCE 200112L
+# endif
+# ifndef _XOPEN_SOURCE
+#  define _XOPEN_SOURCE 500
+# endif
+#endif
+#ifndef _BSD_SOURCE
+# define _BSD_SOURCE 1
+#endif
+#include <time.h>
+
+int
+main ()
+{
+
+ time_t t = timegm(&(struct tm){0});
+ if (t == ((time_t) -1)) {
+   return 1;
+ }
+
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  c_cv_have_timegm_bsd="yes"
+       c_cv_have_timegm="yes"
+else
+  c_cv_have_timegm_bsd="no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $c_cv_have_timegm_bsd" >&5
+$as_echo "$c_cv_have_timegm_bsd" >&6; }
+fi
+
+if test "x$c_cv_have_timegm" = "xyes"
+then
+
+$as_echo "#define HAVE_TIMEGM 1" >>confdefs.h
+
+  if test "x$c_cv_have_timegm_bsd" = "xyes"
+  then
+
+$as_echo "#define TIMEGM_NEEDS_BSD 1" >>confdefs.h
+
+  fi
+fi
+
+CFLAGS="$SAVE_CFLAGS"
+# }}} Check for timegm
+
 for ac_func in swapctl
 do :
   ac_fn_c_check_func "$LINENO" "swapctl" "ac_cv_func_swapctl"
 if test "x$ac_cv_func_swapctl" = xyes; then :
   cat >>confdefs.h <<_ACEOF
 #define HAVE_SWAPCTL 1
@@ -53033,13 +53169,13 @@
 
 cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # Save the log message, to keep $0 and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by collectd $as_me 5.7.1, which was
+This file was extended by collectd $as_me 5.7.2, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -53099,13 +53235,13 @@
 Report bugs to the package provider."
 
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-collectd config.status 5.7.1
+collectd config.status 5.7.2
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/configure.ac	2017-01-23 15:53:57.680448056 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/configure.ac	2017-06-07 02:13:54.661164699 +0800
@@ -832,18 +832,24 @@
 
 have_capability="yes"
 AC_CHECK_HEADERS(sys/capability.h,
                  [have_capability="yes"],
                  [have_capability="no (<sys/capability.h> not found)"])
 if test "x$have_capability" = "xyes"; then
-AC_CHECK_LIB(cap, cap_get_bound,
+AC_CHECK_LIB(cap, cap_get_proc,
                  [have_capability="yes"],
-                 [have_capability="no (cap_get_bound() not found)"])
+                 [have_capability="no (cap_get_proc() not found)"])
 fi
 if test "x$have_capability" = "xyes"; then
-  AC_DEFINE(HAVE_CAPABILITY, 1, [Define to 1 if you have cap_get_bound() (-lcap).])
+AC_CHECK_DECL([CAP_IS_SUPPORTED],
+                 [have_capability="yes"],
+                 [have_capability="no (CAP_IS_SUPPORTED not found)"],
+                 [[#include <sys/capability.h>]])
+fi
+if test "x$have_capability" = "xyes"; then
+  AC_DEFINE(HAVE_CAPABILITY, 1, [Define to 1 if you have cap_get_proc() (-lcap).])
 fi
 AM_CONDITIONAL(BUILD_WITH_CAPABILITY, test "x$have_capability" = "xyes")
 
 #
 # Checks for typedefs, structures, and compiler characteristics.
 #
@@ -1059,12 +1065,98 @@
 if test "x$GCC" = "xyes"
 then
 	CFLAGS="$SAVE_CFLAGS"
 fi
 # }}} Check for strptime
 
+# Check for timegm {{{
+
+# These checks need -Werror because implicit function declarations are only a
+# warning ...
+SAVE_CFLAGS="$CFLAGS"
+CFLAGS="$CFLAGS -Werror"
+
+AC_CACHE_CHECK([for timegm],
+  [c_cv_have_timegm],
+  AC_LINK_IFELSE(
+    [AC_LANG_PROGRAM(
+[[[
+#if STRPTIME_NEEDS_STANDARDS
+# ifndef _ISOC99_SOURCE
+#  define _ISOC99_SOURCE 1
+# endif
+# ifndef _POSIX_C_SOURCE
+#  define _POSIX_C_SOURCE 200112L
+# endif
+# ifndef _XOPEN_SOURCE
+#  define _XOPEN_SOURCE 500
+# endif
+#endif
+#include <time.h>
+]]],
+[[[
+ time_t t = timegm(&(struct tm){0});
+ if (t == ((time_t) -1)) {
+   return 1;
+ }
+]]]
+    )],
+    [c_cv_have_timegm="yes"],
+    [c_cv_have_timegm="no"]
+  )
+)
+
+if test "x$c_cv_have_timegm" != "xyes"
+then
+  AC_CACHE_CHECK([for timegm with _BSD_SOURCE],
+    [c_cv_have_timegm_bsd],
+    AC_LINK_IFELSE(
+      [AC_LANG_PROGRAM(
+[[[
+#if STRPTIME_NEEDS_STANDARDS
+# ifndef _ISOC99_SOURCE
+#  define _ISOC99_SOURCE 1
+# endif
+# ifndef _POSIX_C_SOURCE
+#  define _POSIX_C_SOURCE 200112L
+# endif
+# ifndef _XOPEN_SOURCE
+#  define _XOPEN_SOURCE 500
+# endif
+#endif
+#ifndef _BSD_SOURCE
+# define _BSD_SOURCE 1
+#endif
+#include <time.h>
+]]],
+[[[
+ time_t t = timegm(&(struct tm){0});
+ if (t == ((time_t) -1)) {
+   return 1;
+ }
+]]]
+      )],
+      [c_cv_have_timegm_bsd="yes"
+       c_cv_have_timegm="yes"],
+      [c_cv_have_timegm_bsd="no"]
+    )
+  )
+fi
+
+if test "x$c_cv_have_timegm" = "xyes"
+then
+  AC_DEFINE(HAVE_TIMEGM, 1, [Define if the timegm(3) function is available.])
+  if test "x$c_cv_have_timegm_bsd" = "xyes"
+  then
+    AC_DEFINE(TIMEGM_NEEDS_BSD, 1, [Set to true if timegm is only exported in BSD mode.])
+  fi
+fi
+
+CFLAGS="$SAVE_CFLAGS"
+# }}} Check for timegm
+
 AC_CHECK_FUNCS(swapctl, [have_swapctl="yes"], [have_swapctl="no"])
 if test "x$have_swapctl" = "xyes"; then
         AC_CACHE_CHECK([whether swapctl takes two arguments],
                 [c_cv_have_swapctl_two_args],
                 AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
 [[[
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/contrib/redhat/collectd.spec /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/contrib/redhat/collectd.spec
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/contrib/redhat/collectd.spec	2017-01-23 15:53:57.684448178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/contrib/redhat/collectd.spec	2017-06-07 02:13:54.661164699 +0800
@@ -233,23 +233,24 @@
 %define with_write_riemann 0
 %define with_xmms 0
 %endif
 
 Summary:	Statistics collection and monitoring daemon
 Name:		collectd
-Version:	5.7.0
-Release:	2%{?dist}
+Version:	5.7.1
+Release:	3%{?dist}
 URL:		https://collectd.org
 Source:		https://collectd.org/files/%{name}-%{version}.tar.bz2
 License:	GPLv2
 Group:		System Environment/Daemons
 BuildRoot:	%{_tmppath}/%{name}-%{version}-root
 BuildRequires:	libgcrypt-devel, kernel-headers, libtool-ltdl-devel, libcap-devel, which
 Vendor:		collectd development team <collectd@verplant.org>
 
 %if 0%{?fedora} || 0%{?rhel} >= 7
+BuildRequires:		xfsprogs-devel
 %{?systemd_requires}
 BuildRequires:		systemd
 %else
 Requires(post):		chkconfig
 Requires(preun):	chkconfig, initscripts
 Requires(postun):	initscripts
@@ -2585,12 +2586,22 @@
 %{_sysconfdir}/httpd/conf.d/php-collection.conf
 
 %files contrib
 %doc contrib/
 
 %changelog
+* Sun Mar 05 2017 Ruben Kerkhof <ruben@rubenkerkhof.com> - 5.7.1-2
+- Don't enable XFS support on RHEL6, it is missing for i386
+
+* Wed Feb 22 2017 Ruben Kerkhof <ruben@rubenkerkhof.com> - 5.7.1-2
+- Enable XFS support in df plugin
+- Fix bogus date in changelog
+
+* Sun Jan 01 2017 Marc Fournier <marc.fournier@camptocamp.com> - 5.7.1-1
+- New upstream version
+
 * Tue Nov 29 2016 Ruben Kerkhof <ruben@rubenkerkhof.com> - 5.7.0-2
 - Disable redis plugin on RHEL 6, hiredis has been retired from EPEL6
 
 * Mon Oct 10 2016 Marc Fournier <marc.fournier@camptocamp.com> - 5.7.0-1
 - New PRE-RELEASE version
 - New plugins enabled by default: hugepages, write_prometheus
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/contrib/systemd.collectd.service /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/contrib/systemd.collectd.service
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/contrib/systemd.collectd.service	2017-01-23 15:53:57.684448178 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/contrib/systemd.collectd.service	2017-06-07 02:13:54.661164699 +0800
@@ -17,12 +17,13 @@
 # Here's a (incomplete) list of the plugins known capability requirements:
 #   ceph            CAP_DAC_OVERRIDE
 #   dns             CAP_NET_RAW
 #   exec            CAP_SETUID CAP_SETGID
 #   iptables        CAP_NET_ADMIN
 #   ping            CAP_NET_RAW
+#   smart           CAP_SYS_RAWIO
 #   turbostat       CAP_SYS_RAWIO
 #
 # Example, if you use the iptables plugin alongside the dns or ping plugin:
 #CapabilityBoundingSet=CAP_NET_RAW CAP_NET_ADMIN
 #
 # By default, drop all capabilities:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/amqp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/amqp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/amqp.c	2017-01-23 15:53:57.688448300 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/amqp.c	2017-06-07 02:13:54.665164698 +0800
@@ -898,13 +898,13 @@
     else if (strcasecmp("User", child->key) == 0)
       status = cf_util_get_string(child, &conf->user);
     else if (strcasecmp("Password", child->key) == 0)
       status = cf_util_get_string(child, &conf->password);
     else if (strcasecmp("Exchange", child->key) == 0)
       status = cf_util_get_string(child, &conf->exchange);
-    else if ((strcasecmp("ExchangeType", child->key) == 0) && !publish)
+    else if (strcasecmp("ExchangeType", child->key) == 0)
       status = cf_util_get_string(child, &conf->exchange_type);
     else if ((strcasecmp("Queue", child->key) == 0) && !publish)
       status = cf_util_get_string(child, &conf->queue);
     else if ((strcasecmp("QueueDurable", child->key) == 0) && !publish)
       status = cf_util_get_boolean(child, &conf->queue_durable);
     else if ((strcasecmp("QueueAutoDelete", child->key) == 0) && !publish)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/bind.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/bind.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/bind.c	2017-01-23 15:53:57.688448300 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/bind.c	2017-06-07 02:13:54.665164698 +0800
@@ -32,17 +32,25 @@
 #endif
 #ifndef _XOPEN_SOURCE
 #define _XOPEN_SOURCE 500
 #endif
 #endif /* STRPTIME_NEEDS_STANDARDS */
 
+#if TIMEGM_NEEDS_BSD
+#ifndef _BSD_SOURCE
+#define _BSD_SOURCE 1
+#endif
+#endif /* TIMEGM_NEEDS_BSD */
+
 #include "collectd.h"
 
 #include "common.h"
 #include "plugin.h"
 
+#include <time.h>
+
 /* Some versions of libcurl don't include this themselves and then don't have
  * fd_set available. */
 #if HAVE_SYS_SELECT_H
 #include <sys/select.h>
 #endif
 
@@ -426,13 +434,34 @@
   if (tmp == NULL) {
     ERROR("bind plugin: bind_xml_read_timestamp: strptime failed.");
     xmlXPathFreeObject(xpathObj);
     return (-1);
   }
 
-  *ret_value = mktime(&tm);
+#if HAVE_TIMEGM
+  time_t t = timegm(&tm);
+  if (t == ((time_t)-1)) {
+    char errbuf[1024];
+    ERROR("bind plugin: timegm() failed: %s",
+          sstrerror(errno, errbuf, sizeof(errbuf)));
+    return (-1);
+  }
+  *ret_value = t;
+#else
+  time_t t = mktime(&tm);
+  if (t == ((time_t)-1)) {
+    char errbuf[1024];
+    ERROR("bind plugin: mktime() failed: %s",
+          sstrerror(errno, errbuf, sizeof(errbuf)));
+    return (-1);
+  }
+  /* mktime assumes that tm is local time. Luckily, it also sets timezone to
+   * the offset used for the conversion, and we undo the conversion to convert
+   * back to UTC. */
+  *ret_value = t - timezone;
+#endif
 
   xmlXPathFreeObject(xpathObj);
   return (0);
 } /* }}} int bind_xml_read_timestamp */
 
 /*
@@ -490,14 +519,16 @@
       int status;
 
       if (ds_type == DS_TYPE_GAUGE)
         status = bind_xml_read_gauge(doc, counter, &value.gauge);
       else
         status = bind_xml_read_derive(doc, counter, &value.derive);
-      if (status != 0)
+      if (status != 0) {
+        xmlFree(name);
         continue;
+      }
 
       status = (*list_callback)(name, value, current_time, user_data);
       if (status == 0)
         num_entries++;
 
       xmlFree(name);
@@ -623,18 +654,22 @@
         continue;
       }
       if (ds_type == DS_TYPE_GAUGE)
         status = bind_xml_read_gauge(doc, child, &value.gauge);
       else
         status = bind_xml_read_derive(doc, child, &value.derive);
-      if (status != 0)
+      if (status != 0) {
+        xmlFree(attr_name);
         continue;
+      }
 
       status = (*list_callback)(attr_name, value, current_time, user_data);
       if (status == 0)
         num_entries++;
+
+      xmlFree(attr_name);
     }
   }
 
   DEBUG("bind plugin: Found %d %s for XPath expression `%s'", num_entries,
         (num_entries == 1) ? "entry" : "entries", xpath_expression);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd.1	2017-01-23 15:54:57.506192064 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd.1	2017-06-07 02:15:15.241149527 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD 1"
-.TH COLLECTD 1 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD 1 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd \- System statistics collection daemon
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd.conf.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd.conf.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd.conf.5	2017-01-23 15:54:58.142209778 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd.conf.5	2017-06-07 02:15:15.913149400 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD.CONF 5"
-.TH COLLECTD.CONF 5 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD.CONF 5 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd.conf \- Configuration for the system statistics collection daemon collectd
@@ -1381,12 +1381,14 @@
 \&\fI/sys/fs/cgroup/cpu.cpuacct\fR on machines using systemd).
 .IP "\fBCGroup\fR \fIDirectory\fR" 4
 .IX Item "CGroup Directory"
 Select \fIcgroup\fR based on the name. Whether only matching \fIcgroups\fR are
 collected or if they are ignored is controlled by the \fBIgnoreSelected\fR option;
 see below.
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR \fBtrue\fR|\fBfalse\fR" 4
 .IX Item "IgnoreSelected true|false"
 Invert the selection: If set to true, all cgroups \fIexcept\fR the ones that
 match any one of the criteria are collected. By default only selected
 cgroups are collected if a selection is made. If no selection is configured
 at all, \fBall\fR cgroups are selected.
@@ -2177,18 +2179,24 @@
 .ie n .SS "Plugin ""df"""
 .el .SS "Plugin \f(CWdf\fP"
 .IX Subsection "Plugin df"
 .IP "\fBDevice\fR \fIDevice\fR" 4
 .IX Item "Device Device"
 Select partitions based on the devicename.
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBMountPoint\fR \fIDirectory\fR" 4
 .IX Item "MountPoint Directory"
 Select partitions based on the mountpoint.
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBFSType\fR \fIFSType\fR" 4
 .IX Item "FSType FSType"
 Select partitions based on the filesystem type.
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR \fBtrue\fR|\fBfalse\fR" 4
 .IX Item "IgnoreSelected true|false"
 Invert the selection: If set to true, all partitions \fBexcept\fR the ones that
 match any one of the criteria are collected. By default only selected
 partitions are collected if a selection is made. If no selection is configured
 at all, \fBall\fR partitions are selected.
@@ -2236,12 +2244,14 @@
 is interpreted as a regular expression. Examples:
 .Sp
 .Vb 2
 \&  Disk "sdd"
 \&  Disk "/hda[34]/"
 .Ve
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR \fBtrue\fR|\fBfalse\fR" 4
 .IX Item "IgnoreSelected true|false"
 Sets whether selected disks, i.\ e. the ones matches by any of the \fBDisk\fR
 statements, are ignored or if all other disks are ignored. The behavior
 (hopefully) is intuitive: If no \fBDisk\fR option is configured, all disks are
 collected. If at least one \fBDisk\fR option is given and no \fBIgnoreSelected\fR or
@@ -2790,12 +2800,14 @@
 .el .SS "Plugin \f(CWinterface\fP"
 .IX Subsection "Plugin interface"
 .IP "\fBInterface\fR \fIInterface\fR" 4
 .IX Item "Interface Interface"
 Select this interface. By default these interfaces will then be collected. For
 a more detailed description see \fBIgnoreSelected\fR below.
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR \fItrue\fR|\fIfalse\fR" 4
 .IX Item "IgnoreSelected true|false"
 If no configuration if given, the \fBinterface\fR\-plugin will collect data from
 all interfaces. This may not be practical, especially for loopback\- and
 similar interfaces. Thus, you can use the \fBInterface\fR\-option to pick the
 interfaces you're interested in. Sometimes, however, it's easier/preferred
@@ -2846,12 +2858,14 @@
 .ie n .SS "Plugin ""ipmi"""
 .el .SS "Plugin \f(CWipmi\fP"
 .IX Subsection "Plugin ipmi"
 .IP "\fBSensor\fR \fISensor\fR" 4
 .IX Item "Sensor Sensor"
 Selects sensors to collect or to ignore, depending on \fBIgnoreSelected\fR.
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR \fItrue\fR|\fIfalse\fR" 4
 .IX Item "IgnoreSelected true|false"
 If no configuration if given, the \fBipmi\fR plugin will collect data from all
 sensors found of type \*(L"temperature\*(R", \*(L"voltage\*(R", \*(L"current\*(R" and \*(L"fanspeed\*(R".
 This option enables you to do that: By setting \fBIgnoreSelected\fR to \fItrue\fR
 the effect of \fBSensor\fR is inverted: All selected sensors are ignored and
@@ -2892,12 +2906,14 @@
 .el .SS "Plugin \f(CWirq\fP"
 .IX Subsection "Plugin irq"
 .IP "\fBIrq\fR \fIIrq\fR" 4
 .IX Item "Irq Irq"
 Select this irq. By default these irqs will then be collected. For a more
 detailed description see \fBIgnoreSelected\fR below.
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR \fItrue\fR|\fIfalse\fR" 4
 .IX Item "IgnoreSelected true|false"
 If no configuration if given, the \fBirq\fR\-plugin will collect data from all
 irqs. This may not be practical, especially if no interrupts happen. Thus, you
 can use the \fBIrq\fR\-option to pick the interrupt you're interested in.
 Sometimes, however, it's easier/preferred to collect all interrupts \fIexcept\fR a
@@ -3072,12 +3088,14 @@
 \&\fImissing\fR (physically absent) disks.
 .IP "\fBDevice\fR \fIDevice\fR" 4
 .IX Item "Device Device"
 Select md devices based on device name. The \fIdevice name\fR is the basename of
 the device, i.e. the name of the block device without the leading \f(CW\*(C`/dev/\*(C'\fR.
 See \fBIgnoreSelected\fR for more details.
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR \fBtrue\fR|\fBfalse\fR" 4
 .IX Item "IgnoreSelected true|false"
 Invert device selection: If set to \fBtrue\fR, all md devices \fBexcept\fR those
 listed using \fBDevice\fR are collected. If \fBfalse\fR (the default), only those
 listed are collected. If no configuration is given, the \fBmd\fR plugin will
 collect data from all md devices.
@@ -4104,12 +4122,14 @@
 .Sp
 If no regular expression is specified, an exact match is required. Both,
 regular and exact matching are case sensitive.
 .Sp
 If no volume was specified at all for either of the three options, that data
 will be collected for all available volumes.
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelectedIO\fR \fBtrue\fR|\fBfalse\fR" 4
 .IX Item "IgnoreSelectedIO true|false"
 .PD 0
 .IP "\fBIgnoreSelectedOps\fR \fBtrue\fR|\fBfalse\fR" 4
 .IX Item "IgnoreSelectedOps true|false"
 .IP "\fBIgnoreSelectedLatency\fR \fBtrue\fR|\fBfalse\fR" 4
@@ -4278,12 +4298,14 @@
 \&    QDisc "eth0" "pfifo_fast\-1:0"
 \&    QDisc "ppp0"
 \&    Class "ppp0" "htb\-1:10"
 \&    Filter "ppp0" "u32\-1:0"
 \&  </Plugin>
 .Ve
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR" 4
 .IX Item "IgnoreSelected"
 The behavior is the same as with all other similar plugins: If nothing is
 selected at all, everything is collected. If some things are selected using the
 options described above, only these statistics are collected. If you set
 \&\fBIgnoreSelected\fR to \fBtrue\fR, this behavior is inverted, i.\ e. the
@@ -4730,12 +4752,14 @@
 In the advanced mode the \fBSensor\fR specifies full \s-1OWFS\s0 path \- e.g.
 \&\f(CW\*(C`/uncached/10.F10FCA000800/temperature\*(C'\fR (or when cached values are \s-1OK
 \&\s0\f(CW\*(C`/10.F10FCA000800/temperature\*(C'\fR). \fBIgnoreSelected\fR is not used.
 .Sp
 As there can be multiple devices on the bus you can list multiple sensor (use
 multiple \fBSensor\fR elements).
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR \fItrue\fR|\fIfalse\fR" 4
 .IX Item "IgnoreSelected true|false"
 If no configuration is given, the \fBonewire\fR plugin will collect data from all
 sensors found. This may not be practical, especially if sensors are added and
 removed regularly. Sometimes, however, it's easier/preferred to collect only
 specific sensors or all sensors \fIexcept\fR a few specified ones. This option
@@ -5017,16 +5041,16 @@
 .IX Item "Host IP-address"
 Host to ping periodically. This option may be repeated several times to ping
 multiple hosts.
 .IP "\fBInterval\fR \fISeconds\fR" 4
 .IX Item "Interval Seconds"
 Sets the interval in which to send \s-1ICMP\s0 echo packets to the configured hosts.
-This is \fBnot\fR the interval in which statistics are queries from the plugin but
-the interval in which the hosts are \*(L"pinged\*(R". Therefore, the setting here
-should be smaller than or equal to the global \fBInterval\fR setting. Fractional
-times, such as \*(L"1.24\*(R" are allowed.
+This is \fBnot\fR the interval in which metrics are read from the plugin but the
+interval in which the hosts are \*(L"pinged\*(R". Therefore, the setting here should be
+smaller than or equal to the global \fBInterval\fR setting. Fractional times, such
+as \*(L"1.24\*(R" are allowed.
 .Sp
 Default: \fB1.0\fR
 .IP "\fBTimeout\fR \fISeconds\fR" 4
 .IX Item "Timeout Seconds"
 Time to wait for a response from the host to which an \s-1ICMP\s0 packet had been
 sent. If a reply was not received after \fISeconds\fR seconds, the host is assumed
@@ -5677,12 +5701,14 @@
 \&  Value "/^TcpExt:/"
 .Ve
 .Sp
 Whether only matched values are selected or all matched values are ignored
 depends on the \fBIgnoreSelected\fR. By default, only matched values are selected.
 If no value is configured at all, all values will be selected.
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR \fBtrue\fR|\fBfalse\fR" 4
 .IX Item "IgnoreSelected true|false"
 If set to \fBtrue\fR, inverts the selection made by \fBValue\fR, i.\ e. all
 matching values will be ignored.
 .ie n .SS "Plugin ""python"""
 .el .SS "Plugin \f(CWpython\fP"
@@ -6049,12 +6075,14 @@
 .IP "\fBSensor\fR \fIchip\-bus\-address/type\-feature\fR" 4
 .IX Item "Sensor chip-bus-address/type-feature"
 Selects the name of the sensor which you want to collect or ignore, depending
 on the \fBIgnoreSelected\fR below. For example, the option "\fBSensor\fR
 \&\fIit8712\-isa\-0290/voltage\-in1\fR" will cause collectd to gather data for the
 voltage sensor \fIin1\fR of the \fIit8712\fR on the isa bus at the address 0290.
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR \fItrue\fR|\fIfalse\fR" 4
 .IX Item "IgnoreSelected true|false"
 If no configuration if given, the \fBsensors\fR\-plugin will collect data from all
 sensors. This may not be practical, especially for uninteresting sensors.
 Thus, you can use the \fBSensor\fR\-option to pick the sensors you're interested
 in. Sometimes, however, it's easier/preferred to collect all sensors \fIexcept\fR a
@@ -6145,12 +6173,14 @@
 is interpreted as a regular expression. Examples:
 .Sp
 .Vb 2
 \&  Disk "sdd"
 \&  Disk "/hda[34]/"
 .Ve
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR \fBtrue\fR|\fBfalse\fR" 4
 .IX Item "IgnoreSelected true|false"
 Sets whether selected disks, i.\ e. the ones matches by any of the \fBDisk\fR
 statements, are ignored or if all other disks are ignored. The behavior
 (hopefully) is intuitive: If no \fBDisk\fR option is configured, all disks are
 collected. If at least one \fBDisk\fR option is given and no \fBIgnoreSelected\fR or
@@ -6759,12 +6789,14 @@
 plugin to use the latter. This option defaults to \fIfalse\fR.
 .IP "\fBDevice\fR \fIDevice\fR" 4
 .IX Item "Device Device"
 Selects the name of the thermal device that you want to collect or ignore,
 depending on the value of the \fBIgnoreSelected\fR option. This option may be
 used multiple times to specify a list of devices.
+.Sp
+See \fI/\*(L"\s-1IGNORELISTS\*(R"\s0\fR for details.
 .IP "\fBIgnoreSelected\fR \fItrue\fR|\fIfalse\fR" 4
 .IX Item "IgnoreSelected true|false"
 Invert the selection: If set to true, all devices \fBexcept\fR the ones that
 match the device names specified by the \fBDevice\fR option are collected. By
 default only selected devices are collected if a selection is made. If no
 selection is configured at all, \fBall\fR devices are selected.
@@ -8909,12 +8941,53 @@
 \&     </Match>
 \&     Target "stop"
 \&   </Rule>
 \&   Target "write"
 \& </Chain>
 .Ve
+.SH "IGNORELISTS"
+.IX Header "IGNORELISTS"
+\&\fBIgnorelists\fR are a generic framework to either ignore some metrics or report
+specific metircs only. Plugins usually provide one or more options to specify
+the items (mounts points, devices, ...) and the boolean option
+\&\f(CW\*(C`IgnoreSelected\*(C'\fR.
+.IP "\fBSelect\fR \fIString\fR" 4
+.IX Item "Select String"
+Selects the item \fIString\fR. This option often has a plugin specific name, e.g.
+\&\fBSensor\fR in the \f(CW\*(C`sensors\*(C'\fR plugin. It is also plugin specific what this string
+is compared to. For example, the \f(CW\*(C`df\*(C'\fR plugin's \fBMountPoint\fR compares it to a
+mount point and the \f(CW\*(C`sensors\*(C'\fR plugin's \fBSensor\fR compares it to a sensor name.
+.Sp
+By default, this option is doing a case-sensitive full-string match. The
+following config will match \f(CW\*(C`foo\*(C'\fR, but not \f(CW\*(C`Foo\*(C'\fR:
+.Sp
+.Vb 1
+\&  Select "foo"
+.Ve
+.Sp
+If \fIString\fR starts and ends with \f(CW\*(C`/\*(C'\fR (a slash), the string is compiled as a
+\&\fIregular expression\fR. For example, so match all item starting with \f(CW\*(C`foo\*(C'\fR, use
+could use the following syntax:
+.Sp
+.Vb 1
+\&  Select "/^foo/"
+.Ve
+.Sp
+The regular expression is \fInot\fR anchored, i.e. the following config will match
+\&\f(CW\*(C`foobar\*(C'\fR, \f(CW\*(C`barfoo\*(C'\fR and \f(CW\*(C`AfooZ\*(C'\fR:
+.Sp
+.Vb 1
+\&  Select "/foo/"
+.Ve
+.Sp
+The \fBSelect\fR option may be repeated to select multiple items.
+.IP "\fBIgnoreSelected\fR \fBtrue\fR|\fBfalse\fR" 4
+.IX Item "IgnoreSelected true|false"
+If set to \fBtrue\fR, matching metrics are \fIignored\fR and all other metrics are
+collected. If set to \fBfalse\fR, matching metrics are \fIcollected\fR and all other
+metrics are ignored.
 .SH "SEE ALSO"
 .IX Header "SEE ALSO"
 \&\fIcollectd\fR\|(1),
 \&\fIcollectd\-exec\fR\|(5),
 \&\fIcollectd\-perl\fR\|(5),
 \&\fIcollectd\-unixsock\fR\|(5),
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd.conf.pod /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd.conf.pod
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd.conf.pod	2017-01-23 15:53:57.696448545 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd.conf.pod	2017-06-07 02:13:54.669164698 +0800
@@ -335,13 +335,13 @@
 
 =item B<PreCacheChain> I<ChainName>
 
 =item B<PostCacheChain> I<ChainName>
 
 Configure the name of the "pre-cache chain" and the "post-cache chain". Please
-see L<FILTER CONFIGURATION> below on information on chains and how these
+see L</"FILTER CONFIGURATION"> below on information on chains and how these
 setting change the daemon's behavior.
 
 =back
 
 =head1 PLUGIN OPTIONS
 
@@ -1369,12 +1369,14 @@
 =item B<CGroup> I<Directory>
 
 Select I<cgroup> based on the name. Whether only matching I<cgroups> are
 collected or if they are ignored is controlled by the B<IgnoreSelected> option;
 see below.
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected> B<true>|B<false>
 
 Invert the selection: If set to true, all cgroups I<except> the ones that
 match any one of the criteria are collected. By default only selected
 cgroups are collected if a selection is made. If no selection is configured
 at all, B<all> cgroups are selected.
@@ -2265,20 +2267,26 @@
 =over 4
 
 =item B<Device> I<Device>
 
 Select partitions based on the devicename.
 
+See F</"IGNORELISTS"> for details.
+
 =item B<MountPoint> I<Directory>
 
 Select partitions based on the mountpoint.
 
+See F</"IGNORELISTS"> for details.
+
 =item B<FSType> I<FSType>
 
 Select partitions based on the filesystem type.
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected> B<true>|B<false>
 
 Invert the selection: If set to true, all partitions B<except> the ones that
 match any one of the criteria are collected. By default only selected
 partitions are collected if a selection is made. If no selection is configured
 at all, B<all> partitions are selected.
@@ -2334,12 +2342,14 @@
 daemon's ignorelist functionality, a string that starts and ends with a slash
 is interpreted as a regular expression. Examples:
 
   Disk "sdd"
   Disk "/hda[34]/"
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected> B<true>|B<false>
 
 Sets whether selected disks, i.E<nbsp>e. the ones matches by any of the B<Disk>
 statements, are ignored or if all other disks are ignored. The behavior
 (hopefully) is intuitive: If no B<Disk> option is configured, all disks are
 collected. If at least one B<Disk> option is given and no B<IgnoreSelected> or
@@ -2995,12 +3005,14 @@
 
 =item B<Interface> I<Interface>
 
 Select this interface. By default these interfaces will then be collected. For
 a more detailed description see B<IgnoreSelected> below.
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected> I<true>|I<false>
 
 If no configuration if given, the B<interface>-plugin will collect data from
 all interfaces. This may not be practical, especially for loopback- and
 similar interfaces. Thus, you can use the B<Interface>-option to pick the
 interfaces you're interested in. Sometimes, however, it's easier/preferred
@@ -3056,12 +3068,14 @@
 =over 4
 
 =item B<Sensor> I<Sensor>
 
 Selects sensors to collect or to ignore, depending on B<IgnoreSelected>.
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected> I<true>|I<false>
 
 If no configuration if given, the B<ipmi> plugin will collect data from all
 sensors found of type "temperature", "voltage", "current" and "fanspeed".
 This option enables you to do that: By setting B<IgnoreSelected> to I<true>
 the effect of B<Sensor> is inverted: All selected sensors are ignored and
@@ -3112,12 +3126,14 @@
 
 =item B<Irq> I<Irq>
 
 Select this irq. By default these irqs will then be collected. For a more
 detailed description see B<IgnoreSelected> below.
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected> I<true>|I<false>
 
 If no configuration if given, the B<irq>-plugin will collect data from all
 irqs. This may not be practical, especially if no interrupts happen. Thus, you
 can use the B<Irq>-option to pick the interrupt you're interested in.
 Sometimes, however, it's easier/preferred to collect all interrupts I<except> a
@@ -3335,12 +3351,14 @@
 =item B<Device> I<Device>
 
 Select md devices based on device name. The I<device name> is the basename of
 the device, i.e. the name of the block device without the leading C</dev/>.
 See B<IgnoreSelected> for more details.
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected> B<true>|B<false>
 
 Invert device selection: If set to B<true>, all md devices B<except> those
 listed using B<Device> are collected. If B<false> (the default), only those
 listed are collected. If no configuration is given, the B<md> plugin will
 collect data from all md devices.
@@ -4498,12 +4516,14 @@
 If no regular expression is specified, an exact match is required. Both,
 regular and exact matching are case sensitive.
 
 If no volume was specified at all for either of the three options, that data
 will be collected for all available volumes.
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelectedIO> B<true>|B<false>
 
 =item B<IgnoreSelectedOps> B<true>|B<false>
 
 =item B<IgnoreSelectedLatency> B<true>|B<false>
 
@@ -4683,12 +4703,14 @@
     QDisc "eth0" "pfifo_fast-1:0"
     QDisc "ppp0"
     Class "ppp0" "htb-1:10"
     Filter "ppp0" "u32-1:0"
   </Plugin>
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected>
 
 The behavior is the same as with all other similar plugins: If nothing is
 selected at all, everything is collected. If some things are selected using the
 options described above, only these statistics are collected. If you set
 B<IgnoreSelected> to B<true>, this behavior is inverted, i.E<nbsp>e. the
@@ -5205,12 +5227,14 @@
 C</uncached/10.F10FCA000800/temperature> (or when cached values are OK
 C</10.F10FCA000800/temperature>). B<IgnoreSelected> is not used.
 
 As there can be multiple devices on the bus you can list multiple sensor (use
 multiple B<Sensor> elements).
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected> I<true>|I<false>
 
 If no configuration is given, the B<onewire> plugin will collect data from all
 sensors found. This may not be practical, especially if sensors are added and
 removed regularly. Sometimes, however, it's easier/preferred to collect only
 specific sensors or all sensors I<except> a few specified ones. This option
@@ -5529,16 +5553,16 @@
 Host to ping periodically. This option may be repeated several times to ping
 multiple hosts.
 
 =item B<Interval> I<Seconds>
 
 Sets the interval in which to send ICMP echo packets to the configured hosts.
-This is B<not> the interval in which statistics are queries from the plugin but
-the interval in which the hosts are "pinged". Therefore, the setting here
-should be smaller than or equal to the global B<Interval> setting. Fractional
-times, such as "1.24" are allowed.
+This is B<not> the interval in which metrics are read from the plugin but the
+interval in which the hosts are "pinged". Therefore, the setting here should be
+smaller than or equal to the global B<Interval> setting. Fractional times, such
+as "1.24" are allowed.
 
 Default: B<1.0>
 
 =item B<Timeout> I<Seconds>
 
 Time to wait for a response from the host to which an ICMP packet had been
@@ -6264,12 +6288,14 @@
   Value "/^TcpExt:/"
 
 Whether only matched values are selected or all matched values are ignored
 depends on the B<IgnoreSelected>. By default, only matched values are selected.
 If no value is configured at all, all values will be selected.
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected> B<true>|B<false>
 
 If set to B<true>, inverts the selection made by B<Value>, i.E<nbsp>e. all
 matching values will be ignored.
 
 =back
@@ -6692,12 +6718,14 @@
 
 Selects the name of the sensor which you want to collect or ignore, depending
 on the B<IgnoreSelected> below. For example, the option "B<Sensor>
 I<it8712-isa-0290/voltage-in1>" will cause collectd to gather data for the
 voltage sensor I<in1> of the I<it8712> on the isa bus at the address 0290.
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected> I<true>|I<false>
 
 If no configuration if given, the B<sensors>-plugin will collect data from all
 sensors. This may not be practical, especially for uninteresting sensors.
 Thus, you can use the B<Sensor>-option to pick the sensors you're interested
 in. Sometimes, however, it's easier/preferred to collect all sensors I<except> a
@@ -6801,12 +6829,14 @@
 daemon's ignorelist functionality, a string that starts and ends with a slash
 is interpreted as a regular expression. Examples:
 
   Disk "sdd"
   Disk "/hda[34]/"
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected> B<true>|B<false>
 
 Sets whether selected disks, i.E<nbsp>e. the ones matches by any of the B<Disk>
 statements, are ignored or if all other disks are ignored. The behavior
 (hopefully) is intuitive: If no B<Disk> option is configured, all disks are
 collected. If at least one B<Disk> option is given and no B<IgnoreSelected> or
@@ -7488,12 +7518,14 @@
 =item B<Device> I<Device>
 
 Selects the name of the thermal device that you want to collect or ignore,
 depending on the value of the B<IgnoreSelected> option. This option may be
 used multiple times to specify a list of devices.
 
+See F</"IGNORELISTS"> for details.
+
 =item B<IgnoreSelected> I<true>|I<false>
 
 Invert the selection: If set to true, all devices B<except> the ones that
 match the device names specified by the B<Device> option are collected. By
 default only selected devices are collected if a selection is made. If no
 selection is configured at all, B<all> devices are selected.
@@ -9852,12 +9884,54 @@
      </Match>
      Target "stop"
    </Rule>
    Target "write"
  </Chain>
 
+=head1 IGNORELISTS
+
+B<Ignorelists> are a generic framework to either ignore some metrics or report
+specific metircs only. Plugins usually provide one or more options to specify
+the items (mounts points, devices, ...) and the boolean option
+C<IgnoreSelected>.
+
+=over 4
+
+=item B<Select> I<String>
+
+Selects the item I<String>. This option often has a plugin specific name, e.g.
+B<Sensor> in the C<sensors> plugin. It is also plugin specific what this string
+is compared to. For example, the C<df> plugin's B<MountPoint> compares it to a
+mount point and the C<sensors> plugin's B<Sensor> compares it to a sensor name.
+
+By default, this option is doing a case-sensitive full-string match. The
+following config will match C<foo>, but not C<Foo>:
+
+  Select "foo"
+
+If I<String> starts and ends with C</> (a slash), the string is compiled as a
+I<regular expression>. For example, so match all item starting with C<foo>, use
+could use the following syntax:
+
+  Select "/^foo/"
+
+The regular expression is I<not> anchored, i.e. the following config will match
+C<foobar>, C<barfoo> and C<AfooZ>:
+
+  Select "/foo/"
+
+The B<Select> option may be repeated to select multiple items.
+
+=item B<IgnoreSelected> B<true>|B<false>
+
+If set to B<true>, matching metrics are I<ignored> and all other metrics are
+collected. If set to B<false>, matching metrics are I<collected> and all other
+metrics are ignored.
+
+=back
+
 =head1 SEE ALSO
 
 L<collectd(1)>,
 L<collectd-exec(5)>,
 L<collectd-perl(5)>,
 L<collectd-unixsock(5)>,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectdctl.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectdctl.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectdctl.1	2017-01-23 15:54:58.366216009 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectdctl.1	2017-06-07 02:15:16.145149358 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTDCTL 1"
-.TH COLLECTDCTL 1 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTDCTL 1 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectdctl \- Control interface for collectd
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-email.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-email.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-email.5	2017-01-23 15:54:58.206211557 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-email.5	2017-06-07 02:15:15.989149386 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-EMAIL 5"
-.TH COLLECTD-EMAIL 5 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD-EMAIL 5 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-email \- Documentation of collectd's "email plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-exec.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-exec.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-exec.5	2017-01-23 15:54:58.298214118 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-exec.5	2017-06-07 02:15:16.077149370 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-EXEC 5"
-.TH COLLECTD-EXEC 5 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD-EXEC 5 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-exec \- Documentation of collectd's "exec plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-java.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-java.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-java.5	2017-01-23 15:54:58.466218791 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-java.5	2017-06-07 02:15:16.257149336 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-JAVA 5"
-.TH COLLECTD-JAVA 5 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD-JAVA 5 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-java \- Documentation of collectd's "java plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-lua.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-lua.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-lua.5	2017-01-23 15:54:58.538220794 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-lua.5	2017-06-07 02:15:16.321149324 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-LUA 5"
-.TH COLLECTD-LUA 5 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD-LUA 5 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-lua \- Documentation of collectd's "Lua plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectdmon.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectdmon.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectdmon.1	2017-01-23 15:54:58.602222575 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectdmon.1	2017-06-07 02:15:16.385149312 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTDMON 1"
-.TH COLLECTDMON 1 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTDMON 1 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectdmon \- Monitoring daemon for collectd
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-nagios.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-nagios.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-nagios.1	2017-01-23 15:54:58.674224577 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-nagios.1	2017-06-07 02:15:16.461149298 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-NAGIOS 1"
-.TH COLLECTD-NAGIOS 1 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD-NAGIOS 1 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-nagios \- Nagios plugin for querying collectd
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-perl.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-perl.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-perl.5	2017-01-23 15:54:58.774227359 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-perl.5	2017-06-07 02:15:16.569149278 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-PERL 5"
-.TH COLLECTD-PERL 5 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD-PERL 5 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-perl \- Documentation of collectd's "perl plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-python.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-python.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-python.5	2017-01-23 15:54:58.874230141 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-python.5	2017-06-07 02:15:16.669149259 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-PYTHON 5"
-.TH COLLECTD-PYTHON 5 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD-PYTHON 5 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-python \- Documentation of collectd's "python plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-snmp.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-snmp.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-snmp.5	2017-01-23 15:54:58.954232366 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-snmp.5	2017-06-07 02:15:16.761149242 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-SNMP 5"
-.TH COLLECTD-SNMP 5 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD-SNMP 5 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-snmp \- Documentation of collectd's "snmp plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-tg.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-tg.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-tg.1	2017-01-23 15:54:59.014234035 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-tg.1	2017-06-07 02:15:16.833149228 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-TG 1"
-.TH COLLECTD-TG 1 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD-TG 1 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-tg \- Traffic generator for collectd.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-threshold.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-threshold.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-threshold.5	2017-01-23 15:54:59.090236147 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-threshold.5	2017-06-07 02:15:16.917149212 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-THRESHOLD 5"
-.TH COLLECTD-THRESHOLD 5 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD-THRESHOLD 5 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-threshold \- Documentation of collectd's Threshold plugin
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-unixsock.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-unixsock.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/collectd-unixsock.5	2017-01-23 15:54:59.170238370 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/collectd-unixsock.5	2017-06-07 02:15:16.997149198 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-UNIXSOCK 5"
-.TH COLLECTD-UNIXSOCK 5 "2017-01-23" "5.7.1" "collectd"
+.TH COLLECTD-UNIXSOCK 5 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-unixsock \- Documentation of collectd's "unixsock plugin"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/config.h.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/config.h.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/config.h.in	2017-01-23 15:54:25.997293623 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/config.h.in	2017-06-07 02:14:22.645159409 +0800
@@ -90,13 +90,13 @@
 /* Define to 1 if you have the <atasmart.h> header file. */
 #undef HAVE_ATASMART_H
 
 /* Define to 1 if you have the <bsd/nlist.h> header file. */
 #undef HAVE_BSD_NLIST_H
 
-/* Define to 1 if you have cap_get_bound() (-lcap). */
+/* Define to 1 if you have cap_get_proc() (-lcap). */
 #undef HAVE_CAPABILITY
 
 /* Define if the clock_gettime(2) function is available. */
 #undef HAVE_CLOCK_GETTIME
 
 /* Define to 1 if you have the `closedir' function. */
@@ -1541,12 +1541,15 @@
 /* Define to 1 if the rrd library is thread-safe */
 #undef HAVE_THREADSAFE_LIBRRD
 
 /* Define to 1 if you have the `thread_info' function. */
 #undef HAVE_THREAD_INFO
 
+/* Define if the timegm(3) function is available. */
+#undef HAVE_TIMEGM
+
 /* Define if the function getmntent exists and takes two arguments. */
 #undef HAVE_TWO_GETMNTENT
 
 /* Define to 1 if you have the <unistd.h> header file. */
 #undef HAVE_UNISTD_H
 
@@ -1700,12 +1703,15 @@
 /* Define to 1 if strerror_r returns char *. */
 #undef STRERROR_R_CHAR_P
 
 /* Set to true if strptime is only exported in X/Open mode (GNU libc). */
 #undef STRPTIME_NEEDS_STANDARDS
 
+/* Set to true if timegm is only exported in BSD mode. */
+#undef TIMEGM_NEEDS_BSD
+
 /* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
 #undef TIME_WITH_SYS_TIME
 
 /* Version number of package */
 #undef VERSION
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/curl_json.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/curl_json.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/curl_json.c	2017-01-23 15:53:57.696448545 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/curl_json.c	2017-06-07 02:13:54.673164697 +0800
@@ -168,165 +168,172 @@
         key->type);
   }
 
   return ds->ds[0].type;
 }
 
-static int cj_cb_map_key(void *ctx, const unsigned char *val, yajl_len_t len);
+/* cj_load_key loads the configuration for "key" from the parent context and
+ * sets either .key or .tree in the current context. */
+static int cj_load_key(cj_t *db, char const *key) {
+  if (db == NULL || key == NULL || db->depth <= 0)
+    return EINVAL;
+
+  sstrncpy(db->state[db->depth].name, key, sizeof(db->state[db->depth].name));
+
+  c_avl_tree_t *tree = db->state[db->depth - 1].tree;
+  if (tree == NULL) {
+    return 0;
+  }
+
+  /* the parent has a key, so the tree pointer is invalid. */
+  if (CJ_IS_KEY(db->state[db->depth - 1].key)) {
+    return 0;
+  }
+
+  void *value = NULL;
+  if (c_avl_get(tree, key, (void *)&value) == 0) {
+    if (CJ_IS_KEY((cj_key_t *)value)) {
+      db->state[db->depth].key = value;
+    } else {
+      db->state[db->depth].tree = value;
+    }
+  } else if (c_avl_get(tree, CJ_ANY, (void *)&value) == 0) {
+    if (CJ_IS_KEY((cj_key_t *)value)) {
+      db->state[db->depth].key = value;
+    } else {
+      db->state[db->depth].tree = value;
+    }
+  } else {
+    db->state[db->depth].key = NULL;
+  }
 
-static void cj_cb_inc_array_index(void *ctx, _Bool update_key) {
-  cj_t *db = (cj_t *)ctx;
+  return 0;
+}
 
+static void cj_advance_array(cj_t *db) {
   if (!db->state[db->depth].in_array)
     return;
 
   db->state[db->depth].index++;
 
-  if (update_key) {
-    char name[DATA_MAX_NAME_LEN];
-
-    ssnprintf(name, sizeof(name), "%d", db->state[db->depth].index - 1);
-
-    cj_cb_map_key(ctx, (unsigned char *)name, (yajl_len_t)strlen(name));
-  }
+  char name[DATA_MAX_NAME_LEN];
+  ssnprintf(name, sizeof(name), "%d", db->state[db->depth].index);
+  cj_load_key(db, name);
 }
 
 /* yajl callbacks */
 #define CJ_CB_ABORT 0
 #define CJ_CB_CONTINUE 1
 
 static int cj_cb_boolean(void *ctx, int boolVal) {
-  cj_cb_inc_array_index(ctx, /* update_key = */ 0);
+  cj_advance_array(ctx);
   return (CJ_CB_CONTINUE);
 }
 
 static int cj_cb_null(void *ctx) {
-  cj_cb_inc_array_index(ctx, /* update_key = */ 0);
+  cj_advance_array(ctx);
   return (CJ_CB_CONTINUE);
 }
 
 static int cj_cb_number(void *ctx, const char *number, yajl_len_t number_len) {
   char buffer[number_len + 1];
 
   cj_t *db = (cj_t *)ctx;
   cj_key_t *key = db->state[db->depth].key;
-  value_t vt;
-  int type;
-  int status;
 
   /* Create a null-terminated version of the string. */
   memcpy(buffer, number, number_len);
   buffer[sizeof(buffer) - 1] = 0;
 
-  if ((key == NULL) || !CJ_IS_KEY(key)) {
-    if (key != NULL &&
-        !db->state[db->depth].in_array /*can be inhomogeneous*/) {
-      NOTICE("curl_json plugin: Found \"%s\", but the configuration expects"
-             " a map.",
-             buffer);
-      return (CJ_CB_CONTINUE);
-    }
 
-    cj_cb_inc_array_index(ctx, /* update_key = */ 1);
-    key = db->state[db->depth].key;
-    if ((key == NULL) || !CJ_IS_KEY(key)) {
-      return (CJ_CB_CONTINUE);
-    }
-  } else {
-    cj_cb_inc_array_index(ctx, /* update_key = */ 1);
+
+  if (key == NULL) {
+    /* no config for this element. */
+    cj_advance_array(ctx);
+    return CJ_CB_CONTINUE;
+  } else if (!CJ_IS_KEY(key)) {
+    /* the config expects a map or an array. */
+    NOTICE(
+        "curl_json plugin: Found \"%s\", but the configuration expects a map.",
+        buffer);
+    cj_advance_array(ctx);
+    return CJ_CB_CONTINUE;
   }
 
-  type = cj_get_type(key);
-  status = parse_value(buffer, &vt, type);
+  int type = cj_get_type(key);
+  value_t vt;
+  int status = parse_value(buffer, &vt, type);
   if (status != 0) {
     NOTICE("curl_json plugin: Unable to parse number: \"%s\"", buffer);
+    cj_advance_array(ctx);
     return (CJ_CB_CONTINUE);
   }
 
   cj_submit(db, key, &vt);
+  cj_advance_array(ctx);
   return (CJ_CB_CONTINUE);
 } /* int cj_cb_number */
 
 /* Queries the key-tree of the parent context for "in_name" and, if found,
  * updates the "key" field of the current context. Otherwise, "key" is set to
  * NULL. */
 static int cj_cb_map_key(void *ctx, unsigned char const *in_name,
                          yajl_len_t in_name_len) {
-  cj_t *db = (cj_t *)ctx;
-  c_avl_tree_t *tree;
+  char name[in_name_len + 1];
 
-  tree = db->state[db->depth - 1].tree;
+  memmove(name, in_name, in_name_len);
+  name[sizeof(name) - 1] = 0;
 
-  if (tree != NULL) {
-    cj_key_t *value = NULL;
-    char *name;
-    size_t name_len;
-
-    /* Create a null-terminated version of the name. */
-    name = db->state[db->depth].name;
-    name_len =
-        COUCH_MIN((size_t)in_name_len, sizeof(db->state[db->depth].name) - 1);
-    memcpy(name, in_name, name_len);
-    name[name_len] = 0;
-
-    if (c_avl_get(tree, name, (void *)&value) == 0) {
-      if (CJ_IS_KEY((cj_key_t *)value)) {
-        db->state[db->depth].key = value;
-      } else {
-        db->state[db->depth].tree = (c_avl_tree_t *)value;
-      }
-    } else if (c_avl_get(tree, CJ_ANY, (void *)&value) == 0)
-      if (CJ_IS_KEY((cj_key_t *)value)) {
-        db->state[db->depth].key = value;
-      } else {
-        db->state[db->depth].tree = (c_avl_tree_t *)value;
-      }
-    else
-      db->state[db->depth].key = NULL;
-  }
+  if (cj_load_key(ctx, name) != 0)
+    return CJ_CB_ABORT;
 
-  return (CJ_CB_CONTINUE);
+  return CJ_CB_CONTINUE;
 }
 
 static int cj_cb_string(void *ctx, const unsigned char *val, yajl_len_t len) {
   /* Handle the string as if it was a number. */
   return (cj_cb_number(ctx, (const char *)val, len));
 } /* int cj_cb_string */
 
-static int cj_cb_start(void *ctx) {
-  cj_t *db = (cj_t *)ctx;
-  if (++db->depth >= YAJL_MAX_DEPTH) {
-    ERROR("curl_json plugin: %s depth exceeds max, aborting.",
-          db->url ? db->url : db->sock);
-    return (CJ_CB_ABORT);
-  }
-  return (CJ_CB_CONTINUE);
-}
-
 static int cj_cb_end(void *ctx) {
   cj_t *db = (cj_t *)ctx;
   db->state[db->depth].tree = NULL;
-  --db->depth;
+  db->depth--;
+  cj_advance_array(ctx);
   return (CJ_CB_CONTINUE);
 }
 
 static int cj_cb_start_map(void *ctx) {
-  cj_cb_inc_array_index(ctx, /* update_key = */ 1);
-  return cj_cb_start(ctx);
+  cj_t *db = (cj_t *)ctx;
+
+  if ((db->depth + 1) >= YAJL_MAX_DEPTH) {
+    ERROR("curl_json plugin: %s depth exceeds max, aborting.",
+          db->url ? db->url : db->sock);
+    return (CJ_CB_ABORT);
+  }
+  db->depth++;
+  return (CJ_CB_CONTINUE);
 }
 
 static int cj_cb_end_map(void *ctx) { return cj_cb_end(ctx); }
 
 static int cj_cb_start_array(void *ctx) {
   cj_t *db = (cj_t *)ctx;
-  cj_cb_inc_array_index(ctx, /* update_key = */ 1);
-  if (db->depth + 1 < YAJL_MAX_DEPTH) {
-    db->state[db->depth + 1].in_array = 1;
-    db->state[db->depth + 1].index = 0;
+
+  if ((db->depth + 1) >= YAJL_MAX_DEPTH) {
+    ERROR("curl_json plugin: %s depth exceeds max, aborting.",
+          db->url ? db->url : db->sock);
+    return CJ_CB_ABORT;
   }
-  return cj_cb_start(ctx);
+  db->depth++;
+  db->state[db->depth].in_array = 1;
+  db->state[db->depth].index = 0;
+
+  cj_load_key(db, "0");
+
+  return CJ_CB_CONTINUE;
 }
 
 static int cj_cb_end_array(void *ctx) {
   cj_t *db = (cj_t *)ctx;
   db->state[db->depth].in_array = 0;
   return cj_cb_end(ctx);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/daemon/collectd.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/daemon/collectd.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/daemon/collectd.c	2017-01-23 15:53:57.700448666 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/daemon/collectd.c	2017-06-07 02:13:54.673164697 +0800
@@ -518,13 +518,13 @@
    * line (in that order, with later options overwriting previous ones in
    * general).
    * Also, this will automatically load modules.
    */
   if (cf_read(configfile)) {
     fprintf(stderr, "Error: Reading the config file failed!\n"
-                    "Read the syslog for details.\n");
+                    "Read the logs for details.\n");
     return (1);
   }
 
   /*
    * Change directory. We do this _after_ reading the config and loading
    * modules to relative paths work as expected.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/daemon/common.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/daemon/common.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/daemon/common.c	2017-01-23 15:53:57.700448666 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/daemon/common.c	2017-06-07 02:13:54.673164697 +0800
@@ -1565,22 +1565,32 @@
   sfree(array);
 } /* }}} void strarray_free */
 
 #if HAVE_CAPABILITY
 int check_capability(int arg) /* {{{ */
 {
-  cap_value_t cap = (cap_value_t)arg;
+  cap_value_t cap_value = (cap_value_t)arg;
+  cap_t cap;
+  cap_flag_value_t cap_flag_value;
 
-  if (!CAP_IS_SUPPORTED(cap))
+  if (!CAP_IS_SUPPORTED(cap_value))
     return (-1);
 
-  int have_cap = cap_get_bound(cap);
-  if (have_cap != 1)
+  if (!(cap = cap_get_proc())) {
+    ERROR("check_capability: cap_get_proc failed.");
     return (-1);
+  }
 
-  return (0);
+  if (cap_get_flag(cap, cap_value, CAP_EFFECTIVE, &cap_flag_value) < 0) {
+    ERROR("check_capability: cap_get_flag failed.");
+    cap_free(cap);
+    return (-1);
+  }
+  cap_free(cap);
+
+  return (cap_flag_value != CAP_SET);
 } /* }}} int check_capability */
 #else
 int check_capability(__attribute__((unused)) int arg) /* {{{ */
 {
   WARNING("check_capability: unsupported capability implementation. "
           "Some plugin(s) may require elevated privileges to work properly.");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/daemon/common.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/daemon/common.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/daemon/common.h	2017-01-23 15:53:57.700448666 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/daemon/common.h	2017-06-07 02:13:39.033167663 +0800
@@ -382,10 +382,10 @@
 
 #ifdef HAVE_SYS_CAPABILITY_H
 /** Check if the current process benefits from the capability passed in
  * argument. Returns zero if it does, less than zero if it doesn't or on error.
  * See capabilities(7) for the list of possible capabilities.
  * */
-int check_capability(int capability);
+int check_capability(int arg);
 #endif /* HAVE_SYS_CAPABILITY_H */
 
 #endif /* COMMON_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/daemon/utils_cache.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/daemon/utils_cache.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/daemon/utils_cache.c	2017-01-23 15:53:57.700448666 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/daemon/utils_cache.c	2017-06-07 02:13:54.673164697 +0800
@@ -219,22 +219,21 @@
         c_avl_create((int (*)(const void *, const void *))cache_compare);
 
   return (0);
 } /* int uc_init */
 
 int uc_check_timeout(void) {
-  cdtime_t now = cdtime();
-
   struct {
     char *key;
     cdtime_t time;
     cdtime_t interval;
   } *expired = NULL;
   size_t expired_num = 0;
 
   pthread_mutex_lock(&cache_lock);
+  cdtime_t now = cdtime();
 
   /* Build a list of entries to be flushed */
   c_avl_iterator_t *iter = c_avl_get_iterator(cache_tree);
   char *key = NULL;
   cache_entry_t *ce = NULL;
   while (c_avl_iterator_next(iter, (void *)&key, (void *)&ce) == 0) {
@@ -420,12 +419,15 @@
 
   if (c_avl_get(cache_tree, name, (void *)&ce) == 0) {
     assert(ce != NULL);
 
     /* remove missing values from getval */
     if (ce->state == STATE_MISSING) {
+      DEBUG("utils_cache: uc_get_rate_by_name: requested metric \"%s\" is in "
+            "state \"missing\".",
+            name);
       status = -1;
     } else {
       ret_num = ce->values_num;
       ret = malloc(ret_num * sizeof(*ret));
       if (ret == NULL) {
         ERROR("utils_cache: uc_get_rate_by_name: malloc failed.");
@@ -463,13 +465,13 @@
   status = uc_get_rate_by_name(name, &ret, &ret_num);
   if (status != 0)
     return (NULL);
 
   /* This is important - the caller has no other way of knowing how many
    * values are returned. */
-  if (ret_num != (size_t)ds->ds_num) {
+  if (ret_num != ds->ds_num) {
     ERROR("utils_cache: uc_get_rate: ds[%s] has %zu values, "
           "but uc_get_rate_by_name returned %zu.",
           ds->type, ds->ds_num, ret_num);
     sfree(ret);
     return (NULL);
   }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/dpdkstat.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/dpdkstat.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/dpdkstat.c	2017-01-23 15:53:57.704448789 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/dpdkstat.c	2017-06-07 02:13:54.677164697 +0800
@@ -286,19 +286,19 @@
 
   /* Initialize the semaphores for SHM use */
   int err = sem_init(&g_configuration->sema_helper_get_stats, 1, 0);
   if (err) {
     ERROR("dpdkstat semaphore init failed: %s",
           sstrerror(errno, errbuf, sizeof(errbuf)));
-    goto close;
+    goto fail;
   }
   err = sem_init(&g_configuration->sema_stats_in_shm, 1, 0);
   if (err) {
     ERROR("dpdkstat semaphore init failed: %s",
           sstrerror(errno, errbuf, sizeof(errbuf)));
-    goto close;
+    goto fail;
   }
 
   g_configuration->xstats = NULL;
 
   return 0;
 
@@ -617,56 +617,54 @@
     }
 
     type_end = strrchr(counter_name, '_');
 
     if ((type_end != NULL) &&
         (strncmp(counter_name, "rx_", strlen("rx_")) == 0)) {
-      if (strncmp(type_end, "_errors", strlen("_errors")) == 0) {
+      if (strstr(type_end, "bytes") != NULL) {
+        sstrncpy(vl.type, "if_rx_octets", sizeof(vl.type));
+      } else if (strstr(type_end, "error") != NULL) {
         sstrncpy(vl.type, "if_rx_errors", sizeof(vl.type));
-      } else if (strncmp(type_end, "_dropped", strlen("_dropped")) == 0) {
+      } else if (strstr(type_end, "dropped") != NULL) {
         sstrncpy(vl.type, "if_rx_dropped", sizeof(vl.type));
-      } else if (strncmp(type_end, "_bytes", strlen("_bytes")) == 0) {
-        sstrncpy(vl.type, "if_rx_octets", sizeof(vl.type));
-      } else if (strncmp(type_end, "_packets", strlen("_packets")) == 0) {
+      } else if (strstr(type_end, "packets") != NULL) {
         sstrncpy(vl.type, "if_rx_packets", sizeof(vl.type));
-      } else if (strncmp(type_end, "_placement", strlen("_placement")) == 0) {
+      } else if (strstr(type_end, "_placement") != NULL) {
         sstrncpy(vl.type, "if_rx_errors", sizeof(vl.type));
-      } else if (strncmp(type_end, "_buff", strlen("_buff")) == 0) {
+      } else if (strstr(type_end, "_buff") != NULL) {
         sstrncpy(vl.type, "if_rx_errors", sizeof(vl.type));
       } else {
         /* Does not fit obvious type: use a more generic one */
         sstrncpy(vl.type, "derive", sizeof(vl.type));
       }
 
     } else if ((type_end != NULL) &&
                (strncmp(counter_name, "tx_", strlen("tx_"))) == 0) {
-      if (strncmp(type_end, "_errors", strlen("_errors")) == 0) {
+      if (strstr(type_end, "bytes") != NULL) {
+        sstrncpy(vl.type, "if_tx_octets", sizeof(vl.type));
+      } else if (strstr(type_end, "error") != NULL) {
         sstrncpy(vl.type, "if_tx_errors", sizeof(vl.type));
-      } else if (strncmp(type_end, "_dropped", strlen("_dropped")) == 0) {
+      } else if (strstr(type_end, "dropped") != NULL) {
         sstrncpy(vl.type, "if_tx_dropped", sizeof(vl.type));
-      } else if (strncmp(type_end, "_bytes", strlen("_bytes")) == 0) {
-        sstrncpy(vl.type, "if_tx_octets", sizeof(vl.type));
-      } else if (strncmp(type_end, "_packets", strlen("_packets")) == 0) {
+      } else if (strstr(type_end, "packets") != NULL) {
         sstrncpy(vl.type, "if_tx_packets", sizeof(vl.type));
       } else {
         /* Does not fit obvious type: use a more generic one */
         sstrncpy(vl.type, "derive", sizeof(vl.type));
       }
     } else if ((type_end != NULL) &&
                (strncmp(counter_name, "flow_", strlen("flow_"))) == 0) {
 
-      if (strncmp(type_end, "_filters", strlen("_filters")) == 0) {
+      if (strstr(type_end, "_filters") != NULL) {
         sstrncpy(vl.type, "operations", sizeof(vl.type));
-      } else if (strncmp(type_end, "_errors", strlen("_errors")) == 0) {
+      } else if (strstr(type_end, "error") != NULL)
         sstrncpy(vl.type, "errors", sizeof(vl.type));
-      } else if (strncmp(type_end, "_filters", strlen("_filters")) == 0) {
-        sstrncpy(vl.type, "filter_result", sizeof(vl.type));
-      }
+
     } else if ((type_end != NULL) &&
                (strncmp(counter_name, "mac_", strlen("mac_"))) == 0) {
-      if (strncmp(type_end, "_errors", strlen("_errors")) == 0) {
+      if (strstr(type_end, "error") != NULL) {
         sstrncpy(vl.type, "errors", sizeof(vl.type));
       }
     } else {
       /* Does not fit obvious type, or strrchr error:
        *   use a more generic type */
       sstrncpy(vl.type, "derive", sizeof(vl.type));
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/intel_rdt.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/intel_rdt.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/intel_rdt.c	2017-01-23 15:53:57.704448789 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/intel_rdt.c	2017-06-07 02:13:54.681164695 +0800
@@ -33,12 +33,17 @@
 #define RDT_PLUGIN "intel_rdt"
 
 #define RDT_MAX_SOCKETS 8
 #define RDT_MAX_SOCKET_CORES 64
 #define RDT_MAX_CORES (RDT_MAX_SOCKET_CORES * RDT_MAX_SOCKETS)
 
+typedef enum {
+  UNKNOWN = 0,
+  CONFIGURATION_ERROR,
+} rdt_config_status;
+
 struct rdt_core_group_s {
   char *desc;
   size_t num_cores;
   unsigned *cores;
   enum pqos_mon_event events;
 };
@@ -53,12 +58,14 @@
   const struct pqos_capability *cap_mon;
 };
 typedef struct rdt_ctx_s rdt_ctx_t;
 
 static rdt_ctx_t *g_rdt = NULL;
 
+static rdt_config_status g_state = UNKNOWN;
+
 static int isdup(const uint64_t *nums, size_t size, uint64_t val) {
   for (size_t i = 0; i < size; i++)
     if (nums[i] == val)
       return 1;
   return 0;
 }
@@ -517,31 +524,37 @@
   sfree(g_rdt);
 
   return (-1);
 }
 
 static int rdt_config(oconfig_item_t *ci) {
-  int ret = 0;
-
-  ret = rdt_preinit();
-  if (ret != 0)
-    return ret;
+  if (rdt_preinit() != 0) {
+    g_state = CONFIGURATION_ERROR;
+    /* if we return -1 at this point collectd
+      reports a failure in configuration and
+      aborts
+    */
+    return (0);
+  }
 
   for (int i = 0; i < ci->children_num; i++) {
     oconfig_item_t *child = ci->children + i;
 
     if (strcasecmp("Cores", child->key) == 0) {
-
-      ret = rdt_config_cgroups(child);
-      if (ret != 0)
-        return ret;
+      if (rdt_config_cgroups(child) != 0) {
+        g_state = CONFIGURATION_ERROR;
+        /* if we return -1 at this point collectd
+           reports a failure in configuration and
+           aborts
+         */
+	return (0);
+      }
 
 #if COLLECT_DEBUG
       rdt_dump_cgroups();
 #endif /* COLLECT_DEBUG */
-
     } else {
       ERROR(RDT_PLUGIN ": Unknown configuration parameter \"%s\".", child->key);
     }
   }
 
   return (0);
@@ -623,12 +636,15 @@
   return (0);
 }
 
 static int rdt_init(void) {
   int ret;
 
+  if(g_state == CONFIGURATION_ERROR)
+    return (-1);
+
   ret = rdt_preinit();
   if (ret != 0)
     return ret;
 
   /* Start monitoring */
   for (int i = 0; i < g_rdt->num_groups; i++) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/libcollectdclient/collectd/lcc_features.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/libcollectdclient/collectd/lcc_features.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/libcollectdclient/collectd/lcc_features.h	2017-01-23 15:54:53.022066744 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/libcollectdclient/collectd/lcc_features.h	2017-06-07 02:15:10.909150338 +0800
@@ -36,17 +36,17 @@
 #endif
 
 #define LCC_API_VERSION 0
 
 #define LCC_VERSION_MAJOR 5
 #define LCC_VERSION_MINOR 7
-#define LCC_VERSION_PATCH 1
+#define LCC_VERSION_PATCH 2
 
 #define LCC_VERSION_EXTRA ""
 
-#define LCC_VERSION_STRING "5.7.1"
+#define LCC_VERSION_STRING "5.7.2"
 
 #define LCC_VERSION_ENCODE(major, minor, patch) \
 	((major) * 10000 + (minor) * 100 + (patch))
 
 #define LCC_VERSION \
 	LCC_VERSION_ENCODE(LCC_VERSION_MAJOR, LCC_VERSION_MINOR, LCC_VERSION_PATCH)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/logfile.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/logfile.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/logfile.c	2017-01-23 15:53:57.708448911 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/logfile.c	2017-06-07 02:13:54.681164695 +0800
@@ -28,14 +28,12 @@
 
 #include "collectd.h"
 
 #include "common.h"
 #include "plugin.h"
 
-#define DEFAULT_LOGFILE LOCALSTATEDIR "/log/collectd.log"
-
 #if COLLECT_DEBUG
 static int log_level = LOG_DEBUG;
 #else
 static int log_level = LOG_INFO;
 #endif /* COLLECT_DEBUG */
 
@@ -114,27 +112,25 @@
     timestamp_str[sizeof(timestamp_str) - 1] = '\0';
   }
 
   pthread_mutex_lock(&file_lock);
 
   if (log_file == NULL) {
-    fh = fopen(DEFAULT_LOGFILE, "a");
-    do_close = 1;
+    fh = stderr;
   } else if (strcasecmp(log_file, "stderr") == 0)
     fh = stderr;
   else if (strcasecmp(log_file, "stdout") == 0)
     fh = stdout;
   else {
     fh = fopen(log_file, "a");
     do_close = 1;
   }
 
   if (fh == NULL) {
     char errbuf[1024];
-    fprintf(stderr, "logfile plugin: fopen (%s) failed: %s\n",
-            (log_file == NULL) ? DEFAULT_LOGFILE : log_file,
+    fprintf(stderr, "logfile plugin: fopen (%s) failed: %s\n", log_file,
             sstrerror(errno, errbuf, sizeof(errbuf)));
   } else {
     if (print_timestamp)
       fprintf(fh, "[%s] %s%s\n", timestamp_str, level_str, msg);
     else
       fprintf(fh, "%s%s\n", level_str, msg);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/log_logstash.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/log_logstash.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/log_logstash.c	2017-01-23 15:53:57.708448911 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/log_logstash.c	2017-06-07 02:13:54.681164695 +0800
@@ -38,14 +38,12 @@
 #include <yajl/yajl_version.h>
 #endif
 #if defined(YAJL_MAJOR) && (YAJL_MAJOR > 1)
 #define HAVE_YAJL_V2 1
 #endif
 
-#define DEFAULT_LOGFILE LOCALSTATEDIR "/log/" PACKAGE_NAME ".json.log"
-
 #if COLLECT_DEBUG
 static int log_level = LOG_DEBUG;
 #else
 static int log_level = LOG_INFO;
 #endif /* COLLECT_DEBUG */
 
@@ -146,14 +144,13 @@
 
   if (yajl_gen_get_buf(g, &buf, &len) != yajl_gen_status_ok)
     goto err;
   pthread_mutex_lock(&file_lock);
 
   if (log_file == NULL) {
-    fh = fopen(DEFAULT_LOGFILE, "a");
-    do_close = 1;
+    fh = stderr;
   } else if (strcasecmp(log_file, "stdout") == 0) {
     fh = stdout;
     do_close = 0;
   } else if (strcasecmp(log_file, "stderr") == 0) {
     fh = stderr;
     do_close = 0;
@@ -161,14 +158,13 @@
     fh = fopen(log_file, "a");
     do_close = 1;
   }
 
   if (fh == NULL) {
     char errbuf[1024];
-    fprintf(stderr, "log_logstash plugin: fopen (%s) failed: %s\n",
-            (log_file == NULL) ? DEFAULT_LOGFILE : log_file,
+    fprintf(stderr, "log_logstash plugin: fopen (%s) failed: %s\n", log_file,
             sstrerror(errno, errbuf, sizeof(errbuf)));
   } else {
     fprintf(fh, "%s\n", buf);
     if (do_close) {
       fclose(fh);
     } else {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/Makefile.am	2017-01-23 15:53:57.688448300 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/Makefile.am	2017-06-07 02:13:54.665164698 +0800
@@ -822,13 +822,13 @@
 endif
 
 if BUILD_PLUGIN_NOTIFY_EMAIL
 pkglib_LTLIBRARIES += notify_email.la
 notify_email_la_SOURCES = notify_email.c
 notify_email_la_LDFLAGS = $(PLUGIN_LDFLAGS)
-notify_email_la_LIBADD = -lesmtp -lssl -lcrypto
+notify_email_la_LIBADD = -lesmtp
 endif
 
 if BUILD_PLUGIN_NOTIFY_NAGIOS
 pkglib_LTLIBRARIES += notify_nagios.la
 notify_nagios_la_SOURCES = notify_nagios.c
 notify_nagios_la_LDFLAGS = $(PLUGIN_LDFLAGS)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/Makefile.in	2017-01-23 15:54:27.053324430 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/Makefile.in	2017-06-07 02:14:23.745159201 +0800
@@ -3102,13 +3102,13 @@
 @BUILD_PLUGIN_NOTIFY_DESKTOP_TRUE@notify_desktop_la_SOURCES = notify_desktop.c
 @BUILD_PLUGIN_NOTIFY_DESKTOP_TRUE@notify_desktop_la_CFLAGS = $(AM_CFLAGS) $(LIBNOTIFY_CFLAGS)
 @BUILD_PLUGIN_NOTIFY_DESKTOP_TRUE@notify_desktop_la_LDFLAGS = $(PLUGIN_LDFLAGS)
 @BUILD_PLUGIN_NOTIFY_DESKTOP_TRUE@notify_desktop_la_LIBADD = $(LIBNOTIFY_LIBS)
 @BUILD_PLUGIN_NOTIFY_EMAIL_TRUE@notify_email_la_SOURCES = notify_email.c
 @BUILD_PLUGIN_NOTIFY_EMAIL_TRUE@notify_email_la_LDFLAGS = $(PLUGIN_LDFLAGS)
-@BUILD_PLUGIN_NOTIFY_EMAIL_TRUE@notify_email_la_LIBADD = -lesmtp -lssl -lcrypto
+@BUILD_PLUGIN_NOTIFY_EMAIL_TRUE@notify_email_la_LIBADD = -lesmtp
 @BUILD_PLUGIN_NOTIFY_NAGIOS_TRUE@notify_nagios_la_SOURCES = notify_nagios.c
 @BUILD_PLUGIN_NOTIFY_NAGIOS_TRUE@notify_nagios_la_LDFLAGS = $(PLUGIN_LDFLAGS)
 @BUILD_PLUGIN_NTPD_TRUE@ntpd_la_SOURCES = ntpd.c
 @BUILD_PLUGIN_NTPD_TRUE@ntpd_la_LDFLAGS = $(PLUGIN_LDFLAGS)
 @BUILD_PLUGIN_NTPD_TRUE@ntpd_la_LIBADD = $(am__append_136)
 @BUILD_PLUGIN_NUMA_TRUE@numa_la_SOURCES = numa.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/mqtt.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/mqtt.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/mqtt.c	2017-01-23 15:53:57.712449033 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/mqtt.c	2017-06-07 02:13:54.685164694 +0800
@@ -445,12 +445,13 @@
                    ? sstrerror(errno, errbuf, sizeof(errbuf))
                    : mosquitto_strerror(status));
     /* Mark our connection "down" regardless of the error as a safety
      * measure; we will try to reconnect the next time we have to publish a
      * message */
     conf->connected = 0;
+    mosquitto_disconnect(conf->mosq);
 
     pthread_mutex_unlock(&conf->lock);
     return (-1);
   }
 
   pthread_mutex_unlock(&conf->lock);
@@ -458,24 +459,29 @@
 } /* int publish */
 
 static int format_topic(char *buf, size_t buf_len, data_set_t const *ds,
                         value_list_t const *vl, mqtt_client_conf_t *conf) {
   char name[MQTT_MAX_TOPIC_SIZE];
   int status;
+  char *c;
 
   if ((conf->topic_prefix == NULL) || (conf->topic_prefix[0] == 0))
     return (FORMAT_VL(buf, buf_len, vl));
 
   status = FORMAT_VL(name, sizeof(name), vl);
   if (status != 0)
     return (status);
 
   status = ssnprintf(buf, buf_len, "%s/%s", conf->topic_prefix, name);
   if ((status < 0) || (((size_t)status) >= buf_len))
     return (ENOMEM);
 
+  while((c = strchr(buf, '#')) || (c = strchr(buf, '+'))) {
+       *c = '_';
+  }
+
   return (0);
 } /* int format_topic */
 
 static int mqtt_write(const data_set_t *ds, const value_list_t *vl,
                       user_data_t *user_data) {
   mqtt_client_conf_t *conf;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/network.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/network.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/network.c	2017-01-23 15:53:57.716449156 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/network.c	2017-06-07 02:13:54.685164694 +0800
@@ -1000,20 +1000,12 @@
   unsigned char *hash_ptr;
 
   buffer = *ret_buffer;
   buffer_len = *ret_buffer_len;
   buffer_offset = 0;
 
-  if (se->data.server.userdb == NULL) {
-    c_complain(
-        LOG_NOTICE, &complain_no_users,
-        "network plugin: Received signed network packet but can't verify it "
-        "because no user DB has been configured. Will accept it.");
-    return (0);
-  }
-
   /* Check if the buffer has enough data for this structure. */
   if (buffer_len <= PART_SIGNATURE_SHA256_SIZE)
     return (-ENOMEM);
 
   /* Read type and length header */
   BUFFER_READ(&pss.head.type, sizeof(pss.head.type));
@@ -1024,12 +1016,24 @@
   if ((pss_head_length <= PART_SIGNATURE_SHA256_SIZE) ||
       (pss_head_length > buffer_len)) {
     ERROR("network plugin: HMAC-SHA-256 with invalid length received.");
     return (-1);
   }
 
+  if (se->data.server.userdb == NULL) {
+    c_complain(
+        LOG_NOTICE, &complain_no_users,
+        "network plugin: Received signed network packet but can't verify it "
+        "because no user DB has been configured. Will accept it.");
+
+    *ret_buffer = buffer + pss_head_length;
+    *ret_buffer_len -= pss_head_length;
+
+    return (0);
+  }
+
   /* Copy the hash. */
   BUFFER_READ(pss.hash, sizeof(pss.hash));
 
   /* Calculate username length (without null byte) and allocate memory */
   username_len = pss_head_length - PART_SIGNATURE_SHA256_SIZE;
   pss.username = malloc(username_len + 1);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/perl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/perl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/perl.c	2017-01-23 15:53:57.720449278 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/perl.c	2017-06-07 02:13:54.689164694 +0800
@@ -493,66 +493,74 @@
  *   type     => $type,
  *   plugin_instance => $instance,
  *   type_instance   => $type_instance,
  *   meta     => [ { name => <name>, value => <value> }, ... ]
  * }
  */
-static int av2notification_meta(pTHX_ AV *array, notification_meta_t **meta) {
-  notification_meta_t **m = meta;
+static int av2notification_meta(pTHX_ AV *array, notification_meta_t **ret_meta) {
+  notification_meta_t *tail = NULL;
 
   int len = av_len(array);
 
   for (int i = 0; i <= len; ++i) {
     SV **tmp = av_fetch(array, i, 0);
-    HV *hash;
 
-    if (NULL == tmp)
+    if (tmp == NULL)
       return -1;
 
     if (!(SvROK(*tmp) && (SVt_PVHV == SvTYPE(SvRV(*tmp))))) {
       log_warn("av2notification_meta: Skipping invalid "
                "meta information.");
       continue;
     }
 
-    hash = (HV *)SvRV(*tmp);
+    HV *hash = (HV *)SvRV(*tmp);
 
-    *m = smalloc(sizeof(**m));
+    notification_meta_t *m = calloc(1, sizeof(*m));
+    if (m == NULL)
+      return ENOMEM;
 
-    if (NULL == (tmp = hv_fetch(hash, "name", 4, 0))) {
+    SV **name = hv_fetch(hash, "name", strlen("name"), 0);
+    if (name == NULL) {
       log_warn("av2notification_meta: Skipping invalid "
                "meta information.");
-      free(*m);
+      sfree(m);
       continue;
     }
-    sstrncpy((*m)->name, SvPV_nolen(*tmp), sizeof((*m)->name));
+    sstrncpy(m->name, SvPV_nolen(*name), sizeof(m->name));
 
-    if (NULL == (tmp = hv_fetch(hash, "value", 5, 0))) {
+    SV **value = hv_fetch(hash, "value", strlen("value"), 0);
+    if (value == NULL) {
       log_warn("av2notification_meta: Skipping invalid "
                "meta information.");
-      free(*m);
+      sfree(m);
       continue;
     }
 
-    if (SvNOK(*tmp)) {
-      (*m)->nm_value.nm_double = SvNVX(*tmp);
-      (*m)->type = NM_TYPE_DOUBLE;
-    } else if (SvUOK(*tmp)) {
-      (*m)->nm_value.nm_unsigned_int = SvUVX(*tmp);
-      (*m)->type = NM_TYPE_UNSIGNED_INT;
-    } else if (SvIOK(*tmp)) {
-      (*m)->nm_value.nm_signed_int = SvIVX(*tmp);
-      (*m)->type = NM_TYPE_SIGNED_INT;
+    if (SvNOK(*value)) {
+      m->nm_value.nm_double = SvNVX(*value);
+      m->type = NM_TYPE_DOUBLE;
+    } else if (SvUOK(*value)) {
+      m->nm_value.nm_unsigned_int = SvUVX(*value);
+      m->type = NM_TYPE_UNSIGNED_INT;
+    } else if (SvIOK(*value)) {
+      m->nm_value.nm_signed_int = SvIVX(*value);
+      m->type = NM_TYPE_SIGNED_INT;
     } else {
-      (*m)->nm_value.nm_string = sstrdup(SvPV_nolen(*tmp));
-      (*m)->type = NM_TYPE_STRING;
+      m->nm_value.nm_string = sstrdup(SvPV_nolen(*value));
+      m->type = NM_TYPE_STRING;
     }
 
-    (*m)->next = NULL;
-    m = &((*m)->next);
+    m->next = NULL;
+    if (tail == NULL)
+      *ret_meta = m;
+    else
+      tail->next = m;
+    tail = m;
   }
+
   return 0;
 } /* static int av2notification_meta (AV *, notification_meta_t *) */
 
 static int hv2notification(pTHX_ HV *hash, notification_t *n) {
   SV **tmp = NULL;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/processes.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/processes.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/processes.c	2017-01-23 15:53:57.720449278 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/processes.c	2017-06-07 02:13:54.693164693 +0800
@@ -2124,13 +2124,12 @@
       }
 
       /* tv_usec is nanosec ??? */
       pse.cpu_user_counter = procentry[i].pi_ru.ru_utime.tv_sec * 1000000 +
                              procentry[i].pi_ru.ru_utime.tv_usec / 1000;
 
-      pse.cpu_system = 0;
       /* tv_usec is nanosec ??? */
       pse.cpu_system_counter = procentry[i].pi_ru.ru_stime.tv_sec * 1000000 +
                                procentry[i].pi_ru.ru_stime.tv_usec / 1000;
 
       pse.vmem_minflt_counter = procentry[i].pi_minflt;
       pse.vmem_majflt_counter = procentry[i].pi_majflt;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/smart.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/smart.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/smart.c	2017-01-23 15:53:57.720449278 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/smart.c	2017-06-07 02:13:54.693164693 +0800
@@ -30,12 +30,16 @@
 #include "plugin.h"
 #include "utils_ignorelist.h"
 
 #include <atasmart.h>
 #include <libudev.h>
 
+#ifdef HAVE_SYS_CAPABILITY_H
+#include <sys/capability.h>
+#endif
+
 static const char *config_keys[] = {"Disk", "IgnoreSelected", "IgnoreSleepMode",
                                     "UseSerial"};
 
 static int config_keys_num = STATIC_ARRAY_SIZE(config_keys);
 
 static ignorelist_t *ignorelist = NULL;
@@ -235,10 +239,28 @@
   udev_enumerate_unref(enumerate);
   udev_unref(handle_udev);
 
   return (0);
 } /* int smart_read */
 
+static int smart_init(void) {
+#if defined(HAVE_SYS_CAPABILITY_H) && defined(CAP_SYS_RAWIO)
+  if (check_capability(CAP_SYS_RAWIO) != 0) {
+    if (getuid() == 0)
+      WARNING("smart plugin: Running collectd as root, but the "
+              "CAP_SYS_RAWIO capability is missing. The plugin's read "
+              "function will probably fail. Is your init system dropping "
+              "capabilities?");
+    else
+      WARNING("smart plugin: collectd doesn't have the CAP_SYS_RAWIO "
+              "capability. If you don't want to run collectd as root, try "
+              "running \"setcap cap_sys_rawio=ep\" on the collectd binary.");
+  }
+#endif
+  return (0);
+} /* int smart_init */
+
 void module_register(void) {
   plugin_register_config("smart", smart_config, config_keys, config_keys_num);
+  plugin_register_init("smart", smart_init);
   plugin_register_read("smart", smart_read);
 } /* void module_register */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/types.db.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/types.db.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/types.db.5	2017-01-23 15:54:59.234240147 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/types.db.5	2017-06-07 02:15:17.069149184 +0800
@@ -130,13 +130,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "TYPES.DB 5"
-.TH TYPES.DB 5 "2017-01-23" "5.7.1" "collectd"
+.TH TYPES.DB 5 "2017-06-06" "5.7.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 types.db \- Data\-set specifications for the system statistics collection daemon
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/utils_cmd_putval.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/utils_cmd_putval.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/utils_cmd_putval.c	2017-01-23 15:53:57.724449400 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/utils_cmd_putval.c	2017-06-07 02:13:54.701164691 +0800
@@ -135,20 +135,12 @@
   hostname = NULL;
   plugin = NULL;
   plugin_instance = NULL;
   type = NULL;
   type_instance = NULL;
 
-  vl.values_len = ds->ds_num;
-  vl.values = malloc(vl.values_len * sizeof(*vl.values));
-  if (vl.values == NULL) {
-    cmd_error(CMD_ERROR, err, "malloc failed.");
-    sfree(identifier_copy);
-    return (CMD_ERROR);
-  }
-
   ret_putval->raw_identifier = identifier_copy;
   if (ret_putval->raw_identifier == NULL) {
     cmd_error(CMD_ERROR, err, "malloc failed.");
     cmd_destroy_putval(ret_putval);
     sfree(vl.values);
     return (CMD_ERROR);
@@ -174,52 +166,64 @@
       result = status;
       break;
     }
     /* else: cmd_parse_option did not find an option; treat this as a
      * value list. */
 
+    vl.values_len = ds->ds_num;
+    vl.values = calloc(vl.values_len, sizeof(*vl.values));
+    if (vl.values == NULL) {
+      cmd_error(CMD_ERROR, err, "malloc failed.");
+      result = CMD_ERROR;
+      break;
+    }
+
     status = parse_values(argv[i], &vl, ds);
     if (status != 0) {
       cmd_error(CMD_PARSE_ERROR, err, "Parsing the values string failed.");
       result = CMD_PARSE_ERROR;
+      vl.values_len = 0;
+      sfree(vl.values);
       break;
     }
 
-    tmp = (value_list_t *)realloc(ret_putval->vl, (ret_putval->vl_num + 1) *
-                                                      sizeof(*ret_putval->vl));
+    tmp = realloc(ret_putval->vl,
+                  (ret_putval->vl_num + 1) * sizeof(*ret_putval->vl));
     if (tmp == NULL) {
       cmd_error(CMD_ERROR, err, "realloc failed.");
       cmd_destroy_putval(ret_putval);
       result = CMD_ERROR;
+      vl.values_len = 0;
+      sfree(vl.values);
       break;
     }
 
     ret_putval->vl = tmp;
     ret_putval->vl_num++;
     memcpy(&ret_putval->vl[ret_putval->vl_num - 1], &vl, sizeof(vl));
+
+    /* pointer is now owned by ret_putval->vl[] */
+    vl.values_len = 0;
+    vl.values = NULL;
   } /* while (*buffer != 0) */
   /* Done parsing the options. */
 
-  if (result != CMD_OK) {
-    if (ret_putval->vl_num == 0)
-      sfree(vl.values);
+  if (result != CMD_OK)
     cmd_destroy_putval(ret_putval);
-  }
 
   return (result);
 } /* cmd_status_t cmd_parse_putval */
 
 void cmd_destroy_putval(cmd_putval_t *putval) {
   if (putval == NULL)
     return;
 
   sfree(putval->raw_identifier);
 
   for (size_t i = 0; i < putval->vl_num; ++i) {
-    if (i == 0) /* values is shared between all entries */
-      sfree(putval->vl[i].values);
+    sfree(putval->vl[i].values);
     meta_data_destroy(putval->vl[i].meta);
     putval->vl[i].meta = NULL;
   }
   sfree(putval->vl);
   putval->vl = NULL;
   putval->vl_num = 0;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/utils_format_graphite.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/utils_format_graphite.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/utils_format_graphite.c	2017-01-23 15:53:57.728449523 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/utils_format_graphite.c	2017-06-07 02:13:54.701164691 +0800
@@ -177,14 +177,19 @@
                     char const *postfix, char const escape_char,
                     unsigned int flags) {
   int status = 0;
   int buffer_pos = 0;
 
   gauge_t *rates = NULL;
-  if (flags & GRAPHITE_STORE_RATES)
+  if (flags & GRAPHITE_STORE_RATES) {
     rates = uc_get_rate(ds, vl);
+    if (rates == NULL) {
+      ERROR("format_graphite: error with uc_get_rate");
+      return -1;
+    }
+  }
 
   for (size_t i = 0; i < ds->ds_num; i++) {
     char const *ds_name = NULL;
     char key[10 * DATA_MAX_NAME_LEN];
     char values[512];
     size_t message_len;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/utils_match.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/utils_match.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/utils_match.c	2017-01-23 15:53:57.728449523 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/utils_match.c	2017-06-07 02:13:54.705164691 +0800
@@ -31,12 +31,13 @@
 
 #include "utils_match.h"
 
 #include <regex.h>
 
 #define UTILS_MATCH_FLAGS_EXCLUDE_REGEX 0x02
+#define UTILS_MATCH_FLAGS_REGEX 0x04
 
 struct cu_match_s {
   regex_t regex;
   regex_t excluderegex;
   int flags;
 
@@ -231,12 +232,13 @@
   status = regcomp(&obj->regex, regex, REG_EXTENDED | REG_NEWLINE);
   if (status != 0) {
     ERROR("Compiling the regular expression \"%s\" failed.", regex);
     sfree(obj);
     return (NULL);
   }
+  obj->flags |= UTILS_MATCH_FLAGS_REGEX;
 
   if (excluderegex && strcmp(excluderegex, "") != 0) {
     status = regcomp(&obj->excluderegex, excluderegex, REG_EXTENDED);
     if (status != 0) {
       ERROR("Compiling the excluding regular expression \"%s\" failed.",
             excluderegex);
@@ -298,12 +300,16 @@
 } /* }}} void match_value_reset */
 
 void match_destroy(cu_match_t *obj) {
   if (obj == NULL)
     return;
 
+  if (obj->flags & UTILS_MATCH_FLAGS_REGEX)
+    regfree(&obj->regex);
+  if (obj->flags & UTILS_MATCH_FLAGS_EXCLUDE_REGEX)
+    regfree(&obj->excluderegex);
   if ((obj->user_data != NULL) && (obj->free != NULL))
     (*obj->free)(obj->user_data);
 
   sfree(obj);
 } /* void match_destroy */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/write_prometheus.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/write_prometheus.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/src/write_prometheus.c	2017-01-23 15:53:57.732449645 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/src/write_prometheus.c	2017-06-07 02:13:54.709164691 +0800
@@ -543,15 +543,20 @@
   metric_destroy(fam->metric[i]);
   if ((fam->n_metric - 1) > i)
     memmove(&fam->metric[i], &fam->metric[i + 1],
             ((fam->n_metric - 1) - i) * sizeof(fam->metric[i]));
   fam->n_metric--;
 
+  if (fam->n_metric == 0) {
+    sfree(fam->metric);
+    return 0;
+  }
+
   Io__Prometheus__Client__Metric **tmp =
       realloc(fam->metric, fam->n_metric * sizeof(*fam->metric));
-  if ((tmp != NULL) || (fam->n_metric == 0))
+  if (tmp != NULL)
     fam->metric = tmp;
 
   return 0;
 }
 
 /* metric_family_get_metric looks up the matching metric in a metric family,
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/version-gen.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/version-gen.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.1/version-gen.sh	2017-01-23 15:53:57.732449645 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-5.7.2/version-gen.sh	2017-06-07 02:13:54.709164691 +0800
@@ -1,9 +1,9 @@
 #!/bin/sh
 
-DEFAULT_VERSION="5.7.1.git"
+DEFAULT_VERSION="5.7.2.git"
 
 if [ -d .git ]; then
 	VERSION="`git describe --dirty=+ --abbrev=7 2> /dev/null | grep collectd | sed -e 's/^collectd-//' -e 's/-/./g'`"
 fi
 
 if test -z "$VERSION"; then

diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/ChangeLog /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/ChangeLog
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/ChangeLog	2007-11-08 22:00:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/ChangeLog	2007-12-27 17:33:06.000000000 +0800
@@ -1,6 +1,12 @@
+2007-12-27, Version 4.1.5
+	* rrdtool plugin: Fix a memory leak that only occured in very-low-
+	  memory situations.
+	* sensors plugin: Updated the plugin to build and work with version 3
+	  of the libsensors library.
+
 2007-11-08, Version 4.1.4
 	* Build system: Improve detection of the rrd library, especially if
 	  it's in a non-standard location.
 	* Build system: A bug when parsing the argument for
 	  `--with-libnetsnmp' has been fixed.
 	* collectd: Implement `strerror_r' if the libc doesn't provide it.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/configure	2007-11-09 00:42:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/configure	2007-12-27 17:43:15.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.61 for collectd 4.1.4.
+# Generated by GNU Autoconf 2.61 for collectd 4.1.5.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
 # This configure script is free software; the Free Software Foundation
 # gives unlimited permission to copy, distribute and modify it.
 ## --------------------- ##
@@ -723,14 +723,14 @@
 MAKEFLAGS=
 SHELL=${CONFIG_SHELL-/bin/sh}
 
 # Identity of this package.
 PACKAGE_NAME='collectd'
 PACKAGE_TARNAME='collectd'
-PACKAGE_VERSION='4.1.4'
-PACKAGE_STRING='collectd 4.1.4'
+PACKAGE_VERSION='4.1.5'
+PACKAGE_STRING='collectd 4.1.5'
 PACKAGE_BUGREPORT=''
 
 ac_unique_file="src/collectd.c"
 ac_default_prefix="/opt/collectd"
 # Factoring default headers for most tests.
 ac_includes_default="\
@@ -1552,13 +1552,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures collectd 4.1.4 to adapt to many kinds of systems.
+\`configure' configures collectd 4.1.5 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -1622,13 +1622,13 @@
   --host=HOST       cross-compile to build programs to run on HOST [BUILD]
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of collectd 4.1.4:";;
+     short | recursive ) echo "Configuration of collectd 4.1.5:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
@@ -1806,13 +1806,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-collectd configure 4.1.4
+collectd configure 4.1.5
 generated by GNU Autoconf 2.61
 
 Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
@@ -1820,13 +1820,13 @@
   exit
 fi
 cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by collectd $as_me 4.1.4, which was
+It was created by collectd $as_me 4.1.5, which was
 generated by GNU Autoconf 2.61.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 exec 5>>config.log
@@ -2493,13 +2493,13 @@
   fi
 fi
 
 
 # Define the identity of the package.
  PACKAGE='collectd'
- VERSION='4.1.4'
+ VERSION='4.1.5'
 
 
 cat >>confdefs.h <<_ACEOF
 #define PACKAGE "$PACKAGE"
 _ACEOF
 
@@ -37590,13 +37590,13 @@
 exec 6>&1
 
 # Save the log message, to keep $[0] and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by collectd $as_me 4.1.4, which was
+This file was extended by collectd $as_me 4.1.5, which was
 generated by GNU Autoconf 2.61.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -37643,13 +37643,13 @@
 
 Report bugs to <bug-autoconf@gnu.org>."
 
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF
 ac_cs_version="\\
-collectd config.status 4.1.4
+collectd config.status 4.1.5
 configured by $0, generated by GNU Autoconf 2.61,
   with options \\"`echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
 Copyright (C) 2006 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/contrib/collectd2html.pl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/contrib/collectd2html.pl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/contrib/collectd2html.pl	2007-10-25 01:21:23.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/contrib/collectd2html.pl	2007-12-26 00:56:07.000000000 +0800
@@ -13,12 +13,15 @@
 #   When run on <host>, it generated <host>.html and <host>.dir, the latter
 #   containing all necessary images.
 #
 #
 # Copyright 2006 Vincent Stehlé <vincent.stehle@free.fr>
 #
+# Patch to configure the data directory and hostname by Eddy Petrisor
+# <eddy.petrisor@gmail.com>.
+#
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful,
@@ -36,23 +39,23 @@
 use strict;
 use Fatal qw(open close);
 use File::Basename;
 use Getopt::Long qw(:config no_ignore_case bundling pass_through);
 
 my $DIR  = "/var/lib/collectd";
-my $HOST = "_UNDEFINED_";
+my $HOST = undef;
 
 GetOptions (
-    "host-is=s"  => \$HOST,
+    "host=s"     => \$HOST,
     "data-dir=s" => \$DIR
 );
 
 my @COLORS = (0xff7777, 0x7777ff, 0x55ff55, 0xffcc77, 0xff77ff, 0x77ffff,
 	0xffff77, 0x55aaff);
 my @tmp = `/bin/hostname`; chomp(@tmp);
-$HOST = $tmp[0] if ( $HOST =~ /_UNDEFINED_/ );
+$HOST = $tmp[0] if (! defined $HOST);
 my $IMG_DIR = "${HOST}.dir";
 my $HTML = "${HOST}.html";
 
 ################################################################################
 #
 # fade_component
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd.1	2007-11-09 01:31:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd.1	2007-12-27 17:47:06.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD 1"
-.TH COLLECTD 1 "2007-10-24" "4.1.4" "collectd"
+.TH COLLECTD 1 "2007-10-24" "4.1.5" "collectd"
 .SH "NAME"
 collectd \- System statistics collection daemon
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 collectd \fI[options]\fR
 .SH "DESCRIPTION"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd.conf.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd.conf.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd.conf.5	2007-11-09 01:31:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd.conf.5	2007-12-27 17:47:07.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD.CONF 5"
-.TH COLLECTD.CONF 5 "2007-11-08" "4.1.4" "collectd"
+.TH COLLECTD.CONF 5 "2007-12-25" "4.1.5" "collectd"
 .SH "NAME"
 collectd.conf \- Configuration for the system statistics collection daemon \fBcollectd\fR
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 .Vb 3
 \&  BaseDir "/path/to/data/"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd-email.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd-email.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd-email.5	2007-11-09 01:31:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd-email.5	2007-12-27 17:47:07.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-EMAIL 5"
-.TH COLLECTD-EMAIL 5 "2007-10-24" "4.1.4" "collectd"
+.TH COLLECTD-EMAIL 5 "2007-10-24" "4.1.5" "collectd"
 .SH "NAME"
 collectd\-email \- Documentation of collectd's \f(CW\*(C`email plugin\*(C'\fR
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 .Vb 8
 \&  # See collectd.conf(5)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd-exec.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd-exec.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd-exec.5	2007-11-09 01:31:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd-exec.5	2007-12-27 17:47:07.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-EXEC 5"
-.TH COLLECTD-EXEC 5 "2007-11-08" "4.1.4" "collectd"
+.TH COLLECTD-EXEC 5 "2007-12-25" "4.1.5" "collectd"
 .SH "NAME"
 collectd\-exec \- Documentation of collectd's \f(CW\*(C`exec plugin\*(C'\fR
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 .Vb 7
 \&  # See collectd.conf(5)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd-nagios.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd-nagios.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd-nagios.1	2007-11-09 01:31:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd-nagios.1	2007-12-27 17:47:06.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-NAGIOS 1"
-.TH COLLECTD-NAGIOS 1 "2007-10-27" "4.1.4" "collectd"
+.TH COLLECTD-NAGIOS 1 "2007-10-27" "4.1.5" "collectd"
 .SH "NAME"
 collectd\-nagios \- Nagios plugin for querying collectd
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 collectd-nagios \fB\-s\fR \fIsocket\fR \fB\-n\fR \fIvalue_spec\fR \fB\-H\fR \fIhostname\fR \fI[options]\fR
 .SH "DESCRIPTION"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd-perl.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd-perl.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd-perl.5	2007-11-09 01:31:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd-perl.5	2007-12-27 17:47:07.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-PERL 5"
-.TH COLLECTD-PERL 5 "2007-11-08" "4.1.4" "collectd"
+.TH COLLECTD-PERL 5 "2007-12-25" "4.1.5" "collectd"
 .SH "NAME"
 collectd\-perl \- Documentation of collectd's \f(CW\*(C`perl plugin\*(C'\fR
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 .Vb 8
 \&  # See collectd.conf(5)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd-snmp.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd-snmp.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd-snmp.5	2007-11-09 01:31:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd-snmp.5	2007-12-27 17:47:08.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-SNMP 5"
-.TH COLLECTD-SNMP 5 "2007-11-08" "4.1.4" "collectd"
+.TH COLLECTD-SNMP 5 "2007-12-25" "4.1.5" "collectd"
 .SH "NAME"
 collectd\-snmp \- Documentation of collectd's \f(CW\*(C`snmp plugin\*(C'\fR
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 .Vb 21
 \&  LoadPlugin snmp
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd-unixsock.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd-unixsock.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/collectd-unixsock.5	2007-11-09 01:31:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/collectd-unixsock.5	2007-12-27 17:47:08.000000000 +0800
@@ -126,13 +126,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-UNIXSOCK 5"
-.TH COLLECTD-UNIXSOCK 5 "2007-11-08" "4.1.4" "collectd"
+.TH COLLECTD-UNIXSOCK 5 "2007-12-25" "4.1.5" "collectd"
 .SH "NAME"
 collectd\-unixsock \- Documentation of collectd's \f(CW\*(C`unixsock plugin\*(C'\fR
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 .Vb 8
 \&  # See collectd.conf(5)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/network.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/network.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/network.c	2007-10-25 01:21:24.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/network.c	2007-12-26 00:56:08.000000000 +0800
@@ -163,13 +163,13 @@
 static char        *send_buffer_ptr;
 static int          send_buffer_fill;
 static value_list_t send_buffer_vl = VALUE_LIST_STATIC;
 static char         send_buffer_type[DATA_MAX_NAME_LEN];
 static pthread_mutex_t send_buffer_lock = PTHREAD_MUTEX_INITIALIZER;
 
-static avl_tree_t      *cache_tree = NULL;
+static c_avl_tree_t      *cache_tree = NULL;
 static pthread_mutex_t  cache_lock = PTHREAD_MUTEX_INITIALIZER;
 static time_t           cache_flush_last;
 static int              cache_flush_interval = 1800;
 
 /*
  * Private functions
@@ -181,43 +181,43 @@
 
 	char **tmp;
 	int    i;
 
 	char   *key;
 	time_t *value;
-	avl_iterator_t *iter;
+	c_avl_iterator_t *iter;
 
 	time_t curtime = time (NULL);
 
-	iter = avl_get_iterator (cache_tree);
-	while (avl_iterator_next (iter, (void *) &key, (void *) &value) == 0)
+	iter = c_avl_get_iterator (cache_tree);
+	while (c_avl_iterator_next (iter, (void *) &key, (void *) &value) == 0)
 	{
 		if ((curtime - *value) <= cache_flush_interval)
 			continue;
 		tmp = (char **) realloc (keys,
 				(keys_num + 1) * sizeof (char *));
 		if (tmp == NULL)
 		{
 			sfree (keys);
-			avl_iterator_destroy (iter);
+			c_avl_iterator_destroy (iter);
 			ERROR ("network plugin: cache_flush: realloc"
 					" failed.");
 			return (-1);
 		}
 		keys = tmp;
 		keys[keys_num] = key;
 		keys_num++;
-	} /* while (avl_iterator_next) */
-	avl_iterator_destroy (iter);
+	} /* while (c_avl_iterator_next) */
+	c_avl_iterator_destroy (iter);
 
 	for (i = 0; i < keys_num; i++)
 	{
-		if (avl_remove (cache_tree, keys[i], (void *) &key,
+		if (c_avl_remove (cache_tree, keys[i], (void *) &key,
 					(void *) &value) != 0)
 		{
-			WARNING ("network plugin: cache_flush: avl_remove"
+			WARNING ("network plugin: cache_flush: c_avl_remove"
 					" (%s) failed.", keys[i]);
 			continue;
 		}
 
 		sfree (key);
 		sfree (value);
@@ -243,13 +243,13 @@
 	if (format_name (key, sizeof (key), vl->host, vl->plugin,
 				vl->plugin_instance, type, vl->type_instance))
 		return (-1);
 
 	pthread_mutex_lock (&cache_lock);
 
-	if (avl_get (cache_tree, key, (void *) &value) == 0)
+	if (c_avl_get (cache_tree, key, (void *) &value) == 0)
 	{
 		if (*value < vl->time)
 		{
 			*value = vl->time;
 			retval = 0;
 		}
@@ -264,13 +264,13 @@
 	{
 		char *key_copy = strdup (key);
 		value = malloc (sizeof (time_t));
 		if ((key_copy != NULL) && (value != NULL))
 		{
 			*value = vl->time;
-			avl_insert (cache_tree, key_copy, value);
+			c_avl_insert (cache_tree, key_copy, value);
 			retval = 0;
 		}
 		else
 		{
 			sfree (key_copy);
 			sfree (value);
@@ -1296,18 +1296,18 @@
 
 	if (cache_tree != NULL)
 	{
 		void *key;
 		void *value;
 
-		while (avl_pick (cache_tree, &key, &value) == 0)
+		while (c_avl_pick (cache_tree, &key, &value) == 0)
 		{
 			sfree (key);
 			sfree (value);
 		}
-		avl_destroy (cache_tree);
+		c_avl_destroy (cache_tree);
 		cache_tree = NULL;
 	}
 
 	/* TODO: Close `sending_sockets' */
 
 	plugin_unregister_config ("network");
@@ -1324,13 +1324,13 @@
 
 	send_buffer_ptr  = send_buffer;
 	send_buffer_fill = 0;
 	memset (&send_buffer_vl, '\0', sizeof (send_buffer_vl));
 	memset (send_buffer_type, '\0', sizeof (send_buffer_type));
 
-	cache_tree = avl_create ((int (*) (const void *, const void *)) strcmp);
+	cache_tree = c_avl_create ((int (*) (const void *, const void *)) strcmp);
 	cache_flush_last = time (NULL);
 
 	/* setup socket(s) and so on */
 	if (sending_sockets != NULL)
 		plugin_register_write ("network", network_write);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/rrdtool.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/rrdtool.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/rrdtool.c	2007-11-08 22:00:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/rrdtool.c	2007-12-26 00:56:08.000000000 +0800
@@ -102,13 +102,13 @@
 
 /* XXX: If you need to lock both, cache_lock and queue_lock, at the same time,
  * ALWAYS lock `cache_lock' first! */
 static int         cache_timeout = 0;
 static int         cache_flush_timeout = 0;
 static time_t      cache_flush_last;
-static avl_tree_t *cache = NULL;
+static c_avl_tree_t *cache = NULL;
 static pthread_mutex_t cache_lock = PTHREAD_MUTEX_INITIALIZER;
 
 static rrd_queue_t    *queue_head = NULL;
 static rrd_queue_t    *queue_tail = NULL;
 static pthread_t       queue_thread = 0;
 static pthread_mutex_t queue_lock = PTHREAD_MUTEX_INITIALIZER;
@@ -638,13 +638,13 @@
 		pthread_mutex_unlock (&queue_lock);
 
 		/* We now need the cache lock so the entry isn't updated while
 		 * we make a copy of it's values */
 		pthread_mutex_lock (&cache_lock);
 
-		avl_get (cache, queue_entry->filename, (void *) &cache_entry);
+		c_avl_get (cache, queue_entry->filename, (void *) &cache_entry);
 
 		values = cache_entry->values;
 		values_num = cache_entry->values_num;
 
 		cache_entry->values = NULL;
 		cache_entry->values_num = 0;
@@ -662,13 +662,13 @@
 		sfree (values);
 		sfree (queue_entry->filename);
 		sfree (queue_entry);
 	} /* while (42) */
 
 	pthread_mutex_lock (&cache_lock);
-	avl_destroy (cache);
+	c_avl_destroy (cache);
 	cache = NULL;
 	pthread_mutex_unlock (&cache_lock);
 
 	pthread_exit ((void *) 0);
 	return ((void *) 0);
 } /* void *rrd_queue_thread */
@@ -710,69 +710,71 @@
 	time_t       now;
 
 	char **keys = NULL;
 	int    keys_num = 0;
 
 	char *key;
-	avl_iterator_t *iter;
+	c_avl_iterator_t *iter;
 	int i;
 
 	DEBUG ("rrdtool plugin: Flushing cache, timeout = %i", timeout);
 
 	now = time (NULL);
 
 	/* Build a list of entries to be flushed */
-	iter = avl_get_iterator (cache);
-	while (avl_iterator_next (iter, (void *) &key, (void *) &rc) == 0)
+	iter = c_avl_get_iterator (cache);
+	while (c_avl_iterator_next (iter, (void *) &key, (void *) &rc) == 0)
 	{
 		if (rc->flags == FLAG_QUEUED)
 			continue;
 		else if ((now - rc->first_value) < timeout)
 			continue;
 		else if (rc->values_num > 0)
 		{
 			if (rrd_queue_cache_entry (key) == 0)
 				rc->flags = FLAG_QUEUED;
 		}
 		else /* ancient and no values -> waste of memory */
 		{
-			keys = (char **) realloc ((void *) keys,
+			char **tmp = (char **) realloc ((void *) keys,
 					(keys_num + 1) * sizeof (char *));
-			if (keys == NULL)
+			if (tmp == NULL)
 			{
 				char errbuf[1024];
 				ERROR ("rrdtool plugin: "
 						"realloc failed: %s",
 						sstrerror (errno, errbuf,
 							sizeof (errbuf)));
-				avl_iterator_destroy (iter);
+				c_avl_iterator_destroy (iter);
+				sfree (keys);
 				return;
 			}
+			keys = tmp;
 			keys[keys_num] = key;
 			keys_num++;
 		}
-	} /* while (avl_iterator_next) */
-	avl_iterator_destroy (iter);
+	} /* while (c_avl_iterator_next) */
+	c_avl_iterator_destroy (iter);
 	
 	for (i = 0; i < keys_num; i++)
 	{
-		if (avl_remove (cache, keys[i], (void *) &key, (void *) &rc) != 0)
+		if (c_avl_remove (cache, keys[i], (void *) &key, (void *) &rc) != 0)
 		{
-			DEBUG ("rrdtool plugin: avl_remove (%s) failed.", keys[i]);
+			DEBUG ("rrdtool plugin: c_avl_remove (%s) failed.", keys[i]);
 			continue;
 		}
 
 		assert (rc->values == NULL);
 		assert (rc->values_num == 0);
 
 		sfree (rc);
 		sfree (key);
 		keys[i] = NULL;
 	} /* for (i = 0..keys_num) */
 
-	free (keys);
+	sfree (keys);
 
 	cache_flush_last = now;
 } /* void rrd_cache_flush */
 
 static int rrd_cache_insert (const char *filename,
 		const char *value, time_t value_time)
@@ -780,13 +782,13 @@
 	rrd_cache_t *rc = NULL;
 	int new_rc = 0;
 	char **values_new;
 
 	pthread_mutex_lock (&cache_lock);
 
-	avl_get (cache, filename, (void *) &rc);
+	c_avl_get (cache, filename, (void *) &rc);
 
 	if (rc == NULL)
 	{
 		rc = (rrd_cache_t *) malloc (sizeof (rrd_cache_t));
 		if (rc == NULL)
 			return (-1);
@@ -813,13 +815,13 @@
 	{
 		char errbuf[1024];
 		void *cache_key = NULL;
 
 		sstrerror (errno, errbuf, sizeof (errbuf));
 
-		avl_remove (cache, filename, &cache_key, NULL);
+		c_avl_remove (cache, filename, &cache_key, NULL);
 		pthread_mutex_unlock (&cache_lock);
 
 		ERROR ("rrdtool plugin: realloc failed: %s", errbuf);
 
 		sfree (cache_key);
 		sfree (rc->values);
@@ -853,13 +855,13 @@
 			sfree (rc->values[0]);
 			sfree (rc->values);
 			sfree (rc);
 			return (-1);
 		}
 
-		avl_insert (cache, cache_key, rc);
+		c_avl_insert (cache, cache_key, rc);
 	}
 
 	DEBUG ("rrdtool plugin: rrd_cache_insert: file = %s; "
 			"values_num = %i; age = %u;",
 			filename, rc->values_num,
 			rc->last_value - rc->first_value);
@@ -1092,16 +1094,16 @@
 				"smaller than your `interval'. This will "
 				"create needlessly big RRD-files.");
 
 	/* Set the cache up */
 	pthread_mutex_lock (&cache_lock);
 
-	cache = avl_create ((int (*) (const void *, const void *)) strcmp);
+	cache = c_avl_create ((int (*) (const void *, const void *)) strcmp);
 	if (cache == NULL)
 	{
-		ERROR ("rrdtool plugin: avl_create failed.");
+		ERROR ("rrdtool plugin: c_avl_create failed.");
 		return (-1);
 	}
 
 	cache_flush_last = time (NULL);
 	if (cache_timeout < 2)
 	{
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/sensors.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/sensors.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/sensors.c	2007-10-25 01:21:24.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/sensors.c	2007-12-26 23:41:49.000000000 +0800
@@ -35,35 +35,43 @@
 #include "utils_ignorelist.h"
 
 #if defined(HAVE_SENSORS_SENSORS_H)
 # include <sensors/sensors.h>
 #endif
 
-#define SENSOR_TYPE_VOLTAGE     0
-#define SENSOR_TYPE_FANSPEED    1
-#define SENSOR_TYPE_TEMPERATURE 2
-#define SENSOR_TYPE_UNKNOWN     3
+#if !defined(SENSORS_API_VERSION)
+# define SENSORS_API_VERSION 0x000
+#endif
 
-static char *sensor_to_type[] =
+/*
+ * The sensors library prior to version 3.0 (internal version 0x400) didn't
+ * report the type of values, only a name. The following lists are there to
+ * convert from the names to the type. They are not used with the new
+ * interface.
+ */
+#if SENSORS_API_VERSION < 0x400
+static char *sensor_type_name_map[] =
 {
+# define SENSOR_TYPE_VOLTAGE     0
 	"voltage",
+# define SENSOR_TYPE_FANSPEED    1
 	"fanspeed",
+# define SENSOR_TYPE_TEMPERATURE 2
 	"temperature",
+# define SENSOR_TYPE_UNKNOWN     3
 	NULL
 };
 
 struct sensors_labeltypes_s
 {
 	char *label;
 	int type;
 };
 typedef struct sensors_labeltypes_s sensors_labeltypes_t;
 
-/*
- * finite list of known labels extracted from lm_sensors
- */
+/* finite list of known labels extracted from lm_sensors */
 static sensors_labeltypes_t known_features[] = 
 {
 	{ "fan1", SENSOR_TYPE_FANSPEED },
 	{ "fan2", SENSOR_TYPE_FANSPEED },
 	{ "fan3", SENSOR_TYPE_FANSPEED },
 	{ "fan4", SENSOR_TYPE_FANSPEED },
@@ -115,44 +123,104 @@
 	{ "2.5V", SENSOR_TYPE_VOLTAGE },
 	{ "2.0V", SENSOR_TYPE_VOLTAGE },
 	{ "12V", SENSOR_TYPE_VOLTAGE }
 };
 static int known_features_num = STATIC_ARRAY_SIZE (known_features);
 /* end new naming */
+#endif /* SENSORS_API_VERSION < 0x400 */
 
 static const char *config_keys[] =
 {
 	"Sensor",
-	"IgnoreSelected",
-	NULL
+	"IgnoreSelected"
 };
-static int config_keys_num = 2;
-
-static ignorelist_t *sensor_list;
-
-#ifndef SENSORS_CONF_PATH
-# define SENSORS_CONF_PATH "/etc/sensors.conf"
-#endif
-
-static const char *conffile = SENSORS_CONF_PATH;
-/* SENSORS_CONF_PATH */
-
-/*
- * remember stat of the loaded config
- */
-static time_t sensors_config_mtime = 0;
+static int config_keys_num = STATIC_ARRAY_SIZE (config_keys);
 
+#if SENSORS_API_VERSION < 0x400
 typedef struct featurelist
 {
 	const sensors_chip_name    *chip;
 	const sensors_feature_data *data;
 	int                         type;
 	struct featurelist         *next;
 } featurelist_t;
 
+# ifndef SENSORS_CONF_PATH
+#  define SENSORS_CONF_PATH "/etc/sensors.conf"
+# endif
+/* #endif SENSORS_API_VERSION < 0x400 */
+
+#elif (SENSORS_API_VERSION >= 0x400) && (SENSORS_API_VERSION < 0x500)
+typedef struct featurelist
+{
+	const sensors_chip_name    *chip;
+	const sensors_feature      *feature;
+	const sensors_subfeature   *subfeature;
+	struct featurelist         *next;
+} featurelist_t;
+
+# ifndef SENSORS_CONF_PATH
+#  define SENSORS_CONF_PATH "/etc/sensors3.conf"
+# endif
+/* #endif (SENSORS_API_VERSION >= 0x400) && (SENSORS_API_VERSION < 0x500) */
+
+#else /* if SENSORS_API_VERSION >= 0x500 */
+# error "This version of libsensors is not supported yet. Please report this " \
+	"as bug."
+#endif
+
+static const char *conffile = SENSORS_CONF_PATH;
 featurelist_t *first_feature = NULL;
+static ignorelist_t *sensor_list;
+static time_t sensors_config_mtime = 0;
+
+#if SENSORS_API_VERSION < 0x400
+/* full chip name logic borrowed from lm_sensors */
+static int sensors_snprintf_chip_name (char *buf, size_t buf_size,
+		const sensors_chip_name *chip)
+{
+	int status = -1;
+
+	if (chip->bus == SENSORS_CHIP_NAME_BUS_ISA)
+	{
+		status = snprintf (buf, buf_size,
+				"%s-isa-%04x",
+				chip->prefix,
+				chip->addr);
+	}
+	else if (chip->bus == SENSORS_CHIP_NAME_BUS_DUMMY)
+	{
+		snprintf (buf, buf_size, "%s-%s-%04x",
+				chip->prefix,
+				chip->busname,
+				chip->addr);
+	}
+	else
+	{
+		snprintf (buf, buf_size, "%s-i2c-%d-%02x",
+				chip->prefix,
+				chip->bus,
+				chip->addr);
+	}
+
+	return (status);
+} /* int sensors_snprintf_chip_name */
+
+static int sensors_feature_name_to_type (const char *name)
+{
+	int i;
+
+	/* Yes, this is slow, but it's only ever done during initialization, so
+	 * it's a one time cost.. */
+	for (i = 0; i < known_features_num; i++)
+		if (strcasecmp (known_features[i].label, name) == 0)
+			return (known_features[i].type);
+
+	return (SENSOR_TYPE_UNKNOWN);
+} /* int sensors_feature_name_to_type */
+#endif
 
 static int sensors_config (const char *key, const char *value)
 {
 	if (sensor_list == NULL)
 		sensor_list = ignorelist_create (1);
 
@@ -200,20 +268,16 @@
 }
 
 static int sensors_load_conf (void)
 {
 	FILE *fh;
 	featurelist_t *last_feature = NULL;
-	featurelist_t *new_feature = NULL;
 	
 	const sensors_chip_name *chip;
 	int chip_num;
 
-	const sensors_feature_data *data;
-	int data_num0, data_num1;
-
 	struct stat statbuf;
 	int status;
 	
 	status = stat (conffile, &statbuf);
 	if (status != 0)
 	{
@@ -252,71 +316,115 @@
 				"Data will not be collected.");
 		return (-1);
 	}
 
 	sensors_config_mtime = statbuf.st_mtime;
 
+#if SENSORS_API_VERSION < 0x400
 	chip_num = 0;
 	while ((chip = sensors_get_detected_chips (&chip_num)) != NULL)
 	{
-		data = NULL;
-		data_num0 = data_num1 = 0;
+		int feature_num0 = 0;
+		int feature_num1 = 0;
 
-		while ((data = sensors_get_all_features (*chip, &data_num0, &data_num1))
-				!= NULL)
+		while (42)
 		{
-			int i;
+			const sensors_feature_data *feature;
+			int feature_type;
+			featurelist_t *fl;
+
+			feature = sensors_get_all_features (*chip,
+					&feature_num0, &feature_num1);
+
+			/* Check if all features have been read. */
+			if (feature == NULL)
+				break;
 
 			/* "master features" only */
-			if (data->mapping != SENSORS_NO_MAPPING)
+			if (feature->mapping != SENSORS_NO_MAPPING)
+				continue;
+
+			/* skip ignored in sensors.conf */
+			if (sensors_get_ignored (*chip, feature->number) == 0)
+				break;
+
+			feature_type = sensors_feature_name_to_type (
+					feature->name);
+			if (feature_type == SENSOR_TYPE_UNKNOWN)
 				continue;
 
-			/* Only known features */
-			for (i = 0; i < known_features_num; i++)
+			fl = (featurelist_t *) malloc (sizeof (featurelist_t));
+			if (fl == NULL)
 			{
-				if (strcmp (data->name, known_features[i].label) != 0)
-					continue;
+				ERROR ("sensors plugin: malloc failed.");
+				continue;
+			}
+			memset (fl, '\0', sizeof (featurelist_t));
+
+			fl->chip = chip;
+			fl->data = feature;
+			fl->type = feature_type;
+
+			if (first_feature == NULL)
+				first_feature = fl;
+			else
+				last_feature->next = fl;
+			last_feature = fl;
+		} /* while sensors_get_all_features */
+	} /* while sensors_get_detected_chips */
+/* #endif SENSORS_API_VERSION < 0x400 */
+
+#elif (SENSORS_API_VERSION >= 0x400) && (SENSORS_API_VERSION < 0x500)
+	chip_num = 0;
+	while ((chip = sensors_get_detected_chips (NULL, &chip_num)) != NULL)
+	{
+		const sensors_feature *feature;
+		int feature_num = 0;
+
+		while ((feature = sensors_get_features (chip, &feature_num)) != NULL)
+		{
+			const sensors_subfeature *subfeature;
+			int subfeature_num = 0;
 
-				/* skip ignored in sensors.conf */
-				if (sensors_get_ignored (*chip, data->number) == 0)
-					break;
-
-				DEBUG ("Adding feature: %s-%s-%s",
-						chip->prefix,
-						sensor_to_type[known_features[i].type],
-						data->name);
+			/* Only handle voltage, fanspeeds and temperatures */
+			if ((feature->type != SENSORS_FEATURE_IN)
+					&& (feature->type != SENSORS_FEATURE_FAN)
+					&& (feature->type != SENSORS_FEATURE_TEMP))
+				continue;
+
+			while ((subfeature = sensors_get_all_subfeatures (chip,
+							feature, &subfeature_num)) != NULL)
+			{
+				featurelist_t *fl;
 
-				if ((new_feature = (featurelist_t *) malloc (sizeof (featurelist_t))) == NULL)
+				if ((subfeature->type != SENSORS_SUBFEATURE_IN_INPUT)
+						&& (subfeature->type != SENSORS_SUBFEATURE_FAN_INPUT)
+						&& (subfeature->type != SENSORS_SUBFEATURE_TEMP_INPUT))
+					continue;
+
+				fl = (featurelist_t *) malloc (sizeof (featurelist_t));
+				if (fl == NULL)
 				{
-					char errbuf[1024];
-					ERROR ("sensors plugin: malloc: %s",
-							sstrerror (errno, errbuf, sizeof (errbuf)));
-					break;
+					ERROR ("sensors plugin: malloc failed.");
+					continue;
 				}
+				memset (fl, '\0', sizeof (featurelist_t));
 
-				new_feature->chip = chip;
-				new_feature->data = data;
-				new_feature->type = known_features[i].type;
-				new_feature->next = NULL;
+				fl->chip = chip;
+				fl->feature = feature;
+				fl->subfeature = subfeature;
 
 				if (first_feature == NULL)
-				{
-					first_feature = new_feature;
-					last_feature  = new_feature;
-				}
+					first_feature = fl;
 				else
-				{
-					last_feature->next = new_feature;
-					last_feature = new_feature;
-				}
-
-				/* stop searching known features at first found */
-				break;
-			} /* for i */
-		} /* while sensors_get_all_features */
-	} /* while sensors_get_detected_chips */
+					last_feature->next = fl;
+				last_feature  = fl;
+			} /* while (subfeature) */
+		} /* while (feature) */
+	} /* while (chip) */
+#endif /* (SENSORS_API_VERSION >= 0x400) && (SENSORS_API_VERSION < 0x500) */
 
 	if (first_feature == NULL)
 	{
 		sensors_cleanup ();
 		INFO ("sensors plugin: lm_sensors reports no "
 				"features. Data will not be collected.");
@@ -343,13 +451,13 @@
 
 	value_t values[1];
 	value_list_t vl = VALUE_LIST_INIT;
 
 	status = snprintf (match_key, sizeof (match_key), "%s/%s-%s",
 			plugin_instance, type, type_instance);
-	if ((status < 1) || (status >= sizeof (match_key)))
+	if (status < 1)
 		return;
 	match_key[sizeof (match_key) - 1] = '\0';
 
 	if (sensor_list != NULL)
 	{
 		DEBUG ("sensors plugin: Checking ignorelist for `%s'", match_key);
@@ -359,71 +467,101 @@
 
 	values[0].gauge = val;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "sensors");
-	strcpy (vl.plugin_instance, plugin_instance);
-	strcpy (vl.type_instance, type_instance);
+
+	strncpy (vl.host, hostname_g, sizeof (vl.host));
+	vl.host[sizeof (vl.host) - 1] = '\0';
+	strncpy (vl.plugin, "sensors", sizeof (vl.plugin));
+	vl.plugin[sizeof (vl.plugin) - 1] = '\0';
+	strncpy (vl.plugin_instance, plugin_instance,
+			sizeof (vl.plugin_instance));
+	vl.plugin_instance[sizeof (vl.plugin_instance) - 1] = '\0';
+	strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
+	vl.type_instance[sizeof (vl.type_instance) - 1] = '\0';
 
 	plugin_dispatch_values (type, &vl);
 } /* void sensors_submit */
 
 static int sensors_read (void)
 {
-	featurelist_t *feature;
-	double value;
-
-	char plugin_instance[DATA_MAX_NAME_LEN];
-	char type_instance[DATA_MAX_NAME_LEN];
+	featurelist_t *fl;
 
 	if (sensors_load_conf () != 0)
 		return (-1);
 
-	for (feature = first_feature; feature != NULL; feature = feature->next)
+#if SENSORS_API_VERSION < 0x400
+	for (fl = first_feature; fl != NULL; fl = fl->next)
 	{
-		if (sensors_get_feature (*feature->chip, feature->data->number, &value) < 0)
+		double value;
+		int status;
+		char plugin_instance[DATA_MAX_NAME_LEN];
+		char type_instance[DATA_MAX_NAME_LEN];
+
+		status = sensors_get_feature (*fl->chip,
+				fl->data->number, &value);
+		if (status < 0)
 			continue;
 
-		/* full chip name logic borrowed from lm_sensors */
-		if (feature->chip->bus == SENSORS_CHIP_NAME_BUS_ISA)
-		{
-			if (snprintf (plugin_instance, DATA_MAX_NAME_LEN, "%s-isa-%04x",
-						feature->chip->prefix,
-						feature->chip->addr)
-					>= 512)
-				continue;
-		}
-		else if (feature->chip->bus == SENSORS_CHIP_NAME_BUS_DUMMY)
-		{
-			if (snprintf (plugin_instance, 512, "%s-%s-%04x",
-						feature->chip->prefix,
-						feature->chip->busname,
-						feature->chip->addr)
-					>= 512)
-				continue;
-		}
-		else
-		{
-			if (snprintf (plugin_instance, 512, "%s-i2c-%d-%02x",
-						feature->chip->prefix,
-						feature->chip->bus,
-						feature->chip->addr)
-					>= 512)
-				continue;
-		}
+		status = sensors_snprintf_chip_name (plugin_instance,
+				sizeof (plugin_instance), fl->chip);
+		if (status < 0)
+			continue;
+		plugin_instance[sizeof (plugin_instance) - 1] = '\0';
 
-		strncpy (type_instance, feature->data->name, DATA_MAX_NAME_LEN);
+		strncpy (type_instance, fl->data->name,
+				sizeof (type_instance));
+		type_instance[sizeof (type_instance) - 1] = '\0';
 
 		sensors_submit (plugin_instance,
-				sensor_to_type[feature->type],
+				sensor_type_name_map[fl->type],
 				type_instance,
 				value);
-	} /* for feature = first_feature .. NULL */
+	} /* for fl = first_feature .. NULL */
+/* #endif SENSORS_API_VERSION < 0x400 */
+
+#elif (SENSORS_API_VERSION >= 0x400) && (SENSORS_API_VERSION < 0x500)
+	for (fl = first_feature; fl != NULL; fl = fl->next)
+	{
+		double value;
+		int status;
+		char plugin_instance[DATA_MAX_NAME_LEN];
+		char type_instance[DATA_MAX_NAME_LEN];
+		const char *type;
+
+		status = sensors_get_value (fl->chip,
+				fl->subfeature->number, &value);
+		if (status < 0)
+			continue;
+
+		status = sensors_snprintf_chip_name (plugin_instance,
+				sizeof (plugin_instance), fl->chip);
+		if (status < 0)
+			continue;
+		plugin_instance[sizeof (plugin_instance) - 1] = '\0';
+
+		strncpy (type_instance, fl->feature->name,
+				sizeof (type_instance));
+		type_instance[sizeof (type_instance) - 1] = '\0';
+
+		if (fl->feature->type == SENSORS_FEATURE_IN)
+			type = "voltage";
+		else if (fl->feature->type
+				== SENSORS_FEATURE_FAN)
+			type = "fanspeed";
+		else if (fl->feature->type
+				== SENSORS_FEATURE_TEMP)
+			type = "input";
+		else
+			continue;
+
+		sensors_submit (plugin_instance, type, type_instance, value);
+	} /* for fl = first_feature .. NULL */
+#endif /* (SENSORS_API_VERSION >= 0x400) && (SENSORS_API_VERSION < 0x500) */
 
 	return (0);
 } /* int sensors_read */
 
 void module_register (void)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/utils_avltree.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/utils_avltree.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/utils_avltree.c	2007-10-25 01:21:24.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/utils_avltree.c	2007-12-26 00:56:08.000000000 +0800
@@ -32,41 +32,41 @@
 #define BALANCE(n) ((((n)->left == NULL) ? 0 : (n)->left->height) \
 		- (((n)->right == NULL) ? 0 : (n)->right->height))
 
 /*
  * private data types
  */
-struct avl_node_s
+struct c_avl_node_s
 {
 	void *key;
 	void *value;
 
 	int height;
-	struct avl_node_s *left;
-	struct avl_node_s *right;
-	struct avl_node_s *parent;
+	struct c_avl_node_s *left;
+	struct c_avl_node_s *right;
+	struct c_avl_node_s *parent;
 };
-typedef struct avl_node_s avl_node_t;
+typedef struct c_avl_node_s c_avl_node_t;
 
-struct avl_tree_s
+struct c_avl_tree_s
 {
-	avl_node_t *root;
+	c_avl_node_t *root;
 	int (*compare) (const void *, const void *);
 };
 
-struct avl_iterator_s
+struct c_avl_iterator_s
 {
-	avl_tree_t *tree;
-	avl_node_t *node;
+	c_avl_tree_t *tree;
+	c_avl_node_t *node;
 };
 
 /*
  * private functions
  */
 #if 0
-static void verify_tree (avl_node_t *n)
+static void verify_tree (c_avl_node_t *n)
 {
 	if (n == NULL)
 		return;
 
 	verify_tree (n->left);
 	verify_tree (n->right);
@@ -75,26 +75,26 @@
 	assert ((n->parent == NULL) || (n->parent->right == n) || (n->parent->left == n));
 } /* void verify_tree */
 #else
 # define verify_tree(n) /**/
 #endif
 
-static void free_node (avl_node_t *n)
+static void free_node (c_avl_node_t *n)
 {
 	if (n == NULL)
 		return;
 
 	if (n->left != NULL)
 		free_node (n->left);
 	if (n->right != NULL)
 		free_node (n->right);
 
 	free (n);
 }
 
-static int calc_height (avl_node_t *n)
+static int calc_height (c_avl_node_t *n)
 {
 	int height_left;
 	int height_right;
 
 	if (n == NULL)
 		return (0);
@@ -104,15 +104,15 @@
 
 	return (((height_left > height_right)
 				? height_left
 				: height_right) + 1);
 } /* int calc_height */
 
-static avl_node_t *search (avl_tree_t *t, const void *key)
+static c_avl_node_t *search (c_avl_tree_t *t, const void *key)
 {
-	avl_node_t *n;
+	c_avl_node_t *n;
 	int cmp;
 
 	n = t->root;
 	while (n != NULL)
 	{
 		cmp = t->compare (key, n->key);
@@ -132,17 +132,17 @@
  *     (y)    /\         /\    (x)
  *    /   \  /_c\  ==>  / a\  /   \
  *   /\   /\           /____\/\   /\
  *  / a\ /_b\               /_b\ /_c\
  * /____\
  */
-static avl_node_t *rotate_right (avl_tree_t *t, avl_node_t *x)
+static c_avl_node_t *rotate_right (c_avl_tree_t *t, c_avl_node_t *x)
 {
-	avl_node_t *p;
-	avl_node_t *y;
-	avl_node_t *b;
+	c_avl_node_t *p;
+	c_avl_node_t *y;
+	c_avl_node_t *b;
 
 	p = x->parent;
 	y = x->left;
 	b = y->right;
 
 	x->left = b;
@@ -173,17 +173,17 @@
  *  /\    (y)           (x)    /\
  * /_a\  /   \   ==>   /   \  / c\
  *      /\   /\       /\   /\/____\
  *     /_b\ / c\     /_a\ /_b\
  *         /____\
  */
-static avl_node_t *rotate_left (avl_tree_t *t, avl_node_t *x)
+static c_avl_node_t *rotate_left (c_avl_tree_t *t, c_avl_node_t *x)
 {
-	avl_node_t *p;
-	avl_node_t *y;
-	avl_node_t *b;
+	c_avl_node_t *p;
+	c_avl_node_t *y;
+	c_avl_node_t *b;
 
 	p = x->parent;
 	y = x->right;
 	b = y->left;
 
 	x->right = b;
@@ -205,25 +205,25 @@
 	x->height = calc_height (x);
 	y->height = calc_height (y);
 
 	return (y);
 } /* void rotate_left */
 
-static avl_node_t *rotate_left_right (avl_tree_t *t, avl_node_t *x)
+static c_avl_node_t *rotate_left_right (c_avl_tree_t *t, c_avl_node_t *x)
 {
 	rotate_left (t, x->left);
 	return (rotate_right (t, x));
 } /* void rotate_left_right */
 
-static avl_node_t *rotate_right_left (avl_tree_t *t, avl_node_t *x)
+static c_avl_node_t *rotate_right_left (c_avl_tree_t *t, c_avl_node_t *x)
 {
 	rotate_right (t, x->right);
 	return (rotate_left (t, x));
 } /* void rotate_right_left */
 
-static void rebalance (avl_tree_t *t, avl_node_t *n)
+static void rebalance (c_avl_tree_t *t, c_avl_node_t *n)
 {
 	int b_top;
 	int b_bottom;
 
 	while (n != NULL)
 	{
@@ -261,15 +261,15 @@
 		assert (n->height == calc_height (n));
 
 		n = n->parent;
 	} /* while (n != NULL) */
 } /* void rebalance */
 
-static avl_node_t *avl_node_next (avl_tree_t *t, avl_node_t *n)
+static c_avl_node_t *c_avl_node_next (c_avl_tree_t *t, c_avl_node_t *n)
 {
-	avl_node_t *r; /* return node */
+	c_avl_node_t *r; /* return node */
 
 	if (n == NULL)
 	{
 		return (NULL);
 	}
 
@@ -304,17 +304,17 @@
 		r = n->right;
 		while (r->left != NULL)
 			r = r->left;
 	}
 
 	return (r);
-} /* avl_node_t *avl_node_next */
+} /* c_avl_node_t *c_avl_node_next */
 
-static avl_node_t *avl_node_prev (avl_tree_t *t, avl_node_t *n)
+static c_avl_node_t *c_avl_node_prev (c_avl_tree_t *t, c_avl_node_t *n)
 {
-	avl_node_t *r; /* return node */
+	c_avl_node_t *r; /* return node */
 
 	if (n == NULL)
 	{
 		return (NULL);
 	}
 
@@ -349,31 +349,31 @@
 		r = n->left;
 		while (r->right != NULL)
 			r = r->right;
 	}
 
 	return (r);
-} /* avl_node_t *avl_node_prev */
+} /* c_avl_node_t *c_avl_node_prev */
 
-static int _remove (avl_tree_t *t, avl_node_t *n)
+static int _remove (c_avl_tree_t *t, c_avl_node_t *n)
 {
 	assert ((t != NULL) && (n != NULL));
 
 	if ((n->left != NULL) && (n->right != NULL))
 	{
-		avl_node_t *r; /* replacement node */
+		c_avl_node_t *r; /* replacement node */
 		if (BALANCE (n) > 0) /* left subtree is higher */
 		{
 			assert (n->left != NULL);
-			r = avl_node_prev (t, n);
+			r = c_avl_node_prev (t, n);
 			
 		}
 		else /* right subtree is higher */
 		{
 			assert (n->right != NULL);
-			r = avl_node_next (t, n);
+			r = c_avl_node_next (t, n);
 		}
 
 		assert ((r->left == NULL) || (r->right == NULL));
 
 		/* copy content */
 		n->key   = r->key;
@@ -464,41 +464,41 @@
 	return (0);
 } /* void *_remove */
 
 /*
  * public functions
  */
-avl_tree_t *avl_create (int (*compare) (const void *, const void *))
+c_avl_tree_t *c_avl_create (int (*compare) (const void *, const void *))
 {
-	avl_tree_t *t;
+	c_avl_tree_t *t;
 
 	if (compare == NULL)
 		return (NULL);
 
-	if ((t = (avl_tree_t *) malloc (sizeof (avl_tree_t))) == NULL)
+	if ((t = (c_avl_tree_t *) malloc (sizeof (c_avl_tree_t))) == NULL)
 		return (NULL);
 
 	t->root = NULL;
 	t->compare = compare;
 
 	return (t);
 }
 
-void avl_destroy (avl_tree_t *t)
+void c_avl_destroy (c_avl_tree_t *t)
 {
 	free_node (t->root);
 	free (t);
 }
 
-int avl_insert (avl_tree_t *t, void *key, void *value)
+int c_avl_insert (c_avl_tree_t *t, void *key, void *value)
 {
-	avl_node_t *new;
-	avl_node_t *nptr;
+	c_avl_node_t *new;
+	c_avl_node_t *nptr;
 	int cmp;
 
-	if ((new = (avl_node_t *) malloc (sizeof (avl_node_t))) == NULL)
+	if ((new = (c_avl_node_t *) malloc (sizeof (c_avl_node_t))) == NULL)
 		return (-1);
 
 	new->key = key;
 	new->value = value;
 	new->height = 1;
 	new->left = NULL;
@@ -551,17 +551,17 @@
 			}
 		}
 	} /* while (42) */
 
 	verify_tree (t->root);
 	return (0);
-} /* int avl_insert */
+} /* int c_avl_insert */
 
-int avl_remove (avl_tree_t *t, const void *key, void **rkey, void **rvalue)
+int c_avl_remove (c_avl_tree_t *t, const void *key, void **rkey, void **rvalue)
 {
-	avl_node_t *n;
+	c_avl_node_t *n;
 	int status;
 
 	assert (t != NULL);
 
 	n = search (t, key);
 	if (n == NULL)
@@ -572,33 +572,33 @@
 	if (rvalue != NULL)
 		*rvalue = n->value;
 
 	status = _remove (t, n);
 	verify_tree (t->root);
 	return (status);
-} /* void *avl_remove */
+} /* void *c_avl_remove */
 
-int avl_get (avl_tree_t *t, const void *key, void **value)
+int c_avl_get (c_avl_tree_t *t, const void *key, void **value)
 {
-	avl_node_t *n;
+	c_avl_node_t *n;
 
 	assert (value != NULL);
 
 	n = search (t, key);
 	if (n == NULL)
 		return (-1);
 
 	*value = n->value;
 
 	return (0);
 }
 
-int avl_pick (avl_tree_t *t, void **key, void **value)
+int c_avl_pick (c_avl_tree_t *t, void **key, void **value)
 {
-	avl_node_t *n;
-	avl_node_t *p;
+	c_avl_node_t *n;
+	c_avl_node_t *p;
 
 	if ((key == NULL) || (value == NULL))
 		return (-1);
 	if (t->root == NULL)
 		return (-1);
 
@@ -626,33 +626,33 @@
 	*value = n->value;
 
 	free_node (n);
 	rebalance (t, p);
 
 	return (0);
-} /* int avl_pick */
+} /* int c_avl_pick */
 
-avl_iterator_t *avl_get_iterator (avl_tree_t *t)
+c_avl_iterator_t *c_avl_get_iterator (c_avl_tree_t *t)
 {
-	avl_iterator_t *iter;
+	c_avl_iterator_t *iter;
 
 	if (t == NULL)
 		return (NULL);
 
-	iter = (avl_iterator_t *) malloc (sizeof (avl_iterator_t));
+	iter = (c_avl_iterator_t *) malloc (sizeof (c_avl_iterator_t));
 	if (iter == NULL)
 		return (NULL);
-	memset (iter, '\0', sizeof (avl_iterator_t));
+	memset (iter, '\0', sizeof (c_avl_iterator_t));
 	iter->tree = t;
 
 	return (iter);
-} /* avl_iterator_t *avl_get_iterator */
+} /* c_avl_iterator_t *c_avl_get_iterator */
 
-int avl_iterator_next (avl_iterator_t *iter, void **key, void **value)
+int c_avl_iterator_next (c_avl_iterator_t *iter, void **key, void **value)
 {
-	avl_node_t *n;
+	c_avl_node_t *n;
 
 	if ((iter == NULL) || (key == NULL) || (value == NULL))
 		return (-1);
 
 	if (iter->node == NULL)
 	{
@@ -660,28 +660,28 @@
 			if (n->left == NULL)
 				break;
 		iter->node = n;
 	}
 	else
 	{
-		n = avl_node_next (iter->tree, iter->node);
+		n = c_avl_node_next (iter->tree, iter->node);
 	}
 
 	if (n == NULL)
 		return (-1);
 
 	iter->node = n;
 	*key = n->key;
 	*value = n->value;
 
 	return (0);
-} /* int avl_iterator_next */
+} /* int c_avl_iterator_next */
 
-int avl_iterator_prev (avl_iterator_t *iter, void **key, void **value)
+int c_avl_iterator_prev (c_avl_iterator_t *iter, void **key, void **value)
 {
-	avl_node_t *n;
+	c_avl_node_t *n;
 
 	if ((iter == NULL) || (key == NULL) || (value == NULL))
 		return (-1);
 
 	if (iter->node == NULL)
 	{
@@ -689,23 +689,23 @@
 			if (n->right == NULL)
 				break;
 		iter->node = n;
 	}
 	else
 	{
-		n = avl_node_prev (iter->tree, iter->node);
+		n = c_avl_node_prev (iter->tree, iter->node);
 	}
 
 	if (n == NULL)
 		return (-1);
 
 	iter->node = n;
 	*key = n->key;
 	*value = n->value;
 
 	return (0);
-} /* int avl_iterator_prev */
+} /* int c_avl_iterator_prev */
 
-void avl_iterator_destroy (avl_iterator_t *iter)
+void c_avl_iterator_destroy (c_avl_iterator_t *iter)
 {
 	free (iter);
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/utils_avltree.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/utils_avltree.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.4/src/utils_avltree.h	2007-10-25 01:21:24.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.1.5/src/utils_avltree.h	2007-12-26 00:56:08.000000000 +0800
@@ -20,21 +20,21 @@
  *   Florian octo Forster <octo at verplant.org>
  **/
 
 #ifndef UTILS_AVLTREE_H
 #define UTILS_AVLTREE_H 1
 
-struct avl_tree_s;
-typedef struct avl_tree_s avl_tree_t;
+struct c_avl_tree_s;
+typedef struct c_avl_tree_s c_avl_tree_t;
 
-struct avl_iterator_s;
-typedef struct avl_iterator_s avl_iterator_t;
+struct c_avl_iterator_s;
+typedef struct c_avl_iterator_s c_avl_iterator_t;
 
 /*
  * NAME
- *   avl_create
+ *   c_avl_create
  *
  * DESCRIPTION
  *   Allocates a new AVL-tree.
  *
  * PARAMETERS
  *   `compare'  The function-pointer `compare' is used to compare two keys. It
@@ -42,30 +42,30 @@
  *              then the second argument, more than zero if the first argument
  *              is bigger than the second argument and zero if they are equal.
  *              If your keys are char-pointers, you can use the `strcmp'
  *              function from the libc here.
  *
  * RETURN VALUE
- *   A avl_tree_t-pointer upon success or NULL upon failure.
+ *   A c_avl_tree_t-pointer upon success or NULL upon failure.
  */
-avl_tree_t *avl_create (int (*compare) (const void *, const void *));
+c_avl_tree_t *c_avl_create (int (*compare) (const void *, const void *));
 
 
 /*
  * NAME
- *   avl_destroy
+ *   c_avl_destroy
  *
  * DESCRIPTION
  *   Deallocates an AVL-tree. Stored value- and key-pointer are lost, but of
  *   course not freed.
  */
-void avl_destroy (avl_tree_t *t);
+void c_avl_destroy (c_avl_tree_t *t);
 
 /*
  * NAME
- *   avl_insert
+ *   c_avl_insert
  *
  * DESCRIPTION
  *   Stores the key-value-pair in the AVL-tree pointed to by `t'.
  *
  * PARAMETERS
  *   `t'        AVL-tree to store the data in.
@@ -74,17 +74,17 @@
  *   `value'    Value to be stored.
  *
  * RETURN VALUE
  *   Zero upon success and non-zero upon failure and if the key is already
  *   stored in the tree.
  */
-int avl_insert (avl_tree_t *t, void *key, void *value);
+int c_avl_insert (c_avl_tree_t *t, void *key, void *value);
 
 /*
  * NAME
- *   avl_remove
+ *   c_avl_remove
  *
  * DESCRIPTION
  *   Removes a key-value-pair from the tree t. The stored key and value may be
  *   returned in `rkey' and `rvalue'.
  *
  * PARAMETERS
@@ -93,34 +93,34 @@
  *   `rkey'     Pointer to a pointer in which to store the key. May be NULL.
  *   `rvalue'   Pointer to a pointer in which to store the value. May be NULL.
  *
  * RETURN VALUE
  *   Zero upon success or non-zero if the key isn't found in the tree.
  */
-int avl_remove (avl_tree_t *t, const void *key, void **rkey, void **rvalue);
+int c_avl_remove (c_avl_tree_t *t, const void *key, void **rkey, void **rvalue);
 
 /*
  * NAME
- *   avl_get
+ *   c_avl_get
  *
  * DESCRIPTION
  *   Retrieve the `value' belonging to `key'.
  *
  * PARAMETERS
  *   `t'	AVL-tree to get the value from.
  *   `key'      Key to identify the entry.
  *   `value'    Pointer to a pointer in which to store the value. May be NULL.
  *
  * RETURN VALUE
  *   Zero upon success or non-zero if the key isn't found in the tree.
  */
-int avl_get (avl_tree_t *t, const void *key, void **value);
+int c_avl_get (c_avl_tree_t *t, const void *key, void **value);
 
 /*
  * NAME
- *   avl_pick
+ *   c_avl_pick
  *
  * DESCRIPTION
  *   Remove a (pseudo-)random element from the tree and return it's `key' and
  *   `value'. Entries are not returned in any particular order. This function
  *   is intended for cache-flushes that don't care about the order but simply
  *   want to remove all elements, one at a time.
@@ -131,14 +131,14 @@
  *   `value'    Pointer to a pointer in which to store the value.
  *
  * RETURN VALUE
  *   Zero upon success or non-zero if the tree is empty or key or value is
  *   NULL.
  */
-int avl_pick (avl_tree_t *t, void **key, void **value);
+int c_avl_pick (c_avl_tree_t *t, void **key, void **value);
 
-avl_iterator_t *avl_get_iterator (avl_tree_t *t);
-int avl_iterator_next (avl_iterator_t *iter, void **key, void **value);
-int avl_iterator_prev (avl_iterator_t *iter, void **key, void **value);
-void avl_iterator_destroy (avl_iterator_t *iter);
+c_avl_iterator_t *c_avl_get_iterator (c_avl_tree_t *t);
+int c_avl_iterator_next (c_avl_iterator_t *iter, void **key, void **value);
+int c_avl_iterator_prev (c_avl_iterator_t *iter, void **key, void **value);
+void c_avl_iterator_destroy (c_avl_iterator_t *iter);
 
 #endif /* UTILS_AVLTREE_H */

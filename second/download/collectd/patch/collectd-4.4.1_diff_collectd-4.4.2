diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/ChangeLog /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/ChangeLog
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/ChangeLog	2008-06-04 01:08:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/ChangeLog	2008-07-15 22:39:23.000000000 +0800
@@ -1,17 +1,34 @@
+2008-07-15, Version 4.4.2
+	* build system: Use pkg-config to detect the upsclient library.
+	* collectd: Try even harder to determine the endianess of the
+	  architecture collectd is being built on.
+	* disk plugin: Fix for Linux 2.4: A wrong field was used as the name
+	  of disks.
+	* dns plugin: Fix compilation errors with BIND versions 19991001
+	  through 19991005.
+	* network plugin: Bugfix in the init routine: The init function
+	  cleared a buffer regardless of its contents. This could lead to lost
+	  values under Solaris.
+	* nginx plugin: Remove usage of the thread-unsafe `strtok' function.
+	* vserver plugin: Remove usage of the thread-unsafe `readdir'
+	  function.
+	* wireless plugin: Work around incorrect noise and power values
+	  returned by some broken drivers.
+
 2008-06-03, Version 4.4.1
 	* collectd: Fix the `DataSource' option within `Type' blocks. Thanks
 	  to kyrone for reporting this.
 	* collectd: Fixed min/max output in notifications generated by
 	  threshold checking.
 	* collectd-nagios: Fix the protocol used to communicate with the
 	  daemon.
 	* perl plugin: Fail noisily, but don't shutdown the daemon, if
 	  initialization has errors. An issue with Perl 5.10 has been fixed.
 	* teamspeak2 plugin: Fixed an out of bounce array access. Thanks to
-	  René Rebe and Siegmund Gorr for reporting this.
+	  RenÃ© Rebe and Siegmund Gorr for reporting this.
 
 2008-05-06, Version 4.4.0
 	* collectd: Internal code cleanups.
 	* collectd: Added support for a `Flush' command in the unixsock and
 	  exec plugins. This command can be used to force a plugin (or all) to
 	  flush its values to disk.
@@ -545,13 +562,13 @@
 	* The plugins `cpu', `memory', `processes' and `traffic' have been
 	  ported to Mach/Darwin (Mac OS X).
 	* The `log mode' has been contributed by Christophe Kalt. It writes
 	  the data into text files rather than RRD files.
 
 2006-04-09, Version 3.8.4
-	* Applied patch by Vincent Stehlé which improves the disk-name
+	* Applied patch by Vincent StehlÃ© which improves the disk-name
 	  resolution in the `hddtemp' plugin for Linux systems.
 
 2006-04-02, Version 3.8.3
 	* Applied a patch by James Byers: The MySQL plugin was not working
 	  with MySQL 5.0.2 or later.
 
@@ -657,13 +674,13 @@
 	  between polls up to one day.
 	* The init.d files have been improved.
 	* Problems with the spec file have been fixed.
 
 2005-10-16, Version 3.1.0 (Revision 194)
 	* Added the `setsid' syscall to the startup code.
-	* Support for hddtemp has been added (thanks to Vincent Stehlé)
+	* Support for hddtemp has been added (thanks to Vincent StehlÃ©)
 
 2005-09-30, Version 3.0.0 (Revision 184)
 	* The ability to send/receive data to/from the network (think
 	  multicast) has been added.
 	* Modules have been split up into shared libraries can be loaded at
 	  runtime. The biggest advantage is that the core program doesn't need
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/configure	2008-06-04 01:10:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/configure	2008-07-15 22:41:29.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.61 for collectd 4.4.1.
+# Generated by GNU Autoconf 2.61 for collectd 4.4.2.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
 # This configure script is free software; the Free Software Foundation
 # gives unlimited permission to copy, distribute and modify it.
 ## --------------------- ##
@@ -723,14 +723,14 @@
 MAKEFLAGS=
 SHELL=${CONFIG_SHELL-/bin/sh}
 
 # Identity of this package.
 PACKAGE_NAME='collectd'
 PACKAGE_TARNAME='collectd'
-PACKAGE_VERSION='4.4.1'
-PACKAGE_STRING='collectd 4.4.1'
+PACKAGE_VERSION='4.4.2'
+PACKAGE_STRING='collectd 4.4.2'
 PACKAGE_BUGREPORT=''
 
 ac_unique_file="src/collectd.c"
 ac_default_prefix="/opt/collectd"
 # Factoring default headers for most tests.
 ac_includes_default="\
@@ -940,14 +940,12 @@
 BUILD_WITH_LIBSNMP_CFLAGS
 BUILD_WITH_LIBSNMP_LIBS
 BUILD_WITH_LIBNETSNMP_TRUE
 BUILD_WITH_LIBNETSNMP_FALSE
 BUILD_WITH_LIBUPSCLIENT_CFLAGS
 BUILD_WITH_LIBUPSCLIENT_LIBS
-BUILD_WITH_LIBUPSCLIENT_TRUE
-BUILD_WITH_LIBUPSCLIENT_FALSE
 BUILD_WITH_LIBXMMS_CFLAGS
 BUILD_WITH_LIBXMMS_LIBS
 BUILD_WITH_LIBXMMS_TRUE
 BUILD_WITH_LIBXMMS_FALSE
 BUILD_WITH_LIBNETLINK_CFLAGS
 BUILD_WITH_LIBNETLINK_LIBS
@@ -1598,13 +1596,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures collectd 4.4.1 to adapt to many kinds of systems.
+\`configure' configures collectd 4.4.2 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -1668,13 +1666,13 @@
   --host=HOST       cross-compile to build programs to run on HOST [BUILD]
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of collectd 4.4.1:";;
+     short | recursive ) echo "Configuration of collectd 4.4.2:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
@@ -1777,14 +1775,12 @@
                           Path to liboping.
   --with-libpcap[=PREFIX] Path to libpcap.
   --with-libperl[=PREFIX] Path to libperl.
   --with-libiptc[=PREFIX] Path to libiptc.
   --with-libnetsnmp[=PREFIX]
                           Path to the Net-SNMPD library.
-  --with-libupsclient[=PREFIX]
-                          Path to libupsclient.
   --with-libxmms[=PREFIX] Path to libxmms.
   --with-libnetlink[=PREFIX]
                           Path to libnetlink.
   --with-perl-bindings[=OPTIONS]
                           Options passed to "perl Makefile.PL".
 
@@ -1870,13 +1866,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-collectd configure 4.4.1
+collectd configure 4.4.2
 generated by GNU Autoconf 2.61
 
 Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
@@ -1884,13 +1880,13 @@
   exit
 fi
 cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by collectd $as_me 4.4.1, which was
+It was created by collectd $as_me 4.4.2, which was
 generated by GNU Autoconf 2.61.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 exec 5>>config.log
@@ -2577,13 +2573,13 @@
   fi
 fi
 
 
 # Define the identity of the package.
  PACKAGE='collectd'
- VERSION='4.4.1'
+ VERSION='4.4.2'
 
 
 cat >>confdefs.h <<_ACEOF
 #define PACKAGE "$PACKAGE"
 _ACEOF
 
@@ -6259,13 +6255,13 @@
     esac
   fi
   rm -rf conftest*
   ;;
 *-*-irix6*)
   # Find out which ABI we are using.
-  echo '#line 6265 "configure"' > conftest.$ac_ext
+  echo '#line 6261 "configure"' > conftest.$ac_ext
   if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
   (eval $ac_compile) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
    if test "$lt_cv_prog_gnu_ld" = yes; then
@@ -9081,17 +9077,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:9087: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:9083: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:9091: \$? = $ac_status" >&5
+   echo "$as_me:9087: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -9371,17 +9367,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:9377: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:9373: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:9381: \$? = $ac_status" >&5
+   echo "$as_me:9377: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -9475,17 +9471,17 @@
    # Note that $ac_compile itself does not contain backslashes and begins
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:9481: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:9477: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:9485: \$? = $ac_status" >&5
+   echo "$as_me:9481: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
      $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
@@ -11852,13 +11848,13 @@
   	  if test "$cross_compiling" = yes; then :
   lt_cv_dlopen_self=cross
 else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 11858 "configure"
+#line 11854 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
 #include <dlfcn.h>
 #endif
 
@@ -11952,13 +11948,13 @@
   	  if test "$cross_compiling" = yes; then :
   lt_cv_dlopen_self_static=cross
 else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 11958 "configure"
+#line 11954 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
 #include <dlfcn.h>
 #endif
 
@@ -14353,17 +14349,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:14359: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:14355: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:14363: \$? = $ac_status" >&5
+   echo "$as_me:14359: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -14457,17 +14453,17 @@
    # Note that $ac_compile itself does not contain backslashes and begins
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:14463: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:14459: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:14467: \$? = $ac_status" >&5
+   echo "$as_me:14463: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
      $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
@@ -16055,17 +16051,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:16061: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:16057: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:16065: \$? = $ac_status" >&5
+   echo "$as_me:16061: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -16159,17 +16155,17 @@
    # Note that $ac_compile itself does not contain backslashes and begins
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:16165: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:16161: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:16169: \$? = $ac_status" >&5
+   echo "$as_me:16165: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
      $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
@@ -18379,17 +18375,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:18385: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:18381: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:18389: \$? = $ac_status" >&5
+   echo "$as_me:18385: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -18669,17 +18665,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:18675: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:18671: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:18679: \$? = $ac_status" >&5
+   echo "$as_me:18675: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -18773,17 +18769,17 @@
    # Note that $ac_compile itself does not contain backslashes and begins
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:18779: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:18775: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:18783: \$? = $ac_status" >&5
+   echo "$as_me:18779: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
      $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
@@ -22368,13 +22364,14 @@
 
 
 
 
 
 
-for ac_header in stdint.h stdio.h errno.h math.h stdarg.h syslog.h fcntl.h signal.h assert.h sys/types.h sys/socket.h sys/select.h poll.h netdb.h arpa/inet.h sys/resource.h sys/param.h kstat.h regex.h sys/ioctl.h endian.h
+
+for ac_header in stdint.h stdio.h errno.h math.h stdarg.h syslog.h fcntl.h signal.h assert.h sys/types.h sys/socket.h sys/select.h poll.h netdb.h arpa/inet.h sys/resource.h sys/param.h kstat.h regex.h sys/ioctl.h endian.h sys/isa_defs.h
 do
 as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
 if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
   { echo "$as_me:$LINENO: checking for $ac_header" >&5
 echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6; }
 if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
@@ -31408,132 +31405,12 @@
 
 else
   with_libhal="no"
 fi
 
 if test "x$with_libhal" = "xyes"; then
-
-
-if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
-	if test -n "$ac_tool_prefix"; then
-  # Extract the first word of "${ac_tool_prefix}pkg-config", so it can be a program name with args.
-set dummy ${ac_tool_prefix}pkg-config; ac_word=$2
-{ echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
-if test "${ac_cv_path_PKG_CONFIG+set}" = set; then
-  echo $ECHO_N "(cached) $ECHO_C" >&6
-else
-  case $PKG_CONFIG in
-  [\\/]* | ?:[\\/]*)
-  ac_cv_path_PKG_CONFIG="$PKG_CONFIG" # Let the user override the test with a path.
-  ;;
-  *)
-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-  for ac_exec_ext in '' $ac_executable_extensions; do
-  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
-    ac_cv_path_PKG_CONFIG="$as_dir/$ac_word$ac_exec_ext"
-    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-done
-IFS=$as_save_IFS
-
-  ;;
-esac
-fi
-PKG_CONFIG=$ac_cv_path_PKG_CONFIG
-if test -n "$PKG_CONFIG"; then
-  { echo "$as_me:$LINENO: result: $PKG_CONFIG" >&5
-echo "${ECHO_T}$PKG_CONFIG" >&6; }
-else
-  { echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6; }
-fi
-
-
-fi
-if test -z "$ac_cv_path_PKG_CONFIG"; then
-  ac_pt_PKG_CONFIG=$PKG_CONFIG
-  # Extract the first word of "pkg-config", so it can be a program name with args.
-set dummy pkg-config; ac_word=$2
-{ echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
-if test "${ac_cv_path_ac_pt_PKG_CONFIG+set}" = set; then
-  echo $ECHO_N "(cached) $ECHO_C" >&6
-else
-  case $ac_pt_PKG_CONFIG in
-  [\\/]* | ?:[\\/]*)
-  ac_cv_path_ac_pt_PKG_CONFIG="$ac_pt_PKG_CONFIG" # Let the user override the test with a path.
-  ;;
-  *)
-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-  for ac_exec_ext in '' $ac_executable_extensions; do
-  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
-    ac_cv_path_ac_pt_PKG_CONFIG="$as_dir/$ac_word$ac_exec_ext"
-    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-done
-IFS=$as_save_IFS
-
-  ;;
-esac
-fi
-ac_pt_PKG_CONFIG=$ac_cv_path_ac_pt_PKG_CONFIG
-if test -n "$ac_pt_PKG_CONFIG"; then
-  { echo "$as_me:$LINENO: result: $ac_pt_PKG_CONFIG" >&5
-echo "${ECHO_T}$ac_pt_PKG_CONFIG" >&6; }
-else
-  { echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6; }
-fi
-
-  if test "x$ac_pt_PKG_CONFIG" = x; then
-    PKG_CONFIG=""
-  else
-    case $cross_compiling:$ac_tool_warned in
-yes:)
-{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
-whose name does not start with the host triplet.  If you think this
-configuration is useful to you, please write to autoconf@gnu.org." >&5
-echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
-whose name does not start with the host triplet.  If you think this
-configuration is useful to you, please write to autoconf@gnu.org." >&2;}
-ac_tool_warned=yes ;;
-esac
-    PKG_CONFIG=$ac_pt_PKG_CONFIG
-  fi
-else
-  PKG_CONFIG="$ac_cv_path_PKG_CONFIG"
-fi
-
-fi
-if test -n "$PKG_CONFIG"; then
-	_pkg_min_version=0.9.0
-	{ echo "$as_me:$LINENO: checking pkg-config is at least version $_pkg_min_version" >&5
-echo $ECHO_N "checking pkg-config is at least version $_pkg_min_version... $ECHO_C" >&6; }
-	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
-		{ echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6; }
-	else
-		{ echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6; }
-		PKG_CONFIG=""
-	fi
-
-fi
 	if test "x$PKG_CONFIG" != "x"; then
 		BUILD_WITH_LIBHAL_CFLAGS="`pkg-config --cflags hal`"
 		BUILD_WITH_LIBHAL_LIBS="`pkg-config --libs hal`"
 
 
 	fi
@@ -35197,55 +35074,42 @@
 else
   BUILD_WITH_LIBNETSNMP_TRUE='#'
   BUILD_WITH_LIBNETSNMP_FALSE=
 fi
 
 
-with_upsclient_config="libupsclient-config"
-with_upsclient_cflags=""
-with_upsclient_libs=""
-
-# Check whether --with-libupsclient was given.
-if test "${with_libupsclient+set}" = set; then
-  withval=$with_libupsclient;
-	if test "x$withval" = "xno"
+with_libupsclient="no (pkg-config isn't available)"
+with_libupsclient_cflags=""
+with_libupsclient_libs=""
+if test "x$PKG_CONFIG" != "x"
+then
+	pkg-config --exists 'libupsclient' 2>/dev/null
+	if test "$?" = "0"
 	then
-		with_libupsclient="no"
-	else
-		if test "x$withval" != "xyes"
-		then
-			if test -f "$withval" && test -x "$withval";
-			then
-				with_upsclient_config="$withval"
-			else
-				with_upsclient_config="$withval/bin/libupsclient-config"
-			fi
-		fi
 		with_libupsclient="yes"
+	else
+		with_libupsclient="no (pkg-config doesn't know library)"
 	fi
-
-else
-
-	with_libupsclient="yes"
-
 fi
-
 if test "x$with_libupsclient" = "xyes"
 then
-	with_upsclient_cflags=`$with_upsclient_config --cflags 2>/dev/null`
-	upsclient_config_status=$?
-
-	if test $upsclient_config_status -ne 0
+	with_libupsclient_cflags="`pkg-config --cflags 'libupsclient'`"
+	if test $? -ne 0
 	then
-		with_libupsclient="no ($with_upsclient_config failed)"
+		with_libupsclient="no"
+	fi
+	with_libupsclient_libs="`pkg-config --libs 'libupsclient'`"
+	if test $? -ne 0
+	then
+		with_libupsclient="no"
 	fi
 fi
 if test "x$with_libupsclient" = "xyes"
 then
 	SAVE_CPPFLAGS="$CPPFLAGS"
-	CPPFLAGS="$CPPFLAGS $with_upsclient_cflags"
+	CPPFLAGS="$CPPFLAGS $with_libupsclient_cflags"
 
 
 for ac_header in upsclient.h
 do
 as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
 if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
@@ -35388,29 +35252,25 @@
 
 
 	CPPFLAGS="$SAVE_CPPFLAGS"
 fi
 if test "x$with_libupsclient" = "xyes"
 then
-	with_upsclient_libs=`$with_upsclient_config --libs 2>/dev/null`
-	upsclient_config_status=$?
+	SAVE_CPPFLAGS="$CPPFLAGS"
+	SAVE_LDFLAGS="$LDFLAGS"
+
+	CPPFLAGS="$CPPFLAGS $with_libupsclient_cflags"
+	LDFLAGS="$LDFLAGS $with_libupsclient_libs"
 
-	if test $upsclient_config_status -ne 0
-	then
-		with_libupsclient="no ($with_upsclient_config failed)"
-	fi
-fi
-if test "x$with_libupsclient" = "xyes"
-then
 	{ echo "$as_me:$LINENO: checking for upscli_connect in -lupsclient" >&5
 echo $ECHO_N "checking for upscli_connect in -lupsclient... $ECHO_C" >&6; }
 if test "${ac_cv_lib_upsclient_upscli_connect+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-lupsclient $with_upsclient_libs $LIBS"
+LIBS="-lupsclient  $LIBS"
 cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
 _ACEOF
 cat confdefs.h >>conftest.$ac_ext
 cat >>conftest.$ac_ext <<_ACEOF
 /* end confdefs.h.  */
@@ -35460,29 +35320,25 @@
       conftest$ac_exeext conftest.$ac_ext
 LIBS=$ac_check_lib_save_LIBS
 fi
 { echo "$as_me:$LINENO: result: $ac_cv_lib_upsclient_upscli_connect" >&5
 echo "${ECHO_T}$ac_cv_lib_upsclient_upscli_connect" >&6; }
 if test $ac_cv_lib_upsclient_upscli_connect = yes; then
-
-		BUILD_WITH_LIBUPSCLIENT_CFLAGS="$with_upsclient_cflags"
-		BUILD_WITH_LIBUPSCLIENT_LIBS="$with_upsclient_libs"
-
-
-
+  with_libupsclient="yes"
 else
-
-		with_libupsclient="no (symbol 'upscli_connect' not found)"
-
+  with_libupsclient="no (symbol upscli_connect not found)"
 fi
 
+
+	CPPFLAGS="$SAVE_CPPFLAGS"
+	LDFLAGS="$SAVE_LDFLAGS"
 fi
 if test "x$with_libupsclient" = "xyes"
 then
 	SAVE_CPPFLAGS="$CPPFLAGS"
-	CPPFLAGS="$CPPFLAGS $with_upsclient_cflags"
+	CPPFLAGS="$CPPFLAGS $with_libupsclient_cflags"
 
 	{ echo "$as_me:$LINENO: checking for UPSCONN_t" >&5
 echo $ECHO_N "checking for UPSCONN_t... $ECHO_C" >&6; }
 if test "${ac_cv_type_UPSCONN_t+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -35610,21 +35466,20 @@
 
 fi
 
 
 	CPPFLAGS="$SAVE_CPPFLAGS"
 fi
- if test "x$with_libupsclient" = "xyes"; then
-  BUILD_WITH_LIBUPSCLIENT_TRUE=
-  BUILD_WITH_LIBUPSCLIENT_FALSE='#'
-else
-  BUILD_WITH_LIBUPSCLIENT_TRUE='#'
-  BUILD_WITH_LIBUPSCLIENT_FALSE=
-fi
+if test "x$with_libupsclient" = "xyes"
+then
+	BUILD_WITH_LIBUPSCLIENT_CFLAGS="$with_libupsclient_cflags"
+	BUILD_WITH_LIBUPSCLIENT_LIBS="$with_libupsclient_libs"
 
 
+fi
+
 ### BEGIN of check for libxmms ###
 with_xmms_config="xmms-config"
 with_xmms_cflags=""
 with_xmms_libs=""
 
 # Check whether --with-libxmms was given.
@@ -39700,19 +39555,12 @@
   { { echo "$as_me:$LINENO: error: conditional \"BUILD_WITH_LIBNETSNMP\" was never defined.
 Usually this means the macro was only invoked conditionally." >&5
 echo "$as_me: error: conditional \"BUILD_WITH_LIBNETSNMP\" was never defined.
 Usually this means the macro was only invoked conditionally." >&2;}
    { (exit 1); exit 1; }; }
 fi
-if test -z "${BUILD_WITH_LIBUPSCLIENT_TRUE}" && test -z "${BUILD_WITH_LIBUPSCLIENT_FALSE}"; then
-  { { echo "$as_me:$LINENO: error: conditional \"BUILD_WITH_LIBUPSCLIENT\" was never defined.
-Usually this means the macro was only invoked conditionally." >&5
-echo "$as_me: error: conditional \"BUILD_WITH_LIBUPSCLIENT\" was never defined.
-Usually this means the macro was only invoked conditionally." >&2;}
-   { (exit 1); exit 1; }; }
-fi
 if test -z "${BUILD_WITH_LIBXMMS_TRUE}" && test -z "${BUILD_WITH_LIBXMMS_FALSE}"; then
   { { echo "$as_me:$LINENO: error: conditional \"BUILD_WITH_LIBXMMS\" was never defined.
 Usually this means the macro was only invoked conditionally." >&5
 echo "$as_me: error: conditional \"BUILD_WITH_LIBXMMS\" was never defined.
 Usually this means the macro was only invoked conditionally." >&2;}
    { (exit 1); exit 1; }; }
@@ -40427,13 +40275,13 @@
 exec 6>&1
 
 # Save the log message, to keep $[0] and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by collectd $as_me 4.4.1, which was
+This file was extended by collectd $as_me 4.4.2, which was
 generated by GNU Autoconf 2.61.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -40480,13 +40328,13 @@
 
 Report bugs to <bug-autoconf@gnu.org>."
 
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF
 ac_cs_version="\\
-collectd config.status 4.4.1
+collectd config.status 4.4.2
 configured by $0, generated by GNU Autoconf 2.61,
   with options \\"`echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
 Copyright (C) 2006 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
@@ -40881,14 +40729,12 @@
 BUILD_WITH_LIBSNMP_CFLAGS!$BUILD_WITH_LIBSNMP_CFLAGS$ac_delim
 BUILD_WITH_LIBSNMP_LIBS!$BUILD_WITH_LIBSNMP_LIBS$ac_delim
 BUILD_WITH_LIBNETSNMP_TRUE!$BUILD_WITH_LIBNETSNMP_TRUE$ac_delim
 BUILD_WITH_LIBNETSNMP_FALSE!$BUILD_WITH_LIBNETSNMP_FALSE$ac_delim
 BUILD_WITH_LIBUPSCLIENT_CFLAGS!$BUILD_WITH_LIBUPSCLIENT_CFLAGS$ac_delim
 BUILD_WITH_LIBUPSCLIENT_LIBS!$BUILD_WITH_LIBUPSCLIENT_LIBS$ac_delim
-BUILD_WITH_LIBUPSCLIENT_TRUE!$BUILD_WITH_LIBUPSCLIENT_TRUE$ac_delim
-BUILD_WITH_LIBUPSCLIENT_FALSE!$BUILD_WITH_LIBUPSCLIENT_FALSE$ac_delim
 BUILD_WITH_LIBXMMS_CFLAGS!$BUILD_WITH_LIBXMMS_CFLAGS$ac_delim
 BUILD_WITH_LIBXMMS_LIBS!$BUILD_WITH_LIBXMMS_LIBS$ac_delim
 BUILD_WITH_LIBXMMS_TRUE!$BUILD_WITH_LIBXMMS_TRUE$ac_delim
 BUILD_WITH_LIBXMMS_FALSE!$BUILD_WITH_LIBXMMS_FALSE$ac_delim
 BUILD_WITH_LIBNETLINK_CFLAGS!$BUILD_WITH_LIBNETLINK_CFLAGS$ac_delim
 BUILD_WITH_LIBNETLINK_LIBS!$BUILD_WITH_LIBNETLINK_LIBS$ac_delim
@@ -40900,12 +40746,14 @@
 BUILD_WITH_LIBXML2_LIBS!$BUILD_WITH_LIBXML2_LIBS$ac_delim
 BUILD_WITH_LIBVIRT_CFLAGS!$BUILD_WITH_LIBVIRT_CFLAGS$ac_delim
 BUILD_WITH_LIBVIRT_LIBS!$BUILD_WITH_LIBVIRT_LIBS$ac_delim
 BUILD_FEATURE_DEBUG_TRUE!$BUILD_FEATURE_DEBUG_TRUE$ac_delim
 BUILD_FEATURE_DEBUG_FALSE!$BUILD_FEATURE_DEBUG_FALSE$ac_delim
 BUILD_FEATURE_DAEMON_TRUE!$BUILD_FEATURE_DAEMON_TRUE$ac_delim
+BUILD_FEATURE_DAEMON_FALSE!$BUILD_FEATURE_DAEMON_FALSE$ac_delim
+BUILD_FEATURE_GETIFADDRS_TRUE!$BUILD_FEATURE_GETIFADDRS_TRUE$ac_delim
 _ACEOF
 
   if test `sed -n "s/.*$ac_delim\$/X/p" conf$$subs.sed | grep -c X` = 97; then
     break
   elif $ac_last_try; then
     { { echo "$as_me:$LINENO: error: could not make $CONFIG_STATUS" >&5
@@ -40941,14 +40789,12 @@
 _ACEOF
 
 
 ac_delim='%!_!# '
 for ac_last_try in false false false false false :; do
   cat >conf$$subs.sed <<_ACEOF
-BUILD_FEATURE_DAEMON_FALSE!$BUILD_FEATURE_DAEMON_FALSE$ac_delim
-BUILD_FEATURE_GETIFADDRS_TRUE!$BUILD_FEATURE_GETIFADDRS_TRUE$ac_delim
 BUILD_FEATURE_GETIFADDRS_FALSE!$BUILD_FEATURE_GETIFADDRS_FALSE$ac_delim
 BUILD_PLUGIN_APACHE_TRUE!$BUILD_PLUGIN_APACHE_TRUE$ac_delim
 BUILD_PLUGIN_APACHE_FALSE!$BUILD_PLUGIN_APACHE_FALSE$ac_delim
 BUILD_PLUGIN_APCUPS_TRUE!$BUILD_PLUGIN_APCUPS_TRUE$ac_delim
 BUILD_PLUGIN_APCUPS_FALSE!$BUILD_PLUGIN_APCUPS_FALSE$ac_delim
 BUILD_PLUGIN_APPLE_SENSORS_TRUE!$BUILD_PLUGIN_APPLE_SENSORS_TRUE$ac_delim
@@ -41038,12 +40884,14 @@
 BUILD_PLUGIN_TAIL_TRUE!$BUILD_PLUGIN_TAIL_TRUE$ac_delim
 BUILD_PLUGIN_TAIL_FALSE!$BUILD_PLUGIN_TAIL_FALSE$ac_delim
 BUILD_PLUGIN_TAPE_TRUE!$BUILD_PLUGIN_TAPE_TRUE$ac_delim
 BUILD_PLUGIN_TAPE_FALSE!$BUILD_PLUGIN_TAPE_FALSE$ac_delim
 BUILD_PLUGIN_TCPCONNS_TRUE!$BUILD_PLUGIN_TCPCONNS_TRUE$ac_delim
 BUILD_PLUGIN_TCPCONNS_FALSE!$BUILD_PLUGIN_TCPCONNS_FALSE$ac_delim
+BUILD_PLUGIN_TEAMSPEAK2_TRUE!$BUILD_PLUGIN_TEAMSPEAK2_TRUE$ac_delim
+BUILD_PLUGIN_TEAMSPEAK2_FALSE!$BUILD_PLUGIN_TEAMSPEAK2_FALSE$ac_delim
 _ACEOF
 
   if test `sed -n "s/.*$ac_delim\$/X/p" conf$$subs.sed | grep -c X` = 97; then
     break
   elif $ac_last_try; then
     { { echo "$as_me:$LINENO: error: could not make $CONFIG_STATUS" >&5
@@ -41079,14 +40927,12 @@
 _ACEOF
 
 
 ac_delim='%!_!# '
 for ac_last_try in false false false false false :; do
   cat >conf$$subs.sed <<_ACEOF
-BUILD_PLUGIN_TEAMSPEAK2_TRUE!$BUILD_PLUGIN_TEAMSPEAK2_TRUE$ac_delim
-BUILD_PLUGIN_TEAMSPEAK2_FALSE!$BUILD_PLUGIN_TEAMSPEAK2_FALSE$ac_delim
 BUILD_PLUGIN_UNIXSOCK_TRUE!$BUILD_PLUGIN_UNIXSOCK_TRUE$ac_delim
 BUILD_PLUGIN_UNIXSOCK_FALSE!$BUILD_PLUGIN_UNIXSOCK_FALSE$ac_delim
 BUILD_PLUGIN_USERS_TRUE!$BUILD_PLUGIN_USERS_TRUE$ac_delim
 BUILD_PLUGIN_USERS_FALSE!$BUILD_PLUGIN_USERS_FALSE$ac_delim
 BUILD_PLUGIN_UUID_TRUE!$BUILD_PLUGIN_UUID_TRUE$ac_delim
 BUILD_PLUGIN_UUID_FALSE!$BUILD_PLUGIN_UUID_FALSE$ac_delim
@@ -41101,13 +40947,13 @@
 PERL_BINDINGS!$PERL_BINDINGS$ac_delim
 PERL_BINDINGS_OPTIONS!$PERL_BINDINGS_OPTIONS$ac_delim
 LIBOBJS!$LIBOBJS$ac_delim
 LTLIBOBJS!$LTLIBOBJS$ac_delim
 _ACEOF
 
-  if test `sed -n "s/.*$ac_delim\$/X/p" conf$$subs.sed | grep -c X` = 20; then
+  if test `sed -n "s/.*$ac_delim\$/X/p" conf$$subs.sed | grep -c X` = 18; then
     break
   elif $ac_last_try; then
     { { echo "$as_me:$LINENO: error: could not make $CONFIG_STATUS" >&5
 echo "$as_me: error: could not make $CONFIG_STATUS" >&2;}
    { (exit 1); exit 1; }; }
   else
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/configure.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/configure.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/configure.in	2008-06-04 01:09:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/configure.in	2008-07-15 22:40:40.000000000 +0800
@@ -54,13 +54,13 @@
 # Checks for header files.
 #
 AC_HEADER_STDC
 AC_HEADER_SYS_WAIT
 AC_HEADER_DIRENT
 
-AC_CHECK_HEADERS(stdint.h stdio.h errno.h math.h stdarg.h syslog.h fcntl.h signal.h assert.h sys/types.h sys/socket.h sys/select.h poll.h netdb.h arpa/inet.h sys/resource.h sys/param.h kstat.h regex.h sys/ioctl.h endian.h)
+AC_CHECK_HEADERS(stdint.h stdio.h errno.h math.h stdarg.h syslog.h fcntl.h signal.h assert.h sys/types.h sys/socket.h sys/select.h poll.h netdb.h arpa/inet.h sys/resource.h sys/param.h kstat.h regex.h sys/ioctl.h endian.h sys/isa_defs.h)
 
 # For ping library
 AC_CHECK_HEADERS(netinet/in_systm.h, [], [],
 [#if HAVE_STDINT_H
 # include <stdint.h>
 #endif
@@ -888,13 +888,12 @@
 dnl Check for HAL (hardware abstraction library)
 with_libhal="yes"
 AC_CHECK_LIB(hal,libhal_device_property_exists,
 	     [AC_DEFINE(HAVE_LIBHAL, 1, [Define to 1 if you have 'hal' library])],
 	     [with_libhal="no"])
 if test "x$with_libhal" = "xyes"; then
-	PKG_PROG_PKG_CONFIG
 	if test "x$PKG_CONFIG" != "x"; then
 		BUILD_WITH_LIBHAL_CFLAGS="`pkg-config --cflags hal`"
 		BUILD_WITH_LIBHAL_LIBS="`pkg-config --libs hal`"
 		AC_SUBST(BUILD_WITH_LIBHAL_CFLAGS)
 		AC_SUBST(BUILD_WITH_LIBHAL_LIBS)
 	fi
@@ -1735,91 +1734,81 @@
 	BUILD_WITH_LIBSNMP_LIBS="$with_snmp_libs"
 	AC_SUBST(BUILD_WITH_LIBSNMP_CFLAGS)
 	AC_SUBST(BUILD_WITH_LIBSNMP_LIBS)
 fi
 AM_CONDITIONAL(BUILD_WITH_LIBNETSNMP, test "x$with_libnetsnmp" = "xyes")
 
-with_upsclient_config="libupsclient-config"
-with_upsclient_cflags=""
-with_upsclient_libs=""
-AC_ARG_WITH(libupsclient, [AS_HELP_STRING([--with-libupsclient@<:@=PREFIX@:>@], [Path to libupsclient.])],
-[
-	if test "x$withval" = "xno"
+with_libupsclient="no (pkg-config isn't available)"
+with_libupsclient_cflags=""
+with_libupsclient_libs=""
+if test "x$PKG_CONFIG" != "x"
+then
+	pkg-config --exists 'libupsclient' 2>/dev/null
+	if test "$?" = "0"
 	then
-		with_libupsclient="no"
-	else
-		if test "x$withval" != "xyes"
-		then
-			if test -f "$withval" && test -x "$withval";
-			then
-				with_upsclient_config="$withval"
-			else
-				with_upsclient_config="$withval/bin/libupsclient-config"
-			fi
-		fi
 		with_libupsclient="yes"
+	else
+		with_libupsclient="no (pkg-config doesn't know library)"
 	fi
-],
-[
-	with_libupsclient="yes"
-])
+fi
 if test "x$with_libupsclient" = "xyes"
 then
-	with_upsclient_cflags=`$with_upsclient_config --cflags 2>/dev/null`
-	upsclient_config_status=$?
-
-	if test $upsclient_config_status -ne 0
+	with_libupsclient_cflags="`pkg-config --cflags 'libupsclient'`"
+	if test $? -ne 0
 	then
-		with_libupsclient="no ($with_upsclient_config failed)"
+		with_libupsclient="no"
+	fi
+	with_libupsclient_libs="`pkg-config --libs 'libupsclient'`"
+	if test $? -ne 0
+	then
+		with_libupsclient="no"
 	fi
 fi
 if test "x$with_libupsclient" = "xyes"
 then
 	SAVE_CPPFLAGS="$CPPFLAGS"
-	CPPFLAGS="$CPPFLAGS $with_upsclient_cflags"
+	CPPFLAGS="$CPPFLAGS $with_libupsclient_cflags"
 
 	AC_CHECK_HEADERS(upsclient.h, [], [with_libupsclient="no (upsclient.h not found)"])
 
 	CPPFLAGS="$SAVE_CPPFLAGS"
 fi
 if test "x$with_libupsclient" = "xyes"
 then
-	with_upsclient_libs=`$with_upsclient_config --libs 2>/dev/null`
-	upsclient_config_status=$?
+	SAVE_CPPFLAGS="$CPPFLAGS"
+	SAVE_LDFLAGS="$LDFLAGS"
+
+	CPPFLAGS="$CPPFLAGS $with_libupsclient_cflags"
+	LDFLAGS="$LDFLAGS $with_libupsclient_libs"
 
-	if test $upsclient_config_status -ne 0
-	then
-		with_libupsclient="no ($with_upsclient_config failed)"
-	fi
-fi
-if test "x$with_libupsclient" = "xyes"
-then
 	AC_CHECK_LIB(upsclient, upscli_connect,
-	[
-		BUILD_WITH_LIBUPSCLIENT_CFLAGS="$with_upsclient_cflags"
-		BUILD_WITH_LIBUPSCLIENT_LIBS="$with_upsclient_libs"
-		AC_SUBST(BUILD_WITH_LIBUPSCLIENT_CFLAGS)
-		AC_SUBST(BUILD_WITH_LIBUPSCLIENT_LIBS)
-	],
-	[
-		with_libupsclient="no (symbol 'upscli_connect' not found)"
-	], [$with_upsclient_libs])
+		     [with_libupsclient="yes"],
+		     [with_libupsclient="no (symbol upscli_connect not found)"])
+
+	CPPFLAGS="$SAVE_CPPFLAGS"
+	LDFLAGS="$SAVE_LDFLAGS"
 fi
 if test "x$with_libupsclient" = "xyes"
 then
 	SAVE_CPPFLAGS="$CPPFLAGS"
-	CPPFLAGS="$CPPFLAGS $with_upsclient_cflags"
+	CPPFLAGS="$CPPFLAGS $with_libupsclient_cflags"
 
 	AC_CHECK_TYPES([UPSCONN_t, UPSCONN], [], [],
 [#include <stdlib.h>
 #include <stdio.h>
 #include <upsclient.h>])
 
 	CPPFLAGS="$SAVE_CPPFLAGS"
 fi
-AM_CONDITIONAL(BUILD_WITH_LIBUPSCLIENT, test "x$with_libupsclient" = "xyes")
+if test "x$with_libupsclient" = "xyes"
+then
+	BUILD_WITH_LIBUPSCLIENT_CFLAGS="$with_libupsclient_cflags"
+	BUILD_WITH_LIBUPSCLIENT_LIBS="$with_libupsclient_libs"
+	AC_SUBST(BUILD_WITH_LIBUPSCLIENT_CFLAGS)
+	AC_SUBST(BUILD_WITH_LIBUPSCLIENT_LIBS)
+fi
 
 ### BEGIN of check for libxmms ###
 with_xmms_config="xmms-config"
 with_xmms_cflags=""
 with_xmms_libs=""
 AC_ARG_WITH(libxmms, [AS_HELP_STRING([--with-libxmms@<:@=PREFIX@:>@], [Path to libxmms.])],
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/contrib: collection3
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/contrib/examples/myplugin.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/contrib/examples/myplugin.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/contrib/examples/myplugin.c	2008-05-06 20:30:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/contrib/examples/myplugin.c	2008-07-06 21:25:40.000000000 +0800
@@ -56,12 +56,18 @@
 
 /*
  * data set definition:
  * - name of the data set
  * - number of data sources
  * - list of data sources
+ *
+ * NOTE: If you're defining a custom data-set, you have to make that known to
+ * any servers as well. Else, the server is not able to store values using the
+ * type defined by that data-set.
+ * It is strongly recommended to use one of the types and data-sets
+ * pre-defined in the types.db file.
  */
 static data_set_t ds =
 {
 	"myplugin", STATIC_ARRAY_SIZE (dsrc), dsrc
 };
 
@@ -96,13 +102,14 @@
 	strcpy (vl.plugin, "myplugin");
 	/* optionally set vl.plugin_instance and vl.type_instance to reasonable
 	 * values (default: "") */
 
 	/* dispatch the values to collectd which passes them on to all registered
 	 * write functions - the first argument is used to lookup the data set
-	 * definition */
+	 * definition (it is strongly recommended to use a type defined in the
+	 * types.db file) */
 	plugin_dispatch_values ("myplugin", &vl);
 
 	/* A return value != 0 indicates an error and the plugin will be skipped
 	 * for an increasing amount of time. */
     return 0;
 } /* static int my_read (void) */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/contrib/examples/MyPlugin.pm /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/contrib/examples/MyPlugin.pm
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/contrib/examples/MyPlugin.pm	2008-05-06 20:30:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/contrib/examples/MyPlugin.pm	2008-07-06 21:25:40.000000000 +0800
@@ -18,13 +18,18 @@
 use warnings;
 
 use Collectd qw( :all );
 
 # data set definition:
 # see section "DATA TYPES" in collectd-perl(5) for details
-# (take a look at the types.db file for a large list of predefined data-sets)
+#
+# NOTE: If you're defining a custom data-set, you have to make that known to
+# any servers as well. Else, the server is not able to store values using the
+# type defined by that data-set.
+# It is strongly recommended to use one of the types and data-sets pre-defined
+# in the types.db file.
 my $dataset =
 [
 	{
 		name => 'my_ds',
 		type => DS_TYPE_GAUGE,
 		min  => 0,
@@ -67,13 +72,14 @@
 	$vl->{'values'} = [ rand(65535) ];
 	$vl->{'plugin'} = 'myplugin';
 	# any other elements are optional
 
 	# dispatch the values to collectd which passes them on to all registered
 	# write functions - the first argument is used to lookup the data set
-	# definition
+	# definition (it is strongly recommended to use a type defined in the
+	# types.db file)
 	plugin_dispatch_values ('myplugin', $vl);
 
 	# A false return value indicates an error and the plugin will be skipped
 	# for an increasing amount of time.
 	return 1;
 } # my_read ()
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/apache.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/apache.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/apache.c	2008-05-31 16:32:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/apache.c	2008-07-15 22:32:22.000000000 +0800
@@ -196,15 +196,15 @@
 
 	values[0].counter = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "apache");
-	strcpy (vl.plugin_instance, "");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "apache", sizeof (vl.plugin));
+	sstrncpy (vl.plugin_instance, "", sizeof (vl.plugin_instance));
 
 	if (type_instance != NULL)
 	{
 		strncpy (vl.type_instance, type_instance,
 				sizeof (vl.type_instance));
 		vl.type_instance[sizeof (vl.type_instance) - 1] = '\0';
@@ -221,15 +221,15 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "apache");
-	strcpy (vl.plugin_instance, "");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "apache", sizeof (vl.plugin));
+	sstrncpy (vl.plugin_instance, "", sizeof (vl.plugin_instance));
 
 	if (type_instance != NULL)
 	{
 		strncpy (vl.type_instance, type_instance,
 				sizeof (vl.type_instance));
 		vl.type_instance[sizeof (vl.type_instance) - 1] = '\0';
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/apcups.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/apcups.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/apcups.c	2008-05-31 16:32:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/apcups.c	2008-07-15 22:31:46.000000000 +0800
@@ -370,15 +370,15 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "apcups");
-	strcpy (vl.plugin_instance, "");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "apcups", sizeof (vl.plugin));
+	sstrncpy (vl.plugin_instance, "", sizeof (vl.plugin_instance));
 	strncpy (vl.type_instance, type_inst, sizeof (vl.type_instance));
 
 	plugin_dispatch_values (type, &vl);
 }
 
 static void apc_submit (struct apc_detail_s *apcups_detail)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/apple_sensors.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/apple_sensors.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/apple_sensors.c	2008-05-31 16:32:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/apple_sensors.c	2008-07-15 22:31:46.000000000 +0800
@@ -85,16 +85,16 @@
 
 	values[0].gauge = val;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "apple_sensors");
-	strcpy (vl.plugin_instance, "");
-	strcpy (vl.type_instance, type_instance);
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "apple_sensors", sizeof (vl.plugin));
+	sstrncpy (vl.plugin_instance, "", sizeof (vl.plugin_instance));
+	sstrncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
 	plugin_dispatch_values (type, &vl);
 }
 
 static int as_read (void)
 {
@@ -189,33 +189,33 @@
 			continue;
 
 		/* Found e.g. in the 1.5GHz PowerBooks */
 		if (strcmp (type, "temperature") == 0)
 		{
 			value_double = ((double) value_int) / 65536.0;
-			strcpy (type, "temperature");
+			sstrncpy (type, "temperature", sizeof (type));
 		}
 		else if (strcmp (type, "temp") == 0)
 		{
 			value_double = ((double) value_int) / 10.0;
-			strcpy (type, "temperature");
+			sstrncpy (type, "temperature", sizeof (type));
 		}
 		else if (strcmp (type, "fanspeed") == 0)
 		{
 			value_double = ((double) value_int) / 65536.0;
-			strcpy (type, "fanspeed");
+			sstrncpy (type, "fanspeed", sizeof (type));
 		}
 		else if (strcmp (type, "voltage") == 0)
 		{
 			/* Leave this to the battery plugin. */
 			continue;
 		}
 		else if (strcmp (type, "adc") == 0)
 		{
 			value_double = ((double) value_int) / 10.0;
-			strcpy (type, "fanspeed");
+			sstrncpy (type, "fanspeed", sizeof (type));
 		}
 		else
 		{
 			DEBUG ("apple_sensors: Read unknown sensor type: %s",
 					type);
 			value_double = (double) value_int;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/ascent.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/ascent.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/ascent.c	2008-05-31 16:32:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/ascent.c	2008-07-15 22:32:22.000000000 +0800
@@ -120,14 +120,14 @@
 
   values[0].gauge = value;
 
   vl.values = values;
   vl.values_len = 1;
   vl.time = time (NULL);
-  strcpy (vl.host, hostname_g);
-  strcpy (vl.plugin, "ascent");
+  sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+  sstrncpy (vl.plugin, "ascent", sizeof (vl.plugin));
 
   if (plugin_instance != NULL)
     sstrncpy (vl.plugin_instance, plugin_instance,
         sizeof (vl.plugin_instance));
 
   if (type_instance != NULL)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/battery.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/battery.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/battery.c	2008-05-31 16:32:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/battery.c	2008-07-15 22:31:46.000000000 +0800
@@ -95,15 +95,15 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "battery");
-	strcpy (vl.plugin_instance, plugin_instance);
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "battery", sizeof (vl.plugin));
+	sstrncpy (vl.plugin_instance, plugin_instance, sizeof (vl.plugin_instance));
 
 	plugin_dispatch_values (type, &vl);
 } /* void battery_submit */
 
 #if HAVE_IOKIT_PS_IOPOWERSOURCES_H || HAVE_IOKIT_IOKITLIB_H
 double dict_get_double (CFDictionaryRef dict, char *key_string)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/collectd.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/collectd.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/collectd.1	2008-05-30 23:58:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/collectd.1	2008-07-15 22:47:08.000000000 +0800
@@ -1,7 +1,7 @@
-.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
+.\" Automatically generated by Pod::Man 2.16 (Pod::Simple 3.05)
 .\"
 .\" Standard preamble:
 .\" ========================================================================
 .de Sh \" Subsection heading
 .br
 .if t .Sp
@@ -45,28 +45,31 @@
 .    ds -- \|\(em\|
 .    ds PI \(*p
 .    ds L" ``
 .    ds R" ''
 'br\}
 .\"
+.\" Escape single quotes in literal strings from groff's Unicode transform.
+.ie \n(.g .ds Aq \(aq
+.el       .ds Aq '
+.\"
 .\" If the F register is turned on, we'll generate index entries on stderr for
 .\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
 .\" entries marked with X<> in POD.  Of course, you'll have to process the
 .\" output yourself in some meaningful fashion.
-.if \nF \{\
+.ie \nF \{\
 .    de IX
 .    tm Index:\\$1\t\\n%\t"\\$2"
 ..
 .    nr % 0
 .    rr F
 .\}
-.\"
-.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
-.\" way too many mistakes in technical documents.
-.hy 0
-.if n .na
+.el \{\
+.    de IX
+..
+.\}
 .\"
 .\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
 .\" Fear.  Run.  Save yourself.  No user-serviceable parts.
 .    \" fudge factors for nroff and troff
 .if n \{\
 .    ds #H 0
@@ -126,13 +129,17 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD 1"
-.TH COLLECTD 1 "2008-05-27" "4.4.0.45.gb8e7eed" "collectd"
+.TH COLLECTD 1 "2008-07-15" "4.4.2" "collectd"
+.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
+.\" way too many mistakes in technical documents.
+.if n .ad l
+.nh
 .SH "NAME"
 collectd \- System statistics collection daemon
 .SH "SYNOPSIS"
 .IX Header "SYNOPSIS"
 collectd \fI[options]\fR
 .SH "DESCRIPTION"
@@ -142,27 +149,27 @@
 apart from loading, querying and submitting to plugins. For a description of
 available plugins please see \*(L"\s-1PLUGINS\s0\*(R" below.
 .SH "OPTIONS"
 .IX Header "OPTIONS"
 Most of collectd's configuration is done using using a configfile. See
 \&\fIcollectd.conf\fR\|(5) for an in-depth description of all options.
-.IP "\fB\-C\fR \fI<config-file>\fR" 4
+.IP "\fB\-C\fR \fI<config\-file>\fR" 4
 .IX Item "-C <config-file>"
 Specify an alternative config file. This is the place to go when you wish to
 change \fBcollectd\fR's behavior. The path may be relative to the current working
 directory.
 .IP "\fB\-t\fR" 4
 .IX Item "-t"
 Test the configuration only. The program immediately exits after parsing the
 config file. A return code not equal to zero indicates an error.
-.IP "\fB\-P\fR \fI<pid-file>\fR" 4
+.IP "\fB\-P\fR \fI<pid\-file>\fR" 4
 .IX Item "-P <pid-file>"
 Specify an alternative pid file. This overwrites any settings in the config 
 file. This is thought for init-scripts that require the PID-file in a certain
 directory to work correctly. For everyday-usage use the \fBPIDFile\fR
-config\-option.
+config-option.
 .IP "\fB\-f\fR" 4
 .IX Item "-f"
 Don't fork to the background. \fIcollectd\fR will also \fBnot\fR close standard file
 descriptors, detach from the session nor write a pid file. This is mainly
 thought for 'supervising' init replacements such as \fIrunit\fR.
 .IP "\fB\-h\fR" 4
@@ -181,13 +188,13 @@
 of whatever they where designed to work with and submit these values back to
 the daemon, i. e. they \*(L"dispatch\*(R" the values. As an example, the \f(CW\*(C`cpu plugin\*(C'\fR
 reads the current cpu-counters of time spent in the various modes (user,
 system, nice, ...) and dispatches these counters to the daemon.
 .IP "\(bu" 4
 Output plugins get the dispatched values from the daemon and does something
-with them. Common applications are writing to RRD\-files, CSV-files or sending
+with them. Common applications are writing to RRD-files, CSV-files or sending
 the data over a network link to a remote box.
 .PP
 Of course not all plugins fit neatly into one of the two above categories. The
 \&\f(CW\*(C`network plugin\*(C'\fR, for example, is able to send (i.\ e. \*(L"write\*(R") \fBand\fR
 receive (i.\ e. \*(L"dispatch\*(R") values. Also, it opens a socket upon
 initialization and dispatches the values when it receives them and isn't
@@ -230,6 +237,12 @@
 \&\fIcollectd\-unixsock\fR\|(5),
 \&\fItypes.db\fR\|(5),
 <http://collectd.org/>
 .SH "AUTHOR"
 .IX Header "AUTHOR"
 Florian Forster <octo@verplant.org>
+.SH "POD ERRORS"
+.IX Header "POD ERRORS"
+Hey! \fBThe above document had some coding errors, which are explained below:\fR
+.IP "Around line 119:" 4
+.IX Item "Around line 119:"
+You forgot a '=back' before '=head1'
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/collectd.conf.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/collectd.conf.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/collectd.conf.5	2008-06-03 22:57:25.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/collectd.conf.5	2008-07-15 22:47:09.000000000 +0800
@@ -129,13 +129,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD.CONF 5"
-.TH COLLECTD.CONF 5 "2008-05-31" "4.4.0.19.g3f55088" "collectd"
+.TH COLLECTD.CONF 5 "2008-07-15" "4.4.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd.conf \- Configuration for the system statistics collection daemon \fBcollectd\fR
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/collectd.conf.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/collectd.conf.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/collectd.conf.in	2008-05-31 16:34:36.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/collectd.conf.in	2008-07-15 22:32:22.000000000 +0800
@@ -117,13 +117,13 @@
 #	SocketPerms "0770"
 #	MaxConns 5
 #</Plugin>
 
 #<Plugin exec>
 #	Exec "user:group" "/path/to/exec"
-#	NotificationExec "/path/to/exec"
+#	NotificationExec "user:group" "/path/to/exec"
 #</Plugin>
 
 @BUILD_PLUGIN_HDDTEMP_TRUE@<Plugin hddtemp>
 #	Host "127.0.0.1"
 #	Port "7634"
 @BUILD_PLUGIN_HDDTEMP_TRUE@	TranslateDevicename false
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/collectd.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/collectd.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/collectd.h	2008-05-06 19:45:25.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/collectd.h	2008-07-15 22:32:37.000000000 +0800
@@ -119,14 +119,19 @@
 # define NAN (0.0 / 0.0)
 # ifndef isnan
 #  define isnan(f) ((f) != (f))
 # endif /* !defined(isnan) */
 #endif /* NAN_ZERO_ZERO */
 
+/* Try really, really hard to determine endianess. Under NexentaStor 1.0.2 this
+ * information is in <sys/isa_defs.h>, possibly some other Solaris versions do
+ * this too.. */
 #if HAVE_ENDIAN_H
 # include <endian.h>
+#elif HAVE_SYS_ISA_DEFS_H
+# include <sys/isa_defs.h>
 #endif
 
 #ifndef BYTE_ORDER
 # if defined(_BYTE_ORDER)
 #  define BYTE_ORDER _BYTE_ORDER
 # elif defined(__BYTE_ORDER)
@@ -137,12 +142,32 @@
 # if defined(_BIG_ENDIAN)
 #  define BIG_ENDIAN _BIG_ENDIAN
 # elif defined(__BIG_ENDIAN)
 #  define BIG_ENDIAN __BIG_ENDIAN
 # endif
 #endif
+#ifndef LITTLE_ENDIAN
+# if defined(_LITTLE_ENDIAN)
+#  define LITTLE_ENDIAN _LITTLE_ENDIAN
+# elif defined(__LITTLE_ENDIAN)
+#  define LITTLE_ENDIAN __LITTLE_ENDIAN
+# endif
+#endif
+#ifndef BYTE_ORDER
+# if defined(BIG_ENDIAN) && !defined(LITTLE_ENDIAN)
+#  undef BIG_ENDIAN
+#  define BIG_ENDIAN 4321
+#  define LITTLE_ENDIAN 1234
+#  define BYTE_ORDER BIG_ENDIAN
+# elif !defined(BIG_ENDIAN) && defined(LITTLE_ENDIAN)
+#  undef LITTLE_ENDIAN
+#  define BIG_ENDIAN 4321
+#  define LITTLE_ENDIAN 1234
+#  define BYTE_ORDER LITTLE_ENDIAN
+# endif
+#endif
 #if !defined(BYTE_ORDER) || !defined(BIG_ENDIAN)
 # error "Cannot determine byte order"
 #endif
 
 #if HAVE_DIRENT_H
 # include <dirent.h>
@@ -172,15 +197,12 @@
 #endif
 
 #if HAVE_KSTAT_H
 # include <kstat.h>
 #endif
 
-#if HAVE_PTH_H
-# include <pth.h>
-#endif
 #if HAVE_SENSORS_SENSORS_H
 # include <sensors/sensors.h>
 #endif
 
 #ifndef PACKAGE_NAME
 #define PACKAGE_NAME "collectd"
@@ -217,10 +239,31 @@
 #ifndef COLLECTD_GRP_NAME
 # define COLLECTD_GRP_NAME "collectd"
 #endif
 
 #define STATIC_ARRAY_LEN(array) (sizeof (array) / sizeof ((array)[0]))
 
+/* Remove GNU specific __attribute__ settings when using another compiler */
+#if !__GNUC__
+# define __attribute__(x) /**/
+#endif
+
+#if __GNUC__
+# pragma GCC poison strcpy strcat strtok
+#endif
+
+/* 
+ * Special hack for the perl plugin: Because the later included perl.h defines
+ * a macro which is never used, but contains `sprintf', we cannot poison that
+ * identifies just yet. The parl plugin will do that itself once perl.h is
+ * included.
+ */
+#ifndef DONT_POISON_SPRINTF_YET
+# if __GNUC__
+#  pragma GCC poison sprintf
+# endif
+#endif
+
 extern char hostname_g[];
 extern int  interval_g;
 
 #endif /* COLLECTD_H */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/collectd-perl.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/collectd-perl.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/collectd-perl.5	2008-06-03 22:57:25.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/collectd-perl.5	2008-07-15 22:47:09.000000000 +0800
@@ -129,13 +129,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-PERL 5"
-.TH COLLECTD-PERL 5 "2008-05-31" "4.4.0.19.g3f55088" "collectd"
+.TH COLLECTD-PERL 5 "2008-07-15" "4.4.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-perl \- Documentation of collectd's \f(CW\*(C`perl plugin\*(C'\fR
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/collectd-unixsock.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/collectd-unixsock.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/collectd-unixsock.5	2008-06-03 22:57:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/collectd-unixsock.5	2008-07-15 22:47:10.000000000 +0800
@@ -129,13 +129,13 @@
 .    ds Ae AE
 .\}
 .rm #[ #] #H #V #F C
 .\" ========================================================================
 .\"
 .IX Title "COLLECTD-UNIXSOCK 5"
-.TH COLLECTD-UNIXSOCK 5 "2008-05-31" "4.4.0.19.g3f55088" "collectd"
+.TH COLLECTD-UNIXSOCK 5 "2008-07-15" "4.4.2" "collectd"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
 .nh
 .SH "NAME"
 collectd\-unixsock \- Documentation of collectd's \f(CW\*(C`unixsock plugin\*(C'\fR
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/common.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/common.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/common.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/common.c	2008-07-15 22:31:46.000000000 +0800
@@ -67,18 +67,18 @@
 
 	if (s == NULL)
 		return (NULL);
 
 	if((r = strdup (s)) == NULL)
 	{
-		DEBUG ("Not enough memory.");
-		exit(3);
+		ERROR ("Not enough memory.");
+		exit (3);
 	}
 
 	return (r);
-}
+} /* char *sstrdup */
 
 /* Even though Posix requires "strerror_r" to return an "int",
  * some systems (e.g. the GNU libc) return a "char *" _and_
  * ignore the second argument ... -tokkee */
 char *sstrerror (int errnum, char *buf, size_t buflen)
 {
@@ -128,18 +128,18 @@
 void *smalloc (size_t size)
 {
 	void *r;
 
 	if ((r = malloc (size)) == NULL)
 	{
-		DEBUG("Not enough memory.");
-		exit(3);
+		ERROR ("Not enough memory.");
+		exit (3);
 	}
 
-	return r;
-}
+	return (r);
+} /* void *smalloc */
 
 #if 0
 void sfree (void **ptr)
 {
 	if (ptr == NULL)
 		return;
@@ -221,13 +221,13 @@
 	char *ptr;
 	char *saveptr;
 
 	i = 0;
 	ptr = string;
 	saveptr = NULL;
-	while ((fields[i] = strtok_r (ptr, " \t", &saveptr)) != NULL)
+	while ((fields[i] = strtok_r (ptr, " \t\r\n", &saveptr)) != NULL)
 	{
 		ptr = NULL;
 		i++;
 
 		if (i >= size)
 			break;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/configfile.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/configfile.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/configfile.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/configfile.c	2008-07-15 22:32:37.000000000 +0800
@@ -325,13 +325,13 @@
 	/* Hm, no complex plugin found. Dispatch the values one by one */
 	for (i = 0; i < ci->children_num; i++)
 	{
 		if (ci->children[i].children == NULL)
 			dispatch_value_plugin (name, ci->children + i);
 		else
-			{DEBUG ("No nested config blocks allow for this plugin.");}
+			{DEBUG ("No nested config blocks allowed for this plugin.");}
 	}
 
 	return (0);
 }
 
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/config.h.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/config.h.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/config.h.in	2008-06-04 01:14:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/config.h.in	2008-07-15 22:45:41.000000000 +0800
@@ -730,12 +730,15 @@
 /* Define to 1 if you have the <sys/fs_types.h> header file. */
 #undef HAVE_SYS_FS_TYPES_H
 
 /* Define to 1 if you have the <sys/ioctl.h> header file. */
 #undef HAVE_SYS_IOCTL_H
 
+/* Define to 1 if you have the <sys/isa_defs.h> header file. */
+#undef HAVE_SYS_ISA_DEFS_H
+
 /* Define to 1 if you have the <sys/loadavg.h> header file. */
 #undef HAVE_SYS_LOADAVG_H
 
 /* Define to 1 if you have the <sys/mntent.h> header file. */
 #undef HAVE_SYS_MNTENT_H
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/cpu.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/cpu.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/cpu.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/cpu.c	2008-07-15 22:32:23.000000000 +0800
@@ -177,18 +177,18 @@
 
 	values[0].counter = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "cpu");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "cpu", sizeof (vl.plugin));
 	snprintf (vl.plugin_instance, sizeof (vl.type_instance),
 			"%i", cpu_num);
 	vl.plugin_instance[DATA_MAX_NAME_LEN - 1] = '\0';
-	strcpy (vl.type_instance, type_instance);
+	sstrncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
 	plugin_dispatch_values ("cpu", &vl);
 }
 
 static int cpu_read (void)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/cpufreq.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/cpufreq.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/cpufreq.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/cpufreq.c	2008-07-15 22:31:46.000000000 +0800
@@ -65,14 +65,14 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "cpufreq");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "cpufreq", sizeof (vl.plugin));
 	snprintf (vl.type_instance, sizeof (vl.type_instance),
 			"%i", cpu_num);
 
 	plugin_dispatch_values ("cpufreq", &vl);
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/df.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/df.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/df.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/df.c	2008-07-15 22:31:46.000000000 +0800
@@ -122,15 +122,15 @@
 	values[0].gauge = df_used;
 	values[1].gauge = df_free;
 
 	vl.values = values;
 	vl.values_len = 2;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "df");
-	strcpy (vl.plugin_instance, "");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "df", sizeof (vl.plugin));
+	sstrncpy (vl.plugin_instance, "", sizeof (vl.plugin_instance));
 	strncpy (vl.type_instance, df_name, sizeof (vl.type_instance));
 
 	plugin_dispatch_values ("df", &vl);
 } /* void df_submit */
 
 static int df_read (void)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/disk.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/disk.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/disk.c	2008-06-03 23:14:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/disk.c	2008-07-15 22:32:23.000000000 +0800
@@ -210,14 +210,14 @@
 	values[0].counter = read;
 	values[1].counter = write;
 
 	vl.values = values;
 	vl.values_len = 2;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "disk");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "disk", sizeof (vl.plugin));
 	strncpy (vl.plugin_instance, plugin_instance,
 			sizeof (vl.plugin_instance));
 
 	plugin_dispatch_values (type, &vl);
 } /* void disk_submit */
 
@@ -449,13 +449,13 @@
 		if ((numfields != (14 + fieldshift)) && (numfields != 7))
 			continue;
 
 		major = atoll (fields[0]);
 		minor = atoll (fields[1]);
 
-		disk_name = fields[2];
+		disk_name = fields[2 + fieldshift];
 
 		for (ds = disklist, pre_ds = disklist; ds != NULL; pre_ds = ds, ds = ds->next)
 			if (strcmp (disk_name, ds->name) == 0)
 				break;
 
 		if (ds == NULL)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/dns.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/dns.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/dns.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/dns.c	2008-07-15 22:31:46.000000000 +0800
@@ -296,14 +296,14 @@
 
 	values[0].counter = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "dns");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "dns", sizeof (vl.plugin));
 	strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
 	plugin_dispatch_values (type, &vl);
 } /* void submit_counter */
 
 static void submit_octets (counter_t queries, counter_t responses)
@@ -314,14 +314,14 @@
 	values[0].counter = queries;
 	values[1].counter = responses;
 
 	vl.values = values;
 	vl.values_len = 2;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "dns");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "dns", sizeof (vl.plugin));
 
 	plugin_dispatch_values ("dns_octets", &vl);
 } /* void submit_counter */
 
 static int dns_read (void)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/email.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/email.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/email.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/email.c	2008-07-15 22:32:23.000000000 +0800
@@ -240,13 +240,12 @@
 	return;
 } /* static void type_list_incr (type_list_t *, char *) */
 
 static void *collect (void *arg)
 {
 	collector_t *this = (collector_t *)arg;
-	pthread_t    self = pthread_self ();
 
 	while (1) {
 		int loop = 1;
 
 		conn_t *connection;
 
@@ -266,63 +265,61 @@
 		pthread_mutex_unlock (&conns_mutex);
 
 		/* make the socket available to the global
 		 * thread and connection management */
 		this->socket = connection->socket;
 
-		log_debug ("[thread #%5lu] handling connection on fd #%i",
-				self, fileno (this->socket));
+		log_debug ("collect: handling connection on fd #%i",
+				fileno (this->socket));
 
 		while (loop) {
 			/* 256 bytes ought to be enough for anybody ;-) */
 			char line[256 + 1]; /* line + '\0' */
 			int  len = 0;
 
 			errno = 0;
 			if (NULL == fgets (line, sizeof (line), this->socket)) {
 				loop = 0;
 
 				if (0 != errno) {
 					char errbuf[1024];
-					log_err ("[thread #%5lu] reading from socket (fd #%i) "
-							"failed: %s", self, fileno (this->socket),
+					log_err ("collect: reading from socket (fd #%i) "
+							"failed: %s", fileno (this->socket),
 							sstrerror (errno, errbuf, sizeof (errbuf)));
 				}
 				break;
 			}
 
 			len = strlen (line);
 			if (('\n' != line[len - 1]) && ('\r' != line[len - 1])) {
-				log_warn ("[thread #%5lu] line too long (> %lu characters): "
-						"'%s' (truncated)", self, sizeof (line) - 1, line);
+				log_warn ("collect: line too long (> %zu characters): "
+						"'%s' (truncated)", sizeof (line) - 1, line);
 
 				while (NULL != fgets (line, sizeof (line), this->socket))
 					if (('\n' == line[len - 1]) || ('\r' == line[len - 1]))
 						break;
 				continue;
 			}
 
 			line[len - 1] = '\0';
 
-			log_debug ("[thread #%5lu] line = '%s'", self, line);
+			log_debug ("collect: line = '%s'", line);
 
 			if (':' != line[1]) {
-				log_err ("[thread #%5lu] syntax error in line '%s'",
-						self, line);
+				log_err ("collect: syntax error in line '%s'", line);
 				continue;
 			}
 
 			if ('e' == line[0]) { /* e:<type>:<bytes> */
 				char *ptr  = NULL;
 				char *type = strtok_r (line + 2, ":", &ptr);
 				char *tmp  = strtok_r (NULL, ":", &ptr);
 				int  bytes = 0;
 
 				if (NULL == tmp) {
-					log_err ("[thread #%5lu] syntax error in line '%s'",
-							self, line);
+					log_err ("collect: syntax error in line '%s'", line);
 					continue;
 				}
 
 				bytes = atoi (tmp);
 
 				pthread_mutex_lock (&count_mutex);
@@ -350,13 +347,13 @@
 					pthread_mutex_lock (&check_mutex);
 					type_list_incr (&list_check, type, 1);
 					pthread_mutex_unlock (&check_mutex);
 				} while (NULL != (type = strtok_r (NULL, ",", &ptr)));
 			}
 			else {
-				log_err ("[thread #%5lu] unknown type '%c'", self, line[0]);
+				log_err ("collect: unknown type '%c'", line[0]);
 			}
 		} /* while (loop) */
 
 		log_debug ("[thread #%5lu] shutting down connection on fd #%i",
 				pthread_self (), fileno (this->socket));
 
@@ -393,13 +390,12 @@
 	}
 
 	addr.sun_family = AF_UNIX;
 
 	strncpy (addr.sun_path, path, (size_t)(UNIX_PATH_MAX - 1));
 	addr.sun_path[UNIX_PATH_MAX - 1] = '\0';
-	unlink (addr.sun_path);
 
 	errno = 0;
 	if (-1 == bind (connector_socket, (struct sockaddr *)&addr,
 				offsetof (struct sockaddr_un, sun_path)
 					+ strlen(addr.sun_path))) {
 		char errbuf[1024];
@@ -654,14 +650,14 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "email");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "email", sizeof (vl.plugin));
 	strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
 	plugin_dispatch_values (type, &vl);
 } /* void email_submit */
 
 /* Copy list l1 to list l2. l2 may partly exist already, but it is assumed
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/entropy.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/entropy.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/entropy.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/entropy.c	2008-07-15 22:31:46.000000000 +0800
@@ -36,16 +36,16 @@
 
 	values[0].gauge = entropy;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "entropy");
-	strcpy (vl.plugin_instance, "");
-	strcpy (vl.type_instance, "");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "entropy", sizeof (vl.plugin));
+	sstrncpy (vl.plugin_instance, "", sizeof (vl.plugin_instance));
+	sstrncpy (vl.type_instance, "", sizeof (vl.type_instance));
 
 	plugin_dispatch_values ("entropy", &vl);
 }
 
 static int entropy_read (void)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/hddtemp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/hddtemp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/hddtemp.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/hddtemp.c	2008-07-15 22:31:46.000000000 +0800
@@ -446,14 +446,14 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "hddtemp");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "hddtemp", sizeof (vl.plugin));
 	strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
 	plugin_dispatch_values ("temperature", &vl);
 }
 
 static int hddtemp_read (void)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/interface.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/interface.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/interface.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/interface.c	2008-07-15 22:31:46.000000000 +0800
@@ -194,14 +194,14 @@
 	values[0].counter = rx;
 	values[1].counter = tx;
 
 	vl.values = values;
 	vl.values_len = 2;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "interface");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "interface", sizeof (vl.plugin));
 	strncpy (vl.type_instance, dev, sizeof (vl.type_instance));
 
 	plugin_dispatch_values (type, &vl);
 } /* void if_submit */
 
 static int interface_read (void)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/ipmi.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/ipmi.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/ipmi.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/ipmi.c	2008-07-15 22:32:28.000000000 +0800
@@ -70,13 +70,13 @@
   char errbuf[4096];
 
   memset (errbuf, 0, sizeof (errbuf));
 
   if (IPMI_IS_OS_ERR (status))
   {
-    sstrerror_r (IPMI_GET_OS_ERR (status), errbuf, sizeof (errbuf));
+    sstrerror (IPMI_GET_OS_ERR (status), errbuf, sizeof (errbuf));
   }
   else if (IPMI_IS_IPMI_ERR (status))
   {
     ipmi_get_error_string (IPMI_GET_IPMI_ERR (status), errbuf, sizeof (errbuf));
   }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/iptables.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/iptables.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/iptables.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/iptables.c	2008-07-15 22:32:23.000000000 +0800
@@ -218,14 +218,14 @@
 	    return (0);
     }
 
     vl.values = values;
     vl.values_len = 1;
     vl.time = time (NULL);
-    strcpy (vl.host, hostname_g);
-    strcpy (vl.plugin, "iptables");
+    sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+    sstrncpy (vl.plugin, "iptables", sizeof (vl.plugin));
 
     status = snprintf (vl.plugin_instance, sizeof (vl.plugin_instance),
 	    "%s-%s", chain->table, chain->chain);
     if ((status < 1) || ((unsigned int)status >= sizeof (vl.plugin_instance)))
 	return (0);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/ipvs.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/ipvs.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/ipvs.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/ipvs.c	2008-07-15 22:31:46.000000000 +0800
@@ -235,16 +235,16 @@
 	vl.values     = values;
 	vl.values_len = 1;
 
 	vl.time     = time (NULL);
 	vl.interval = interval_g;
 
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "ipvs");
-	strcpy (vl.plugin_instance, pi);
-	strcpy (vl.type_instance, (NULL != ti) ? ti : "total");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "ipvs", sizeof (vl.plugin));
+	sstrncpy (vl.plugin_instance, pi, sizeof (vl.plugin_instance));
+	sstrncpy (vl.type_instance, (NULL != ti) ? ti : "total", sizeof (vl.type_instance));
 
 	plugin_dispatch_values ("connections", &vl);
 	return;
 } /* cipvs_submit_connections */
 
 static void cipvs_submit_if (char *pi, char *t, char *ti,
@@ -259,16 +259,16 @@
 	vl.values     = values;
 	vl.values_len = 2;
 
 	vl.time     = time (NULL);
 	vl.interval = interval_g;
 
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "ipvs");
-	strcpy (vl.plugin_instance, pi);
-	strcpy (vl.type_instance, (NULL != ti) ? ti : "total");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "ipvs", sizeof (vl.plugin));
+	sstrncpy (vl.plugin_instance, pi, sizeof (vl.plugin_instance));
+	sstrncpy (vl.type_instance, (NULL != ti) ? ti : "total", sizeof (vl.type_instance));
 
 	plugin_dispatch_values (t, &vl);
 	return;
 } /* cipvs_submit_if */
 
 static void cipvs_submit_dest (char *pi, struct ip_vs_dest_entry *de) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/irq.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/irq.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/irq.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/irq.c	2008-07-15 22:31:46.000000000 +0800
@@ -129,14 +129,14 @@
 
 	values[0].counter = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "irq");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "irq", sizeof (vl.plugin));
 
 	status = snprintf (vl.type_instance, sizeof (vl.type_instance),
 			"%u", irq);
 	if ((status < 1) || ((unsigned int)status >= sizeof (vl.type_instance)))
 		return;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/liboconfig/scanner.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/liboconfig/scanner.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/liboconfig/scanner.c	2007-10-25 01:27:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/liboconfig/scanner.c	2008-07-15 22:45:47.000000000 +0800
@@ -5,13 +5,13 @@
 
 /* A lexical scanner generated by flex */
 
 #define FLEX_SCANNER
 #define YY_FLEX_MAJOR_VERSION 2
 #define YY_FLEX_MINOR_VERSION 5
-#define YY_FLEX_SUBMINOR_VERSION 33
+#define YY_FLEX_SUBMINOR_VERSION 35
 #if YY_FLEX_SUBMINOR_VERSION > 0
 #define FLEX_BETA
 #endif
 
 /* First, we deal with  platform-specific or compiler-specific issues. */
 
@@ -27,13 +27,13 @@
 
 #ifndef FLEXINT_H
 #define FLEXINT_H
 
 /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
 
-#if __STDC_VERSION__ >= 199901L
+#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
 
 /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
  * if you want the limit (max/min) macros for int types. 
  */
 #ifndef __STDC_LIMIT_MACROS
 #define __STDC_LIMIT_MACROS 1
@@ -50,13 +50,12 @@
 typedef signed char flex_int8_t;
 typedef short int flex_int16_t;
 typedef int flex_int32_t;
 typedef unsigned char flex_uint8_t; 
 typedef unsigned short int flex_uint16_t;
 typedef unsigned int flex_uint32_t;
-#endif /* ! C99 */
 
 /* Limits of integral types. */
 #ifndef INT8_MIN
 #define INT8_MIN               (-128)
 #endif
 #ifndef INT16_MIN
@@ -81,26 +80,29 @@
 #define UINT16_MAX             (65535U)
 #endif
 #ifndef UINT32_MAX
 #define UINT32_MAX             (4294967295U)
 #endif
 
+#endif /* ! C99 */
+
 #endif /* ! FLEXINT_H */
 
 #ifdef __cplusplus
 
 /* The "const" storage-class-modifier is valid. */
 #define YY_USE_CONST
 
 #else	/* ! __cplusplus */
 
-#if __STDC__
+/* C99 requires __STDC__ to be defined as 1. */
+#if defined (__STDC__)
 
 #define YY_USE_CONST
 
-#endif	/* __STDC__ */
+#endif	/* defined (__STDC__) */
 #endif	/* ! __cplusplus */
 
 #ifdef YY_USE_CONST
 #define yyconst const
 #else
 #define yyconst
@@ -187,20 +189,15 @@
 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
 		} \
 	while ( 0 )
 
 #define unput(c) yyunput( c, (yytext_ptr)  )
 
-/* The following is because we cannot portably get our hands on size_t
- * (without autoconf's help, which isn't available because we want
- * flex-generated scanners to compile on their own).
- */
-
 #ifndef YY_TYPEDEF_YY_SIZE_T
 #define YY_TYPEDEF_YY_SIZE_T
-typedef unsigned int yy_size_t;
+typedef size_t yy_size_t;
 #endif
 
 #ifndef YY_STRUCT_YY_BUFFER_STATE
 #define YY_STRUCT_YY_BUFFER_STATE
 struct yy_buffer_state
 	{
@@ -345,13 +342,13 @@
 	}
 
 #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
 
 /* Begin user sect3 */
 
-#define yywrap() 1
+#define yywrap(n) 1
 #define YY_SKIP_YYWRAP
 
 typedef unsigned char YY_CHAR;
 
 FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
 
@@ -614,13 +611,13 @@
  */
 #line 20 "scanner.l"
 #include <stdlib.h>
 #include "oconfig.h"
 #include "aux_types.h"
 #include "parser.h"
-#line 621 "scanner.c"
+#line 618 "scanner.c"
 
 #define INITIAL 0
 
 #ifndef YY_NO_UNISTD_H
 /* Special case for "unistd.h", since it is non-ANSI. We include it way
  * down here because we want the user's section 1 to have been scanned first.
@@ -632,12 +629,41 @@
 #ifndef YY_EXTRA_TYPE
 #define YY_EXTRA_TYPE void *
 #endif
 
 static int yy_init_globals (void );
 
+/* Accessor methods to globals.
+   These are made visible to non-reentrant scanners for convenience. */
+
+int yylex_destroy (void );
+
+int yyget_debug (void );
+
+void yyset_debug (int debug_flag  );
+
+YY_EXTRA_TYPE yyget_extra (void );
+
+void yyset_extra (YY_EXTRA_TYPE user_defined  );
+
+FILE *yyget_in (void );
+
+void yyset_in  (FILE * in_str  );
+
+FILE *yyget_out (void );
+
+void yyset_out  (FILE * out_str  );
+
+int yyget_leng (void );
+
+char *yyget_text (void );
+
+int yyget_lineno (void );
+
+void yyset_lineno (int line_number  );
+
 /* Macros after this point can all be overridden by user definitions in
  * section 1.
  */
 
 #ifndef YY_SKIP_YYWRAP
 #ifdef __cplusplus
@@ -674,13 +700,13 @@
 
 /* Copy whatever the last rule matched to the standard output. */
 #ifndef ECHO
 /* This used to be an fputs(), but since the string might contain NUL's,
  * we now use fwrite().
  */
-#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
+#define ECHO fwrite( yytext, yyleng, 1, yyout )
 #endif
 
 /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
  * is returned in "result".
  */
 #ifndef YY_INPUT
@@ -769,13 +795,13 @@
 	register yy_state_type yy_current_state;
 	register char *yy_cp, *yy_bp;
 	register int yy_act;
     
 #line 42 "scanner.l"
 
-#line 776 "scanner.c"
+#line 802 "scanner.c"
 
 	if ( !(yy_init) )
 		{
 		(yy_init) = 1;
 
 #ifdef YY_USER_INIT
@@ -926,13 +952,13 @@
 	YY_BREAK
 case 13:
 YY_RULE_SETUP
 #line 59 "scanner.l"
 ECHO;
 	YY_BREAK
-#line 933 "scanner.c"
+#line 959 "scanner.c"
 case YY_STATE_EOF(INITIAL):
 	yyterminate();
 
 	case YY_END_OF_BUFFER:
 		{
 		/* Amount of text matched not including the EOB char. */
@@ -1181,12 +1207,20 @@
 			}
 		}
 
 	else
 		ret_val = EOB_ACT_CONTINUE_SCAN;
 
+	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
+		/* Extend the array by 50%, plus the number we really need. */
+		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
+		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
+		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
+			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
+	}
+
 	(yy_n_chars) += number_to_move;
 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
 
 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
 
@@ -1605,13 +1639,15 @@
 		 * immediate realloc on the next call.
          */
 		num_to_alloc = 1;
 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
 								(num_to_alloc * sizeof(struct yy_buffer_state*)
 								);
-		
+		if ( ! (yy_buffer_stack) )
+			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
+								  
 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
 				
 		(yy_buffer_stack_max) = num_to_alloc;
 		(yy_buffer_stack_top) = 0;
 		return;
 	}
@@ -1623,12 +1659,14 @@
 
 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
 								((yy_buffer_stack),
 								num_to_alloc * sizeof(struct yy_buffer_state*)
 								);
+		if ( ! (yy_buffer_stack) )
+			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
 
 		/* zero only the new slots.*/
 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
 		(yy_buffer_stack_max) = num_to_alloc;
 	}
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/libvirt.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/libvirt.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/libvirt.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/libvirt.c	2008-07-15 22:31:46.000000000 +0800
@@ -664,13 +664,13 @@
         if (hostname_format[i] == hf_none)
             continue;
 
         n = DATA_MAX_NAME_LEN - strlen (vl->host) - 2;
 
         if (i > 0 && n >= 1) {
-            strcat (vl->host, ":");
+            strncat (vl->host, ":", 1);
             n--;
         }
 
         switch (hostname_format[i]) {
         case hf_none: break;
         case hf_hostname:
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/load.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/load.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/load.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/load.c	2008-07-15 22:31:46.000000000 +0800
@@ -48,14 +48,14 @@
 	values[1].gauge = mnum;
 	values[2].gauge = lnum;
 
 	vl.values = values;
 	vl.values_len = STATIC_ARRAY_SIZE (values);
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "load");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "load", sizeof (vl.plugin));
 
 	plugin_dispatch_values ("load", &vl);
 }
 
 static int load_read (void)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/mbmon.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/mbmon.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/mbmon.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/mbmon.c	2008-07-15 22:31:46.000000000 +0800
@@ -225,14 +225,14 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "mbmon");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "mbmon", sizeof (vl.plugin));
 	strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
 	plugin_dispatch_values (type, &vl);
 } /* void mbmon_submit */
 
 /* Trim trailing whitespace from a string. */
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/memcached.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/memcached.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/memcached.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/memcached.c	2008-07-15 22:31:46.000000000 +0800
@@ -221,14 +221,14 @@
 
 	values[0].counter = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "memcached");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "memcached", sizeof (vl.plugin));
 	if (type_inst != NULL)
 	{
 		strncpy (vl.type_instance, type_inst, sizeof (vl.type_instance));
 		vl.type_instance[sizeof (vl.type_instance) - 1] = '\0';
 	}
 
@@ -245,14 +245,14 @@
 	values[0].counter = value0;
 	values[1].counter = value1;
 
 	vl.values = values;
 	vl.values_len = 2;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "memcached");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "memcached", sizeof (vl.plugin));
 	if (type_inst != NULL)
 	{
 		strncpy (vl.type_instance, type_inst, sizeof (vl.type_instance));
 		vl.type_instance[sizeof (vl.type_instance) - 1] = '\0';
 	}
 
@@ -268,14 +268,14 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "memcached");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "memcached", sizeof (vl.plugin));
 	if (type_inst != NULL)
 	{
 		strncpy (vl.type_instance, type_inst, sizeof (vl.type_instance));
 		vl.type_instance[sizeof (vl.type_instance) - 1] = '\0';
 	}
 
@@ -292,14 +292,14 @@
 	values[0].gauge = value0;
 	values[1].gauge = value1;
 
 	vl.values = values;
 	vl.values_len = 2;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "memcached");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "memcached", sizeof (vl.plugin));
 	if (type_inst != NULL)
 	{
 		strncpy (vl.type_instance, type_inst, sizeof (vl.type_instance));
 		vl.type_instance[sizeof (vl.type_instance) - 1] = '\0';
 	}
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/memory.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/memory.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/memory.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/memory.c	2008-07-15 22:31:46.000000000 +0800
@@ -106,14 +106,14 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "memory");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "memory", sizeof (vl.plugin));
 	strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 	vl.type_instance[sizeof (vl.type_instance) - 1] = '\0';
 
 	plugin_dispatch_values ("memory", &vl);
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/multimeter.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/multimeter.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/multimeter.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/multimeter.c	2008-07-15 22:31:46.000000000 +0800
@@ -213,14 +213,14 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "multimeter");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "multimeter", sizeof (vl.plugin));
 
 	plugin_dispatch_values ("multimeter", &vl);
 }
 
 static int multimeter_read (void)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/mysql.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/mysql.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/mysql.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/mysql.c	2008-07-15 22:31:46.000000000 +0800
@@ -123,14 +123,14 @@
 
 	values[0].counter = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "mysql");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "mysql", sizeof (vl.plugin));
 	strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
 	plugin_dispatch_values (type, &vl);
 } /* void counter_submit */
 
 static void qcache_submit (counter_t hits, counter_t inserts,
@@ -146,14 +146,14 @@
 	values[3].counter = lowmem_prunes;
 	values[4].gauge   = queries_in_cache;
 
 	vl.values = values;
 	vl.values_len = 5;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "mysql");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "mysql", sizeof (vl.plugin));
 
 	plugin_dispatch_values ("mysql_qcache", &vl);
 } /* void qcache_submit */
 
 static void threads_submit (gauge_t running, gauge_t connected, gauge_t cached,
 		counter_t created)
@@ -166,14 +166,14 @@
 	values[2].gauge   = cached;
 	values[3].counter = created;
 
 	vl.values = values;
 	vl.values_len = 4;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "mysql");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "mysql", sizeof (vl.plugin));
 
 	plugin_dispatch_values ("mysql_threads", &vl);
 } /* void threads_submit */
 
 static void traffic_submit (counter_t rx, counter_t tx)
 {
@@ -183,14 +183,14 @@
 	values[0].counter = rx;
 	values[1].counter = tx;
 
 	vl.values = values;
 	vl.values_len = 2;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "mysql");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "mysql", sizeof (vl.plugin));
 
 	plugin_dispatch_values ("mysql_octets", &vl);
 } /* void traffic_submit */
 
 static int mysql_read (void)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/netlink.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/netlink.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/netlink.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/netlink.c	2008-07-15 22:31:46.000000000 +0800
@@ -168,14 +168,14 @@
 
   values[0].counter = value;
 
   vl.values = values;
   vl.values_len = 1;
   vl.time = time (NULL);
-  strcpy (vl.host, hostname_g);
-  strcpy (vl.plugin, "netlink");
+  sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+  sstrncpy (vl.plugin, "netlink", sizeof (vl.plugin));
   strncpy (vl.plugin_instance, dev, sizeof (vl.plugin_instance));
 
   if (type_instance != NULL)
     strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
   plugin_dispatch_values (type, &vl);
@@ -191,14 +191,14 @@
   values[0].counter = rx;
   values[1].counter = tx;
 
   vl.values = values;
   vl.values_len = 2;
   vl.time = time (NULL);
-  strcpy (vl.host, hostname_g);
-  strcpy (vl.plugin, "netlink");
+  sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+  sstrncpy (vl.plugin, "netlink", sizeof (vl.plugin));
   strncpy (vl.plugin_instance, dev, sizeof (vl.plugin_instance));
 
   if (type_instance != NULL)
     strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
   plugin_dispatch_values (type, &vl);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/network.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/network.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/network.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/network.c	2008-07-15 22:32:23.000000000 +0800
@@ -180,13 +180,13 @@
 static value_list_t send_buffer_vl = VALUE_LIST_STATIC;
 static char         send_buffer_type[DATA_MAX_NAME_LEN];
 static pthread_mutex_t send_buffer_lock = PTHREAD_MUTEX_INITIALIZER;
 
 static c_avl_tree_t      *cache_tree = NULL;
 static pthread_mutex_t  cache_lock = PTHREAD_MUTEX_INITIALIZER;
-static time_t           cache_flush_last;
+static time_t           cache_flush_last = 0;
 static int              cache_flush_interval = 1800;
 
 /*
  * Private functions
  */
 static int cache_flush (void)
@@ -1402,13 +1402,13 @@
 
 	if (strcmp (vl_def->host, vl->host) != 0)
 	{
 		if (write_part_string (&buffer, &buffer_size, TYPE_HOST,
 					vl->host, strlen (vl->host)) != 0)
 			return (-1);
-		strcpy (vl_def->host, vl->host);
+		sstrncpy (vl_def->host, vl->host, sizeof (vl_def->host));
 	}
 
 	if (vl_def->time != vl->time)
 	{
 		if (write_part_number (&buffer, &buffer_size, TYPE_TIME,
 					(uint64_t) vl->time))
@@ -1426,39 +1426,39 @@
 
 	if (strcmp (vl_def->plugin, vl->plugin) != 0)
 	{
 		if (write_part_string (&buffer, &buffer_size, TYPE_PLUGIN,
 					vl->plugin, strlen (vl->plugin)) != 0)
 			return (-1);
-		strcpy (vl_def->plugin, vl->plugin);
+		sstrncpy (vl_def->plugin, vl->plugin, sizeof (vl_def->plugin));
 	}
 
 	if (strcmp (vl_def->plugin_instance, vl->plugin_instance) != 0)
 	{
 		if (write_part_string (&buffer, &buffer_size, TYPE_PLUGIN_INSTANCE,
 					vl->plugin_instance,
 					strlen (vl->plugin_instance)) != 0)
 			return (-1);
-		strcpy (vl_def->plugin_instance, vl->plugin_instance);
+		sstrncpy (vl_def->plugin_instance, vl->plugin_instance, sizeof (vl_def->plugin_instance));
 	}
 
 	if (strcmp (type_def, ds->type) != 0)
 	{
 		if (write_part_string (&buffer, &buffer_size, TYPE_TYPE,
 					ds->type, strlen (ds->type)) != 0)
 			return (-1);
-		strcpy (type_def, ds->type);
+		sstrncpy (type_def, ds->type, sizeof (type_def));
 	}
 
 	if (strcmp (vl_def->type_instance, vl->type_instance) != 0)
 	{
 		if (write_part_string (&buffer, &buffer_size, TYPE_TYPE_INSTANCE,
 					vl->type_instance,
 					strlen (vl->type_instance)) != 0)
 			return (-1);
-		strcpy (vl_def->type_instance, vl->type_instance);
+		sstrncpy (vl_def->type_instance, vl->type_instance, sizeof (vl_def->type_instance));
 	}
 	
 	if (write_part_values (&buffer, &buffer_size, ds, vl) != 0)
 		return (-1);
 
 	return (buffer - buffer_orig);
@@ -1703,17 +1703,25 @@
 
 	plugin_unregister_config ("network");
 	plugin_unregister_init ("network");
 	plugin_unregister_write ("network");
 	plugin_unregister_shutdown ("network");
 
+	/* Let the init function do it's move again ;) */
+	cache_flush_last = 0;
+
 	return (0);
 } /* int network_shutdown */
 
 static int network_init (void)
 {
+	/* Check if we were already initialized. If so, just return - there's
+	 * nothing more to do (for now, that is). */
+	if (cache_flush_last != 0)
+		return (0);
+
 	plugin_register_shutdown ("network", network_shutdown);
 
 	send_buffer_ptr  = send_buffer;
 	send_buffer_fill = 0;
 	memset (&send_buffer_vl, '\0', sizeof (send_buffer_vl));
 	memset (send_buffer_type, '\0', sizeof (send_buffer_type));
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/nfs.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/nfs.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/nfs.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/nfs.c	2008-07-15 22:31:46.000000000 +0800
@@ -185,14 +185,14 @@
 	value_list_t vl = VALUE_LIST_INIT;
 	int i;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "nfs");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "nfs", sizeof (vl.plugin));
 	strncpy (vl.plugin_instance, plugin_instance,
 		       	sizeof (vl.plugin_instance));
 
 	for (i = 0; i < len; i++)
 	{
 		values[0].counter = val[i];
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/nginx.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/nginx.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/nginx.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/nginx.c	2008-07-15 22:32:23.000000000 +0800
@@ -174,15 +174,15 @@
   else
     return;
 
   vl.values = values;
   vl.values_len = 1;
   vl.time = time (NULL);
-  strcpy (vl.host, hostname_g);
-  strcpy (vl.plugin, "nginx");
-  strcpy (vl.plugin_instance, "");
+  sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+  sstrncpy (vl.plugin, "nginx", sizeof (vl.plugin));
+  sstrncpy (vl.plugin_instance, "", sizeof (vl.plugin_instance));
 
   if (inst != NULL)
   {
     strncpy (vl.type_instance, inst, sizeof (vl.type_instance));
     vl.type_instance[sizeof (vl.type_instance) - 1] = '\0';
   }
@@ -194,12 +194,13 @@
 {
   int i;
 
   char *ptr;
   char *lines[16];
   int   lines_num = 0;
+  char *saveptr;
 
   char *fields[16];
   int   fields_num;
 
   if (curl == NULL)
     return (-1);
@@ -211,13 +212,14 @@
   {
     WARNING ("nginx plugin: curl_easy_perform failed: %s", nginx_curl_error);
     return (-1);
   }
 
   ptr = nginx_buffer;
-  while ((lines[lines_num] = strtok (ptr, "\n\r")) != NULL)
+  saveptr = NULL;
+  while ((lines[lines_num] = strtok_r (ptr, "\n\r", &saveptr)) != NULL)
   {
     ptr = NULL;
     lines_num++;
 
     if (lines_num >= 16)
       break;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/ntpd.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/ntpd.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/ntpd.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/ntpd.c	2008-07-15 22:32:37.000000000 +0800
@@ -65,13 +65,13 @@
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * The following definitions were copied from the NTPd distribution  *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 #define MAXFILENAME 128
 #define MAXSEQ  127
 #define MODE_PRIVATE 7
-#define NTP_OLDVERSION ((u_char) 1) /* oldest credible version */
+#define NTP_OLDVERSION ((uint8_t) 1) /* oldest credible version */
 #define IMPL_XNTPD 3
 #define FP_FRAC 65536.0
 
 #define REFCLOCK_ADDR 0x7f7f0000 /* 127.127.0.0 */
 #define REFCLOCK_MASK 0xffff0000 /* 255.255.0.0 */
 
@@ -114,33 +114,33 @@
  */
 #define	RESP_BIT	0x80
 #define	MORE_BIT	0x40
 
 #define	ISRESPONSE(rm_vn_mode)	(((rm_vn_mode)&RESP_BIT)!=0)
 #define	ISMORE(rm_vn_mode)	(((rm_vn_mode)&MORE_BIT)!=0)
-#define INFO_VERSION(rm_vn_mode) ((u_char)(((rm_vn_mode)>>3)&0x7))
+#define INFO_VERSION(rm_vn_mode) ((uint8_t)(((rm_vn_mode)>>3)&0x7))
 #define	INFO_MODE(rm_vn_mode)	((rm_vn_mode)&0x7)
 
 #define	RM_VN_MODE(resp, more, version)		\
-				((u_char)(((resp)?RESP_BIT:0)\
+				((uint8_t)(((resp)?RESP_BIT:0)\
 				|((more)?MORE_BIT:0)\
 				|((version?version:(NTP_OLDVERSION+1))<<3)\
 				|(MODE_PRIVATE)))
 
 #define	INFO_IS_AUTH(auth_seq)	(((auth_seq) & 0x80) != 0)
 #define	INFO_SEQ(auth_seq)	((auth_seq)&0x7f)
-#define	AUTH_SEQ(auth, seq)	((u_char)((((auth)!=0)?0x80:0)|((seq)&0x7f)))
+#define	AUTH_SEQ(auth, seq)	((uint8_t)((((auth)!=0)?0x80:0)|((seq)&0x7f)))
 
-#define	INFO_ERR(err_nitems)	((u_short)((ntohs(err_nitems)>>12)&0xf))
-#define	INFO_NITEMS(err_nitems)	((u_short)(ntohs(err_nitems)&0xfff))
-#define	ERR_NITEMS(err, nitems)	(htons((u_short)((((u_short)(err)<<12)&0xf000)\
-				|((u_short)(nitems)&0xfff))))
+#define	INFO_ERR(err_nitems)	((uint16_t)((ntohs(err_nitems)>>12)&0xf))
+#define	INFO_NITEMS(err_nitems)	((uint16_t)(ntohs(err_nitems)&0xfff))
+#define	ERR_NITEMS(err, nitems)	(htons((uint16_t)((((uint16_t)(err)<<12)&0xf000)\
+				|((uint16_t)(nitems)&0xfff))))
 
 #define	INFO_MBZ(mbz_itemsize)	((ntohs(mbz_itemsize)>>12)&0xf)
-#define	INFO_ITEMSIZE(mbz_itemsize)	((u_short)(ntohs(mbz_itemsize)&0xfff))
-#define	MBZ_ITEMSIZE(itemsize)	(htons((u_short)(itemsize)))
+#define	INFO_ITEMSIZE(mbz_itemsize)	((uint16_t)(ntohs(mbz_itemsize)&0xfff))
+#define	MBZ_ITEMSIZE(itemsize)	(htons((uint16_t)(itemsize)))
 
 /* negate a long float type */
 #define M_NEG(v_i, v_f) \
 	do { \
 		if ((v_f) == 0) \
 		(v_i) = -((uint32_t)(v_i)); \
@@ -299,15 +299,15 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "ntpd");
-	strcpy (vl.plugin_instance, "");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "ntpd", sizeof (vl.plugin));
+	sstrncpy (vl.plugin_instance, "", sizeof (vl.plugin_instance));
 	strncpy (vl.type_instance, type_inst, sizeof (vl.type_instance));
 
 	plugin_dispatch_values (type, &vl);
 }
 
 /* returns `tv0 - tv1' in milliseconds or 0 if `tv1 > tv0' */
@@ -609,14 +609,14 @@
 				&& (pkt_item_len <= res_item_size));
 
 		/* Calculate the padding. No idea why there might be any padding.. */
 		pkt_padding = 0;
 		if (pkt_item_len < res_item_size)
 			pkt_padding = res_item_size - pkt_item_len;
-		DEBUG ("res_item_size = %i; pkt_padding = %i;",
-				res_item_size, (int) pkt_padding);
+		DEBUG ("res_item_size = %i; pkt_padding = %zi;",
+				res_item_size, pkt_padding);
 
 		/* Extract the sequence number */
 		pkt_sequence = INFO_SEQ (res.auth_seq);
 		if ((pkt_sequence < 0) || (pkt_sequence > MAXSEQ))
 		{
 			ERROR ("ntpd plugin: Received packet with sequence %i",
@@ -648,14 +648,14 @@
 		}
 
 		/*
 		 * Enough with the checks. Copy the data now.
 		 * We start by allocating some more memory.
 		 */
-		DEBUG ("realloc (%p, %i)", (void *) *res_data,
-				(int) (items_num + pkt_item_num) * res_item_size);
+		DEBUG ("realloc (%p, %zu)", (void *) *res_data,
+				(items_num + pkt_item_num) * res_item_size);
 		items = realloc ((void *) *res_data,
 				(items_num + pkt_item_num) * res_item_size);
 		if (items == NULL)
 		{
 			items = *res_data;
 			ERROR ("ntpd plugin: realloc failed.");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/nut.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/nut.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/nut.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/nut.c	2008-07-15 22:31:46.000000000 +0800
@@ -126,13 +126,13 @@
   vl.time = time (NULL);
   strncpy (vl.host,
       (strcasecmp (ups->hostname, "localhost") == 0)
       ? hostname_g
       : ups->hostname,
       sizeof (vl.host));
-  strcpy (vl.plugin, "nut");
+  sstrncpy (vl.plugin, "nut", sizeof (vl.plugin));
   strncpy (vl.plugin_instance, ups->upsname, sizeof (vl.plugin_instance));
   strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
   vl.host[sizeof (vl.host) - 1] = '\0';
   vl.plugin_instance[sizeof (vl.plugin_instance) - 1] = '\0';
   vl.type_instance[sizeof (vl.type_instance) - 1] = '\0';
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/perl.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/perl.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/perl.c	2008-06-03 22:36:04.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/perl.c	2008-07-15 22:32:37.000000000 +0800
@@ -24,19 +24,25 @@
  * interface for collectd plugins written in perl.
  */
 
 /* do not automatically get the thread specific perl interpreter */
 #define PERL_NO_GET_CONTEXT
 
+#define DONT_POISON_SPRINTF_YET 1
 #include "collectd.h"
+#undef DONT_POISON_SPRINTF_YET
 
 #include "configfile.h"
 
 #include <EXTERN.h>
 #include <perl.h>
 
+#if __GNUC__
+# pragma GCC poison sprintf
+#endif
+
 #include <XSUB.h>
 
 /* Some versions of Perl define their own version of DEBUG... :-/ */
 #ifdef DEBUG
 # undef DEBUG
 #endif /* DEBUG */
@@ -556,13 +562,13 @@
 
 	if (NULL != (tmp = hv_fetch (values, "host", 4, 0))) {
 		strncpy (list.host, SvPV_nolen (*tmp), DATA_MAX_NAME_LEN);
 		list.host[DATA_MAX_NAME_LEN - 1] = '\0';
 	}
 	else {
-		strcpy (list.host, hostname_g);
+		sstrncpy (list.host, hostname_g, sizeof (list.host));
 	}
 
 	if (NULL != (tmp = hv_fetch (values, "plugin", 6, 0))) {
 		strncpy (list.plugin, SvPV_nolen (*tmp), DATA_MAX_NAME_LEN);
 		list.plugin[DATA_MAX_NAME_LEN - 1] = '\0';
 	}
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/ping.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/ping.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/ping.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/ping.c	2008-07-15 22:31:47.000000000 +0800
@@ -183,15 +183,15 @@
 
 	values[0].gauge = latency;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "ping");
-	strcpy (vl.plugin_instance, "");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "ping", sizeof (vl.plugin));
+	sstrncpy (vl.plugin_instance, "", sizeof (vl.plugin_instance));
 	strncpy (vl.type_instance, host, sizeof (vl.type_instance));
 
 	plugin_dispatch_values ("ping", &vl);
 }
 
 static int ping_read (void)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/plugin.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/plugin.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/plugin.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/plugin.c	2008-07-15 22:32:23.000000000 +0800
@@ -577,46 +577,52 @@
 void plugin_init_all (void)
 {
 	int (*callback) (void);
 	llentry_t *le;
 	int status;
 
-	/* Start read-threads */
-	if (list_read != NULL)
-	{
-		const char *rt;
-		int num;
-		rt = global_option_get ("ReadThreads");
-		num = atoi (rt);
-		start_threads ((num > 0) ? num : 5);
-	}
-
 	/* Init the value cache */
 	uc_init ();
 
-	if (list_init == NULL)
+	if ((list_init == NULL) && (list_read == NULL))
 		return;
 
+	/* Calling all init callbacks before checking if read callbacks
+	 * are available allows the init callbacks to register the read
+	 * callback. */
 	le = llist_head (list_init);
 	while (le != NULL)
 	{
 		callback = (int (*) (void)) le->value;
 		status = (*callback) ();
 
 		if (status != 0)
 		{
 			ERROR ("Initialization of plugin `%s' "
 					"failed with status %i. "
 					"Plugin will be unloaded.",
 					le->key, status);
+			/* Plugins that register read callbacks from the init
+			 * callback should take care of appropriate error
+			 * handling themselves. */
 			/* FIXME: Unload _all_ functions */
 			plugin_unregister_read (le->key);
 		}
 
 		le = le->next;
 	}
+
+	/* Start read-threads */
+	if (list_read != NULL)
+	{
+		const char *rt;
+		int num;
+		rt = global_option_get ("ReadThreads");
+		num = atoi (rt);
+		start_threads ((num > 0) ? num : 5);
+	}
 } /* void plugin_init_all */
 
 void plugin_read_all (void)
 {
 	llentry_t   *le;
 	read_func_t *rf;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/plugin.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/plugin.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/plugin.h	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/plugin.h	2008-07-15 22:32:23.000000000 +0800
@@ -209,13 +209,15 @@
  *              function.
  */
 int plugin_dispatch_values (const char *name, value_list_t *vl);
 
 int plugin_dispatch_notification (const notification_t *notif);
 
-void plugin_log (int level, const char *format, ...);
+void plugin_log (int level, const char *format, ...)
+	__attribute__ ((format(printf,2,3)));
+
 #define ERROR(...)   plugin_log (LOG_ERR,     __VA_ARGS__)
 #define WARNING(...) plugin_log (LOG_WARNING, __VA_ARGS__)
 #define NOTICE(...)  plugin_log (LOG_NOTICE,  __VA_ARGS__)
 #define INFO(...)    plugin_log (LOG_INFO,    __VA_ARGS__)
 #if COLLECT_DEBUG
 # define DEBUG(...)  plugin_log (LOG_DEBUG,   __VA_ARGS__)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/powerdns.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/powerdns.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/powerdns.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/powerdns.c	2008-07-15 22:32:23.000000000 +0800
@@ -616,13 +616,13 @@
   if (li->fields_num < 1)
   {
     sstrncpy (buffer, RECURSOR_COMMAND, sizeof (buffer));
   }
   else
   {
-    strcpy (buffer, "get ");
+    sstrncpy (buffer, "get ", sizeof (buffer));
     status = strjoin (&buffer[4], sizeof (buffer) - strlen ("get "),
 	li->fields, li->fields_num,
 	/* seperator = */ " ");
     if (status < 0)
     {
       ERROR ("powerdns plugin: strjoin failed.");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/processes.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/processes.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/processes.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/processes.c	2008-07-15 22:31:47.000000000 +0800
@@ -406,15 +406,15 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "processes");
-	strcpy (vl.plugin_instance, "");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "processes", sizeof (vl.plugin));
+	sstrncpy (vl.plugin_instance, "", sizeof (vl.plugin_instance));
 	strncpy (vl.type_instance, state, sizeof (vl.type_instance));
 
 	plugin_dispatch_values ("ps_state", &vl);
 }
 
 static void ps_submit_proc_list (procstat_t *ps)
@@ -422,14 +422,14 @@
 	value_t values[2];
 	value_list_t vl = VALUE_LIST_INIT;
 
 	vl.values = values;
 	vl.values_len = 2;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "processes");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "processes", sizeof (vl.plugin));
 	strncpy (vl.plugin_instance, ps->name, sizeof (vl.plugin_instance));
 
 	vl.values[0].gauge = ps->vmem_rss;
 	vl.values_len = 1;
 	plugin_dispatch_values ("ps_rss", &vl);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/rrdtool.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/rrdtool.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/rrdtool.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/rrdtool.c	2008-07-15 22:32:23.000000000 +0800
@@ -282,23 +282,23 @@
 					d->type);
 			break;
 		}
 
 		if (isnan (d->min))
 		{
-			strcpy (min, "U");
+			sstrncpy (min, "U", sizeof (min));
 		}
 		else
 		{
 			snprintf (min, sizeof (min), "%lf", d->min);
 			min[sizeof (min) - 1] = '\0';
 		}
 
 		if (isnan (d->max))
 		{
-			strcpy (max, "U");
+			sstrncpy (max, "U", sizeof (max));
 		}
 		else
 		{
 			snprintf (max, sizeof (max), "%lf", d->max);
 			max[sizeof (max) - 1] = '\0';
 		}
@@ -339,13 +339,13 @@
 {
 	int status;
 
 	optind = 0; /* bug in librrd? */
 	rrd_clear_error ();
 
-	status = rrd_create_r (filename, pdp_step, last_up, argc, argv);
+	status = rrd_create_r (filename, pdp_step, last_up, argc, (void *) argv);
 
 	if (status != 0)
 	{
 		WARNING ("rrdtool plugin: rrd_create_r (%s) failed: %s",
 				filename, rrd_get_error ());
 	}
@@ -357,13 +357,13 @@
 {
 	int status;
 
 	optind = 0; /* bug in librrd? */
 	rrd_clear_error ();
 
-	status = rrd_update_r (filename, template, argc, argv);
+	status = rrd_update_r (filename, template, argc, (void *) argv);
 
 	if (status != 0)
 	{
 		WARNING ("rrdtool plugin: rrd_update_r (%s) failed: %s",
 				filename, rrd_get_error ());
 	}
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/serial.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/serial.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/serial.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/serial.c	2008-07-15 22:31:47.000000000 +0800
@@ -38,14 +38,14 @@
 	values[0].counter = rx;
 	values[1].counter = tx;
 
 	vl.values = values;
 	vl.values_len = 2;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "serial");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "serial", sizeof (vl.plugin));
 	strncpy (vl.type_instance, type_instance,
 			sizeof (vl.type_instance));
 
 	plugin_dispatch_values ("serial_octets", &vl);
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/snmp.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/snmp.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/snmp.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/snmp.c	2008-07-15 22:32:37.000000000 +0800
@@ -704,20 +704,20 @@
 #ifdef ASN_TIMETICKS
       || (vl->type == ASN_TIMETICKS)
 #endif
       || (vl->type == ASN_GAUGE))
   {
     temp = (uint32_t) *vl->val.integer;
-    DEBUG ("snmp plugin: Parsed int32 value is %llu.", temp);
+    DEBUG ("snmp plugin: Parsed int32 value is %"PRIu64".", temp);
   }
   else if (vl->type == ASN_COUNTER64)
   {
     temp = (uint32_t) vl->val.counter64->high;
     temp = temp << 32;
     temp += (uint32_t) vl->val.counter64->low;
-    DEBUG ("snmp plugin: Parsed int64 value is %llu.", temp);
+    DEBUG ("snmp plugin: Parsed int64 value is %"PRIu64".", temp);
   }
   else
   {
     WARNING ("snmp plugin: I don't know the ASN type `%i'", (int) vl->type);
     defined = 0;
   }
@@ -776,13 +776,13 @@
 
   if (data->instance.oid.oid_len > 0)
   {
     if (vb == NULL)
     {
       ERROR ("snmp plugin: host %s: Expected one more variable for "
-	  "the instance..");
+	  "the instance..", host->name);
       return (-1);
     }
 
     num_checked++;
     if (snmp_oid_ncompare (data->instance.oid.oid,
 	  data->instance.oid.oid_len,
@@ -906,13 +906,13 @@
     sfree (value_table_ptr);
     return (-1);
   }
 
   strncpy (vl.host, host->name, sizeof (vl.host));
   vl.host[sizeof (vl.host) - 1] = '\0';
-  strcpy (vl.plugin, "snmp");
+  sstrncpy (vl.plugin, "snmp", sizeof (vl.plugin));
 
   vl.interval = host->interval;
   vl.time = time (NULL);
 
   subid = 0;
   have_more = 1;
@@ -1298,13 +1298,13 @@
     else
       vl.values[i].gauge = NAN;
   }
 
   strncpy (vl.host, host->name, sizeof (vl.host));
   vl.host[sizeof (vl.host) - 1] = '\0';
-  strcpy (vl.plugin, "snmp");
+  sstrncpy (vl.plugin, "snmp", sizeof (vl.plugin));
   strncpy (vl.type_instance, data->instance.string, sizeof (vl.type_instance));
   vl.type_instance[sizeof (vl.type_instance) - 1] = '\0';
 
   vl.interval = host->interval;
 
   req = snmp_pdu_create (SNMP_MSG_GET);
@@ -1397,14 +1397,14 @@
   time_end = time (NULL);
   DEBUG ("snmp plugin: csnmp_read_host (%s) finished at %u;", host->name,
       (unsigned int) time_end);
   if ((time_end - time_start) > host->interval)
   {
     WARNING ("snmp plugin: Host `%s' should be queried every %i seconds, "
-	"but reading all values takes %i seconds.",
-	host->name, host->interval, time_end - time_start);
+	"but reading all values takes %u seconds.",
+	host->name, host->interval, (unsigned int) (time_end - time_start));
   }
 
   return (0);
 } /* int csnmp_read_host */
 
 static void *csnmp_read_thread (void *data)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/swap.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/swap.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/swap.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/swap.c	2008-07-15 22:31:47.000000000 +0800
@@ -121,14 +121,14 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "swap");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "swap", sizeof (vl.plugin));
 	strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
 	plugin_dispatch_values ("swap", &vl);
 } /* void swap_submit */
 
 static int swap_read (void)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/tape.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/tape.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/tape.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/tape.c	2008-07-15 22:31:47.000000000 +0800
@@ -66,14 +66,14 @@
 	values[0].counter = read;
 	values[1].counter = write;
 
 	vl.values = values;
 	vl.values_len = 2;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "tape");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "tape", sizeof (vl.plugin));
 	strncpy (vl.plugin_instance, plugin_instance,
 			sizeof (vl.plugin_instance));
 
 	plugin_dispatch_values (type, &vl);
 } /* void tape_submit */
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/tcpconns.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/tcpconns.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/tcpconns.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/tcpconns.c	2008-07-15 22:31:47.000000000 +0800
@@ -132,14 +132,14 @@
   value_list_t vl = VALUE_LIST_INIT;
   int i;
 
   vl.values = values;
   vl.values_len = 1;
   vl.time = time (NULL);
-  strcpy (vl.host, hostname_g);
-  strcpy (vl.plugin, "tcpconns");
+  sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+  sstrncpy (vl.plugin, "tcpconns", sizeof (vl.plugin));
 
   if (((port_collect_listening != 0) && (pe->flags & PORT_IS_LISTENING))
       || (pe->flags & PORT_COLLECT_LOCAL))
   {
     snprintf (vl.plugin_instance, sizeof (vl.plugin_instance),
 	"%hu-local", pe->port);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/users.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/users.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/users.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/users.c	2008-07-15 22:32:23.000000000 +0800
@@ -46,14 +46,14 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "users");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "users", sizeof (vl.plugin));
 
 	plugin_dispatch_values ("users", &vl);
 } /* void users_submit */
 
 static int users_read (void)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/utils_cmd_putval.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/utils_cmd_putval.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/utils_cmd_putval.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/utils_cmd_putval.c	2008-07-15 22:32:23.000000000 +0800
@@ -168,18 +168,18 @@
 	{
 		print_to_socket (fh, "-1 Identifier too long.\n");
 		sfree (identifier_copy);
 		return (-1);
 	}
 
-	strcpy (vl.host, hostname);
-	strcpy (vl.plugin, plugin);
+	sstrncpy (vl.host, hostname, sizeof (vl.host));
+	sstrncpy (vl.plugin, plugin, sizeof (vl.plugin));
 	if (plugin_instance != NULL)
-		strcpy (vl.plugin_instance, plugin_instance);
+		sstrncpy (vl.plugin_instance, plugin_instance, sizeof (vl.plugin_instance));
 	if (type_instance != NULL)
-		strcpy (vl.type_instance, type_instance);
+		sstrncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
 	ds = plugin_get_ds (type);
 	if (ds == NULL) {
 		sfree (identifier_copy);
 		return (-1);
 	}
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/utils_dns.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/utils_dns.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/utils_dns.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/utils_dns.c	2008-07-15 22:31:47.000000000 +0800
@@ -381,13 +381,13 @@
     offset = 12;
     memset(qh.qname, '\0', MAX_QNAME_SZ);
     x = rfc1035NameUnpack(buf, len, &offset, qh.qname, MAX_QNAME_SZ);
     if (0 != x)
 	return 0;
     if ('\0' == qh.qname[0])
-	strcpy(qh.qname, ".");
+	strncpy (qh.qname, ".", sizeof (qh.qname));
     while ((t = strchr(qh.qname, '\n')))
 	*t = ' ';
     while ((t = strchr(qh.qname, '\r')))
 	*t = ' ';
     for (t = qh.qname; *t; t++)
 	*t = tolower(*t);
@@ -701,13 +701,13 @@
 #endif /* HAVE_PCAP_H */
 
 const char *qtype_str(int t)
 {
     static char buf[32];
     switch (t) {
-#if (defined (__NAMESER)) && (__NAMESER >= 19991006)
+#if (defined (__NAMESER)) && (__NAMESER >= 19991001)
 	    case ns_t_a:        return ("A");
 	    case ns_t_ns:       return ("NS");
 	    case ns_t_md:       return ("MD");
 	    case ns_t_mf:       return ("MF");
 	    case ns_t_cname:    return ("CNAME");
 	    case ns_t_soa:      return ("SOA");
@@ -743,13 +743,15 @@
 	    case ns_t_kx:       return ("KX");
 	    case ns_t_cert:     return ("CERT");
 	    case ns_t_a6:       return ("A6");
 	    case ns_t_dname:    return ("DNAME");
 	    case ns_t_sink:     return ("SINK");
 	    case ns_t_opt:      return ("OPT");
+# if __NAMESER >= 19991006
 	    case ns_t_tsig:     return ("TSIG");
+# endif
 	    case ns_t_ixfr:     return ("IXFR");
 	    case ns_t_axfr:     return ("AXFR");
 	    case ns_t_mailb:    return ("MAILB");
 	    case ns_t_maila:    return ("MAILA");
 	    case ns_t_any:      return ("ANY");
 	    case ns_t_zxfr:     return ("ZXFR");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/vmem.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/vmem.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/vmem.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/vmem.c	2008-07-15 22:32:23.000000000 +0800
@@ -43,14 +43,14 @@
   value_list_t vl = VALUE_LIST_INIT;
 
   vl.values = values;
   vl.values_len = values_len;
 
   vl.time = time (NULL);
-  strcpy (vl.host, hostname_g);
-  strcpy (vl.plugin, "vmem");
+  sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+  sstrncpy (vl.plugin, "vmem", sizeof (vl.plugin));
   if (plugin_instance != NULL)
     sstrncpy (vl.plugin_instance, plugin_instance, sizeof (vl.plugin_instance));
   if (type_instance != NULL)
     sstrncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
   plugin_dispatch_values (type, &vl);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/vserver.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/vserver.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/vserver.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/vserver.c	2008-07-15 22:32:37.000000000 +0800
@@ -54,14 +54,14 @@
 	values[0].counter = rx;
 	values[1].counter = tx;
 
 	vl.values = values;
 	vl.values_len = STATIC_ARRAY_SIZE (values);
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "vserver");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "vserver", sizeof (vl.plugin));
 	strncpy (vl.plugin_instance, plugin_instance, sizeof (vl.plugin_instance));
 	strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
 	plugin_dispatch_values ("if_octets", &vl);
 } /* void traffic_submit */
 
@@ -75,14 +75,14 @@
 	values[1].gauge = mnum;
 	values[2].gauge = lnum;
 
 	vl.values = values;
 	vl.values_len = STATIC_ARRAY_SIZE (values);
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "vserver");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "vserver", sizeof (vl.plugin));
 	strncpy (vl.plugin_instance, plugin_instance, sizeof (vl.plugin_instance));
 
 	plugin_dispatch_values ("load", &vl);
 }
 
 static void submit_gauge (const char *plugin_instance, const char *type,
@@ -94,14 +94,14 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = STATIC_ARRAY_SIZE (values);
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "vserver");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "vserver", sizeof (vl.plugin));
 	strncpy (vl.plugin_instance, plugin_instance, sizeof (vl.plugin_instance));
 	strncpy (vl.type_instance, type_instance, sizeof (vl.type_instance));
 
 	plugin_dispatch_values (type, &vl);
 } /* void submit_gauge */
 
@@ -114,39 +114,77 @@
 	++s;
 	return atoll(s);
 }
 
 static int vserver_read (void)
 {
+#if NAME_MAX < 1024
+# define DIRENT_BUFFER_SIZE (sizeof (struct dirent) + 1024 + 1)
+#else
+# define DIRENT_BUFFER_SIZE (sizeof (struct dirent) + NAME_MAX + 1)
+#endif
+
 	DIR 			*proc;
 	struct dirent 	*dent; /* 42 */
+	char dirent_buffer[DIRENT_BUFFER_SIZE];
 
 	errno = 0;
-	if (NULL == (proc = opendir (PROCDIR)))
+	proc = opendir (PROCDIR);
+	if (proc == NULL)
 	{
 		char errbuf[1024];
 		ERROR ("vserver plugin: fopen (%s): %s", PROCDIR, 
 				sstrerror (errno, errbuf, sizeof (errbuf)));
 		return (-1);
 	}
 
-	while (NULL != (dent = readdir (proc)))
+	while (42)
 	{
-		int  len;
+		size_t len;
 		char file[BUFSIZE];
 
 		FILE *fh;
 		char buffer[BUFSIZE];
 
+		struct stat statbuf;
 		char *cols[4];
 
+		int status;
+
+		status = readdir_r (proc, (struct dirent *) dirent_buffer, &dent);
+		if (status != 0)
+		{
+			char errbuf[4096];
+			ERROR ("vserver plugin: readdir_r failed: %s",
+					sstrerror (errno, errbuf, sizeof (errbuf)));
+			closedir (proc);
+			return (-1);
+		}
+		else if (dent == NULL)
+		{
+			/* end of directory */
+			break;
+		}
+
 		if (dent->d_name[0] == '.')
 			continue;
 
-		/* This is not a directory */
-		if (dent->d_type != DT_DIR)
+		len = snprintf (file, sizeof (file), PROCDIR "/%s", dent->d_name);
+		if ((len < 0) || (len >= BUFSIZE))
+			continue;
+		
+		status = stat (file, &statbuf);
+		if (status != 0)
+		{
+			char errbuf[4096];
+			WARNING ("vserver plugin: stat (%s) failed: %s",
+					file, sstrerror (errno, errbuf, sizeof (errbuf)));
+			continue;
+		}
+		
+		if (!S_ISDIR (statbuf.st_mode))
 			continue;
 
 		/* socket message accounting */
 		len = snprintf (file, BUFSIZE, PROCDIR "/%s/cacct", dent->d_name);
 		if ((len < 0) || (len >= BUFSIZE))
 			continue;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/wireless.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/wireless.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/wireless.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/wireless.c	2008-07-15 22:31:47.000000000 +0800
@@ -53,14 +53,14 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "wireless");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "wireless", sizeof (vl.plugin));
 	strncpy (vl.plugin_instance, plugin_instance,
 			sizeof (vl.plugin_instance));
 
 	plugin_dispatch_values (type, &vl);
 } /* void wireless_submit */
 
@@ -125,22 +125,26 @@
 		/* power [dBm] < 0.0 */
 		power = strtod (fields[3], &endptr);
 		if (fields[3] == endptr)
 			power = 1.0; /* invalid */
 		else if ((power >= 0.0) && (power <= 100.0))
 			power = wireless_percent_to_power (power);
-		else if (power > 100.0)
+		else if ((power > 100.0) && (power <= 256.0))
+			power = power - 256.0;
+		else if (power > 0.0)
 			power = 1.0; /* invalid */
 
 		/* noise [dBm] < 0.0 */
 		noise = strtod (fields[4], &endptr);
 		if (fields[4] == endptr)
 			noise = 1.0; /* invalid */
 		else if ((noise >= 0.0) && (noise <= 100.0))
 			noise = wireless_percent_to_power (noise);
-		else if (noise > 100.0)
+		else if ((noise > 100.0) && (noise <= 256.0))
+			noise = noise - 256.0;
+		else if (noise > 0.0)
 			noise = 1.0; /* invalid */
 
 		wireless_submit (device, "signal_quality", quality);
 		wireless_submit (device, "signal_power", power);
 		wireless_submit (device, "signal_noise", noise);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/xmms.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/xmms.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/src/xmms.c	2008-05-31 16:32:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/src/xmms.c	2008-07-15 22:31:47.000000000 +0800
@@ -34,14 +34,14 @@
 
 	values[0].gauge = value;
 
 	vl.values = values;
 	vl.values_len = 1;
 	vl.time = time (NULL);
-	strcpy (vl.host, hostname_g);
-	strcpy (vl.plugin, "xmms");
+	sstrncpy (vl.host, hostname_g, sizeof (vl.host));
+	sstrncpy (vl.plugin, "xmms", sizeof (vl.plugin));
 
 	plugin_dispatch_values (type, &vl);
 } /* void cxmms_submit */
 
 int cxmms_read (void)
 {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/version-gen.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/version-gen.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.1/version-gen.sh	2008-06-04 01:08:59.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/repos/collectd-4.4.2/version-gen.sh	2008-07-15 22:32:28.000000000 +0800
@@ -1,9 +1,9 @@
 #!/bin/sh
 
-DEFAULT_VERSION="4.4.1.git"
+DEFAULT_VERSION="4.4.2.git"
 
 VERSION="$( git describe 2> /dev/null | sed -e 's/^collectd-//' )"
 
 if test -z "$VERSION"; then
 	VERSION="$DEFAULT_VERSION"
 fi

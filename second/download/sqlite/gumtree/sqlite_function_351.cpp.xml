<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_351.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">sqlite3EndTable<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Parse<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pParse<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>,          <comment type="block" pos:line="2" pos:column="27">/* Parse context */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">Token<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">pCons<pos:position pos:line="3" pos:column="15"/></name></decl></parameter>,           <comment type="block" pos:line="3" pos:column="27">/* The ',' token after the last column defn. */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">Token<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">pEnd<pos:position pos:line="4" pos:column="14"/></name></decl></parameter>,            <comment type="block" pos:line="4" pos:column="27">/* The final ')' token in the CREATE TABLE */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">Select<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">pSelect<pos:position pos:line="5" pos:column="18"/></name></decl></parameter>         <comment type="block" pos:line="5" pos:column="27">/* Select from a "CREATE ... AS SELECT" */</comment>
)<pos:position pos:line="6" pos:column="2"/></parameter_list><block pos:line="6" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">Table<pos:position pos:line="7" pos:column="8"/></name> <modifier pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></modifier></type><name pos:line="7" pos:column="10">p<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">sqlite3<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">db<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name><name pos:line="8" pos:column="17">pParse<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">db<pos:position pos:line="8" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">iDb<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">( <expr><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">pEnd<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">==<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal> <operator pos:line="11" pos:column="16">&amp;&amp;<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="19">pSelect<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">==<pos:position pos:line="11" pos:column="28"/></operator><literal type="number" pos:line="11" pos:column="28">0<pos:position pos:line="11" pos:column="29"/></literal><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator> <operator pos:line="11" pos:column="31">||<pos:position pos:line="11" pos:column="33"/></operator> <name><name pos:line="11" pos:column="34">db<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">mallocFailed<pos:position pos:line="11" pos:column="50"/></name></name></expr> )<pos:position pos:line="11" pos:column="52"/></condition><then><block pos:line="11" pos:column="52">{
    <return pos:line="12" pos:column="5">return;<pos:position pos:line="12" pos:column="12"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="14" pos:column="3">p<pos:position pos:line="14" pos:column="4"/></name> <operator pos:line="14" pos:column="5">=<pos:position pos:line="14" pos:column="6"/></operator> <name><name pos:line="14" pos:column="7">pParse<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">pNewTable<pos:position pos:line="14" pos:column="24"/></name></name></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">( <expr><name pos:line="15" pos:column="7">p<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">==<pos:position pos:line="15" pos:column="10"/></operator><literal type="number" pos:line="15" pos:column="10">0<pos:position pos:line="15" pos:column="11"/></literal></expr> )<pos:position pos:line="15" pos:column="13"/></condition><then pos:line="15" pos:column="13"> <block type="pseudo"><return pos:line="15" pos:column="14">return;<pos:position pos:line="15" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">assert<pos:position pos:line="17" pos:column="9"/></name><argument_list pos:line="17" pos:column="9">( <argument><expr><operator pos:line="17" pos:column="11">!<pos:position pos:line="17" pos:column="12"/></operator><name><name pos:line="17" pos:column="12">db<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">init<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">busy<pos:position pos:line="17" pos:column="25"/></name></name> <operator pos:line="17" pos:column="26">||<pos:position pos:line="17" pos:column="28"/></operator> <operator pos:line="17" pos:column="29">!<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">pSelect<pos:position pos:line="17" pos:column="37"/></name></expr></argument> )<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">iDb<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">sqlite3SchemaToIndex<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">db<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="34">p<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">pSchema<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>

<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef<pos:position pos:line="21" pos:column="8"/></cpp:directive> <name pos:line="21" pos:column="9">SQLITE_OMIT_CHECK<pos:position pos:line="21" pos:column="26"/></name></cpp:ifndef>
  <comment type="block" pos:line="22" pos:column="3">/* Resolve names in all CHECK constraint expressions.
  */</comment>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">( <expr><name><name pos:line="24" pos:column="7">p<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">pCheck<pos:position pos:line="24" pos:column="16"/></name></name></expr> )<pos:position pos:line="24" pos:column="18"/></condition><then><block pos:line="24" pos:column="18">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">SrcList<pos:position pos:line="25" pos:column="12"/></name></type> <name pos:line="25" pos:column="13">sSrc<pos:position pos:line="25" pos:column="17"/></name></decl>;<pos:position pos:line="25" pos:column="18"/></decl_stmt>                   <comment type="block" pos:line="25" pos:column="37">/* Fake SrcList for pParse-&gt;pNewTable */</comment>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">NameContext<pos:position pos:line="26" pos:column="16"/></name></type> <name pos:line="26" pos:column="17">sNC<pos:position pos:line="26" pos:column="20"/></name></decl>;<pos:position pos:line="26" pos:column="21"/></decl_stmt>                <comment type="block" pos:line="26" pos:column="37">/* Name context for pParse-&gt;pNewTable */</comment>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">memset<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><operator pos:line="28" pos:column="12">&amp;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="13">sNC<pos:position pos:line="28" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="18">0<pos:position pos:line="28" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="21">sizeof<argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">sNC<pos:position pos:line="28" pos:column="31"/></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">memset<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><operator pos:line="29" pos:column="12">&amp;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="13">sSrc<pos:position pos:line="29" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="19">0<pos:position pos:line="29" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="22">sizeof<argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">sSrc<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">sSrc<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">.<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">nSrc<pos:position pos:line="30" pos:column="14"/></name></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <literal type="number" pos:line="30" pos:column="17">1<pos:position pos:line="30" pos:column="18"/></literal></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">sSrc<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">.<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">a<pos:position pos:line="31" pos:column="11"/></name><index pos:line="31" pos:column="11">[<expr><literal type="number" pos:line="31" pos:column="12">0<pos:position pos:line="31" pos:column="13"/></literal></expr>]<pos:position pos:line="31" pos:column="14"/></index></name><operator pos:line="31" pos:column="14">.<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">zName<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <name><name pos:line="31" pos:column="23">p<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">zName<pos:position pos:line="31" pos:column="31"/></name></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">sSrc<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">.<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">a<pos:position pos:line="32" pos:column="11"/></name><index pos:line="32" pos:column="11">[<expr><literal type="number" pos:line="32" pos:column="12">0<pos:position pos:line="32" pos:column="13"/></literal></expr>]<pos:position pos:line="32" pos:column="14"/></index></name><operator pos:line="32" pos:column="14">.<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">pTab<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">p<pos:position pos:line="32" pos:column="23"/></name></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">sSrc<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">.<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">a<pos:position pos:line="33" pos:column="11"/></name><index pos:line="33" pos:column="11">[<expr><literal type="number" pos:line="33" pos:column="12">0<pos:position pos:line="33" pos:column="13"/></literal></expr>]<pos:position pos:line="33" pos:column="14"/></index></name><operator pos:line="33" pos:column="14">.<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">iCursor<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <operator pos:line="33" pos:column="25">-<pos:position pos:line="33" pos:column="26"/></operator><literal type="number" pos:line="33" pos:column="26">1<pos:position pos:line="33" pos:column="27"/></literal></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">sNC<pos:position pos:line="34" pos:column="8"/></name><operator pos:line="34" pos:column="8">.<pos:position pos:line="34" pos:column="9"/></operator><name pos:line="34" pos:column="9">pParse<pos:position pos:line="34" pos:column="15"/></name></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <name pos:line="34" pos:column="18">pParse<pos:position pos:line="34" pos:column="24"/></name></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">sNC<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">.<pos:position pos:line="35" pos:column="9"/></operator><name pos:line="35" pos:column="9">pSrcList<pos:position pos:line="35" pos:column="17"/></name></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <operator pos:line="35" pos:column="20">&amp;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="21">sSrc<pos:position pos:line="35" pos:column="25"/></name></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">sNC<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">.<pos:position pos:line="36" pos:column="9"/></operator><name pos:line="36" pos:column="9">isCheck<pos:position pos:line="36" pos:column="16"/></name></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <literal type="number" pos:line="36" pos:column="19">1<pos:position pos:line="36" pos:column="20"/></literal></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">( <expr><call><name pos:line="37" pos:column="9">sqlite3ResolveExprNames<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><operator pos:line="37" pos:column="33">&amp;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="34">sNC<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="39">p<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">-&gt;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="42">pCheck<pos:position pos:line="37" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr> )<pos:position pos:line="37" pos:column="51"/></condition><then><block pos:line="37" pos:column="51">{
      <return pos:line="38" pos:column="7">return;<pos:position pos:line="38" pos:column="14"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="41" pos:column="8">/* !defined(SQLITE_OMIT_CHECK) */</comment>

  <comment type="block" pos:line="43" pos:column="3">/* If the db-&gt;init.busy is 1 it means we are reading the SQL off the
  ** "sqlite_master" or "sqlite_temp_master" table on the disk.
  ** So do not write to the disk again.  Extract the root page number
  ** for the table from the db-&gt;init.newTnum field.  (The page number
  ** should have been put there by the sqliteOpenCb routine.)
  */</comment>
  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">( <expr><name><name pos:line="49" pos:column="7">db<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">init<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">.<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="16">busy<pos:position pos:line="49" pos:column="20"/></name></name></expr> )<pos:position pos:line="49" pos:column="22"/></condition><then><block pos:line="49" pos:column="22">{
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">p<pos:position pos:line="50" pos:column="6"/></name><operator pos:line="50" pos:column="6">-&gt;<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="8">tnum<pos:position pos:line="50" pos:column="12"/></name></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <name><name pos:line="50" pos:column="15">db<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">init<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">.<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">newTnum<pos:position pos:line="50" pos:column="31"/></name></name></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="53" pos:column="3">/* If not initializing, then create a record for the new table
  ** in the SQLITE_MASTER table of the database.
  **
  ** If this is a TEMPORARY table, write the entry into the auxiliary
  ** file instead of into the main database file.
  */</comment>
  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">( <expr><operator pos:line="59" pos:column="7">!<pos:position pos:line="59" pos:column="8"/></operator><name><name pos:line="59" pos:column="8">db<pos:position pos:line="59" pos:column="10"/></name><operator pos:line="59" pos:column="10">-&gt;<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="12">init<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">.<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="17">busy<pos:position pos:line="59" pos:column="21"/></name></name></expr> )<pos:position pos:line="59" pos:column="23"/></condition><then><block pos:line="59" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="60" pos:column="5">int<pos:position pos:line="60" pos:column="8"/></name></type> <name pos:line="60" pos:column="9">n<pos:position pos:line="60" pos:column="10"/></name></decl>;<pos:position pos:line="60" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="61" pos:column="5">Vdbe<pos:position pos:line="61" pos:column="9"/></name> <modifier pos:line="61" pos:column="10">*<pos:position pos:line="61" pos:column="11"/></modifier></type><name pos:line="61" pos:column="11">v<pos:position pos:line="61" pos:column="12"/></name></decl>;<pos:position pos:line="61" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">char<pos:position pos:line="62" pos:column="9"/></name> <modifier pos:line="62" pos:column="10">*<pos:position pos:line="62" pos:column="11"/></modifier></type><name pos:line="62" pos:column="11">zType<pos:position pos:line="62" pos:column="16"/></name></decl>;<pos:position pos:line="62" pos:column="17"/></decl_stmt>    <comment type="block" pos:line="62" pos:column="21">/* "view" or "table" */</comment>
    <decl_stmt><decl><type><name pos:line="63" pos:column="5">char<pos:position pos:line="63" pos:column="9"/></name> <modifier pos:line="63" pos:column="10">*<pos:position pos:line="63" pos:column="11"/></modifier></type><name pos:line="63" pos:column="11">zType2<pos:position pos:line="63" pos:column="17"/></name></decl>;<pos:position pos:line="63" pos:column="18"/></decl_stmt>   <comment type="block" pos:line="63" pos:column="21">/* "VIEW" or "TABLE" */</comment>
    <decl_stmt><decl><type><name pos:line="64" pos:column="5">char<pos:position pos:line="64" pos:column="9"/></name> <modifier pos:line="64" pos:column="10">*<pos:position pos:line="64" pos:column="11"/></modifier></type><name pos:line="64" pos:column="11">zStmt<pos:position pos:line="64" pos:column="16"/></name></decl>;<pos:position pos:line="64" pos:column="17"/></decl_stmt>    <comment type="block" pos:line="64" pos:column="21">/* Text of the CREATE TABLE or CREATE VIEW statement */</comment>

    <expr_stmt><expr><name pos:line="66" pos:column="5">v<pos:position pos:line="66" pos:column="6"/></name> <operator pos:line="66" pos:column="7">=<pos:position pos:line="66" pos:column="8"/></operator> <call><name pos:line="66" pos:column="9">sqlite3GetVdbe<pos:position pos:line="66" pos:column="23"/></name><argument_list pos:line="66" pos:column="23">(<argument><expr><name pos:line="66" pos:column="24">pParse<pos:position pos:line="66" pos:column="30"/></name></expr></argument>)<pos:position pos:line="66" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>
    <if pos:line="67" pos:column="5">if<condition pos:line="67" pos:column="7">( <expr><call><name pos:line="67" pos:column="9">NEVER<pos:position pos:line="67" pos:column="14"/></name><argument_list pos:line="67" pos:column="14">(<argument><expr><name pos:line="67" pos:column="15">v<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">==<pos:position pos:line="67" pos:column="18"/></operator><literal type="number" pos:line="67" pos:column="18">0<pos:position pos:line="67" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="20"/></argument_list></call></expr> )<pos:position pos:line="67" pos:column="22"/></condition><then pos:line="67" pos:column="22"> <block type="pseudo"><return pos:line="67" pos:column="23">return;<pos:position pos:line="67" pos:column="30"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="69" pos:column="5">sqlite3VdbeAddOp1<pos:position pos:line="69" pos:column="22"/></name><argument_list pos:line="69" pos:column="22">(<argument><expr><name pos:line="69" pos:column="23">v<pos:position pos:line="69" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="26">OP_Close<pos:position pos:line="69" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="36">0<pos:position pos:line="69" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="71" pos:column="5">/* 
    ** Initialize zType for the new view or table.
    */</comment>
    <if pos:line="74" pos:column="5">if<condition pos:line="74" pos:column="7">( <expr><name><name pos:line="74" pos:column="9">p<pos:position pos:line="74" pos:column="10"/></name><operator pos:line="74" pos:column="10">-&gt;<pos:position pos:line="74" pos:column="15"/></operator><name pos:line="74" pos:column="12">pSelect<pos:position pos:line="74" pos:column="19"/></name></name><operator pos:line="74" pos:column="19">==<pos:position pos:line="74" pos:column="21"/></operator><literal type="number" pos:line="74" pos:column="21">0<pos:position pos:line="74" pos:column="22"/></literal></expr> )<pos:position pos:line="74" pos:column="24"/></condition><then><block pos:line="74" pos:column="24">{
      <comment type="block" pos:line="75" pos:column="7">/* A regular table */</comment>
      <expr_stmt><expr><name pos:line="76" pos:column="7">zType<pos:position pos:line="76" pos:column="12"/></name> <operator pos:line="76" pos:column="13">=<pos:position pos:line="76" pos:column="14"/></operator> <literal type="string" pos:line="76" pos:column="15">"table"<pos:position pos:line="76" pos:column="22"/></literal></expr>;<pos:position pos:line="76" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="77" pos:column="7">zType2<pos:position pos:line="77" pos:column="13"/></name> <operator pos:line="77" pos:column="14">=<pos:position pos:line="77" pos:column="15"/></operator> <literal type="string" pos:line="77" pos:column="16">"TABLE"<pos:position pos:line="77" pos:column="23"/></literal></expr>;<pos:position pos:line="77" pos:column="24"/></expr_stmt>
<cpp:ifndef pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">ifndef<pos:position pos:line="78" pos:column="8"/></cpp:directive> <name pos:line="78" pos:column="9">SQLITE_OMIT_VIEW<pos:position pos:line="78" pos:column="25"/></name></cpp:ifndef>
    }<pos:position pos:line="79" pos:column="6"/></block></then><else pos:line="79" pos:column="6">else<block pos:line="79" pos:column="10">{
      <comment type="block" pos:line="80" pos:column="7">/* A view */</comment>
      <expr_stmt><expr><name pos:line="81" pos:column="7">zType<pos:position pos:line="81" pos:column="12"/></name> <operator pos:line="81" pos:column="13">=<pos:position pos:line="81" pos:column="14"/></operator> <literal type="string" pos:line="81" pos:column="15">"view"<pos:position pos:line="81" pos:column="21"/></literal></expr>;<pos:position pos:line="81" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="82" pos:column="7">zType2<pos:position pos:line="82" pos:column="13"/></name> <operator pos:line="82" pos:column="14">=<pos:position pos:line="82" pos:column="15"/></operator> <literal type="string" pos:line="82" pos:column="16">"VIEW"<pos:position pos:line="82" pos:column="22"/></literal></expr>;<pos:position pos:line="82" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">endif<pos:position pos:line="83" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="84" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="86" pos:column="5">/* If this is a CREATE TABLE xx AS SELECT ..., execute the SELECT
    ** statement to populate the new table. The root-page number for the
    ** new table is in register pParse-&gt;regRoot.
    **
    ** Once the SELECT has been coded by sqlite3Select(), it is in a
    ** suitable state to query for the column names and types to be used
    ** by the new table.
    **
    ** A shared-cache write-lock is not required to write to the new table,
    ** as a schema-lock must have already been obtained to create it. Since
    ** a schema-lock excludes all other database users, the write-lock would
    ** be redundant.
    */</comment>
    <if pos:line="99" pos:column="5">if<condition pos:line="99" pos:column="7">( <expr><name pos:line="99" pos:column="9">pSelect<pos:position pos:line="99" pos:column="16"/></name></expr> )<pos:position pos:line="99" pos:column="18"/></condition><then><block pos:line="99" pos:column="18">{
      <decl_stmt><decl><type><name pos:line="100" pos:column="7">SelectDest<pos:position pos:line="100" pos:column="17"/></name></type> <name pos:line="100" pos:column="18">dest<pos:position pos:line="100" pos:column="22"/></name></decl>;<pos:position pos:line="100" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="101" pos:column="7">Table<pos:position pos:line="101" pos:column="12"/></name> <modifier pos:line="101" pos:column="13">*<pos:position pos:line="101" pos:column="14"/></modifier></type><name pos:line="101" pos:column="14">pSelTab<pos:position pos:line="101" pos:column="21"/></name></decl>;<pos:position pos:line="101" pos:column="22"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="103" pos:column="7">assert<pos:position pos:line="103" pos:column="13"/></name><argument_list pos:line="103" pos:column="13">(<argument><expr><name><name pos:line="103" pos:column="14">pParse<pos:position pos:line="103" pos:column="20"/></name><operator pos:line="103" pos:column="20">-&gt;<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="22">nTab<pos:position pos:line="103" pos:column="26"/></name></name><operator pos:line="103" pos:column="26">==<pos:position pos:line="103" pos:column="28"/></operator><literal type="number" pos:line="103" pos:column="28">1<pos:position pos:line="103" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="104" pos:column="7">sqlite3VdbeAddOp3<pos:position pos:line="104" pos:column="24"/></name><argument_list pos:line="104" pos:column="24">(<argument><expr><name pos:line="104" pos:column="25">v<pos:position pos:line="104" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="28">OP_OpenWrite<pos:position pos:line="104" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="42">1<pos:position pos:line="104" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="45">pParse<pos:position pos:line="104" pos:column="51"/></name><operator pos:line="104" pos:column="51">-&gt;<pos:position pos:line="104" pos:column="56"/></operator><name pos:line="104" pos:column="53">regRoot<pos:position pos:line="104" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="62">iDb<pos:position pos:line="104" pos:column="65"/></name></expr></argument>)<pos:position pos:line="104" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="105" pos:column="7">sqlite3VdbeChangeP5<pos:position pos:line="105" pos:column="26"/></name><argument_list pos:line="105" pos:column="26">(<argument><expr><name pos:line="105" pos:column="27">v<pos:position pos:line="105" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="30">1<pos:position pos:line="105" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="106" pos:column="7">pParse<pos:position pos:line="106" pos:column="13"/></name><operator pos:line="106" pos:column="13">-&gt;<pos:position pos:line="106" pos:column="18"/></operator><name pos:line="106" pos:column="15">nTab<pos:position pos:line="106" pos:column="19"/></name></name> <operator pos:line="106" pos:column="20">=<pos:position pos:line="106" pos:column="21"/></operator> <literal type="number" pos:line="106" pos:column="22">2<pos:position pos:line="106" pos:column="23"/></literal></expr>;<pos:position pos:line="106" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="107" pos:column="7">sqlite3SelectDestInit<pos:position pos:line="107" pos:column="28"/></name><argument_list pos:line="107" pos:column="28">(<argument><expr><operator pos:line="107" pos:column="29">&amp;<pos:position pos:line="107" pos:column="34"/></operator><name pos:line="107" pos:column="30">dest<pos:position pos:line="107" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="36">SRT_Table<pos:position pos:line="107" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="47">1<pos:position pos:line="107" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="108" pos:column="7">sqlite3Select<pos:position pos:line="108" pos:column="20"/></name><argument_list pos:line="108" pos:column="20">(<argument><expr><name pos:line="108" pos:column="21">pParse<pos:position pos:line="108" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="29">pSelect<pos:position pos:line="108" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="38">&amp;<pos:position pos:line="108" pos:column="43"/></operator><name pos:line="108" pos:column="39">dest<pos:position pos:line="108" pos:column="43"/></name></expr></argument>)<pos:position pos:line="108" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="109" pos:column="7">sqlite3VdbeAddOp1<pos:position pos:line="109" pos:column="24"/></name><argument_list pos:line="109" pos:column="24">(<argument><expr><name pos:line="109" pos:column="25">v<pos:position pos:line="109" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="28">OP_Close<pos:position pos:line="109" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="38">1<pos:position pos:line="109" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="41"/></expr_stmt>
      <if pos:line="110" pos:column="7">if<condition pos:line="110" pos:column="9">( <expr><name><name pos:line="110" pos:column="11">pParse<pos:position pos:line="110" pos:column="17"/></name><operator pos:line="110" pos:column="17">-&gt;<pos:position pos:line="110" pos:column="22"/></operator><name pos:line="110" pos:column="19">nErr<pos:position pos:line="110" pos:column="23"/></name></name><operator pos:line="110" pos:column="23">==<pos:position pos:line="110" pos:column="25"/></operator><literal type="number" pos:line="110" pos:column="25">0<pos:position pos:line="110" pos:column="26"/></literal></expr> )<pos:position pos:line="110" pos:column="28"/></condition><then><block pos:line="110" pos:column="28">{
        <expr_stmt><expr><name pos:line="111" pos:column="9">pSelTab<pos:position pos:line="111" pos:column="16"/></name> <operator pos:line="111" pos:column="17">=<pos:position pos:line="111" pos:column="18"/></operator> <call><name pos:line="111" pos:column="19">sqlite3ResultSetOfSelect<pos:position pos:line="111" pos:column="43"/></name><argument_list pos:line="111" pos:column="43">(<argument><expr><name pos:line="111" pos:column="44">pParse<pos:position pos:line="111" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="52">pSelect<pos:position pos:line="111" pos:column="59"/></name></expr></argument>)<pos:position pos:line="111" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="61"/></expr_stmt>
        <if pos:line="112" pos:column="9">if<condition pos:line="112" pos:column="11">( <expr><name pos:line="112" pos:column="13">pSelTab<pos:position pos:line="112" pos:column="20"/></name><operator pos:line="112" pos:column="20">==<pos:position pos:line="112" pos:column="22"/></operator><literal type="number" pos:line="112" pos:column="22">0<pos:position pos:line="112" pos:column="23"/></literal></expr> )<pos:position pos:line="112" pos:column="25"/></condition><then pos:line="112" pos:column="25"> <block type="pseudo"><return pos:line="112" pos:column="26">return;<pos:position pos:line="112" pos:column="33"/></return></block></then></if>
        <expr_stmt><expr><call><name pos:line="113" pos:column="9">assert<pos:position pos:line="113" pos:column="15"/></name><argument_list pos:line="113" pos:column="15">( <argument><expr><name><name pos:line="113" pos:column="17">p<pos:position pos:line="113" pos:column="18"/></name><operator pos:line="113" pos:column="18">-&gt;<pos:position pos:line="113" pos:column="23"/></operator><name pos:line="113" pos:column="20">aCol<pos:position pos:line="113" pos:column="24"/></name></name><operator pos:line="113" pos:column="24">==<pos:position pos:line="113" pos:column="26"/></operator><literal type="number" pos:line="113" pos:column="26">0<pos:position pos:line="113" pos:column="27"/></literal></expr></argument> )<pos:position pos:line="113" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="114" pos:column="9">p<pos:position pos:line="114" pos:column="10"/></name><operator pos:line="114" pos:column="10">-&gt;<pos:position pos:line="114" pos:column="15"/></operator><name pos:line="114" pos:column="12">nCol<pos:position pos:line="114" pos:column="16"/></name></name> <operator pos:line="114" pos:column="17">=<pos:position pos:line="114" pos:column="18"/></operator> <name><name pos:line="114" pos:column="19">pSelTab<pos:position pos:line="114" pos:column="26"/></name><operator pos:line="114" pos:column="26">-&gt;<pos:position pos:line="114" pos:column="31"/></operator><name pos:line="114" pos:column="28">nCol<pos:position pos:line="114" pos:column="32"/></name></name></expr>;<pos:position pos:line="114" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="115" pos:column="9">p<pos:position pos:line="115" pos:column="10"/></name><operator pos:line="115" pos:column="10">-&gt;<pos:position pos:line="115" pos:column="15"/></operator><name pos:line="115" pos:column="12">aCol<pos:position pos:line="115" pos:column="16"/></name></name> <operator pos:line="115" pos:column="17">=<pos:position pos:line="115" pos:column="18"/></operator> <name><name pos:line="115" pos:column="19">pSelTab<pos:position pos:line="115" pos:column="26"/></name><operator pos:line="115" pos:column="26">-&gt;<pos:position pos:line="115" pos:column="31"/></operator><name pos:line="115" pos:column="28">aCol<pos:position pos:line="115" pos:column="32"/></name></name></expr>;<pos:position pos:line="115" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="116" pos:column="9">pSelTab<pos:position pos:line="116" pos:column="16"/></name><operator pos:line="116" pos:column="16">-&gt;<pos:position pos:line="116" pos:column="21"/></operator><name pos:line="116" pos:column="18">nCol<pos:position pos:line="116" pos:column="22"/></name></name> <operator pos:line="116" pos:column="23">=<pos:position pos:line="116" pos:column="24"/></operator> <literal type="number" pos:line="116" pos:column="25">0<pos:position pos:line="116" pos:column="26"/></literal></expr>;<pos:position pos:line="116" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="117" pos:column="9">pSelTab<pos:position pos:line="117" pos:column="16"/></name><operator pos:line="117" pos:column="16">-&gt;<pos:position pos:line="117" pos:column="21"/></operator><name pos:line="117" pos:column="18">aCol<pos:position pos:line="117" pos:column="22"/></name></name> <operator pos:line="117" pos:column="23">=<pos:position pos:line="117" pos:column="24"/></operator> <literal type="number" pos:line="117" pos:column="25">0<pos:position pos:line="117" pos:column="26"/></literal></expr>;<pos:position pos:line="117" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="118" pos:column="9">sqlite3DeleteTable<pos:position pos:line="118" pos:column="27"/></name><argument_list pos:line="118" pos:column="27">(<argument><expr><name pos:line="118" pos:column="28">pSelTab<pos:position pos:line="118" pos:column="35"/></name></expr></argument>)<pos:position pos:line="118" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="119" pos:column="8"/></block></then></if>
    }<pos:position pos:line="120" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="122" pos:column="5">/* Compute the complete text of the CREATE statement */</comment>
    <if pos:line="123" pos:column="5">if<condition pos:line="123" pos:column="7">( <expr><name pos:line="123" pos:column="9">pSelect<pos:position pos:line="123" pos:column="16"/></name></expr> )<pos:position pos:line="123" pos:column="18"/></condition><then><block pos:line="123" pos:column="18">{
      <expr_stmt><expr><name pos:line="124" pos:column="7">zStmt<pos:position pos:line="124" pos:column="12"/></name> <operator pos:line="124" pos:column="13">=<pos:position pos:line="124" pos:column="14"/></operator> <call><name pos:line="124" pos:column="15">createTableStmt<pos:position pos:line="124" pos:column="30"/></name><argument_list pos:line="124" pos:column="30">(<argument><expr><name pos:line="124" pos:column="31">db<pos:position pos:line="124" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="35">p<pos:position pos:line="124" pos:column="36"/></name></expr></argument>)<pos:position pos:line="124" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="125" pos:column="6"/></block></then><else pos:line="125" pos:column="6">else<block pos:line="125" pos:column="10">{
      <expr_stmt><expr><name pos:line="126" pos:column="7">n<pos:position pos:line="126" pos:column="8"/></name> <operator pos:line="126" pos:column="9">=<pos:position pos:line="126" pos:column="10"/></operator> <call pos:line="126" pos:column="11">(<name pos:line="126" pos:column="12">int<pos:position pos:line="126" pos:column="15"/></name>)<argument_list pos:line="126" pos:column="16">(<argument><expr><name><name pos:line="126" pos:column="17">pEnd<pos:position pos:line="126" pos:column="21"/></name><operator pos:line="126" pos:column="21">-&gt;<pos:position pos:line="126" pos:column="26"/></operator><name pos:line="126" pos:column="23">z<pos:position pos:line="126" pos:column="24"/></name></name> <operator pos:line="126" pos:column="25">-<pos:position pos:line="126" pos:column="26"/></operator> <name><name pos:line="126" pos:column="27">pParse<pos:position pos:line="126" pos:column="33"/></name><operator pos:line="126" pos:column="33">-&gt;<pos:position pos:line="126" pos:column="38"/></operator><name pos:line="126" pos:column="35">sNameToken<pos:position pos:line="126" pos:column="45"/></name><operator pos:line="126" pos:column="45">.<pos:position pos:line="126" pos:column="46"/></operator><name pos:line="126" pos:column="46">z<pos:position pos:line="126" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="48"/></argument_list></call> <operator pos:line="126" pos:column="49">+<pos:position pos:line="126" pos:column="50"/></operator> <literal type="number" pos:line="126" pos:column="51">1<pos:position pos:line="126" pos:column="52"/></literal></expr>;<pos:position pos:line="126" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name pos:line="127" pos:column="7">zStmt<pos:position pos:line="127" pos:column="12"/></name> <operator pos:line="127" pos:column="13">=<pos:position pos:line="127" pos:column="14"/></operator> <call><name pos:line="127" pos:column="15">sqlite3MPrintf<pos:position pos:line="127" pos:column="29"/></name><argument_list pos:line="127" pos:column="29">(<argument><expr><name pos:line="127" pos:column="30">db<pos:position pos:line="127" pos:column="32"/></name></expr></argument>, 
          <argument><expr><literal type="string" pos:line="128" pos:column="11">"CREATE %s %.*s"<pos:position pos:line="128" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="29">zType2<pos:position pos:line="128" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="37">n<pos:position pos:line="128" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="40">pParse<pos:position pos:line="128" pos:column="46"/></name><operator pos:line="128" pos:column="46">-&gt;<pos:position pos:line="128" pos:column="51"/></operator><name pos:line="128" pos:column="48">sNameToken<pos:position pos:line="128" pos:column="58"/></name><operator pos:line="128" pos:column="58">.<pos:position pos:line="128" pos:column="59"/></operator><name pos:line="128" pos:column="59">z<pos:position pos:line="128" pos:column="60"/></name></name></expr></argument>
      )<pos:position pos:line="129" pos:column="8"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="9"/></expr_stmt>
    }<pos:position pos:line="130" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="132" pos:column="5">/* A slot for the record has already been allocated in the 
    ** SQLITE_MASTER table.  We just need to update that slot with all
    ** the information we've collected.
    */</comment>
    <expr_stmt><expr><call><name pos:line="136" pos:column="5">sqlite3NestedParse<pos:position pos:line="136" pos:column="23"/></name><argument_list pos:line="136" pos:column="23">(<argument><expr><name pos:line="136" pos:column="24">pParse<pos:position pos:line="136" pos:column="30"/></name></expr></argument>,
      <argument><expr><literal type="string" pos:line="137" pos:column="7">"UPDATE %Q.%s "<pos:position pos:line="137" pos:column="22"/></literal>
         <literal type="string" pos:line="138" pos:column="10">"SET type='%s', name=%Q, tbl_name=%Q, rootpage=#%d, sql=%Q "<pos:position pos:line="138" pos:column="70"/></literal>
       <literal type="string" pos:line="139" pos:column="8">"WHERE rowid=#%d"<pos:position pos:line="139" pos:column="25"/></literal></expr></argument>,
      <argument><expr><name><name pos:line="140" pos:column="7">db<pos:position pos:line="140" pos:column="9"/></name><operator pos:line="140" pos:column="9">-&gt;<pos:position pos:line="140" pos:column="14"/></operator><name pos:line="140" pos:column="11">aDb<pos:position pos:line="140" pos:column="14"/></name><index pos:line="140" pos:column="14">[<expr><name pos:line="140" pos:column="15">iDb<pos:position pos:line="140" pos:column="18"/></name></expr>]<pos:position pos:line="140" pos:column="19"/></index></name><operator pos:line="140" pos:column="19">.<pos:position pos:line="140" pos:column="20"/></operator><name pos:line="140" pos:column="20">zName<pos:position pos:line="140" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="140" pos:column="27">SCHEMA_TABLE<pos:position pos:line="140" pos:column="39"/></name><argument_list pos:line="140" pos:column="39">(<argument><expr><name pos:line="140" pos:column="40">iDb<pos:position pos:line="140" pos:column="43"/></name></expr></argument>)<pos:position pos:line="140" pos:column="44"/></argument_list></call></expr></argument>,
      <argument><expr><name pos:line="141" pos:column="7">zType<pos:position pos:line="141" pos:column="12"/></name></expr></argument>,
      <argument><expr><name><name pos:line="142" pos:column="7">p<pos:position pos:line="142" pos:column="8"/></name><operator pos:line="142" pos:column="8">-&gt;<pos:position pos:line="142" pos:column="13"/></operator><name pos:line="142" pos:column="10">zName<pos:position pos:line="142" pos:column="15"/></name></name></expr></argument>,
      <argument><expr><name><name pos:line="143" pos:column="7">p<pos:position pos:line="143" pos:column="8"/></name><operator pos:line="143" pos:column="8">-&gt;<pos:position pos:line="143" pos:column="13"/></operator><name pos:line="143" pos:column="10">zName<pos:position pos:line="143" pos:column="15"/></name></name></expr></argument>,
      <argument><expr><name><name pos:line="144" pos:column="7">pParse<pos:position pos:line="144" pos:column="13"/></name><operator pos:line="144" pos:column="13">-&gt;<pos:position pos:line="144" pos:column="18"/></operator><name pos:line="144" pos:column="15">regRoot<pos:position pos:line="144" pos:column="22"/></name></name></expr></argument>,
      <argument><expr><name pos:line="145" pos:column="7">zStmt<pos:position pos:line="145" pos:column="12"/></name></expr></argument>,
      <argument><expr><name><name pos:line="146" pos:column="7">pParse<pos:position pos:line="146" pos:column="13"/></name><operator pos:line="146" pos:column="13">-&gt;<pos:position pos:line="146" pos:column="18"/></operator><name pos:line="146" pos:column="15">regRowid<pos:position pos:line="146" pos:column="23"/></name></name></expr></argument>
    )<pos:position pos:line="147" pos:column="6"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="7"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="148" pos:column="5">sqlite3DbFree<pos:position pos:line="148" pos:column="18"/></name><argument_list pos:line="148" pos:column="18">(<argument><expr><name pos:line="148" pos:column="19">db<pos:position pos:line="148" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="23">zStmt<pos:position pos:line="148" pos:column="28"/></name></expr></argument>)<pos:position pos:line="148" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="149" pos:column="5">sqlite3ChangeCookie<pos:position pos:line="149" pos:column="24"/></name><argument_list pos:line="149" pos:column="24">(<argument><expr><name pos:line="149" pos:column="25">pParse<pos:position pos:line="149" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="33">iDb<pos:position pos:line="149" pos:column="36"/></name></expr></argument>)<pos:position pos:line="149" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="38"/></expr_stmt>

<cpp:ifndef pos:line="151" pos:column="1">#<cpp:directive pos:line="151" pos:column="2">ifndef<pos:position pos:line="151" pos:column="8"/></cpp:directive> <name pos:line="151" pos:column="9">SQLITE_OMIT_AUTOINCREMENT<pos:position pos:line="151" pos:column="34"/></name></cpp:ifndef>
    <comment type="block" pos:line="152" pos:column="5">/* Check to see if we need to create an sqlite_sequence table for
    ** keeping track of autoincrement keys.
    */</comment>
    <if pos:line="155" pos:column="5">if<condition pos:line="155" pos:column="7">( <expr><name><name pos:line="155" pos:column="9">p<pos:position pos:line="155" pos:column="10"/></name><operator pos:line="155" pos:column="10">-&gt;<pos:position pos:line="155" pos:column="15"/></operator><name pos:line="155" pos:column="12">tabFlags<pos:position pos:line="155" pos:column="20"/></name></name> <operator pos:line="155" pos:column="21">&amp;<pos:position pos:line="155" pos:column="26"/></operator> <name pos:line="155" pos:column="23">TF_Autoincrement<pos:position pos:line="155" pos:column="39"/></name></expr> )<pos:position pos:line="155" pos:column="41"/></condition><then><block pos:line="155" pos:column="41">{
      <decl_stmt><decl><type><name pos:line="156" pos:column="7">Db<pos:position pos:line="156" pos:column="9"/></name> <modifier pos:line="156" pos:column="10">*<pos:position pos:line="156" pos:column="11"/></modifier></type><name pos:line="156" pos:column="11">pDb<pos:position pos:line="156" pos:column="14"/></name> <init pos:line="156" pos:column="15">= <expr><operator pos:line="156" pos:column="17">&amp;<pos:position pos:line="156" pos:column="22"/></operator><name><name pos:line="156" pos:column="18">db<pos:position pos:line="156" pos:column="20"/></name><operator pos:line="156" pos:column="20">-&gt;<pos:position pos:line="156" pos:column="25"/></operator><name pos:line="156" pos:column="22">aDb<pos:position pos:line="156" pos:column="25"/></name><index pos:line="156" pos:column="25">[<expr><name pos:line="156" pos:column="26">iDb<pos:position pos:line="156" pos:column="29"/></name></expr>]<pos:position pos:line="156" pos:column="30"/></index></name></expr></init></decl>;<pos:position pos:line="156" pos:column="31"/></decl_stmt>
      <if pos:line="157" pos:column="7">if<condition pos:line="157" pos:column="9">( <expr><name><name pos:line="157" pos:column="11">pDb<pos:position pos:line="157" pos:column="14"/></name><operator pos:line="157" pos:column="14">-&gt;<pos:position pos:line="157" pos:column="19"/></operator><name pos:line="157" pos:column="16">pSchema<pos:position pos:line="157" pos:column="23"/></name><operator pos:line="157" pos:column="23">-&gt;<pos:position pos:line="157" pos:column="28"/></operator><name pos:line="157" pos:column="25">pSeqTab<pos:position pos:line="157" pos:column="32"/></name></name><operator pos:line="157" pos:column="32">==<pos:position pos:line="157" pos:column="34"/></operator><literal type="number" pos:line="157" pos:column="34">0<pos:position pos:line="157" pos:column="35"/></literal></expr> )<pos:position pos:line="157" pos:column="37"/></condition><then><block pos:line="157" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="158" pos:column="9">sqlite3NestedParse<pos:position pos:line="158" pos:column="27"/></name><argument_list pos:line="158" pos:column="27">(<argument><expr><name pos:line="158" pos:column="28">pParse<pos:position pos:line="158" pos:column="34"/></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="159" pos:column="11">"CREATE TABLE %Q.sqlite_sequence(name,seq)"<pos:position pos:line="159" pos:column="54"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="160" pos:column="11">pDb<pos:position pos:line="160" pos:column="14"/></name><operator pos:line="160" pos:column="14">-&gt;<pos:position pos:line="160" pos:column="19"/></operator><name pos:line="160" pos:column="16">zName<pos:position pos:line="160" pos:column="21"/></name></name></expr></argument>
        )<pos:position pos:line="161" pos:column="10"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="11"/></expr_stmt>
      }<pos:position pos:line="162" pos:column="8"/></block></then></if>
    }<pos:position pos:line="163" pos:column="6"/></block></then></if>
<cpp:endif pos:line="164" pos:column="1">#<cpp:directive pos:line="164" pos:column="2">endif<pos:position pos:line="164" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="166" pos:column="5">/* Reparse everything to update our internal data structures */</comment>
    <expr_stmt><expr><call><name pos:line="167" pos:column="5">sqlite3VdbeAddOp4<pos:position pos:line="167" pos:column="22"/></name><argument_list pos:line="167" pos:column="22">(<argument><expr><name pos:line="167" pos:column="23">v<pos:position pos:line="167" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="26">OP_ParseSchema<pos:position pos:line="167" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="42">iDb<pos:position pos:line="167" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="167" pos:column="47">0<pos:position pos:line="167" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="167" pos:column="50">0<pos:position pos:line="167" pos:column="51"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="168" pos:column="9">sqlite3MPrintf<pos:position pos:line="168" pos:column="23"/></name><argument_list pos:line="168" pos:column="23">(<argument><expr><name pos:line="168" pos:column="24">db<pos:position pos:line="168" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="28">"tbl_name='%q'"<pos:position pos:line="168" pos:column="43"/></literal></expr></argument>,<argument><expr><name><name pos:line="168" pos:column="44">p<pos:position pos:line="168" pos:column="45"/></name><operator pos:line="168" pos:column="45">-&gt;<pos:position pos:line="168" pos:column="50"/></operator><name pos:line="168" pos:column="47">zName<pos:position pos:line="168" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="168" pos:column="55">P4_DYNAMIC<pos:position pos:line="168" pos:column="65"/></name></expr></argument>)<pos:position pos:line="168" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="169" pos:column="4"/></block></then></if>


  <comment type="block" pos:line="172" pos:column="3">/* Add the table to the in-memory representation of the database.
  */</comment>
  <if pos:line="174" pos:column="3">if<condition pos:line="174" pos:column="5">( <expr><name><name pos:line="174" pos:column="7">db<pos:position pos:line="174" pos:column="9"/></name><operator pos:line="174" pos:column="9">-&gt;<pos:position pos:line="174" pos:column="14"/></operator><name pos:line="174" pos:column="11">init<pos:position pos:line="174" pos:column="15"/></name><operator pos:line="174" pos:column="15">.<pos:position pos:line="174" pos:column="16"/></operator><name pos:line="174" pos:column="16">busy<pos:position pos:line="174" pos:column="20"/></name></name></expr> )<pos:position pos:line="174" pos:column="22"/></condition><then><block pos:line="174" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="175" pos:column="5">Table<pos:position pos:line="175" pos:column="10"/></name> <modifier pos:line="175" pos:column="11">*<pos:position pos:line="175" pos:column="12"/></modifier></type><name pos:line="175" pos:column="12">pOld<pos:position pos:line="175" pos:column="16"/></name></decl>;<pos:position pos:line="175" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="176" pos:column="5">Schema<pos:position pos:line="176" pos:column="11"/></name> <modifier pos:line="176" pos:column="12">*<pos:position pos:line="176" pos:column="13"/></modifier></type><name pos:line="176" pos:column="13">pSchema<pos:position pos:line="176" pos:column="20"/></name> <init pos:line="176" pos:column="21">= <expr><name><name pos:line="176" pos:column="23">p<pos:position pos:line="176" pos:column="24"/></name><operator pos:line="176" pos:column="24">-&gt;<pos:position pos:line="176" pos:column="29"/></operator><name pos:line="176" pos:column="26">pSchema<pos:position pos:line="176" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="176" pos:column="34"/></decl_stmt>
    <expr_stmt><expr><name pos:line="177" pos:column="5">pOld<pos:position pos:line="177" pos:column="9"/></name> <operator pos:line="177" pos:column="10">=<pos:position pos:line="177" pos:column="11"/></operator> <call><name pos:line="177" pos:column="12">sqlite3HashInsert<pos:position pos:line="177" pos:column="29"/></name><argument_list pos:line="177" pos:column="29">(<argument><expr><operator pos:line="177" pos:column="30">&amp;<pos:position pos:line="177" pos:column="35"/></operator><name><name pos:line="177" pos:column="31">pSchema<pos:position pos:line="177" pos:column="38"/></name><operator pos:line="177" pos:column="38">-&gt;<pos:position pos:line="177" pos:column="43"/></operator><name pos:line="177" pos:column="40">tblHash<pos:position pos:line="177" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="177" pos:column="49">p<pos:position pos:line="177" pos:column="50"/></name><operator pos:line="177" pos:column="50">-&gt;<pos:position pos:line="177" pos:column="55"/></operator><name pos:line="177" pos:column="52">zName<pos:position pos:line="177" pos:column="57"/></name></name></expr></argument>,
                             <argument><expr><call><name pos:line="178" pos:column="30">sqlite3Strlen30<pos:position pos:line="178" pos:column="45"/></name><argument_list pos:line="178" pos:column="45">(<argument><expr><name><name pos:line="178" pos:column="46">p<pos:position pos:line="178" pos:column="47"/></name><operator pos:line="178" pos:column="47">-&gt;<pos:position pos:line="178" pos:column="52"/></operator><name pos:line="178" pos:column="49">zName<pos:position pos:line="178" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="178" pos:column="55"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="178" pos:column="56">p<pos:position pos:line="178" pos:column="57"/></name></expr></argument>)<pos:position pos:line="178" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="59"/></expr_stmt>
    <if pos:line="179" pos:column="5">if<condition pos:line="179" pos:column="7">( <expr><name pos:line="179" pos:column="9">pOld<pos:position pos:line="179" pos:column="13"/></name></expr> )<pos:position pos:line="179" pos:column="15"/></condition><then><block pos:line="179" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="180" pos:column="7">assert<pos:position pos:line="180" pos:column="13"/></name><argument_list pos:line="180" pos:column="13">( <argument><expr><name pos:line="180" pos:column="15">p<pos:position pos:line="180" pos:column="16"/></name><operator pos:line="180" pos:column="16">==<pos:position pos:line="180" pos:column="18"/></operator><name pos:line="180" pos:column="18">pOld<pos:position pos:line="180" pos:column="22"/></name></expr></argument> )<pos:position pos:line="180" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="25"/></expr_stmt>  <comment type="block" pos:line="180" pos:column="27">/* Malloc must have failed inside HashInsert() */</comment>
      <expr_stmt><expr><name><name pos:line="181" pos:column="7">db<pos:position pos:line="181" pos:column="9"/></name><operator pos:line="181" pos:column="9">-&gt;<pos:position pos:line="181" pos:column="14"/></operator><name pos:line="181" pos:column="11">mallocFailed<pos:position pos:line="181" pos:column="23"/></name></name> <operator pos:line="181" pos:column="24">=<pos:position pos:line="181" pos:column="25"/></operator> <literal type="number" pos:line="181" pos:column="26">1<pos:position pos:line="181" pos:column="27"/></literal></expr>;<pos:position pos:line="181" pos:column="28"/></expr_stmt>
      <return pos:line="182" pos:column="7">return;<pos:position pos:line="182" pos:column="14"/></return>
    }<pos:position pos:line="183" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="184" pos:column="5">pParse<pos:position pos:line="184" pos:column="11"/></name><operator pos:line="184" pos:column="11">-&gt;<pos:position pos:line="184" pos:column="16"/></operator><name pos:line="184" pos:column="13">pNewTable<pos:position pos:line="184" pos:column="22"/></name></name> <operator pos:line="184" pos:column="23">=<pos:position pos:line="184" pos:column="24"/></operator> <literal type="number" pos:line="184" pos:column="25">0<pos:position pos:line="184" pos:column="26"/></literal></expr>;<pos:position pos:line="184" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="185" pos:column="5">db<pos:position pos:line="185" pos:column="7"/></name><operator pos:line="185" pos:column="7">-&gt;<pos:position pos:line="185" pos:column="12"/></operator><name pos:line="185" pos:column="9">nTable<pos:position pos:line="185" pos:column="15"/></name></name><operator pos:line="185" pos:column="15">++<pos:position pos:line="185" pos:column="17"/></operator></expr>;<pos:position pos:line="185" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="186" pos:column="5">db<pos:position pos:line="186" pos:column="7"/></name><operator pos:line="186" pos:column="7">-&gt;<pos:position pos:line="186" pos:column="12"/></operator><name pos:line="186" pos:column="9">flags<pos:position pos:line="186" pos:column="14"/></name></name> <operator pos:line="186" pos:column="15">|=<pos:position pos:line="186" pos:column="17"/></operator> <name pos:line="186" pos:column="18">SQLITE_InternChanges<pos:position pos:line="186" pos:column="38"/></name></expr>;<pos:position pos:line="186" pos:column="39"/></expr_stmt>

<cpp:ifndef pos:line="188" pos:column="1">#<cpp:directive pos:line="188" pos:column="2">ifndef<pos:position pos:line="188" pos:column="8"/></cpp:directive> <name pos:line="188" pos:column="9">SQLITE_OMIT_ALTERTABLE<pos:position pos:line="188" pos:column="31"/></name></cpp:ifndef>
    <if pos:line="189" pos:column="5">if<condition pos:line="189" pos:column="7">( <expr><operator pos:line="189" pos:column="9">!<pos:position pos:line="189" pos:column="10"/></operator><name><name pos:line="189" pos:column="10">p<pos:position pos:line="189" pos:column="11"/></name><operator pos:line="189" pos:column="11">-&gt;<pos:position pos:line="189" pos:column="16"/></operator><name pos:line="189" pos:column="13">pSelect<pos:position pos:line="189" pos:column="20"/></name></name></expr> )<pos:position pos:line="189" pos:column="22"/></condition><then><block pos:line="189" pos:column="22">{
      <decl_stmt><decl><type><specifier pos:line="190" pos:column="7">const<pos:position pos:line="190" pos:column="12"/></specifier> <name pos:line="190" pos:column="13">char<pos:position pos:line="190" pos:column="17"/></name> <modifier pos:line="190" pos:column="18">*<pos:position pos:line="190" pos:column="19"/></modifier></type><name pos:line="190" pos:column="19">zName<pos:position pos:line="190" pos:column="24"/></name> <init pos:line="190" pos:column="25">= <expr><operator pos:line="190" pos:column="27">(<pos:position pos:line="190" pos:column="28"/></operator><specifier pos:line="190" pos:column="28">const<pos:position pos:line="190" pos:column="33"/></specifier> <name pos:line="190" pos:column="34">char<pos:position pos:line="190" pos:column="38"/></name> <operator pos:line="190" pos:column="39">*<pos:position pos:line="190" pos:column="40"/></operator><operator pos:line="190" pos:column="40">)<pos:position pos:line="190" pos:column="41"/></operator><name><name pos:line="190" pos:column="41">pParse<pos:position pos:line="190" pos:column="47"/></name><operator pos:line="190" pos:column="47">-&gt;<pos:position pos:line="190" pos:column="52"/></operator><name pos:line="190" pos:column="49">sNameToken<pos:position pos:line="190" pos:column="59"/></name><operator pos:line="190" pos:column="59">.<pos:position pos:line="190" pos:column="60"/></operator><name pos:line="190" pos:column="60">z<pos:position pos:line="190" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="190" pos:column="62"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="191" pos:column="7">int<pos:position pos:line="191" pos:column="10"/></name></type> <name pos:line="191" pos:column="11">nName<pos:position pos:line="191" pos:column="16"/></name></decl>;<pos:position pos:line="191" pos:column="17"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="192" pos:column="7">assert<pos:position pos:line="192" pos:column="13"/></name><argument_list pos:line="192" pos:column="13">( <argument><expr><operator pos:line="192" pos:column="15">!<pos:position pos:line="192" pos:column="16"/></operator><name pos:line="192" pos:column="16">pSelect<pos:position pos:line="192" pos:column="23"/></name> <operator pos:line="192" pos:column="24">&amp;&amp;<pos:position pos:line="192" pos:column="34"/></operator> <name pos:line="192" pos:column="27">pCons<pos:position pos:line="192" pos:column="32"/></name> <operator pos:line="192" pos:column="33">&amp;&amp;<pos:position pos:line="192" pos:column="43"/></operator> <name pos:line="192" pos:column="36">pEnd<pos:position pos:line="192" pos:column="40"/></name></expr></argument> )<pos:position pos:line="192" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="43"/></expr_stmt>
      <if pos:line="193" pos:column="7">if<condition pos:line="193" pos:column="9">( <expr><name><name pos:line="193" pos:column="11">pCons<pos:position pos:line="193" pos:column="16"/></name><operator pos:line="193" pos:column="16">-&gt;<pos:position pos:line="193" pos:column="21"/></operator><name pos:line="193" pos:column="18">z<pos:position pos:line="193" pos:column="19"/></name></name><operator pos:line="193" pos:column="19">==<pos:position pos:line="193" pos:column="21"/></operator><literal type="number" pos:line="193" pos:column="21">0<pos:position pos:line="193" pos:column="22"/></literal></expr> )<pos:position pos:line="193" pos:column="24"/></condition><then><block pos:line="193" pos:column="24">{
        <expr_stmt><expr><name pos:line="194" pos:column="9">pCons<pos:position pos:line="194" pos:column="14"/></name> <operator pos:line="194" pos:column="15">=<pos:position pos:line="194" pos:column="16"/></operator> <name pos:line="194" pos:column="17">pEnd<pos:position pos:line="194" pos:column="21"/></name></expr>;<pos:position pos:line="194" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="195" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="196" pos:column="7">nName<pos:position pos:line="196" pos:column="12"/></name> <operator pos:line="196" pos:column="13">=<pos:position pos:line="196" pos:column="14"/></operator> <call pos:line="196" pos:column="15">(<name pos:line="196" pos:column="16">int<pos:position pos:line="196" pos:column="19"/></name>)<argument_list pos:line="196" pos:column="20">(<argument><expr><operator pos:line="196" pos:column="21">(<pos:position pos:line="196" pos:column="22"/></operator><specifier pos:line="196" pos:column="22">const<pos:position pos:line="196" pos:column="27"/></specifier> <name pos:line="196" pos:column="28">char<pos:position pos:line="196" pos:column="32"/></name> <operator pos:line="196" pos:column="33">*<pos:position pos:line="196" pos:column="34"/></operator><operator pos:line="196" pos:column="34">)<pos:position pos:line="196" pos:column="35"/></operator><name><name pos:line="196" pos:column="35">pCons<pos:position pos:line="196" pos:column="40"/></name><operator pos:line="196" pos:column="40">-&gt;<pos:position pos:line="196" pos:column="45"/></operator><name pos:line="196" pos:column="42">z<pos:position pos:line="196" pos:column="43"/></name></name> <operator pos:line="196" pos:column="44">-<pos:position pos:line="196" pos:column="45"/></operator> <name pos:line="196" pos:column="46">zName<pos:position pos:line="196" pos:column="51"/></name></expr></argument>)<pos:position pos:line="196" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="197" pos:column="7">p<pos:position pos:line="197" pos:column="8"/></name><operator pos:line="197" pos:column="8">-&gt;<pos:position pos:line="197" pos:column="13"/></operator><name pos:line="197" pos:column="10">addColOffset<pos:position pos:line="197" pos:column="22"/></name></name> <operator pos:line="197" pos:column="23">=<pos:position pos:line="197" pos:column="24"/></operator> <literal type="number" pos:line="197" pos:column="25">13<pos:position pos:line="197" pos:column="27"/></literal> <operator pos:line="197" pos:column="28">+<pos:position pos:line="197" pos:column="29"/></operator> <call><name pos:line="197" pos:column="30">sqlite3Utf8CharLen<pos:position pos:line="197" pos:column="48"/></name><argument_list pos:line="197" pos:column="48">(<argument><expr><name pos:line="197" pos:column="49">zName<pos:position pos:line="197" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="56">nName<pos:position pos:line="197" pos:column="61"/></name></expr></argument>)<pos:position pos:line="197" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="198" pos:column="6"/></block></then></if>
<cpp:endif pos:line="199" pos:column="1">#<cpp:directive pos:line="199" pos:column="2">endif<pos:position pos:line="199" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="200" pos:column="4"/></block></then></if>
}<pos:position pos:line="201" pos:column="2"/></block></function></unit>

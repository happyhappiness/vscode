<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_176.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sqlite3InitOne<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">sqlite3<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">db<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">iDb<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier><modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">pzErrMsg<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list><block pos:line="1" pos:column="65">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">rc<pos:position pos:line="2" pos:column="9"/></name></decl>;<pos:position pos:line="2" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
<cpp:ifndef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifndef<pos:position pos:line="4" pos:column="8"/></cpp:directive> <name pos:line="4" pos:column="9">SQLITE_OMIT_DEPRECATED<pos:position pos:line="4" pos:column="31"/></name></cpp:ifndef>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">size<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">Db<pos:position pos:line="7" pos:column="5"/></name> <modifier pos:line="7" pos:column="6">*<pos:position pos:line="7" pos:column="7"/></modifier></type><name pos:line="7" pos:column="7">pDb<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <specifier pos:line="8" pos:column="8">const<pos:position pos:line="8" pos:column="13"/></specifier> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name><name pos:line="8" pos:column="15">azArg<pos:position pos:line="8" pos:column="20"/></name><index pos:line="8" pos:column="20">[<expr><literal type="number" pos:line="8" pos:column="21">4<pos:position pos:line="8" pos:column="22"/></literal></expr>]<pos:position pos:line="8" pos:column="23"/></index></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name><name pos:line="9" pos:column="7">meta<pos:position pos:line="9" pos:column="11"/></name><index pos:line="9" pos:column="11">[<expr><literal type="number" pos:line="9" pos:column="12">5<pos:position pos:line="9" pos:column="13"/></literal></expr>]<pos:position pos:line="9" pos:column="14"/></index></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">InitData<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">initData<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">zMasterName<pos:position pos:line="11" pos:column="26"/></name></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">openedTransaction<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">assert<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">( <argument><expr><name pos:line="14" pos:column="11">iDb<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">&gt;=<pos:position pos:line="14" pos:column="19"/></operator><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal> <operator pos:line="14" pos:column="18">&amp;&amp;<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="21">iDb<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">&lt;<pos:position pos:line="14" pos:column="28"/></operator><name><name pos:line="14" pos:column="25">db<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">nDb<pos:position pos:line="14" pos:column="32"/></name></name></expr></argument> )<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">assert<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">( <argument><expr><name><name pos:line="15" pos:column="11">db<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">aDb<pos:position pos:line="15" pos:column="18"/></name><index pos:line="15" pos:column="18">[<expr><name pos:line="15" pos:column="19">iDb<pos:position pos:line="15" pos:column="22"/></name></expr>]<pos:position pos:line="15" pos:column="23"/></index></name><operator pos:line="15" pos:column="23">.<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">pSchema<pos:position pos:line="15" pos:column="31"/></name></expr></argument> )<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">assert<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">( <argument><expr><call><name pos:line="16" pos:column="11">sqlite3_mutex_held<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name><name pos:line="16" pos:column="30">db<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">mutex<pos:position pos:line="16" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr></argument> )<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">assert<pos:position pos:line="17" pos:column="9"/></name><argument_list pos:line="17" pos:column="9">( <argument><expr><name pos:line="17" pos:column="11">iDb<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator><literal type="number" pos:line="17" pos:column="16">1<pos:position pos:line="17" pos:column="17"/></literal> <operator pos:line="17" pos:column="18">||<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">sqlite3BtreeHoldsMutex<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><name><name pos:line="17" pos:column="44">db<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">aDb<pos:position pos:line="17" pos:column="51"/></name><index pos:line="17" pos:column="51">[<expr><name pos:line="17" pos:column="52">iDb<pos:position pos:line="17" pos:column="55"/></name></expr>]<pos:position pos:line="17" pos:column="56"/></index></name><operator pos:line="17" pos:column="56">.<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">pBt<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr></argument> )<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">db<pos:position pos:line="19" pos:column="5"/></name><operator pos:line="19" pos:column="5">-&gt;<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="7">init<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">.<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">busy<pos:position pos:line="19" pos:column="16"/></name></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <literal type="number" pos:line="19" pos:column="19">1<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* Construct the in-memory representation schema tables (sqlite_master or
  ** sqlite_temp_master) by invoking the parser directly.  The appropriate
  ** table name will be inserted automatically by the parser so we can just
  ** use the abbreviation "x" here.  The parser will also automatically tag
  ** the schema table as read-only. */</comment>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">azArg<pos:position pos:line="26" pos:column="8"/></name><index pos:line="26" pos:column="8">[<expr><literal type="number" pos:line="26" pos:column="9">0<pos:position pos:line="26" pos:column="10"/></literal></expr>]<pos:position pos:line="26" pos:column="11"/></index></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">zMasterName<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <call><name pos:line="26" pos:column="28">SCHEMA_TABLE<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">iDb<pos:position pos:line="26" pos:column="44"/></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">azArg<pos:position pos:line="27" pos:column="8"/></name><index pos:line="27" pos:column="8">[<expr><literal type="number" pos:line="27" pos:column="9">1<pos:position pos:line="27" pos:column="10"/></literal></expr>]<pos:position pos:line="27" pos:column="11"/></index></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="string" pos:line="27" pos:column="14">"1"<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">azArg<pos:position pos:line="28" pos:column="8"/></name><index pos:line="28" pos:column="8">[<expr><literal type="number" pos:line="28" pos:column="9">2<pos:position pos:line="28" pos:column="10"/></literal></expr>]<pos:position pos:line="28" pos:column="11"/></index></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <literal type="string" pos:line="28" pos:column="14">"CREATE TABLE x(type text,name text,tbl_name text,"<pos:position pos:line="28" pos:column="65"/></literal>
                            <literal type="string" pos:line="29" pos:column="29">"rootpage int,sql text)"<pos:position pos:line="29" pos:column="53"/></literal></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">azArg<pos:position pos:line="30" pos:column="8"/></name><index pos:line="30" pos:column="8">[<expr><literal type="number" pos:line="30" pos:column="9">3<pos:position pos:line="30" pos:column="10"/></literal></expr>]<pos:position pos:line="30" pos:column="11"/></index></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <literal type="number" pos:line="30" pos:column="14">0<pos:position pos:line="30" pos:column="15"/></literal></expr>;<pos:position pos:line="30" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">initData<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">db<pos:position pos:line="31" pos:column="14"/></name></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">db<pos:position pos:line="31" pos:column="19"/></name></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">initData<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">.<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">iDb<pos:position pos:line="32" pos:column="15"/></name></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">iDb<pos:position pos:line="32" pos:column="21"/></name></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">initData<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">.<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="12">rc<pos:position pos:line="33" pos:column="14"/></name></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <name pos:line="33" pos:column="17">SQLITE_OK<pos:position pos:line="33" pos:column="26"/></name></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="34" pos:column="3">initData<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">.<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="12">pzErrMsg<pos:position pos:line="34" pos:column="20"/></name></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">pzErrMsg<pos:position pos:line="34" pos:column="31"/></name></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">sqlite3InitCallback<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><operator pos:line="35" pos:column="23">&amp;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="24">initData<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="34">3<pos:position pos:line="35" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="37">(<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">char<pos:position pos:line="35" pos:column="42"/></name> <operator pos:line="35" pos:column="43">*<pos:position pos:line="35" pos:column="44"/></operator><operator pos:line="35" pos:column="44">*<pos:position pos:line="35" pos:column="45"/></operator><operator pos:line="35" pos:column="45">)<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="46">azArg<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="53">0<pos:position pos:line="35" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">( <expr><name><name pos:line="36" pos:column="7">initData<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">.<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">rc<pos:position pos:line="36" pos:column="18"/></name></name></expr> )<pos:position pos:line="36" pos:column="20"/></condition><then><block pos:line="36" pos:column="20">{
    <expr_stmt><expr><name pos:line="37" pos:column="5">rc<pos:position pos:line="37" pos:column="7"/></name> <operator pos:line="37" pos:column="8">=<pos:position pos:line="37" pos:column="9"/></operator> <name><name pos:line="37" pos:column="10">initData<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">.<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">rc<pos:position pos:line="37" pos:column="21"/></name></name></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
    <goto pos:line="38" pos:column="5">goto <name pos:line="38" pos:column="10">error_out<pos:position pos:line="38" pos:column="19"/></name>;<pos:position pos:line="38" pos:column="20"/></goto>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="41" pos:column="3">/* Create a cursor to hold the database open
  */</comment>
  <expr_stmt><expr><name pos:line="43" pos:column="3">pDb<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator> <operator pos:line="43" pos:column="9">&amp;<pos:position pos:line="43" pos:column="14"/></operator><name><name pos:line="43" pos:column="10">db<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">aDb<pos:position pos:line="43" pos:column="17"/></name><index pos:line="43" pos:column="17">[<expr><name pos:line="43" pos:column="18">iDb<pos:position pos:line="43" pos:column="21"/></name></expr>]<pos:position pos:line="43" pos:column="22"/></index></name></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">( <expr><name><name pos:line="44" pos:column="7">pDb<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">pBt<pos:position pos:line="44" pos:column="15"/></name></name><operator pos:line="44" pos:column="15">==<pos:position pos:line="44" pos:column="17"/></operator><literal type="number" pos:line="44" pos:column="17">0<pos:position pos:line="44" pos:column="18"/></literal></expr> )<pos:position pos:line="44" pos:column="20"/></condition><then><block pos:line="44" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">assert<pos:position pos:line="45" pos:column="11"/></name><argument_list pos:line="45" pos:column="11">( <argument><expr><name pos:line="45" pos:column="13">iDb<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">==<pos:position pos:line="45" pos:column="18"/></operator><literal type="number" pos:line="45" pos:column="18">1<pos:position pos:line="45" pos:column="19"/></literal></expr></argument> )<pos:position pos:line="45" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">DbSetProperty<pos:position pos:line="46" pos:column="18"/></name><argument_list pos:line="46" pos:column="18">(<argument><expr><name pos:line="46" pos:column="19">db<pos:position pos:line="46" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="23">1<pos:position pos:line="46" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="26">DB_SchemaLoaded<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">rc<pos:position pos:line="47" pos:column="7"/></name> <operator pos:line="47" pos:column="8">=<pos:position pos:line="47" pos:column="9"/></operator> <name pos:line="47" pos:column="10">SQLITE_OK<pos:position pos:line="47" pos:column="19"/></name></expr>;<pos:position pos:line="47" pos:column="20"/></expr_stmt>
    <goto pos:line="48" pos:column="5">goto <name pos:line="48" pos:column="10">error_out<pos:position pos:line="48" pos:column="19"/></name>;<pos:position pos:line="48" pos:column="20"/></goto>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="51" pos:column="3">/* If there is not already a read-only (or read-write) transaction opened
  ** on the b-tree database, open one now. If a transaction is opened, it 
  ** will be closed before this function returns.  */</comment>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">sqlite3BtreeEnter<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name><name pos:line="54" pos:column="21">pDb<pos:position pos:line="54" pos:column="24"/></name><operator pos:line="54" pos:column="24">-&gt;<pos:position pos:line="54" pos:column="29"/></operator><name pos:line="54" pos:column="26">pBt<pos:position pos:line="54" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
  <if pos:line="55" pos:column="3">if<condition pos:line="55" pos:column="5">( <expr><operator pos:line="55" pos:column="7">!<pos:position pos:line="55" pos:column="8"/></operator><call><name pos:line="55" pos:column="8">sqlite3BtreeIsInReadTrans<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">(<argument><expr><name><name pos:line="55" pos:column="34">pDb<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">-&gt;<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="39">pBt<pos:position pos:line="55" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr> )<pos:position pos:line="55" pos:column="45"/></condition><then><block pos:line="55" pos:column="45">{
    <expr_stmt><expr><name pos:line="56" pos:column="5">rc<pos:position pos:line="56" pos:column="7"/></name> <operator pos:line="56" pos:column="8">=<pos:position pos:line="56" pos:column="9"/></operator> <call><name pos:line="56" pos:column="10">sqlite3BtreeBeginTrans<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name><name pos:line="56" pos:column="33">pDb<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">-&gt;<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="38">pBt<pos:position pos:line="56" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="43">0<pos:position pos:line="56" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="46"/></expr_stmt>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">( <expr><name pos:line="57" pos:column="9">rc<pos:position pos:line="57" pos:column="11"/></name><operator pos:line="57" pos:column="11">!=<pos:position pos:line="57" pos:column="13"/></operator><name pos:line="57" pos:column="13">SQLITE_OK<pos:position pos:line="57" pos:column="22"/></name></expr> )<pos:position pos:line="57" pos:column="24"/></condition><then><block pos:line="57" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">sqlite3SetString<pos:position pos:line="58" pos:column="23"/></name><argument_list pos:line="58" pos:column="23">(<argument><expr><name pos:line="58" pos:column="24">pzErrMsg<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">db<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="38">sqlite3ErrStr<pos:position pos:line="58" pos:column="51"/></name><argument_list pos:line="58" pos:column="51">(<argument><expr><name pos:line="58" pos:column="52">rc<pos:position pos:line="58" pos:column="54"/></name></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="57"/></expr_stmt>
      <goto pos:line="59" pos:column="7">goto <name pos:line="59" pos:column="12">initone_error_out<pos:position pos:line="59" pos:column="29"/></name>;<pos:position pos:line="59" pos:column="30"/></goto>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="61" pos:column="5">openedTransaction<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <literal type="number" pos:line="61" pos:column="25">1<pos:position pos:line="61" pos:column="26"/></literal></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="64" pos:column="3">/* Get the database meta information.
  **
  ** Meta values are as follows:
  **    meta[0]   Schema cookie.  Changes with each schema change.
  **    meta[1]   File format of schema layer.
  **    meta[2]   Size of the page cache.
  **    meta[3]   Largest rootpage (auto/incr_vacuum mode)
  **    meta[4]   Db text encoding. 1:UTF-8 2:UTF-16LE 3:UTF-16BE
  **    meta[5]   User version
  **    meta[6]   Incremental vacuum mode
  **    meta[7]   unused
  **    meta[8]   unused
  **    meta[9]   unused
  **
  ** Note: The #defined SQLITE_UTF* symbols in sqliteInt.h correspond to
  ** the possible values of meta[4].
  */</comment>
  <for pos:line="81" pos:column="3">for<control pos:line="81" pos:column="6">(<init><expr><name pos:line="81" pos:column="7">i<pos:position pos:line="81" pos:column="8"/></name><operator pos:line="81" pos:column="8">=<pos:position pos:line="81" pos:column="9"/></operator><literal type="number" pos:line="81" pos:column="9">0<pos:position pos:line="81" pos:column="10"/></literal></expr>;<pos:position pos:line="81" pos:column="11"/></init> <condition><expr><name pos:line="81" pos:column="12">i<pos:position pos:line="81" pos:column="13"/></name><operator pos:line="81" pos:column="13">&lt;<pos:position pos:line="81" pos:column="17"/></operator><call><name pos:line="81" pos:column="14">ArraySize<pos:position pos:line="81" pos:column="23"/></name><argument_list pos:line="81" pos:column="23">(<argument><expr><name pos:line="81" pos:column="24">meta<pos:position pos:line="81" pos:column="28"/></name></expr></argument>)<pos:position pos:line="81" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="30"/></condition> <incr><expr><name pos:line="81" pos:column="31">i<pos:position pos:line="81" pos:column="32"/></name><operator pos:line="81" pos:column="32">++<pos:position pos:line="81" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="81" pos:column="35"/></control><block pos:line="81" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">sqlite3BtreeGetMeta<pos:position pos:line="82" pos:column="24"/></name><argument_list pos:line="82" pos:column="24">(<argument><expr><name><name pos:line="82" pos:column="25">pDb<pos:position pos:line="82" pos:column="28"/></name><operator pos:line="82" pos:column="28">-&gt;<pos:position pos:line="82" pos:column="33"/></operator><name pos:line="82" pos:column="30">pBt<pos:position pos:line="82" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="35">i<pos:position pos:line="82" pos:column="36"/></name><operator pos:line="82" pos:column="36">+<pos:position pos:line="82" pos:column="37"/></operator><literal type="number" pos:line="82" pos:column="37">1<pos:position pos:line="82" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="82" pos:column="40">(<pos:position pos:line="82" pos:column="41"/></operator><name pos:line="82" pos:column="41">u32<pos:position pos:line="82" pos:column="44"/></name> <operator pos:line="82" pos:column="45">*<pos:position pos:line="82" pos:column="46"/></operator><operator pos:line="82" pos:column="46">)<pos:position pos:line="82" pos:column="47"/></operator><operator pos:line="82" pos:column="47">&amp;<pos:position pos:line="82" pos:column="52"/></operator><name><name pos:line="82" pos:column="48">meta<pos:position pos:line="82" pos:column="52"/></name><index pos:line="82" pos:column="52">[<expr><name pos:line="82" pos:column="53">i<pos:position pos:line="82" pos:column="54"/></name></expr>]<pos:position pos:line="82" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="82" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="57"/></expr_stmt>
  }<pos:position pos:line="83" pos:column="4"/></block></for>
  <expr_stmt><expr><name><name pos:line="84" pos:column="3">pDb<pos:position pos:line="84" pos:column="6"/></name><operator pos:line="84" pos:column="6">-&gt;<pos:position pos:line="84" pos:column="11"/></operator><name pos:line="84" pos:column="8">pSchema<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">-&gt;<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="17">schema_cookie<pos:position pos:line="84" pos:column="30"/></name></name> <operator pos:line="84" pos:column="31">=<pos:position pos:line="84" pos:column="32"/></operator> <name><name pos:line="84" pos:column="33">meta<pos:position pos:line="84" pos:column="37"/></name><index pos:line="84" pos:column="37">[<expr><name pos:line="84" pos:column="38">BTREE_SCHEMA_VERSION<pos:position pos:line="84" pos:column="58"/></name><operator pos:line="84" pos:column="58">-<pos:position pos:line="84" pos:column="59"/></operator><literal type="number" pos:line="84" pos:column="59">1<pos:position pos:line="84" pos:column="60"/></literal></expr>]<pos:position pos:line="84" pos:column="61"/></index></name></expr>;<pos:position pos:line="84" pos:column="62"/></expr_stmt>

  <comment type="block" pos:line="86" pos:column="3">/* If opening a non-empty database, check the text encoding. For the
  ** main database, set sqlite3.enc to the encoding of the main database.
  ** For an attached db, it is an error if the encoding is not the same
  ** as sqlite3.enc.
  */</comment>
  <if pos:line="91" pos:column="3">if<condition pos:line="91" pos:column="5">( <expr><name><name pos:line="91" pos:column="7">meta<pos:position pos:line="91" pos:column="11"/></name><index pos:line="91" pos:column="11">[<expr><name pos:line="91" pos:column="12">BTREE_TEXT_ENCODING<pos:position pos:line="91" pos:column="31"/></name><operator pos:line="91" pos:column="31">-<pos:position pos:line="91" pos:column="32"/></operator><literal type="number" pos:line="91" pos:column="32">1<pos:position pos:line="91" pos:column="33"/></literal></expr>]<pos:position pos:line="91" pos:column="34"/></index></name></expr> )<pos:position pos:line="91" pos:column="36"/></condition><then><block pos:line="91" pos:column="36">{  <comment type="block" pos:line="91" pos:column="39">/* text encoding */</comment>
    <if pos:line="92" pos:column="5">if<condition pos:line="92" pos:column="7">( <expr><name pos:line="92" pos:column="9">iDb<pos:position pos:line="92" pos:column="12"/></name><operator pos:line="92" pos:column="12">==<pos:position pos:line="92" pos:column="14"/></operator><literal type="number" pos:line="92" pos:column="14">0<pos:position pos:line="92" pos:column="15"/></literal></expr> )<pos:position pos:line="92" pos:column="17"/></condition><then><block pos:line="92" pos:column="17">{
<cpp:ifndef pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">ifndef<pos:position pos:line="93" pos:column="8"/></cpp:directive> <name pos:line="93" pos:column="9">SQLITE_OMIT_UTF16<pos:position pos:line="93" pos:column="26"/></name></cpp:ifndef>
      <decl_stmt><decl><type><name pos:line="94" pos:column="7">u8<pos:position pos:line="94" pos:column="9"/></name></type> <name pos:line="94" pos:column="10">encoding<pos:position pos:line="94" pos:column="18"/></name></decl>;<pos:position pos:line="94" pos:column="19"/></decl_stmt>
      <comment type="block" pos:line="95" pos:column="7">/* If opening the main database, set ENC(db). */</comment>
      <expr_stmt><expr><name pos:line="96" pos:column="7">encoding<pos:position pos:line="96" pos:column="15"/></name> <operator pos:line="96" pos:column="16">=<pos:position pos:line="96" pos:column="17"/></operator> <operator pos:line="96" pos:column="18">(<pos:position pos:line="96" pos:column="19"/></operator><name pos:line="96" pos:column="19">u8<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">)<pos:position pos:line="96" pos:column="22"/></operator><name><name pos:line="96" pos:column="22">meta<pos:position pos:line="96" pos:column="26"/></name><index pos:line="96" pos:column="26">[<expr><name pos:line="96" pos:column="27">BTREE_TEXT_ENCODING<pos:position pos:line="96" pos:column="46"/></name><operator pos:line="96" pos:column="46">-<pos:position pos:line="96" pos:column="47"/></operator><literal type="number" pos:line="96" pos:column="47">1<pos:position pos:line="96" pos:column="48"/></literal></expr>]<pos:position pos:line="96" pos:column="49"/></index></name> <operator pos:line="96" pos:column="50">&amp;<pos:position pos:line="96" pos:column="55"/></operator> <literal type="number" pos:line="96" pos:column="52">3<pos:position pos:line="96" pos:column="53"/></literal></expr>;<pos:position pos:line="96" pos:column="54"/></expr_stmt>
      <if pos:line="97" pos:column="7">if<condition pos:line="97" pos:column="9">( <expr><name pos:line="97" pos:column="11">encoding<pos:position pos:line="97" pos:column="19"/></name><operator pos:line="97" pos:column="19">==<pos:position pos:line="97" pos:column="21"/></operator><literal type="number" pos:line="97" pos:column="21">0<pos:position pos:line="97" pos:column="22"/></literal></expr> )<pos:position pos:line="97" pos:column="24"/></condition><then pos:line="97" pos:column="24"> <block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="25">encoding<pos:position pos:line="97" pos:column="33"/></name> <operator pos:line="97" pos:column="34">=<pos:position pos:line="97" pos:column="35"/></operator> <name pos:line="97" pos:column="36">SQLITE_UTF8<pos:position pos:line="97" pos:column="47"/></name></expr>;<pos:position pos:line="97" pos:column="48"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">ENC<pos:position pos:line="98" pos:column="10"/></name><argument_list pos:line="98" pos:column="10">(<argument><expr><name pos:line="98" pos:column="11">db<pos:position pos:line="98" pos:column="13"/></name></expr></argument>)<pos:position pos:line="98" pos:column="14"/></argument_list></call> <operator pos:line="98" pos:column="15">=<pos:position pos:line="98" pos:column="16"/></operator> <name pos:line="98" pos:column="17">encoding<pos:position pos:line="98" pos:column="25"/></name></expr>;<pos:position pos:line="98" pos:column="26"/></expr_stmt>
<cpp:else pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">else<pos:position pos:line="99" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="100" pos:column="7">ENC<pos:position pos:line="100" pos:column="10"/></name><argument_list pos:line="100" pos:column="10">(<argument><expr><name pos:line="100" pos:column="11">db<pos:position pos:line="100" pos:column="13"/></name></expr></argument>)<pos:position pos:line="100" pos:column="14"/></argument_list></call> <operator pos:line="100" pos:column="15">=<pos:position pos:line="100" pos:column="16"/></operator> <name pos:line="100" pos:column="17">SQLITE_UTF8<pos:position pos:line="100" pos:column="28"/></name></expr>;<pos:position pos:line="100" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">endif<pos:position pos:line="101" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="102" pos:column="6"/></block></then><else pos:line="102" pos:column="6">else<block pos:line="102" pos:column="10">{
      <comment type="block" pos:line="103" pos:column="7">/* If opening an attached database, the encoding much match ENC(db) */</comment>
      <if pos:line="104" pos:column="7">if<condition pos:line="104" pos:column="9">( <expr><name><name pos:line="104" pos:column="11">meta<pos:position pos:line="104" pos:column="15"/></name><index pos:line="104" pos:column="15">[<expr><name pos:line="104" pos:column="16">BTREE_TEXT_ENCODING<pos:position pos:line="104" pos:column="35"/></name><operator pos:line="104" pos:column="35">-<pos:position pos:line="104" pos:column="36"/></operator><literal type="number" pos:line="104" pos:column="36">1<pos:position pos:line="104" pos:column="37"/></literal></expr>]<pos:position pos:line="104" pos:column="38"/></index></name><operator pos:line="104" pos:column="38">!=<pos:position pos:line="104" pos:column="40"/></operator><call><name pos:line="104" pos:column="40">ENC<pos:position pos:line="104" pos:column="43"/></name><argument_list pos:line="104" pos:column="43">(<argument><expr><name pos:line="104" pos:column="44">db<pos:position pos:line="104" pos:column="46"/></name></expr></argument>)<pos:position pos:line="104" pos:column="47"/></argument_list></call></expr> )<pos:position pos:line="104" pos:column="49"/></condition><then><block pos:line="104" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="105" pos:column="9">sqlite3SetString<pos:position pos:line="105" pos:column="25"/></name><argument_list pos:line="105" pos:column="25">(<argument><expr><name pos:line="105" pos:column="26">pzErrMsg<pos:position pos:line="105" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="36">db<pos:position pos:line="105" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="40">"attached databases must use the same"<pos:position pos:line="105" pos:column="78"/></literal>
            <literal type="string" pos:line="106" pos:column="13">" text encoding as main database"<pos:position pos:line="106" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="107" pos:column="9">rc<pos:position pos:line="107" pos:column="11"/></name> <operator pos:line="107" pos:column="12">=<pos:position pos:line="107" pos:column="13"/></operator> <name pos:line="107" pos:column="14">SQLITE_ERROR<pos:position pos:line="107" pos:column="26"/></name></expr>;<pos:position pos:line="107" pos:column="27"/></expr_stmt>
        <goto pos:line="108" pos:column="9">goto <name pos:line="108" pos:column="14">initone_error_out<pos:position pos:line="108" pos:column="31"/></name>;<pos:position pos:line="108" pos:column="32"/></goto>
      }<pos:position pos:line="109" pos:column="8"/></block></then></if>
    }<pos:position pos:line="110" pos:column="6"/></block></else></if>
  }<pos:position pos:line="111" pos:column="4"/></block></then><else pos:line="111" pos:column="4">else<block pos:line="111" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="112" pos:column="5">DbSetProperty<pos:position pos:line="112" pos:column="18"/></name><argument_list pos:line="112" pos:column="18">(<argument><expr><name pos:line="112" pos:column="19">db<pos:position pos:line="112" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="23">iDb<pos:position pos:line="112" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="28">DB_Empty<pos:position pos:line="112" pos:column="36"/></name></expr></argument>)<pos:position pos:line="112" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="113" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="114" pos:column="3">pDb<pos:position pos:line="114" pos:column="6"/></name><operator pos:line="114" pos:column="6">-&gt;<pos:position pos:line="114" pos:column="11"/></operator><name pos:line="114" pos:column="8">pSchema<pos:position pos:line="114" pos:column="15"/></name><operator pos:line="114" pos:column="15">-&gt;<pos:position pos:line="114" pos:column="20"/></operator><name pos:line="114" pos:column="17">enc<pos:position pos:line="114" pos:column="20"/></name></name> <operator pos:line="114" pos:column="21">=<pos:position pos:line="114" pos:column="22"/></operator> <call><name pos:line="114" pos:column="23">ENC<pos:position pos:line="114" pos:column="26"/></name><argument_list pos:line="114" pos:column="26">(<argument><expr><name pos:line="114" pos:column="27">db<pos:position pos:line="114" pos:column="29"/></name></expr></argument>)<pos:position pos:line="114" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="31"/></expr_stmt>

  <if pos:line="116" pos:column="3">if<condition pos:line="116" pos:column="5">( <expr><name><name pos:line="116" pos:column="7">pDb<pos:position pos:line="116" pos:column="10"/></name><operator pos:line="116" pos:column="10">-&gt;<pos:position pos:line="116" pos:column="15"/></operator><name pos:line="116" pos:column="12">pSchema<pos:position pos:line="116" pos:column="19"/></name><operator pos:line="116" pos:column="19">-&gt;<pos:position pos:line="116" pos:column="24"/></operator><name pos:line="116" pos:column="21">cache_size<pos:position pos:line="116" pos:column="31"/></name></name><operator pos:line="116" pos:column="31">==<pos:position pos:line="116" pos:column="33"/></operator><literal type="number" pos:line="116" pos:column="33">0<pos:position pos:line="116" pos:column="34"/></literal></expr> )<pos:position pos:line="116" pos:column="36"/></condition><then><block pos:line="116" pos:column="36">{
<cpp:ifndef pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">ifndef<pos:position pos:line="117" pos:column="8"/></cpp:directive> <name pos:line="117" pos:column="9">SQLITE_OMIT_DEPRECATED<pos:position pos:line="117" pos:column="31"/></name></cpp:ifndef>
    <expr_stmt><expr><name pos:line="118" pos:column="5">size<pos:position pos:line="118" pos:column="9"/></name> <operator pos:line="118" pos:column="10">=<pos:position pos:line="118" pos:column="11"/></operator> <call><name pos:line="118" pos:column="12">sqlite3AbsInt32<pos:position pos:line="118" pos:column="27"/></name><argument_list pos:line="118" pos:column="27">(<argument><expr><name><name pos:line="118" pos:column="28">meta<pos:position pos:line="118" pos:column="32"/></name><index pos:line="118" pos:column="32">[<expr><name pos:line="118" pos:column="33">BTREE_DEFAULT_CACHE_SIZE<pos:position pos:line="118" pos:column="57"/></name><operator pos:line="118" pos:column="57">-<pos:position pos:line="118" pos:column="58"/></operator><literal type="number" pos:line="118" pos:column="58">1<pos:position pos:line="118" pos:column="59"/></literal></expr>]<pos:position pos:line="118" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="118" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="62"/></expr_stmt>
    <if pos:line="119" pos:column="5">if<condition pos:line="119" pos:column="7">( <expr><name pos:line="119" pos:column="9">size<pos:position pos:line="119" pos:column="13"/></name><operator pos:line="119" pos:column="13">==<pos:position pos:line="119" pos:column="15"/></operator><literal type="number" pos:line="119" pos:column="15">0<pos:position pos:line="119" pos:column="16"/></literal></expr> )<pos:position pos:line="119" pos:column="18"/></condition><then><block pos:line="119" pos:column="18">{ <expr_stmt><expr><name pos:line="119" pos:column="20">size<pos:position pos:line="119" pos:column="24"/></name> <operator pos:line="119" pos:column="25">=<pos:position pos:line="119" pos:column="26"/></operator> <name pos:line="119" pos:column="27">SQLITE_DEFAULT_CACHE_SIZE<pos:position pos:line="119" pos:column="52"/></name></expr>;<pos:position pos:line="119" pos:column="53"/></expr_stmt> }<pos:position pos:line="119" pos:column="55"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="120" pos:column="5">pDb<pos:position pos:line="120" pos:column="8"/></name><operator pos:line="120" pos:column="8">-&gt;<pos:position pos:line="120" pos:column="13"/></operator><name pos:line="120" pos:column="10">pSchema<pos:position pos:line="120" pos:column="17"/></name><operator pos:line="120" pos:column="17">-&gt;<pos:position pos:line="120" pos:column="22"/></operator><name pos:line="120" pos:column="19">cache_size<pos:position pos:line="120" pos:column="29"/></name></name> <operator pos:line="120" pos:column="30">=<pos:position pos:line="120" pos:column="31"/></operator> <name pos:line="120" pos:column="32">size<pos:position pos:line="120" pos:column="36"/></name></expr>;<pos:position pos:line="120" pos:column="37"/></expr_stmt>
<cpp:else pos:line="121" pos:column="1">#<cpp:directive pos:line="121" pos:column="2">else<pos:position pos:line="121" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name><name pos:line="122" pos:column="5">pDb<pos:position pos:line="122" pos:column="8"/></name><operator pos:line="122" pos:column="8">-&gt;<pos:position pos:line="122" pos:column="13"/></operator><name pos:line="122" pos:column="10">pSchema<pos:position pos:line="122" pos:column="17"/></name><operator pos:line="122" pos:column="17">-&gt;<pos:position pos:line="122" pos:column="22"/></operator><name pos:line="122" pos:column="19">cache_size<pos:position pos:line="122" pos:column="29"/></name></name> <operator pos:line="122" pos:column="30">=<pos:position pos:line="122" pos:column="31"/></operator> <name pos:line="122" pos:column="32">SQLITE_DEFAULT_CACHE_SIZE<pos:position pos:line="122" pos:column="57"/></name></expr>;<pos:position pos:line="122" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">endif<pos:position pos:line="123" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="124" pos:column="5">sqlite3BtreeSetCacheSize<pos:position pos:line="124" pos:column="29"/></name><argument_list pos:line="124" pos:column="29">(<argument><expr><name><name pos:line="124" pos:column="30">pDb<pos:position pos:line="124" pos:column="33"/></name><operator pos:line="124" pos:column="33">-&gt;<pos:position pos:line="124" pos:column="38"/></operator><name pos:line="124" pos:column="35">pBt<pos:position pos:line="124" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="40">pDb<pos:position pos:line="124" pos:column="43"/></name><operator pos:line="124" pos:column="43">-&gt;<pos:position pos:line="124" pos:column="48"/></operator><name pos:line="124" pos:column="45">pSchema<pos:position pos:line="124" pos:column="52"/></name><operator pos:line="124" pos:column="52">-&gt;<pos:position pos:line="124" pos:column="57"/></operator><name pos:line="124" pos:column="54">cache_size<pos:position pos:line="124" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="66"/></expr_stmt>
  }<pos:position pos:line="125" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="127" pos:column="3">/*
  ** file_format==1    Version 3.0.0.
  ** file_format==2    Version 3.1.3.  // ALTER TABLE ADD COLUMN
  ** file_format==3    Version 3.1.4.  // ditto but with non-NULL defaults
  ** file_format==4    Version 3.3.0.  // DESC indices.  Boolean constants
  */</comment>
  <expr_stmt><expr><name><name pos:line="133" pos:column="3">pDb<pos:position pos:line="133" pos:column="6"/></name><operator pos:line="133" pos:column="6">-&gt;<pos:position pos:line="133" pos:column="11"/></operator><name pos:line="133" pos:column="8">pSchema<pos:position pos:line="133" pos:column="15"/></name><operator pos:line="133" pos:column="15">-&gt;<pos:position pos:line="133" pos:column="20"/></operator><name pos:line="133" pos:column="17">file_format<pos:position pos:line="133" pos:column="28"/></name></name> <operator pos:line="133" pos:column="29">=<pos:position pos:line="133" pos:column="30"/></operator> <operator pos:line="133" pos:column="31">(<pos:position pos:line="133" pos:column="32"/></operator><name pos:line="133" pos:column="32">u8<pos:position pos:line="133" pos:column="34"/></name><operator pos:line="133" pos:column="34">)<pos:position pos:line="133" pos:column="35"/></operator><name><name pos:line="133" pos:column="35">meta<pos:position pos:line="133" pos:column="39"/></name><index pos:line="133" pos:column="39">[<expr><name pos:line="133" pos:column="40">BTREE_FILE_FORMAT<pos:position pos:line="133" pos:column="57"/></name><operator pos:line="133" pos:column="57">-<pos:position pos:line="133" pos:column="58"/></operator><literal type="number" pos:line="133" pos:column="58">1<pos:position pos:line="133" pos:column="59"/></literal></expr>]<pos:position pos:line="133" pos:column="60"/></index></name></expr>;<pos:position pos:line="133" pos:column="61"/></expr_stmt>
  <if pos:line="134" pos:column="3">if<condition pos:line="134" pos:column="5">( <expr><name><name pos:line="134" pos:column="7">pDb<pos:position pos:line="134" pos:column="10"/></name><operator pos:line="134" pos:column="10">-&gt;<pos:position pos:line="134" pos:column="15"/></operator><name pos:line="134" pos:column="12">pSchema<pos:position pos:line="134" pos:column="19"/></name><operator pos:line="134" pos:column="19">-&gt;<pos:position pos:line="134" pos:column="24"/></operator><name pos:line="134" pos:column="21">file_format<pos:position pos:line="134" pos:column="32"/></name></name><operator pos:line="134" pos:column="32">==<pos:position pos:line="134" pos:column="34"/></operator><literal type="number" pos:line="134" pos:column="34">0<pos:position pos:line="134" pos:column="35"/></literal></expr> )<pos:position pos:line="134" pos:column="37"/></condition><then><block pos:line="134" pos:column="37">{
    <expr_stmt><expr><name><name pos:line="135" pos:column="5">pDb<pos:position pos:line="135" pos:column="8"/></name><operator pos:line="135" pos:column="8">-&gt;<pos:position pos:line="135" pos:column="13"/></operator><name pos:line="135" pos:column="10">pSchema<pos:position pos:line="135" pos:column="17"/></name><operator pos:line="135" pos:column="17">-&gt;<pos:position pos:line="135" pos:column="22"/></operator><name pos:line="135" pos:column="19">file_format<pos:position pos:line="135" pos:column="30"/></name></name> <operator pos:line="135" pos:column="31">=<pos:position pos:line="135" pos:column="32"/></operator> <literal type="number" pos:line="135" pos:column="33">1<pos:position pos:line="135" pos:column="34"/></literal></expr>;<pos:position pos:line="135" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="136" pos:column="4"/></block></then></if>
  <if pos:line="137" pos:column="3">if<condition pos:line="137" pos:column="5">( <expr><name><name pos:line="137" pos:column="7">pDb<pos:position pos:line="137" pos:column="10"/></name><operator pos:line="137" pos:column="10">-&gt;<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="12">pSchema<pos:position pos:line="137" pos:column="19"/></name><operator pos:line="137" pos:column="19">-&gt;<pos:position pos:line="137" pos:column="24"/></operator><name pos:line="137" pos:column="21">file_format<pos:position pos:line="137" pos:column="32"/></name></name><operator pos:line="137" pos:column="32">&gt;<pos:position pos:line="137" pos:column="36"/></operator><name pos:line="137" pos:column="33">SQLITE_MAX_FILE_FORMAT<pos:position pos:line="137" pos:column="55"/></name></expr> )<pos:position pos:line="137" pos:column="57"/></condition><then><block pos:line="137" pos:column="57">{
    <expr_stmt><expr><call><name pos:line="138" pos:column="5">sqlite3SetString<pos:position pos:line="138" pos:column="21"/></name><argument_list pos:line="138" pos:column="21">(<argument><expr><name pos:line="138" pos:column="22">pzErrMsg<pos:position pos:line="138" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="32">db<pos:position pos:line="138" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="36">"unsupported file format"<pos:position pos:line="138" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name pos:line="139" pos:column="5">rc<pos:position pos:line="139" pos:column="7"/></name> <operator pos:line="139" pos:column="8">=<pos:position pos:line="139" pos:column="9"/></operator> <name pos:line="139" pos:column="10">SQLITE_ERROR<pos:position pos:line="139" pos:column="22"/></name></expr>;<pos:position pos:line="139" pos:column="23"/></expr_stmt>
    <goto pos:line="140" pos:column="5">goto <name pos:line="140" pos:column="10">initone_error_out<pos:position pos:line="140" pos:column="27"/></name>;<pos:position pos:line="140" pos:column="28"/></goto>
  }<pos:position pos:line="141" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="143" pos:column="3">/* Ticket #2804:  When we open a database in the newer file format,
  ** clear the legacy_file_format pragma flag so that a VACUUM will
  ** not downgrade the database and thus invalidate any descending
  ** indices that the user might have created.
  */</comment>
  <if pos:line="148" pos:column="3">if<condition pos:line="148" pos:column="5">( <expr><name pos:line="148" pos:column="7">iDb<pos:position pos:line="148" pos:column="10"/></name><operator pos:line="148" pos:column="10">==<pos:position pos:line="148" pos:column="12"/></operator><literal type="number" pos:line="148" pos:column="12">0<pos:position pos:line="148" pos:column="13"/></literal> <operator pos:line="148" pos:column="14">&amp;&amp;<pos:position pos:line="148" pos:column="24"/></operator> <name><name pos:line="148" pos:column="17">meta<pos:position pos:line="148" pos:column="21"/></name><index pos:line="148" pos:column="21">[<expr><name pos:line="148" pos:column="22">BTREE_FILE_FORMAT<pos:position pos:line="148" pos:column="39"/></name><operator pos:line="148" pos:column="39">-<pos:position pos:line="148" pos:column="40"/></operator><literal type="number" pos:line="148" pos:column="40">1<pos:position pos:line="148" pos:column="41"/></literal></expr>]<pos:position pos:line="148" pos:column="42"/></index></name><operator pos:line="148" pos:column="42">&gt;=<pos:position pos:line="148" pos:column="47"/></operator><literal type="number" pos:line="148" pos:column="44">4<pos:position pos:line="148" pos:column="45"/></literal></expr> )<pos:position pos:line="148" pos:column="47"/></condition><then><block pos:line="148" pos:column="47">{
    <expr_stmt><expr><name><name pos:line="149" pos:column="5">db<pos:position pos:line="149" pos:column="7"/></name><operator pos:line="149" pos:column="7">-&gt;<pos:position pos:line="149" pos:column="12"/></operator><name pos:line="149" pos:column="9">flags<pos:position pos:line="149" pos:column="14"/></name></name> <operator pos:line="149" pos:column="15">&amp;=<pos:position pos:line="149" pos:column="21"/></operator> <operator pos:line="149" pos:column="18">~<pos:position pos:line="149" pos:column="19"/></operator><name pos:line="149" pos:column="19">SQLITE_LegacyFileFmt<pos:position pos:line="149" pos:column="39"/></name></expr>;<pos:position pos:line="149" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="150" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="152" pos:column="3">/* Read the schema information out of the schema tables
  */</comment>
  <expr_stmt><expr><call><name pos:line="154" pos:column="3">assert<pos:position pos:line="154" pos:column="9"/></name><argument_list pos:line="154" pos:column="9">( <argument><expr><name><name pos:line="154" pos:column="11">db<pos:position pos:line="154" pos:column="13"/></name><operator pos:line="154" pos:column="13">-&gt;<pos:position pos:line="154" pos:column="18"/></operator><name pos:line="154" pos:column="15">init<pos:position pos:line="154" pos:column="19"/></name><operator pos:line="154" pos:column="19">.<pos:position pos:line="154" pos:column="20"/></operator><name pos:line="154" pos:column="20">busy<pos:position pos:line="154" pos:column="24"/></name></name></expr></argument> )<pos:position pos:line="154" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="27"/></expr_stmt>
  <block pos:line="155" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="156" pos:column="5">char<pos:position pos:line="156" pos:column="9"/></name> <modifier pos:line="156" pos:column="10">*<pos:position pos:line="156" pos:column="11"/></modifier></type><name pos:line="156" pos:column="11">zSql<pos:position pos:line="156" pos:column="15"/></name></decl>;<pos:position pos:line="156" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><name pos:line="157" pos:column="5">zSql<pos:position pos:line="157" pos:column="9"/></name> <operator pos:line="157" pos:column="10">=<pos:position pos:line="157" pos:column="11"/></operator> <call><name pos:line="157" pos:column="12">sqlite3MPrintf<pos:position pos:line="157" pos:column="26"/></name><argument_list pos:line="157" pos:column="26">(<argument><expr><name pos:line="157" pos:column="27">db<pos:position pos:line="157" pos:column="29"/></name></expr></argument>, 
        <argument><expr><literal type="string" pos:line="158" pos:column="9">"SELECT name, rootpage, sql FROM \"%w\".%s ORDER BY rowid"<pos:position pos:line="158" pos:column="67"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="159" pos:column="9">db<pos:position pos:line="159" pos:column="11"/></name><operator pos:line="159" pos:column="11">-&gt;<pos:position pos:line="159" pos:column="16"/></operator><name pos:line="159" pos:column="13">aDb<pos:position pos:line="159" pos:column="16"/></name><index pos:line="159" pos:column="16">[<expr><name pos:line="159" pos:column="17">iDb<pos:position pos:line="159" pos:column="20"/></name></expr>]<pos:position pos:line="159" pos:column="21"/></index></name><operator pos:line="159" pos:column="21">.<pos:position pos:line="159" pos:column="22"/></operator><name pos:line="159" pos:column="22">zDbSName<pos:position pos:line="159" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="32">zMasterName<pos:position pos:line="159" pos:column="43"/></name></expr></argument>)<pos:position pos:line="159" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="45"/></expr_stmt>
<cpp:ifndef pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">ifndef<pos:position pos:line="160" pos:column="8"/></cpp:directive> <name pos:line="160" pos:column="9">SQLITE_OMIT_AUTHORIZATION<pos:position pos:line="160" pos:column="34"/></name></cpp:ifndef>
    <block pos:line="161" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="162" pos:column="7">sqlite3_xauth<pos:position pos:line="162" pos:column="20"/></name></type> <name pos:line="162" pos:column="21">xAuth<pos:position pos:line="162" pos:column="26"/></name></decl>;<pos:position pos:line="162" pos:column="27"/></decl_stmt>
      <expr_stmt><expr><name pos:line="163" pos:column="7">xAuth<pos:position pos:line="163" pos:column="12"/></name> <operator pos:line="163" pos:column="13">=<pos:position pos:line="163" pos:column="14"/></operator> <name><name pos:line="163" pos:column="15">db<pos:position pos:line="163" pos:column="17"/></name><operator pos:line="163" pos:column="17">-&gt;<pos:position pos:line="163" pos:column="22"/></operator><name pos:line="163" pos:column="19">xAuth<pos:position pos:line="163" pos:column="24"/></name></name></expr>;<pos:position pos:line="163" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="164" pos:column="7">db<pos:position pos:line="164" pos:column="9"/></name><operator pos:line="164" pos:column="9">-&gt;<pos:position pos:line="164" pos:column="14"/></operator><name pos:line="164" pos:column="11">xAuth<pos:position pos:line="164" pos:column="16"/></name></name> <operator pos:line="164" pos:column="17">=<pos:position pos:line="164" pos:column="18"/></operator> <literal type="number" pos:line="164" pos:column="19">0<pos:position pos:line="164" pos:column="20"/></literal></expr>;<pos:position pos:line="164" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">endif<pos:position pos:line="165" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><name pos:line="166" pos:column="7">rc<pos:position pos:line="166" pos:column="9"/></name> <operator pos:line="166" pos:column="10">=<pos:position pos:line="166" pos:column="11"/></operator> <call><name pos:line="166" pos:column="12">sqlite3_exec<pos:position pos:line="166" pos:column="24"/></name><argument_list pos:line="166" pos:column="24">(<argument><expr><name pos:line="166" pos:column="25">db<pos:position pos:line="166" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="29">zSql<pos:position pos:line="166" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="35">sqlite3InitCallback<pos:position pos:line="166" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="166" pos:column="56">&amp;<pos:position pos:line="166" pos:column="61"/></operator><name pos:line="166" pos:column="57">initData<pos:position pos:line="166" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="166" pos:column="67">0<pos:position pos:line="166" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="70"/></expr_stmt>
<cpp:ifndef pos:line="167" pos:column="1">#<cpp:directive pos:line="167" pos:column="2">ifndef<pos:position pos:line="167" pos:column="8"/></cpp:directive> <name pos:line="167" pos:column="9">SQLITE_OMIT_AUTHORIZATION<pos:position pos:line="167" pos:column="34"/></name></cpp:ifndef>
      <expr_stmt><expr><name><name pos:line="168" pos:column="7">db<pos:position pos:line="168" pos:column="9"/></name><operator pos:line="168" pos:column="9">-&gt;<pos:position pos:line="168" pos:column="14"/></operator><name pos:line="168" pos:column="11">xAuth<pos:position pos:line="168" pos:column="16"/></name></name> <operator pos:line="168" pos:column="17">=<pos:position pos:line="168" pos:column="18"/></operator> <name pos:line="168" pos:column="19">xAuth<pos:position pos:line="168" pos:column="24"/></name></expr>;<pos:position pos:line="168" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="169" pos:column="6"/></block>
<cpp:endif pos:line="170" pos:column="1">#<cpp:directive pos:line="170" pos:column="2">endif<pos:position pos:line="170" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="171" pos:column="5">if<condition pos:line="171" pos:column="7">( <expr><name pos:line="171" pos:column="9">rc<pos:position pos:line="171" pos:column="11"/></name><operator pos:line="171" pos:column="11">==<pos:position pos:line="171" pos:column="13"/></operator><name pos:line="171" pos:column="13">SQLITE_OK<pos:position pos:line="171" pos:column="22"/></name></expr> )<pos:position pos:line="171" pos:column="24"/></condition><then pos:line="171" pos:column="24"> <block type="pseudo"><expr_stmt><expr><name pos:line="171" pos:column="25">rc<pos:position pos:line="171" pos:column="27"/></name> <operator pos:line="171" pos:column="28">=<pos:position pos:line="171" pos:column="29"/></operator> <name><name pos:line="171" pos:column="30">initData<pos:position pos:line="171" pos:column="38"/></name><operator pos:line="171" pos:column="38">.<pos:position pos:line="171" pos:column="39"/></operator><name pos:line="171" pos:column="39">rc<pos:position pos:line="171" pos:column="41"/></name></name></expr>;<pos:position pos:line="171" pos:column="42"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="172" pos:column="5">sqlite3DbFree<pos:position pos:line="172" pos:column="18"/></name><argument_list pos:line="172" pos:column="18">(<argument><expr><name pos:line="172" pos:column="19">db<pos:position pos:line="172" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="23">zSql<pos:position pos:line="172" pos:column="27"/></name></expr></argument>)<pos:position pos:line="172" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="29"/></expr_stmt>
<cpp:ifndef pos:line="173" pos:column="1">#<cpp:directive pos:line="173" pos:column="2">ifndef<pos:position pos:line="173" pos:column="8"/></cpp:directive> <name pos:line="173" pos:column="9">SQLITE_OMIT_ANALYZE<pos:position pos:line="173" pos:column="28"/></name></cpp:ifndef>
    <if pos:line="174" pos:column="5">if<condition pos:line="174" pos:column="7">( <expr><name pos:line="174" pos:column="9">rc<pos:position pos:line="174" pos:column="11"/></name><operator pos:line="174" pos:column="11">==<pos:position pos:line="174" pos:column="13"/></operator><name pos:line="174" pos:column="13">SQLITE_OK<pos:position pos:line="174" pos:column="22"/></name></expr> )<pos:position pos:line="174" pos:column="24"/></condition><then><block pos:line="174" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="175" pos:column="7">sqlite3AnalysisLoad<pos:position pos:line="175" pos:column="26"/></name><argument_list pos:line="175" pos:column="26">(<argument><expr><name pos:line="175" pos:column="27">db<pos:position pos:line="175" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="31">iDb<pos:position pos:line="175" pos:column="34"/></name></expr></argument>)<pos:position pos:line="175" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="176" pos:column="6"/></block></then></if>
<cpp:endif pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">endif<pos:position pos:line="177" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="178" pos:column="4"/></block>
  <if pos:line="179" pos:column="3">if<condition pos:line="179" pos:column="5">( <expr><name><name pos:line="179" pos:column="7">db<pos:position pos:line="179" pos:column="9"/></name><operator pos:line="179" pos:column="9">-&gt;<pos:position pos:line="179" pos:column="14"/></operator><name pos:line="179" pos:column="11">mallocFailed<pos:position pos:line="179" pos:column="23"/></name></name></expr> )<pos:position pos:line="179" pos:column="25"/></condition><then><block pos:line="179" pos:column="25">{
    <expr_stmt><expr><name pos:line="180" pos:column="5">rc<pos:position pos:line="180" pos:column="7"/></name> <operator pos:line="180" pos:column="8">=<pos:position pos:line="180" pos:column="9"/></operator> <name pos:line="180" pos:column="10">SQLITE_NOMEM_BKPT<pos:position pos:line="180" pos:column="27"/></name></expr>;<pos:position pos:line="180" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="181" pos:column="5">sqlite3ResetAllSchemasOfConnection<pos:position pos:line="181" pos:column="39"/></name><argument_list pos:line="181" pos:column="39">(<argument><expr><name pos:line="181" pos:column="40">db<pos:position pos:line="181" pos:column="42"/></name></expr></argument>)<pos:position pos:line="181" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="182" pos:column="4"/></block></then></if>
  <if pos:line="183" pos:column="3">if<condition pos:line="183" pos:column="5">( <expr><name pos:line="183" pos:column="7">rc<pos:position pos:line="183" pos:column="9"/></name><operator pos:line="183" pos:column="9">==<pos:position pos:line="183" pos:column="11"/></operator><name pos:line="183" pos:column="11">SQLITE_OK<pos:position pos:line="183" pos:column="20"/></name> <operator pos:line="183" pos:column="21">||<pos:position pos:line="183" pos:column="23"/></operator> <operator pos:line="183" pos:column="24">(<pos:position pos:line="183" pos:column="25"/></operator><name><name pos:line="183" pos:column="25">db<pos:position pos:line="183" pos:column="27"/></name><operator pos:line="183" pos:column="27">-&gt;<pos:position pos:line="183" pos:column="32"/></operator><name pos:line="183" pos:column="29">flags<pos:position pos:line="183" pos:column="34"/></name></name><operator pos:line="183" pos:column="34">&amp;<pos:position pos:line="183" pos:column="39"/></operator><name pos:line="183" pos:column="35">SQLITE_WriteSchema<pos:position pos:line="183" pos:column="53"/></name><operator pos:line="183" pos:column="53">)<pos:position pos:line="183" pos:column="54"/></operator></expr>)<pos:position pos:line="183" pos:column="55"/></condition><then><block pos:line="183" pos:column="55">{
    <comment type="block" pos:line="184" pos:column="5">/* Black magic: If the SQLITE_WriteSchema flag is set, then consider
    ** the schema loaded, even if errors occurred. In this situation the 
    ** current sqlite3_prepare() operation will fail, but the following one
    ** will attempt to compile the supplied statement against whatever subset
    ** of the schema was loaded before the error occurred. The primary
    ** purpose of this is to allow access to the sqlite_master table
    ** even when its contents have been corrupted.
    */</comment>
    <expr_stmt><expr><call><name pos:line="192" pos:column="5">DbSetProperty<pos:position pos:line="192" pos:column="18"/></name><argument_list pos:line="192" pos:column="18">(<argument><expr><name pos:line="192" pos:column="19">db<pos:position pos:line="192" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="23">iDb<pos:position pos:line="192" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="28">DB_SchemaLoaded<pos:position pos:line="192" pos:column="43"/></name></expr></argument>)<pos:position pos:line="192" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="193" pos:column="5">rc<pos:position pos:line="193" pos:column="7"/></name> <operator pos:line="193" pos:column="8">=<pos:position pos:line="193" pos:column="9"/></operator> <name pos:line="193" pos:column="10">SQLITE_OK<pos:position pos:line="193" pos:column="19"/></name></expr>;<pos:position pos:line="193" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="194" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="196" pos:column="3">/* Jump here for an error that occurs after successfully allocating
  ** curMain and calling sqlite3BtreeEnter(). For an error that occurs
  ** before that point, jump to error_out.
  */</comment>
<label><name pos:line="200" pos:column="1">initone_error_out<pos:position pos:line="200" pos:column="18"/></name>:<pos:position pos:line="200" pos:column="19"/></label>
  <if pos:line="201" pos:column="3">if<condition pos:line="201" pos:column="5">( <expr><name pos:line="201" pos:column="7">openedTransaction<pos:position pos:line="201" pos:column="24"/></name></expr> )<pos:position pos:line="201" pos:column="26"/></condition><then><block pos:line="201" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="202" pos:column="5">sqlite3BtreeCommit<pos:position pos:line="202" pos:column="23"/></name><argument_list pos:line="202" pos:column="23">(<argument><expr><name><name pos:line="202" pos:column="24">pDb<pos:position pos:line="202" pos:column="27"/></name><operator pos:line="202" pos:column="27">-&gt;<pos:position pos:line="202" pos:column="32"/></operator><name pos:line="202" pos:column="29">pBt<pos:position pos:line="202" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="202" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="203" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="204" pos:column="3">sqlite3BtreeLeave<pos:position pos:line="204" pos:column="20"/></name><argument_list pos:line="204" pos:column="20">(<argument><expr><name><name pos:line="204" pos:column="21">pDb<pos:position pos:line="204" pos:column="24"/></name><operator pos:line="204" pos:column="24">-&gt;<pos:position pos:line="204" pos:column="29"/></operator><name pos:line="204" pos:column="26">pBt<pos:position pos:line="204" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="204" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="31"/></expr_stmt>

<label><name pos:line="206" pos:column="1">error_out<pos:position pos:line="206" pos:column="10"/></name>:<pos:position pos:line="206" pos:column="11"/></label>
  <if pos:line="207" pos:column="3">if<condition pos:line="207" pos:column="5">( <expr><name pos:line="207" pos:column="7">rc<pos:position pos:line="207" pos:column="9"/></name></expr> )<pos:position pos:line="207" pos:column="11"/></condition><then><block pos:line="207" pos:column="11">{
    <if pos:line="208" pos:column="5">if<condition pos:line="208" pos:column="7">( <expr><name pos:line="208" pos:column="9">rc<pos:position pos:line="208" pos:column="11"/></name><operator pos:line="208" pos:column="11">==<pos:position pos:line="208" pos:column="13"/></operator><name pos:line="208" pos:column="13">SQLITE_NOMEM<pos:position pos:line="208" pos:column="25"/></name> <operator pos:line="208" pos:column="26">||<pos:position pos:line="208" pos:column="28"/></operator> <name pos:line="208" pos:column="29">rc<pos:position pos:line="208" pos:column="31"/></name><operator pos:line="208" pos:column="31">==<pos:position pos:line="208" pos:column="33"/></operator><name pos:line="208" pos:column="33">SQLITE_IOERR_NOMEM<pos:position pos:line="208" pos:column="51"/></name></expr> )<pos:position pos:line="208" pos:column="53"/></condition><then><block pos:line="208" pos:column="53">{
      <expr_stmt><expr><call><name pos:line="209" pos:column="7">sqlite3OomFault<pos:position pos:line="209" pos:column="22"/></name><argument_list pos:line="209" pos:column="22">(<argument><expr><name pos:line="209" pos:column="23">db<pos:position pos:line="209" pos:column="25"/></name></expr></argument>)<pos:position pos:line="209" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="210" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="211" pos:column="5">sqlite3ResetOneSchema<pos:position pos:line="211" pos:column="26"/></name><argument_list pos:line="211" pos:column="26">(<argument><expr><name pos:line="211" pos:column="27">db<pos:position pos:line="211" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="211" pos:column="31">iDb<pos:position pos:line="211" pos:column="34"/></name></expr></argument>)<pos:position pos:line="211" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="212" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="213" pos:column="3">db<pos:position pos:line="213" pos:column="5"/></name><operator pos:line="213" pos:column="5">-&gt;<pos:position pos:line="213" pos:column="10"/></operator><name pos:line="213" pos:column="7">init<pos:position pos:line="213" pos:column="11"/></name><operator pos:line="213" pos:column="11">.<pos:position pos:line="213" pos:column="12"/></operator><name pos:line="213" pos:column="12">busy<pos:position pos:line="213" pos:column="16"/></name></name> <operator pos:line="213" pos:column="17">=<pos:position pos:line="213" pos:column="18"/></operator> <literal type="number" pos:line="213" pos:column="19">0<pos:position pos:line="213" pos:column="20"/></literal></expr>;<pos:position pos:line="213" pos:column="21"/></expr_stmt>
  <return pos:line="214" pos:column="3">return <expr><name pos:line="214" pos:column="10">rc<pos:position pos:line="214" pos:column="12"/></name></expr>;<pos:position pos:line="214" pos:column="13"/></return>
}<pos:position pos:line="215" pos:column="2"/></block></function></unit>

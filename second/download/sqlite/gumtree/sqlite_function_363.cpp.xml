<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_363.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">sqlite3AutoLoadExtensions<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">sqlite3<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">db<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list><block pos:line="1" pos:column="44">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">u32<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">i<pos:position pos:line="2" pos:column="8"/></name></decl>;<pos:position pos:line="2" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">go<pos:position pos:line="3" pos:column="9"/></name> <init pos:line="3" pos:column="10">= <expr><literal type="number" pos:line="3" pos:column="12">1<pos:position pos:line="3" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">rc<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">sqlite3_loadext_entry<pos:position pos:line="5" pos:column="24"/></name></type> <name pos:line="5" pos:column="25">xInit<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">wsdAutoextInit<pos:position pos:line="7" pos:column="17"/></name></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">( <expr><name><name pos:line="8" pos:column="7">wsdAutoext<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">nExt<pos:position pos:line="8" pos:column="22"/></name></name><operator pos:line="8" pos:column="22">==<pos:position pos:line="8" pos:column="24"/></operator><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr> )<pos:position pos:line="8" pos:column="27"/></condition><then><block pos:line="8" pos:column="27">{
    <comment type="block" pos:line="9" pos:column="5">/* Common case: early out without every having to acquire a mutex */</comment>
    <return pos:line="10" pos:column="5">return;<pos:position pos:line="10" pos:column="12"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
  <for pos:line="12" pos:column="3">for<control pos:line="12" pos:column="6">(<init><expr><name pos:line="12" pos:column="7">i<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator><literal type="number" pos:line="12" pos:column="9">0<pos:position pos:line="12" pos:column="10"/></literal></expr>;<pos:position pos:line="12" pos:column="11"/></init> <condition><expr><name pos:line="12" pos:column="12">go<pos:position pos:line="12" pos:column="14"/></name></expr>;<pos:position pos:line="12" pos:column="15"/></condition> <incr><expr><name pos:line="12" pos:column="16">i<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">++<pos:position pos:line="12" pos:column="19"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="20"/></control><block pos:line="12" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">zErrmsg<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">SQLITE_THREADSAFE<pos:position pos:line="14" pos:column="22"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">sqlite3_mutex<pos:position pos:line="15" pos:column="18"/></name> <modifier pos:line="15" pos:column="19">*<pos:position pos:line="15" pos:column="20"/></modifier></type><name pos:line="15" pos:column="20">mutex<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><call><name pos:line="15" pos:column="28">sqlite3MutexAlloc<pos:position pos:line="15" pos:column="45"/></name><argument_list pos:line="15" pos:column="45">(<argument><expr><name pos:line="15" pos:column="46">SQLITE_MUTEX_STATIC_MASTER<pos:position pos:line="15" pos:column="72"/></name></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="74"/></decl_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">SQLITE_OMIT_LOAD_EXTENSION<pos:position pos:line="17" pos:column="34"/></name></cpp:ifdef>
    <decl_stmt><decl><type><specifier pos:line="18" pos:column="5">const<pos:position pos:line="18" pos:column="10"/></specifier> <name pos:line="18" pos:column="11">sqlite3_api_routines<pos:position pos:line="18" pos:column="31"/></name> <modifier pos:line="18" pos:column="32">*<pos:position pos:line="18" pos:column="33"/></modifier></type><name pos:line="18" pos:column="33">pThunk<pos:position pos:line="18" pos:column="39"/></name> <init pos:line="18" pos:column="40">= <expr><literal type="number" pos:line="18" pos:column="42">0<pos:position pos:line="18" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="44"/></decl_stmt>
<cpp:else pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">else<pos:position pos:line="19" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><specifier pos:line="20" pos:column="5">const<pos:position pos:line="20" pos:column="10"/></specifier> <name pos:line="20" pos:column="11">sqlite3_api_routines<pos:position pos:line="20" pos:column="31"/></name> <modifier pos:line="20" pos:column="32">*<pos:position pos:line="20" pos:column="33"/></modifier></type><name pos:line="20" pos:column="33">pThunk<pos:position pos:line="20" pos:column="39"/></name> <init pos:line="20" pos:column="40">= <expr><operator pos:line="20" pos:column="42">&amp;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="43">sqlite3Apis<pos:position pos:line="20" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="55"/></decl_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">sqlite3_mutex_enter<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">mutex<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">( <expr><name pos:line="23" pos:column="9">i<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">&gt;=<pos:position pos:line="23" pos:column="15"/></operator><name><name pos:line="23" pos:column="12">wsdAutoext<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">.<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">nExt<pos:position pos:line="23" pos:column="27"/></name></name></expr> )<pos:position pos:line="23" pos:column="29"/></condition><then><block pos:line="23" pos:column="29">{
      <expr_stmt><expr><name pos:line="24" pos:column="7">xInit<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <literal type="number" pos:line="24" pos:column="15">0<pos:position pos:line="24" pos:column="16"/></literal></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="25" pos:column="7">go<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <literal type="number" pos:line="25" pos:column="12">0<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then><else pos:line="26" pos:column="6">else<block pos:line="26" pos:column="10">{
      <expr_stmt><expr><name pos:line="27" pos:column="7">xInit<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <operator pos:line="27" pos:column="15">(<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">sqlite3_loadext_entry<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">)<pos:position pos:line="27" pos:column="38"/></operator><name><name pos:line="27" pos:column="38">wsdAutoext<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">.<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="49">aExt<pos:position pos:line="27" pos:column="53"/></name><index pos:line="27" pos:column="53">[<expr><name pos:line="27" pos:column="54">i<pos:position pos:line="27" pos:column="55"/></name></expr>]<pos:position pos:line="27" pos:column="56"/></index></name></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">sqlite3_mutex_leave<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">mutex<pos:position pos:line="29" pos:column="30"/></name></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">zErrmsg<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <literal type="number" pos:line="30" pos:column="15">0<pos:position pos:line="30" pos:column="16"/></literal></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>
    <if pos:line="31" pos:column="5">if<condition pos:line="31" pos:column="7">( <expr><name pos:line="31" pos:column="9">xInit<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">&amp;&amp;<pos:position pos:line="31" pos:column="25"/></operator> <operator pos:line="31" pos:column="18">(<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">rc<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <call><name pos:line="31" pos:column="24">xInit<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">db<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="34">&amp;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="35">zErrmsg<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">pThunk<pos:position pos:line="31" pos:column="50"/></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call><operator pos:line="31" pos:column="51">)<pos:position pos:line="31" pos:column="52"/></operator><operator pos:line="31" pos:column="52">!=<pos:position pos:line="31" pos:column="54"/></operator><literal type="number" pos:line="31" pos:column="54">0<pos:position pos:line="31" pos:column="55"/></literal></expr> )<pos:position pos:line="31" pos:column="57"/></condition><then><block pos:line="31" pos:column="57">{
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">sqlite3ErrorWithMsg<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">db<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">rc<pos:position pos:line="32" pos:column="33"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="33" pos:column="13">"automatic extension loading failed: %s"<pos:position pos:line="33" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="55">zErrmsg<pos:position pos:line="33" pos:column="62"/></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><name pos:line="34" pos:column="7">go<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <literal type="number" pos:line="34" pos:column="12">0<pos:position pos:line="34" pos:column="13"/></literal></expr>;<pos:position pos:line="34" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">sqlite3_free<pos:position pos:line="36" pos:column="17"/></name><argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">zErrmsg<pos:position pos:line="36" pos:column="25"/></name></expr></argument>)<pos:position pos:line="36" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></for>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

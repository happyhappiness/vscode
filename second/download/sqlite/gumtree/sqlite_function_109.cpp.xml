<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_109.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">sqlite3GenerateConstraintChecks<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Parse<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pParse<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>,       <comment type="block" pos:line="2" pos:column="24">/* The parser context */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">Table<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">pTab<pos:position pos:line="3" pos:column="14"/></name></decl></parameter>,         <comment type="block" pos:line="3" pos:column="24">/* The table being inserted or updated */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name> <modifier pos:line="4" pos:column="7">*<pos:position pos:line="4" pos:column="8"/></modifier></type><name pos:line="4" pos:column="8">aRegIdx<pos:position pos:line="4" pos:column="15"/></name></decl></parameter>,        <comment type="block" pos:line="4" pos:column="24">/* Use register aRegIdx[i] for index i.  0 for unused */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">iDataCur<pos:position pos:line="5" pos:column="15"/></name></decl></parameter>,        <comment type="block" pos:line="5" pos:column="24">/* Canonical data cursor (main table or PK index) */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">iIdxCur<pos:position pos:line="6" pos:column="14"/></name></decl></parameter>,         <comment type="block" pos:line="6" pos:column="24">/* First index cursor */</comment>
  <parameter><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">regNewData<pos:position pos:line="7" pos:column="17"/></name></decl></parameter>,      <comment type="block" pos:line="7" pos:column="24">/* First register in a range holding values to insert */</comment>
  <parameter><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">regOldData<pos:position pos:line="8" pos:column="17"/></name></decl></parameter>,      <comment type="block" pos:line="8" pos:column="24">/* Previous content.  0 for INSERTs */</comment>
  <parameter><decl><type><name pos:line="9" pos:column="3">u8<pos:position pos:line="9" pos:column="5"/></name></type> <name pos:line="9" pos:column="6">pkChng<pos:position pos:line="9" pos:column="12"/></name></decl></parameter>,           <comment type="block" pos:line="9" pos:column="24">/* Non-zero if the rowid or PRIMARY KEY changed */</comment>
  <parameter><decl><type><name pos:line="10" pos:column="3">u8<pos:position pos:line="10" pos:column="5"/></name></type> <name pos:line="10" pos:column="6">overrideError<pos:position pos:line="10" pos:column="19"/></name></decl></parameter>,    <comment type="block" pos:line="10" pos:column="24">/* Override onError to this if not OE_Default */</comment>
  <parameter><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">ignoreDest<pos:position pos:line="11" pos:column="17"/></name></decl></parameter>,      <comment type="block" pos:line="11" pos:column="24">/* Jump to this label on an OE_Ignore resolution */</comment>
  <parameter><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name> <modifier pos:line="12" pos:column="7">*<pos:position pos:line="12" pos:column="8"/></modifier></type><name pos:line="12" pos:column="8">pbMayReplace<pos:position pos:line="12" pos:column="20"/></name></decl></parameter>,   <comment type="block" pos:line="12" pos:column="24">/* OUT: Set to true if constraint may cause a replace */</comment>
  <parameter><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name> <modifier pos:line="13" pos:column="7">*<pos:position pos:line="13" pos:column="8"/></modifier></type><name pos:line="13" pos:column="8">aiChng<pos:position pos:line="13" pos:column="14"/></name></decl></parameter>          <comment type="block" pos:line="13" pos:column="24">/* column i is unchanged if aiChng[i]&lt;0 */</comment>
)<pos:position pos:line="14" pos:column="2"/></parameter_list><block pos:line="14" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">Vdbe<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">v<pos:position pos:line="15" pos:column="10"/></name></decl>;<pos:position pos:line="15" pos:column="11"/></decl_stmt>             <comment type="block" pos:line="15" pos:column="24">/* VDBE under constrution */</comment>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">Index<pos:position pos:line="16" pos:column="8"/></name> <modifier pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></modifier></type><name pos:line="16" pos:column="10">pIdx<pos:position pos:line="16" pos:column="14"/></name></decl>;<pos:position pos:line="16" pos:column="15"/></decl_stmt>         <comment type="block" pos:line="16" pos:column="24">/* Pointer to one of the indices */</comment>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">Index<pos:position pos:line="17" pos:column="8"/></name> <modifier pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></modifier></type><name pos:line="17" pos:column="10">pPk<pos:position pos:line="17" pos:column="13"/></name> <init pos:line="17" pos:column="14">= <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="18"/></decl_stmt>      <comment type="block" pos:line="17" pos:column="24">/* The PRIMARY KEY index */</comment>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">sqlite3<pos:position pos:line="18" pos:column="10"/></name> <modifier pos:line="18" pos:column="11">*<pos:position pos:line="18" pos:column="12"/></modifier></type><name pos:line="18" pos:column="12">db<pos:position pos:line="18" pos:column="14"/></name></decl>;<pos:position pos:line="18" pos:column="15"/></decl_stmt>         <comment type="block" pos:line="18" pos:column="24">/* Database connection */</comment>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">i<pos:position pos:line="19" pos:column="8"/></name></decl>;<pos:position pos:line="19" pos:column="9"/></decl_stmt>               <comment type="block" pos:line="19" pos:column="24">/* loop counter */</comment>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">int<pos:position pos:line="20" pos:column="6"/></name></type> <name pos:line="20" pos:column="7">ix<pos:position pos:line="20" pos:column="9"/></name></decl>;<pos:position pos:line="20" pos:column="10"/></decl_stmt>              <comment type="block" pos:line="20" pos:column="24">/* Index loop counter */</comment>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">int<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">nCol<pos:position pos:line="21" pos:column="11"/></name></decl>;<pos:position pos:line="21" pos:column="12"/></decl_stmt>            <comment type="block" pos:line="21" pos:column="24">/* Number of columns */</comment>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">int<pos:position pos:line="22" pos:column="6"/></name></type> <name pos:line="22" pos:column="7">onError<pos:position pos:line="22" pos:column="14"/></name></decl>;<pos:position pos:line="22" pos:column="15"/></decl_stmt>         <comment type="block" pos:line="22" pos:column="24">/* Conflict resolution strategy */</comment>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">int<pos:position pos:line="23" pos:column="6"/></name></type> <name pos:line="23" pos:column="7">addr1<pos:position pos:line="23" pos:column="12"/></name></decl>;<pos:position pos:line="23" pos:column="13"/></decl_stmt>           <comment type="block" pos:line="23" pos:column="24">/* Address of jump instruction */</comment>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">int<pos:position pos:line="24" pos:column="6"/></name></type> <name pos:line="24" pos:column="7">seenReplace<pos:position pos:line="24" pos:column="18"/></name> <init pos:line="24" pos:column="19">= <expr><literal type="number" pos:line="24" pos:column="21">0<pos:position pos:line="24" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="23"/></decl_stmt> <comment type="block" pos:line="24" pos:column="24">/* True if REPLACE is used to resolve INT PK conflict */</comment>
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">int<pos:position pos:line="25" pos:column="6"/></name></type> <name pos:line="25" pos:column="7">nPkField<pos:position pos:line="25" pos:column="15"/></name></decl>;<pos:position pos:line="25" pos:column="16"/></decl_stmt>        <comment type="block" pos:line="25" pos:column="24">/* Number of fields in PRIMARY KEY. 1 for ROWID tables */</comment>
  <decl_stmt><decl><type><name pos:line="26" pos:column="3">int<pos:position pos:line="26" pos:column="6"/></name></type> <name pos:line="26" pos:column="7">ipkTop<pos:position pos:line="26" pos:column="13"/></name> <init pos:line="26" pos:column="14">= <expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="18"/></decl_stmt>      <comment type="block" pos:line="26" pos:column="24">/* Top of the rowid change constraint check */</comment>
  <decl_stmt><decl><type><name pos:line="27" pos:column="3">int<pos:position pos:line="27" pos:column="6"/></name></type> <name pos:line="27" pos:column="7">ipkBottom<pos:position pos:line="27" pos:column="16"/></name> <init pos:line="27" pos:column="17">= <expr><literal type="number" pos:line="27" pos:column="19">0<pos:position pos:line="27" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="21"/></decl_stmt>   <comment type="block" pos:line="27" pos:column="24">/* Bottom of the rowid change constraint check */</comment>
  <decl_stmt><decl><type><name pos:line="28" pos:column="3">u8<pos:position pos:line="28" pos:column="5"/></name></type> <name pos:line="28" pos:column="6">isUpdate<pos:position pos:line="28" pos:column="14"/></name></decl>;<pos:position pos:line="28" pos:column="15"/></decl_stmt>         <comment type="block" pos:line="28" pos:column="24">/* True if this is an UPDATE operation */</comment>
  <decl_stmt><decl><type><name pos:line="29" pos:column="3">u8<pos:position pos:line="29" pos:column="5"/></name></type> <name pos:line="29" pos:column="6">bAffinityDone<pos:position pos:line="29" pos:column="19"/></name> <init pos:line="29" pos:column="20">= <expr><literal type="number" pos:line="29" pos:column="22">0<pos:position pos:line="29" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="24"/></decl_stmt>  <comment type="block" pos:line="29" pos:column="26">/* True if the OP_Affinity operation has been run */</comment>

  <expr_stmt><expr><name pos:line="31" pos:column="3">isUpdate<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <name pos:line="31" pos:column="14">regOldData<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">!=<pos:position pos:line="31" pos:column="26"/></operator><literal type="number" pos:line="31" pos:column="26">0<pos:position pos:line="31" pos:column="27"/></literal></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">db<pos:position pos:line="32" pos:column="5"/></name> <operator pos:line="32" pos:column="6">=<pos:position pos:line="32" pos:column="7"/></operator> <name><name pos:line="32" pos:column="8">pParse<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">db<pos:position pos:line="32" pos:column="18"/></name></name></expr>;<pos:position pos:line="32" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="33" pos:column="3">v<pos:position pos:line="33" pos:column="4"/></name> <operator pos:line="33" pos:column="5">=<pos:position pos:line="33" pos:column="6"/></operator> <call><name pos:line="33" pos:column="7">sqlite3GetVdbe<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">pParse<pos:position pos:line="33" pos:column="28"/></name></expr></argument>)<pos:position pos:line="33" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">assert<pos:position pos:line="34" pos:column="9"/></name><argument_list pos:line="34" pos:column="9">( <argument><expr><name pos:line="34" pos:column="11">v<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">!=<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">0<pos:position pos:line="34" pos:column="15"/></literal></expr></argument> )<pos:position pos:line="34" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">assert<pos:position pos:line="35" pos:column="9"/></name><argument_list pos:line="35" pos:column="9">( <argument><expr><name><name pos:line="35" pos:column="11">pTab<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">pSelect<pos:position pos:line="35" pos:column="24"/></name></name><operator pos:line="35" pos:column="24">==<pos:position pos:line="35" pos:column="26"/></operator><literal type="number" pos:line="35" pos:column="26">0<pos:position pos:line="35" pos:column="27"/></literal></expr></argument> )<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>  <comment type="block" pos:line="35" pos:column="32">/* This table is not a VIEW */</comment>
  <expr_stmt><expr><name pos:line="36" pos:column="3">nCol<pos:position pos:line="36" pos:column="7"/></name> <operator pos:line="36" pos:column="8">=<pos:position pos:line="36" pos:column="9"/></operator> <name><name pos:line="36" pos:column="10">pTab<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">nCol<pos:position pos:line="36" pos:column="20"/></name></name></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
  
  <comment type="block" pos:line="38" pos:column="3">/* pPk is the PRIMARY KEY index for WITHOUT ROWID tables and NULL for
  ** normal rowid tables.  nPkField is the number of key fields in the 
  ** pPk index or 1 for a rowid table.  In other words, nPkField is the
  ** number of fields in the true primary key of the table. */</comment>
  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">( <expr><call><name pos:line="42" pos:column="7">HasRowid<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">pTab<pos:position pos:line="42" pos:column="20"/></name></expr></argument>)<pos:position pos:line="42" pos:column="21"/></argument_list></call></expr> )<pos:position pos:line="42" pos:column="23"/></condition><then><block pos:line="42" pos:column="23">{
    <expr_stmt><expr><name pos:line="43" pos:column="5">pPk<pos:position pos:line="43" pos:column="8"/></name> <operator pos:line="43" pos:column="9">=<pos:position pos:line="43" pos:column="10"/></operator> <literal type="number" pos:line="43" pos:column="11">0<pos:position pos:line="43" pos:column="12"/></literal></expr>;<pos:position pos:line="43" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">nPkField<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <literal type="number" pos:line="44" pos:column="16">1<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></then><else pos:line="45" pos:column="4">else<block pos:line="45" pos:column="8">{
    <expr_stmt><expr><name pos:line="46" pos:column="5">pPk<pos:position pos:line="46" pos:column="8"/></name> <operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator> <call><name pos:line="46" pos:column="11">sqlite3PrimaryKeyIndex<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">pTab<pos:position pos:line="46" pos:column="38"/></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">nPkField<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <name><name pos:line="47" pos:column="16">pPk<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">nKeyCol<pos:position pos:line="47" pos:column="28"/></name></name></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="50" pos:column="3">/* Record that this module has started */</comment>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">VdbeModuleComment<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><operator pos:line="51" pos:column="21">(<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">v<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">,<pos:position pos:line="51" pos:column="24"/></operator> <literal type="string" pos:line="51" pos:column="25">"BEGIN: GenCnstCks(%d,%d,%d,%d,%d)"<pos:position pos:line="51" pos:column="60"/></literal><operator pos:line="51" pos:column="60">,<pos:position pos:line="51" pos:column="61"/></operator>
                     <name pos:line="52" pos:column="22">iDataCur<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">,<pos:position pos:line="52" pos:column="31"/></operator> <name pos:line="52" pos:column="32">iIdxCur<pos:position pos:line="52" pos:column="39"/></name><operator pos:line="52" pos:column="39">,<pos:position pos:line="52" pos:column="40"/></operator> <name pos:line="52" pos:column="41">regNewData<pos:position pos:line="52" pos:column="51"/></name><operator pos:line="52" pos:column="51">,<pos:position pos:line="52" pos:column="52"/></operator> <name pos:line="52" pos:column="53">regOldData<pos:position pos:line="52" pos:column="63"/></name><operator pos:line="52" pos:column="63">,<pos:position pos:line="52" pos:column="64"/></operator> <name pos:line="52" pos:column="65">pkChng<pos:position pos:line="52" pos:column="71"/></name><operator pos:line="52" pos:column="71">)<pos:position pos:line="52" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="52" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="74"/></expr_stmt>

  <comment type="block" pos:line="54" pos:column="3">/* Test all NOT NULL constraints.
  */</comment>
  <for pos:line="56" pos:column="3">for<control pos:line="56" pos:column="6">(<init><expr><name pos:line="56" pos:column="7">i<pos:position pos:line="56" pos:column="8"/></name><operator pos:line="56" pos:column="8">=<pos:position pos:line="56" pos:column="9"/></operator><literal type="number" pos:line="56" pos:column="9">0<pos:position pos:line="56" pos:column="10"/></literal></expr>;<pos:position pos:line="56" pos:column="11"/></init> <condition><expr><name pos:line="56" pos:column="12">i<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">&lt;<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="14">nCol<pos:position pos:line="56" pos:column="18"/></name></expr>;<pos:position pos:line="56" pos:column="19"/></condition> <incr><expr><name pos:line="56" pos:column="20">i<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">++<pos:position pos:line="56" pos:column="23"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="24"/></control><block pos:line="56" pos:column="24">{
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">( <expr><name pos:line="57" pos:column="9">i<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">==<pos:position pos:line="57" pos:column="12"/></operator><name><name pos:line="57" pos:column="12">pTab<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">iPKey<pos:position pos:line="57" pos:column="23"/></name></name></expr> )<pos:position pos:line="57" pos:column="25"/></condition><then><block pos:line="57" pos:column="25">{
      <continue pos:line="58" pos:column="7">continue;<pos:position pos:line="58" pos:column="16"/></continue>        <comment type="block" pos:line="58" pos:column="24">/* ROWID is never NULL */</comment>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">( <expr><name pos:line="60" pos:column="9">aiChng<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">&amp;&amp;<pos:position pos:line="60" pos:column="26"/></operator> <name><name pos:line="60" pos:column="19">aiChng<pos:position pos:line="60" pos:column="25"/></name><index pos:line="60" pos:column="25">[<expr><name pos:line="60" pos:column="26">i<pos:position pos:line="60" pos:column="27"/></name></expr>]<pos:position pos:line="60" pos:column="28"/></index></name><operator pos:line="60" pos:column="28">&lt;<pos:position pos:line="60" pos:column="32"/></operator><literal type="number" pos:line="60" pos:column="29">0<pos:position pos:line="60" pos:column="30"/></literal></expr> )<pos:position pos:line="60" pos:column="32"/></condition><then><block pos:line="60" pos:column="32">{
      <comment type="block" pos:line="61" pos:column="7">/* Don't bother checking for NOT NULL on columns that do not change */</comment>
      <continue pos:line="62" pos:column="7">continue;<pos:position pos:line="62" pos:column="16"/></continue>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="64" pos:column="5">onError<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">=<pos:position pos:line="64" pos:column="14"/></operator> <name><name pos:line="64" pos:column="15">pTab<pos:position pos:line="64" pos:column="19"/></name><operator pos:line="64" pos:column="19">-&gt;<pos:position pos:line="64" pos:column="24"/></operator><name pos:line="64" pos:column="21">aCol<pos:position pos:line="64" pos:column="25"/></name><index pos:line="64" pos:column="25">[<expr><name pos:line="64" pos:column="26">i<pos:position pos:line="64" pos:column="27"/></name></expr>]<pos:position pos:line="64" pos:column="28"/></index></name><operator pos:line="64" pos:column="28">.<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="29">notNull<pos:position pos:line="64" pos:column="36"/></name></expr>;<pos:position pos:line="64" pos:column="37"/></expr_stmt>
    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">( <expr><name pos:line="65" pos:column="9">onError<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">==<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="18">OE_None<pos:position pos:line="65" pos:column="25"/></name></expr> )<pos:position pos:line="65" pos:column="27"/></condition><then pos:line="65" pos:column="27"> <block type="pseudo"><continue pos:line="65" pos:column="28">continue;<pos:position pos:line="65" pos:column="37"/></continue></block></then></if>  <comment type="block" pos:line="65" pos:column="39">/* This column is allowed to be NULL */</comment>
    <if pos:line="66" pos:column="5">if<condition pos:line="66" pos:column="7">( <expr><name pos:line="66" pos:column="9">overrideError<pos:position pos:line="66" pos:column="22"/></name><operator pos:line="66" pos:column="22">!=<pos:position pos:line="66" pos:column="24"/></operator><name pos:line="66" pos:column="24">OE_Default<pos:position pos:line="66" pos:column="34"/></name></expr> )<pos:position pos:line="66" pos:column="36"/></condition><then><block pos:line="66" pos:column="36">{
      <expr_stmt><expr><name pos:line="67" pos:column="7">onError<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator> <name pos:line="67" pos:column="17">overrideError<pos:position pos:line="67" pos:column="30"/></name></expr>;<pos:position pos:line="67" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then><elseif pos:line="68" pos:column="6">else <if pos:line="68" pos:column="11">if<condition pos:line="68" pos:column="13">( <expr><name pos:line="68" pos:column="15">onError<pos:position pos:line="68" pos:column="22"/></name><operator pos:line="68" pos:column="22">==<pos:position pos:line="68" pos:column="24"/></operator><name pos:line="68" pos:column="24">OE_Default<pos:position pos:line="68" pos:column="34"/></name></expr> )<pos:position pos:line="68" pos:column="36"/></condition><then><block pos:line="68" pos:column="36">{
      <expr_stmt><expr><name pos:line="69" pos:column="7">onError<pos:position pos:line="69" pos:column="14"/></name> <operator pos:line="69" pos:column="15">=<pos:position pos:line="69" pos:column="16"/></operator> <name pos:line="69" pos:column="17">OE_Abort<pos:position pos:line="69" pos:column="25"/></name></expr>;<pos:position pos:line="69" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if></elseif></if>
    <if pos:line="71" pos:column="5">if<condition pos:line="71" pos:column="7">( <expr><name pos:line="71" pos:column="9">onError<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">==<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="18">OE_Replace<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">&amp;&amp;<pos:position pos:line="71" pos:column="39"/></operator> <name><name pos:line="71" pos:column="32">pTab<pos:position pos:line="71" pos:column="36"/></name><operator pos:line="71" pos:column="36">-&gt;<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="38">aCol<pos:position pos:line="71" pos:column="42"/></name><index pos:line="71" pos:column="42">[<expr><name pos:line="71" pos:column="43">i<pos:position pos:line="71" pos:column="44"/></name></expr>]<pos:position pos:line="71" pos:column="45"/></index></name><operator pos:line="71" pos:column="45">.<pos:position pos:line="71" pos:column="46"/></operator><name pos:line="71" pos:column="46">pDflt<pos:position pos:line="71" pos:column="51"/></name><operator pos:line="71" pos:column="51">==<pos:position pos:line="71" pos:column="53"/></operator><literal type="number" pos:line="71" pos:column="53">0<pos:position pos:line="71" pos:column="54"/></literal></expr> )<pos:position pos:line="71" pos:column="56"/></condition><then><block pos:line="71" pos:column="56">{
      <expr_stmt><expr><name pos:line="72" pos:column="7">onError<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">=<pos:position pos:line="72" pos:column="16"/></operator> <name pos:line="72" pos:column="17">OE_Abort<pos:position pos:line="72" pos:column="25"/></name></expr>;<pos:position pos:line="72" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">assert<pos:position pos:line="74" pos:column="11"/></name><argument_list pos:line="74" pos:column="11">( <argument><expr><name pos:line="74" pos:column="13">onError<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">==<pos:position pos:line="74" pos:column="22"/></operator><name pos:line="74" pos:column="22">OE_Rollback<pos:position pos:line="74" pos:column="33"/></name> <operator pos:line="74" pos:column="34">||<pos:position pos:line="74" pos:column="36"/></operator> <name pos:line="74" pos:column="37">onError<pos:position pos:line="74" pos:column="44"/></name><operator pos:line="74" pos:column="44">==<pos:position pos:line="74" pos:column="46"/></operator><name pos:line="74" pos:column="46">OE_Abort<pos:position pos:line="74" pos:column="54"/></name> <operator pos:line="74" pos:column="55">||<pos:position pos:line="74" pos:column="57"/></operator> <name pos:line="74" pos:column="58">onError<pos:position pos:line="74" pos:column="65"/></name><operator pos:line="74" pos:column="65">==<pos:position pos:line="74" pos:column="67"/></operator><name pos:line="74" pos:column="67">OE_Fail<pos:position pos:line="74" pos:column="74"/></name>
        <operator pos:line="75" pos:column="9">||<pos:position pos:line="75" pos:column="11"/></operator> <name pos:line="75" pos:column="12">onError<pos:position pos:line="75" pos:column="19"/></name><operator pos:line="75" pos:column="19">==<pos:position pos:line="75" pos:column="21"/></operator><name pos:line="75" pos:column="21">OE_Ignore<pos:position pos:line="75" pos:column="30"/></name> <operator pos:line="75" pos:column="31">||<pos:position pos:line="75" pos:column="33"/></operator> <name pos:line="75" pos:column="34">onError<pos:position pos:line="75" pos:column="41"/></name><operator pos:line="75" pos:column="41">==<pos:position pos:line="75" pos:column="43"/></operator><name pos:line="75" pos:column="43">OE_Replace<pos:position pos:line="75" pos:column="53"/></name></expr></argument> )<pos:position pos:line="75" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="56"/></expr_stmt>
    <switch pos:line="76" pos:column="5">switch<condition pos:line="76" pos:column="11">( <expr><name pos:line="76" pos:column="13">onError<pos:position pos:line="76" pos:column="20"/></name></expr> )<pos:position pos:line="76" pos:column="22"/></condition><block pos:line="76" pos:column="22">{
      <case pos:line="77" pos:column="7">case <expr><name pos:line="77" pos:column="12">OE_Abort<pos:position pos:line="77" pos:column="20"/></name></expr>:<pos:position pos:line="77" pos:column="21"/></case>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">sqlite3MayAbort<pos:position pos:line="78" pos:column="24"/></name><argument_list pos:line="78" pos:column="24">(<argument><expr><name pos:line="78" pos:column="25">pParse<pos:position pos:line="78" pos:column="31"/></name></expr></argument>)<pos:position pos:line="78" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="33"/></expr_stmt>
        <comment type="block" pos:line="79" pos:column="9">/* Fall through */</comment>
      <case pos:line="80" pos:column="7">case <expr><name pos:line="80" pos:column="12">OE_Rollback<pos:position pos:line="80" pos:column="23"/></name></expr>:<pos:position pos:line="80" pos:column="24"/></case>
      <case pos:line="81" pos:column="7">case <expr><name pos:line="81" pos:column="12">OE_Fail<pos:position pos:line="81" pos:column="19"/></name></expr>:<pos:position pos:line="81" pos:column="20"/></case> <block pos:line="81" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="82" pos:column="9">char<pos:position pos:line="82" pos:column="13"/></name> <modifier pos:line="82" pos:column="14">*<pos:position pos:line="82" pos:column="15"/></modifier></type><name pos:line="82" pos:column="15">zMsg<pos:position pos:line="82" pos:column="19"/></name> <init pos:line="82" pos:column="20">= <expr><call><name pos:line="82" pos:column="22">sqlite3MPrintf<pos:position pos:line="82" pos:column="36"/></name><argument_list pos:line="82" pos:column="36">(<argument><expr><name pos:line="82" pos:column="37">db<pos:position pos:line="82" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="41">"%s.%s"<pos:position pos:line="82" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="50">pTab<pos:position pos:line="82" pos:column="54"/></name><operator pos:line="82" pos:column="54">-&gt;<pos:position pos:line="82" pos:column="59"/></operator><name pos:line="82" pos:column="56">zName<pos:position pos:line="82" pos:column="61"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="83" pos:column="37">pTab<pos:position pos:line="83" pos:column="41"/></name><operator pos:line="83" pos:column="41">-&gt;<pos:position pos:line="83" pos:column="46"/></operator><name pos:line="83" pos:column="43">aCol<pos:position pos:line="83" pos:column="47"/></name><index pos:line="83" pos:column="47">[<expr><name pos:line="83" pos:column="48">i<pos:position pos:line="83" pos:column="49"/></name></expr>]<pos:position pos:line="83" pos:column="50"/></index></name><operator pos:line="83" pos:column="50">.<pos:position pos:line="83" pos:column="51"/></operator><name pos:line="83" pos:column="51">zName<pos:position pos:line="83" pos:column="56"/></name></expr></argument>)<pos:position pos:line="83" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="83" pos:column="58"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">sqlite3VdbeAddOp3<pos:position pos:line="84" pos:column="26"/></name><argument_list pos:line="84" pos:column="26">(<argument><expr><name pos:line="84" pos:column="27">v<pos:position pos:line="84" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="30">OP_HaltIfNull<pos:position pos:line="84" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="45">SQLITE_CONSTRAINT_NOTNULL<pos:position pos:line="84" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="72">onError<pos:position pos:line="84" pos:column="79"/></name></expr></argument>,
                          <argument><expr><name pos:line="85" pos:column="27">regNewData<pos:position pos:line="85" pos:column="37"/></name><operator pos:line="85" pos:column="37">+<pos:position pos:line="85" pos:column="38"/></operator><literal type="number" pos:line="85" pos:column="38">1<pos:position pos:line="85" pos:column="39"/></literal><operator pos:line="85" pos:column="39">+<pos:position pos:line="85" pos:column="40"/></operator><name pos:line="85" pos:column="40">i<pos:position pos:line="85" pos:column="41"/></name></expr></argument>)<pos:position pos:line="85" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">sqlite3VdbeAppendP4<pos:position pos:line="86" pos:column="28"/></name><argument_list pos:line="86" pos:column="28">(<argument><expr><name pos:line="86" pos:column="29">v<pos:position pos:line="86" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="32">zMsg<pos:position pos:line="86" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="38">P4_DYNAMIC<pos:position pos:line="86" pos:column="48"/></name></expr></argument>)<pos:position pos:line="86" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">sqlite3VdbeChangeP5<pos:position pos:line="87" pos:column="28"/></name><argument_list pos:line="87" pos:column="28">(<argument><expr><name pos:line="87" pos:column="29">v<pos:position pos:line="87" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="32">P5_ConstraintNotNull<pos:position pos:line="87" pos:column="52"/></name></expr></argument>)<pos:position pos:line="87" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">VdbeCoverage<pos:position pos:line="88" pos:column="21"/></name><argument_list pos:line="88" pos:column="21">(<argument><expr><name pos:line="88" pos:column="22">v<pos:position pos:line="88" pos:column="23"/></name></expr></argument>)<pos:position pos:line="88" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="25"/></expr_stmt>
        <break pos:line="89" pos:column="9">break;<pos:position pos:line="89" pos:column="15"/></break>
      }<pos:position pos:line="90" pos:column="8"/></block>
      <case pos:line="91" pos:column="7">case <expr><name pos:line="91" pos:column="12">OE_Ignore<pos:position pos:line="91" pos:column="21"/></name></expr>:<pos:position pos:line="91" pos:column="22"/></case> <block pos:line="91" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="92" pos:column="26"/></name><argument_list pos:line="92" pos:column="26">(<argument><expr><name pos:line="92" pos:column="27">v<pos:position pos:line="92" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="30">OP_IsNull<pos:position pos:line="92" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="41">regNewData<pos:position pos:line="92" pos:column="51"/></name><operator pos:line="92" pos:column="51">+<pos:position pos:line="92" pos:column="52"/></operator><literal type="number" pos:line="92" pos:column="52">1<pos:position pos:line="92" pos:column="53"/></literal><operator pos:line="92" pos:column="53">+<pos:position pos:line="92" pos:column="54"/></operator><name pos:line="92" pos:column="54">i<pos:position pos:line="92" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="57">ignoreDest<pos:position pos:line="92" pos:column="67"/></name></expr></argument>)<pos:position pos:line="92" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">VdbeCoverage<pos:position pos:line="93" pos:column="21"/></name><argument_list pos:line="93" pos:column="21">(<argument><expr><name pos:line="93" pos:column="22">v<pos:position pos:line="93" pos:column="23"/></name></expr></argument>)<pos:position pos:line="93" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="25"/></expr_stmt>
        <break pos:line="94" pos:column="9">break;<pos:position pos:line="94" pos:column="15"/></break>
      }<pos:position pos:line="95" pos:column="8"/></block>
      <default pos:line="96" pos:column="7">default:<pos:position pos:line="96" pos:column="15"/></default> <block pos:line="96" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">assert<pos:position pos:line="97" pos:column="15"/></name><argument_list pos:line="97" pos:column="15">( <argument><expr><name pos:line="97" pos:column="17">onError<pos:position pos:line="97" pos:column="24"/></name><operator pos:line="97" pos:column="24">==<pos:position pos:line="97" pos:column="26"/></operator><name pos:line="97" pos:column="26">OE_Replace<pos:position pos:line="97" pos:column="36"/></name></expr></argument> )<pos:position pos:line="97" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="98" pos:column="9">addr1<pos:position pos:line="98" pos:column="14"/></name> <operator pos:line="98" pos:column="15">=<pos:position pos:line="98" pos:column="16"/></operator> <call><name pos:line="98" pos:column="17">sqlite3VdbeAddOp1<pos:position pos:line="98" pos:column="34"/></name><argument_list pos:line="98" pos:column="34">(<argument><expr><name pos:line="98" pos:column="35">v<pos:position pos:line="98" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="38">OP_NotNull<pos:position pos:line="98" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="50">regNewData<pos:position pos:line="98" pos:column="60"/></name><operator pos:line="98" pos:column="60">+<pos:position pos:line="98" pos:column="61"/></operator><literal type="number" pos:line="98" pos:column="61">1<pos:position pos:line="98" pos:column="62"/></literal><operator pos:line="98" pos:column="62">+<pos:position pos:line="98" pos:column="63"/></operator><name pos:line="98" pos:column="63">i<pos:position pos:line="98" pos:column="64"/></name></expr></argument>)<pos:position pos:line="98" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="66"/></expr_stmt>
           <expr_stmt><expr><call><name pos:line="99" pos:column="12">VdbeCoverage<pos:position pos:line="99" pos:column="24"/></name><argument_list pos:line="99" pos:column="24">(<argument><expr><name pos:line="99" pos:column="25">v<pos:position pos:line="99" pos:column="26"/></name></expr></argument>)<pos:position pos:line="99" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">sqlite3ExprCode<pos:position pos:line="100" pos:column="24"/></name><argument_list pos:line="100" pos:column="24">(<argument><expr><name pos:line="100" pos:column="25">pParse<pos:position pos:line="100" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="33">pTab<pos:position pos:line="100" pos:column="37"/></name><operator pos:line="100" pos:column="37">-&gt;<pos:position pos:line="100" pos:column="42"/></operator><name pos:line="100" pos:column="39">aCol<pos:position pos:line="100" pos:column="43"/></name><index pos:line="100" pos:column="43">[<expr><name pos:line="100" pos:column="44">i<pos:position pos:line="100" pos:column="45"/></name></expr>]<pos:position pos:line="100" pos:column="46"/></index></name><operator pos:line="100" pos:column="46">.<pos:position pos:line="100" pos:column="47"/></operator><name pos:line="100" pos:column="47">pDflt<pos:position pos:line="100" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="54">regNewData<pos:position pos:line="100" pos:column="64"/></name><operator pos:line="100" pos:column="64">+<pos:position pos:line="100" pos:column="65"/></operator><literal type="number" pos:line="100" pos:column="65">1<pos:position pos:line="100" pos:column="66"/></literal><operator pos:line="100" pos:column="66">+<pos:position pos:line="100" pos:column="67"/></operator><name pos:line="100" pos:column="67">i<pos:position pos:line="100" pos:column="68"/></name></expr></argument>)<pos:position pos:line="100" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="101" pos:column="9">sqlite3VdbeJumpHere<pos:position pos:line="101" pos:column="28"/></name><argument_list pos:line="101" pos:column="28">(<argument><expr><name pos:line="101" pos:column="29">v<pos:position pos:line="101" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="32">addr1<pos:position pos:line="101" pos:column="37"/></name></expr></argument>)<pos:position pos:line="101" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="39"/></expr_stmt>
        <break pos:line="102" pos:column="9">break;<pos:position pos:line="102" pos:column="15"/></break>
      }<pos:position pos:line="103" pos:column="8"/></block>
    }<pos:position pos:line="104" pos:column="6"/></block></switch>
  }<pos:position pos:line="105" pos:column="4"/></block></for>

  <comment type="block" pos:line="107" pos:column="3">/* Test all CHECK constraints
  */</comment>
<cpp:ifndef pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">ifndef<pos:position pos:line="109" pos:column="8"/></cpp:directive> <name pos:line="109" pos:column="9">SQLITE_OMIT_CHECK<pos:position pos:line="109" pos:column="26"/></name></cpp:ifndef>
  <if pos:line="110" pos:column="3">if<condition pos:line="110" pos:column="5">( <expr><name><name pos:line="110" pos:column="7">pTab<pos:position pos:line="110" pos:column="11"/></name><operator pos:line="110" pos:column="11">-&gt;<pos:position pos:line="110" pos:column="16"/></operator><name pos:line="110" pos:column="13">pCheck<pos:position pos:line="110" pos:column="19"/></name></name> <operator pos:line="110" pos:column="20">&amp;&amp;<pos:position pos:line="110" pos:column="30"/></operator> <operator pos:line="110" pos:column="23">(<pos:position pos:line="110" pos:column="24"/></operator><name><name pos:line="110" pos:column="24">db<pos:position pos:line="110" pos:column="26"/></name><operator pos:line="110" pos:column="26">-&gt;<pos:position pos:line="110" pos:column="31"/></operator><name pos:line="110" pos:column="28">flags<pos:position pos:line="110" pos:column="33"/></name></name> <operator pos:line="110" pos:column="34">&amp;<pos:position pos:line="110" pos:column="39"/></operator> <name pos:line="110" pos:column="36">SQLITE_IgnoreChecks<pos:position pos:line="110" pos:column="55"/></name><operator pos:line="110" pos:column="55">)<pos:position pos:line="110" pos:column="56"/></operator><operator pos:line="110" pos:column="56">==<pos:position pos:line="110" pos:column="58"/></operator><literal type="number" pos:line="110" pos:column="58">0<pos:position pos:line="110" pos:column="59"/></literal></expr> )<pos:position pos:line="110" pos:column="61"/></condition><then><block pos:line="110" pos:column="61">{
    <decl_stmt><decl><type><name pos:line="111" pos:column="5">ExprList<pos:position pos:line="111" pos:column="13"/></name> <modifier pos:line="111" pos:column="14">*<pos:position pos:line="111" pos:column="15"/></modifier></type><name pos:line="111" pos:column="15">pCheck<pos:position pos:line="111" pos:column="21"/></name> <init pos:line="111" pos:column="22">= <expr><name><name pos:line="111" pos:column="24">pTab<pos:position pos:line="111" pos:column="28"/></name><operator pos:line="111" pos:column="28">-&gt;<pos:position pos:line="111" pos:column="33"/></operator><name pos:line="111" pos:column="30">pCheck<pos:position pos:line="111" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="111" pos:column="37"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="112" pos:column="5">pParse<pos:position pos:line="112" pos:column="11"/></name><operator pos:line="112" pos:column="11">-&gt;<pos:position pos:line="112" pos:column="16"/></operator><name pos:line="112" pos:column="13">iSelfTab<pos:position pos:line="112" pos:column="21"/></name></name> <operator pos:line="112" pos:column="22">=<pos:position pos:line="112" pos:column="23"/></operator> <operator pos:line="112" pos:column="24">-<pos:position pos:line="112" pos:column="25"/></operator><operator pos:line="112" pos:column="25">(<pos:position pos:line="112" pos:column="26"/></operator><name pos:line="112" pos:column="26">regNewData<pos:position pos:line="112" pos:column="36"/></name><operator pos:line="112" pos:column="36">+<pos:position pos:line="112" pos:column="37"/></operator><literal type="number" pos:line="112" pos:column="37">1<pos:position pos:line="112" pos:column="38"/></literal><operator pos:line="112" pos:column="38">)<pos:position pos:line="112" pos:column="39"/></operator></expr>;<pos:position pos:line="112" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="113" pos:column="5">onError<pos:position pos:line="113" pos:column="12"/></name> <operator pos:line="113" pos:column="13">=<pos:position pos:line="113" pos:column="14"/></operator> <ternary><condition><expr><name pos:line="113" pos:column="15">overrideError<pos:position pos:line="113" pos:column="28"/></name><operator pos:line="113" pos:column="28">!=<pos:position pos:line="113" pos:column="30"/></operator><name pos:line="113" pos:column="30">OE_Default<pos:position pos:line="113" pos:column="40"/></name></expr> ?<pos:position pos:line="113" pos:column="42"/></condition><then pos:line="113" pos:column="42"> <expr><name pos:line="113" pos:column="43">overrideError<pos:position pos:line="113" pos:column="56"/></name></expr> <pos:position pos:line="113" pos:column="57"/></then><else pos:line="113" pos:column="57">: <expr><name pos:line="113" pos:column="59">OE_Abort<pos:position pos:line="113" pos:column="67"/></name></expr></else></ternary></expr>;<pos:position pos:line="113" pos:column="68"/></expr_stmt>
    <for pos:line="114" pos:column="5">for<control pos:line="114" pos:column="8">(<init><expr><name pos:line="114" pos:column="9">i<pos:position pos:line="114" pos:column="10"/></name><operator pos:line="114" pos:column="10">=<pos:position pos:line="114" pos:column="11"/></operator><literal type="number" pos:line="114" pos:column="11">0<pos:position pos:line="114" pos:column="12"/></literal></expr>;<pos:position pos:line="114" pos:column="13"/></init> <condition><expr><name pos:line="114" pos:column="14">i<pos:position pos:line="114" pos:column="15"/></name><operator pos:line="114" pos:column="15">&lt;<pos:position pos:line="114" pos:column="19"/></operator><name><name pos:line="114" pos:column="16">pCheck<pos:position pos:line="114" pos:column="22"/></name><operator pos:line="114" pos:column="22">-&gt;<pos:position pos:line="114" pos:column="27"/></operator><name pos:line="114" pos:column="24">nExpr<pos:position pos:line="114" pos:column="29"/></name></name></expr>;<pos:position pos:line="114" pos:column="30"/></condition> <incr><expr><name pos:line="114" pos:column="31">i<pos:position pos:line="114" pos:column="32"/></name><operator pos:line="114" pos:column="32">++<pos:position pos:line="114" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="114" pos:column="35"/></control><block pos:line="114" pos:column="35">{
      <decl_stmt><decl><type><name pos:line="115" pos:column="7">int<pos:position pos:line="115" pos:column="10"/></name></type> <name pos:line="115" pos:column="11">allOk<pos:position pos:line="115" pos:column="16"/></name></decl>;<pos:position pos:line="115" pos:column="17"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="116" pos:column="7">Expr<pos:position pos:line="116" pos:column="11"/></name> <modifier pos:line="116" pos:column="12">*<pos:position pos:line="116" pos:column="13"/></modifier></type><name pos:line="116" pos:column="13">pExpr<pos:position pos:line="116" pos:column="18"/></name> <init pos:line="116" pos:column="19">= <expr><name><name pos:line="116" pos:column="21">pCheck<pos:position pos:line="116" pos:column="27"/></name><operator pos:line="116" pos:column="27">-&gt;<pos:position pos:line="116" pos:column="32"/></operator><name pos:line="116" pos:column="29">a<pos:position pos:line="116" pos:column="30"/></name><index pos:line="116" pos:column="30">[<expr><name pos:line="116" pos:column="31">i<pos:position pos:line="116" pos:column="32"/></name></expr>]<pos:position pos:line="116" pos:column="33"/></index></name><operator pos:line="116" pos:column="33">.<pos:position pos:line="116" pos:column="34"/></operator><name pos:line="116" pos:column="34">pExpr<pos:position pos:line="116" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="116" pos:column="40"/></decl_stmt>
      <if pos:line="117" pos:column="7">if<condition pos:line="117" pos:column="9">( <expr><name pos:line="117" pos:column="11">aiChng<pos:position pos:line="117" pos:column="17"/></name> <operator pos:line="117" pos:column="18">&amp;&amp;<pos:position pos:line="117" pos:column="28"/></operator> <call><name pos:line="117" pos:column="21">checkConstraintUnchanged<pos:position pos:line="117" pos:column="45"/></name><argument_list pos:line="117" pos:column="45">(<argument><expr><name pos:line="117" pos:column="46">pExpr<pos:position pos:line="117" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="53">aiChng<pos:position pos:line="117" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="61">pkChng<pos:position pos:line="117" pos:column="67"/></name></expr></argument>)<pos:position pos:line="117" pos:column="68"/></argument_list></call></expr> )<pos:position pos:line="117" pos:column="70"/></condition><then pos:line="117" pos:column="70"> <block type="pseudo"><continue pos:line="117" pos:column="71">continue;<pos:position pos:line="117" pos:column="80"/></continue></block></then></if>
      <expr_stmt><expr><name pos:line="118" pos:column="7">allOk<pos:position pos:line="118" pos:column="12"/></name> <operator pos:line="118" pos:column="13">=<pos:position pos:line="118" pos:column="14"/></operator> <call><name pos:line="118" pos:column="15">sqlite3VdbeMakeLabel<pos:position pos:line="118" pos:column="35"/></name><argument_list pos:line="118" pos:column="35">(<argument><expr><name pos:line="118" pos:column="36">v<pos:position pos:line="118" pos:column="37"/></name></expr></argument>)<pos:position pos:line="118" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="119" pos:column="7">sqlite3ExprIfTrue<pos:position pos:line="119" pos:column="24"/></name><argument_list pos:line="119" pos:column="24">(<argument><expr><name pos:line="119" pos:column="25">pParse<pos:position pos:line="119" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="33">pExpr<pos:position pos:line="119" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="40">allOk<pos:position pos:line="119" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="47">SQLITE_JUMPIFNULL<pos:position pos:line="119" pos:column="64"/></name></expr></argument>)<pos:position pos:line="119" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="66"/></expr_stmt>
      <if pos:line="120" pos:column="7">if<condition pos:line="120" pos:column="9">( <expr><name pos:line="120" pos:column="11">onError<pos:position pos:line="120" pos:column="18"/></name><operator pos:line="120" pos:column="18">==<pos:position pos:line="120" pos:column="20"/></operator><name pos:line="120" pos:column="20">OE_Ignore<pos:position pos:line="120" pos:column="29"/></name></expr> )<pos:position pos:line="120" pos:column="31"/></condition><then><block pos:line="120" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="121" pos:column="9">sqlite3VdbeGoto<pos:position pos:line="121" pos:column="24"/></name><argument_list pos:line="121" pos:column="24">(<argument><expr><name pos:line="121" pos:column="25">v<pos:position pos:line="121" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="28">ignoreDest<pos:position pos:line="121" pos:column="38"/></name></expr></argument>)<pos:position pos:line="121" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="122" pos:column="8"/></block></then><else pos:line="122" pos:column="8">else<block pos:line="122" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="123" pos:column="9">char<pos:position pos:line="123" pos:column="13"/></name> <modifier pos:line="123" pos:column="14">*<pos:position pos:line="123" pos:column="15"/></modifier></type><name pos:line="123" pos:column="15">zName<pos:position pos:line="123" pos:column="20"/></name> <init pos:line="123" pos:column="21">= <expr><name><name pos:line="123" pos:column="23">pCheck<pos:position pos:line="123" pos:column="29"/></name><operator pos:line="123" pos:column="29">-&gt;<pos:position pos:line="123" pos:column="34"/></operator><name pos:line="123" pos:column="31">a<pos:position pos:line="123" pos:column="32"/></name><index pos:line="123" pos:column="32">[<expr><name pos:line="123" pos:column="33">i<pos:position pos:line="123" pos:column="34"/></name></expr>]<pos:position pos:line="123" pos:column="35"/></index></name><operator pos:line="123" pos:column="35">.<pos:position pos:line="123" pos:column="36"/></operator><name pos:line="123" pos:column="36">zName<pos:position pos:line="123" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="123" pos:column="42"/></decl_stmt>
        <if pos:line="124" pos:column="9">if<condition pos:line="124" pos:column="11">( <expr><name pos:line="124" pos:column="13">zName<pos:position pos:line="124" pos:column="18"/></name><operator pos:line="124" pos:column="18">==<pos:position pos:line="124" pos:column="20"/></operator><literal type="number" pos:line="124" pos:column="20">0<pos:position pos:line="124" pos:column="21"/></literal></expr> )<pos:position pos:line="124" pos:column="23"/></condition><then pos:line="124" pos:column="23"> <block type="pseudo"><expr_stmt><expr><name pos:line="124" pos:column="24">zName<pos:position pos:line="124" pos:column="29"/></name> <operator pos:line="124" pos:column="30">=<pos:position pos:line="124" pos:column="31"/></operator> <name><name pos:line="124" pos:column="32">pTab<pos:position pos:line="124" pos:column="36"/></name><operator pos:line="124" pos:column="36">-&gt;<pos:position pos:line="124" pos:column="41"/></operator><name pos:line="124" pos:column="38">zName<pos:position pos:line="124" pos:column="43"/></name></name></expr>;<pos:position pos:line="124" pos:column="44"/></expr_stmt></block></then></if>
        <if pos:line="125" pos:column="9">if<condition pos:line="125" pos:column="11">( <expr><name pos:line="125" pos:column="13">onError<pos:position pos:line="125" pos:column="20"/></name><operator pos:line="125" pos:column="20">==<pos:position pos:line="125" pos:column="22"/></operator><name pos:line="125" pos:column="22">OE_Replace<pos:position pos:line="125" pos:column="32"/></name></expr> )<pos:position pos:line="125" pos:column="34"/></condition><then pos:line="125" pos:column="34"> <block type="pseudo"><expr_stmt><expr><name pos:line="125" pos:column="35">onError<pos:position pos:line="125" pos:column="42"/></name> <operator pos:line="125" pos:column="43">=<pos:position pos:line="125" pos:column="44"/></operator> <name pos:line="125" pos:column="45">OE_Abort<pos:position pos:line="125" pos:column="53"/></name></expr>;<pos:position pos:line="125" pos:column="54"/></expr_stmt></block></then></if> <comment type="block" pos:line="125" pos:column="55">/* IMP: R-15569-63625 */</comment>
        <expr_stmt><expr><call><name pos:line="126" pos:column="9">sqlite3HaltConstraint<pos:position pos:line="126" pos:column="30"/></name><argument_list pos:line="126" pos:column="30">(<argument><expr><name pos:line="126" pos:column="31">pParse<pos:position pos:line="126" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="39">SQLITE_CONSTRAINT_CHECK<pos:position pos:line="126" pos:column="62"/></name></expr></argument>,
                              <argument><expr><name pos:line="127" pos:column="31">onError<pos:position pos:line="127" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="40">zName<pos:position pos:line="127" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="47">P4_TRANSIENT<pos:position pos:line="127" pos:column="59"/></name></expr></argument>,
                              <argument><expr><name pos:line="128" pos:column="31">P5_ConstraintCheck<pos:position pos:line="128" pos:column="49"/></name></expr></argument>)<pos:position pos:line="128" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="51"/></expr_stmt>
      }<pos:position pos:line="129" pos:column="8"/></block></else></if>
      <expr_stmt><expr><call><name pos:line="130" pos:column="7">sqlite3VdbeResolveLabel<pos:position pos:line="130" pos:column="30"/></name><argument_list pos:line="130" pos:column="30">(<argument><expr><name pos:line="130" pos:column="31">v<pos:position pos:line="130" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="34">allOk<pos:position pos:line="130" pos:column="39"/></name></expr></argument>)<pos:position pos:line="130" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="132" pos:column="5">pParse<pos:position pos:line="132" pos:column="11"/></name><operator pos:line="132" pos:column="11">-&gt;<pos:position pos:line="132" pos:column="16"/></operator><name pos:line="132" pos:column="13">iSelfTab<pos:position pos:line="132" pos:column="21"/></name></name> <operator pos:line="132" pos:column="22">=<pos:position pos:line="132" pos:column="23"/></operator> <literal type="number" pos:line="132" pos:column="24">0<pos:position pos:line="132" pos:column="25"/></literal></expr>;<pos:position pos:line="132" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="133" pos:column="4"/></block></then></if>
<cpp:endif pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">endif<pos:position pos:line="134" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="134" pos:column="8">/* !defined(SQLITE_OMIT_CHECK) */</comment>

  <comment type="block" pos:line="136" pos:column="3">/* If rowid is changing, make sure the new rowid does not previously
  ** exist in the table.
  */</comment>
  <if pos:line="139" pos:column="3">if<condition pos:line="139" pos:column="5">( <expr><name pos:line="139" pos:column="7">pkChng<pos:position pos:line="139" pos:column="13"/></name> <operator pos:line="139" pos:column="14">&amp;&amp;<pos:position pos:line="139" pos:column="24"/></operator> <name pos:line="139" pos:column="17">pPk<pos:position pos:line="139" pos:column="20"/></name><operator pos:line="139" pos:column="20">==<pos:position pos:line="139" pos:column="22"/></operator><literal type="number" pos:line="139" pos:column="22">0<pos:position pos:line="139" pos:column="23"/></literal></expr> )<pos:position pos:line="139" pos:column="25"/></condition><then><block pos:line="139" pos:column="25">{
    <decl_stmt><decl><type><name pos:line="140" pos:column="5">int<pos:position pos:line="140" pos:column="8"/></name></type> <name pos:line="140" pos:column="9">addrRowidOk<pos:position pos:line="140" pos:column="20"/></name> <init pos:line="140" pos:column="21">= <expr><call><name pos:line="140" pos:column="23">sqlite3VdbeMakeLabel<pos:position pos:line="140" pos:column="43"/></name><argument_list pos:line="140" pos:column="43">(<argument><expr><name pos:line="140" pos:column="44">v<pos:position pos:line="140" pos:column="45"/></name></expr></argument>)<pos:position pos:line="140" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="140" pos:column="47"/></decl_stmt>

    <comment type="block" pos:line="142" pos:column="5">/* Figure out what action to take in case of a rowid collision */</comment>
    <expr_stmt><expr><name pos:line="143" pos:column="5">onError<pos:position pos:line="143" pos:column="12"/></name> <operator pos:line="143" pos:column="13">=<pos:position pos:line="143" pos:column="14"/></operator> <name><name pos:line="143" pos:column="15">pTab<pos:position pos:line="143" pos:column="19"/></name><operator pos:line="143" pos:column="19">-&gt;<pos:position pos:line="143" pos:column="24"/></operator><name pos:line="143" pos:column="21">keyConf<pos:position pos:line="143" pos:column="28"/></name></name></expr>;<pos:position pos:line="143" pos:column="29"/></expr_stmt>
    <if pos:line="144" pos:column="5">if<condition pos:line="144" pos:column="7">( <expr><name pos:line="144" pos:column="9">overrideError<pos:position pos:line="144" pos:column="22"/></name><operator pos:line="144" pos:column="22">!=<pos:position pos:line="144" pos:column="24"/></operator><name pos:line="144" pos:column="24">OE_Default<pos:position pos:line="144" pos:column="34"/></name></expr> )<pos:position pos:line="144" pos:column="36"/></condition><then><block pos:line="144" pos:column="36">{
      <expr_stmt><expr><name pos:line="145" pos:column="7">onError<pos:position pos:line="145" pos:column="14"/></name> <operator pos:line="145" pos:column="15">=<pos:position pos:line="145" pos:column="16"/></operator> <name pos:line="145" pos:column="17">overrideError<pos:position pos:line="145" pos:column="30"/></name></expr>;<pos:position pos:line="145" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="146" pos:column="6"/></block></then><elseif pos:line="146" pos:column="6">else <if pos:line="146" pos:column="11">if<condition pos:line="146" pos:column="13">( <expr><name pos:line="146" pos:column="15">onError<pos:position pos:line="146" pos:column="22"/></name><operator pos:line="146" pos:column="22">==<pos:position pos:line="146" pos:column="24"/></operator><name pos:line="146" pos:column="24">OE_Default<pos:position pos:line="146" pos:column="34"/></name></expr> )<pos:position pos:line="146" pos:column="36"/></condition><then><block pos:line="146" pos:column="36">{
      <expr_stmt><expr><name pos:line="147" pos:column="7">onError<pos:position pos:line="147" pos:column="14"/></name> <operator pos:line="147" pos:column="15">=<pos:position pos:line="147" pos:column="16"/></operator> <name pos:line="147" pos:column="17">OE_Abort<pos:position pos:line="147" pos:column="25"/></name></expr>;<pos:position pos:line="147" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="148" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="150" pos:column="5">if<condition pos:line="150" pos:column="7">( <expr><name pos:line="150" pos:column="9">isUpdate<pos:position pos:line="150" pos:column="17"/></name></expr> )<pos:position pos:line="150" pos:column="19"/></condition><then><block pos:line="150" pos:column="19">{
      <comment type="block" pos:line="151" pos:column="7">/* pkChng!=0 does not mean that the rowid has changed, only that
      ** it might have changed.  Skip the conflict logic below if the rowid
      ** is unchanged. */</comment>
      <expr_stmt><expr><call><name pos:line="154" pos:column="7">sqlite3VdbeAddOp3<pos:position pos:line="154" pos:column="24"/></name><argument_list pos:line="154" pos:column="24">(<argument><expr><name pos:line="154" pos:column="25">v<pos:position pos:line="154" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="28">OP_Eq<pos:position pos:line="154" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="35">regNewData<pos:position pos:line="154" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="47">addrRowidOk<pos:position pos:line="154" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="60">regOldData<pos:position pos:line="154" pos:column="70"/></name></expr></argument>)<pos:position pos:line="154" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="155" pos:column="7">sqlite3VdbeChangeP5<pos:position pos:line="155" pos:column="26"/></name><argument_list pos:line="155" pos:column="26">(<argument><expr><name pos:line="155" pos:column="27">v<pos:position pos:line="155" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="30">SQLITE_NOTNULL<pos:position pos:line="155" pos:column="44"/></name></expr></argument>)<pos:position pos:line="155" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="156" pos:column="7">VdbeCoverage<pos:position pos:line="156" pos:column="19"/></name><argument_list pos:line="156" pos:column="19">(<argument><expr><name pos:line="156" pos:column="20">v<pos:position pos:line="156" pos:column="21"/></name></expr></argument>)<pos:position pos:line="156" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="157" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="159" pos:column="5">/* If the response to a rowid conflict is REPLACE but the response
    ** to some other UNIQUE constraint is FAIL or IGNORE, then we need
    ** to defer the running of the rowid conflict checking until after
    ** the UNIQUE constraints have run.
    */</comment>
    <if pos:line="164" pos:column="5">if<condition pos:line="164" pos:column="7">( <expr><name pos:line="164" pos:column="9">onError<pos:position pos:line="164" pos:column="16"/></name><operator pos:line="164" pos:column="16">==<pos:position pos:line="164" pos:column="18"/></operator><name pos:line="164" pos:column="18">OE_Replace<pos:position pos:line="164" pos:column="28"/></name> <operator pos:line="164" pos:column="29">&amp;&amp;<pos:position pos:line="164" pos:column="39"/></operator> <name pos:line="164" pos:column="32">overrideError<pos:position pos:line="164" pos:column="45"/></name><operator pos:line="164" pos:column="45">!=<pos:position pos:line="164" pos:column="47"/></operator><name pos:line="164" pos:column="47">OE_Replace<pos:position pos:line="164" pos:column="57"/></name></expr> )<pos:position pos:line="164" pos:column="59"/></condition><then><block pos:line="164" pos:column="59">{
      <for pos:line="165" pos:column="7">for<control pos:line="165" pos:column="10">(<init><expr><name pos:line="165" pos:column="11">pIdx<pos:position pos:line="165" pos:column="15"/></name><operator pos:line="165" pos:column="15">=<pos:position pos:line="165" pos:column="16"/></operator><name><name pos:line="165" pos:column="16">pTab<pos:position pos:line="165" pos:column="20"/></name><operator pos:line="165" pos:column="20">-&gt;<pos:position pos:line="165" pos:column="25"/></operator><name pos:line="165" pos:column="22">pIndex<pos:position pos:line="165" pos:column="28"/></name></name></expr>;<pos:position pos:line="165" pos:column="29"/></init> <condition><expr><name pos:line="165" pos:column="30">pIdx<pos:position pos:line="165" pos:column="34"/></name></expr>;<pos:position pos:line="165" pos:column="35"/></condition> <incr><expr><name pos:line="165" pos:column="36">pIdx<pos:position pos:line="165" pos:column="40"/></name><operator pos:line="165" pos:column="40">=<pos:position pos:line="165" pos:column="41"/></operator><name><name pos:line="165" pos:column="41">pIdx<pos:position pos:line="165" pos:column="45"/></name><operator pos:line="165" pos:column="45">-&gt;<pos:position pos:line="165" pos:column="50"/></operator><name pos:line="165" pos:column="47">pNext<pos:position pos:line="165" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="165" pos:column="53"/></control><block pos:line="165" pos:column="53">{
        <if pos:line="166" pos:column="9">if<condition pos:line="166" pos:column="11">( <expr><name><name pos:line="166" pos:column="13">pIdx<pos:position pos:line="166" pos:column="17"/></name><operator pos:line="166" pos:column="17">-&gt;<pos:position pos:line="166" pos:column="22"/></operator><name pos:line="166" pos:column="19">onError<pos:position pos:line="166" pos:column="26"/></name></name><operator pos:line="166" pos:column="26">==<pos:position pos:line="166" pos:column="28"/></operator><name pos:line="166" pos:column="28">OE_Ignore<pos:position pos:line="166" pos:column="37"/></name> <operator pos:line="166" pos:column="38">||<pos:position pos:line="166" pos:column="40"/></operator> <name><name pos:line="166" pos:column="41">pIdx<pos:position pos:line="166" pos:column="45"/></name><operator pos:line="166" pos:column="45">-&gt;<pos:position pos:line="166" pos:column="50"/></operator><name pos:line="166" pos:column="47">onError<pos:position pos:line="166" pos:column="54"/></name></name><operator pos:line="166" pos:column="54">==<pos:position pos:line="166" pos:column="56"/></operator><name pos:line="166" pos:column="56">OE_Fail<pos:position pos:line="166" pos:column="63"/></name></expr> )<pos:position pos:line="166" pos:column="65"/></condition><then><block pos:line="166" pos:column="65">{
          <expr_stmt><expr><name pos:line="167" pos:column="11">ipkTop<pos:position pos:line="167" pos:column="17"/></name> <operator pos:line="167" pos:column="18">=<pos:position pos:line="167" pos:column="19"/></operator> <call><name pos:line="167" pos:column="20">sqlite3VdbeAddOp0<pos:position pos:line="167" pos:column="37"/></name><argument_list pos:line="167" pos:column="37">(<argument><expr><name pos:line="167" pos:column="38">v<pos:position pos:line="167" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="41">OP_Goto<pos:position pos:line="167" pos:column="48"/></name></expr></argument>)<pos:position pos:line="167" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="50"/></expr_stmt>
          <break pos:line="168" pos:column="11">break;<pos:position pos:line="168" pos:column="17"/></break>
        }<pos:position pos:line="169" pos:column="10"/></block></then></if>
      }<pos:position pos:line="170" pos:column="8"/></block></for>
    }<pos:position pos:line="171" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="173" pos:column="5">/* Check to see if the new rowid already exists in the table.  Skip
    ** the following conflict logic if it does not. */</comment>
    <expr_stmt><expr><call><name pos:line="175" pos:column="5">sqlite3VdbeAddOp3<pos:position pos:line="175" pos:column="22"/></name><argument_list pos:line="175" pos:column="22">(<argument><expr><name pos:line="175" pos:column="23">v<pos:position pos:line="175" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="26">OP_NotExists<pos:position pos:line="175" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="40">iDataCur<pos:position pos:line="175" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="50">addrRowidOk<pos:position pos:line="175" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="63">regNewData<pos:position pos:line="175" pos:column="73"/></name></expr></argument>)<pos:position pos:line="175" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="176" pos:column="5">VdbeCoverage<pos:position pos:line="176" pos:column="17"/></name><argument_list pos:line="176" pos:column="17">(<argument><expr><name pos:line="176" pos:column="18">v<pos:position pos:line="176" pos:column="19"/></name></expr></argument>)<pos:position pos:line="176" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="21"/></expr_stmt>

    <comment type="block" pos:line="178" pos:column="5">/* Generate code that deals with a rowid collision */</comment>
    <switch pos:line="179" pos:column="5">switch<condition pos:line="179" pos:column="11">( <expr><name pos:line="179" pos:column="13">onError<pos:position pos:line="179" pos:column="20"/></name></expr> )<pos:position pos:line="179" pos:column="22"/></condition><block pos:line="179" pos:column="22">{
      <default pos:line="180" pos:column="7">default:<pos:position pos:line="180" pos:column="15"/></default> <block pos:line="180" pos:column="16">{
        <expr_stmt><expr><name pos:line="181" pos:column="9">onError<pos:position pos:line="181" pos:column="16"/></name> <operator pos:line="181" pos:column="17">=<pos:position pos:line="181" pos:column="18"/></operator> <name pos:line="181" pos:column="19">OE_Abort<pos:position pos:line="181" pos:column="27"/></name></expr>;<pos:position pos:line="181" pos:column="28"/></expr_stmt>
        <comment type="block" pos:line="182" pos:column="9">/* Fall thru into the next case */</comment>
      }<pos:position pos:line="183" pos:column="8"/></block>
      <case pos:line="184" pos:column="7">case <expr><name pos:line="184" pos:column="12">OE_Rollback<pos:position pos:line="184" pos:column="23"/></name></expr>:<pos:position pos:line="184" pos:column="24"/></case>
      <case pos:line="185" pos:column="7">case <expr><name pos:line="185" pos:column="12">OE_Abort<pos:position pos:line="185" pos:column="20"/></name></expr>:<pos:position pos:line="185" pos:column="21"/></case>
      <case pos:line="186" pos:column="7">case <expr><name pos:line="186" pos:column="12">OE_Fail<pos:position pos:line="186" pos:column="19"/></name></expr>:<pos:position pos:line="186" pos:column="20"/></case> <block pos:line="186" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="187" pos:column="9">sqlite3RowidConstraint<pos:position pos:line="187" pos:column="31"/></name><argument_list pos:line="187" pos:column="31">(<argument><expr><name pos:line="187" pos:column="32">pParse<pos:position pos:line="187" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="40">onError<pos:position pos:line="187" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="49">pTab<pos:position pos:line="187" pos:column="53"/></name></expr></argument>)<pos:position pos:line="187" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="55"/></expr_stmt>
        <break pos:line="188" pos:column="9">break;<pos:position pos:line="188" pos:column="15"/></break>
      }<pos:position pos:line="189" pos:column="8"/></block>
      <case pos:line="190" pos:column="7">case <expr><name pos:line="190" pos:column="12">OE_Replace<pos:position pos:line="190" pos:column="22"/></name></expr>:<pos:position pos:line="190" pos:column="23"/></case> <block pos:line="190" pos:column="24">{
        <comment type="block" pos:line="191" pos:column="9">/* If there are DELETE triggers on this table and the
        ** recursive-triggers flag is set, call GenerateRowDelete() to
        ** remove the conflicting row from the table. This will fire
        ** the triggers and remove both the table and index b-tree entries.
        **
        ** Otherwise, if there are no triggers or the recursive-triggers
        ** flag is not set, but the table has one or more indexes, call 
        ** GenerateRowIndexDelete(). This removes the index b-tree entries 
        ** only. The table b-tree entry will be replaced by the new entry 
        ** when it is inserted.  
        **
        ** If either GenerateRowDelete() or GenerateRowIndexDelete() is called,
        ** also invoke MultiWrite() to indicate that this VDBE may require
        ** statement rollback (if the statement is aborted after the delete
        ** takes place). Earlier versions called sqlite3MultiWrite() regardless,
        ** but being more selective here allows statements like:
        **
        **   REPLACE INTO t(rowid) VALUES($newrowid)
        **
        ** to run without a statement journal if there are no indexes on the
        ** table.
        */</comment>
        <decl_stmt><decl><type><name pos:line="213" pos:column="9">Trigger<pos:position pos:line="213" pos:column="16"/></name> <modifier pos:line="213" pos:column="17">*<pos:position pos:line="213" pos:column="18"/></modifier></type><name pos:line="213" pos:column="18">pTrigger<pos:position pos:line="213" pos:column="26"/></name> <init pos:line="213" pos:column="27">= <expr><literal type="number" pos:line="213" pos:column="29">0<pos:position pos:line="213" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="213" pos:column="31"/></decl_stmt>
        <if pos:line="214" pos:column="9">if<condition pos:line="214" pos:column="11">( <expr><name><name pos:line="214" pos:column="13">db<pos:position pos:line="214" pos:column="15"/></name><operator pos:line="214" pos:column="15">-&gt;<pos:position pos:line="214" pos:column="20"/></operator><name pos:line="214" pos:column="17">flags<pos:position pos:line="214" pos:column="22"/></name></name><operator pos:line="214" pos:column="22">&amp;<pos:position pos:line="214" pos:column="27"/></operator><name pos:line="214" pos:column="23">SQLITE_RecTriggers<pos:position pos:line="214" pos:column="41"/></name></expr> )<pos:position pos:line="214" pos:column="43"/></condition><then><block pos:line="214" pos:column="43">{
          <expr_stmt><expr><name pos:line="215" pos:column="11">pTrigger<pos:position pos:line="215" pos:column="19"/></name> <operator pos:line="215" pos:column="20">=<pos:position pos:line="215" pos:column="21"/></operator> <call><name pos:line="215" pos:column="22">sqlite3TriggersExist<pos:position pos:line="215" pos:column="42"/></name><argument_list pos:line="215" pos:column="42">(<argument><expr><name pos:line="215" pos:column="43">pParse<pos:position pos:line="215" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="51">pTab<pos:position pos:line="215" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="57">TK_DELETE<pos:position pos:line="215" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="215" pos:column="68">0<pos:position pos:line="215" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="215" pos:column="71">0<pos:position pos:line="215" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="216" pos:column="10"/></block></then></if>
        <if pos:line="217" pos:column="9">if<condition pos:line="217" pos:column="11">( <expr><name pos:line="217" pos:column="13">pTrigger<pos:position pos:line="217" pos:column="21"/></name> <operator pos:line="217" pos:column="22">||<pos:position pos:line="217" pos:column="24"/></operator> <call><name pos:line="217" pos:column="25">sqlite3FkRequired<pos:position pos:line="217" pos:column="42"/></name><argument_list pos:line="217" pos:column="42">(<argument><expr><name pos:line="217" pos:column="43">pParse<pos:position pos:line="217" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="51">pTab<pos:position pos:line="217" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="217" pos:column="57">0<pos:position pos:line="217" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="217" pos:column="60">0<pos:position pos:line="217" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="62"/></argument_list></call></expr> )<pos:position pos:line="217" pos:column="64"/></condition><then><block pos:line="217" pos:column="64">{
          <expr_stmt><expr><call><name pos:line="218" pos:column="11">sqlite3MultiWrite<pos:position pos:line="218" pos:column="28"/></name><argument_list pos:line="218" pos:column="28">(<argument><expr><name pos:line="218" pos:column="29">pParse<pos:position pos:line="218" pos:column="35"/></name></expr></argument>)<pos:position pos:line="218" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="219" pos:column="11">sqlite3GenerateRowDelete<pos:position pos:line="219" pos:column="35"/></name><argument_list pos:line="219" pos:column="35">(<argument><expr><name pos:line="219" pos:column="36">pParse<pos:position pos:line="219" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="44">pTab<pos:position pos:line="219" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="50">pTrigger<pos:position pos:line="219" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="60">iDataCur<pos:position pos:line="219" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="70">iIdxCur<pos:position pos:line="219" pos:column="77"/></name></expr></argument>,
                                   <argument><expr><name pos:line="220" pos:column="36">regNewData<pos:position pos:line="220" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="220" pos:column="48">1<pos:position pos:line="220" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="220" pos:column="51">0<pos:position pos:line="220" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="220" pos:column="54">OE_Replace<pos:position pos:line="220" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="220" pos:column="66">1<pos:position pos:line="220" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="220" pos:column="69">-<pos:position pos:line="220" pos:column="70"/></operator><literal type="number" pos:line="220" pos:column="70">1<pos:position pos:line="220" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="221" pos:column="10"/></block></then><else pos:line="221" pos:column="10">else<block pos:line="221" pos:column="14">{
<cpp:ifdef pos:line="222" pos:column="1">#<cpp:directive pos:line="222" pos:column="2">ifdef<pos:position pos:line="222" pos:column="7"/></cpp:directive> <name pos:line="222" pos:column="8">SQLITE_ENABLE_PREUPDATE_HOOK<pos:position pos:line="222" pos:column="36"/></name></cpp:ifdef>
          <if pos:line="223" pos:column="11">if<condition pos:line="223" pos:column="13">( <expr><call><name pos:line="223" pos:column="15">HasRowid<pos:position pos:line="223" pos:column="23"/></name><argument_list pos:line="223" pos:column="23">(<argument><expr><name pos:line="223" pos:column="24">pTab<pos:position pos:line="223" pos:column="28"/></name></expr></argument>)<pos:position pos:line="223" pos:column="29"/></argument_list></call></expr> )<pos:position pos:line="223" pos:column="31"/></condition><then><block pos:line="223" pos:column="31">{
            <comment type="block" pos:line="224" pos:column="13">/* This OP_Delete opcode fires the pre-update-hook only. It does
            ** not modify the b-tree. It is more efficient to let the coming
            ** OP_Insert replace the existing entry than it is to delete the
            ** existing entry and then insert a new one. */</comment>
            <expr_stmt><expr><call><name pos:line="228" pos:column="13">sqlite3VdbeAddOp2<pos:position pos:line="228" pos:column="30"/></name><argument_list pos:line="228" pos:column="30">(<argument><expr><name pos:line="228" pos:column="31">v<pos:position pos:line="228" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="34">OP_Delete<pos:position pos:line="228" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="45">iDataCur<pos:position pos:line="228" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="55">OPFLAG_ISNOOP<pos:position pos:line="228" pos:column="68"/></name></expr></argument>)<pos:position pos:line="228" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="229" pos:column="13">sqlite3VdbeAppendP4<pos:position pos:line="229" pos:column="32"/></name><argument_list pos:line="229" pos:column="32">(<argument><expr><name pos:line="229" pos:column="33">v<pos:position pos:line="229" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="36">pTab<pos:position pos:line="229" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="42">P4_TABLE<pos:position pos:line="229" pos:column="50"/></name></expr></argument>)<pos:position pos:line="229" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="52"/></expr_stmt>
          }<pos:position pos:line="230" pos:column="12"/></block></then></if>
<cpp:endif pos:line="231" pos:column="1">#<cpp:directive pos:line="231" pos:column="2">endif<pos:position pos:line="231" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="231" pos:column="8">/* SQLITE_ENABLE_PREUPDATE_HOOK */</comment>
          <if pos:line="232" pos:column="11">if<condition pos:line="232" pos:column="13">( <expr><name><name pos:line="232" pos:column="15">pTab<pos:position pos:line="232" pos:column="19"/></name><operator pos:line="232" pos:column="19">-&gt;<pos:position pos:line="232" pos:column="24"/></operator><name pos:line="232" pos:column="21">pIndex<pos:position pos:line="232" pos:column="27"/></name></name></expr> )<pos:position pos:line="232" pos:column="29"/></condition><then><block pos:line="232" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="233" pos:column="13">sqlite3MultiWrite<pos:position pos:line="233" pos:column="30"/></name><argument_list pos:line="233" pos:column="30">(<argument><expr><name pos:line="233" pos:column="31">pParse<pos:position pos:line="233" pos:column="37"/></name></expr></argument>)<pos:position pos:line="233" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="234" pos:column="13">sqlite3GenerateRowIndexDelete<pos:position pos:line="234" pos:column="42"/></name><argument_list pos:line="234" pos:column="42">(<argument><expr><name pos:line="234" pos:column="43">pParse<pos:position pos:line="234" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="51">pTab<pos:position pos:line="234" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="57">iDataCur<pos:position pos:line="234" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="67">iIdxCur<pos:position pos:line="234" pos:column="74"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="234" pos:column="75">0<pos:position pos:line="234" pos:column="76"/></literal></expr></argument>,<argument><expr><operator pos:line="234" pos:column="77">-<pos:position pos:line="234" pos:column="78"/></operator><literal type="number" pos:line="234" pos:column="78">1<pos:position pos:line="234" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="81"/></expr_stmt>
          }<pos:position pos:line="235" pos:column="12"/></block></then></if>
        }<pos:position pos:line="236" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="237" pos:column="9">seenReplace<pos:position pos:line="237" pos:column="20"/></name> <operator pos:line="237" pos:column="21">=<pos:position pos:line="237" pos:column="22"/></operator> <literal type="number" pos:line="237" pos:column="23">1<pos:position pos:line="237" pos:column="24"/></literal></expr>;<pos:position pos:line="237" pos:column="25"/></expr_stmt>
        <break pos:line="238" pos:column="9">break;<pos:position pos:line="238" pos:column="15"/></break>
      }<pos:position pos:line="239" pos:column="8"/></block>
      <case pos:line="240" pos:column="7">case <expr><name pos:line="240" pos:column="12">OE_Ignore<pos:position pos:line="240" pos:column="21"/></name></expr>:<pos:position pos:line="240" pos:column="22"/></case> <block pos:line="240" pos:column="23">{
        <comment type="block" pos:line="241" pos:column="9">/*assert( seenReplace==0 );*/</comment>
        <expr_stmt><expr><call><name pos:line="242" pos:column="9">sqlite3VdbeGoto<pos:position pos:line="242" pos:column="24"/></name><argument_list pos:line="242" pos:column="24">(<argument><expr><name pos:line="242" pos:column="25">v<pos:position pos:line="242" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="28">ignoreDest<pos:position pos:line="242" pos:column="38"/></name></expr></argument>)<pos:position pos:line="242" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="40"/></expr_stmt>
        <break pos:line="243" pos:column="9">break;<pos:position pos:line="243" pos:column="15"/></break>
      }<pos:position pos:line="244" pos:column="8"/></block>
    }<pos:position pos:line="245" pos:column="6"/></block></switch>
    <expr_stmt><expr><call><name pos:line="246" pos:column="5">sqlite3VdbeResolveLabel<pos:position pos:line="246" pos:column="28"/></name><argument_list pos:line="246" pos:column="28">(<argument><expr><name pos:line="246" pos:column="29">v<pos:position pos:line="246" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="32">addrRowidOk<pos:position pos:line="246" pos:column="43"/></name></expr></argument>)<pos:position pos:line="246" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="45"/></expr_stmt>
    <if pos:line="247" pos:column="5">if<condition pos:line="247" pos:column="7">( <expr><name pos:line="247" pos:column="9">ipkTop<pos:position pos:line="247" pos:column="15"/></name></expr> )<pos:position pos:line="247" pos:column="17"/></condition><then><block pos:line="247" pos:column="17">{
      <expr_stmt><expr><name pos:line="248" pos:column="7">ipkBottom<pos:position pos:line="248" pos:column="16"/></name> <operator pos:line="248" pos:column="17">=<pos:position pos:line="248" pos:column="18"/></operator> <call><name pos:line="248" pos:column="19">sqlite3VdbeAddOp0<pos:position pos:line="248" pos:column="36"/></name><argument_list pos:line="248" pos:column="36">(<argument><expr><name pos:line="248" pos:column="37">v<pos:position pos:line="248" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="40">OP_Goto<pos:position pos:line="248" pos:column="47"/></name></expr></argument>)<pos:position pos:line="248" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="249" pos:column="7">sqlite3VdbeJumpHere<pos:position pos:line="249" pos:column="26"/></name><argument_list pos:line="249" pos:column="26">(<argument><expr><name pos:line="249" pos:column="27">v<pos:position pos:line="249" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="30">ipkTop<pos:position pos:line="249" pos:column="36"/></name></expr></argument>)<pos:position pos:line="249" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="250" pos:column="6"/></block></then></if>
  }<pos:position pos:line="251" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="253" pos:column="3">/* Test all UNIQUE constraints by creating entries for each UNIQUE
  ** index and making sure that duplicate entries do not already exist.
  ** Compute the revised record entries for indices as we go.
  **
  ** This loop also handles the case of the PRIMARY KEY index for a
  ** WITHOUT ROWID table.
  */</comment>
  <for pos:line="260" pos:column="3">for<control pos:line="260" pos:column="6">(<init><expr><name pos:line="260" pos:column="7">ix<pos:position pos:line="260" pos:column="9"/></name><operator pos:line="260" pos:column="9">=<pos:position pos:line="260" pos:column="10"/></operator><literal type="number" pos:line="260" pos:column="10">0<pos:position pos:line="260" pos:column="11"/></literal></expr><operator pos:line="260" pos:column="11">,<pos:position pos:line="260" pos:column="12"/></operator> <expr><name pos:line="260" pos:column="13">pIdx<pos:position pos:line="260" pos:column="17"/></name><operator pos:line="260" pos:column="17">=<pos:position pos:line="260" pos:column="18"/></operator><name><name pos:line="260" pos:column="18">pTab<pos:position pos:line="260" pos:column="22"/></name><operator pos:line="260" pos:column="22">-&gt;<pos:position pos:line="260" pos:column="27"/></operator><name pos:line="260" pos:column="24">pIndex<pos:position pos:line="260" pos:column="30"/></name></name></expr>;<pos:position pos:line="260" pos:column="31"/></init> <condition><expr><name pos:line="260" pos:column="32">pIdx<pos:position pos:line="260" pos:column="36"/></name></expr>;<pos:position pos:line="260" pos:column="37"/></condition> <incr><expr><name pos:line="260" pos:column="38">pIdx<pos:position pos:line="260" pos:column="42"/></name><operator pos:line="260" pos:column="42">=<pos:position pos:line="260" pos:column="43"/></operator><name><name pos:line="260" pos:column="43">pIdx<pos:position pos:line="260" pos:column="47"/></name><operator pos:line="260" pos:column="47">-&gt;<pos:position pos:line="260" pos:column="52"/></operator><name pos:line="260" pos:column="49">pNext<pos:position pos:line="260" pos:column="54"/></name></name></expr><operator pos:line="260" pos:column="54">,<pos:position pos:line="260" pos:column="55"/></operator> <expr><name pos:line="260" pos:column="56">ix<pos:position pos:line="260" pos:column="58"/></name><operator pos:line="260" pos:column="58">++<pos:position pos:line="260" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="260" pos:column="61"/></control><block pos:line="260" pos:column="61">{
    <decl_stmt><decl><type><name pos:line="261" pos:column="5">int<pos:position pos:line="261" pos:column="8"/></name></type> <name pos:line="261" pos:column="9">regIdx<pos:position pos:line="261" pos:column="15"/></name></decl>;<pos:position pos:line="261" pos:column="16"/></decl_stmt>          <comment type="block" pos:line="261" pos:column="26">/* Range of registers hold conent for pIdx */</comment>
    <decl_stmt><decl><type><name pos:line="262" pos:column="5">int<pos:position pos:line="262" pos:column="8"/></name></type> <name pos:line="262" pos:column="9">regR<pos:position pos:line="262" pos:column="13"/></name></decl>;<pos:position pos:line="262" pos:column="14"/></decl_stmt>            <comment type="block" pos:line="262" pos:column="26">/* Range of registers holding conflicting PK */</comment>
    <decl_stmt><decl><type><name pos:line="263" pos:column="5">int<pos:position pos:line="263" pos:column="8"/></name></type> <name pos:line="263" pos:column="9">iThisCur<pos:position pos:line="263" pos:column="17"/></name></decl>;<pos:position pos:line="263" pos:column="18"/></decl_stmt>        <comment type="block" pos:line="263" pos:column="26">/* Cursor for this UNIQUE index */</comment>
    <decl_stmt><decl><type><name pos:line="264" pos:column="5">int<pos:position pos:line="264" pos:column="8"/></name></type> <name pos:line="264" pos:column="9">addrUniqueOk<pos:position pos:line="264" pos:column="21"/></name></decl>;<pos:position pos:line="264" pos:column="22"/></decl_stmt>    <comment type="block" pos:line="264" pos:column="26">/* Jump here if the UNIQUE constraint is satisfied */</comment>

    <if pos:line="266" pos:column="5">if<condition pos:line="266" pos:column="7">( <expr><name><name pos:line="266" pos:column="9">aRegIdx<pos:position pos:line="266" pos:column="16"/></name><index pos:line="266" pos:column="16">[<expr><name pos:line="266" pos:column="17">ix<pos:position pos:line="266" pos:column="19"/></name></expr>]<pos:position pos:line="266" pos:column="20"/></index></name><operator pos:line="266" pos:column="20">==<pos:position pos:line="266" pos:column="22"/></operator><literal type="number" pos:line="266" pos:column="22">0<pos:position pos:line="266" pos:column="23"/></literal></expr> )<pos:position pos:line="266" pos:column="25"/></condition><then pos:line="266" pos:column="25"> <block type="pseudo"><continue pos:line="266" pos:column="26">continue;<pos:position pos:line="266" pos:column="35"/></continue></block></then></if>  <comment type="block" pos:line="266" pos:column="37">/* Skip indices that do not change */</comment>
    <if pos:line="267" pos:column="5">if<condition pos:line="267" pos:column="7">( <expr><name pos:line="267" pos:column="9">bAffinityDone<pos:position pos:line="267" pos:column="22"/></name><operator pos:line="267" pos:column="22">==<pos:position pos:line="267" pos:column="24"/></operator><literal type="number" pos:line="267" pos:column="24">0<pos:position pos:line="267" pos:column="25"/></literal></expr> )<pos:position pos:line="267" pos:column="27"/></condition><then><block pos:line="267" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="268" pos:column="7">sqlite3TableAffinity<pos:position pos:line="268" pos:column="27"/></name><argument_list pos:line="268" pos:column="27">(<argument><expr><name pos:line="268" pos:column="28">v<pos:position pos:line="268" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="31">pTab<pos:position pos:line="268" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="37">regNewData<pos:position pos:line="268" pos:column="47"/></name><operator pos:line="268" pos:column="47">+<pos:position pos:line="268" pos:column="48"/></operator><literal type="number" pos:line="268" pos:column="48">1<pos:position pos:line="268" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="268" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="269" pos:column="7">bAffinityDone<pos:position pos:line="269" pos:column="20"/></name> <operator pos:line="269" pos:column="21">=<pos:position pos:line="269" pos:column="22"/></operator> <literal type="number" pos:line="269" pos:column="23">1<pos:position pos:line="269" pos:column="24"/></literal></expr>;<pos:position pos:line="269" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="270" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="271" pos:column="5">iThisCur<pos:position pos:line="271" pos:column="13"/></name> <operator pos:line="271" pos:column="14">=<pos:position pos:line="271" pos:column="15"/></operator> <name pos:line="271" pos:column="16">iIdxCur<pos:position pos:line="271" pos:column="23"/></name><operator pos:line="271" pos:column="23">+<pos:position pos:line="271" pos:column="24"/></operator><name pos:line="271" pos:column="24">ix<pos:position pos:line="271" pos:column="26"/></name></expr>;<pos:position pos:line="271" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="272" pos:column="5">addrUniqueOk<pos:position pos:line="272" pos:column="17"/></name> <operator pos:line="272" pos:column="18">=<pos:position pos:line="272" pos:column="19"/></operator> <call><name pos:line="272" pos:column="20">sqlite3VdbeMakeLabel<pos:position pos:line="272" pos:column="40"/></name><argument_list pos:line="272" pos:column="40">(<argument><expr><name pos:line="272" pos:column="41">v<pos:position pos:line="272" pos:column="42"/></name></expr></argument>)<pos:position pos:line="272" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="274" pos:column="5">/* Skip partial indices for which the WHERE clause is not true */</comment>
    <if pos:line="275" pos:column="5">if<condition pos:line="275" pos:column="7">( <expr><name><name pos:line="275" pos:column="9">pIdx<pos:position pos:line="275" pos:column="13"/></name><operator pos:line="275" pos:column="13">-&gt;<pos:position pos:line="275" pos:column="18"/></operator><name pos:line="275" pos:column="15">pPartIdxWhere<pos:position pos:line="275" pos:column="28"/></name></name></expr> )<pos:position pos:line="275" pos:column="30"/></condition><then><block pos:line="275" pos:column="30">{
      <expr_stmt><expr><call><name pos:line="276" pos:column="7">sqlite3VdbeAddOp2<pos:position pos:line="276" pos:column="24"/></name><argument_list pos:line="276" pos:column="24">(<argument><expr><name pos:line="276" pos:column="25">v<pos:position pos:line="276" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="276" pos:column="28">OP_Null<pos:position pos:line="276" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="276" pos:column="37">0<pos:position pos:line="276" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="276" pos:column="40">aRegIdx<pos:position pos:line="276" pos:column="47"/></name><index pos:line="276" pos:column="47">[<expr><name pos:line="276" pos:column="48">ix<pos:position pos:line="276" pos:column="50"/></name></expr>]<pos:position pos:line="276" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="276" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="277" pos:column="7">pParse<pos:position pos:line="277" pos:column="13"/></name><operator pos:line="277" pos:column="13">-&gt;<pos:position pos:line="277" pos:column="18"/></operator><name pos:line="277" pos:column="15">iSelfTab<pos:position pos:line="277" pos:column="23"/></name></name> <operator pos:line="277" pos:column="24">=<pos:position pos:line="277" pos:column="25"/></operator> <operator pos:line="277" pos:column="26">-<pos:position pos:line="277" pos:column="27"/></operator><operator pos:line="277" pos:column="27">(<pos:position pos:line="277" pos:column="28"/></operator><name pos:line="277" pos:column="28">regNewData<pos:position pos:line="277" pos:column="38"/></name><operator pos:line="277" pos:column="38">+<pos:position pos:line="277" pos:column="39"/></operator><literal type="number" pos:line="277" pos:column="39">1<pos:position pos:line="277" pos:column="40"/></literal><operator pos:line="277" pos:column="40">)<pos:position pos:line="277" pos:column="41"/></operator></expr>;<pos:position pos:line="277" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="278" pos:column="7">sqlite3ExprIfFalseDup<pos:position pos:line="278" pos:column="28"/></name><argument_list pos:line="278" pos:column="28">(<argument><expr><name pos:line="278" pos:column="29">pParse<pos:position pos:line="278" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="278" pos:column="37">pIdx<pos:position pos:line="278" pos:column="41"/></name><operator pos:line="278" pos:column="41">-&gt;<pos:position pos:line="278" pos:column="46"/></operator><name pos:line="278" pos:column="43">pPartIdxWhere<pos:position pos:line="278" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="58">addrUniqueOk<pos:position pos:line="278" pos:column="70"/></name></expr></argument>,
                            <argument><expr><name pos:line="279" pos:column="29">SQLITE_JUMPIFNULL<pos:position pos:line="279" pos:column="46"/></name></expr></argument>)<pos:position pos:line="279" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="280" pos:column="7">pParse<pos:position pos:line="280" pos:column="13"/></name><operator pos:line="280" pos:column="13">-&gt;<pos:position pos:line="280" pos:column="18"/></operator><name pos:line="280" pos:column="15">iSelfTab<pos:position pos:line="280" pos:column="23"/></name></name> <operator pos:line="280" pos:column="24">=<pos:position pos:line="280" pos:column="25"/></operator> <literal type="number" pos:line="280" pos:column="26">0<pos:position pos:line="280" pos:column="27"/></literal></expr>;<pos:position pos:line="280" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="281" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="283" pos:column="5">/* Create a record for this index entry as it should appear after
    ** the insert or update.  Store that record in the aRegIdx[ix] register
    */</comment>
    <expr_stmt><expr><name pos:line="286" pos:column="5">regIdx<pos:position pos:line="286" pos:column="11"/></name> <operator pos:line="286" pos:column="12">=<pos:position pos:line="286" pos:column="13"/></operator> <name><name pos:line="286" pos:column="14">aRegIdx<pos:position pos:line="286" pos:column="21"/></name><index pos:line="286" pos:column="21">[<expr><name pos:line="286" pos:column="22">ix<pos:position pos:line="286" pos:column="24"/></name></expr>]<pos:position pos:line="286" pos:column="25"/></index></name><operator pos:line="286" pos:column="25">+<pos:position pos:line="286" pos:column="26"/></operator><literal type="number" pos:line="286" pos:column="26">1<pos:position pos:line="286" pos:column="27"/></literal></expr>;<pos:position pos:line="286" pos:column="28"/></expr_stmt>
    <for pos:line="287" pos:column="5">for<control pos:line="287" pos:column="8">(<init><expr><name pos:line="287" pos:column="9">i<pos:position pos:line="287" pos:column="10"/></name><operator pos:line="287" pos:column="10">=<pos:position pos:line="287" pos:column="11"/></operator><literal type="number" pos:line="287" pos:column="11">0<pos:position pos:line="287" pos:column="12"/></literal></expr>;<pos:position pos:line="287" pos:column="13"/></init> <condition><expr><name pos:line="287" pos:column="14">i<pos:position pos:line="287" pos:column="15"/></name><operator pos:line="287" pos:column="15">&lt;<pos:position pos:line="287" pos:column="19"/></operator><name><name pos:line="287" pos:column="16">pIdx<pos:position pos:line="287" pos:column="20"/></name><operator pos:line="287" pos:column="20">-&gt;<pos:position pos:line="287" pos:column="25"/></operator><name pos:line="287" pos:column="22">nColumn<pos:position pos:line="287" pos:column="29"/></name></name></expr>;<pos:position pos:line="287" pos:column="30"/></condition> <incr><expr><name pos:line="287" pos:column="31">i<pos:position pos:line="287" pos:column="32"/></name><operator pos:line="287" pos:column="32">++<pos:position pos:line="287" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="287" pos:column="35"/></control><block pos:line="287" pos:column="35">{
      <decl_stmt><decl><type><name pos:line="288" pos:column="7">int<pos:position pos:line="288" pos:column="10"/></name></type> <name pos:line="288" pos:column="11">iField<pos:position pos:line="288" pos:column="17"/></name> <init pos:line="288" pos:column="18">= <expr><name><name pos:line="288" pos:column="20">pIdx<pos:position pos:line="288" pos:column="24"/></name><operator pos:line="288" pos:column="24">-&gt;<pos:position pos:line="288" pos:column="29"/></operator><name pos:line="288" pos:column="26">aiColumn<pos:position pos:line="288" pos:column="34"/></name><index pos:line="288" pos:column="34">[<expr><name pos:line="288" pos:column="35">i<pos:position pos:line="288" pos:column="36"/></name></expr>]<pos:position pos:line="288" pos:column="37"/></index></name></expr></init></decl>;<pos:position pos:line="288" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="289" pos:column="7">int<pos:position pos:line="289" pos:column="10"/></name></type> <name pos:line="289" pos:column="11">x<pos:position pos:line="289" pos:column="12"/></name></decl>;<pos:position pos:line="289" pos:column="13"/></decl_stmt>
      <if pos:line="290" pos:column="7">if<condition pos:line="290" pos:column="9">( <expr><name pos:line="290" pos:column="11">iField<pos:position pos:line="290" pos:column="17"/></name><operator pos:line="290" pos:column="17">==<pos:position pos:line="290" pos:column="19"/></operator><name pos:line="290" pos:column="19">XN_EXPR<pos:position pos:line="290" pos:column="26"/></name></expr> )<pos:position pos:line="290" pos:column="28"/></condition><then><block pos:line="290" pos:column="28">{
        <expr_stmt><expr><name><name pos:line="291" pos:column="9">pParse<pos:position pos:line="291" pos:column="15"/></name><operator pos:line="291" pos:column="15">-&gt;<pos:position pos:line="291" pos:column="20"/></operator><name pos:line="291" pos:column="17">iSelfTab<pos:position pos:line="291" pos:column="25"/></name></name> <operator pos:line="291" pos:column="26">=<pos:position pos:line="291" pos:column="27"/></operator> <operator pos:line="291" pos:column="28">-<pos:position pos:line="291" pos:column="29"/></operator><operator pos:line="291" pos:column="29">(<pos:position pos:line="291" pos:column="30"/></operator><name pos:line="291" pos:column="30">regNewData<pos:position pos:line="291" pos:column="40"/></name><operator pos:line="291" pos:column="40">+<pos:position pos:line="291" pos:column="41"/></operator><literal type="number" pos:line="291" pos:column="41">1<pos:position pos:line="291" pos:column="42"/></literal><operator pos:line="291" pos:column="42">)<pos:position pos:line="291" pos:column="43"/></operator></expr>;<pos:position pos:line="291" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="292" pos:column="9">sqlite3ExprCodeCopy<pos:position pos:line="292" pos:column="28"/></name><argument_list pos:line="292" pos:column="28">(<argument><expr><name pos:line="292" pos:column="29">pParse<pos:position pos:line="292" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="37">pIdx<pos:position pos:line="292" pos:column="41"/></name><operator pos:line="292" pos:column="41">-&gt;<pos:position pos:line="292" pos:column="46"/></operator><name pos:line="292" pos:column="43">aColExpr<pos:position pos:line="292" pos:column="51"/></name><operator pos:line="292" pos:column="51">-&gt;<pos:position pos:line="292" pos:column="56"/></operator><name pos:line="292" pos:column="53">a<pos:position pos:line="292" pos:column="54"/></name><index pos:line="292" pos:column="54">[<expr><name pos:line="292" pos:column="55">i<pos:position pos:line="292" pos:column="56"/></name></expr>]<pos:position pos:line="292" pos:column="57"/></index></name><operator pos:line="292" pos:column="57">.<pos:position pos:line="292" pos:column="58"/></operator><name pos:line="292" pos:column="58">pExpr<pos:position pos:line="292" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="65">regIdx<pos:position pos:line="292" pos:column="71"/></name><operator pos:line="292" pos:column="71">+<pos:position pos:line="292" pos:column="72"/></operator><name pos:line="292" pos:column="72">i<pos:position pos:line="292" pos:column="73"/></name></expr></argument>)<pos:position pos:line="292" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="293" pos:column="9">pParse<pos:position pos:line="293" pos:column="15"/></name><operator pos:line="293" pos:column="15">-&gt;<pos:position pos:line="293" pos:column="20"/></operator><name pos:line="293" pos:column="17">iSelfTab<pos:position pos:line="293" pos:column="25"/></name></name> <operator pos:line="293" pos:column="26">=<pos:position pos:line="293" pos:column="27"/></operator> <literal type="number" pos:line="293" pos:column="28">0<pos:position pos:line="293" pos:column="29"/></literal></expr>;<pos:position pos:line="293" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="294" pos:column="9">VdbeComment<pos:position pos:line="294" pos:column="20"/></name><argument_list pos:line="294" pos:column="20">(<argument><expr><operator pos:line="294" pos:column="21">(<pos:position pos:line="294" pos:column="22"/></operator><name pos:line="294" pos:column="22">v<pos:position pos:line="294" pos:column="23"/></name><operator pos:line="294" pos:column="23">,<pos:position pos:line="294" pos:column="24"/></operator> <literal type="string" pos:line="294" pos:column="25">"%s column %d"<pos:position pos:line="294" pos:column="39"/></literal><operator pos:line="294" pos:column="39">,<pos:position pos:line="294" pos:column="40"/></operator> <name><name pos:line="294" pos:column="41">pIdx<pos:position pos:line="294" pos:column="45"/></name><operator pos:line="294" pos:column="45">-&gt;<pos:position pos:line="294" pos:column="50"/></operator><name pos:line="294" pos:column="47">zName<pos:position pos:line="294" pos:column="52"/></name></name><operator pos:line="294" pos:column="52">,<pos:position pos:line="294" pos:column="53"/></operator> <name pos:line="294" pos:column="54">i<pos:position pos:line="294" pos:column="55"/></name><operator pos:line="294" pos:column="55">)<pos:position pos:line="294" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="294" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="58"/></expr_stmt>
      }<pos:position pos:line="295" pos:column="8"/></block></then><else pos:line="295" pos:column="8">else<block pos:line="295" pos:column="12">{
        <if pos:line="296" pos:column="9">if<condition pos:line="296" pos:column="11">( <expr><name pos:line="296" pos:column="13">iField<pos:position pos:line="296" pos:column="19"/></name><operator pos:line="296" pos:column="19">==<pos:position pos:line="296" pos:column="21"/></operator><name pos:line="296" pos:column="21">XN_ROWID<pos:position pos:line="296" pos:column="29"/></name> <operator pos:line="296" pos:column="30">||<pos:position pos:line="296" pos:column="32"/></operator> <name pos:line="296" pos:column="33">iField<pos:position pos:line="296" pos:column="39"/></name><operator pos:line="296" pos:column="39">==<pos:position pos:line="296" pos:column="41"/></operator><name><name pos:line="296" pos:column="41">pTab<pos:position pos:line="296" pos:column="45"/></name><operator pos:line="296" pos:column="45">-&gt;<pos:position pos:line="296" pos:column="50"/></operator><name pos:line="296" pos:column="47">iPKey<pos:position pos:line="296" pos:column="52"/></name></name></expr> )<pos:position pos:line="296" pos:column="54"/></condition><then><block pos:line="296" pos:column="54">{
          <expr_stmt><expr><name pos:line="297" pos:column="11">x<pos:position pos:line="297" pos:column="12"/></name> <operator pos:line="297" pos:column="13">=<pos:position pos:line="297" pos:column="14"/></operator> <name pos:line="297" pos:column="15">regNewData<pos:position pos:line="297" pos:column="25"/></name></expr>;<pos:position pos:line="297" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="298" pos:column="10"/></block></then><else pos:line="298" pos:column="10">else<block pos:line="298" pos:column="14">{
          <expr_stmt><expr><name pos:line="299" pos:column="11">x<pos:position pos:line="299" pos:column="12"/></name> <operator pos:line="299" pos:column="13">=<pos:position pos:line="299" pos:column="14"/></operator> <name pos:line="299" pos:column="15">iField<pos:position pos:line="299" pos:column="21"/></name> <operator pos:line="299" pos:column="22">+<pos:position pos:line="299" pos:column="23"/></operator> <name pos:line="299" pos:column="24">regNewData<pos:position pos:line="299" pos:column="34"/></name> <operator pos:line="299" pos:column="35">+<pos:position pos:line="299" pos:column="36"/></operator> <literal type="number" pos:line="299" pos:column="37">1<pos:position pos:line="299" pos:column="38"/></literal></expr>;<pos:position pos:line="299" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="300" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="301" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="301" pos:column="26"/></name><argument_list pos:line="301" pos:column="26">(<argument><expr><name pos:line="301" pos:column="27">v<pos:position pos:line="301" pos:column="28"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="301" pos:column="30">iField<pos:position pos:line="301" pos:column="36"/></name><operator pos:line="301" pos:column="36">&lt;<pos:position pos:line="301" pos:column="40"/></operator><literal type="number" pos:line="301" pos:column="37">0<pos:position pos:line="301" pos:column="38"/></literal></expr> ?<pos:position pos:line="301" pos:column="40"/></condition><then pos:line="301" pos:column="40"> <expr><name pos:line="301" pos:column="41">OP_IntCopy<pos:position pos:line="301" pos:column="51"/></name></expr> <pos:position pos:line="301" pos:column="52"/></then><else pos:line="301" pos:column="52">: <expr><name pos:line="301" pos:column="54">OP_SCopy<pos:position pos:line="301" pos:column="62"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="301" pos:column="64">x<pos:position pos:line="301" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="67">regIdx<pos:position pos:line="301" pos:column="73"/></name><operator pos:line="301" pos:column="73">+<pos:position pos:line="301" pos:column="74"/></operator><name pos:line="301" pos:column="74">i<pos:position pos:line="301" pos:column="75"/></name></expr></argument>)<pos:position pos:line="301" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="302" pos:column="9">VdbeComment<pos:position pos:line="302" pos:column="20"/></name><argument_list pos:line="302" pos:column="20">(<argument><expr><operator pos:line="302" pos:column="21">(<pos:position pos:line="302" pos:column="22"/></operator><name pos:line="302" pos:column="22">v<pos:position pos:line="302" pos:column="23"/></name><operator pos:line="302" pos:column="23">,<pos:position pos:line="302" pos:column="24"/></operator> <literal type="string" pos:line="302" pos:column="25">"%s"<pos:position pos:line="302" pos:column="29"/></literal><operator pos:line="302" pos:column="29">,<pos:position pos:line="302" pos:column="30"/></operator> <ternary><condition><expr><name pos:line="302" pos:column="31">iField<pos:position pos:line="302" pos:column="37"/></name><operator pos:line="302" pos:column="37">&lt;<pos:position pos:line="302" pos:column="41"/></operator><literal type="number" pos:line="302" pos:column="38">0<pos:position pos:line="302" pos:column="39"/></literal></expr> ?<pos:position pos:line="302" pos:column="41"/></condition><then pos:line="302" pos:column="41"> <expr><literal type="string" pos:line="302" pos:column="42">"rowid"<pos:position pos:line="302" pos:column="49"/></literal></expr> <pos:position pos:line="302" pos:column="50"/></then><else pos:line="302" pos:column="50">: <expr><name><name pos:line="302" pos:column="52">pTab<pos:position pos:line="302" pos:column="56"/></name><operator pos:line="302" pos:column="56">-&gt;<pos:position pos:line="302" pos:column="61"/></operator><name pos:line="302" pos:column="58">aCol<pos:position pos:line="302" pos:column="62"/></name><index pos:line="302" pos:column="62">[<expr><name pos:line="302" pos:column="63">iField<pos:position pos:line="302" pos:column="69"/></name></expr>]<pos:position pos:line="302" pos:column="70"/></index></name><operator pos:line="302" pos:column="70">.<pos:position pos:line="302" pos:column="71"/></operator><name pos:line="302" pos:column="71">zName<pos:position pos:line="302" pos:column="76"/></name></expr></else></ternary><operator pos:line="302" pos:column="76">)<pos:position pos:line="302" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="302" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="79"/></expr_stmt>
      }<pos:position pos:line="303" pos:column="8"/></block></else></if>
    }<pos:position pos:line="304" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="305" pos:column="5">sqlite3VdbeAddOp3<pos:position pos:line="305" pos:column="22"/></name><argument_list pos:line="305" pos:column="22">(<argument><expr><name pos:line="305" pos:column="23">v<pos:position pos:line="305" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="305" pos:column="26">OP_MakeRecord<pos:position pos:line="305" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="305" pos:column="41">regIdx<pos:position pos:line="305" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="305" pos:column="49">pIdx<pos:position pos:line="305" pos:column="53"/></name><operator pos:line="305" pos:column="53">-&gt;<pos:position pos:line="305" pos:column="58"/></operator><name pos:line="305" pos:column="55">nColumn<pos:position pos:line="305" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="305" pos:column="64">aRegIdx<pos:position pos:line="305" pos:column="71"/></name><index pos:line="305" pos:column="71">[<expr><name pos:line="305" pos:column="72">ix<pos:position pos:line="305" pos:column="74"/></name></expr>]<pos:position pos:line="305" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="305" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="306" pos:column="5">VdbeComment<pos:position pos:line="306" pos:column="16"/></name><argument_list pos:line="306" pos:column="16">(<argument><expr><operator pos:line="306" pos:column="17">(<pos:position pos:line="306" pos:column="18"/></operator><name pos:line="306" pos:column="18">v<pos:position pos:line="306" pos:column="19"/></name><operator pos:line="306" pos:column="19">,<pos:position pos:line="306" pos:column="20"/></operator> <literal type="string" pos:line="306" pos:column="21">"for %s"<pos:position pos:line="306" pos:column="29"/></literal><operator pos:line="306" pos:column="29">,<pos:position pos:line="306" pos:column="30"/></operator> <name><name pos:line="306" pos:column="31">pIdx<pos:position pos:line="306" pos:column="35"/></name><operator pos:line="306" pos:column="35">-&gt;<pos:position pos:line="306" pos:column="40"/></operator><name pos:line="306" pos:column="37">zName<pos:position pos:line="306" pos:column="42"/></name></name><operator pos:line="306" pos:column="42">)<pos:position pos:line="306" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="306" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="45"/></expr_stmt>
<cpp:ifdef pos:line="307" pos:column="1">#<cpp:directive pos:line="307" pos:column="2">ifdef<pos:position pos:line="307" pos:column="7"/></cpp:directive> <name pos:line="307" pos:column="8">SQLITE_ENABLE_NULL_TRIM<pos:position pos:line="307" pos:column="31"/></name></cpp:ifdef>
    <if pos:line="308" pos:column="5">if<condition pos:line="308" pos:column="7">( <expr><name><name pos:line="308" pos:column="9">pIdx<pos:position pos:line="308" pos:column="13"/></name><operator pos:line="308" pos:column="13">-&gt;<pos:position pos:line="308" pos:column="18"/></operator><name pos:line="308" pos:column="15">idxType<pos:position pos:line="308" pos:column="22"/></name></name><operator pos:line="308" pos:column="22">==<pos:position pos:line="308" pos:column="24"/></operator><literal type="number" pos:line="308" pos:column="24">2<pos:position pos:line="308" pos:column="25"/></literal></expr> )<pos:position pos:line="308" pos:column="27"/></condition><then pos:line="308" pos:column="27"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="308" pos:column="28">sqlite3SetMakeRecordP5<pos:position pos:line="308" pos:column="50"/></name><argument_list pos:line="308" pos:column="50">(<argument><expr><name pos:line="308" pos:column="51">v<pos:position pos:line="308" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="308" pos:column="54">pIdx<pos:position pos:line="308" pos:column="58"/></name><operator pos:line="308" pos:column="58">-&gt;<pos:position pos:line="308" pos:column="63"/></operator><name pos:line="308" pos:column="60">pTable<pos:position pos:line="308" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="308" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="68"/></expr_stmt></block></then></if>
<cpp:endif pos:line="309" pos:column="1">#<cpp:directive pos:line="309" pos:column="2">endif<pos:position pos:line="309" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="311" pos:column="5">/* In an UPDATE operation, if this index is the PRIMARY KEY index 
    ** of a WITHOUT ROWID table and there has been no change the
    ** primary key, then no collision is possible.  The collision detection
    ** logic below can all be skipped. */</comment>
    <if pos:line="315" pos:column="5">if<condition pos:line="315" pos:column="7">( <expr><name pos:line="315" pos:column="9">isUpdate<pos:position pos:line="315" pos:column="17"/></name> <operator pos:line="315" pos:column="18">&amp;&amp;<pos:position pos:line="315" pos:column="28"/></operator> <name pos:line="315" pos:column="21">pPk<pos:position pos:line="315" pos:column="24"/></name><operator pos:line="315" pos:column="24">==<pos:position pos:line="315" pos:column="26"/></operator><name pos:line="315" pos:column="26">pIdx<pos:position pos:line="315" pos:column="30"/></name> <operator pos:line="315" pos:column="31">&amp;&amp;<pos:position pos:line="315" pos:column="41"/></operator> <name pos:line="315" pos:column="34">pkChng<pos:position pos:line="315" pos:column="40"/></name><operator pos:line="315" pos:column="40">==<pos:position pos:line="315" pos:column="42"/></operator><literal type="number" pos:line="315" pos:column="42">0<pos:position pos:line="315" pos:column="43"/></literal></expr> )<pos:position pos:line="315" pos:column="45"/></condition><then><block pos:line="315" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="316" pos:column="7">sqlite3VdbeResolveLabel<pos:position pos:line="316" pos:column="30"/></name><argument_list pos:line="316" pos:column="30">(<argument><expr><name pos:line="316" pos:column="31">v<pos:position pos:line="316" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="34">addrUniqueOk<pos:position pos:line="316" pos:column="46"/></name></expr></argument>)<pos:position pos:line="316" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="48"/></expr_stmt>
      <continue pos:line="317" pos:column="7">continue;<pos:position pos:line="317" pos:column="16"/></continue>
    }<pos:position pos:line="318" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="320" pos:column="5">/* Find out what action to take in case there is a uniqueness conflict */</comment>
    <expr_stmt><expr><name pos:line="321" pos:column="5">onError<pos:position pos:line="321" pos:column="12"/></name> <operator pos:line="321" pos:column="13">=<pos:position pos:line="321" pos:column="14"/></operator> <name><name pos:line="321" pos:column="15">pIdx<pos:position pos:line="321" pos:column="19"/></name><operator pos:line="321" pos:column="19">-&gt;<pos:position pos:line="321" pos:column="24"/></operator><name pos:line="321" pos:column="21">onError<pos:position pos:line="321" pos:column="28"/></name></name></expr>;<pos:position pos:line="321" pos:column="29"/></expr_stmt>
    <if pos:line="322" pos:column="5">if<condition pos:line="322" pos:column="7">( <expr><name pos:line="322" pos:column="9">onError<pos:position pos:line="322" pos:column="16"/></name><operator pos:line="322" pos:column="16">==<pos:position pos:line="322" pos:column="18"/></operator><name pos:line="322" pos:column="18">OE_None<pos:position pos:line="322" pos:column="25"/></name></expr> )<pos:position pos:line="322" pos:column="27"/></condition><then><block pos:line="322" pos:column="27">{ 
      <expr_stmt><expr><call><name pos:line="323" pos:column="7">sqlite3VdbeResolveLabel<pos:position pos:line="323" pos:column="30"/></name><argument_list pos:line="323" pos:column="30">(<argument><expr><name pos:line="323" pos:column="31">v<pos:position pos:line="323" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="323" pos:column="34">addrUniqueOk<pos:position pos:line="323" pos:column="46"/></name></expr></argument>)<pos:position pos:line="323" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="48"/></expr_stmt>
      <continue pos:line="324" pos:column="7">continue;<pos:position pos:line="324" pos:column="16"/></continue>  <comment type="block" pos:line="324" pos:column="18">/* pIdx is not a UNIQUE index */</comment>
    }<pos:position pos:line="325" pos:column="6"/></block></then></if>
    <if pos:line="326" pos:column="5">if<condition pos:line="326" pos:column="7">( <expr><name pos:line="326" pos:column="9">overrideError<pos:position pos:line="326" pos:column="22"/></name><operator pos:line="326" pos:column="22">!=<pos:position pos:line="326" pos:column="24"/></operator><name pos:line="326" pos:column="24">OE_Default<pos:position pos:line="326" pos:column="34"/></name></expr> )<pos:position pos:line="326" pos:column="36"/></condition><then><block pos:line="326" pos:column="36">{
      <expr_stmt><expr><name pos:line="327" pos:column="7">onError<pos:position pos:line="327" pos:column="14"/></name> <operator pos:line="327" pos:column="15">=<pos:position pos:line="327" pos:column="16"/></operator> <name pos:line="327" pos:column="17">overrideError<pos:position pos:line="327" pos:column="30"/></name></expr>;<pos:position pos:line="327" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="328" pos:column="6"/></block></then><elseif pos:line="328" pos:column="6">else <if pos:line="328" pos:column="11">if<condition pos:line="328" pos:column="13">( <expr><name pos:line="328" pos:column="15">onError<pos:position pos:line="328" pos:column="22"/></name><operator pos:line="328" pos:column="22">==<pos:position pos:line="328" pos:column="24"/></operator><name pos:line="328" pos:column="24">OE_Default<pos:position pos:line="328" pos:column="34"/></name></expr> )<pos:position pos:line="328" pos:column="36"/></condition><then><block pos:line="328" pos:column="36">{
      <expr_stmt><expr><name pos:line="329" pos:column="7">onError<pos:position pos:line="329" pos:column="14"/></name> <operator pos:line="329" pos:column="15">=<pos:position pos:line="329" pos:column="16"/></operator> <name pos:line="329" pos:column="17">OE_Abort<pos:position pos:line="329" pos:column="25"/></name></expr>;<pos:position pos:line="329" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="330" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="332" pos:column="5">/* Collision detection may be omitted if all of the following are true:
    **   (1) The conflict resolution algorithm is REPLACE
    **   (2) The table is a WITHOUT ROWID table
    **   (3) There are no secondary indexes on the table
    **   (4) No delete triggers need to be fired if there is a conflict
    **   (5) No FK constraint counters need to be updated if a conflict occurs.
    */</comment> 
    <if pos:line="339" pos:column="5">if<condition pos:line="339" pos:column="7">( <expr><operator pos:line="339" pos:column="9">(<pos:position pos:line="339" pos:column="10"/></operator><name pos:line="339" pos:column="10">ix<pos:position pos:line="339" pos:column="12"/></name><operator pos:line="339" pos:column="12">==<pos:position pos:line="339" pos:column="14"/></operator><literal type="number" pos:line="339" pos:column="14">0<pos:position pos:line="339" pos:column="15"/></literal> <operator pos:line="339" pos:column="16">&amp;&amp;<pos:position pos:line="339" pos:column="26"/></operator> <name><name pos:line="339" pos:column="19">pIdx<pos:position pos:line="339" pos:column="23"/></name><operator pos:line="339" pos:column="23">-&gt;<pos:position pos:line="339" pos:column="28"/></operator><name pos:line="339" pos:column="25">pNext<pos:position pos:line="339" pos:column="30"/></name></name><operator pos:line="339" pos:column="30">==<pos:position pos:line="339" pos:column="32"/></operator><literal type="number" pos:line="339" pos:column="32">0<pos:position pos:line="339" pos:column="33"/></literal><operator pos:line="339" pos:column="33">)<pos:position pos:line="339" pos:column="34"/></operator>                   <comment type="block" pos:line="339" pos:column="53">/* Condition 3 */</comment>
     <operator pos:line="340" pos:column="6">&amp;&amp;<pos:position pos:line="340" pos:column="16"/></operator> <name pos:line="340" pos:column="9">pPk<pos:position pos:line="340" pos:column="12"/></name><operator pos:line="340" pos:column="12">==<pos:position pos:line="340" pos:column="14"/></operator><name pos:line="340" pos:column="14">pIdx<pos:position pos:line="340" pos:column="18"/></name>                                   <comment type="block" pos:line="340" pos:column="53">/* Condition 2 */</comment>
     <operator pos:line="341" pos:column="6">&amp;&amp;<pos:position pos:line="341" pos:column="16"/></operator> <name pos:line="341" pos:column="9">onError<pos:position pos:line="341" pos:column="16"/></name><operator pos:line="341" pos:column="16">==<pos:position pos:line="341" pos:column="18"/></operator><name pos:line="341" pos:column="18">OE_Replace<pos:position pos:line="341" pos:column="28"/></name>                         <comment type="block" pos:line="341" pos:column="53">/* Condition 1 */</comment>
     <operator pos:line="342" pos:column="6">&amp;&amp;<pos:position pos:line="342" pos:column="16"/></operator> <operator pos:line="342" pos:column="9">(<pos:position pos:line="342" pos:column="10"/></operator> <literal type="number" pos:line="342" pos:column="11">0<pos:position pos:line="342" pos:column="12"/></literal><operator pos:line="342" pos:column="12">==<pos:position pos:line="342" pos:column="14"/></operator><operator pos:line="342" pos:column="14">(<pos:position pos:line="342" pos:column="15"/></operator><name><name pos:line="342" pos:column="15">db<pos:position pos:line="342" pos:column="17"/></name><operator pos:line="342" pos:column="17">-&gt;<pos:position pos:line="342" pos:column="22"/></operator><name pos:line="342" pos:column="19">flags<pos:position pos:line="342" pos:column="24"/></name></name><operator pos:line="342" pos:column="24">&amp;<pos:position pos:line="342" pos:column="29"/></operator><name pos:line="342" pos:column="25">SQLITE_RecTriggers<pos:position pos:line="342" pos:column="43"/></name><operator pos:line="342" pos:column="43">)<pos:position pos:line="342" pos:column="44"/></operator> <operator pos:line="342" pos:column="45">||<pos:position pos:line="342" pos:column="47"/></operator>      <comment type="block" pos:line="342" pos:column="53">/* Condition 4 */</comment>
          <literal type="number" pos:line="343" pos:column="11">0<pos:position pos:line="343" pos:column="12"/></literal><operator pos:line="343" pos:column="12">==<pos:position pos:line="343" pos:column="14"/></operator><call><name pos:line="343" pos:column="14">sqlite3TriggersExist<pos:position pos:line="343" pos:column="34"/></name><argument_list pos:line="343" pos:column="34">(<argument><expr><name pos:line="343" pos:column="35">pParse<pos:position pos:line="343" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="343" pos:column="43">pTab<pos:position pos:line="343" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="343" pos:column="49">TK_DELETE<pos:position pos:line="343" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="343" pos:column="60">0<pos:position pos:line="343" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="343" pos:column="63">0<pos:position pos:line="343" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="343" pos:column="65"/></argument_list></call><operator pos:line="343" pos:column="65">)<pos:position pos:line="343" pos:column="66"/></operator>
     <operator pos:line="344" pos:column="6">&amp;&amp;<pos:position pos:line="344" pos:column="16"/></operator> <operator pos:line="344" pos:column="9">(<pos:position pos:line="344" pos:column="10"/></operator> <literal type="number" pos:line="344" pos:column="11">0<pos:position pos:line="344" pos:column="12"/></literal><operator pos:line="344" pos:column="12">==<pos:position pos:line="344" pos:column="14"/></operator><operator pos:line="344" pos:column="14">(<pos:position pos:line="344" pos:column="15"/></operator><name><name pos:line="344" pos:column="15">db<pos:position pos:line="344" pos:column="17"/></name><operator pos:line="344" pos:column="17">-&gt;<pos:position pos:line="344" pos:column="22"/></operator><name pos:line="344" pos:column="19">flags<pos:position pos:line="344" pos:column="24"/></name></name><operator pos:line="344" pos:column="24">&amp;<pos:position pos:line="344" pos:column="29"/></operator><name pos:line="344" pos:column="25">SQLITE_ForeignKeys<pos:position pos:line="344" pos:column="43"/></name><operator pos:line="344" pos:column="43">)<pos:position pos:line="344" pos:column="44"/></operator> <operator pos:line="344" pos:column="45">||<pos:position pos:line="344" pos:column="47"/></operator>      <comment type="block" pos:line="344" pos:column="53">/* Condition 5 */</comment>
         <operator pos:line="345" pos:column="10">(<pos:position pos:line="345" pos:column="11"/></operator><literal type="number" pos:line="345" pos:column="11">0<pos:position pos:line="345" pos:column="12"/></literal><operator pos:line="345" pos:column="12">==<pos:position pos:line="345" pos:column="14"/></operator><name><name pos:line="345" pos:column="14">pTab<pos:position pos:line="345" pos:column="18"/></name><operator pos:line="345" pos:column="18">-&gt;<pos:position pos:line="345" pos:column="23"/></operator><name pos:line="345" pos:column="20">pFKey<pos:position pos:line="345" pos:column="25"/></name></name> <operator pos:line="345" pos:column="26">&amp;&amp;<pos:position pos:line="345" pos:column="36"/></operator> <literal type="number" pos:line="345" pos:column="29">0<pos:position pos:line="345" pos:column="30"/></literal><operator pos:line="345" pos:column="30">==<pos:position pos:line="345" pos:column="32"/></operator><call><name pos:line="345" pos:column="32">sqlite3FkReferences<pos:position pos:line="345" pos:column="51"/></name><argument_list pos:line="345" pos:column="51">(<argument><expr><name pos:line="345" pos:column="52">pTab<pos:position pos:line="345" pos:column="56"/></name></expr></argument>)<pos:position pos:line="345" pos:column="57"/></argument_list></call><operator pos:line="345" pos:column="57">)<pos:position pos:line="345" pos:column="58"/></operator><operator pos:line="345" pos:column="58">)<pos:position pos:line="345" pos:column="59"/></operator></expr>
    )<pos:position pos:line="346" pos:column="6"/></condition><then><block pos:line="346" pos:column="6">{
      <expr_stmt><expr><call><name pos:line="347" pos:column="7">sqlite3VdbeResolveLabel<pos:position pos:line="347" pos:column="30"/></name><argument_list pos:line="347" pos:column="30">(<argument><expr><name pos:line="347" pos:column="31">v<pos:position pos:line="347" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="347" pos:column="34">addrUniqueOk<pos:position pos:line="347" pos:column="46"/></name></expr></argument>)<pos:position pos:line="347" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="48"/></expr_stmt>
      <continue pos:line="348" pos:column="7">continue;<pos:position pos:line="348" pos:column="16"/></continue>
    }<pos:position pos:line="349" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="351" pos:column="5">/* Check to see if the new index entry will be unique */</comment>
    <expr_stmt><expr><call><name pos:line="352" pos:column="5">sqlite3VdbeAddOp4Int<pos:position pos:line="352" pos:column="25"/></name><argument_list pos:line="352" pos:column="25">(<argument><expr><name pos:line="352" pos:column="26">v<pos:position pos:line="352" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="352" pos:column="29">OP_NoConflict<pos:position pos:line="352" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="352" pos:column="44">iThisCur<pos:position pos:line="352" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="352" pos:column="54">addrUniqueOk<pos:position pos:line="352" pos:column="66"/></name></expr></argument>,
                         <argument><expr><name pos:line="353" pos:column="26">regIdx<pos:position pos:line="353" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="353" pos:column="34">pIdx<pos:position pos:line="353" pos:column="38"/></name><operator pos:line="353" pos:column="38">-&gt;<pos:position pos:line="353" pos:column="43"/></operator><name pos:line="353" pos:column="40">nKeyCol<pos:position pos:line="353" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="353" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="49"/></expr_stmt> <expr_stmt><expr><call><name pos:line="353" pos:column="50">VdbeCoverage<pos:position pos:line="353" pos:column="62"/></name><argument_list pos:line="353" pos:column="62">(<argument><expr><name pos:line="353" pos:column="63">v<pos:position pos:line="353" pos:column="64"/></name></expr></argument>)<pos:position pos:line="353" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="355" pos:column="5">/* Generate code to handle collisions */</comment>
    <expr_stmt><expr><name pos:line="356" pos:column="5">regR<pos:position pos:line="356" pos:column="9"/></name> <operator pos:line="356" pos:column="10">=<pos:position pos:line="356" pos:column="11"/></operator> <ternary><condition><expr><operator pos:line="356" pos:column="12">(<pos:position pos:line="356" pos:column="13"/></operator><name pos:line="356" pos:column="13">pIdx<pos:position pos:line="356" pos:column="17"/></name><operator pos:line="356" pos:column="17">==<pos:position pos:line="356" pos:column="19"/></operator><name pos:line="356" pos:column="19">pPk<pos:position pos:line="356" pos:column="22"/></name><operator pos:line="356" pos:column="22">)<pos:position pos:line="356" pos:column="23"/></operator></expr> ?<pos:position pos:line="356" pos:column="25"/></condition><then pos:line="356" pos:column="25"> <expr><name pos:line="356" pos:column="26">regIdx<pos:position pos:line="356" pos:column="32"/></name></expr> <pos:position pos:line="356" pos:column="33"/></then><else pos:line="356" pos:column="33">: <expr><call><name pos:line="356" pos:column="35">sqlite3GetTempRange<pos:position pos:line="356" pos:column="54"/></name><argument_list pos:line="356" pos:column="54">(<argument><expr><name pos:line="356" pos:column="55">pParse<pos:position pos:line="356" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="356" pos:column="63">nPkField<pos:position pos:line="356" pos:column="71"/></name></expr></argument>)<pos:position pos:line="356" pos:column="72"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="356" pos:column="73"/></expr_stmt>
    <if pos:line="357" pos:column="5">if<condition pos:line="357" pos:column="7">( <expr><name pos:line="357" pos:column="9">isUpdate<pos:position pos:line="357" pos:column="17"/></name> <operator pos:line="357" pos:column="18">||<pos:position pos:line="357" pos:column="20"/></operator> <name pos:line="357" pos:column="21">onError<pos:position pos:line="357" pos:column="28"/></name><operator pos:line="357" pos:column="28">==<pos:position pos:line="357" pos:column="30"/></operator><name pos:line="357" pos:column="30">OE_Replace<pos:position pos:line="357" pos:column="40"/></name></expr> )<pos:position pos:line="357" pos:column="42"/></condition><then><block pos:line="357" pos:column="42">{
      <if pos:line="358" pos:column="7">if<condition pos:line="358" pos:column="9">( <expr><call><name pos:line="358" pos:column="11">HasRowid<pos:position pos:line="358" pos:column="19"/></name><argument_list pos:line="358" pos:column="19">(<argument><expr><name pos:line="358" pos:column="20">pTab<pos:position pos:line="358" pos:column="24"/></name></expr></argument>)<pos:position pos:line="358" pos:column="25"/></argument_list></call></expr> )<pos:position pos:line="358" pos:column="27"/></condition><then><block pos:line="358" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="359" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="359" pos:column="26"/></name><argument_list pos:line="359" pos:column="26">(<argument><expr><name pos:line="359" pos:column="27">v<pos:position pos:line="359" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="30">OP_IdxRowid<pos:position pos:line="359" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="43">iThisCur<pos:position pos:line="359" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="53">regR<pos:position pos:line="359" pos:column="57"/></name></expr></argument>)<pos:position pos:line="359" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="59"/></expr_stmt>
        <comment type="block" pos:line="360" pos:column="9">/* Conflict only if the rowid of the existing index entry
        ** is different from old-rowid */</comment>
        <if pos:line="362" pos:column="9">if<condition pos:line="362" pos:column="11">( <expr><name pos:line="362" pos:column="13">isUpdate<pos:position pos:line="362" pos:column="21"/></name></expr> )<pos:position pos:line="362" pos:column="23"/></condition><then><block pos:line="362" pos:column="23">{
          <expr_stmt><expr><call><name pos:line="363" pos:column="11">sqlite3VdbeAddOp3<pos:position pos:line="363" pos:column="28"/></name><argument_list pos:line="363" pos:column="28">(<argument><expr><name pos:line="363" pos:column="29">v<pos:position pos:line="363" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="363" pos:column="32">OP_Eq<pos:position pos:line="363" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="363" pos:column="39">regR<pos:position pos:line="363" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="363" pos:column="45">addrUniqueOk<pos:position pos:line="363" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="363" pos:column="59">regOldData<pos:position pos:line="363" pos:column="69"/></name></expr></argument>)<pos:position pos:line="363" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="363" pos:column="71"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="364" pos:column="11">sqlite3VdbeChangeP5<pos:position pos:line="364" pos:column="30"/></name><argument_list pos:line="364" pos:column="30">(<argument><expr><name pos:line="364" pos:column="31">v<pos:position pos:line="364" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="364" pos:column="34">SQLITE_NOTNULL<pos:position pos:line="364" pos:column="48"/></name></expr></argument>)<pos:position pos:line="364" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="50"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="365" pos:column="11">VdbeCoverage<pos:position pos:line="365" pos:column="23"/></name><argument_list pos:line="365" pos:column="23">(<argument><expr><name pos:line="365" pos:column="24">v<pos:position pos:line="365" pos:column="25"/></name></expr></argument>)<pos:position pos:line="365" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="366" pos:column="10"/></block></then></if>
      }<pos:position pos:line="367" pos:column="8"/></block></then><else pos:line="367" pos:column="8">else<block pos:line="367" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="368" pos:column="9">int<pos:position pos:line="368" pos:column="12"/></name></type> <name pos:line="368" pos:column="13">x<pos:position pos:line="368" pos:column="14"/></name></decl>;<pos:position pos:line="368" pos:column="15"/></decl_stmt>
        <comment type="block" pos:line="369" pos:column="9">/* Extract the PRIMARY KEY from the end of the index entry and
        ** store it in registers regR..regR+nPk-1 */</comment>
        <if pos:line="371" pos:column="9">if<condition pos:line="371" pos:column="11">( <expr><name pos:line="371" pos:column="13">pIdx<pos:position pos:line="371" pos:column="17"/></name><operator pos:line="371" pos:column="17">!=<pos:position pos:line="371" pos:column="19"/></operator><name pos:line="371" pos:column="19">pPk<pos:position pos:line="371" pos:column="22"/></name></expr> )<pos:position pos:line="371" pos:column="24"/></condition><then><block pos:line="371" pos:column="24">{
          <for pos:line="372" pos:column="11">for<control pos:line="372" pos:column="14">(<init><expr><name pos:line="372" pos:column="15">i<pos:position pos:line="372" pos:column="16"/></name><operator pos:line="372" pos:column="16">=<pos:position pos:line="372" pos:column="17"/></operator><literal type="number" pos:line="372" pos:column="17">0<pos:position pos:line="372" pos:column="18"/></literal></expr>;<pos:position pos:line="372" pos:column="19"/></init> <condition><expr><name pos:line="372" pos:column="20">i<pos:position pos:line="372" pos:column="21"/></name><operator pos:line="372" pos:column="21">&lt;<pos:position pos:line="372" pos:column="25"/></operator><name><name pos:line="372" pos:column="22">pPk<pos:position pos:line="372" pos:column="25"/></name><operator pos:line="372" pos:column="25">-&gt;<pos:position pos:line="372" pos:column="30"/></operator><name pos:line="372" pos:column="27">nKeyCol<pos:position pos:line="372" pos:column="34"/></name></name></expr>;<pos:position pos:line="372" pos:column="35"/></condition> <incr><expr><name pos:line="372" pos:column="36">i<pos:position pos:line="372" pos:column="37"/></name><operator pos:line="372" pos:column="37">++<pos:position pos:line="372" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="372" pos:column="40"/></control><block pos:line="372" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="373" pos:column="13">assert<pos:position pos:line="373" pos:column="19"/></name><argument_list pos:line="373" pos:column="19">( <argument><expr><name><name pos:line="373" pos:column="21">pPk<pos:position pos:line="373" pos:column="24"/></name><operator pos:line="373" pos:column="24">-&gt;<pos:position pos:line="373" pos:column="29"/></operator><name pos:line="373" pos:column="26">aiColumn<pos:position pos:line="373" pos:column="34"/></name><index pos:line="373" pos:column="34">[<expr><name pos:line="373" pos:column="35">i<pos:position pos:line="373" pos:column="36"/></name></expr>]<pos:position pos:line="373" pos:column="37"/></index></name><operator pos:line="373" pos:column="37">&gt;=<pos:position pos:line="373" pos:column="42"/></operator><literal type="number" pos:line="373" pos:column="39">0<pos:position pos:line="373" pos:column="40"/></literal></expr></argument> )<pos:position pos:line="373" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name pos:line="374" pos:column="13">x<pos:position pos:line="374" pos:column="14"/></name> <operator pos:line="374" pos:column="15">=<pos:position pos:line="374" pos:column="16"/></operator> <call><name pos:line="374" pos:column="17">sqlite3ColumnOfIndex<pos:position pos:line="374" pos:column="37"/></name><argument_list pos:line="374" pos:column="37">(<argument><expr><name pos:line="374" pos:column="38">pIdx<pos:position pos:line="374" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="374" pos:column="44">pPk<pos:position pos:line="374" pos:column="47"/></name><operator pos:line="374" pos:column="47">-&gt;<pos:position pos:line="374" pos:column="52"/></operator><name pos:line="374" pos:column="49">aiColumn<pos:position pos:line="374" pos:column="57"/></name><index pos:line="374" pos:column="57">[<expr><name pos:line="374" pos:column="58">i<pos:position pos:line="374" pos:column="59"/></name></expr>]<pos:position pos:line="374" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="374" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="375" pos:column="13">sqlite3VdbeAddOp3<pos:position pos:line="375" pos:column="30"/></name><argument_list pos:line="375" pos:column="30">(<argument><expr><name pos:line="375" pos:column="31">v<pos:position pos:line="375" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="375" pos:column="34">OP_Column<pos:position pos:line="375" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="375" pos:column="45">iThisCur<pos:position pos:line="375" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="375" pos:column="55">x<pos:position pos:line="375" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="375" pos:column="58">regR<pos:position pos:line="375" pos:column="62"/></name><operator pos:line="375" pos:column="62">+<pos:position pos:line="375" pos:column="63"/></operator><name pos:line="375" pos:column="63">i<pos:position pos:line="375" pos:column="64"/></name></expr></argument>)<pos:position pos:line="375" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="376" pos:column="13">VdbeComment<pos:position pos:line="376" pos:column="24"/></name><argument_list pos:line="376" pos:column="24">(<argument><expr><operator pos:line="376" pos:column="25">(<pos:position pos:line="376" pos:column="26"/></operator><name pos:line="376" pos:column="26">v<pos:position pos:line="376" pos:column="27"/></name><operator pos:line="376" pos:column="27">,<pos:position pos:line="376" pos:column="28"/></operator> <literal type="string" pos:line="376" pos:column="29">"%s.%s"<pos:position pos:line="376" pos:column="36"/></literal><operator pos:line="376" pos:column="36">,<pos:position pos:line="376" pos:column="37"/></operator> <name><name pos:line="376" pos:column="38">pTab<pos:position pos:line="376" pos:column="42"/></name><operator pos:line="376" pos:column="42">-&gt;<pos:position pos:line="376" pos:column="47"/></operator><name pos:line="376" pos:column="44">zName<pos:position pos:line="376" pos:column="49"/></name></name><operator pos:line="376" pos:column="49">,<pos:position pos:line="376" pos:column="50"/></operator>
                         <name><name pos:line="377" pos:column="26">pTab<pos:position pos:line="377" pos:column="30"/></name><operator pos:line="377" pos:column="30">-&gt;<pos:position pos:line="377" pos:column="35"/></operator><name pos:line="377" pos:column="32">aCol<pos:position pos:line="377" pos:column="36"/></name><index pos:line="377" pos:column="36">[<expr><name><name pos:line="377" pos:column="37">pPk<pos:position pos:line="377" pos:column="40"/></name><operator pos:line="377" pos:column="40">-&gt;<pos:position pos:line="377" pos:column="45"/></operator><name pos:line="377" pos:column="42">aiColumn<pos:position pos:line="377" pos:column="50"/></name><index pos:line="377" pos:column="50">[<expr><name pos:line="377" pos:column="51">i<pos:position pos:line="377" pos:column="52"/></name></expr>]<pos:position pos:line="377" pos:column="53"/></index></name></expr>]<pos:position pos:line="377" pos:column="54"/></index></name><operator pos:line="377" pos:column="54">.<pos:position pos:line="377" pos:column="55"/></operator><name pos:line="377" pos:column="55">zName<pos:position pos:line="377" pos:column="60"/></name><operator pos:line="377" pos:column="60">)<pos:position pos:line="377" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="377" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="377" pos:column="63"/></expr_stmt>
          }<pos:position pos:line="378" pos:column="12"/></block></for>
        }<pos:position pos:line="379" pos:column="10"/></block></then></if>
        <if pos:line="380" pos:column="9">if<condition pos:line="380" pos:column="11">( <expr><name pos:line="380" pos:column="13">isUpdate<pos:position pos:line="380" pos:column="21"/></name></expr> )<pos:position pos:line="380" pos:column="23"/></condition><then><block pos:line="380" pos:column="23">{
          <comment type="block" pos:line="381" pos:column="11">/* If currently processing the PRIMARY KEY of a WITHOUT ROWID 
          ** table, only conflict if the new PRIMARY KEY values are actually
          ** different from the old.
          **
          ** For a UNIQUE index, only conflict if the PRIMARY KEY values
          ** of the matched index row are different from the original PRIMARY
          ** KEY values of this row before the update.  */</comment>
          <decl_stmt><decl><type><name pos:line="388" pos:column="11">int<pos:position pos:line="388" pos:column="14"/></name></type> <name pos:line="388" pos:column="15">addrJump<pos:position pos:line="388" pos:column="23"/></name> <init pos:line="388" pos:column="24">= <expr><call><name pos:line="388" pos:column="26">sqlite3VdbeCurrentAddr<pos:position pos:line="388" pos:column="48"/></name><argument_list pos:line="388" pos:column="48">(<argument><expr><name pos:line="388" pos:column="49">v<pos:position pos:line="388" pos:column="50"/></name></expr></argument>)<pos:position pos:line="388" pos:column="51"/></argument_list></call><operator pos:line="388" pos:column="51">+<pos:position pos:line="388" pos:column="52"/></operator><name><name pos:line="388" pos:column="52">pPk<pos:position pos:line="388" pos:column="55"/></name><operator pos:line="388" pos:column="55">-&gt;<pos:position pos:line="388" pos:column="60"/></operator><name pos:line="388" pos:column="57">nKeyCol<pos:position pos:line="388" pos:column="64"/></name></name></expr></init></decl>;<pos:position pos:line="388" pos:column="65"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="389" pos:column="11">int<pos:position pos:line="389" pos:column="14"/></name></type> <name pos:line="389" pos:column="15">op<pos:position pos:line="389" pos:column="17"/></name> <init pos:line="389" pos:column="18">= <expr><name pos:line="389" pos:column="20">OP_Ne<pos:position pos:line="389" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="389" pos:column="26"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="390" pos:column="11">int<pos:position pos:line="390" pos:column="14"/></name></type> <name pos:line="390" pos:column="15">regCmp<pos:position pos:line="390" pos:column="21"/></name> <init pos:line="390" pos:column="22">= <expr><operator pos:line="390" pos:column="24">(<pos:position pos:line="390" pos:column="25"/></operator><ternary><condition><expr><call><name pos:line="390" pos:column="25">IsPrimaryKeyIndex<pos:position pos:line="390" pos:column="42"/></name><argument_list pos:line="390" pos:column="42">(<argument><expr><name pos:line="390" pos:column="43">pIdx<pos:position pos:line="390" pos:column="47"/></name></expr></argument>)<pos:position pos:line="390" pos:column="48"/></argument_list></call></expr> ?<pos:position pos:line="390" pos:column="50"/></condition><then pos:line="390" pos:column="50"> <expr><name pos:line="390" pos:column="51">regIdx<pos:position pos:line="390" pos:column="57"/></name></expr> <pos:position pos:line="390" pos:column="58"/></then><else pos:line="390" pos:column="58">: <expr><name pos:line="390" pos:column="60">regR<pos:position pos:line="390" pos:column="64"/></name></expr></else></ternary><operator pos:line="390" pos:column="64">)<pos:position pos:line="390" pos:column="65"/></operator></expr></init></decl>;<pos:position pos:line="390" pos:column="66"/></decl_stmt>
  
          <for pos:line="392" pos:column="11">for<control pos:line="392" pos:column="14">(<init><expr><name pos:line="392" pos:column="15">i<pos:position pos:line="392" pos:column="16"/></name><operator pos:line="392" pos:column="16">=<pos:position pos:line="392" pos:column="17"/></operator><literal type="number" pos:line="392" pos:column="17">0<pos:position pos:line="392" pos:column="18"/></literal></expr>;<pos:position pos:line="392" pos:column="19"/></init> <condition><expr><name pos:line="392" pos:column="20">i<pos:position pos:line="392" pos:column="21"/></name><operator pos:line="392" pos:column="21">&lt;<pos:position pos:line="392" pos:column="25"/></operator><name><name pos:line="392" pos:column="22">pPk<pos:position pos:line="392" pos:column="25"/></name><operator pos:line="392" pos:column="25">-&gt;<pos:position pos:line="392" pos:column="30"/></operator><name pos:line="392" pos:column="27">nKeyCol<pos:position pos:line="392" pos:column="34"/></name></name></expr>;<pos:position pos:line="392" pos:column="35"/></condition> <incr><expr><name pos:line="392" pos:column="36">i<pos:position pos:line="392" pos:column="37"/></name><operator pos:line="392" pos:column="37">++<pos:position pos:line="392" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="392" pos:column="40"/></control><block pos:line="392" pos:column="40">{
            <decl_stmt><decl><type><name pos:line="393" pos:column="13">char<pos:position pos:line="393" pos:column="17"/></name> <modifier pos:line="393" pos:column="18">*<pos:position pos:line="393" pos:column="19"/></modifier></type><name pos:line="393" pos:column="19">p4<pos:position pos:line="393" pos:column="21"/></name> <init pos:line="393" pos:column="22">= <expr><operator pos:line="393" pos:column="24">(<pos:position pos:line="393" pos:column="25"/></operator><name pos:line="393" pos:column="25">char<pos:position pos:line="393" pos:column="29"/></name><operator pos:line="393" pos:column="29">*<pos:position pos:line="393" pos:column="30"/></operator><operator pos:line="393" pos:column="30">)<pos:position pos:line="393" pos:column="31"/></operator><call><name pos:line="393" pos:column="31">sqlite3LocateCollSeq<pos:position pos:line="393" pos:column="51"/></name><argument_list pos:line="393" pos:column="51">(<argument><expr><name pos:line="393" pos:column="52">pParse<pos:position pos:line="393" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="393" pos:column="60">pPk<pos:position pos:line="393" pos:column="63"/></name><operator pos:line="393" pos:column="63">-&gt;<pos:position pos:line="393" pos:column="68"/></operator><name pos:line="393" pos:column="65">azColl<pos:position pos:line="393" pos:column="71"/></name><index pos:line="393" pos:column="71">[<expr><name pos:line="393" pos:column="72">i<pos:position pos:line="393" pos:column="73"/></name></expr>]<pos:position pos:line="393" pos:column="74"/></index></name></expr></argument>)<pos:position pos:line="393" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="393" pos:column="76"/></decl_stmt>
            <expr_stmt><expr><name pos:line="394" pos:column="13">x<pos:position pos:line="394" pos:column="14"/></name> <operator pos:line="394" pos:column="15">=<pos:position pos:line="394" pos:column="16"/></operator> <name><name pos:line="394" pos:column="17">pPk<pos:position pos:line="394" pos:column="20"/></name><operator pos:line="394" pos:column="20">-&gt;<pos:position pos:line="394" pos:column="25"/></operator><name pos:line="394" pos:column="22">aiColumn<pos:position pos:line="394" pos:column="30"/></name><index pos:line="394" pos:column="30">[<expr><name pos:line="394" pos:column="31">i<pos:position pos:line="394" pos:column="32"/></name></expr>]<pos:position pos:line="394" pos:column="33"/></index></name></expr>;<pos:position pos:line="394" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="395" pos:column="13">assert<pos:position pos:line="395" pos:column="19"/></name><argument_list pos:line="395" pos:column="19">( <argument><expr><name pos:line="395" pos:column="21">x<pos:position pos:line="395" pos:column="22"/></name><operator pos:line="395" pos:column="22">&gt;=<pos:position pos:line="395" pos:column="27"/></operator><literal type="number" pos:line="395" pos:column="24">0<pos:position pos:line="395" pos:column="25"/></literal></expr></argument> )<pos:position pos:line="395" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="28"/></expr_stmt>
            <if pos:line="396" pos:column="13">if<condition pos:line="396" pos:column="15">( <expr><name pos:line="396" pos:column="17">i<pos:position pos:line="396" pos:column="18"/></name><operator pos:line="396" pos:column="18">==<pos:position pos:line="396" pos:column="20"/></operator><operator pos:line="396" pos:column="20">(<pos:position pos:line="396" pos:column="21"/></operator><name><name pos:line="396" pos:column="21">pPk<pos:position pos:line="396" pos:column="24"/></name><operator pos:line="396" pos:column="24">-&gt;<pos:position pos:line="396" pos:column="29"/></operator><name pos:line="396" pos:column="26">nKeyCol<pos:position pos:line="396" pos:column="33"/></name></name><operator pos:line="396" pos:column="33">-<pos:position pos:line="396" pos:column="34"/></operator><literal type="number" pos:line="396" pos:column="34">1<pos:position pos:line="396" pos:column="35"/></literal><operator pos:line="396" pos:column="35">)<pos:position pos:line="396" pos:column="36"/></operator></expr> )<pos:position pos:line="396" pos:column="38"/></condition><then><block pos:line="396" pos:column="38">{
              <expr_stmt><expr><name pos:line="397" pos:column="15">addrJump<pos:position pos:line="397" pos:column="23"/></name> <operator pos:line="397" pos:column="24">=<pos:position pos:line="397" pos:column="25"/></operator> <name pos:line="397" pos:column="26">addrUniqueOk<pos:position pos:line="397" pos:column="38"/></name></expr>;<pos:position pos:line="397" pos:column="39"/></expr_stmt>
              <expr_stmt><expr><name pos:line="398" pos:column="15">op<pos:position pos:line="398" pos:column="17"/></name> <operator pos:line="398" pos:column="18">=<pos:position pos:line="398" pos:column="19"/></operator> <name pos:line="398" pos:column="20">OP_Eq<pos:position pos:line="398" pos:column="25"/></name></expr>;<pos:position pos:line="398" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="399" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="400" pos:column="13">sqlite3VdbeAddOp4<pos:position pos:line="400" pos:column="30"/></name><argument_list pos:line="400" pos:column="30">(<argument><expr><name pos:line="400" pos:column="31">v<pos:position pos:line="400" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="400" pos:column="34">op<pos:position pos:line="400" pos:column="36"/></name></expr></argument>, 
                <argument><expr><name pos:line="401" pos:column="17">regOldData<pos:position pos:line="401" pos:column="27"/></name><operator pos:line="401" pos:column="27">+<pos:position pos:line="401" pos:column="28"/></operator><literal type="number" pos:line="401" pos:column="28">1<pos:position pos:line="401" pos:column="29"/></literal><operator pos:line="401" pos:column="29">+<pos:position pos:line="401" pos:column="30"/></operator><name pos:line="401" pos:column="30">x<pos:position pos:line="401" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="33">addrJump<pos:position pos:line="401" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="43">regCmp<pos:position pos:line="401" pos:column="49"/></name><operator pos:line="401" pos:column="49">+<pos:position pos:line="401" pos:column="50"/></operator><name pos:line="401" pos:column="50">i<pos:position pos:line="401" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="53">p4<pos:position pos:line="401" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="57">P4_COLLSEQ<pos:position pos:line="401" pos:column="67"/></name></expr></argument>
            )<pos:position pos:line="402" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="15"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="403" pos:column="13">sqlite3VdbeChangeP5<pos:position pos:line="403" pos:column="32"/></name><argument_list pos:line="403" pos:column="32">(<argument><expr><name pos:line="403" pos:column="33">v<pos:position pos:line="403" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="403" pos:column="36">SQLITE_NOTNULL<pos:position pos:line="403" pos:column="50"/></name></expr></argument>)<pos:position pos:line="403" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="403" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="404" pos:column="13">VdbeCoverageIf<pos:position pos:line="404" pos:column="27"/></name><argument_list pos:line="404" pos:column="27">(<argument><expr><name pos:line="404" pos:column="28">v<pos:position pos:line="404" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="404" pos:column="31">op<pos:position pos:line="404" pos:column="33"/></name><operator pos:line="404" pos:column="33">==<pos:position pos:line="404" pos:column="35"/></operator><name pos:line="404" pos:column="35">OP_Eq<pos:position pos:line="404" pos:column="40"/></name></expr></argument>)<pos:position pos:line="404" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="404" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="405" pos:column="13">VdbeCoverageIf<pos:position pos:line="405" pos:column="27"/></name><argument_list pos:line="405" pos:column="27">(<argument><expr><name pos:line="405" pos:column="28">v<pos:position pos:line="405" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="405" pos:column="31">op<pos:position pos:line="405" pos:column="33"/></name><operator pos:line="405" pos:column="33">==<pos:position pos:line="405" pos:column="35"/></operator><name pos:line="405" pos:column="35">OP_Ne<pos:position pos:line="405" pos:column="40"/></name></expr></argument>)<pos:position pos:line="405" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="42"/></expr_stmt>
          }<pos:position pos:line="406" pos:column="12"/></block></for>
        }<pos:position pos:line="407" pos:column="10"/></block></then></if>
      }<pos:position pos:line="408" pos:column="8"/></block></else></if>
    }<pos:position pos:line="409" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="411" pos:column="5">/* Generate code that executes if the new index entry is not unique */</comment>
    <expr_stmt><expr><call><name pos:line="412" pos:column="5">assert<pos:position pos:line="412" pos:column="11"/></name><argument_list pos:line="412" pos:column="11">( <argument><expr><name pos:line="412" pos:column="13">onError<pos:position pos:line="412" pos:column="20"/></name><operator pos:line="412" pos:column="20">==<pos:position pos:line="412" pos:column="22"/></operator><name pos:line="412" pos:column="22">OE_Rollback<pos:position pos:line="412" pos:column="33"/></name> <operator pos:line="412" pos:column="34">||<pos:position pos:line="412" pos:column="36"/></operator> <name pos:line="412" pos:column="37">onError<pos:position pos:line="412" pos:column="44"/></name><operator pos:line="412" pos:column="44">==<pos:position pos:line="412" pos:column="46"/></operator><name pos:line="412" pos:column="46">OE_Abort<pos:position pos:line="412" pos:column="54"/></name> <operator pos:line="412" pos:column="55">||<pos:position pos:line="412" pos:column="57"/></operator> <name pos:line="412" pos:column="58">onError<pos:position pos:line="412" pos:column="65"/></name><operator pos:line="412" pos:column="65">==<pos:position pos:line="412" pos:column="67"/></operator><name pos:line="412" pos:column="67">OE_Fail<pos:position pos:line="412" pos:column="74"/></name>
        <operator pos:line="413" pos:column="9">||<pos:position pos:line="413" pos:column="11"/></operator> <name pos:line="413" pos:column="12">onError<pos:position pos:line="413" pos:column="19"/></name><operator pos:line="413" pos:column="19">==<pos:position pos:line="413" pos:column="21"/></operator><name pos:line="413" pos:column="21">OE_Ignore<pos:position pos:line="413" pos:column="30"/></name> <operator pos:line="413" pos:column="31">||<pos:position pos:line="413" pos:column="33"/></operator> <name pos:line="413" pos:column="34">onError<pos:position pos:line="413" pos:column="41"/></name><operator pos:line="413" pos:column="41">==<pos:position pos:line="413" pos:column="43"/></operator><name pos:line="413" pos:column="43">OE_Replace<pos:position pos:line="413" pos:column="53"/></name></expr></argument> )<pos:position pos:line="413" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="56"/></expr_stmt>
    <switch pos:line="414" pos:column="5">switch<condition pos:line="414" pos:column="11">( <expr><name pos:line="414" pos:column="13">onError<pos:position pos:line="414" pos:column="20"/></name></expr> )<pos:position pos:line="414" pos:column="22"/></condition><block pos:line="414" pos:column="22">{
      <case pos:line="415" pos:column="7">case <expr><name pos:line="415" pos:column="12">OE_Rollback<pos:position pos:line="415" pos:column="23"/></name></expr>:<pos:position pos:line="415" pos:column="24"/></case>
      <case pos:line="416" pos:column="7">case <expr><name pos:line="416" pos:column="12">OE_Abort<pos:position pos:line="416" pos:column="20"/></name></expr>:<pos:position pos:line="416" pos:column="21"/></case>
      <case pos:line="417" pos:column="7">case <expr><name pos:line="417" pos:column="12">OE_Fail<pos:position pos:line="417" pos:column="19"/></name></expr>:<pos:position pos:line="417" pos:column="20"/></case> <block pos:line="417" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="418" pos:column="9">sqlite3UniqueConstraint<pos:position pos:line="418" pos:column="32"/></name><argument_list pos:line="418" pos:column="32">(<argument><expr><name pos:line="418" pos:column="33">pParse<pos:position pos:line="418" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="418" pos:column="41">onError<pos:position pos:line="418" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="418" pos:column="50">pIdx<pos:position pos:line="418" pos:column="54"/></name></expr></argument>)<pos:position pos:line="418" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="418" pos:column="56"/></expr_stmt>
        <break pos:line="419" pos:column="9">break;<pos:position pos:line="419" pos:column="15"/></break>
      }<pos:position pos:line="420" pos:column="8"/></block>
      <case pos:line="421" pos:column="7">case <expr><name pos:line="421" pos:column="12">OE_Ignore<pos:position pos:line="421" pos:column="21"/></name></expr>:<pos:position pos:line="421" pos:column="22"/></case> <block pos:line="421" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="422" pos:column="9">sqlite3VdbeGoto<pos:position pos:line="422" pos:column="24"/></name><argument_list pos:line="422" pos:column="24">(<argument><expr><name pos:line="422" pos:column="25">v<pos:position pos:line="422" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="422" pos:column="28">ignoreDest<pos:position pos:line="422" pos:column="38"/></name></expr></argument>)<pos:position pos:line="422" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="40"/></expr_stmt>
        <break pos:line="423" pos:column="9">break;<pos:position pos:line="423" pos:column="15"/></break>
      }<pos:position pos:line="424" pos:column="8"/></block>
      <default pos:line="425" pos:column="7">default:<pos:position pos:line="425" pos:column="15"/></default> <block pos:line="425" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="426" pos:column="9">Trigger<pos:position pos:line="426" pos:column="16"/></name> <modifier pos:line="426" pos:column="17">*<pos:position pos:line="426" pos:column="18"/></modifier></type><name pos:line="426" pos:column="18">pTrigger<pos:position pos:line="426" pos:column="26"/></name> <init pos:line="426" pos:column="27">= <expr><literal type="number" pos:line="426" pos:column="29">0<pos:position pos:line="426" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="426" pos:column="31"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="427" pos:column="9">assert<pos:position pos:line="427" pos:column="15"/></name><argument_list pos:line="427" pos:column="15">( <argument><expr><name pos:line="427" pos:column="17">onError<pos:position pos:line="427" pos:column="24"/></name><operator pos:line="427" pos:column="24">==<pos:position pos:line="427" pos:column="26"/></operator><name pos:line="427" pos:column="26">OE_Replace<pos:position pos:line="427" pos:column="36"/></name></expr></argument> )<pos:position pos:line="427" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="427" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="428" pos:column="9">sqlite3MultiWrite<pos:position pos:line="428" pos:column="26"/></name><argument_list pos:line="428" pos:column="26">(<argument><expr><name pos:line="428" pos:column="27">pParse<pos:position pos:line="428" pos:column="33"/></name></expr></argument>)<pos:position pos:line="428" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="428" pos:column="35"/></expr_stmt>
        <if pos:line="429" pos:column="9">if<condition pos:line="429" pos:column="11">( <expr><name><name pos:line="429" pos:column="13">db<pos:position pos:line="429" pos:column="15"/></name><operator pos:line="429" pos:column="15">-&gt;<pos:position pos:line="429" pos:column="20"/></operator><name pos:line="429" pos:column="17">flags<pos:position pos:line="429" pos:column="22"/></name></name><operator pos:line="429" pos:column="22">&amp;<pos:position pos:line="429" pos:column="27"/></operator><name pos:line="429" pos:column="23">SQLITE_RecTriggers<pos:position pos:line="429" pos:column="41"/></name></expr> )<pos:position pos:line="429" pos:column="43"/></condition><then><block pos:line="429" pos:column="43">{
          <expr_stmt><expr><name pos:line="430" pos:column="11">pTrigger<pos:position pos:line="430" pos:column="19"/></name> <operator pos:line="430" pos:column="20">=<pos:position pos:line="430" pos:column="21"/></operator> <call><name pos:line="430" pos:column="22">sqlite3TriggersExist<pos:position pos:line="430" pos:column="42"/></name><argument_list pos:line="430" pos:column="42">(<argument><expr><name pos:line="430" pos:column="43">pParse<pos:position pos:line="430" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="430" pos:column="51">pTab<pos:position pos:line="430" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="430" pos:column="57">TK_DELETE<pos:position pos:line="430" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="430" pos:column="68">0<pos:position pos:line="430" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="430" pos:column="71">0<pos:position pos:line="430" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="430" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="431" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="432" pos:column="9">sqlite3GenerateRowDelete<pos:position pos:line="432" pos:column="33"/></name><argument_list pos:line="432" pos:column="33">(<argument><expr><name pos:line="432" pos:column="34">pParse<pos:position pos:line="432" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="432" pos:column="42">pTab<pos:position pos:line="432" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="432" pos:column="48">pTrigger<pos:position pos:line="432" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="432" pos:column="58">iDataCur<pos:position pos:line="432" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="432" pos:column="68">iIdxCur<pos:position pos:line="432" pos:column="75"/></name></expr></argument>,
            <argument><expr><name pos:line="433" pos:column="13">regR<pos:position pos:line="433" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="433" pos:column="19">nPkField<pos:position pos:line="433" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="433" pos:column="29">0<pos:position pos:line="433" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="433" pos:column="32">OE_Replace<pos:position pos:line="433" pos:column="42"/></name></expr></argument>,
            <argument><expr><operator pos:line="434" pos:column="13">(<pos:position pos:line="434" pos:column="14"/></operator><ternary><condition><expr><name pos:line="434" pos:column="14">pIdx<pos:position pos:line="434" pos:column="18"/></name><operator pos:line="434" pos:column="18">==<pos:position pos:line="434" pos:column="20"/></operator><name pos:line="434" pos:column="20">pPk<pos:position pos:line="434" pos:column="23"/></name></expr> ?<pos:position pos:line="434" pos:column="25"/></condition><then pos:line="434" pos:column="25"> <expr><name pos:line="434" pos:column="26">ONEPASS_SINGLE<pos:position pos:line="434" pos:column="40"/></name></expr> <pos:position pos:line="434" pos:column="41"/></then><else pos:line="434" pos:column="41">: <expr><name pos:line="434" pos:column="43">ONEPASS_OFF<pos:position pos:line="434" pos:column="54"/></name></expr></else></ternary><operator pos:line="434" pos:column="54">)<pos:position pos:line="434" pos:column="55"/></operator></expr></argument>, <argument><expr><name pos:line="434" pos:column="57">iThisCur<pos:position pos:line="434" pos:column="65"/></name></expr></argument>)<pos:position pos:line="434" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="434" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="435" pos:column="9">seenReplace<pos:position pos:line="435" pos:column="20"/></name> <operator pos:line="435" pos:column="21">=<pos:position pos:line="435" pos:column="22"/></operator> <literal type="number" pos:line="435" pos:column="23">1<pos:position pos:line="435" pos:column="24"/></literal></expr>;<pos:position pos:line="435" pos:column="25"/></expr_stmt>
        <break pos:line="436" pos:column="9">break;<pos:position pos:line="436" pos:column="15"/></break>
      }<pos:position pos:line="437" pos:column="8"/></block>
    }<pos:position pos:line="438" pos:column="6"/></block></switch>
    <expr_stmt><expr><call><name pos:line="439" pos:column="5">sqlite3VdbeResolveLabel<pos:position pos:line="439" pos:column="28"/></name><argument_list pos:line="439" pos:column="28">(<argument><expr><name pos:line="439" pos:column="29">v<pos:position pos:line="439" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="439" pos:column="32">addrUniqueOk<pos:position pos:line="439" pos:column="44"/></name></expr></argument>)<pos:position pos:line="439" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="439" pos:column="46"/></expr_stmt>
    <if pos:line="440" pos:column="5">if<condition pos:line="440" pos:column="7">( <expr><name pos:line="440" pos:column="9">regR<pos:position pos:line="440" pos:column="13"/></name><operator pos:line="440" pos:column="13">!=<pos:position pos:line="440" pos:column="15"/></operator><name pos:line="440" pos:column="15">regIdx<pos:position pos:line="440" pos:column="21"/></name></expr> )<pos:position pos:line="440" pos:column="23"/></condition><then pos:line="440" pos:column="23"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="440" pos:column="24">sqlite3ReleaseTempRange<pos:position pos:line="440" pos:column="47"/></name><argument_list pos:line="440" pos:column="47">(<argument><expr><name pos:line="440" pos:column="48">pParse<pos:position pos:line="440" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="440" pos:column="56">regR<pos:position pos:line="440" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="440" pos:column="62">nPkField<pos:position pos:line="440" pos:column="70"/></name></expr></argument>)<pos:position pos:line="440" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="440" pos:column="72"/></expr_stmt></block></then></if>
  }<pos:position pos:line="441" pos:column="4"/></block></for>
  <if pos:line="442" pos:column="3">if<condition pos:line="442" pos:column="5">( <expr><name pos:line="442" pos:column="7">ipkTop<pos:position pos:line="442" pos:column="13"/></name></expr> )<pos:position pos:line="442" pos:column="15"/></condition><then><block pos:line="442" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="443" pos:column="5">sqlite3VdbeGoto<pos:position pos:line="443" pos:column="20"/></name><argument_list pos:line="443" pos:column="20">(<argument><expr><name pos:line="443" pos:column="21">v<pos:position pos:line="443" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="443" pos:column="24">ipkTop<pos:position pos:line="443" pos:column="30"/></name><operator pos:line="443" pos:column="30">+<pos:position pos:line="443" pos:column="31"/></operator><literal type="number" pos:line="443" pos:column="31">1<pos:position pos:line="443" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="443" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="443" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="444" pos:column="5">sqlite3VdbeJumpHere<pos:position pos:line="444" pos:column="24"/></name><argument_list pos:line="444" pos:column="24">(<argument><expr><name pos:line="444" pos:column="25">v<pos:position pos:line="444" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="444" pos:column="28">ipkBottom<pos:position pos:line="444" pos:column="37"/></name></expr></argument>)<pos:position pos:line="444" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="444" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="445" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><operator pos:line="447" pos:column="3">*<pos:position pos:line="447" pos:column="4"/></operator><name pos:line="447" pos:column="4">pbMayReplace<pos:position pos:line="447" pos:column="16"/></name> <operator pos:line="447" pos:column="17">=<pos:position pos:line="447" pos:column="18"/></operator> <name pos:line="447" pos:column="19">seenReplace<pos:position pos:line="447" pos:column="30"/></name></expr>;<pos:position pos:line="447" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="448" pos:column="3">VdbeModuleComment<pos:position pos:line="448" pos:column="20"/></name><argument_list pos:line="448" pos:column="20">(<argument><expr><operator pos:line="448" pos:column="21">(<pos:position pos:line="448" pos:column="22"/></operator><name pos:line="448" pos:column="22">v<pos:position pos:line="448" pos:column="23"/></name><operator pos:line="448" pos:column="23">,<pos:position pos:line="448" pos:column="24"/></operator> <literal type="string" pos:line="448" pos:column="25">"END: GenCnstCks(%d)"<pos:position pos:line="448" pos:column="46"/></literal><operator pos:line="448" pos:column="46">,<pos:position pos:line="448" pos:column="47"/></operator> <name pos:line="448" pos:column="48">seenReplace<pos:position pos:line="448" pos:column="59"/></name><operator pos:line="448" pos:column="59">)<pos:position pos:line="448" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="448" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="448" pos:column="62"/></expr_stmt>
}<pos:position pos:line="449" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_361.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">sqlite3GenerateConstraintChecks<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Parse<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pParse<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>,      <comment type="block" pos:line="2" pos:column="23">/* The parser context */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">Table<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">pTab<pos:position pos:line="3" pos:column="14"/></name></decl></parameter>,        <comment type="block" pos:line="3" pos:column="23">/* the table into which we are inserting */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">baseCur<pos:position pos:line="4" pos:column="14"/></name></decl></parameter>,        <comment type="block" pos:line="4" pos:column="23">/* Index of a read/write cursor pointing at pTab */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">regRowid<pos:position pos:line="5" pos:column="15"/></name></decl></parameter>,       <comment type="block" pos:line="5" pos:column="23">/* Index of the range of input registers */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name> <modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type><name pos:line="6" pos:column="8">aRegIdx<pos:position pos:line="6" pos:column="15"/></name></decl></parameter>,       <comment type="block" pos:line="6" pos:column="23">/* Register used by each index.  0 for unused indices */</comment>
  <parameter><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rowidChng<pos:position pos:line="7" pos:column="16"/></name></decl></parameter>,      <comment type="block" pos:line="7" pos:column="23">/* True if the rowid might collide with existing entry */</comment>
  <parameter><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">isUpdate<pos:position pos:line="8" pos:column="15"/></name></decl></parameter>,       <comment type="block" pos:line="8" pos:column="23">/* True for UPDATE, False for INSERT */</comment>
  <parameter><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">overrideError<pos:position pos:line="9" pos:column="20"/></name></decl></parameter>,  <comment type="block" pos:line="9" pos:column="23">/* Override onError to this if not OE_Default */</comment>
  <parameter><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">ignoreDest<pos:position pos:line="10" pos:column="17"/></name></decl></parameter>,     <comment type="block" pos:line="10" pos:column="23">/* Jump to this label on an OE_Ignore resolution */</comment>
  <parameter><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name> <modifier pos:line="11" pos:column="7">*<pos:position pos:line="11" pos:column="8"/></modifier></type><name pos:line="11" pos:column="8">pbMayReplace<pos:position pos:line="11" pos:column="20"/></name></decl></parameter>   <comment type="block" pos:line="11" pos:column="23">/* OUT: Set to true if constraint may cause a replace */</comment>
)<pos:position pos:line="12" pos:column="2"/></parameter_list><block pos:line="12" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">i<pos:position pos:line="13" pos:column="8"/></name></decl>;<pos:position pos:line="13" pos:column="9"/></decl_stmt>              <comment type="block" pos:line="13" pos:column="23">/* loop counter */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">Vdbe<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">v<pos:position pos:line="14" pos:column="10"/></name></decl>;<pos:position pos:line="14" pos:column="11"/></decl_stmt>            <comment type="block" pos:line="14" pos:column="23">/* VDBE under constrution */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">nCol<pos:position pos:line="15" pos:column="11"/></name></decl>;<pos:position pos:line="15" pos:column="12"/></decl_stmt>           <comment type="block" pos:line="15" pos:column="23">/* Number of columns */</comment>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">onError<pos:position pos:line="16" pos:column="14"/></name></decl>;<pos:position pos:line="16" pos:column="15"/></decl_stmt>        <comment type="block" pos:line="16" pos:column="23">/* Conflict resolution strategy */</comment>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">int<pos:position pos:line="17" pos:column="6"/></name></type> <name pos:line="17" pos:column="7">j1<pos:position pos:line="17" pos:column="9"/></name></decl>;<pos:position pos:line="17" pos:column="10"/></decl_stmt>             <comment type="block" pos:line="17" pos:column="23">/* Addresss of jump instruction */</comment>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">j2<pos:position pos:line="18" pos:column="9"/></name> <init pos:line="18" pos:column="10">= <expr><literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="18" pos:column="15">j3<pos:position pos:line="18" pos:column="17"/></name></decl>;<pos:position pos:line="18" pos:column="18"/></decl_stmt>     <comment type="block" pos:line="18" pos:column="23">/* Addresses of jump instructions */</comment>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">regData<pos:position pos:line="19" pos:column="14"/></name></decl>;<pos:position pos:line="19" pos:column="15"/></decl_stmt>        <comment type="block" pos:line="19" pos:column="23">/* Register containing first data column */</comment>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">int<pos:position pos:line="20" pos:column="6"/></name></type> <name pos:line="20" pos:column="7">iCur<pos:position pos:line="20" pos:column="11"/></name></decl>;<pos:position pos:line="20" pos:column="12"/></decl_stmt>           <comment type="block" pos:line="20" pos:column="23">/* Table cursor number */</comment>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">Index<pos:position pos:line="21" pos:column="8"/></name> <modifier pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></modifier></type><name pos:line="21" pos:column="10">pIdx<pos:position pos:line="21" pos:column="14"/></name></decl>;<pos:position pos:line="21" pos:column="15"/></decl_stmt>         <comment type="block" pos:line="21" pos:column="24">/* Pointer to one of the indices */</comment>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">int<pos:position pos:line="22" pos:column="6"/></name></type> <name pos:line="22" pos:column="7">seenReplace<pos:position pos:line="22" pos:column="18"/></name> <init pos:line="22" pos:column="19">= <expr><literal type="number" pos:line="22" pos:column="21">0<pos:position pos:line="22" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="23"/></decl_stmt> <comment type="block" pos:line="22" pos:column="24">/* True if REPLACE is used to resolve INT PK conflict */</comment>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">int<pos:position pos:line="23" pos:column="6"/></name></type> <name pos:line="23" pos:column="7">hasTwoRowids<pos:position pos:line="23" pos:column="19"/></name> <init pos:line="23" pos:column="20">= <expr><operator pos:line="23" pos:column="22">(<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">isUpdate<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">&amp;&amp;<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="35">rowidChng<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">)<pos:position pos:line="23" pos:column="45"/></operator></expr></init></decl>;<pos:position pos:line="23" pos:column="46"/></decl_stmt>

  <expr_stmt><expr><name pos:line="25" pos:column="3">v<pos:position pos:line="25" pos:column="4"/></name> <operator pos:line="25" pos:column="5">=<pos:position pos:line="25" pos:column="6"/></operator> <call><name pos:line="25" pos:column="7">sqlite3GetVdbe<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">pParse<pos:position pos:line="25" pos:column="28"/></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">assert<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">( <argument><expr><name pos:line="26" pos:column="11">v<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">!=<pos:position pos:line="26" pos:column="14"/></operator><literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr></argument> )<pos:position pos:line="26" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">assert<pos:position pos:line="27" pos:column="9"/></name><argument_list pos:line="27" pos:column="9">( <argument><expr><name><name pos:line="27" pos:column="11">pTab<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">pSelect<pos:position pos:line="27" pos:column="24"/></name></name><operator pos:line="27" pos:column="24">==<pos:position pos:line="27" pos:column="26"/></operator><literal type="number" pos:line="27" pos:column="26">0<pos:position pos:line="27" pos:column="27"/></literal></expr></argument> )<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>  <comment type="block" pos:line="27" pos:column="32">/* This table is not a VIEW */</comment>
  <expr_stmt><expr><name pos:line="28" pos:column="3">nCol<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <name><name pos:line="28" pos:column="10">pTab<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">nCol<pos:position pos:line="28" pos:column="20"/></name></name></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="29" pos:column="3">regData<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <name pos:line="29" pos:column="13">regRowid<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">+<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="24">1<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>


  <comment type="block" pos:line="32" pos:column="3">/* Test all NOT NULL constraints.
  */</comment>
  <for pos:line="34" pos:column="3">for<control pos:line="34" pos:column="6">(<init><expr><name pos:line="34" pos:column="7">i<pos:position pos:line="34" pos:column="8"/></name><operator pos:line="34" pos:column="8">=<pos:position pos:line="34" pos:column="9"/></operator><literal type="number" pos:line="34" pos:column="9">0<pos:position pos:line="34" pos:column="10"/></literal></expr>;<pos:position pos:line="34" pos:column="11"/></init> <condition><expr><name pos:line="34" pos:column="12">i<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">&lt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">nCol<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></condition> <incr><expr><name pos:line="34" pos:column="20">i<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">++<pos:position pos:line="34" pos:column="23"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="24"/></control><block pos:line="34" pos:column="24">{
    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">( <expr><name pos:line="35" pos:column="9">i<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">==<pos:position pos:line="35" pos:column="12"/></operator><name><name pos:line="35" pos:column="12">pTab<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">-&gt;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="18">iPKey<pos:position pos:line="35" pos:column="23"/></name></name></expr> )<pos:position pos:line="35" pos:column="25"/></condition><then><block pos:line="35" pos:column="25">{
      <continue pos:line="36" pos:column="7">continue;<pos:position pos:line="36" pos:column="16"/></continue>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="38" pos:column="5">onError<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <name><name pos:line="38" pos:column="15">pTab<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">aCol<pos:position pos:line="38" pos:column="25"/></name><index pos:line="38" pos:column="25">[<expr><name pos:line="38" pos:column="26">i<pos:position pos:line="38" pos:column="27"/></name></expr>]<pos:position pos:line="38" pos:column="28"/></index></name><operator pos:line="38" pos:column="28">.<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="29">notNull<pos:position pos:line="38" pos:column="36"/></name></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">( <expr><name pos:line="39" pos:column="9">onError<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">==<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">OE_None<pos:position pos:line="39" pos:column="25"/></name></expr> )<pos:position pos:line="39" pos:column="27"/></condition><then pos:line="39" pos:column="27"> <block type="pseudo"><continue pos:line="39" pos:column="28">continue;<pos:position pos:line="39" pos:column="37"/></continue></block></then></if>
    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">( <expr><name pos:line="40" pos:column="9">overrideError<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">!=<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">OE_Default<pos:position pos:line="40" pos:column="34"/></name></expr> )<pos:position pos:line="40" pos:column="36"/></condition><then><block pos:line="40" pos:column="36">{
      <expr_stmt><expr><name pos:line="41" pos:column="7">onError<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">overrideError<pos:position pos:line="41" pos:column="30"/></name></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then><elseif pos:line="42" pos:column="6">else <if pos:line="42" pos:column="11">if<condition pos:line="42" pos:column="13">( <expr><name pos:line="42" pos:column="15">onError<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">==<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">OE_Default<pos:position pos:line="42" pos:column="34"/></name></expr> )<pos:position pos:line="42" pos:column="36"/></condition><then><block pos:line="42" pos:column="36">{
      <expr_stmt><expr><name pos:line="43" pos:column="7">onError<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <name pos:line="43" pos:column="17">OE_Abort<pos:position pos:line="43" pos:column="25"/></name></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif></if>
    <if pos:line="45" pos:column="5">if<condition pos:line="45" pos:column="7">( <expr><name pos:line="45" pos:column="9">onError<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">==<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">OE_Replace<pos:position pos:line="45" pos:column="28"/></name> <operator pos:line="45" pos:column="29">&amp;&amp;<pos:position pos:line="45" pos:column="39"/></operator> <name><name pos:line="45" pos:column="32">pTab<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">aCol<pos:position pos:line="45" pos:column="42"/></name><index pos:line="45" pos:column="42">[<expr><name pos:line="45" pos:column="43">i<pos:position pos:line="45" pos:column="44"/></name></expr>]<pos:position pos:line="45" pos:column="45"/></index></name><operator pos:line="45" pos:column="45">.<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="46">pDflt<pos:position pos:line="45" pos:column="51"/></name><operator pos:line="45" pos:column="51">==<pos:position pos:line="45" pos:column="53"/></operator><literal type="number" pos:line="45" pos:column="53">0<pos:position pos:line="45" pos:column="54"/></literal></expr> )<pos:position pos:line="45" pos:column="56"/></condition><then><block pos:line="45" pos:column="56">{
      <expr_stmt><expr><name pos:line="46" pos:column="7">onError<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <name pos:line="46" pos:column="17">OE_Abort<pos:position pos:line="46" pos:column="25"/></name></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">assert<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">( <argument><expr><name pos:line="48" pos:column="13">onError<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">==<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="22">OE_Rollback<pos:position pos:line="48" pos:column="33"/></name> <operator pos:line="48" pos:column="34">||<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="37">onError<pos:position pos:line="48" pos:column="44"/></name><operator pos:line="48" pos:column="44">==<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="46">OE_Abort<pos:position pos:line="48" pos:column="54"/></name> <operator pos:line="48" pos:column="55">||<pos:position pos:line="48" pos:column="57"/></operator> <name pos:line="48" pos:column="58">onError<pos:position pos:line="48" pos:column="65"/></name><operator pos:line="48" pos:column="65">==<pos:position pos:line="48" pos:column="67"/></operator><name pos:line="48" pos:column="67">OE_Fail<pos:position pos:line="48" pos:column="74"/></name>
        <operator pos:line="49" pos:column="9">||<pos:position pos:line="49" pos:column="11"/></operator> <name pos:line="49" pos:column="12">onError<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">==<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="21">OE_Ignore<pos:position pos:line="49" pos:column="30"/></name> <operator pos:line="49" pos:column="31">||<pos:position pos:line="49" pos:column="33"/></operator> <name pos:line="49" pos:column="34">onError<pos:position pos:line="49" pos:column="41"/></name><operator pos:line="49" pos:column="41">==<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="43">OE_Replace<pos:position pos:line="49" pos:column="53"/></name></expr></argument> )<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></expr_stmt>
    <switch pos:line="50" pos:column="5">switch<condition pos:line="50" pos:column="11">( <expr><name pos:line="50" pos:column="13">onError<pos:position pos:line="50" pos:column="20"/></name></expr> )<pos:position pos:line="50" pos:column="22"/></condition><block pos:line="50" pos:column="22">{
      <case pos:line="51" pos:column="7">case <expr><name pos:line="51" pos:column="12">OE_Rollback<pos:position pos:line="51" pos:column="23"/></name></expr>:<pos:position pos:line="51" pos:column="24"/></case>
      <case pos:line="52" pos:column="7">case <expr><name pos:line="52" pos:column="12">OE_Abort<pos:position pos:line="52" pos:column="20"/></name></expr>:<pos:position pos:line="52" pos:column="21"/></case>
      <case pos:line="53" pos:column="7">case <expr><name pos:line="53" pos:column="12">OE_Fail<pos:position pos:line="53" pos:column="19"/></name></expr>:<pos:position pos:line="53" pos:column="20"/></case> <block pos:line="53" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">char<pos:position pos:line="54" pos:column="13"/></name> <modifier pos:line="54" pos:column="14">*<pos:position pos:line="54" pos:column="15"/></modifier></type><name pos:line="54" pos:column="15">zMsg<pos:position pos:line="54" pos:column="19"/></name></decl>;<pos:position pos:line="54" pos:column="20"/></decl_stmt>
        <expr_stmt><expr><name pos:line="55" pos:column="9">j1<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">sqlite3VdbeAddOp3<pos:position pos:line="55" pos:column="31"/></name><argument_list pos:line="55" pos:column="31">(<argument><expr><name pos:line="55" pos:column="32">v<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="35">OP_HaltIfNull<pos:position pos:line="55" pos:column="48"/></name></expr></argument>,
                                  <argument><expr><name pos:line="56" pos:column="35">SQLITE_CONSTRAINT<pos:position pos:line="56" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="54">onError<pos:position pos:line="56" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="63">regData<pos:position pos:line="56" pos:column="70"/></name><operator pos:line="56" pos:column="70">+<pos:position pos:line="56" pos:column="71"/></operator><name pos:line="56" pos:column="71">i<pos:position pos:line="56" pos:column="72"/></name></expr></argument>)<pos:position pos:line="56" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">zMsg<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">=<pos:position pos:line="57" pos:column="15"/></operator> <call><name pos:line="57" pos:column="16">sqlite3MPrintf<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name><name pos:line="57" pos:column="31">pParse<pos:position pos:line="57" pos:column="37"/></name><operator pos:line="57" pos:column="37">-&gt;<pos:position pos:line="57" pos:column="42"/></operator><name pos:line="57" pos:column="39">db<pos:position pos:line="57" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="43">"%s.%s may not be NULL"<pos:position pos:line="57" pos:column="66"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="58" pos:column="31">pTab<pos:position pos:line="58" pos:column="35"/></name><operator pos:line="58" pos:column="35">-&gt;<pos:position pos:line="58" pos:column="40"/></operator><name pos:line="58" pos:column="37">zName<pos:position pos:line="58" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="44">pTab<pos:position pos:line="58" pos:column="48"/></name><operator pos:line="58" pos:column="48">-&gt;<pos:position pos:line="58" pos:column="53"/></operator><name pos:line="58" pos:column="50">aCol<pos:position pos:line="58" pos:column="54"/></name><index pos:line="58" pos:column="54">[<expr><name pos:line="58" pos:column="55">i<pos:position pos:line="58" pos:column="56"/></name></expr>]<pos:position pos:line="58" pos:column="57"/></index></name><operator pos:line="58" pos:column="57">.<pos:position pos:line="58" pos:column="58"/></operator><name pos:line="58" pos:column="58">zName<pos:position pos:line="58" pos:column="63"/></name></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">sqlite3VdbeChangeP4<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">v<pos:position pos:line="59" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="32">-<pos:position pos:line="59" pos:column="33"/></operator><literal type="number" pos:line="59" pos:column="33">1<pos:position pos:line="59" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="36">zMsg<pos:position pos:line="59" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="42">P4_DYNAMIC<pos:position pos:line="59" pos:column="52"/></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>
        <break pos:line="60" pos:column="9">break;<pos:position pos:line="60" pos:column="15"/></break>
      }<pos:position pos:line="61" pos:column="8"/></block>
      <case pos:line="62" pos:column="7">case <expr><name pos:line="62" pos:column="12">OE_Ignore<pos:position pos:line="62" pos:column="21"/></name></expr>:<pos:position pos:line="62" pos:column="22"/></case> <block pos:line="62" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="63" pos:column="26"/></name><argument_list pos:line="63" pos:column="26">(<argument><expr><name pos:line="63" pos:column="27">v<pos:position pos:line="63" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="30">OP_IsNull<pos:position pos:line="63" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="41">regData<pos:position pos:line="63" pos:column="48"/></name><operator pos:line="63" pos:column="48">+<pos:position pos:line="63" pos:column="49"/></operator><name pos:line="63" pos:column="49">i<pos:position pos:line="63" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="52">ignoreDest<pos:position pos:line="63" pos:column="62"/></name></expr></argument>)<pos:position pos:line="63" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="64"/></expr_stmt>
        <break pos:line="64" pos:column="9">break;<pos:position pos:line="64" pos:column="15"/></break>
      }<pos:position pos:line="65" pos:column="8"/></block>
      <default pos:line="66" pos:column="7">default:<pos:position pos:line="66" pos:column="15"/></default> <block pos:line="66" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">assert<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">( <argument><expr><name pos:line="67" pos:column="17">onError<pos:position pos:line="67" pos:column="24"/></name><operator pos:line="67" pos:column="24">==<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="26">OE_Replace<pos:position pos:line="67" pos:column="36"/></name></expr></argument> )<pos:position pos:line="67" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="68" pos:column="9">j1<pos:position pos:line="68" pos:column="11"/></name> <operator pos:line="68" pos:column="12">=<pos:position pos:line="68" pos:column="13"/></operator> <call><name pos:line="68" pos:column="14">sqlite3VdbeAddOp1<pos:position pos:line="68" pos:column="31"/></name><argument_list pos:line="68" pos:column="31">(<argument><expr><name pos:line="68" pos:column="32">v<pos:position pos:line="68" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="35">OP_NotNull<pos:position pos:line="68" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="47">regData<pos:position pos:line="68" pos:column="54"/></name><operator pos:line="68" pos:column="54">+<pos:position pos:line="68" pos:column="55"/></operator><name pos:line="68" pos:column="55">i<pos:position pos:line="68" pos:column="56"/></name></expr></argument>)<pos:position pos:line="68" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">sqlite3ExprCode<pos:position pos:line="69" pos:column="24"/></name><argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">pParse<pos:position pos:line="69" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="33">pTab<pos:position pos:line="69" pos:column="37"/></name><operator pos:line="69" pos:column="37">-&gt;<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="39">aCol<pos:position pos:line="69" pos:column="43"/></name><index pos:line="69" pos:column="43">[<expr><name pos:line="69" pos:column="44">i<pos:position pos:line="69" pos:column="45"/></name></expr>]<pos:position pos:line="69" pos:column="46"/></index></name><operator pos:line="69" pos:column="46">.<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="47">pDflt<pos:position pos:line="69" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="54">regData<pos:position pos:line="69" pos:column="61"/></name><operator pos:line="69" pos:column="61">+<pos:position pos:line="69" pos:column="62"/></operator><name pos:line="69" pos:column="62">i<pos:position pos:line="69" pos:column="63"/></name></expr></argument>)<pos:position pos:line="69" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">sqlite3VdbeJumpHere<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><name pos:line="70" pos:column="29">v<pos:position pos:line="70" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="32">j1<pos:position pos:line="70" pos:column="34"/></name></expr></argument>)<pos:position pos:line="70" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="36"/></expr_stmt>
        <break pos:line="71" pos:column="9">break;<pos:position pos:line="71" pos:column="15"/></break>
      }<pos:position pos:line="72" pos:column="8"/></block>
    }<pos:position pos:line="73" pos:column="6"/></block></switch>
  }<pos:position pos:line="74" pos:column="4"/></block></for>

  <comment type="block" pos:line="76" pos:column="3">/* Test all CHECK constraints
  */</comment>
<cpp:ifndef pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">ifndef<pos:position pos:line="78" pos:column="8"/></cpp:directive> <name pos:line="78" pos:column="9">SQLITE_OMIT_CHECK<pos:position pos:line="78" pos:column="26"/></name></cpp:ifndef>
  <if pos:line="79" pos:column="3">if<condition pos:line="79" pos:column="5">( <expr><name><name pos:line="79" pos:column="7">pTab<pos:position pos:line="79" pos:column="11"/></name><operator pos:line="79" pos:column="11">-&gt;<pos:position pos:line="79" pos:column="16"/></operator><name pos:line="79" pos:column="13">pCheck<pos:position pos:line="79" pos:column="19"/></name></name> <operator pos:line="79" pos:column="20">&amp;&amp;<pos:position pos:line="79" pos:column="30"/></operator> <operator pos:line="79" pos:column="23">(<pos:position pos:line="79" pos:column="24"/></operator><name><name pos:line="79" pos:column="24">pParse<pos:position pos:line="79" pos:column="30"/></name><operator pos:line="79" pos:column="30">-&gt;<pos:position pos:line="79" pos:column="35"/></operator><name pos:line="79" pos:column="32">db<pos:position pos:line="79" pos:column="34"/></name><operator pos:line="79" pos:column="34">-&gt;<pos:position pos:line="79" pos:column="39"/></operator><name pos:line="79" pos:column="36">flags<pos:position pos:line="79" pos:column="41"/></name></name> <operator pos:line="79" pos:column="42">&amp;<pos:position pos:line="79" pos:column="47"/></operator> <name pos:line="79" pos:column="44">SQLITE_IgnoreChecks<pos:position pos:line="79" pos:column="63"/></name><operator pos:line="79" pos:column="63">)<pos:position pos:line="79" pos:column="64"/></operator><operator pos:line="79" pos:column="64">==<pos:position pos:line="79" pos:column="66"/></operator><literal type="number" pos:line="79" pos:column="66">0<pos:position pos:line="79" pos:column="67"/></literal></expr> )<pos:position pos:line="79" pos:column="69"/></condition><then><block pos:line="79" pos:column="69">{
    <decl_stmt><decl><type><name pos:line="80" pos:column="5">int<pos:position pos:line="80" pos:column="8"/></name></type> <name pos:line="80" pos:column="9">allOk<pos:position pos:line="80" pos:column="14"/></name> <init pos:line="80" pos:column="15">= <expr><call><name pos:line="80" pos:column="17">sqlite3VdbeMakeLabel<pos:position pos:line="80" pos:column="37"/></name><argument_list pos:line="80" pos:column="37">(<argument><expr><name pos:line="80" pos:column="38">v<pos:position pos:line="80" pos:column="39"/></name></expr></argument>)<pos:position pos:line="80" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="80" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">pParse<pos:position pos:line="81" pos:column="11"/></name><operator pos:line="81" pos:column="11">-&gt;<pos:position pos:line="81" pos:column="16"/></operator><name pos:line="81" pos:column="13">ckBase<pos:position pos:line="81" pos:column="19"/></name></name> <operator pos:line="81" pos:column="20">=<pos:position pos:line="81" pos:column="21"/></operator> <name pos:line="81" pos:column="22">regData<pos:position pos:line="81" pos:column="29"/></name></expr>;<pos:position pos:line="81" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">sqlite3ExprIfTrue<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">(<argument><expr><name pos:line="82" pos:column="23">pParse<pos:position pos:line="82" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="31">pTab<pos:position pos:line="82" pos:column="35"/></name><operator pos:line="82" pos:column="35">-&gt;<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="37">pCheck<pos:position pos:line="82" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="45">allOk<pos:position pos:line="82" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="52">SQLITE_JUMPIFNULL<pos:position pos:line="82" pos:column="69"/></name></expr></argument>)<pos:position pos:line="82" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name pos:line="83" pos:column="5">onError<pos:position pos:line="83" pos:column="12"/></name> <operator pos:line="83" pos:column="13">=<pos:position pos:line="83" pos:column="14"/></operator> <ternary><condition><expr><name pos:line="83" pos:column="15">overrideError<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">!=<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="30">OE_Default<pos:position pos:line="83" pos:column="40"/></name></expr> ?<pos:position pos:line="83" pos:column="42"/></condition><then pos:line="83" pos:column="42"> <expr><name pos:line="83" pos:column="43">overrideError<pos:position pos:line="83" pos:column="56"/></name></expr> <pos:position pos:line="83" pos:column="57"/></then><else pos:line="83" pos:column="57">: <expr><name pos:line="83" pos:column="59">OE_Abort<pos:position pos:line="83" pos:column="67"/></name></expr></else></ternary></expr>;<pos:position pos:line="83" pos:column="68"/></expr_stmt>
    <if pos:line="84" pos:column="5">if<condition pos:line="84" pos:column="7">( <expr><name pos:line="84" pos:column="9">onError<pos:position pos:line="84" pos:column="16"/></name><operator pos:line="84" pos:column="16">==<pos:position pos:line="84" pos:column="18"/></operator><name pos:line="84" pos:column="18">OE_Ignore<pos:position pos:line="84" pos:column="27"/></name></expr> )<pos:position pos:line="84" pos:column="29"/></condition><then><block pos:line="84" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="85" pos:column="7">sqlite3VdbeAddOp2<pos:position pos:line="85" pos:column="24"/></name><argument_list pos:line="85" pos:column="24">(<argument><expr><name pos:line="85" pos:column="25">v<pos:position pos:line="85" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="28">OP_Goto<pos:position pos:line="85" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="37">0<pos:position pos:line="85" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="40">ignoreDest<pos:position pos:line="85" pos:column="50"/></name></expr></argument>)<pos:position pos:line="85" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></then><else pos:line="86" pos:column="6">else<block pos:line="86" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">sqlite3VdbeAddOp2<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">(<argument><expr><name pos:line="87" pos:column="25">v<pos:position pos:line="87" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="28">OP_Halt<pos:position pos:line="87" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="37">SQLITE_CONSTRAINT<pos:position pos:line="87" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="56">onError<pos:position pos:line="87" pos:column="63"/></name></expr></argument>)<pos:position pos:line="87" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">sqlite3VdbeResolveLabel<pos:position pos:line="89" pos:column="28"/></name><argument_list pos:line="89" pos:column="28">(<argument><expr><name pos:line="89" pos:column="29">v<pos:position pos:line="89" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="32">allOk<pos:position pos:line="89" pos:column="37"/></name></expr></argument>)<pos:position pos:line="89" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="90" pos:column="4"/></block></then></if>
<cpp:endif pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">endif<pos:position pos:line="91" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="91" pos:column="8">/* !defined(SQLITE_OMIT_CHECK) */</comment>

  <comment type="block" pos:line="93" pos:column="3">/* If we have an INTEGER PRIMARY KEY, make sure the primary key
  ** of the new record does not previously exist.  Except, if this
  ** is an UPDATE and the primary key is not changing, that is OK.
  */</comment>
  <if pos:line="97" pos:column="3">if<condition pos:line="97" pos:column="5">( <expr><name pos:line="97" pos:column="7">rowidChng<pos:position pos:line="97" pos:column="16"/></name></expr> )<pos:position pos:line="97" pos:column="18"/></condition><then><block pos:line="97" pos:column="18">{
    <expr_stmt><expr><name pos:line="98" pos:column="5">onError<pos:position pos:line="98" pos:column="12"/></name> <operator pos:line="98" pos:column="13">=<pos:position pos:line="98" pos:column="14"/></operator> <name><name pos:line="98" pos:column="15">pTab<pos:position pos:line="98" pos:column="19"/></name><operator pos:line="98" pos:column="19">-&gt;<pos:position pos:line="98" pos:column="24"/></operator><name pos:line="98" pos:column="21">keyConf<pos:position pos:line="98" pos:column="28"/></name></name></expr>;<pos:position pos:line="98" pos:column="29"/></expr_stmt>
    <if pos:line="99" pos:column="5">if<condition pos:line="99" pos:column="7">( <expr><name pos:line="99" pos:column="9">overrideError<pos:position pos:line="99" pos:column="22"/></name><operator pos:line="99" pos:column="22">!=<pos:position pos:line="99" pos:column="24"/></operator><name pos:line="99" pos:column="24">OE_Default<pos:position pos:line="99" pos:column="34"/></name></expr> )<pos:position pos:line="99" pos:column="36"/></condition><then><block pos:line="99" pos:column="36">{
      <expr_stmt><expr><name pos:line="100" pos:column="7">onError<pos:position pos:line="100" pos:column="14"/></name> <operator pos:line="100" pos:column="15">=<pos:position pos:line="100" pos:column="16"/></operator> <name pos:line="100" pos:column="17">overrideError<pos:position pos:line="100" pos:column="30"/></name></expr>;<pos:position pos:line="100" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then><elseif pos:line="101" pos:column="6">else <if pos:line="101" pos:column="11">if<condition pos:line="101" pos:column="13">( <expr><name pos:line="101" pos:column="15">onError<pos:position pos:line="101" pos:column="22"/></name><operator pos:line="101" pos:column="22">==<pos:position pos:line="101" pos:column="24"/></operator><name pos:line="101" pos:column="24">OE_Default<pos:position pos:line="101" pos:column="34"/></name></expr> )<pos:position pos:line="101" pos:column="36"/></condition><then><block pos:line="101" pos:column="36">{
      <expr_stmt><expr><name pos:line="102" pos:column="7">onError<pos:position pos:line="102" pos:column="14"/></name> <operator pos:line="102" pos:column="15">=<pos:position pos:line="102" pos:column="16"/></operator> <name pos:line="102" pos:column="17">OE_Abort<pos:position pos:line="102" pos:column="25"/></name></expr>;<pos:position pos:line="102" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if></elseif></if>
    
    <if pos:line="105" pos:column="5">if<condition pos:line="105" pos:column="7">( <expr><name pos:line="105" pos:column="9">onError<pos:position pos:line="105" pos:column="16"/></name><operator pos:line="105" pos:column="16">!=<pos:position pos:line="105" pos:column="18"/></operator><name pos:line="105" pos:column="18">OE_Replace<pos:position pos:line="105" pos:column="28"/></name> <operator pos:line="105" pos:column="29">||<pos:position pos:line="105" pos:column="31"/></operator> <name><name pos:line="105" pos:column="32">pTab<pos:position pos:line="105" pos:column="36"/></name><operator pos:line="105" pos:column="36">-&gt;<pos:position pos:line="105" pos:column="41"/></operator><name pos:line="105" pos:column="38">pIndex<pos:position pos:line="105" pos:column="44"/></name></name></expr> )<pos:position pos:line="105" pos:column="46"/></condition><then><block pos:line="105" pos:column="46">{
      <if pos:line="106" pos:column="7">if<condition pos:line="106" pos:column="9">( <expr><name pos:line="106" pos:column="11">isUpdate<pos:position pos:line="106" pos:column="19"/></name></expr> )<pos:position pos:line="106" pos:column="21"/></condition><then><block pos:line="106" pos:column="21">{
        <expr_stmt><expr><name pos:line="107" pos:column="9">j2<pos:position pos:line="107" pos:column="11"/></name> <operator pos:line="107" pos:column="12">=<pos:position pos:line="107" pos:column="13"/></operator> <call><name pos:line="107" pos:column="14">sqlite3VdbeAddOp3<pos:position pos:line="107" pos:column="31"/></name><argument_list pos:line="107" pos:column="31">(<argument><expr><name pos:line="107" pos:column="32">v<pos:position pos:line="107" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="35">OP_Eq<pos:position pos:line="107" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="42">regRowid<pos:position pos:line="107" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="52">0<pos:position pos:line="107" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="55">regRowid<pos:position pos:line="107" pos:column="63"/></name><operator pos:line="107" pos:column="63">-<pos:position pos:line="107" pos:column="64"/></operator><literal type="number" pos:line="107" pos:column="64">1<pos:position pos:line="107" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="67"/></expr_stmt>
      }<pos:position pos:line="108" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="109" pos:column="7">j3<pos:position pos:line="109" pos:column="9"/></name> <operator pos:line="109" pos:column="10">=<pos:position pos:line="109" pos:column="11"/></operator> <call><name pos:line="109" pos:column="12">sqlite3VdbeAddOp3<pos:position pos:line="109" pos:column="29"/></name><argument_list pos:line="109" pos:column="29">(<argument><expr><name pos:line="109" pos:column="30">v<pos:position pos:line="109" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="33">OP_NotExists<pos:position pos:line="109" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="47">baseCur<pos:position pos:line="109" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="56">0<pos:position pos:line="109" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="59">regRowid<pos:position pos:line="109" pos:column="67"/></name></expr></argument>)<pos:position pos:line="109" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="69"/></expr_stmt>
      <switch pos:line="110" pos:column="7">switch<condition pos:line="110" pos:column="13">( <expr><name pos:line="110" pos:column="15">onError<pos:position pos:line="110" pos:column="22"/></name></expr> )<pos:position pos:line="110" pos:column="24"/></condition><block pos:line="110" pos:column="24">{
        <default pos:line="111" pos:column="9">default:<pos:position pos:line="111" pos:column="17"/></default> <block pos:line="111" pos:column="18">{
          <expr_stmt><expr><name pos:line="112" pos:column="11">onError<pos:position pos:line="112" pos:column="18"/></name> <operator pos:line="112" pos:column="19">=<pos:position pos:line="112" pos:column="20"/></operator> <name pos:line="112" pos:column="21">OE_Abort<pos:position pos:line="112" pos:column="29"/></name></expr>;<pos:position pos:line="112" pos:column="30"/></expr_stmt>
          <comment type="block" pos:line="113" pos:column="11">/* Fall thru into the next case */</comment>
        }<pos:position pos:line="114" pos:column="10"/></block>
        <case pos:line="115" pos:column="9">case <expr><name pos:line="115" pos:column="14">OE_Rollback<pos:position pos:line="115" pos:column="25"/></name></expr>:<pos:position pos:line="115" pos:column="26"/></case>
        <case pos:line="116" pos:column="9">case <expr><name pos:line="116" pos:column="14">OE_Abort<pos:position pos:line="116" pos:column="22"/></name></expr>:<pos:position pos:line="116" pos:column="23"/></case>
        <case pos:line="117" pos:column="9">case <expr><name pos:line="117" pos:column="14">OE_Fail<pos:position pos:line="117" pos:column="21"/></name></expr>:<pos:position pos:line="117" pos:column="22"/></case> <block pos:line="117" pos:column="23">{
          <expr_stmt><expr><call><name pos:line="118" pos:column="11">sqlite3VdbeAddOp4<pos:position pos:line="118" pos:column="28"/></name><argument_list pos:line="118" pos:column="28">(<argument><expr><name pos:line="118" pos:column="29">v<pos:position pos:line="118" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="32">OP_Halt<pos:position pos:line="118" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="41">SQLITE_CONSTRAINT<pos:position pos:line="118" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="60">onError<pos:position pos:line="118" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="69">0<pos:position pos:line="118" pos:column="70"/></literal></expr></argument>,
                           <argument><expr><literal type="string" pos:line="119" pos:column="28">"PRIMARY KEY must be unique"<pos:position pos:line="119" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="119" pos:column="58">P4_STATIC<pos:position pos:line="119" pos:column="67"/></name></expr></argument>)<pos:position pos:line="119" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="69"/></expr_stmt>
          <break pos:line="120" pos:column="11">break;<pos:position pos:line="120" pos:column="17"/></break>
        }<pos:position pos:line="121" pos:column="10"/></block>
        <case pos:line="122" pos:column="9">case <expr><name pos:line="122" pos:column="14">OE_Replace<pos:position pos:line="122" pos:column="24"/></name></expr>:<pos:position pos:line="122" pos:column="25"/></case> <block pos:line="122" pos:column="26">{
          <expr_stmt><expr><call><name pos:line="123" pos:column="11">sqlite3GenerateRowIndexDelete<pos:position pos:line="123" pos:column="40"/></name><argument_list pos:line="123" pos:column="40">(<argument><expr><name pos:line="123" pos:column="41">pParse<pos:position pos:line="123" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="49">pTab<pos:position pos:line="123" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="55">baseCur<pos:position pos:line="123" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="64">0<pos:position pos:line="123" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="67"/></expr_stmt>
          <expr_stmt><expr><name pos:line="124" pos:column="11">seenReplace<pos:position pos:line="124" pos:column="22"/></name> <operator pos:line="124" pos:column="23">=<pos:position pos:line="124" pos:column="24"/></operator> <literal type="number" pos:line="124" pos:column="25">1<pos:position pos:line="124" pos:column="26"/></literal></expr>;<pos:position pos:line="124" pos:column="27"/></expr_stmt>
          <break pos:line="125" pos:column="11">break;<pos:position pos:line="125" pos:column="17"/></break>
        }<pos:position pos:line="126" pos:column="10"/></block>
        <case pos:line="127" pos:column="9">case <expr><name pos:line="127" pos:column="14">OE_Ignore<pos:position pos:line="127" pos:column="23"/></name></expr>:<pos:position pos:line="127" pos:column="24"/></case> <block pos:line="127" pos:column="25">{
          <expr_stmt><expr><call><name pos:line="128" pos:column="11">assert<pos:position pos:line="128" pos:column="17"/></name><argument_list pos:line="128" pos:column="17">( <argument><expr><name pos:line="128" pos:column="19">seenReplace<pos:position pos:line="128" pos:column="30"/></name><operator pos:line="128" pos:column="30">==<pos:position pos:line="128" pos:column="32"/></operator><literal type="number" pos:line="128" pos:column="32">0<pos:position pos:line="128" pos:column="33"/></literal></expr></argument> )<pos:position pos:line="128" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="36"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="129" pos:column="11">sqlite3VdbeAddOp2<pos:position pos:line="129" pos:column="28"/></name><argument_list pos:line="129" pos:column="28">(<argument><expr><name pos:line="129" pos:column="29">v<pos:position pos:line="129" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="32">OP_Goto<pos:position pos:line="129" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="41">0<pos:position pos:line="129" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="44">ignoreDest<pos:position pos:line="129" pos:column="54"/></name></expr></argument>)<pos:position pos:line="129" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="56"/></expr_stmt>
          <break pos:line="130" pos:column="11">break;<pos:position pos:line="130" pos:column="17"/></break>
        }<pos:position pos:line="131" pos:column="10"/></block>
      }<pos:position pos:line="132" pos:column="8"/></block></switch>
      <expr_stmt><expr><call><name pos:line="133" pos:column="7">sqlite3VdbeJumpHere<pos:position pos:line="133" pos:column="26"/></name><argument_list pos:line="133" pos:column="26">(<argument><expr><name pos:line="133" pos:column="27">v<pos:position pos:line="133" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="30">j3<pos:position pos:line="133" pos:column="32"/></name></expr></argument>)<pos:position pos:line="133" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="34"/></expr_stmt>
      <if pos:line="134" pos:column="7">if<condition pos:line="134" pos:column="9">( <expr><name pos:line="134" pos:column="11">isUpdate<pos:position pos:line="134" pos:column="19"/></name></expr> )<pos:position pos:line="134" pos:column="21"/></condition><then><block pos:line="134" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="135" pos:column="9">sqlite3VdbeJumpHere<pos:position pos:line="135" pos:column="28"/></name><argument_list pos:line="135" pos:column="28">(<argument><expr><name pos:line="135" pos:column="29">v<pos:position pos:line="135" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="32">j2<pos:position pos:line="135" pos:column="34"/></name></expr></argument>)<pos:position pos:line="135" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="136" pos:column="8"/></block></then></if>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if>
  }<pos:position pos:line="138" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="140" pos:column="3">/* Test all UNIQUE constraints by creating entries for each UNIQUE
  ** index and making sure that duplicate entries do not already exist.
  ** Add the new records to the indices as we go.
  */</comment>
  <for pos:line="144" pos:column="3">for<control pos:line="144" pos:column="6">(<init><expr><name pos:line="144" pos:column="7">iCur<pos:position pos:line="144" pos:column="11"/></name><operator pos:line="144" pos:column="11">=<pos:position pos:line="144" pos:column="12"/></operator><literal type="number" pos:line="144" pos:column="12">0<pos:position pos:line="144" pos:column="13"/></literal></expr><operator pos:line="144" pos:column="13">,<pos:position pos:line="144" pos:column="14"/></operator> <expr><name pos:line="144" pos:column="15">pIdx<pos:position pos:line="144" pos:column="19"/></name><operator pos:line="144" pos:column="19">=<pos:position pos:line="144" pos:column="20"/></operator><name><name pos:line="144" pos:column="20">pTab<pos:position pos:line="144" pos:column="24"/></name><operator pos:line="144" pos:column="24">-&gt;<pos:position pos:line="144" pos:column="29"/></operator><name pos:line="144" pos:column="26">pIndex<pos:position pos:line="144" pos:column="32"/></name></name></expr>;<pos:position pos:line="144" pos:column="33"/></init> <condition><expr><name pos:line="144" pos:column="34">pIdx<pos:position pos:line="144" pos:column="38"/></name></expr>;<pos:position pos:line="144" pos:column="39"/></condition> <incr><expr><name pos:line="144" pos:column="40">pIdx<pos:position pos:line="144" pos:column="44"/></name><operator pos:line="144" pos:column="44">=<pos:position pos:line="144" pos:column="45"/></operator><name><name pos:line="144" pos:column="45">pIdx<pos:position pos:line="144" pos:column="49"/></name><operator pos:line="144" pos:column="49">-&gt;<pos:position pos:line="144" pos:column="54"/></operator><name pos:line="144" pos:column="51">pNext<pos:position pos:line="144" pos:column="56"/></name></name></expr><operator pos:line="144" pos:column="56">,<pos:position pos:line="144" pos:column="57"/></operator> <expr><name pos:line="144" pos:column="58">iCur<pos:position pos:line="144" pos:column="62"/></name><operator pos:line="144" pos:column="62">++<pos:position pos:line="144" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="144" pos:column="65"/></control><block pos:line="144" pos:column="65">{
    <decl_stmt><decl><type><name pos:line="145" pos:column="5">int<pos:position pos:line="145" pos:column="8"/></name></type> <name pos:line="145" pos:column="9">regIdx<pos:position pos:line="145" pos:column="15"/></name></decl>;<pos:position pos:line="145" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="146" pos:column="5">int<pos:position pos:line="146" pos:column="8"/></name></type> <name pos:line="146" pos:column="9">regR<pos:position pos:line="146" pos:column="13"/></name></decl>;<pos:position pos:line="146" pos:column="14"/></decl_stmt>

    <if pos:line="148" pos:column="5">if<condition pos:line="148" pos:column="7">( <expr><name><name pos:line="148" pos:column="9">aRegIdx<pos:position pos:line="148" pos:column="16"/></name><index pos:line="148" pos:column="16">[<expr><name pos:line="148" pos:column="17">iCur<pos:position pos:line="148" pos:column="21"/></name></expr>]<pos:position pos:line="148" pos:column="22"/></index></name><operator pos:line="148" pos:column="22">==<pos:position pos:line="148" pos:column="24"/></operator><literal type="number" pos:line="148" pos:column="24">0<pos:position pos:line="148" pos:column="25"/></literal></expr> )<pos:position pos:line="148" pos:column="27"/></condition><then pos:line="148" pos:column="27"> <block type="pseudo"><continue pos:line="148" pos:column="28">continue;<pos:position pos:line="148" pos:column="37"/></continue></block></then></if>  <comment type="block" pos:line="148" pos:column="39">/* Skip unused indices */</comment>

    <comment type="block" pos:line="150" pos:column="5">/* Create a key for accessing the index entry */</comment>
    <expr_stmt><expr><name pos:line="151" pos:column="5">regIdx<pos:position pos:line="151" pos:column="11"/></name> <operator pos:line="151" pos:column="12">=<pos:position pos:line="151" pos:column="13"/></operator> <call><name pos:line="151" pos:column="14">sqlite3GetTempRange<pos:position pos:line="151" pos:column="33"/></name><argument_list pos:line="151" pos:column="33">(<argument><expr><name pos:line="151" pos:column="34">pParse<pos:position pos:line="151" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="42">pIdx<pos:position pos:line="151" pos:column="46"/></name><operator pos:line="151" pos:column="46">-&gt;<pos:position pos:line="151" pos:column="51"/></operator><name pos:line="151" pos:column="48">nColumn<pos:position pos:line="151" pos:column="55"/></name></name><operator pos:line="151" pos:column="55">+<pos:position pos:line="151" pos:column="56"/></operator><literal type="number" pos:line="151" pos:column="56">1<pos:position pos:line="151" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="59"/></expr_stmt>
    <for pos:line="152" pos:column="5">for<control pos:line="152" pos:column="8">(<init><expr><name pos:line="152" pos:column="9">i<pos:position pos:line="152" pos:column="10"/></name><operator pos:line="152" pos:column="10">=<pos:position pos:line="152" pos:column="11"/></operator><literal type="number" pos:line="152" pos:column="11">0<pos:position pos:line="152" pos:column="12"/></literal></expr>;<pos:position pos:line="152" pos:column="13"/></init> <condition><expr><name pos:line="152" pos:column="14">i<pos:position pos:line="152" pos:column="15"/></name><operator pos:line="152" pos:column="15">&lt;<pos:position pos:line="152" pos:column="19"/></operator><name><name pos:line="152" pos:column="16">pIdx<pos:position pos:line="152" pos:column="20"/></name><operator pos:line="152" pos:column="20">-&gt;<pos:position pos:line="152" pos:column="25"/></operator><name pos:line="152" pos:column="22">nColumn<pos:position pos:line="152" pos:column="29"/></name></name></expr>;<pos:position pos:line="152" pos:column="30"/></condition> <incr><expr><name pos:line="152" pos:column="31">i<pos:position pos:line="152" pos:column="32"/></name><operator pos:line="152" pos:column="32">++<pos:position pos:line="152" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="152" pos:column="35"/></control><block pos:line="152" pos:column="35">{
      <decl_stmt><decl><type><name pos:line="153" pos:column="7">int<pos:position pos:line="153" pos:column="10"/></name></type> <name pos:line="153" pos:column="11">idx<pos:position pos:line="153" pos:column="14"/></name> <init pos:line="153" pos:column="15">= <expr><name><name pos:line="153" pos:column="17">pIdx<pos:position pos:line="153" pos:column="21"/></name><operator pos:line="153" pos:column="21">-&gt;<pos:position pos:line="153" pos:column="26"/></operator><name pos:line="153" pos:column="23">aiColumn<pos:position pos:line="153" pos:column="31"/></name><index pos:line="153" pos:column="31">[<expr><name pos:line="153" pos:column="32">i<pos:position pos:line="153" pos:column="33"/></name></expr>]<pos:position pos:line="153" pos:column="34"/></index></name></expr></init></decl>;<pos:position pos:line="153" pos:column="35"/></decl_stmt>
      <if pos:line="154" pos:column="7">if<condition pos:line="154" pos:column="9">( <expr><name pos:line="154" pos:column="11">idx<pos:position pos:line="154" pos:column="14"/></name><operator pos:line="154" pos:column="14">==<pos:position pos:line="154" pos:column="16"/></operator><name><name pos:line="154" pos:column="16">pTab<pos:position pos:line="154" pos:column="20"/></name><operator pos:line="154" pos:column="20">-&gt;<pos:position pos:line="154" pos:column="25"/></operator><name pos:line="154" pos:column="22">iPKey<pos:position pos:line="154" pos:column="27"/></name></name></expr> )<pos:position pos:line="154" pos:column="29"/></condition><then><block pos:line="154" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="155" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="155" pos:column="26"/></name><argument_list pos:line="155" pos:column="26">(<argument><expr><name pos:line="155" pos:column="27">v<pos:position pos:line="155" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="30">OP_SCopy<pos:position pos:line="155" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="40">regRowid<pos:position pos:line="155" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="50">regIdx<pos:position pos:line="155" pos:column="56"/></name><operator pos:line="155" pos:column="56">+<pos:position pos:line="155" pos:column="57"/></operator><name pos:line="155" pos:column="57">i<pos:position pos:line="155" pos:column="58"/></name></expr></argument>)<pos:position pos:line="155" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="156" pos:column="8"/></block></then><else pos:line="156" pos:column="8">else<block pos:line="156" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="157" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="157" pos:column="26"/></name><argument_list pos:line="157" pos:column="26">(<argument><expr><name pos:line="157" pos:column="27">v<pos:position pos:line="157" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="30">OP_SCopy<pos:position pos:line="157" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="40">regData<pos:position pos:line="157" pos:column="47"/></name><operator pos:line="157" pos:column="47">+<pos:position pos:line="157" pos:column="48"/></operator><name pos:line="157" pos:column="48">idx<pos:position pos:line="157" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="53">regIdx<pos:position pos:line="157" pos:column="59"/></name><operator pos:line="157" pos:column="59">+<pos:position pos:line="157" pos:column="60"/></operator><name pos:line="157" pos:column="60">i<pos:position pos:line="157" pos:column="61"/></name></expr></argument>)<pos:position pos:line="157" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="63"/></expr_stmt>
      }<pos:position pos:line="158" pos:column="8"/></block></else></if>
    }<pos:position pos:line="159" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="160" pos:column="5">sqlite3VdbeAddOp2<pos:position pos:line="160" pos:column="22"/></name><argument_list pos:line="160" pos:column="22">(<argument><expr><name pos:line="160" pos:column="23">v<pos:position pos:line="160" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="26">OP_SCopy<pos:position pos:line="160" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="36">regRowid<pos:position pos:line="160" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="46">regIdx<pos:position pos:line="160" pos:column="52"/></name><operator pos:line="160" pos:column="52">+<pos:position pos:line="160" pos:column="53"/></operator><name pos:line="160" pos:column="53">i<pos:position pos:line="160" pos:column="54"/></name></expr></argument>)<pos:position pos:line="160" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="161" pos:column="5">sqlite3VdbeAddOp3<pos:position pos:line="161" pos:column="22"/></name><argument_list pos:line="161" pos:column="22">(<argument><expr><name pos:line="161" pos:column="23">v<pos:position pos:line="161" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="26">OP_MakeRecord<pos:position pos:line="161" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="41">regIdx<pos:position pos:line="161" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="49">pIdx<pos:position pos:line="161" pos:column="53"/></name><operator pos:line="161" pos:column="53">-&gt;<pos:position pos:line="161" pos:column="58"/></operator><name pos:line="161" pos:column="55">nColumn<pos:position pos:line="161" pos:column="62"/></name></name><operator pos:line="161" pos:column="62">+<pos:position pos:line="161" pos:column="63"/></operator><literal type="number" pos:line="161" pos:column="63">1<pos:position pos:line="161" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="66">aRegIdx<pos:position pos:line="161" pos:column="73"/></name><index pos:line="161" pos:column="73">[<expr><name pos:line="161" pos:column="74">iCur<pos:position pos:line="161" pos:column="78"/></name></expr>]<pos:position pos:line="161" pos:column="79"/></index></name></expr></argument>)<pos:position pos:line="161" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="162" pos:column="5">sqlite3IndexAffinityStr<pos:position pos:line="162" pos:column="28"/></name><argument_list pos:line="162" pos:column="28">(<argument><expr><name pos:line="162" pos:column="29">v<pos:position pos:line="162" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="32">pIdx<pos:position pos:line="162" pos:column="36"/></name></expr></argument>)<pos:position pos:line="162" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="163" pos:column="5">sqlite3ExprCacheAffinityChange<pos:position pos:line="163" pos:column="35"/></name><argument_list pos:line="163" pos:column="35">(<argument><expr><name pos:line="163" pos:column="36">pParse<pos:position pos:line="163" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="44">regIdx<pos:position pos:line="163" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="163" pos:column="52">pIdx<pos:position pos:line="163" pos:column="56"/></name><operator pos:line="163" pos:column="56">-&gt;<pos:position pos:line="163" pos:column="61"/></operator><name pos:line="163" pos:column="58">nColumn<pos:position pos:line="163" pos:column="65"/></name></name><operator pos:line="163" pos:column="65">+<pos:position pos:line="163" pos:column="66"/></operator><literal type="number" pos:line="163" pos:column="66">1<pos:position pos:line="163" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="69"/></expr_stmt>

    <comment type="block" pos:line="165" pos:column="5">/* Find out what action to take in case there is an indexing conflict */</comment>
    <expr_stmt><expr><name pos:line="166" pos:column="5">onError<pos:position pos:line="166" pos:column="12"/></name> <operator pos:line="166" pos:column="13">=<pos:position pos:line="166" pos:column="14"/></operator> <name><name pos:line="166" pos:column="15">pIdx<pos:position pos:line="166" pos:column="19"/></name><operator pos:line="166" pos:column="19">-&gt;<pos:position pos:line="166" pos:column="24"/></operator><name pos:line="166" pos:column="21">onError<pos:position pos:line="166" pos:column="28"/></name></name></expr>;<pos:position pos:line="166" pos:column="29"/></expr_stmt>
    <if pos:line="167" pos:column="5">if<condition pos:line="167" pos:column="7">( <expr><name pos:line="167" pos:column="9">onError<pos:position pos:line="167" pos:column="16"/></name><operator pos:line="167" pos:column="16">==<pos:position pos:line="167" pos:column="18"/></operator><name pos:line="167" pos:column="18">OE_None<pos:position pos:line="167" pos:column="25"/></name></expr> )<pos:position pos:line="167" pos:column="27"/></condition><then><block pos:line="167" pos:column="27">{ 
      <expr_stmt><expr><call><name pos:line="168" pos:column="7">sqlite3ReleaseTempRange<pos:position pos:line="168" pos:column="30"/></name><argument_list pos:line="168" pos:column="30">(<argument><expr><name pos:line="168" pos:column="31">pParse<pos:position pos:line="168" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="39">regIdx<pos:position pos:line="168" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="47">pIdx<pos:position pos:line="168" pos:column="51"/></name><operator pos:line="168" pos:column="51">-&gt;<pos:position pos:line="168" pos:column="56"/></operator><name pos:line="168" pos:column="53">nColumn<pos:position pos:line="168" pos:column="60"/></name></name><operator pos:line="168" pos:column="60">+<pos:position pos:line="168" pos:column="61"/></operator><literal type="number" pos:line="168" pos:column="61">1<pos:position pos:line="168" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="64"/></expr_stmt>
      <continue pos:line="169" pos:column="7">continue;<pos:position pos:line="169" pos:column="16"/></continue>  <comment type="block" pos:line="169" pos:column="18">/* pIdx is not a UNIQUE index */</comment>
    }<pos:position pos:line="170" pos:column="6"/></block></then></if>
    <if pos:line="171" pos:column="5">if<condition pos:line="171" pos:column="7">( <expr><name pos:line="171" pos:column="9">overrideError<pos:position pos:line="171" pos:column="22"/></name><operator pos:line="171" pos:column="22">!=<pos:position pos:line="171" pos:column="24"/></operator><name pos:line="171" pos:column="24">OE_Default<pos:position pos:line="171" pos:column="34"/></name></expr> )<pos:position pos:line="171" pos:column="36"/></condition><then><block pos:line="171" pos:column="36">{
      <expr_stmt><expr><name pos:line="172" pos:column="7">onError<pos:position pos:line="172" pos:column="14"/></name> <operator pos:line="172" pos:column="15">=<pos:position pos:line="172" pos:column="16"/></operator> <name pos:line="172" pos:column="17">overrideError<pos:position pos:line="172" pos:column="30"/></name></expr>;<pos:position pos:line="172" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="173" pos:column="6"/></block></then><elseif pos:line="173" pos:column="6">else <if pos:line="173" pos:column="11">if<condition pos:line="173" pos:column="13">( <expr><name pos:line="173" pos:column="15">onError<pos:position pos:line="173" pos:column="22"/></name><operator pos:line="173" pos:column="22">==<pos:position pos:line="173" pos:column="24"/></operator><name pos:line="173" pos:column="24">OE_Default<pos:position pos:line="173" pos:column="34"/></name></expr> )<pos:position pos:line="173" pos:column="36"/></condition><then><block pos:line="173" pos:column="36">{
      <expr_stmt><expr><name pos:line="174" pos:column="7">onError<pos:position pos:line="174" pos:column="14"/></name> <operator pos:line="174" pos:column="15">=<pos:position pos:line="174" pos:column="16"/></operator> <name pos:line="174" pos:column="17">OE_Abort<pos:position pos:line="174" pos:column="25"/></name></expr>;<pos:position pos:line="174" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="175" pos:column="6"/></block></then></if></elseif></if>
    <if pos:line="176" pos:column="5">if<condition pos:line="176" pos:column="7">( <expr><name pos:line="176" pos:column="9">seenReplace<pos:position pos:line="176" pos:column="20"/></name></expr> )<pos:position pos:line="176" pos:column="22"/></condition><then><block pos:line="176" pos:column="22">{
      <if pos:line="177" pos:column="7">if<condition pos:line="177" pos:column="9">( <expr><name pos:line="177" pos:column="11">onError<pos:position pos:line="177" pos:column="18"/></name><operator pos:line="177" pos:column="18">==<pos:position pos:line="177" pos:column="20"/></operator><name pos:line="177" pos:column="20">OE_Ignore<pos:position pos:line="177" pos:column="29"/></name></expr> )<pos:position pos:line="177" pos:column="31"/></condition><then pos:line="177" pos:column="31"> <block type="pseudo"><expr_stmt><expr><name pos:line="177" pos:column="32">onError<pos:position pos:line="177" pos:column="39"/></name> <operator pos:line="177" pos:column="40">=<pos:position pos:line="177" pos:column="41"/></operator> <name pos:line="177" pos:column="42">OE_Replace<pos:position pos:line="177" pos:column="52"/></name></expr>;<pos:position pos:line="177" pos:column="53"/></expr_stmt></block></then>
      <elseif pos:line="178" pos:column="7">else <if pos:line="178" pos:column="12">if<condition pos:line="178" pos:column="14">( <expr><name pos:line="178" pos:column="16">onError<pos:position pos:line="178" pos:column="23"/></name><operator pos:line="178" pos:column="23">==<pos:position pos:line="178" pos:column="25"/></operator><name pos:line="178" pos:column="25">OE_Fail<pos:position pos:line="178" pos:column="32"/></name></expr> )<pos:position pos:line="178" pos:column="34"/></condition><then pos:line="178" pos:column="34"> <block type="pseudo"><expr_stmt><expr><name pos:line="178" pos:column="35">onError<pos:position pos:line="178" pos:column="42"/></name> <operator pos:line="178" pos:column="43">=<pos:position pos:line="178" pos:column="44"/></operator> <name pos:line="178" pos:column="45">OE_Abort<pos:position pos:line="178" pos:column="53"/></name></expr>;<pos:position pos:line="178" pos:column="54"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="179" pos:column="6"/></block></then></if>
    

    <comment type="block" pos:line="182" pos:column="5">/* Check to see if the new index entry will be unique */</comment>
    <expr_stmt><expr><name pos:line="183" pos:column="5">regR<pos:position pos:line="183" pos:column="9"/></name> <operator pos:line="183" pos:column="10">=<pos:position pos:line="183" pos:column="11"/></operator> <call><name pos:line="183" pos:column="12">sqlite3GetTempReg<pos:position pos:line="183" pos:column="29"/></name><argument_list pos:line="183" pos:column="29">(<argument><expr><name pos:line="183" pos:column="30">pParse<pos:position pos:line="183" pos:column="36"/></name></expr></argument>)<pos:position pos:line="183" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="184" pos:column="5">sqlite3VdbeAddOp2<pos:position pos:line="184" pos:column="22"/></name><argument_list pos:line="184" pos:column="22">(<argument><expr><name pos:line="184" pos:column="23">v<pos:position pos:line="184" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="26">OP_SCopy<pos:position pos:line="184" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="36">regRowid<pos:position pos:line="184" pos:column="44"/></name><operator pos:line="184" pos:column="44">-<pos:position pos:line="184" pos:column="45"/></operator><name pos:line="184" pos:column="45">hasTwoRowids<pos:position pos:line="184" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="59">regR<pos:position pos:line="184" pos:column="63"/></name></expr></argument>)<pos:position pos:line="184" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name pos:line="185" pos:column="5">j3<pos:position pos:line="185" pos:column="7"/></name> <operator pos:line="185" pos:column="8">=<pos:position pos:line="185" pos:column="9"/></operator> <call><name pos:line="185" pos:column="10">sqlite3VdbeAddOp4<pos:position pos:line="185" pos:column="27"/></name><argument_list pos:line="185" pos:column="27">(<argument><expr><name pos:line="185" pos:column="28">v<pos:position pos:line="185" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="31">OP_IsUnique<pos:position pos:line="185" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="44">baseCur<pos:position pos:line="185" pos:column="51"/></name><operator pos:line="185" pos:column="51">+<pos:position pos:line="185" pos:column="52"/></operator><name pos:line="185" pos:column="52">iCur<pos:position pos:line="185" pos:column="56"/></name><operator pos:line="185" pos:column="56">+<pos:position pos:line="185" pos:column="57"/></operator><literal type="number" pos:line="185" pos:column="57">1<pos:position pos:line="185" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="185" pos:column="60">0<pos:position pos:line="185" pos:column="61"/></literal></expr></argument>,
                           <argument><expr><name pos:line="186" pos:column="28">regR<pos:position pos:line="186" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="186" pos:column="34">SQLITE_INT_TO_PTR<pos:position pos:line="186" pos:column="51"/></name><argument_list pos:line="186" pos:column="51">(<argument><expr><name pos:line="186" pos:column="52">regIdx<pos:position pos:line="186" pos:column="58"/></name></expr></argument>)<pos:position pos:line="186" pos:column="59"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="187" pos:column="28">P4_INT32<pos:position pos:line="187" pos:column="36"/></name></expr></argument>)<pos:position pos:line="187" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="188" pos:column="5">sqlite3ReleaseTempRange<pos:position pos:line="188" pos:column="28"/></name><argument_list pos:line="188" pos:column="28">(<argument><expr><name pos:line="188" pos:column="29">pParse<pos:position pos:line="188" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="37">regIdx<pos:position pos:line="188" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="188" pos:column="45">pIdx<pos:position pos:line="188" pos:column="49"/></name><operator pos:line="188" pos:column="49">-&gt;<pos:position pos:line="188" pos:column="54"/></operator><name pos:line="188" pos:column="51">nColumn<pos:position pos:line="188" pos:column="58"/></name></name><operator pos:line="188" pos:column="58">+<pos:position pos:line="188" pos:column="59"/></operator><literal type="number" pos:line="188" pos:column="59">1<pos:position pos:line="188" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="190" pos:column="5">/* Generate code that executes if the new index entry is not unique */</comment>
    <expr_stmt><expr><call><name pos:line="191" pos:column="5">assert<pos:position pos:line="191" pos:column="11"/></name><argument_list pos:line="191" pos:column="11">( <argument><expr><name pos:line="191" pos:column="13">onError<pos:position pos:line="191" pos:column="20"/></name><operator pos:line="191" pos:column="20">==<pos:position pos:line="191" pos:column="22"/></operator><name pos:line="191" pos:column="22">OE_Rollback<pos:position pos:line="191" pos:column="33"/></name> <operator pos:line="191" pos:column="34">||<pos:position pos:line="191" pos:column="36"/></operator> <name pos:line="191" pos:column="37">onError<pos:position pos:line="191" pos:column="44"/></name><operator pos:line="191" pos:column="44">==<pos:position pos:line="191" pos:column="46"/></operator><name pos:line="191" pos:column="46">OE_Abort<pos:position pos:line="191" pos:column="54"/></name> <operator pos:line="191" pos:column="55">||<pos:position pos:line="191" pos:column="57"/></operator> <name pos:line="191" pos:column="58">onError<pos:position pos:line="191" pos:column="65"/></name><operator pos:line="191" pos:column="65">==<pos:position pos:line="191" pos:column="67"/></operator><name pos:line="191" pos:column="67">OE_Fail<pos:position pos:line="191" pos:column="74"/></name>
        <operator pos:line="192" pos:column="9">||<pos:position pos:line="192" pos:column="11"/></operator> <name pos:line="192" pos:column="12">onError<pos:position pos:line="192" pos:column="19"/></name><operator pos:line="192" pos:column="19">==<pos:position pos:line="192" pos:column="21"/></operator><name pos:line="192" pos:column="21">OE_Ignore<pos:position pos:line="192" pos:column="30"/></name> <operator pos:line="192" pos:column="31">||<pos:position pos:line="192" pos:column="33"/></operator> <name pos:line="192" pos:column="34">onError<pos:position pos:line="192" pos:column="41"/></name><operator pos:line="192" pos:column="41">==<pos:position pos:line="192" pos:column="43"/></operator><name pos:line="192" pos:column="43">OE_Replace<pos:position pos:line="192" pos:column="53"/></name></expr></argument> )<pos:position pos:line="192" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="56"/></expr_stmt>
    <switch pos:line="193" pos:column="5">switch<condition pos:line="193" pos:column="11">( <expr><name pos:line="193" pos:column="13">onError<pos:position pos:line="193" pos:column="20"/></name></expr> )<pos:position pos:line="193" pos:column="22"/></condition><block pos:line="193" pos:column="22">{
      <case pos:line="194" pos:column="7">case <expr><name pos:line="194" pos:column="12">OE_Rollback<pos:position pos:line="194" pos:column="23"/></name></expr>:<pos:position pos:line="194" pos:column="24"/></case>
      <case pos:line="195" pos:column="7">case <expr><name pos:line="195" pos:column="12">OE_Abort<pos:position pos:line="195" pos:column="20"/></name></expr>:<pos:position pos:line="195" pos:column="21"/></case>
      <case pos:line="196" pos:column="7">case <expr><name pos:line="196" pos:column="12">OE_Fail<pos:position pos:line="196" pos:column="19"/></name></expr>:<pos:position pos:line="196" pos:column="20"/></case> <block pos:line="196" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="197" pos:column="9">int<pos:position pos:line="197" pos:column="12"/></name></type> <name pos:line="197" pos:column="13">j<pos:position pos:line="197" pos:column="14"/></name></decl>;<pos:position pos:line="197" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="198" pos:column="9">StrAccum<pos:position pos:line="198" pos:column="17"/></name></type> <name pos:line="198" pos:column="18">errMsg<pos:position pos:line="198" pos:column="24"/></name></decl>;<pos:position pos:line="198" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="199" pos:column="9">const<pos:position pos:line="199" pos:column="14"/></specifier> <name pos:line="199" pos:column="15">char<pos:position pos:line="199" pos:column="19"/></name> <modifier pos:line="199" pos:column="20">*<pos:position pos:line="199" pos:column="21"/></modifier></type><name pos:line="199" pos:column="21">zSep<pos:position pos:line="199" pos:column="25"/></name></decl>;<pos:position pos:line="199" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="200" pos:column="9">char<pos:position pos:line="200" pos:column="13"/></name> <modifier pos:line="200" pos:column="14">*<pos:position pos:line="200" pos:column="15"/></modifier></type><name pos:line="200" pos:column="15">zErr<pos:position pos:line="200" pos:column="19"/></name></decl>;<pos:position pos:line="200" pos:column="20"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="202" pos:column="9">sqlite3StrAccumInit<pos:position pos:line="202" pos:column="28"/></name><argument_list pos:line="202" pos:column="28">(<argument><expr><operator pos:line="202" pos:column="29">&amp;<pos:position pos:line="202" pos:column="34"/></operator><name pos:line="202" pos:column="30">errMsg<pos:position pos:line="202" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="202" pos:column="38">0<pos:position pos:line="202" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="202" pos:column="41">0<pos:position pos:line="202" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="202" pos:column="44">200<pos:position pos:line="202" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="203" pos:column="9">errMsg<pos:position pos:line="203" pos:column="15"/></name><operator pos:line="203" pos:column="15">.<pos:position pos:line="203" pos:column="16"/></operator><name pos:line="203" pos:column="16">db<pos:position pos:line="203" pos:column="18"/></name></name> <operator pos:line="203" pos:column="19">=<pos:position pos:line="203" pos:column="20"/></operator> <name><name pos:line="203" pos:column="21">pParse<pos:position pos:line="203" pos:column="27"/></name><operator pos:line="203" pos:column="27">-&gt;<pos:position pos:line="203" pos:column="32"/></operator><name pos:line="203" pos:column="29">db<pos:position pos:line="203" pos:column="31"/></name></name></expr>;<pos:position pos:line="203" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="204" pos:column="9">zSep<pos:position pos:line="204" pos:column="13"/></name> <operator pos:line="204" pos:column="14">=<pos:position pos:line="204" pos:column="15"/></operator> <ternary><condition><expr><name><name pos:line="204" pos:column="16">pIdx<pos:position pos:line="204" pos:column="20"/></name><operator pos:line="204" pos:column="20">-&gt;<pos:position pos:line="204" pos:column="25"/></operator><name pos:line="204" pos:column="22">nColumn<pos:position pos:line="204" pos:column="29"/></name></name><operator pos:line="204" pos:column="29">&gt;<pos:position pos:line="204" pos:column="33"/></operator><literal type="number" pos:line="204" pos:column="30">1<pos:position pos:line="204" pos:column="31"/></literal></expr> ?<pos:position pos:line="204" pos:column="33"/></condition><then pos:line="204" pos:column="33"> <expr><literal type="string" pos:line="204" pos:column="34">"columns "<pos:position pos:line="204" pos:column="44"/></literal></expr> <pos:position pos:line="204" pos:column="45"/></then><else pos:line="204" pos:column="45">: <expr><literal type="string" pos:line="204" pos:column="47">"column "<pos:position pos:line="204" pos:column="56"/></literal></expr></else></ternary></expr>;<pos:position pos:line="204" pos:column="57"/></expr_stmt>
        <for pos:line="205" pos:column="9">for<control pos:line="205" pos:column="12">(<init><expr><name pos:line="205" pos:column="13">j<pos:position pos:line="205" pos:column="14"/></name><operator pos:line="205" pos:column="14">=<pos:position pos:line="205" pos:column="15"/></operator><literal type="number" pos:line="205" pos:column="15">0<pos:position pos:line="205" pos:column="16"/></literal></expr>;<pos:position pos:line="205" pos:column="17"/></init> <condition><expr><name pos:line="205" pos:column="18">j<pos:position pos:line="205" pos:column="19"/></name><operator pos:line="205" pos:column="19">&lt;<pos:position pos:line="205" pos:column="23"/></operator><name><name pos:line="205" pos:column="20">pIdx<pos:position pos:line="205" pos:column="24"/></name><operator pos:line="205" pos:column="24">-&gt;<pos:position pos:line="205" pos:column="29"/></operator><name pos:line="205" pos:column="26">nColumn<pos:position pos:line="205" pos:column="33"/></name></name></expr>;<pos:position pos:line="205" pos:column="34"/></condition> <incr><expr><name pos:line="205" pos:column="35">j<pos:position pos:line="205" pos:column="36"/></name><operator pos:line="205" pos:column="36">++<pos:position pos:line="205" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="205" pos:column="39"/></control><block pos:line="205" pos:column="39">{
          <decl_stmt><decl><type><name pos:line="206" pos:column="11">char<pos:position pos:line="206" pos:column="15"/></name> <modifier pos:line="206" pos:column="16">*<pos:position pos:line="206" pos:column="17"/></modifier></type><name pos:line="206" pos:column="17">zCol<pos:position pos:line="206" pos:column="21"/></name> <init pos:line="206" pos:column="22">= <expr><name><name pos:line="206" pos:column="24">pTab<pos:position pos:line="206" pos:column="28"/></name><operator pos:line="206" pos:column="28">-&gt;<pos:position pos:line="206" pos:column="33"/></operator><name pos:line="206" pos:column="30">aCol<pos:position pos:line="206" pos:column="34"/></name><index pos:line="206" pos:column="34">[<expr><name><name pos:line="206" pos:column="35">pIdx<pos:position pos:line="206" pos:column="39"/></name><operator pos:line="206" pos:column="39">-&gt;<pos:position pos:line="206" pos:column="44"/></operator><name pos:line="206" pos:column="41">aiColumn<pos:position pos:line="206" pos:column="49"/></name><index pos:line="206" pos:column="49">[<expr><name pos:line="206" pos:column="50">j<pos:position pos:line="206" pos:column="51"/></name></expr>]<pos:position pos:line="206" pos:column="52"/></index></name></expr>]<pos:position pos:line="206" pos:column="53"/></index></name><operator pos:line="206" pos:column="53">.<pos:position pos:line="206" pos:column="54"/></operator><name pos:line="206" pos:column="54">zName<pos:position pos:line="206" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="206" pos:column="60"/></decl_stmt>
          <expr_stmt><expr><call><name pos:line="207" pos:column="11">sqlite3StrAccumAppend<pos:position pos:line="207" pos:column="32"/></name><argument_list pos:line="207" pos:column="32">(<argument><expr><operator pos:line="207" pos:column="33">&amp;<pos:position pos:line="207" pos:column="38"/></operator><name pos:line="207" pos:column="34">errMsg<pos:position pos:line="207" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="42">zSep<pos:position pos:line="207" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="207" pos:column="48">-<pos:position pos:line="207" pos:column="49"/></operator><literal type="number" pos:line="207" pos:column="49">1<pos:position pos:line="207" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="52"/></expr_stmt>
          <expr_stmt><expr><name pos:line="208" pos:column="11">zSep<pos:position pos:line="208" pos:column="15"/></name> <operator pos:line="208" pos:column="16">=<pos:position pos:line="208" pos:column="17"/></operator> <literal type="string" pos:line="208" pos:column="18">", "<pos:position pos:line="208" pos:column="22"/></literal></expr>;<pos:position pos:line="208" pos:column="23"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="209" pos:column="11">sqlite3StrAccumAppend<pos:position pos:line="209" pos:column="32"/></name><argument_list pos:line="209" pos:column="32">(<argument><expr><operator pos:line="209" pos:column="33">&amp;<pos:position pos:line="209" pos:column="38"/></operator><name pos:line="209" pos:column="34">errMsg<pos:position pos:line="209" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="42">zCol<pos:position pos:line="209" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="209" pos:column="48">-<pos:position pos:line="209" pos:column="49"/></operator><literal type="number" pos:line="209" pos:column="49">1<pos:position pos:line="209" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="210" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="211" pos:column="9">sqlite3StrAccumAppend<pos:position pos:line="211" pos:column="30"/></name><argument_list pos:line="211" pos:column="30">(<argument><expr><operator pos:line="211" pos:column="31">&amp;<pos:position pos:line="211" pos:column="36"/></operator><name pos:line="211" pos:column="32">errMsg<pos:position pos:line="211" pos:column="38"/></name></expr></argument>,
            <argument><expr><ternary><condition><expr><name><name pos:line="212" pos:column="13">pIdx<pos:position pos:line="212" pos:column="17"/></name><operator pos:line="212" pos:column="17">-&gt;<pos:position pos:line="212" pos:column="22"/></operator><name pos:line="212" pos:column="19">nColumn<pos:position pos:line="212" pos:column="26"/></name></name><operator pos:line="212" pos:column="26">&gt;<pos:position pos:line="212" pos:column="30"/></operator><literal type="number" pos:line="212" pos:column="27">1<pos:position pos:line="212" pos:column="28"/></literal></expr> ?<pos:position pos:line="212" pos:column="30"/></condition><then pos:line="212" pos:column="30"> <expr><literal type="string" pos:line="212" pos:column="31">" are not unique"<pos:position pos:line="212" pos:column="48"/></literal></expr> <pos:position pos:line="212" pos:column="49"/></then><else pos:line="212" pos:column="49">: <expr><literal type="string" pos:line="212" pos:column="51">" is not unique"<pos:position pos:line="212" pos:column="67"/></literal></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="212" pos:column="69">-<pos:position pos:line="212" pos:column="70"/></operator><literal type="number" pos:line="212" pos:column="70">1<pos:position pos:line="212" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name pos:line="213" pos:column="9">zErr<pos:position pos:line="213" pos:column="13"/></name> <operator pos:line="213" pos:column="14">=<pos:position pos:line="213" pos:column="15"/></operator> <call><name pos:line="213" pos:column="16">sqlite3StrAccumFinish<pos:position pos:line="213" pos:column="37"/></name><argument_list pos:line="213" pos:column="37">(<argument><expr><operator pos:line="213" pos:column="38">&amp;<pos:position pos:line="213" pos:column="43"/></operator><name pos:line="213" pos:column="39">errMsg<pos:position pos:line="213" pos:column="45"/></name></expr></argument>)<pos:position pos:line="213" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="214" pos:column="9">sqlite3VdbeAddOp4<pos:position pos:line="214" pos:column="26"/></name><argument_list pos:line="214" pos:column="26">(<argument><expr><name pos:line="214" pos:column="27">v<pos:position pos:line="214" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="30">OP_Halt<pos:position pos:line="214" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="39">SQLITE_CONSTRAINT<pos:position pos:line="214" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="58">onError<pos:position pos:line="214" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="214" pos:column="67">0<pos:position pos:line="214" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="214" pos:column="70">zErr<pos:position pos:line="214" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="214" pos:column="76">0<pos:position pos:line="214" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="215" pos:column="9">sqlite3DbFree<pos:position pos:line="215" pos:column="22"/></name><argument_list pos:line="215" pos:column="22">(<argument><expr><name><name pos:line="215" pos:column="23">errMsg<pos:position pos:line="215" pos:column="29"/></name><operator pos:line="215" pos:column="29">.<pos:position pos:line="215" pos:column="30"/></operator><name pos:line="215" pos:column="30">db<pos:position pos:line="215" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="34">zErr<pos:position pos:line="215" pos:column="38"/></name></expr></argument>)<pos:position pos:line="215" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="40"/></expr_stmt>
        <break pos:line="216" pos:column="9">break;<pos:position pos:line="216" pos:column="15"/></break>
      }<pos:position pos:line="217" pos:column="8"/></block>
      <case pos:line="218" pos:column="7">case <expr><name pos:line="218" pos:column="12">OE_Ignore<pos:position pos:line="218" pos:column="21"/></name></expr>:<pos:position pos:line="218" pos:column="22"/></case> <block pos:line="218" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="219" pos:column="9">assert<pos:position pos:line="219" pos:column="15"/></name><argument_list pos:line="219" pos:column="15">( <argument><expr><name pos:line="219" pos:column="17">seenReplace<pos:position pos:line="219" pos:column="28"/></name><operator pos:line="219" pos:column="28">==<pos:position pos:line="219" pos:column="30"/></operator><literal type="number" pos:line="219" pos:column="30">0<pos:position pos:line="219" pos:column="31"/></literal></expr></argument> )<pos:position pos:line="219" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="220" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="220" pos:column="26"/></name><argument_list pos:line="220" pos:column="26">(<argument><expr><name pos:line="220" pos:column="27">v<pos:position pos:line="220" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="30">OP_Goto<pos:position pos:line="220" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="220" pos:column="39">0<pos:position pos:line="220" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="220" pos:column="42">ignoreDest<pos:position pos:line="220" pos:column="52"/></name></expr></argument>)<pos:position pos:line="220" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="54"/></expr_stmt>
        <break pos:line="221" pos:column="9">break;<pos:position pos:line="221" pos:column="15"/></break>
      }<pos:position pos:line="222" pos:column="8"/></block>
      <default pos:line="223" pos:column="7">default:<pos:position pos:line="223" pos:column="15"/></default> <block pos:line="223" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="224" pos:column="9">assert<pos:position pos:line="224" pos:column="15"/></name><argument_list pos:line="224" pos:column="15">( <argument><expr><name pos:line="224" pos:column="17">onError<pos:position pos:line="224" pos:column="24"/></name><operator pos:line="224" pos:column="24">==<pos:position pos:line="224" pos:column="26"/></operator><name pos:line="224" pos:column="26">OE_Replace<pos:position pos:line="224" pos:column="36"/></name></expr></argument> )<pos:position pos:line="224" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="225" pos:column="9">sqlite3GenerateRowDelete<pos:position pos:line="225" pos:column="33"/></name><argument_list pos:line="225" pos:column="33">(<argument><expr><name pos:line="225" pos:column="34">pParse<pos:position pos:line="225" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="42">pTab<pos:position pos:line="225" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="48">baseCur<pos:position pos:line="225" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="57">regR<pos:position pos:line="225" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="225" pos:column="63">0<pos:position pos:line="225" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="225" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name pos:line="226" pos:column="9">seenReplace<pos:position pos:line="226" pos:column="20"/></name> <operator pos:line="226" pos:column="21">=<pos:position pos:line="226" pos:column="22"/></operator> <literal type="number" pos:line="226" pos:column="23">1<pos:position pos:line="226" pos:column="24"/></literal></expr>;<pos:position pos:line="226" pos:column="25"/></expr_stmt>
        <break pos:line="227" pos:column="9">break;<pos:position pos:line="227" pos:column="15"/></break>
      }<pos:position pos:line="228" pos:column="8"/></block>
    }<pos:position pos:line="229" pos:column="6"/></block></switch>
    <expr_stmt><expr><call><name pos:line="230" pos:column="5">sqlite3VdbeJumpHere<pos:position pos:line="230" pos:column="24"/></name><argument_list pos:line="230" pos:column="24">(<argument><expr><name pos:line="230" pos:column="25">v<pos:position pos:line="230" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="28">j3<pos:position pos:line="230" pos:column="30"/></name></expr></argument>)<pos:position pos:line="230" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="231" pos:column="5">sqlite3ReleaseTempReg<pos:position pos:line="231" pos:column="26"/></name><argument_list pos:line="231" pos:column="26">(<argument><expr><name pos:line="231" pos:column="27">pParse<pos:position pos:line="231" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="35">regR<pos:position pos:line="231" pos:column="39"/></name></expr></argument>)<pos:position pos:line="231" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="232" pos:column="4"/></block></for>

  <if pos:line="234" pos:column="3">if<condition pos:line="234" pos:column="5">( <expr><name pos:line="234" pos:column="7">pbMayReplace<pos:position pos:line="234" pos:column="19"/></name></expr> )<pos:position pos:line="234" pos:column="21"/></condition><then><block pos:line="234" pos:column="21">{
    <expr_stmt><expr><operator pos:line="235" pos:column="5">*<pos:position pos:line="235" pos:column="6"/></operator><name pos:line="235" pos:column="6">pbMayReplace<pos:position pos:line="235" pos:column="18"/></name> <operator pos:line="235" pos:column="19">=<pos:position pos:line="235" pos:column="20"/></operator> <name pos:line="235" pos:column="21">seenReplace<pos:position pos:line="235" pos:column="32"/></name></expr>;<pos:position pos:line="235" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="236" pos:column="4"/></block></then></if>
}<pos:position pos:line="237" pos:column="2"/></block></function></unit>

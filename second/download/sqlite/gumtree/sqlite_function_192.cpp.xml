<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_192.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">selectExpander<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">Walker<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">pWalker<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">Select<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">p<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list><block pos:line="1" pos:column="54">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">Parse<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pParse<pos:position pos:line="2" pos:column="16"/></name> <init pos:line="2" pos:column="17">= <expr><name><name pos:line="2" pos:column="19">pWalker<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">-&gt;<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="28">pParse<pos:position pos:line="2" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="2" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="10">j<pos:position pos:line="3" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="13">k<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">SrcList<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">pTabList<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ExprList<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">pEList<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">SrcList_item<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">pFrom<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">sqlite3<pos:position pos:line="7" pos:column="10"/></name> <modifier pos:line="7" pos:column="11">*<pos:position pos:line="7" pos:column="12"/></modifier></type><name pos:line="7" pos:column="12">db<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><name><name pos:line="7" pos:column="17">pParse<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">db<pos:position pos:line="7" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">Expr<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">pE<pos:position pos:line="8" pos:column="11"/></name></decl>, <modifier pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="14">pRight<pos:position pos:line="8" pos:column="20"/></name></decl>, <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="23">pExpr<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">u16<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">selFlags<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><name><name pos:line="9" pos:column="18">p<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">selFlags<pos:position pos:line="9" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="11" pos:column="3">p<pos:position pos:line="11" pos:column="4"/></name><operator pos:line="11" pos:column="4">-&gt;<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="6">selFlags<pos:position pos:line="11" pos:column="14"/></name></name> <operator pos:line="11" pos:column="15">|=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">SF_Expanded<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">( <expr><name><name pos:line="12" pos:column="7">db<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">mallocFailed<pos:position pos:line="12" pos:column="23"/></name></name></expr>  )<pos:position pos:line="12" pos:column="26"/></condition><then><block pos:line="12" pos:column="26">{
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">WRC_Abort<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">( <expr><call><name pos:line="15" pos:column="7">NEVER<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name><name pos:line="15" pos:column="13">p<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">pSrc<pos:position pos:line="15" pos:column="20"/></name></name><operator pos:line="15" pos:column="20">==<pos:position pos:line="15" pos:column="22"/></operator><literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call> <operator pos:line="15" pos:column="25">||<pos:position pos:line="15" pos:column="27"/></operator> <operator pos:line="15" pos:column="28">(<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">selFlags<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">&amp;<pos:position pos:line="15" pos:column="43"/></operator> <name pos:line="15" pos:column="40">SF_Expanded<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">)<pos:position pos:line="15" pos:column="52"/></operator><operator pos:line="15" pos:column="52">!=<pos:position pos:line="15" pos:column="54"/></operator><literal type="number" pos:line="15" pos:column="54">0<pos:position pos:line="15" pos:column="55"/></literal></expr> )<pos:position pos:line="15" pos:column="57"/></condition><then><block pos:line="15" pos:column="57">{
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">WRC_Prune<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="18" pos:column="3">pTabList<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name><name pos:line="18" pos:column="14">p<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">pSrc<pos:position pos:line="18" pos:column="21"/></name></name></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">pEList<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name><name pos:line="19" pos:column="12">p<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">pEList<pos:position pos:line="19" pos:column="21"/></name></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">( <expr><call><name pos:line="20" pos:column="7">OK_IF_ALWAYS_TRUE<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name><name pos:line="20" pos:column="25">p<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">pWith<pos:position pos:line="20" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr> )<pos:position pos:line="20" pos:column="36"/></condition><then><block pos:line="20" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">sqlite3WithPush<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">pParse<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="29">p<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">pWith<pos:position pos:line="21" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="39">0<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* Make sure cursor numbers have been assigned to all entries in
  ** the FROM clause of the SELECT statement.
  */</comment>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">sqlite3SrcListAssignCursors<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">pParse<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">pTabList<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="29" pos:column="3">/* Look up every table named in the FROM clause of the select.  If
  ** an entry of the FROM clause is a subquery instead of a table or view,
  ** then create a transient table structure to describe the subquery.
  */</comment>
  <for pos:line="33" pos:column="3">for<control pos:line="33" pos:column="6">(<init><expr><name pos:line="33" pos:column="7">i<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator><literal type="number" pos:line="33" pos:column="9">0<pos:position pos:line="33" pos:column="10"/></literal></expr><operator pos:line="33" pos:column="10">,<pos:position pos:line="33" pos:column="11"/></operator> <expr><name pos:line="33" pos:column="12">pFrom<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator><name><name pos:line="33" pos:column="18">pTabList<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">a<pos:position pos:line="33" pos:column="29"/></name></name></expr>;<pos:position pos:line="33" pos:column="30"/></init> <condition><expr><name pos:line="33" pos:column="31">i<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">&lt;<pos:position pos:line="33" pos:column="36"/></operator><name><name pos:line="33" pos:column="33">pTabList<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">-&gt;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="43">nSrc<pos:position pos:line="33" pos:column="47"/></name></name></expr>;<pos:position pos:line="33" pos:column="48"/></condition> <incr><expr><name pos:line="33" pos:column="49">i<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">++<pos:position pos:line="33" pos:column="52"/></operator></expr><operator pos:line="33" pos:column="52">,<pos:position pos:line="33" pos:column="53"/></operator> <expr><name pos:line="33" pos:column="54">pFrom<pos:position pos:line="33" pos:column="59"/></name><operator pos:line="33" pos:column="59">++<pos:position pos:line="33" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="62"/></control><block pos:line="33" pos:column="62">{
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">Table<pos:position pos:line="34" pos:column="10"/></name> <modifier pos:line="34" pos:column="11">*<pos:position pos:line="34" pos:column="12"/></modifier></type><name pos:line="34" pos:column="12">pTab<pos:position pos:line="34" pos:column="16"/></name></decl>;<pos:position pos:line="34" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">assert<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">( <argument><expr><name><name pos:line="35" pos:column="13">pFrom<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">fg<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">.<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="23">isRecursive<pos:position pos:line="35" pos:column="34"/></name></name><operator pos:line="35" pos:column="34">==<pos:position pos:line="35" pos:column="36"/></operator><literal type="number" pos:line="35" pos:column="36">0<pos:position pos:line="35" pos:column="37"/></literal> <operator pos:line="35" pos:column="38">||<pos:position pos:line="35" pos:column="40"/></operator> <name><name pos:line="35" pos:column="41">pFrom<pos:position pos:line="35" pos:column="46"/></name><operator pos:line="35" pos:column="46">-&gt;<pos:position pos:line="35" pos:column="51"/></operator><name pos:line="35" pos:column="48">pTab<pos:position pos:line="35" pos:column="52"/></name></name><operator pos:line="35" pos:column="52">!=<pos:position pos:line="35" pos:column="54"/></operator><literal type="number" pos:line="35" pos:column="54">0<pos:position pos:line="35" pos:column="55"/></literal></expr></argument> )<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="58"/></expr_stmt>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">( <expr><name><name pos:line="36" pos:column="9">pFrom<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">fg<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">.<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">isRecursive<pos:position pos:line="36" pos:column="30"/></name></name></expr> )<pos:position pos:line="36" pos:column="32"/></condition><then pos:line="36" pos:column="32"> <block type="pseudo"><continue pos:line="36" pos:column="33">continue;<pos:position pos:line="36" pos:column="42"/></continue></block></then></if>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">assert<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">( <argument><expr><name><name pos:line="37" pos:column="13">pFrom<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">pTab<pos:position pos:line="37" pos:column="24"/></name></name><operator pos:line="37" pos:column="24">==<pos:position pos:line="37" pos:column="26"/></operator><literal type="number" pos:line="37" pos:column="26">0<pos:position pos:line="37" pos:column="27"/></literal></expr></argument> )<pos:position pos:line="37" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt>
<cpp:ifndef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifndef<pos:position pos:line="38" pos:column="8"/></cpp:directive> <name pos:line="38" pos:column="9">SQLITE_OMIT_CTE<pos:position pos:line="38" pos:column="24"/></name></cpp:ifndef>
    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">( <expr><call><name pos:line="39" pos:column="9">withExpand<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">pWalker<pos:position pos:line="39" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="29">pFrom<pos:position pos:line="39" pos:column="34"/></name></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call></expr> )<pos:position pos:line="39" pos:column="37"/></condition><then pos:line="39" pos:column="37"> <block type="pseudo"><return pos:line="39" pos:column="38">return <expr><name pos:line="39" pos:column="45">WRC_Abort<pos:position pos:line="39" pos:column="54"/></name></expr>;<pos:position pos:line="39" pos:column="55"/></return></block></then></if>
    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">( <expr><name><name pos:line="40" pos:column="9">pFrom<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">pTab<pos:position pos:line="40" pos:column="20"/></name></name></expr> )<pos:position pos:line="40" pos:column="22"/></condition><then pos:line="40" pos:column="22"> <block pos:line="40" pos:column="23">{}<pos:position pos:line="40" pos:column="25"/></block></then> <elseif pos:line="40" pos:column="26">else
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="42" pos:column="5">if<condition pos:line="42" pos:column="7">( <expr><name><name pos:line="42" pos:column="9">pFrom<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">zName<pos:position pos:line="42" pos:column="21"/></name></name><operator pos:line="42" pos:column="21">==<pos:position pos:line="42" pos:column="23"/></operator><literal type="number" pos:line="42" pos:column="23">0<pos:position pos:line="42" pos:column="24"/></literal></expr> )<pos:position pos:line="42" pos:column="26"/></condition><then><block pos:line="42" pos:column="26">{
<cpp:ifndef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifndef<pos:position pos:line="43" pos:column="8"/></cpp:directive> <name pos:line="43" pos:column="9">SQLITE_OMIT_SUBQUERY<pos:position pos:line="43" pos:column="29"/></name></cpp:ifndef>
      <decl_stmt><decl><type><name pos:line="44" pos:column="7">Select<pos:position pos:line="44" pos:column="13"/></name> <modifier pos:line="44" pos:column="14">*<pos:position pos:line="44" pos:column="15"/></modifier></type><name pos:line="44" pos:column="15">pSel<pos:position pos:line="44" pos:column="19"/></name> <init pos:line="44" pos:column="20">= <expr><name><name pos:line="44" pos:column="22">pFrom<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">-&gt;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="29">pSelect<pos:position pos:line="44" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="44" pos:column="37"/></decl_stmt>
      <comment type="block" pos:line="45" pos:column="7">/* A sub-query in the FROM clause of a SELECT */</comment>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">assert<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">( <argument><expr><name pos:line="46" pos:column="15">pSel<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">!=<pos:position pos:line="46" pos:column="21"/></operator><literal type="number" pos:line="46" pos:column="21">0<pos:position pos:line="46" pos:column="22"/></literal></expr></argument> )<pos:position pos:line="46" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">assert<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">( <argument><expr><name><name pos:line="47" pos:column="15">pFrom<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">pTab<pos:position pos:line="47" pos:column="26"/></name></name><operator pos:line="47" pos:column="26">==<pos:position pos:line="47" pos:column="28"/></operator><literal type="number" pos:line="47" pos:column="28">0<pos:position pos:line="47" pos:column="29"/></literal></expr></argument> )<pos:position pos:line="47" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>
      <if pos:line="48" pos:column="7">if<condition pos:line="48" pos:column="9">( <expr><call><name pos:line="48" pos:column="11">sqlite3WalkSelect<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">pWalker<pos:position pos:line="48" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="38">pSel<pos:position pos:line="48" pos:column="42"/></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr> )<pos:position pos:line="48" pos:column="45"/></condition><then pos:line="48" pos:column="45"> <block type="pseudo"><return pos:line="48" pos:column="46">return <expr><name pos:line="48" pos:column="53">WRC_Abort<pos:position pos:line="48" pos:column="62"/></name></expr>;<pos:position pos:line="48" pos:column="63"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="49" pos:column="7">pFrom<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">pTab<pos:position pos:line="49" pos:column="18"/></name></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <name pos:line="49" pos:column="21">pTab<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">=<pos:position pos:line="49" pos:column="27"/></operator> <call><name pos:line="49" pos:column="28">sqlite3DbMallocZero<pos:position pos:line="49" pos:column="47"/></name><argument_list pos:line="49" pos:column="47">(<argument><expr><name pos:line="49" pos:column="48">db<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="52">sizeof<argument_list pos:line="49" pos:column="58">(<argument><expr><name pos:line="49" pos:column="59">Table<pos:position pos:line="49" pos:column="64"/></name></expr></argument>)<pos:position pos:line="49" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="67"/></expr_stmt>
      <if pos:line="50" pos:column="7">if<condition pos:line="50" pos:column="9">( <expr><name pos:line="50" pos:column="11">pTab<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">==<pos:position pos:line="50" pos:column="17"/></operator><literal type="number" pos:line="50" pos:column="17">0<pos:position pos:line="50" pos:column="18"/></literal></expr> )<pos:position pos:line="50" pos:column="20"/></condition><then pos:line="50" pos:column="20"> <block type="pseudo"><return pos:line="50" pos:column="21">return <expr><name pos:line="50" pos:column="28">WRC_Abort<pos:position pos:line="50" pos:column="37"/></name></expr>;<pos:position pos:line="50" pos:column="38"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="51" pos:column="7">pTab<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">-&gt;<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="13">nTabRef<pos:position pos:line="51" pos:column="20"/></name></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <literal type="number" pos:line="51" pos:column="23">1<pos:position pos:line="51" pos:column="24"/></literal></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt>
      <if pos:line="52" pos:column="7">if<condition pos:line="52" pos:column="9">( <expr><name><name pos:line="52" pos:column="11">pFrom<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">zAlias<pos:position pos:line="52" pos:column="24"/></name></name></expr> )<pos:position pos:line="52" pos:column="26"/></condition><then><block pos:line="52" pos:column="26">{
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">pTab<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">-&gt;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="15">zName<pos:position pos:line="53" pos:column="20"/></name></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <call><name pos:line="53" pos:column="23">sqlite3DbStrDup<pos:position pos:line="53" pos:column="38"/></name><argument_list pos:line="53" pos:column="38">(<argument><expr><name pos:line="53" pos:column="39">db<pos:position pos:line="53" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="43">pFrom<pos:position pos:line="53" pos:column="48"/></name><operator pos:line="53" pos:column="48">-&gt;<pos:position pos:line="53" pos:column="53"/></operator><name pos:line="53" pos:column="50">zAlias<pos:position pos:line="53" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="58"/></expr_stmt>
      }<pos:position pos:line="54" pos:column="8"/></block></then><else pos:line="54" pos:column="8">else<block pos:line="54" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="55" pos:column="9">pTab<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">-&gt;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="15">zName<pos:position pos:line="55" pos:column="20"/></name></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <call><name pos:line="55" pos:column="23">sqlite3MPrintf<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name pos:line="55" pos:column="38">db<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="42">"subquery_%p"<pos:position pos:line="55" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="55" pos:column="57">(<pos:position pos:line="55" pos:column="58"/></operator><name pos:line="55" pos:column="58">void<pos:position pos:line="55" pos:column="62"/></name><operator pos:line="55" pos:column="62">*<pos:position pos:line="55" pos:column="63"/></operator><operator pos:line="55" pos:column="63">)<pos:position pos:line="55" pos:column="64"/></operator><name pos:line="55" pos:column="64">pTab<pos:position pos:line="55" pos:column="68"/></name></expr></argument>)<pos:position pos:line="55" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="70"/></expr_stmt>
      }<pos:position pos:line="56" pos:column="8"/></block></else></if>
      <while pos:line="57" pos:column="7">while<condition pos:line="57" pos:column="12">( <expr><name><name pos:line="57" pos:column="14">pSel<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">-&gt;<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="20">pPrior<pos:position pos:line="57" pos:column="26"/></name></name></expr> )<pos:position pos:line="57" pos:column="28"/></condition><block pos:line="57" pos:column="28">{ <expr_stmt><expr><name pos:line="57" pos:column="30">pSel<pos:position pos:line="57" pos:column="34"/></name> <operator pos:line="57" pos:column="35">=<pos:position pos:line="57" pos:column="36"/></operator> <name><name pos:line="57" pos:column="37">pSel<pos:position pos:line="57" pos:column="41"/></name><operator pos:line="57" pos:column="41">-&gt;<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="43">pPrior<pos:position pos:line="57" pos:column="49"/></name></name></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt> }<pos:position pos:line="57" pos:column="52"/></block></while>
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">sqlite3ColumnsFromExprList<pos:position pos:line="58" pos:column="33"/></name><argument_list pos:line="58" pos:column="33">(<argument><expr><name pos:line="58" pos:column="34">pParse<pos:position pos:line="58" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="42">pSel<pos:position pos:line="58" pos:column="46"/></name><operator pos:line="58" pos:column="46">-&gt;<pos:position pos:line="58" pos:column="51"/></operator><name pos:line="58" pos:column="48">pEList<pos:position pos:line="58" pos:column="54"/></name></name></expr></argument>,<argument><expr><operator pos:line="58" pos:column="55">&amp;<pos:position pos:line="58" pos:column="60"/></operator><name><name pos:line="58" pos:column="56">pTab<pos:position pos:line="58" pos:column="60"/></name><operator pos:line="58" pos:column="60">-&gt;<pos:position pos:line="58" pos:column="65"/></operator><name pos:line="58" pos:column="62">nCol<pos:position pos:line="58" pos:column="66"/></name></name></expr></argument>,<argument><expr><operator pos:line="58" pos:column="67">&amp;<pos:position pos:line="58" pos:column="72"/></operator><name><name pos:line="58" pos:column="68">pTab<pos:position pos:line="58" pos:column="72"/></name><operator pos:line="58" pos:column="72">-&gt;<pos:position pos:line="58" pos:column="77"/></operator><name pos:line="58" pos:column="74">aCol<pos:position pos:line="58" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="80"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="59" pos:column="7">pTab<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">-&gt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">iPKey<pos:position pos:line="59" pos:column="18"/></name></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <operator pos:line="59" pos:column="21">-<pos:position pos:line="59" pos:column="22"/></operator><literal type="number" pos:line="59" pos:column="22">1<pos:position pos:line="59" pos:column="23"/></literal></expr>;<pos:position pos:line="59" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="60" pos:column="7">pTab<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">-&gt;<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="13">nRowLogEst<pos:position pos:line="60" pos:column="23"/></name></name> <operator pos:line="60" pos:column="24">=<pos:position pos:line="60" pos:column="25"/></operator> <literal type="number" pos:line="60" pos:column="26">200<pos:position pos:line="60" pos:column="29"/></literal></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt> <expr_stmt><expr><call><name pos:line="60" pos:column="31">assert<pos:position pos:line="60" pos:column="37"/></name><argument_list pos:line="60" pos:column="37">( <argument><expr><literal type="number" pos:line="60" pos:column="39">200<pos:position pos:line="60" pos:column="42"/></literal><operator pos:line="60" pos:column="42">==<pos:position pos:line="60" pos:column="44"/></operator><call><name pos:line="60" pos:column="44">sqlite3LogEst<pos:position pos:line="60" pos:column="57"/></name><argument_list pos:line="60" pos:column="57">(<argument><expr><literal type="number" pos:line="60" pos:column="58">1048576<pos:position pos:line="60" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="66"/></argument_list></call></expr></argument> )<pos:position pos:line="60" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="61" pos:column="7">pTab<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">tabFlags<pos:position pos:line="61" pos:column="21"/></name></name> <operator pos:line="61" pos:column="22">|=<pos:position pos:line="61" pos:column="24"/></operator> <name pos:line="61" pos:column="25">TF_Ephemeral<pos:position pos:line="61" pos:column="37"/></name></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if></elseif><else pos:line="63" pos:column="6">else<block pos:line="63" pos:column="10">{
      <comment type="block" pos:line="64" pos:column="7">/* An ordinary table or view name in the FROM clause */</comment>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">assert<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">( <argument><expr><name><name pos:line="65" pos:column="15">pFrom<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">-&gt;<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="22">pTab<pos:position pos:line="65" pos:column="26"/></name></name><operator pos:line="65" pos:column="26">==<pos:position pos:line="65" pos:column="28"/></operator><literal type="number" pos:line="65" pos:column="28">0<pos:position pos:line="65" pos:column="29"/></literal></expr></argument> )<pos:position pos:line="65" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="66" pos:column="7">pFrom<pos:position pos:line="66" pos:column="12"/></name><operator pos:line="66" pos:column="12">-&gt;<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="14">pTab<pos:position pos:line="66" pos:column="18"/></name></name> <operator pos:line="66" pos:column="19">=<pos:position pos:line="66" pos:column="20"/></operator> <name pos:line="66" pos:column="21">pTab<pos:position pos:line="66" pos:column="25"/></name> <operator pos:line="66" pos:column="26">=<pos:position pos:line="66" pos:column="27"/></operator> <call><name pos:line="66" pos:column="28">sqlite3LocateTableItem<pos:position pos:line="66" pos:column="50"/></name><argument_list pos:line="66" pos:column="50">(<argument><expr><name pos:line="66" pos:column="51">pParse<pos:position pos:line="66" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="59">0<pos:position pos:line="66" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="62">pFrom<pos:position pos:line="66" pos:column="67"/></name></expr></argument>)<pos:position pos:line="66" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="69"/></expr_stmt>
      <if pos:line="67" pos:column="7">if<condition pos:line="67" pos:column="9">( <expr><name pos:line="67" pos:column="11">pTab<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">==<pos:position pos:line="67" pos:column="17"/></operator><literal type="number" pos:line="67" pos:column="17">0<pos:position pos:line="67" pos:column="18"/></literal></expr> )<pos:position pos:line="67" pos:column="20"/></condition><then pos:line="67" pos:column="20"> <block type="pseudo"><return pos:line="67" pos:column="21">return <expr><name pos:line="67" pos:column="28">WRC_Abort<pos:position pos:line="67" pos:column="37"/></name></expr>;<pos:position pos:line="67" pos:column="38"/></return></block></then></if>
      <if pos:line="68" pos:column="7">if<condition pos:line="68" pos:column="9">( <expr><name><name pos:line="68" pos:column="11">pTab<pos:position pos:line="68" pos:column="15"/></name><operator pos:line="68" pos:column="15">-&gt;<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="17">nTabRef<pos:position pos:line="68" pos:column="24"/></name></name><operator pos:line="68" pos:column="24">&gt;=<pos:position pos:line="68" pos:column="29"/></operator><literal type="number" pos:line="68" pos:column="26">0xffff<pos:position pos:line="68" pos:column="32"/></literal></expr> )<pos:position pos:line="68" pos:column="34"/></condition><then><block pos:line="68" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">sqlite3ErrorMsg<pos:position pos:line="69" pos:column="24"/></name><argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">pParse<pos:position pos:line="69" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="33">"too many references to \"%s\": max 65535"<pos:position pos:line="69" pos:column="75"/></literal></expr></argument>,
           <argument><expr><name><name pos:line="70" pos:column="12">pTab<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">-&gt;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="18">zName<pos:position pos:line="70" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="71" pos:column="9">pFrom<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">-&gt;<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="16">pTab<pos:position pos:line="71" pos:column="20"/></name></name> <operator pos:line="71" pos:column="21">=<pos:position pos:line="71" pos:column="22"/></operator> <literal type="number" pos:line="71" pos:column="23">0<pos:position pos:line="71" pos:column="24"/></literal></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>
        <return pos:line="72" pos:column="9">return <expr><name pos:line="72" pos:column="16">WRC_Abort<pos:position pos:line="72" pos:column="25"/></name></expr>;<pos:position pos:line="72" pos:column="26"/></return>
      }<pos:position pos:line="73" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="74" pos:column="7">pTab<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">nTabRef<pos:position pos:line="74" pos:column="20"/></name></name><operator pos:line="74" pos:column="20">++<pos:position pos:line="74" pos:column="22"/></operator></expr>;<pos:position pos:line="74" pos:column="23"/></expr_stmt>
      <if pos:line="75" pos:column="7">if<condition pos:line="75" pos:column="9">( <expr><operator pos:line="75" pos:column="11">!<pos:position pos:line="75" pos:column="12"/></operator><call><name pos:line="75" pos:column="12">IsVirtual<pos:position pos:line="75" pos:column="21"/></name><argument_list pos:line="75" pos:column="21">(<argument><expr><name pos:line="75" pos:column="22">pTab<pos:position pos:line="75" pos:column="26"/></name></expr></argument>)<pos:position pos:line="75" pos:column="27"/></argument_list></call> <operator pos:line="75" pos:column="28">&amp;&amp;<pos:position pos:line="75" pos:column="38"/></operator> <call><name pos:line="75" pos:column="31">cannotBeFunction<pos:position pos:line="75" pos:column="47"/></name><argument_list pos:line="75" pos:column="47">(<argument><expr><name pos:line="75" pos:column="48">pParse<pos:position pos:line="75" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="56">pFrom<pos:position pos:line="75" pos:column="61"/></name></expr></argument>)<pos:position pos:line="75" pos:column="62"/></argument_list></call></expr> )<pos:position pos:line="75" pos:column="64"/></condition><then><block pos:line="75" pos:column="64">{
        <return pos:line="76" pos:column="9">return <expr><name pos:line="76" pos:column="16">WRC_Abort<pos:position pos:line="76" pos:column="25"/></name></expr>;<pos:position pos:line="76" pos:column="26"/></return>
      }<pos:position pos:line="77" pos:column="8"/></block></then></if>
<cpp:if pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">if<pos:position pos:line="78" pos:column="4"/></cpp:directive> <expr><operator pos:line="78" pos:column="5">!<pos:position pos:line="78" pos:column="6"/></operator><call><name pos:line="78" pos:column="6">defined<pos:position pos:line="78" pos:column="13"/></name><argument_list pos:line="78" pos:column="13">(<argument><expr><name pos:line="78" pos:column="14">SQLITE_OMIT_VIEW<pos:position pos:line="78" pos:column="30"/></name></expr></argument>)<pos:position pos:line="78" pos:column="31"/></argument_list></call> <operator pos:line="78" pos:column="32">||<pos:position pos:line="78" pos:column="34"/></operator> <operator pos:line="78" pos:column="35">!<pos:position pos:line="78" pos:column="36"/></operator><call><name pos:line="78" pos:column="36">defined<pos:position pos:line="78" pos:column="43"/></name> <argument_list pos:line="78" pos:column="44">(<argument><expr><name pos:line="78" pos:column="45">SQLITE_OMIT_VIRTUALTABLE<pos:position pos:line="78" pos:column="69"/></name></expr></argument>)<pos:position pos:line="78" pos:column="70"/></argument_list></call></expr></cpp:if>
      <if pos:line="79" pos:column="7">if<condition pos:line="79" pos:column="9">( <expr><call><name pos:line="79" pos:column="11">IsVirtual<pos:position pos:line="79" pos:column="20"/></name><argument_list pos:line="79" pos:column="20">(<argument><expr><name pos:line="79" pos:column="21">pTab<pos:position pos:line="79" pos:column="25"/></name></expr></argument>)<pos:position pos:line="79" pos:column="26"/></argument_list></call> <operator pos:line="79" pos:column="27">||<pos:position pos:line="79" pos:column="29"/></operator> <name><name pos:line="79" pos:column="30">pTab<pos:position pos:line="79" pos:column="34"/></name><operator pos:line="79" pos:column="34">-&gt;<pos:position pos:line="79" pos:column="39"/></operator><name pos:line="79" pos:column="36">pSelect<pos:position pos:line="79" pos:column="43"/></name></name></expr> )<pos:position pos:line="79" pos:column="45"/></condition><then><block pos:line="79" pos:column="45">{
        <decl_stmt><decl><type><name pos:line="80" pos:column="9">i16<pos:position pos:line="80" pos:column="12"/></name></type> <name pos:line="80" pos:column="13">nCol<pos:position pos:line="80" pos:column="17"/></name></decl>;<pos:position pos:line="80" pos:column="18"/></decl_stmt>
        <if pos:line="81" pos:column="9">if<condition pos:line="81" pos:column="11">( <expr><call><name pos:line="81" pos:column="13">sqlite3ViewGetColumnNames<pos:position pos:line="81" pos:column="38"/></name><argument_list pos:line="81" pos:column="38">(<argument><expr><name pos:line="81" pos:column="39">pParse<pos:position pos:line="81" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="47">pTab<pos:position pos:line="81" pos:column="51"/></name></expr></argument>)<pos:position pos:line="81" pos:column="52"/></argument_list></call></expr> )<pos:position pos:line="81" pos:column="54"/></condition><then pos:line="81" pos:column="54"> <block type="pseudo"><return pos:line="81" pos:column="55">return <expr><name pos:line="81" pos:column="62">WRC_Abort<pos:position pos:line="81" pos:column="71"/></name></expr>;<pos:position pos:line="81" pos:column="72"/></return></block></then></if>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">assert<pos:position pos:line="82" pos:column="15"/></name><argument_list pos:line="82" pos:column="15">( <argument><expr><name><name pos:line="82" pos:column="17">pFrom<pos:position pos:line="82" pos:column="22"/></name><operator pos:line="82" pos:column="22">-&gt;<pos:position pos:line="82" pos:column="27"/></operator><name pos:line="82" pos:column="24">pSelect<pos:position pos:line="82" pos:column="31"/></name></name><operator pos:line="82" pos:column="31">==<pos:position pos:line="82" pos:column="33"/></operator><literal type="number" pos:line="82" pos:column="33">0<pos:position pos:line="82" pos:column="34"/></literal></expr></argument> )<pos:position pos:line="82" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">pFrom<pos:position pos:line="83" pos:column="14"/></name><operator pos:line="83" pos:column="14">-&gt;<pos:position pos:line="83" pos:column="19"/></operator><name pos:line="83" pos:column="16">pSelect<pos:position pos:line="83" pos:column="23"/></name></name> <operator pos:line="83" pos:column="24">=<pos:position pos:line="83" pos:column="25"/></operator> <call><name pos:line="83" pos:column="26">sqlite3SelectDup<pos:position pos:line="83" pos:column="42"/></name><argument_list pos:line="83" pos:column="42">(<argument><expr><name pos:line="83" pos:column="43">db<pos:position pos:line="83" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="47">pTab<pos:position pos:line="83" pos:column="51"/></name><operator pos:line="83" pos:column="51">-&gt;<pos:position pos:line="83" pos:column="56"/></operator><name pos:line="83" pos:column="53">pSelect<pos:position pos:line="83" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="62">0<pos:position pos:line="83" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">sqlite3SelectSetName<pos:position pos:line="84" pos:column="29"/></name><argument_list pos:line="84" pos:column="29">(<argument><expr><name><name pos:line="84" pos:column="30">pFrom<pos:position pos:line="84" pos:column="35"/></name><operator pos:line="84" pos:column="35">-&gt;<pos:position pos:line="84" pos:column="40"/></operator><name pos:line="84" pos:column="37">pSelect<pos:position pos:line="84" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="46">pTab<pos:position pos:line="84" pos:column="50"/></name><operator pos:line="84" pos:column="50">-&gt;<pos:position pos:line="84" pos:column="55"/></operator><name pos:line="84" pos:column="52">zName<pos:position pos:line="84" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><name pos:line="85" pos:column="9">nCol<pos:position pos:line="85" pos:column="13"/></name> <operator pos:line="85" pos:column="14">=<pos:position pos:line="85" pos:column="15"/></operator> <name><name pos:line="85" pos:column="16">pTab<pos:position pos:line="85" pos:column="20"/></name><operator pos:line="85" pos:column="20">-&gt;<pos:position pos:line="85" pos:column="25"/></operator><name pos:line="85" pos:column="22">nCol<pos:position pos:line="85" pos:column="26"/></name></name></expr>;<pos:position pos:line="85" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="86" pos:column="9">pTab<pos:position pos:line="86" pos:column="13"/></name><operator pos:line="86" pos:column="13">-&gt;<pos:position pos:line="86" pos:column="18"/></operator><name pos:line="86" pos:column="15">nCol<pos:position pos:line="86" pos:column="19"/></name></name> <operator pos:line="86" pos:column="20">=<pos:position pos:line="86" pos:column="21"/></operator> <operator pos:line="86" pos:column="22">-<pos:position pos:line="86" pos:column="23"/></operator><literal type="number" pos:line="86" pos:column="23">1<pos:position pos:line="86" pos:column="24"/></literal></expr>;<pos:position pos:line="86" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">sqlite3WalkSelect<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><name pos:line="87" pos:column="27">pWalker<pos:position pos:line="87" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="36">pFrom<pos:position pos:line="87" pos:column="41"/></name><operator pos:line="87" pos:column="41">-&gt;<pos:position pos:line="87" pos:column="46"/></operator><name pos:line="87" pos:column="43">pSelect<pos:position pos:line="87" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="88" pos:column="9">pTab<pos:position pos:line="88" pos:column="13"/></name><operator pos:line="88" pos:column="13">-&gt;<pos:position pos:line="88" pos:column="18"/></operator><name pos:line="88" pos:column="15">nCol<pos:position pos:line="88" pos:column="19"/></name></name> <operator pos:line="88" pos:column="20">=<pos:position pos:line="88" pos:column="21"/></operator> <name pos:line="88" pos:column="22">nCol<pos:position pos:line="88" pos:column="26"/></name></expr>;<pos:position pos:line="88" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="89" pos:column="8"/></block></then></if>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif<pos:position pos:line="90" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="91" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="93" pos:column="5">/* Locate the index named by the INDEXED BY clause, if any. */</comment>
    <if pos:line="94" pos:column="5">if<condition pos:line="94" pos:column="7">( <expr><call><name pos:line="94" pos:column="9">sqlite3IndexedByLookup<pos:position pos:line="94" pos:column="31"/></name><argument_list pos:line="94" pos:column="31">(<argument><expr><name pos:line="94" pos:column="32">pParse<pos:position pos:line="94" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="40">pFrom<pos:position pos:line="94" pos:column="45"/></name></expr></argument>)<pos:position pos:line="94" pos:column="46"/></argument_list></call></expr> )<pos:position pos:line="94" pos:column="48"/></condition><then><block pos:line="94" pos:column="48">{
      <return pos:line="95" pos:column="7">return <expr><name pos:line="95" pos:column="14">WRC_Abort<pos:position pos:line="95" pos:column="23"/></name></expr>;<pos:position pos:line="95" pos:column="24"/></return>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>
  }<pos:position pos:line="97" pos:column="4"/></block></for>

  <comment type="block" pos:line="99" pos:column="3">/* Process NATURAL keywords, and ON and USING clauses of joins.
  */</comment>
  <if pos:line="101" pos:column="3">if<condition pos:line="101" pos:column="5">( <expr><name><name pos:line="101" pos:column="7">db<pos:position pos:line="101" pos:column="9"/></name><operator pos:line="101" pos:column="9">-&gt;<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="11">mallocFailed<pos:position pos:line="101" pos:column="23"/></name></name> <operator pos:line="101" pos:column="24">||<pos:position pos:line="101" pos:column="26"/></operator> <call><name pos:line="101" pos:column="27">sqliteProcessJoin<pos:position pos:line="101" pos:column="44"/></name><argument_list pos:line="101" pos:column="44">(<argument><expr><name pos:line="101" pos:column="45">pParse<pos:position pos:line="101" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="53">p<pos:position pos:line="101" pos:column="54"/></name></expr></argument>)<pos:position pos:line="101" pos:column="55"/></argument_list></call></expr> )<pos:position pos:line="101" pos:column="57"/></condition><then><block pos:line="101" pos:column="57">{
    <return pos:line="102" pos:column="5">return <expr><name pos:line="102" pos:column="12">WRC_Abort<pos:position pos:line="102" pos:column="21"/></name></expr>;<pos:position pos:line="102" pos:column="22"/></return>
  }<pos:position pos:line="103" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="105" pos:column="3">/* For every "*" that occurs in the column list, insert the names of
  ** all columns in all tables.  And for every TABLE.* insert the names
  ** of all columns in TABLE.  The parser inserted a special expression
  ** with the TK_ASTERISK operator for each "*" that it found in the column
  ** list.  The following code just has to locate the TK_ASTERISK
  ** expressions and expand each one to the list of all columns in
  ** all tables.
  **
  ** The first loop just checks to see if there are any "*" operators
  ** that need expanding.
  */</comment>
  <for pos:line="116" pos:column="3">for<control pos:line="116" pos:column="6">(<init><expr><name pos:line="116" pos:column="7">k<pos:position pos:line="116" pos:column="8"/></name><operator pos:line="116" pos:column="8">=<pos:position pos:line="116" pos:column="9"/></operator><literal type="number" pos:line="116" pos:column="9">0<pos:position pos:line="116" pos:column="10"/></literal></expr>;<pos:position pos:line="116" pos:column="11"/></init> <condition><expr><name pos:line="116" pos:column="12">k<pos:position pos:line="116" pos:column="13"/></name><operator pos:line="116" pos:column="13">&lt;<pos:position pos:line="116" pos:column="17"/></operator><name><name pos:line="116" pos:column="14">pEList<pos:position pos:line="116" pos:column="20"/></name><operator pos:line="116" pos:column="20">-&gt;<pos:position pos:line="116" pos:column="25"/></operator><name pos:line="116" pos:column="22">nExpr<pos:position pos:line="116" pos:column="27"/></name></name></expr>;<pos:position pos:line="116" pos:column="28"/></condition> <incr><expr><name pos:line="116" pos:column="29">k<pos:position pos:line="116" pos:column="30"/></name><operator pos:line="116" pos:column="30">++<pos:position pos:line="116" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="116" pos:column="33"/></control><block pos:line="116" pos:column="33">{
    <expr_stmt><expr><name pos:line="117" pos:column="5">pE<pos:position pos:line="117" pos:column="7"/></name> <operator pos:line="117" pos:column="8">=<pos:position pos:line="117" pos:column="9"/></operator> <name><name pos:line="117" pos:column="10">pEList<pos:position pos:line="117" pos:column="16"/></name><operator pos:line="117" pos:column="16">-&gt;<pos:position pos:line="117" pos:column="21"/></operator><name pos:line="117" pos:column="18">a<pos:position pos:line="117" pos:column="19"/></name><index pos:line="117" pos:column="19">[<expr><name pos:line="117" pos:column="20">k<pos:position pos:line="117" pos:column="21"/></name></expr>]<pos:position pos:line="117" pos:column="22"/></index></name><operator pos:line="117" pos:column="22">.<pos:position pos:line="117" pos:column="23"/></operator><name pos:line="117" pos:column="23">pExpr<pos:position pos:line="117" pos:column="28"/></name></expr>;<pos:position pos:line="117" pos:column="29"/></expr_stmt>
    <if pos:line="118" pos:column="5">if<condition pos:line="118" pos:column="7">( <expr><name><name pos:line="118" pos:column="9">pE<pos:position pos:line="118" pos:column="11"/></name><operator pos:line="118" pos:column="11">-&gt;<pos:position pos:line="118" pos:column="16"/></operator><name pos:line="118" pos:column="13">op<pos:position pos:line="118" pos:column="15"/></name></name><operator pos:line="118" pos:column="15">==<pos:position pos:line="118" pos:column="17"/></operator><name pos:line="118" pos:column="17">TK_ASTERISK<pos:position pos:line="118" pos:column="28"/></name></expr> )<pos:position pos:line="118" pos:column="30"/></condition><then pos:line="118" pos:column="30"> <block type="pseudo"><break pos:line="118" pos:column="31">break;<pos:position pos:line="118" pos:column="37"/></break></block></then></if>
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">assert<pos:position pos:line="119" pos:column="11"/></name><argument_list pos:line="119" pos:column="11">( <argument><expr><name><name pos:line="119" pos:column="13">pE<pos:position pos:line="119" pos:column="15"/></name><operator pos:line="119" pos:column="15">-&gt;<pos:position pos:line="119" pos:column="20"/></operator><name pos:line="119" pos:column="17">op<pos:position pos:line="119" pos:column="19"/></name></name><operator pos:line="119" pos:column="19">!=<pos:position pos:line="119" pos:column="21"/></operator><name pos:line="119" pos:column="21">TK_DOT<pos:position pos:line="119" pos:column="27"/></name> <operator pos:line="119" pos:column="28">||<pos:position pos:line="119" pos:column="30"/></operator> <name><name pos:line="119" pos:column="31">pE<pos:position pos:line="119" pos:column="33"/></name><operator pos:line="119" pos:column="33">-&gt;<pos:position pos:line="119" pos:column="38"/></operator><name pos:line="119" pos:column="35">pRight<pos:position pos:line="119" pos:column="41"/></name></name><operator pos:line="119" pos:column="41">!=<pos:position pos:line="119" pos:column="43"/></operator><literal type="number" pos:line="119" pos:column="43">0<pos:position pos:line="119" pos:column="44"/></literal></expr></argument> )<pos:position pos:line="119" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="120" pos:column="5">assert<pos:position pos:line="120" pos:column="11"/></name><argument_list pos:line="120" pos:column="11">( <argument><expr><name><name pos:line="120" pos:column="13">pE<pos:position pos:line="120" pos:column="15"/></name><operator pos:line="120" pos:column="15">-&gt;<pos:position pos:line="120" pos:column="20"/></operator><name pos:line="120" pos:column="17">op<pos:position pos:line="120" pos:column="19"/></name></name><operator pos:line="120" pos:column="19">!=<pos:position pos:line="120" pos:column="21"/></operator><name pos:line="120" pos:column="21">TK_DOT<pos:position pos:line="120" pos:column="27"/></name> <operator pos:line="120" pos:column="28">||<pos:position pos:line="120" pos:column="30"/></operator> <operator pos:line="120" pos:column="31">(<pos:position pos:line="120" pos:column="32"/></operator><name><name pos:line="120" pos:column="32">pE<pos:position pos:line="120" pos:column="34"/></name><operator pos:line="120" pos:column="34">-&gt;<pos:position pos:line="120" pos:column="39"/></operator><name pos:line="120" pos:column="36">pLeft<pos:position pos:line="120" pos:column="41"/></name></name><operator pos:line="120" pos:column="41">!=<pos:position pos:line="120" pos:column="43"/></operator><literal type="number" pos:line="120" pos:column="43">0<pos:position pos:line="120" pos:column="44"/></literal> <operator pos:line="120" pos:column="45">&amp;&amp;<pos:position pos:line="120" pos:column="55"/></operator> <name><name pos:line="120" pos:column="48">pE<pos:position pos:line="120" pos:column="50"/></name><operator pos:line="120" pos:column="50">-&gt;<pos:position pos:line="120" pos:column="55"/></operator><name pos:line="120" pos:column="52">pLeft<pos:position pos:line="120" pos:column="57"/></name><operator pos:line="120" pos:column="57">-&gt;<pos:position pos:line="120" pos:column="62"/></operator><name pos:line="120" pos:column="59">op<pos:position pos:line="120" pos:column="61"/></name></name><operator pos:line="120" pos:column="61">==<pos:position pos:line="120" pos:column="63"/></operator><name pos:line="120" pos:column="63">TK_ID<pos:position pos:line="120" pos:column="68"/></name><operator pos:line="120" pos:column="68">)<pos:position pos:line="120" pos:column="69"/></operator></expr></argument> )<pos:position pos:line="120" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="72"/></expr_stmt>
    <if pos:line="121" pos:column="5">if<condition pos:line="121" pos:column="7">( <expr><name><name pos:line="121" pos:column="9">pE<pos:position pos:line="121" pos:column="11"/></name><operator pos:line="121" pos:column="11">-&gt;<pos:position pos:line="121" pos:column="16"/></operator><name pos:line="121" pos:column="13">op<pos:position pos:line="121" pos:column="15"/></name></name><operator pos:line="121" pos:column="15">==<pos:position pos:line="121" pos:column="17"/></operator><name pos:line="121" pos:column="17">TK_DOT<pos:position pos:line="121" pos:column="23"/></name> <operator pos:line="121" pos:column="24">&amp;&amp;<pos:position pos:line="121" pos:column="34"/></operator> <name><name pos:line="121" pos:column="27">pE<pos:position pos:line="121" pos:column="29"/></name><operator pos:line="121" pos:column="29">-&gt;<pos:position pos:line="121" pos:column="34"/></operator><name pos:line="121" pos:column="31">pRight<pos:position pos:line="121" pos:column="37"/></name><operator pos:line="121" pos:column="37">-&gt;<pos:position pos:line="121" pos:column="42"/></operator><name pos:line="121" pos:column="39">op<pos:position pos:line="121" pos:column="41"/></name></name><operator pos:line="121" pos:column="41">==<pos:position pos:line="121" pos:column="43"/></operator><name pos:line="121" pos:column="43">TK_ASTERISK<pos:position pos:line="121" pos:column="54"/></name></expr> )<pos:position pos:line="121" pos:column="56"/></condition><then pos:line="121" pos:column="56"> <block type="pseudo"><break pos:line="121" pos:column="57">break;<pos:position pos:line="121" pos:column="63"/></break></block></then></if>
  }<pos:position pos:line="122" pos:column="4"/></block></for>
  <if pos:line="123" pos:column="3">if<condition pos:line="123" pos:column="5">( <expr><name pos:line="123" pos:column="7">k<pos:position pos:line="123" pos:column="8"/></name><operator pos:line="123" pos:column="8">&lt;<pos:position pos:line="123" pos:column="12"/></operator><name><name pos:line="123" pos:column="9">pEList<pos:position pos:line="123" pos:column="15"/></name><operator pos:line="123" pos:column="15">-&gt;<pos:position pos:line="123" pos:column="20"/></operator><name pos:line="123" pos:column="17">nExpr<pos:position pos:line="123" pos:column="22"/></name></name></expr> )<pos:position pos:line="123" pos:column="24"/></condition><then><block pos:line="123" pos:column="24">{
    <comment type="block" pos:line="124" pos:column="5">/*
    ** If we get here it means the result set contains one or more "*"
    ** operators that need to be expanded.  Loop through each expression
    ** in the result set and expand them one by one.
    */</comment>
    <decl_stmt><decl><type><name><name pos:line="129" pos:column="5">struct<pos:position pos:line="129" pos:column="11"/></name> <name pos:line="129" pos:column="12">ExprList_item<pos:position pos:line="129" pos:column="25"/></name></name> <modifier pos:line="129" pos:column="26">*<pos:position pos:line="129" pos:column="27"/></modifier></type><name pos:line="129" pos:column="27">a<pos:position pos:line="129" pos:column="28"/></name> <init pos:line="129" pos:column="29">= <expr><name><name pos:line="129" pos:column="31">pEList<pos:position pos:line="129" pos:column="37"/></name><operator pos:line="129" pos:column="37">-&gt;<pos:position pos:line="129" pos:column="42"/></operator><name pos:line="129" pos:column="39">a<pos:position pos:line="129" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="129" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="130" pos:column="5">ExprList<pos:position pos:line="130" pos:column="13"/></name> <modifier pos:line="130" pos:column="14">*<pos:position pos:line="130" pos:column="15"/></modifier></type><name pos:line="130" pos:column="15">pNew<pos:position pos:line="130" pos:column="19"/></name> <init pos:line="130" pos:column="20">= <expr><literal type="number" pos:line="130" pos:column="22">0<pos:position pos:line="130" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="130" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="131" pos:column="5">int<pos:position pos:line="131" pos:column="8"/></name></type> <name pos:line="131" pos:column="9">flags<pos:position pos:line="131" pos:column="14"/></name> <init pos:line="131" pos:column="15">= <expr><name><name pos:line="131" pos:column="17">pParse<pos:position pos:line="131" pos:column="23"/></name><operator pos:line="131" pos:column="23">-&gt;<pos:position pos:line="131" pos:column="28"/></operator><name pos:line="131" pos:column="25">db<pos:position pos:line="131" pos:column="27"/></name><operator pos:line="131" pos:column="27">-&gt;<pos:position pos:line="131" pos:column="32"/></operator><name pos:line="131" pos:column="29">flags<pos:position pos:line="131" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="131" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="132" pos:column="5">int<pos:position pos:line="132" pos:column="8"/></name></type> <name pos:line="132" pos:column="9">longNames<pos:position pos:line="132" pos:column="18"/></name> <init pos:line="132" pos:column="19">= <expr><operator pos:line="132" pos:column="21">(<pos:position pos:line="132" pos:column="22"/></operator><name pos:line="132" pos:column="22">flags<pos:position pos:line="132" pos:column="27"/></name> <operator pos:line="132" pos:column="28">&amp;<pos:position pos:line="132" pos:column="33"/></operator> <name pos:line="132" pos:column="30">SQLITE_FullColNames<pos:position pos:line="132" pos:column="49"/></name><operator pos:line="132" pos:column="49">)<pos:position pos:line="132" pos:column="50"/></operator><operator pos:line="132" pos:column="50">!=<pos:position pos:line="132" pos:column="52"/></operator><literal type="number" pos:line="132" pos:column="52">0<pos:position pos:line="132" pos:column="53"/></literal>
                      <operator pos:line="133" pos:column="23">&amp;&amp;<pos:position pos:line="133" pos:column="33"/></operator> <operator pos:line="133" pos:column="26">(<pos:position pos:line="133" pos:column="27"/></operator><name pos:line="133" pos:column="27">flags<pos:position pos:line="133" pos:column="32"/></name> <operator pos:line="133" pos:column="33">&amp;<pos:position pos:line="133" pos:column="38"/></operator> <name pos:line="133" pos:column="35">SQLITE_ShortColNames<pos:position pos:line="133" pos:column="55"/></name><operator pos:line="133" pos:column="55">)<pos:position pos:line="133" pos:column="56"/></operator><operator pos:line="133" pos:column="56">==<pos:position pos:line="133" pos:column="58"/></operator><literal type="number" pos:line="133" pos:column="58">0<pos:position pos:line="133" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="133" pos:column="60"/></decl_stmt>

    <for pos:line="135" pos:column="5">for<control pos:line="135" pos:column="8">(<init><expr><name pos:line="135" pos:column="9">k<pos:position pos:line="135" pos:column="10"/></name><operator pos:line="135" pos:column="10">=<pos:position pos:line="135" pos:column="11"/></operator><literal type="number" pos:line="135" pos:column="11">0<pos:position pos:line="135" pos:column="12"/></literal></expr>;<pos:position pos:line="135" pos:column="13"/></init> <condition><expr><name pos:line="135" pos:column="14">k<pos:position pos:line="135" pos:column="15"/></name><operator pos:line="135" pos:column="15">&lt;<pos:position pos:line="135" pos:column="19"/></operator><name><name pos:line="135" pos:column="16">pEList<pos:position pos:line="135" pos:column="22"/></name><operator pos:line="135" pos:column="22">-&gt;<pos:position pos:line="135" pos:column="27"/></operator><name pos:line="135" pos:column="24">nExpr<pos:position pos:line="135" pos:column="29"/></name></name></expr>;<pos:position pos:line="135" pos:column="30"/></condition> <incr><expr><name pos:line="135" pos:column="31">k<pos:position pos:line="135" pos:column="32"/></name><operator pos:line="135" pos:column="32">++<pos:position pos:line="135" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="135" pos:column="35"/></control><block pos:line="135" pos:column="35">{
      <expr_stmt><expr><name pos:line="136" pos:column="7">pE<pos:position pos:line="136" pos:column="9"/></name> <operator pos:line="136" pos:column="10">=<pos:position pos:line="136" pos:column="11"/></operator> <name><name pos:line="136" pos:column="12">a<pos:position pos:line="136" pos:column="13"/></name><index pos:line="136" pos:column="13">[<expr><name pos:line="136" pos:column="14">k<pos:position pos:line="136" pos:column="15"/></name></expr>]<pos:position pos:line="136" pos:column="16"/></index></name><operator pos:line="136" pos:column="16">.<pos:position pos:line="136" pos:column="17"/></operator><name pos:line="136" pos:column="17">pExpr<pos:position pos:line="136" pos:column="22"/></name></expr>;<pos:position pos:line="136" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="137" pos:column="7">pRight<pos:position pos:line="137" pos:column="13"/></name> <operator pos:line="137" pos:column="14">=<pos:position pos:line="137" pos:column="15"/></operator> <name><name pos:line="137" pos:column="16">pE<pos:position pos:line="137" pos:column="18"/></name><operator pos:line="137" pos:column="18">-&gt;<pos:position pos:line="137" pos:column="23"/></operator><name pos:line="137" pos:column="20">pRight<pos:position pos:line="137" pos:column="26"/></name></name></expr>;<pos:position pos:line="137" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="138" pos:column="7">assert<pos:position pos:line="138" pos:column="13"/></name><argument_list pos:line="138" pos:column="13">( <argument><expr><name><name pos:line="138" pos:column="15">pE<pos:position pos:line="138" pos:column="17"/></name><operator pos:line="138" pos:column="17">-&gt;<pos:position pos:line="138" pos:column="22"/></operator><name pos:line="138" pos:column="19">op<pos:position pos:line="138" pos:column="21"/></name></name><operator pos:line="138" pos:column="21">!=<pos:position pos:line="138" pos:column="23"/></operator><name pos:line="138" pos:column="23">TK_DOT<pos:position pos:line="138" pos:column="29"/></name> <operator pos:line="138" pos:column="30">||<pos:position pos:line="138" pos:column="32"/></operator> <name pos:line="138" pos:column="33">pRight<pos:position pos:line="138" pos:column="39"/></name><operator pos:line="138" pos:column="39">!=<pos:position pos:line="138" pos:column="41"/></operator><literal type="number" pos:line="138" pos:column="41">0<pos:position pos:line="138" pos:column="42"/></literal></expr></argument> )<pos:position pos:line="138" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="45"/></expr_stmt>
      <if pos:line="139" pos:column="7">if<condition pos:line="139" pos:column="9">( <expr><name><name pos:line="139" pos:column="11">pE<pos:position pos:line="139" pos:column="13"/></name><operator pos:line="139" pos:column="13">-&gt;<pos:position pos:line="139" pos:column="18"/></operator><name pos:line="139" pos:column="15">op<pos:position pos:line="139" pos:column="17"/></name></name><operator pos:line="139" pos:column="17">!=<pos:position pos:line="139" pos:column="19"/></operator><name pos:line="139" pos:column="19">TK_ASTERISK<pos:position pos:line="139" pos:column="30"/></name>
       <operator pos:line="140" pos:column="8">&amp;&amp;<pos:position pos:line="140" pos:column="18"/></operator> <operator pos:line="140" pos:column="11">(<pos:position pos:line="140" pos:column="12"/></operator><name><name pos:line="140" pos:column="12">pE<pos:position pos:line="140" pos:column="14"/></name><operator pos:line="140" pos:column="14">-&gt;<pos:position pos:line="140" pos:column="19"/></operator><name pos:line="140" pos:column="16">op<pos:position pos:line="140" pos:column="18"/></name></name><operator pos:line="140" pos:column="18">!=<pos:position pos:line="140" pos:column="20"/></operator><name pos:line="140" pos:column="20">TK_DOT<pos:position pos:line="140" pos:column="26"/></name> <operator pos:line="140" pos:column="27">||<pos:position pos:line="140" pos:column="29"/></operator> <name><name pos:line="140" pos:column="30">pRight<pos:position pos:line="140" pos:column="36"/></name><operator pos:line="140" pos:column="36">-&gt;<pos:position pos:line="140" pos:column="41"/></operator><name pos:line="140" pos:column="38">op<pos:position pos:line="140" pos:column="40"/></name></name><operator pos:line="140" pos:column="40">!=<pos:position pos:line="140" pos:column="42"/></operator><name pos:line="140" pos:column="42">TK_ASTERISK<pos:position pos:line="140" pos:column="53"/></name><operator pos:line="140" pos:column="53">)<pos:position pos:line="140" pos:column="54"/></operator></expr>
      )<pos:position pos:line="141" pos:column="8"/></condition><then><block pos:line="141" pos:column="8">{
        <comment type="block" pos:line="142" pos:column="9">/* This particular expression does not need to be expanded.
        */</comment>
        <expr_stmt><expr><name pos:line="144" pos:column="9">pNew<pos:position pos:line="144" pos:column="13"/></name> <operator pos:line="144" pos:column="14">=<pos:position pos:line="144" pos:column="15"/></operator> <call><name pos:line="144" pos:column="16">sqlite3ExprListAppend<pos:position pos:line="144" pos:column="37"/></name><argument_list pos:line="144" pos:column="37">(<argument><expr><name pos:line="144" pos:column="38">pParse<pos:position pos:line="144" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="46">pNew<pos:position pos:line="144" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="144" pos:column="52">a<pos:position pos:line="144" pos:column="53"/></name><index pos:line="144" pos:column="53">[<expr><name pos:line="144" pos:column="54">k<pos:position pos:line="144" pos:column="55"/></name></expr>]<pos:position pos:line="144" pos:column="56"/></index></name><operator pos:line="144" pos:column="56">.<pos:position pos:line="144" pos:column="57"/></operator><name pos:line="144" pos:column="57">pExpr<pos:position pos:line="144" pos:column="62"/></name></expr></argument>)<pos:position pos:line="144" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="64"/></expr_stmt>
        <if pos:line="145" pos:column="9">if<condition pos:line="145" pos:column="11">( <expr><name pos:line="145" pos:column="13">pNew<pos:position pos:line="145" pos:column="17"/></name></expr> )<pos:position pos:line="145" pos:column="19"/></condition><then><block pos:line="145" pos:column="19">{
          <expr_stmt><expr><name><name pos:line="146" pos:column="11">pNew<pos:position pos:line="146" pos:column="15"/></name><operator pos:line="146" pos:column="15">-&gt;<pos:position pos:line="146" pos:column="20"/></operator><name pos:line="146" pos:column="17">a<pos:position pos:line="146" pos:column="18"/></name><index pos:line="146" pos:column="18">[<expr><name><name pos:line="146" pos:column="19">pNew<pos:position pos:line="146" pos:column="23"/></name><operator pos:line="146" pos:column="23">-&gt;<pos:position pos:line="146" pos:column="28"/></operator><name pos:line="146" pos:column="25">nExpr<pos:position pos:line="146" pos:column="30"/></name></name><operator pos:line="146" pos:column="30">-<pos:position pos:line="146" pos:column="31"/></operator><literal type="number" pos:line="146" pos:column="31">1<pos:position pos:line="146" pos:column="32"/></literal></expr>]<pos:position pos:line="146" pos:column="33"/></index></name><operator pos:line="146" pos:column="33">.<pos:position pos:line="146" pos:column="34"/></operator><name pos:line="146" pos:column="34">zName<pos:position pos:line="146" pos:column="39"/></name> <operator pos:line="146" pos:column="40">=<pos:position pos:line="146" pos:column="41"/></operator> <name><name pos:line="146" pos:column="42">a<pos:position pos:line="146" pos:column="43"/></name><index pos:line="146" pos:column="43">[<expr><name pos:line="146" pos:column="44">k<pos:position pos:line="146" pos:column="45"/></name></expr>]<pos:position pos:line="146" pos:column="46"/></index></name><operator pos:line="146" pos:column="46">.<pos:position pos:line="146" pos:column="47"/></operator><name pos:line="146" pos:column="47">zName<pos:position pos:line="146" pos:column="52"/></name></expr>;<pos:position pos:line="146" pos:column="53"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="147" pos:column="11">pNew<pos:position pos:line="147" pos:column="15"/></name><operator pos:line="147" pos:column="15">-&gt;<pos:position pos:line="147" pos:column="20"/></operator><name pos:line="147" pos:column="17">a<pos:position pos:line="147" pos:column="18"/></name><index pos:line="147" pos:column="18">[<expr><name><name pos:line="147" pos:column="19">pNew<pos:position pos:line="147" pos:column="23"/></name><operator pos:line="147" pos:column="23">-&gt;<pos:position pos:line="147" pos:column="28"/></operator><name pos:line="147" pos:column="25">nExpr<pos:position pos:line="147" pos:column="30"/></name></name><operator pos:line="147" pos:column="30">-<pos:position pos:line="147" pos:column="31"/></operator><literal type="number" pos:line="147" pos:column="31">1<pos:position pos:line="147" pos:column="32"/></literal></expr>]<pos:position pos:line="147" pos:column="33"/></index></name><operator pos:line="147" pos:column="33">.<pos:position pos:line="147" pos:column="34"/></operator><name pos:line="147" pos:column="34">zSpan<pos:position pos:line="147" pos:column="39"/></name> <operator pos:line="147" pos:column="40">=<pos:position pos:line="147" pos:column="41"/></operator> <name><name pos:line="147" pos:column="42">a<pos:position pos:line="147" pos:column="43"/></name><index pos:line="147" pos:column="43">[<expr><name pos:line="147" pos:column="44">k<pos:position pos:line="147" pos:column="45"/></name></expr>]<pos:position pos:line="147" pos:column="46"/></index></name><operator pos:line="147" pos:column="46">.<pos:position pos:line="147" pos:column="47"/></operator><name pos:line="147" pos:column="47">zSpan<pos:position pos:line="147" pos:column="52"/></name></expr>;<pos:position pos:line="147" pos:column="53"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="148" pos:column="11">a<pos:position pos:line="148" pos:column="12"/></name><index pos:line="148" pos:column="12">[<expr><name pos:line="148" pos:column="13">k<pos:position pos:line="148" pos:column="14"/></name></expr>]<pos:position pos:line="148" pos:column="15"/></index></name><operator pos:line="148" pos:column="15">.<pos:position pos:line="148" pos:column="16"/></operator><name pos:line="148" pos:column="16">zName<pos:position pos:line="148" pos:column="21"/></name> <operator pos:line="148" pos:column="22">=<pos:position pos:line="148" pos:column="23"/></operator> <literal type="number" pos:line="148" pos:column="24">0<pos:position pos:line="148" pos:column="25"/></literal></expr>;<pos:position pos:line="148" pos:column="26"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="149" pos:column="11">a<pos:position pos:line="149" pos:column="12"/></name><index pos:line="149" pos:column="12">[<expr><name pos:line="149" pos:column="13">k<pos:position pos:line="149" pos:column="14"/></name></expr>]<pos:position pos:line="149" pos:column="15"/></index></name><operator pos:line="149" pos:column="15">.<pos:position pos:line="149" pos:column="16"/></operator><name pos:line="149" pos:column="16">zSpan<pos:position pos:line="149" pos:column="21"/></name> <operator pos:line="149" pos:column="22">=<pos:position pos:line="149" pos:column="23"/></operator> <literal type="number" pos:line="149" pos:column="24">0<pos:position pos:line="149" pos:column="25"/></literal></expr>;<pos:position pos:line="149" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="150" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="151" pos:column="9">a<pos:position pos:line="151" pos:column="10"/></name><index pos:line="151" pos:column="10">[<expr><name pos:line="151" pos:column="11">k<pos:position pos:line="151" pos:column="12"/></name></expr>]<pos:position pos:line="151" pos:column="13"/></index></name><operator pos:line="151" pos:column="13">.<pos:position pos:line="151" pos:column="14"/></operator><name pos:line="151" pos:column="14">pExpr<pos:position pos:line="151" pos:column="19"/></name> <operator pos:line="151" pos:column="20">=<pos:position pos:line="151" pos:column="21"/></operator> <literal type="number" pos:line="151" pos:column="22">0<pos:position pos:line="151" pos:column="23"/></literal></expr>;<pos:position pos:line="151" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="152" pos:column="8"/></block></then><else pos:line="152" pos:column="8">else<block pos:line="152" pos:column="12">{
        <comment type="block" pos:line="153" pos:column="9">/* This expression is a "*" or a "TABLE.*" and needs to be
        ** expanded. */</comment>
        <decl_stmt><decl><type><name pos:line="155" pos:column="9">int<pos:position pos:line="155" pos:column="12"/></name></type> <name pos:line="155" pos:column="13">tableSeen<pos:position pos:line="155" pos:column="22"/></name> <init pos:line="155" pos:column="23">= <expr><literal type="number" pos:line="155" pos:column="25">0<pos:position pos:line="155" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="155" pos:column="27"/></decl_stmt>      <comment type="block" pos:line="155" pos:column="33">/* Set to 1 when TABLE matches */</comment>
        <decl_stmt><decl><type><name pos:line="156" pos:column="9">char<pos:position pos:line="156" pos:column="13"/></name> <modifier pos:line="156" pos:column="14">*<pos:position pos:line="156" pos:column="15"/></modifier></type><name pos:line="156" pos:column="15">zTName<pos:position pos:line="156" pos:column="21"/></name> <init pos:line="156" pos:column="22">= <expr><literal type="number" pos:line="156" pos:column="24">0<pos:position pos:line="156" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="156" pos:column="26"/></decl_stmt>       <comment type="block" pos:line="156" pos:column="33">/* text of name of TABLE */</comment>
        <if pos:line="157" pos:column="9">if<condition pos:line="157" pos:column="11">( <expr><name><name pos:line="157" pos:column="13">pE<pos:position pos:line="157" pos:column="15"/></name><operator pos:line="157" pos:column="15">-&gt;<pos:position pos:line="157" pos:column="20"/></operator><name pos:line="157" pos:column="17">op<pos:position pos:line="157" pos:column="19"/></name></name><operator pos:line="157" pos:column="19">==<pos:position pos:line="157" pos:column="21"/></operator><name pos:line="157" pos:column="21">TK_DOT<pos:position pos:line="157" pos:column="27"/></name></expr> )<pos:position pos:line="157" pos:column="29"/></condition><then><block pos:line="157" pos:column="29">{
          <expr_stmt><expr><call><name pos:line="158" pos:column="11">assert<pos:position pos:line="158" pos:column="17"/></name><argument_list pos:line="158" pos:column="17">( <argument><expr><name><name pos:line="158" pos:column="19">pE<pos:position pos:line="158" pos:column="21"/></name><operator pos:line="158" pos:column="21">-&gt;<pos:position pos:line="158" pos:column="26"/></operator><name pos:line="158" pos:column="23">pLeft<pos:position pos:line="158" pos:column="28"/></name></name><operator pos:line="158" pos:column="28">!=<pos:position pos:line="158" pos:column="30"/></operator><literal type="number" pos:line="158" pos:column="30">0<pos:position pos:line="158" pos:column="31"/></literal></expr></argument> )<pos:position pos:line="158" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="34"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="159" pos:column="11">assert<pos:position pos:line="159" pos:column="17"/></name><argument_list pos:line="159" pos:column="17">( <argument><expr><operator pos:line="159" pos:column="19">!<pos:position pos:line="159" pos:column="20"/></operator><call><name pos:line="159" pos:column="20">ExprHasProperty<pos:position pos:line="159" pos:column="35"/></name><argument_list pos:line="159" pos:column="35">(<argument><expr><name><name pos:line="159" pos:column="36">pE<pos:position pos:line="159" pos:column="38"/></name><operator pos:line="159" pos:column="38">-&gt;<pos:position pos:line="159" pos:column="43"/></operator><name pos:line="159" pos:column="40">pLeft<pos:position pos:line="159" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="47">EP_IntValue<pos:position pos:line="159" pos:column="58"/></name></expr></argument>)<pos:position pos:line="159" pos:column="59"/></argument_list></call></expr></argument> )<pos:position pos:line="159" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="62"/></expr_stmt>
          <expr_stmt><expr><name pos:line="160" pos:column="11">zTName<pos:position pos:line="160" pos:column="17"/></name> <operator pos:line="160" pos:column="18">=<pos:position pos:line="160" pos:column="19"/></operator> <name><name pos:line="160" pos:column="20">pE<pos:position pos:line="160" pos:column="22"/></name><operator pos:line="160" pos:column="22">-&gt;<pos:position pos:line="160" pos:column="27"/></operator><name pos:line="160" pos:column="24">pLeft<pos:position pos:line="160" pos:column="29"/></name><operator pos:line="160" pos:column="29">-&gt;<pos:position pos:line="160" pos:column="34"/></operator><name pos:line="160" pos:column="31">u<pos:position pos:line="160" pos:column="32"/></name><operator pos:line="160" pos:column="32">.<pos:position pos:line="160" pos:column="33"/></operator><name pos:line="160" pos:column="33">zToken<pos:position pos:line="160" pos:column="39"/></name></name></expr>;<pos:position pos:line="160" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="161" pos:column="10"/></block></then></if>
        <for pos:line="162" pos:column="9">for<control pos:line="162" pos:column="12">(<init><expr><name pos:line="162" pos:column="13">i<pos:position pos:line="162" pos:column="14"/></name><operator pos:line="162" pos:column="14">=<pos:position pos:line="162" pos:column="15"/></operator><literal type="number" pos:line="162" pos:column="15">0<pos:position pos:line="162" pos:column="16"/></literal></expr><operator pos:line="162" pos:column="16">,<pos:position pos:line="162" pos:column="17"/></operator> <expr><name pos:line="162" pos:column="18">pFrom<pos:position pos:line="162" pos:column="23"/></name><operator pos:line="162" pos:column="23">=<pos:position pos:line="162" pos:column="24"/></operator><name><name pos:line="162" pos:column="24">pTabList<pos:position pos:line="162" pos:column="32"/></name><operator pos:line="162" pos:column="32">-&gt;<pos:position pos:line="162" pos:column="37"/></operator><name pos:line="162" pos:column="34">a<pos:position pos:line="162" pos:column="35"/></name></name></expr>;<pos:position pos:line="162" pos:column="36"/></init> <condition><expr><name pos:line="162" pos:column="37">i<pos:position pos:line="162" pos:column="38"/></name><operator pos:line="162" pos:column="38">&lt;<pos:position pos:line="162" pos:column="42"/></operator><name><name pos:line="162" pos:column="39">pTabList<pos:position pos:line="162" pos:column="47"/></name><operator pos:line="162" pos:column="47">-&gt;<pos:position pos:line="162" pos:column="52"/></operator><name pos:line="162" pos:column="49">nSrc<pos:position pos:line="162" pos:column="53"/></name></name></expr>;<pos:position pos:line="162" pos:column="54"/></condition> <incr><expr><name pos:line="162" pos:column="55">i<pos:position pos:line="162" pos:column="56"/></name><operator pos:line="162" pos:column="56">++<pos:position pos:line="162" pos:column="58"/></operator></expr><operator pos:line="162" pos:column="58">,<pos:position pos:line="162" pos:column="59"/></operator> <expr><name pos:line="162" pos:column="60">pFrom<pos:position pos:line="162" pos:column="65"/></name><operator pos:line="162" pos:column="65">++<pos:position pos:line="162" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="162" pos:column="68"/></control><block pos:line="162" pos:column="68">{
          <decl_stmt><decl><type><name pos:line="163" pos:column="11">Table<pos:position pos:line="163" pos:column="16"/></name> <modifier pos:line="163" pos:column="17">*<pos:position pos:line="163" pos:column="18"/></modifier></type><name pos:line="163" pos:column="18">pTab<pos:position pos:line="163" pos:column="22"/></name> <init pos:line="163" pos:column="23">= <expr><name><name pos:line="163" pos:column="25">pFrom<pos:position pos:line="163" pos:column="30"/></name><operator pos:line="163" pos:column="30">-&gt;<pos:position pos:line="163" pos:column="35"/></operator><name pos:line="163" pos:column="32">pTab<pos:position pos:line="163" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="163" pos:column="37"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="164" pos:column="11">Select<pos:position pos:line="164" pos:column="17"/></name> <modifier pos:line="164" pos:column="18">*<pos:position pos:line="164" pos:column="19"/></modifier></type><name pos:line="164" pos:column="19">pSub<pos:position pos:line="164" pos:column="23"/></name> <init pos:line="164" pos:column="24">= <expr><name><name pos:line="164" pos:column="26">pFrom<pos:position pos:line="164" pos:column="31"/></name><operator pos:line="164" pos:column="31">-&gt;<pos:position pos:line="164" pos:column="36"/></operator><name pos:line="164" pos:column="33">pSelect<pos:position pos:line="164" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="164" pos:column="41"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="165" pos:column="11">char<pos:position pos:line="165" pos:column="15"/></name> <modifier pos:line="165" pos:column="16">*<pos:position pos:line="165" pos:column="17"/></modifier></type><name pos:line="165" pos:column="17">zTabName<pos:position pos:line="165" pos:column="25"/></name> <init pos:line="165" pos:column="26">= <expr><name><name pos:line="165" pos:column="28">pFrom<pos:position pos:line="165" pos:column="33"/></name><operator pos:line="165" pos:column="33">-&gt;<pos:position pos:line="165" pos:column="38"/></operator><name pos:line="165" pos:column="35">zAlias<pos:position pos:line="165" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="165" pos:column="42"/></decl_stmt>
          <decl_stmt><decl><type><specifier pos:line="166" pos:column="11">const<pos:position pos:line="166" pos:column="16"/></specifier> <name pos:line="166" pos:column="17">char<pos:position pos:line="166" pos:column="21"/></name> <modifier pos:line="166" pos:column="22">*<pos:position pos:line="166" pos:column="23"/></modifier></type><name pos:line="166" pos:column="23">zSchemaName<pos:position pos:line="166" pos:column="34"/></name> <init pos:line="166" pos:column="35">= <expr><literal type="number" pos:line="166" pos:column="37">0<pos:position pos:line="166" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="166" pos:column="39"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="167" pos:column="11">int<pos:position pos:line="167" pos:column="14"/></name></type> <name pos:line="167" pos:column="15">iDb<pos:position pos:line="167" pos:column="18"/></name></decl>;<pos:position pos:line="167" pos:column="19"/></decl_stmt>
          <if pos:line="168" pos:column="11">if<condition pos:line="168" pos:column="13">( <expr><name pos:line="168" pos:column="15">zTabName<pos:position pos:line="168" pos:column="23"/></name><operator pos:line="168" pos:column="23">==<pos:position pos:line="168" pos:column="25"/></operator><literal type="number" pos:line="168" pos:column="25">0<pos:position pos:line="168" pos:column="26"/></literal></expr> )<pos:position pos:line="168" pos:column="28"/></condition><then><block pos:line="168" pos:column="28">{
            <expr_stmt><expr><name pos:line="169" pos:column="13">zTabName<pos:position pos:line="169" pos:column="21"/></name> <operator pos:line="169" pos:column="22">=<pos:position pos:line="169" pos:column="23"/></operator> <name><name pos:line="169" pos:column="24">pTab<pos:position pos:line="169" pos:column="28"/></name><operator pos:line="169" pos:column="28">-&gt;<pos:position pos:line="169" pos:column="33"/></operator><name pos:line="169" pos:column="30">zName<pos:position pos:line="169" pos:column="35"/></name></name></expr>;<pos:position pos:line="169" pos:column="36"/></expr_stmt>
          }<pos:position pos:line="170" pos:column="12"/></block></then></if>
          <if pos:line="171" pos:column="11">if<condition pos:line="171" pos:column="13">( <expr><name><name pos:line="171" pos:column="15">db<pos:position pos:line="171" pos:column="17"/></name><operator pos:line="171" pos:column="17">-&gt;<pos:position pos:line="171" pos:column="22"/></operator><name pos:line="171" pos:column="19">mallocFailed<pos:position pos:line="171" pos:column="31"/></name></name></expr> )<pos:position pos:line="171" pos:column="33"/></condition><then pos:line="171" pos:column="33"> <block type="pseudo"><break pos:line="171" pos:column="34">break;<pos:position pos:line="171" pos:column="40"/></break></block></then></if>
          <if pos:line="172" pos:column="11">if<condition pos:line="172" pos:column="13">( <expr><name pos:line="172" pos:column="15">pSub<pos:position pos:line="172" pos:column="19"/></name><operator pos:line="172" pos:column="19">==<pos:position pos:line="172" pos:column="21"/></operator><literal type="number" pos:line="172" pos:column="21">0<pos:position pos:line="172" pos:column="22"/></literal> <operator pos:line="172" pos:column="23">||<pos:position pos:line="172" pos:column="25"/></operator> <operator pos:line="172" pos:column="26">(<pos:position pos:line="172" pos:column="27"/></operator><name><name pos:line="172" pos:column="27">pSub<pos:position pos:line="172" pos:column="31"/></name><operator pos:line="172" pos:column="31">-&gt;<pos:position pos:line="172" pos:column="36"/></operator><name pos:line="172" pos:column="33">selFlags<pos:position pos:line="172" pos:column="41"/></name></name> <operator pos:line="172" pos:column="42">&amp;<pos:position pos:line="172" pos:column="47"/></operator> <name pos:line="172" pos:column="44">SF_NestedFrom<pos:position pos:line="172" pos:column="57"/></name><operator pos:line="172" pos:column="57">)<pos:position pos:line="172" pos:column="58"/></operator><operator pos:line="172" pos:column="58">==<pos:position pos:line="172" pos:column="60"/></operator><literal type="number" pos:line="172" pos:column="60">0<pos:position pos:line="172" pos:column="61"/></literal></expr> )<pos:position pos:line="172" pos:column="63"/></condition><then><block pos:line="172" pos:column="63">{
            <expr_stmt><expr><name pos:line="173" pos:column="13">pSub<pos:position pos:line="173" pos:column="17"/></name> <operator pos:line="173" pos:column="18">=<pos:position pos:line="173" pos:column="19"/></operator> <literal type="number" pos:line="173" pos:column="20">0<pos:position pos:line="173" pos:column="21"/></literal></expr>;<pos:position pos:line="173" pos:column="22"/></expr_stmt>
            <if pos:line="174" pos:column="13">if<condition pos:line="174" pos:column="15">( <expr><name pos:line="174" pos:column="17">zTName<pos:position pos:line="174" pos:column="23"/></name> <operator pos:line="174" pos:column="24">&amp;&amp;<pos:position pos:line="174" pos:column="34"/></operator> <call><name pos:line="174" pos:column="27">sqlite3StrICmp<pos:position pos:line="174" pos:column="41"/></name><argument_list pos:line="174" pos:column="41">(<argument><expr><name pos:line="174" pos:column="42">zTName<pos:position pos:line="174" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="50">zTabName<pos:position pos:line="174" pos:column="58"/></name></expr></argument>)<pos:position pos:line="174" pos:column="59"/></argument_list></call><operator pos:line="174" pos:column="59">!=<pos:position pos:line="174" pos:column="61"/></operator><literal type="number" pos:line="174" pos:column="61">0<pos:position pos:line="174" pos:column="62"/></literal></expr> )<pos:position pos:line="174" pos:column="64"/></condition><then><block pos:line="174" pos:column="64">{
              <continue pos:line="175" pos:column="15">continue;<pos:position pos:line="175" pos:column="24"/></continue>
            }<pos:position pos:line="176" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="177" pos:column="13">iDb<pos:position pos:line="177" pos:column="16"/></name> <operator pos:line="177" pos:column="17">=<pos:position pos:line="177" pos:column="18"/></operator> <call><name pos:line="177" pos:column="19">sqlite3SchemaToIndex<pos:position pos:line="177" pos:column="39"/></name><argument_list pos:line="177" pos:column="39">(<argument><expr><name pos:line="177" pos:column="40">db<pos:position pos:line="177" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="177" pos:column="44">pTab<pos:position pos:line="177" pos:column="48"/></name><operator pos:line="177" pos:column="48">-&gt;<pos:position pos:line="177" pos:column="53"/></operator><name pos:line="177" pos:column="50">pSchema<pos:position pos:line="177" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="178" pos:column="13">zSchemaName<pos:position pos:line="178" pos:column="24"/></name> <operator pos:line="178" pos:column="25">=<pos:position pos:line="178" pos:column="26"/></operator> <ternary><condition><expr><name pos:line="178" pos:column="27">iDb<pos:position pos:line="178" pos:column="30"/></name><operator pos:line="178" pos:column="30">&gt;=<pos:position pos:line="178" pos:column="35"/></operator><literal type="number" pos:line="178" pos:column="32">0<pos:position pos:line="178" pos:column="33"/></literal></expr> ?<pos:position pos:line="178" pos:column="35"/></condition><then pos:line="178" pos:column="35"> <expr><name><name pos:line="178" pos:column="36">db<pos:position pos:line="178" pos:column="38"/></name><operator pos:line="178" pos:column="38">-&gt;<pos:position pos:line="178" pos:column="43"/></operator><name pos:line="178" pos:column="40">aDb<pos:position pos:line="178" pos:column="43"/></name><index pos:line="178" pos:column="43">[<expr><name pos:line="178" pos:column="44">iDb<pos:position pos:line="178" pos:column="47"/></name></expr>]<pos:position pos:line="178" pos:column="48"/></index></name><operator pos:line="178" pos:column="48">.<pos:position pos:line="178" pos:column="49"/></operator><name pos:line="178" pos:column="49">zDbSName<pos:position pos:line="178" pos:column="57"/></name></expr> <pos:position pos:line="178" pos:column="58"/></then><else pos:line="178" pos:column="58">: <expr><literal type="string" pos:line="178" pos:column="60">"*"<pos:position pos:line="178" pos:column="63"/></literal></expr></else></ternary></expr>;<pos:position pos:line="178" pos:column="64"/></expr_stmt>
          }<pos:position pos:line="179" pos:column="12"/></block></then></if>
          <for pos:line="180" pos:column="11">for<control pos:line="180" pos:column="14">(<init><expr><name pos:line="180" pos:column="15">j<pos:position pos:line="180" pos:column="16"/></name><operator pos:line="180" pos:column="16">=<pos:position pos:line="180" pos:column="17"/></operator><literal type="number" pos:line="180" pos:column="17">0<pos:position pos:line="180" pos:column="18"/></literal></expr>;<pos:position pos:line="180" pos:column="19"/></init> <condition><expr><name pos:line="180" pos:column="20">j<pos:position pos:line="180" pos:column="21"/></name><operator pos:line="180" pos:column="21">&lt;<pos:position pos:line="180" pos:column="25"/></operator><name><name pos:line="180" pos:column="22">pTab<pos:position pos:line="180" pos:column="26"/></name><operator pos:line="180" pos:column="26">-&gt;<pos:position pos:line="180" pos:column="31"/></operator><name pos:line="180" pos:column="28">nCol<pos:position pos:line="180" pos:column="32"/></name></name></expr>;<pos:position pos:line="180" pos:column="33"/></condition> <incr><expr><name pos:line="180" pos:column="34">j<pos:position pos:line="180" pos:column="35"/></name><operator pos:line="180" pos:column="35">++<pos:position pos:line="180" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="180" pos:column="38"/></control><block pos:line="180" pos:column="38">{
            <decl_stmt><decl><type><name pos:line="181" pos:column="13">char<pos:position pos:line="181" pos:column="17"/></name> <modifier pos:line="181" pos:column="18">*<pos:position pos:line="181" pos:column="19"/></modifier></type><name pos:line="181" pos:column="19">zName<pos:position pos:line="181" pos:column="24"/></name> <init pos:line="181" pos:column="25">= <expr><name><name pos:line="181" pos:column="27">pTab<pos:position pos:line="181" pos:column="31"/></name><operator pos:line="181" pos:column="31">-&gt;<pos:position pos:line="181" pos:column="36"/></operator><name pos:line="181" pos:column="33">aCol<pos:position pos:line="181" pos:column="37"/></name><index pos:line="181" pos:column="37">[<expr><name pos:line="181" pos:column="38">j<pos:position pos:line="181" pos:column="39"/></name></expr>]<pos:position pos:line="181" pos:column="40"/></index></name><operator pos:line="181" pos:column="40">.<pos:position pos:line="181" pos:column="41"/></operator><name pos:line="181" pos:column="41">zName<pos:position pos:line="181" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="181" pos:column="47"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="182" pos:column="13">char<pos:position pos:line="182" pos:column="17"/></name> <modifier pos:line="182" pos:column="18">*<pos:position pos:line="182" pos:column="19"/></modifier></type><name pos:line="182" pos:column="19">zColname<pos:position pos:line="182" pos:column="27"/></name></decl>;<pos:position pos:line="182" pos:column="28"/></decl_stmt>  <comment type="block" pos:line="182" pos:column="30">/* The computed column name */</comment>
            <decl_stmt><decl><type><name pos:line="183" pos:column="13">char<pos:position pos:line="183" pos:column="17"/></name> <modifier pos:line="183" pos:column="18">*<pos:position pos:line="183" pos:column="19"/></modifier></type><name pos:line="183" pos:column="19">zToFree<pos:position pos:line="183" pos:column="26"/></name></decl>;<pos:position pos:line="183" pos:column="27"/></decl_stmt>   <comment type="block" pos:line="183" pos:column="30">/* Malloced string that needs to be freed */</comment>
            <decl_stmt><decl><type><name pos:line="184" pos:column="13">Token<pos:position pos:line="184" pos:column="18"/></name></type> <name pos:line="184" pos:column="19">sColname<pos:position pos:line="184" pos:column="27"/></name></decl>;<pos:position pos:line="184" pos:column="28"/></decl_stmt>  <comment type="block" pos:line="184" pos:column="30">/* Computed column name as a token */</comment>

            <expr_stmt><expr><call><name pos:line="186" pos:column="13">assert<pos:position pos:line="186" pos:column="19"/></name><argument_list pos:line="186" pos:column="19">( <argument><expr><name pos:line="186" pos:column="21">zName<pos:position pos:line="186" pos:column="26"/></name></expr></argument> )<pos:position pos:line="186" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="29"/></expr_stmt>
            <if pos:line="187" pos:column="13">if<condition pos:line="187" pos:column="15">( <expr><name pos:line="187" pos:column="17">zTName<pos:position pos:line="187" pos:column="23"/></name> <operator pos:line="187" pos:column="24">&amp;&amp;<pos:position pos:line="187" pos:column="34"/></operator> <name pos:line="187" pos:column="27">pSub<pos:position pos:line="187" pos:column="31"/></name>
             <operator pos:line="188" pos:column="14">&amp;&amp;<pos:position pos:line="188" pos:column="24"/></operator> <call><name pos:line="188" pos:column="17">sqlite3MatchSpanName<pos:position pos:line="188" pos:column="37"/></name><argument_list pos:line="188" pos:column="37">(<argument><expr><name><name pos:line="188" pos:column="38">pSub<pos:position pos:line="188" pos:column="42"/></name><operator pos:line="188" pos:column="42">-&gt;<pos:position pos:line="188" pos:column="47"/></operator><name pos:line="188" pos:column="44">pEList<pos:position pos:line="188" pos:column="50"/></name><operator pos:line="188" pos:column="50">-&gt;<pos:position pos:line="188" pos:column="55"/></operator><name pos:line="188" pos:column="52">a<pos:position pos:line="188" pos:column="53"/></name><index pos:line="188" pos:column="53">[<expr><name pos:line="188" pos:column="54">j<pos:position pos:line="188" pos:column="55"/></name></expr>]<pos:position pos:line="188" pos:column="56"/></index></name><operator pos:line="188" pos:column="56">.<pos:position pos:line="188" pos:column="57"/></operator><name pos:line="188" pos:column="57">zSpan<pos:position pos:line="188" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="188" pos:column="64">0<pos:position pos:line="188" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="67">zTName<pos:position pos:line="188" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="188" pos:column="75">0<pos:position pos:line="188" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="77"/></argument_list></call><operator pos:line="188" pos:column="77">==<pos:position pos:line="188" pos:column="79"/></operator><literal type="number" pos:line="188" pos:column="79">0<pos:position pos:line="188" pos:column="80"/></literal></expr>
            )<pos:position pos:line="189" pos:column="14"/></condition><then><block pos:line="189" pos:column="14">{
              <continue pos:line="190" pos:column="15">continue;<pos:position pos:line="190" pos:column="24"/></continue>
            }<pos:position pos:line="191" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="193" pos:column="13">/* If a column is marked as 'hidden', omit it from the expanded
            ** result-set list unless the SELECT has the SF_IncludeHidden
            ** bit set.
            */</comment>
            <if pos:line="197" pos:column="13">if<condition pos:line="197" pos:column="15">( <expr><operator pos:line="197" pos:column="17">(<pos:position pos:line="197" pos:column="18"/></operator><name><name pos:line="197" pos:column="18">p<pos:position pos:line="197" pos:column="19"/></name><operator pos:line="197" pos:column="19">-&gt;<pos:position pos:line="197" pos:column="24"/></operator><name pos:line="197" pos:column="21">selFlags<pos:position pos:line="197" pos:column="29"/></name></name> <operator pos:line="197" pos:column="30">&amp;<pos:position pos:line="197" pos:column="35"/></operator> <name pos:line="197" pos:column="32">SF_IncludeHidden<pos:position pos:line="197" pos:column="48"/></name><operator pos:line="197" pos:column="48">)<pos:position pos:line="197" pos:column="49"/></operator><operator pos:line="197" pos:column="49">==<pos:position pos:line="197" pos:column="51"/></operator><literal type="number" pos:line="197" pos:column="51">0<pos:position pos:line="197" pos:column="52"/></literal>
             <operator pos:line="198" pos:column="14">&amp;&amp;<pos:position pos:line="198" pos:column="24"/></operator> <call><name pos:line="198" pos:column="17">IsHiddenColumn<pos:position pos:line="198" pos:column="31"/></name><argument_list pos:line="198" pos:column="31">(<argument><expr><operator pos:line="198" pos:column="32">&amp;<pos:position pos:line="198" pos:column="37"/></operator><name><name pos:line="198" pos:column="33">pTab<pos:position pos:line="198" pos:column="37"/></name><operator pos:line="198" pos:column="37">-&gt;<pos:position pos:line="198" pos:column="42"/></operator><name pos:line="198" pos:column="39">aCol<pos:position pos:line="198" pos:column="43"/></name><index pos:line="198" pos:column="43">[<expr><name pos:line="198" pos:column="44">j<pos:position pos:line="198" pos:column="45"/></name></expr>]<pos:position pos:line="198" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="198" pos:column="47"/></argument_list></call></expr> 
            )<pos:position pos:line="199" pos:column="14"/></condition><then><block pos:line="199" pos:column="14">{
              <continue pos:line="200" pos:column="15">continue;<pos:position pos:line="200" pos:column="24"/></continue>
            }<pos:position pos:line="201" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="202" pos:column="13">tableSeen<pos:position pos:line="202" pos:column="22"/></name> <operator pos:line="202" pos:column="23">=<pos:position pos:line="202" pos:column="24"/></operator> <literal type="number" pos:line="202" pos:column="25">1<pos:position pos:line="202" pos:column="26"/></literal></expr>;<pos:position pos:line="202" pos:column="27"/></expr_stmt>

            <if pos:line="204" pos:column="13">if<condition pos:line="204" pos:column="15">( <expr><name pos:line="204" pos:column="17">i<pos:position pos:line="204" pos:column="18"/></name><operator pos:line="204" pos:column="18">&gt;<pos:position pos:line="204" pos:column="22"/></operator><literal type="number" pos:line="204" pos:column="19">0<pos:position pos:line="204" pos:column="20"/></literal> <operator pos:line="204" pos:column="21">&amp;&amp;<pos:position pos:line="204" pos:column="31"/></operator> <name pos:line="204" pos:column="24">zTName<pos:position pos:line="204" pos:column="30"/></name><operator pos:line="204" pos:column="30">==<pos:position pos:line="204" pos:column="32"/></operator><literal type="number" pos:line="204" pos:column="32">0<pos:position pos:line="204" pos:column="33"/></literal></expr> )<pos:position pos:line="204" pos:column="35"/></condition><then><block pos:line="204" pos:column="35">{
              <if pos:line="205" pos:column="15">if<condition pos:line="205" pos:column="17">( <expr><operator pos:line="205" pos:column="19">(<pos:position pos:line="205" pos:column="20"/></operator><name><name pos:line="205" pos:column="20">pFrom<pos:position pos:line="205" pos:column="25"/></name><operator pos:line="205" pos:column="25">-&gt;<pos:position pos:line="205" pos:column="30"/></operator><name pos:line="205" pos:column="27">fg<pos:position pos:line="205" pos:column="29"/></name><operator pos:line="205" pos:column="29">.<pos:position pos:line="205" pos:column="30"/></operator><name pos:line="205" pos:column="30">jointype<pos:position pos:line="205" pos:column="38"/></name></name> <operator pos:line="205" pos:column="39">&amp;<pos:position pos:line="205" pos:column="44"/></operator> <name pos:line="205" pos:column="41">JT_NATURAL<pos:position pos:line="205" pos:column="51"/></name><operator pos:line="205" pos:column="51">)<pos:position pos:line="205" pos:column="52"/></operator><operator pos:line="205" pos:column="52">!=<pos:position pos:line="205" pos:column="54"/></operator><literal type="number" pos:line="205" pos:column="54">0<pos:position pos:line="205" pos:column="55"/></literal>
                <operator pos:line="206" pos:column="17">&amp;&amp;<pos:position pos:line="206" pos:column="27"/></operator> <call><name pos:line="206" pos:column="20">tableAndColumnIndex<pos:position pos:line="206" pos:column="39"/></name><argument_list pos:line="206" pos:column="39">(<argument><expr><name pos:line="206" pos:column="40">pTabList<pos:position pos:line="206" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="50">i<pos:position pos:line="206" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="53">zName<pos:position pos:line="206" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="206" pos:column="60">0<pos:position pos:line="206" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="206" pos:column="63">0<pos:position pos:line="206" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="206" pos:column="65"/></argument_list></call></expr>
              )<pos:position pos:line="207" pos:column="16"/></condition><then><block pos:line="207" pos:column="16">{
                <comment type="block" pos:line="208" pos:column="17">/* In a NATURAL join, omit the join columns from the 
                ** table to the right of the join */</comment>
                <continue pos:line="210" pos:column="17">continue;<pos:position pos:line="210" pos:column="26"/></continue>
              }<pos:position pos:line="211" pos:column="16"/></block></then></if>
              <if pos:line="212" pos:column="15">if<condition pos:line="212" pos:column="17">( <expr><call><name pos:line="212" pos:column="19">sqlite3IdListIndex<pos:position pos:line="212" pos:column="37"/></name><argument_list pos:line="212" pos:column="37">(<argument><expr><name><name pos:line="212" pos:column="38">pFrom<pos:position pos:line="212" pos:column="43"/></name><operator pos:line="212" pos:column="43">-&gt;<pos:position pos:line="212" pos:column="48"/></operator><name pos:line="212" pos:column="45">pUsing<pos:position pos:line="212" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="53">zName<pos:position pos:line="212" pos:column="58"/></name></expr></argument>)<pos:position pos:line="212" pos:column="59"/></argument_list></call><operator pos:line="212" pos:column="59">&gt;=<pos:position pos:line="212" pos:column="64"/></operator><literal type="number" pos:line="212" pos:column="61">0<pos:position pos:line="212" pos:column="62"/></literal></expr> )<pos:position pos:line="212" pos:column="64"/></condition><then><block pos:line="212" pos:column="64">{
                <comment type="block" pos:line="213" pos:column="17">/* In a join with a USING clause, omit columns in the
                ** using clause from the table on the right. */</comment>
                <continue pos:line="215" pos:column="17">continue;<pos:position pos:line="215" pos:column="26"/></continue>
              }<pos:position pos:line="216" pos:column="16"/></block></then></if>
            }<pos:position pos:line="217" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="218" pos:column="13">pRight<pos:position pos:line="218" pos:column="19"/></name> <operator pos:line="218" pos:column="20">=<pos:position pos:line="218" pos:column="21"/></operator> <call><name pos:line="218" pos:column="22">sqlite3Expr<pos:position pos:line="218" pos:column="33"/></name><argument_list pos:line="218" pos:column="33">(<argument><expr><name pos:line="218" pos:column="34">db<pos:position pos:line="218" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="38">TK_ID<pos:position pos:line="218" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="45">zName<pos:position pos:line="218" pos:column="50"/></name></expr></argument>)<pos:position pos:line="218" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name pos:line="219" pos:column="13">zColname<pos:position pos:line="219" pos:column="21"/></name> <operator pos:line="219" pos:column="22">=<pos:position pos:line="219" pos:column="23"/></operator> <name pos:line="219" pos:column="24">zName<pos:position pos:line="219" pos:column="29"/></name></expr>;<pos:position pos:line="219" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="220" pos:column="13">zToFree<pos:position pos:line="220" pos:column="20"/></name> <operator pos:line="220" pos:column="21">=<pos:position pos:line="220" pos:column="22"/></operator> <literal type="number" pos:line="220" pos:column="23">0<pos:position pos:line="220" pos:column="24"/></literal></expr>;<pos:position pos:line="220" pos:column="25"/></expr_stmt>
            <if pos:line="221" pos:column="13">if<condition pos:line="221" pos:column="15">( <expr><name pos:line="221" pos:column="17">longNames<pos:position pos:line="221" pos:column="26"/></name> <operator pos:line="221" pos:column="27">||<pos:position pos:line="221" pos:column="29"/></operator> <name><name pos:line="221" pos:column="30">pTabList<pos:position pos:line="221" pos:column="38"/></name><operator pos:line="221" pos:column="38">-&gt;<pos:position pos:line="221" pos:column="43"/></operator><name pos:line="221" pos:column="40">nSrc<pos:position pos:line="221" pos:column="44"/></name></name><operator pos:line="221" pos:column="44">&gt;<pos:position pos:line="221" pos:column="48"/></operator><literal type="number" pos:line="221" pos:column="45">1<pos:position pos:line="221" pos:column="46"/></literal></expr> )<pos:position pos:line="221" pos:column="48"/></condition><then><block pos:line="221" pos:column="48">{
              <decl_stmt><decl><type><name pos:line="222" pos:column="15">Expr<pos:position pos:line="222" pos:column="19"/></name> <modifier pos:line="222" pos:column="20">*<pos:position pos:line="222" pos:column="21"/></modifier></type><name pos:line="222" pos:column="21">pLeft<pos:position pos:line="222" pos:column="26"/></name></decl>;<pos:position pos:line="222" pos:column="27"/></decl_stmt>
              <expr_stmt><expr><name pos:line="223" pos:column="15">pLeft<pos:position pos:line="223" pos:column="20"/></name> <operator pos:line="223" pos:column="21">=<pos:position pos:line="223" pos:column="22"/></operator> <call><name pos:line="223" pos:column="23">sqlite3Expr<pos:position pos:line="223" pos:column="34"/></name><argument_list pos:line="223" pos:column="34">(<argument><expr><name pos:line="223" pos:column="35">db<pos:position pos:line="223" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="223" pos:column="39">TK_ID<pos:position pos:line="223" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="223" pos:column="46">zTabName<pos:position pos:line="223" pos:column="54"/></name></expr></argument>)<pos:position pos:line="223" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="56"/></expr_stmt>
              <expr_stmt><expr><name pos:line="224" pos:column="15">pExpr<pos:position pos:line="224" pos:column="20"/></name> <operator pos:line="224" pos:column="21">=<pos:position pos:line="224" pos:column="22"/></operator> <call><name pos:line="224" pos:column="23">sqlite3PExpr<pos:position pos:line="224" pos:column="35"/></name><argument_list pos:line="224" pos:column="35">(<argument><expr><name pos:line="224" pos:column="36">pParse<pos:position pos:line="224" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="44">TK_DOT<pos:position pos:line="224" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="52">pLeft<pos:position pos:line="224" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="59">pRight<pos:position pos:line="224" pos:column="65"/></name></expr></argument>)<pos:position pos:line="224" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="67"/></expr_stmt>
              <if pos:line="225" pos:column="15">if<condition pos:line="225" pos:column="17">( <expr><name pos:line="225" pos:column="19">zSchemaName<pos:position pos:line="225" pos:column="30"/></name></expr> )<pos:position pos:line="225" pos:column="32"/></condition><then><block pos:line="225" pos:column="32">{
                <expr_stmt><expr><name pos:line="226" pos:column="17">pLeft<pos:position pos:line="226" pos:column="22"/></name> <operator pos:line="226" pos:column="23">=<pos:position pos:line="226" pos:column="24"/></operator> <call><name pos:line="226" pos:column="25">sqlite3Expr<pos:position pos:line="226" pos:column="36"/></name><argument_list pos:line="226" pos:column="36">(<argument><expr><name pos:line="226" pos:column="37">db<pos:position pos:line="226" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="41">TK_ID<pos:position pos:line="226" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="48">zSchemaName<pos:position pos:line="226" pos:column="59"/></name></expr></argument>)<pos:position pos:line="226" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name pos:line="227" pos:column="17">pExpr<pos:position pos:line="227" pos:column="22"/></name> <operator pos:line="227" pos:column="23">=<pos:position pos:line="227" pos:column="24"/></operator> <call><name pos:line="227" pos:column="25">sqlite3PExpr<pos:position pos:line="227" pos:column="37"/></name><argument_list pos:line="227" pos:column="37">(<argument><expr><name pos:line="227" pos:column="38">pParse<pos:position pos:line="227" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="46">TK_DOT<pos:position pos:line="227" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="54">pLeft<pos:position pos:line="227" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="61">pExpr<pos:position pos:line="227" pos:column="66"/></name></expr></argument>)<pos:position pos:line="227" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="68"/></expr_stmt>
              }<pos:position pos:line="228" pos:column="16"/></block></then></if>
              <if pos:line="229" pos:column="15">if<condition pos:line="229" pos:column="17">( <expr><name pos:line="229" pos:column="19">longNames<pos:position pos:line="229" pos:column="28"/></name></expr> )<pos:position pos:line="229" pos:column="30"/></condition><then><block pos:line="229" pos:column="30">{
                <expr_stmt><expr><name pos:line="230" pos:column="17">zColname<pos:position pos:line="230" pos:column="25"/></name> <operator pos:line="230" pos:column="26">=<pos:position pos:line="230" pos:column="27"/></operator> <call><name pos:line="230" pos:column="28">sqlite3MPrintf<pos:position pos:line="230" pos:column="42"/></name><argument_list pos:line="230" pos:column="42">(<argument><expr><name pos:line="230" pos:column="43">db<pos:position pos:line="230" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="47">"%s.%s"<pos:position pos:line="230" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="230" pos:column="56">zTabName<pos:position pos:line="230" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="66">zName<pos:position pos:line="230" pos:column="71"/></name></expr></argument>)<pos:position pos:line="230" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><name pos:line="231" pos:column="17">zToFree<pos:position pos:line="231" pos:column="24"/></name> <operator pos:line="231" pos:column="25">=<pos:position pos:line="231" pos:column="26"/></operator> <name pos:line="231" pos:column="27">zColname<pos:position pos:line="231" pos:column="35"/></name></expr>;<pos:position pos:line="231" pos:column="36"/></expr_stmt>
              }<pos:position pos:line="232" pos:column="16"/></block></then></if>
            }<pos:position pos:line="233" pos:column="14"/></block></then><else pos:line="233" pos:column="14">else<block pos:line="233" pos:column="18">{
              <expr_stmt><expr><name pos:line="234" pos:column="15">pExpr<pos:position pos:line="234" pos:column="20"/></name> <operator pos:line="234" pos:column="21">=<pos:position pos:line="234" pos:column="22"/></operator> <name pos:line="234" pos:column="23">pRight<pos:position pos:line="234" pos:column="29"/></name></expr>;<pos:position pos:line="234" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="235" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="236" pos:column="13">pNew<pos:position pos:line="236" pos:column="17"/></name> <operator pos:line="236" pos:column="18">=<pos:position pos:line="236" pos:column="19"/></operator> <call><name pos:line="236" pos:column="20">sqlite3ExprListAppend<pos:position pos:line="236" pos:column="41"/></name><argument_list pos:line="236" pos:column="41">(<argument><expr><name pos:line="236" pos:column="42">pParse<pos:position pos:line="236" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="50">pNew<pos:position pos:line="236" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="56">pExpr<pos:position pos:line="236" pos:column="61"/></name></expr></argument>)<pos:position pos:line="236" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="237" pos:column="13">sqlite3TokenInit<pos:position pos:line="237" pos:column="29"/></name><argument_list pos:line="237" pos:column="29">(<argument><expr><operator pos:line="237" pos:column="30">&amp;<pos:position pos:line="237" pos:column="35"/></operator><name pos:line="237" pos:column="31">sColname<pos:position pos:line="237" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="41">zColname<pos:position pos:line="237" pos:column="49"/></name></expr></argument>)<pos:position pos:line="237" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="238" pos:column="13">sqlite3ExprListSetName<pos:position pos:line="238" pos:column="35"/></name><argument_list pos:line="238" pos:column="35">(<argument><expr><name pos:line="238" pos:column="36">pParse<pos:position pos:line="238" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="44">pNew<pos:position pos:line="238" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="238" pos:column="50">&amp;<pos:position pos:line="238" pos:column="55"/></operator><name pos:line="238" pos:column="51">sColname<pos:position pos:line="238" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="238" pos:column="61">0<pos:position pos:line="238" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="238" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="64"/></expr_stmt>
            <if pos:line="239" pos:column="13">if<condition pos:line="239" pos:column="15">( <expr><name pos:line="239" pos:column="17">pNew<pos:position pos:line="239" pos:column="21"/></name> <operator pos:line="239" pos:column="22">&amp;&amp;<pos:position pos:line="239" pos:column="32"/></operator> <operator pos:line="239" pos:column="25">(<pos:position pos:line="239" pos:column="26"/></operator><name><name pos:line="239" pos:column="26">p<pos:position pos:line="239" pos:column="27"/></name><operator pos:line="239" pos:column="27">-&gt;<pos:position pos:line="239" pos:column="32"/></operator><name pos:line="239" pos:column="29">selFlags<pos:position pos:line="239" pos:column="37"/></name></name> <operator pos:line="239" pos:column="38">&amp;<pos:position pos:line="239" pos:column="43"/></operator> <name pos:line="239" pos:column="40">SF_NestedFrom<pos:position pos:line="239" pos:column="53"/></name><operator pos:line="239" pos:column="53">)<pos:position pos:line="239" pos:column="54"/></operator><operator pos:line="239" pos:column="54">!=<pos:position pos:line="239" pos:column="56"/></operator><literal type="number" pos:line="239" pos:column="56">0<pos:position pos:line="239" pos:column="57"/></literal></expr> )<pos:position pos:line="239" pos:column="59"/></condition><then><block pos:line="239" pos:column="59">{
              <decl_stmt><decl><type><name><name pos:line="240" pos:column="15">struct<pos:position pos:line="240" pos:column="21"/></name> <name pos:line="240" pos:column="22">ExprList_item<pos:position pos:line="240" pos:column="35"/></name></name> <modifier pos:line="240" pos:column="36">*<pos:position pos:line="240" pos:column="37"/></modifier></type><name pos:line="240" pos:column="37">pX<pos:position pos:line="240" pos:column="39"/></name> <init pos:line="240" pos:column="40">= <expr><operator pos:line="240" pos:column="42">&amp;<pos:position pos:line="240" pos:column="47"/></operator><name><name pos:line="240" pos:column="43">pNew<pos:position pos:line="240" pos:column="47"/></name><operator pos:line="240" pos:column="47">-&gt;<pos:position pos:line="240" pos:column="52"/></operator><name pos:line="240" pos:column="49">a<pos:position pos:line="240" pos:column="50"/></name><index pos:line="240" pos:column="50">[<expr><name><name pos:line="240" pos:column="51">pNew<pos:position pos:line="240" pos:column="55"/></name><operator pos:line="240" pos:column="55">-&gt;<pos:position pos:line="240" pos:column="60"/></operator><name pos:line="240" pos:column="57">nExpr<pos:position pos:line="240" pos:column="62"/></name></name><operator pos:line="240" pos:column="62">-<pos:position pos:line="240" pos:column="63"/></operator><literal type="number" pos:line="240" pos:column="63">1<pos:position pos:line="240" pos:column="64"/></literal></expr>]<pos:position pos:line="240" pos:column="65"/></index></name></expr></init></decl>;<pos:position pos:line="240" pos:column="66"/></decl_stmt>
              <if pos:line="241" pos:column="15">if<condition pos:line="241" pos:column="17">( <expr><name pos:line="241" pos:column="19">pSub<pos:position pos:line="241" pos:column="23"/></name></expr> )<pos:position pos:line="241" pos:column="25"/></condition><then><block pos:line="241" pos:column="25">{
                <expr_stmt><expr><name><name pos:line="242" pos:column="17">pX<pos:position pos:line="242" pos:column="19"/></name><operator pos:line="242" pos:column="19">-&gt;<pos:position pos:line="242" pos:column="24"/></operator><name pos:line="242" pos:column="21">zSpan<pos:position pos:line="242" pos:column="26"/></name></name> <operator pos:line="242" pos:column="27">=<pos:position pos:line="242" pos:column="28"/></operator> <call><name pos:line="242" pos:column="29">sqlite3DbStrDup<pos:position pos:line="242" pos:column="44"/></name><argument_list pos:line="242" pos:column="44">(<argument><expr><name pos:line="242" pos:column="45">db<pos:position pos:line="242" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="242" pos:column="49">pSub<pos:position pos:line="242" pos:column="53"/></name><operator pos:line="242" pos:column="53">-&gt;<pos:position pos:line="242" pos:column="58"/></operator><name pos:line="242" pos:column="55">pEList<pos:position pos:line="242" pos:column="61"/></name><operator pos:line="242" pos:column="61">-&gt;<pos:position pos:line="242" pos:column="66"/></operator><name pos:line="242" pos:column="63">a<pos:position pos:line="242" pos:column="64"/></name><index pos:line="242" pos:column="64">[<expr><name pos:line="242" pos:column="65">j<pos:position pos:line="242" pos:column="66"/></name></expr>]<pos:position pos:line="242" pos:column="67"/></index></name><operator pos:line="242" pos:column="67">.<pos:position pos:line="242" pos:column="68"/></operator><name pos:line="242" pos:column="68">zSpan<pos:position pos:line="242" pos:column="73"/></name></expr></argument>)<pos:position pos:line="242" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="243" pos:column="17">testcase<pos:position pos:line="243" pos:column="25"/></name><argument_list pos:line="243" pos:column="25">( <argument><expr><name><name pos:line="243" pos:column="27">pX<pos:position pos:line="243" pos:column="29"/></name><operator pos:line="243" pos:column="29">-&gt;<pos:position pos:line="243" pos:column="34"/></operator><name pos:line="243" pos:column="31">zSpan<pos:position pos:line="243" pos:column="36"/></name></name><operator pos:line="243" pos:column="36">==<pos:position pos:line="243" pos:column="38"/></operator><literal type="number" pos:line="243" pos:column="38">0<pos:position pos:line="243" pos:column="39"/></literal></expr></argument> )<pos:position pos:line="243" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="42"/></expr_stmt>
              }<pos:position pos:line="244" pos:column="16"/></block></then><else pos:line="244" pos:column="16">else<block pos:line="244" pos:column="20">{
                <expr_stmt><expr><name><name pos:line="245" pos:column="17">pX<pos:position pos:line="245" pos:column="19"/></name><operator pos:line="245" pos:column="19">-&gt;<pos:position pos:line="245" pos:column="24"/></operator><name pos:line="245" pos:column="21">zSpan<pos:position pos:line="245" pos:column="26"/></name></name> <operator pos:line="245" pos:column="27">=<pos:position pos:line="245" pos:column="28"/></operator> <call><name pos:line="245" pos:column="29">sqlite3MPrintf<pos:position pos:line="245" pos:column="43"/></name><argument_list pos:line="245" pos:column="43">(<argument><expr><name pos:line="245" pos:column="44">db<pos:position pos:line="245" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="245" pos:column="48">"%s.%s.%s"<pos:position pos:line="245" pos:column="58"/></literal></expr></argument>,
                                           <argument><expr><name pos:line="246" pos:column="44">zSchemaName<pos:position pos:line="246" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="57">zTabName<pos:position pos:line="246" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="67">zColname<pos:position pos:line="246" pos:column="75"/></name></expr></argument>)<pos:position pos:line="246" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="247" pos:column="17">testcase<pos:position pos:line="247" pos:column="25"/></name><argument_list pos:line="247" pos:column="25">( <argument><expr><name><name pos:line="247" pos:column="27">pX<pos:position pos:line="247" pos:column="29"/></name><operator pos:line="247" pos:column="29">-&gt;<pos:position pos:line="247" pos:column="34"/></operator><name pos:line="247" pos:column="31">zSpan<pos:position pos:line="247" pos:column="36"/></name></name><operator pos:line="247" pos:column="36">==<pos:position pos:line="247" pos:column="38"/></operator><literal type="number" pos:line="247" pos:column="38">0<pos:position pos:line="247" pos:column="39"/></literal></expr></argument> )<pos:position pos:line="247" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="42"/></expr_stmt>
              }<pos:position pos:line="248" pos:column="16"/></block></else></if>
              <expr_stmt><expr><name><name pos:line="249" pos:column="15">pX<pos:position pos:line="249" pos:column="17"/></name><operator pos:line="249" pos:column="17">-&gt;<pos:position pos:line="249" pos:column="22"/></operator><name pos:line="249" pos:column="19">bSpanIsTab<pos:position pos:line="249" pos:column="29"/></name></name> <operator pos:line="249" pos:column="30">=<pos:position pos:line="249" pos:column="31"/></operator> <literal type="number" pos:line="249" pos:column="32">1<pos:position pos:line="249" pos:column="33"/></literal></expr>;<pos:position pos:line="249" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="250" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="251" pos:column="13">sqlite3DbFree<pos:position pos:line="251" pos:column="26"/></name><argument_list pos:line="251" pos:column="26">(<argument><expr><name pos:line="251" pos:column="27">db<pos:position pos:line="251" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="31">zToFree<pos:position pos:line="251" pos:column="38"/></name></expr></argument>)<pos:position pos:line="251" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="40"/></expr_stmt>
          }<pos:position pos:line="252" pos:column="12"/></block></for>
        }<pos:position pos:line="253" pos:column="10"/></block></for>
        <if pos:line="254" pos:column="9">if<condition pos:line="254" pos:column="11">( <expr><operator pos:line="254" pos:column="13">!<pos:position pos:line="254" pos:column="14"/></operator><name pos:line="254" pos:column="14">tableSeen<pos:position pos:line="254" pos:column="23"/></name></expr> )<pos:position pos:line="254" pos:column="25"/></condition><then><block pos:line="254" pos:column="25">{
          <if pos:line="255" pos:column="11">if<condition pos:line="255" pos:column="13">( <expr><name pos:line="255" pos:column="15">zTName<pos:position pos:line="255" pos:column="21"/></name></expr> )<pos:position pos:line="255" pos:column="23"/></condition><then><block pos:line="255" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="256" pos:column="13">sqlite3ErrorMsg<pos:position pos:line="256" pos:column="28"/></name><argument_list pos:line="256" pos:column="28">(<argument><expr><name pos:line="256" pos:column="29">pParse<pos:position pos:line="256" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="256" pos:column="37">"no such table: %s"<pos:position pos:line="256" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="256" pos:column="58">zTName<pos:position pos:line="256" pos:column="64"/></name></expr></argument>)<pos:position pos:line="256" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="66"/></expr_stmt>
          }<pos:position pos:line="257" pos:column="12"/></block></then><else pos:line="257" pos:column="12">else<block pos:line="257" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="258" pos:column="13">sqlite3ErrorMsg<pos:position pos:line="258" pos:column="28"/></name><argument_list pos:line="258" pos:column="28">(<argument><expr><name pos:line="258" pos:column="29">pParse<pos:position pos:line="258" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="37">"no tables specified"<pos:position pos:line="258" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="258" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="60"/></expr_stmt>
          }<pos:position pos:line="259" pos:column="12"/></block></else></if>
        }<pos:position pos:line="260" pos:column="10"/></block></then></if>
      }<pos:position pos:line="261" pos:column="8"/></block></else></if>
    }<pos:position pos:line="262" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="263" pos:column="5">sqlite3ExprListDelete<pos:position pos:line="263" pos:column="26"/></name><argument_list pos:line="263" pos:column="26">(<argument><expr><name pos:line="263" pos:column="27">db<pos:position pos:line="263" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="31">pEList<pos:position pos:line="263" pos:column="37"/></name></expr></argument>)<pos:position pos:line="263" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="264" pos:column="5">p<pos:position pos:line="264" pos:column="6"/></name><operator pos:line="264" pos:column="6">-&gt;<pos:position pos:line="264" pos:column="11"/></operator><name pos:line="264" pos:column="8">pEList<pos:position pos:line="264" pos:column="14"/></name></name> <operator pos:line="264" pos:column="15">=<pos:position pos:line="264" pos:column="16"/></operator> <name pos:line="264" pos:column="17">pNew<pos:position pos:line="264" pos:column="21"/></name></expr>;<pos:position pos:line="264" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="265" pos:column="4"/></block></then></if>
<cpp:if pos:line="266" pos:column="1">#<cpp:directive pos:line="266" pos:column="2">if<pos:position pos:line="266" pos:column="4"/></cpp:directive> <expr><name pos:line="266" pos:column="5">SQLITE_MAX_COLUMN<pos:position pos:line="266" pos:column="22"/></name></expr></cpp:if>
  <if pos:line="267" pos:column="3">if<condition pos:line="267" pos:column="5">( <expr><name><name pos:line="267" pos:column="7">p<pos:position pos:line="267" pos:column="8"/></name><operator pos:line="267" pos:column="8">-&gt;<pos:position pos:line="267" pos:column="13"/></operator><name pos:line="267" pos:column="10">pEList<pos:position pos:line="267" pos:column="16"/></name></name> <operator pos:line="267" pos:column="17">&amp;&amp;<pos:position pos:line="267" pos:column="27"/></operator> <name><name pos:line="267" pos:column="20">p<pos:position pos:line="267" pos:column="21"/></name><operator pos:line="267" pos:column="21">-&gt;<pos:position pos:line="267" pos:column="26"/></operator><name pos:line="267" pos:column="23">pEList<pos:position pos:line="267" pos:column="29"/></name><operator pos:line="267" pos:column="29">-&gt;<pos:position pos:line="267" pos:column="34"/></operator><name pos:line="267" pos:column="31">nExpr<pos:position pos:line="267" pos:column="36"/></name></name><operator pos:line="267" pos:column="36">&gt;<pos:position pos:line="267" pos:column="40"/></operator><name><name pos:line="267" pos:column="37">db<pos:position pos:line="267" pos:column="39"/></name><operator pos:line="267" pos:column="39">-&gt;<pos:position pos:line="267" pos:column="44"/></operator><name pos:line="267" pos:column="41">aLimit<pos:position pos:line="267" pos:column="47"/></name><index pos:line="267" pos:column="47">[<expr><name pos:line="267" pos:column="48">SQLITE_LIMIT_COLUMN<pos:position pos:line="267" pos:column="67"/></name></expr>]<pos:position pos:line="267" pos:column="68"/></index></name></expr> )<pos:position pos:line="267" pos:column="70"/></condition><then><block pos:line="267" pos:column="70">{
    <expr_stmt><expr><call><name pos:line="268" pos:column="5">sqlite3ErrorMsg<pos:position pos:line="268" pos:column="20"/></name><argument_list pos:line="268" pos:column="20">(<argument><expr><name pos:line="268" pos:column="21">pParse<pos:position pos:line="268" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="268" pos:column="29">"too many columns in result set"<pos:position pos:line="268" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="268" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="63"/></expr_stmt>
    <return pos:line="269" pos:column="5">return <expr><name pos:line="269" pos:column="12">WRC_Abort<pos:position pos:line="269" pos:column="21"/></name></expr>;<pos:position pos:line="269" pos:column="22"/></return>
  }<pos:position pos:line="270" pos:column="4"/></block></then></if>
<cpp:endif pos:line="271" pos:column="1">#<cpp:directive pos:line="271" pos:column="2">endif<pos:position pos:line="271" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="272" pos:column="3">return <expr><name pos:line="272" pos:column="10">WRC_Continue<pos:position pos:line="272" pos:column="22"/></name></expr>;<pos:position pos:line="272" pos:column="23"/></return>
}<pos:position pos:line="273" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_114.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sqlite3_wal_checkpoint_v2<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(
  <parameter><decl><type><name pos:line="2" pos:column="3">sqlite3<pos:position pos:line="2" pos:column="10"/></name> <modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier></type><name pos:line="2" pos:column="12">db<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>,                    <comment type="block" pos:line="2" pos:column="35">/* Database handle */</comment>
  <parameter><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">zDb<pos:position pos:line="3" pos:column="18"/></name></decl></parameter>,                <comment type="block" pos:line="3" pos:column="35">/* Name of attached database (or NULL) */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">eMode<pos:position pos:line="4" pos:column="12"/></name></decl></parameter>,                      <comment type="block" pos:line="4" pos:column="35">/* SQLITE_CHECKPOINT_* value */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name> <modifier pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></modifier></type><name pos:line="5" pos:column="8">pnLog<pos:position pos:line="5" pos:column="13"/></name></decl></parameter>,                     <comment type="block" pos:line="5" pos:column="35">/* OUT: Size of WAL log in frames */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name> <modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type><name pos:line="6" pos:column="8">pnCkpt<pos:position pos:line="6" pos:column="14"/></name></decl></parameter>                     <comment type="block" pos:line="6" pos:column="35">/* OUT: Total number of frames checkpointed */</comment>
)<pos:position pos:line="7" pos:column="2"/></parameter_list><block pos:line="7" pos:column="2">{
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">SQLITE_OMIT_WAL<pos:position pos:line="8" pos:column="23"/></name></cpp:ifdef>
  <return pos:line="9" pos:column="3">return <expr><name pos:line="9" pos:column="10">SQLITE_OK<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></return>
<cpp:else pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">else<pos:position pos:line="10" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">rc<pos:position pos:line="11" pos:column="9"/></name></decl>;<pos:position pos:line="11" pos:column="10"/></decl_stmt>                         <comment type="block" pos:line="11" pos:column="35">/* Return code */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">iDb<pos:position pos:line="12" pos:column="10"/></name> <init pos:line="12" pos:column="11">= <expr><name pos:line="12" pos:column="13">SQLITE_MAX_ATTACHED<pos:position pos:line="12" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>  <comment type="block" pos:line="12" pos:column="35">/* sqlite3.aDb[] index of db to checkpoint */</comment>

<cpp:ifdef pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">ifdef<pos:position pos:line="14" pos:column="7"/></cpp:directive> <name pos:line="14" pos:column="8">SQLITE_ENABLE_API_ARMOR<pos:position pos:line="14" pos:column="31"/></name></cpp:ifdef>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">( <expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><call><name pos:line="15" pos:column="8">sqlite3SafetyCheckOk<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">db<pos:position pos:line="15" pos:column="31"/></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr> )<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34"> <block type="pseudo"><return pos:line="15" pos:column="35">return <expr><name pos:line="15" pos:column="42">SQLITE_MISUSE_BKPT<pos:position pos:line="15" pos:column="60"/></name></expr>;<pos:position pos:line="15" pos:column="61"/></return></block></then></if>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="18" pos:column="3">/* Initialize the output variables to -1 in case an error occurs. */</comment>
  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">( <expr><name pos:line="19" pos:column="7">pnLog<pos:position pos:line="19" pos:column="12"/></name></expr> )<pos:position pos:line="19" pos:column="14"/></condition><then pos:line="19" pos:column="14"> <block type="pseudo"><expr_stmt><expr><operator pos:line="19" pos:column="15">*<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">pnLog<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt></block></then></if>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">( <expr><name pos:line="20" pos:column="7">pnCkpt<pos:position pos:line="20" pos:column="13"/></name></expr> )<pos:position pos:line="20" pos:column="15"/></condition><then pos:line="20" pos:column="15"> <block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">pnCkpt<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <operator pos:line="20" pos:column="26">-<pos:position pos:line="20" pos:column="27"/></operator><literal type="number" pos:line="20" pos:column="27">1<pos:position pos:line="20" pos:column="28"/></literal></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">assert<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">( <argument><expr><name pos:line="22" pos:column="11">SQLITE_CHECKPOINT_PASSIVE<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">==<pos:position pos:line="22" pos:column="38"/></operator><literal type="number" pos:line="22" pos:column="38">0<pos:position pos:line="22" pos:column="39"/></literal></expr></argument> )<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">assert<pos:position pos:line="23" pos:column="9"/></name><argument_list pos:line="23" pos:column="9">( <argument><expr><name pos:line="23" pos:column="11">SQLITE_CHECKPOINT_FULL<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">==<pos:position pos:line="23" pos:column="35"/></operator><literal type="number" pos:line="23" pos:column="35">1<pos:position pos:line="23" pos:column="36"/></literal></expr></argument> )<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">assert<pos:position pos:line="24" pos:column="9"/></name><argument_list pos:line="24" pos:column="9">( <argument><expr><name pos:line="24" pos:column="11">SQLITE_CHECKPOINT_RESTART<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">==<pos:position pos:line="24" pos:column="38"/></operator><literal type="number" pos:line="24" pos:column="38">2<pos:position pos:line="24" pos:column="39"/></literal></expr></argument> )<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">assert<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">( <argument><expr><name pos:line="25" pos:column="11">SQLITE_CHECKPOINT_TRUNCATE<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">==<pos:position pos:line="25" pos:column="39"/></operator><literal type="number" pos:line="25" pos:column="39">3<pos:position pos:line="25" pos:column="40"/></literal></expr></argument> )<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">( <expr><name><name pos:line="26" pos:column="7">eMode<pos:position pos:line="26" pos:column="12"/></name><argument_list type="generic" pos:line="26" pos:column="12">&lt;<argument><expr><name pos:line="26" pos:column="13">SQLITE_CHECKPOINT_PASSIVE<pos:position pos:line="26" pos:column="38"/></name> <operator pos:line="26" pos:column="39">||<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="42">eMode<pos:position pos:line="26" pos:column="47"/></name></expr></argument>&gt;<pos:position pos:line="26" pos:column="51"/></argument_list></name><name pos:line="26" pos:column="48">SQLITE_CHECKPOINT_TRUNCATE<pos:position pos:line="26" pos:column="74"/></name></expr> )<pos:position pos:line="26" pos:column="76"/></condition><then><block pos:line="26" pos:column="76">{
    <comment type="block" pos:line="27" pos:column="5">/* EVIDENCE-OF: R-03996-12088 The M parameter must be a valid checkpoint
    ** mode: */</comment>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">SQLITE_MISUSE<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">sqlite3_mutex_enter<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name><name pos:line="32" pos:column="23">db<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">mutex<pos:position pos:line="32" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">( <expr><name pos:line="33" pos:column="7">zDb<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">&amp;&amp;<pos:position pos:line="33" pos:column="21"/></operator> <name><name pos:line="33" pos:column="14">zDb<pos:position pos:line="33" pos:column="17"/></name><index pos:line="33" pos:column="17">[<expr><literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>]<pos:position pos:line="33" pos:column="20"/></index></name></expr> )<pos:position pos:line="33" pos:column="22"/></condition><then><block pos:line="33" pos:column="22">{
    <expr_stmt><expr><name pos:line="34" pos:column="5">iDb<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <call><name pos:line="34" pos:column="11">sqlite3FindDbName<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">db<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="33">zDb<pos:position pos:line="34" pos:column="36"/></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>
  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">( <expr><name pos:line="36" pos:column="7">iDb<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">&lt;<pos:position pos:line="36" pos:column="14"/></operator><literal type="number" pos:line="36" pos:column="11">0<pos:position pos:line="36" pos:column="12"/></literal></expr> )<pos:position pos:line="36" pos:column="14"/></condition><then><block pos:line="36" pos:column="14">{
    <expr_stmt><expr><name pos:line="37" pos:column="5">rc<pos:position pos:line="37" pos:column="7"/></name> <operator pos:line="37" pos:column="8">=<pos:position pos:line="37" pos:column="9"/></operator> <name pos:line="37" pos:column="10">SQLITE_ERROR<pos:position pos:line="37" pos:column="22"/></name></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">sqlite3ErrorWithMsg<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">db<pos:position pos:line="38" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="29">SQLITE_ERROR<pos:position pos:line="38" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="43">"unknown database: %s"<pos:position pos:line="38" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="67">zDb<pos:position pos:line="38" pos:column="70"/></name></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="72"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then><else pos:line="39" pos:column="4">else<block pos:line="39" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">db<pos:position pos:line="40" pos:column="7"/></name><operator pos:line="40" pos:column="7">-&gt;<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="9">busyHandler<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">.<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">nBusy<pos:position pos:line="40" pos:column="26"/></name></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <literal type="number" pos:line="40" pos:column="29">0<pos:position pos:line="40" pos:column="30"/></literal></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">rc<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <call><name pos:line="41" pos:column="10">sqlite3Checkpoint<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">db<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="32">iDb<pos:position pos:line="41" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="37">eMode<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">pnLog<pos:position pos:line="41" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="51">pnCkpt<pos:position pos:line="41" pos:column="57"/></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">sqlite3Error<pos:position pos:line="42" pos:column="17"/></name><argument_list pos:line="42" pos:column="17">(<argument><expr><name pos:line="42" pos:column="18">db<pos:position pos:line="42" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="22">rc<pos:position pos:line="42" pos:column="24"/></name></expr></argument>)<pos:position pos:line="42" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name pos:line="44" pos:column="3">rc<pos:position pos:line="44" pos:column="5"/></name> <operator pos:line="44" pos:column="6">=<pos:position pos:line="44" pos:column="7"/></operator> <call><name pos:line="44" pos:column="8">sqlite3ApiExit<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">db<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="27">rc<pos:position pos:line="44" pos:column="29"/></name></expr></argument>)<pos:position pos:line="44" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>

  <comment type="block" pos:line="46" pos:column="3">/* If there are no active statements, clear the interrupt flag at this
  ** point.  */</comment>
  <if pos:line="48" pos:column="3">if<condition pos:line="48" pos:column="5">( <expr><name><name pos:line="48" pos:column="7">db<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="11">nVdbeActive<pos:position pos:line="48" pos:column="22"/></name></name><operator pos:line="48" pos:column="22">==<pos:position pos:line="48" pos:column="24"/></operator><literal type="number" pos:line="48" pos:column="24">0<pos:position pos:line="48" pos:column="25"/></literal></expr> )<pos:position pos:line="48" pos:column="27"/></condition><then><block pos:line="48" pos:column="27">{
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">db<pos:position pos:line="49" pos:column="7"/></name><operator pos:line="49" pos:column="7">-&gt;<pos:position pos:line="49" pos:column="12"/></operator><name pos:line="49" pos:column="9">u1<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">.<pos:position pos:line="49" pos:column="12"/></operator><name pos:line="49" pos:column="12">isInterrupted<pos:position pos:line="49" pos:column="25"/></name></name> <operator pos:line="49" pos:column="26">=<pos:position pos:line="49" pos:column="27"/></operator> <literal type="number" pos:line="49" pos:column="28">0<pos:position pos:line="49" pos:column="29"/></literal></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="52" pos:column="3">sqlite3_mutex_leave<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><name><name pos:line="52" pos:column="23">db<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">mutex<pos:position pos:line="52" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt>
  <return pos:line="53" pos:column="3">return <expr><name pos:line="53" pos:column="10">rc<pos:position pos:line="53" pos:column="12"/></name></expr>;<pos:position pos:line="53" pos:column="13"/></return>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

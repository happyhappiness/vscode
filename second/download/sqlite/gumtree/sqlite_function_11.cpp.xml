<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fts3FilterMethod<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(
  <parameter><decl><type><name pos:line="2" pos:column="3">sqlite3_vtab_cursor<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">pCursor<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>,   <comment type="block" pos:line="2" pos:column="35">/* The cursor used for this query */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">idxNum<pos:position pos:line="3" pos:column="13"/></name></decl></parameter>,                     <comment type="block" pos:line="3" pos:column="35">/* Strategy index */</comment>
  <parameter><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">idxStr<pos:position pos:line="4" pos:column="21"/></name></decl></parameter>,             <comment type="block" pos:line="4" pos:column="35">/* Unused */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">nVal<pos:position pos:line="5" pos:column="11"/></name></decl></parameter>,                       <comment type="block" pos:line="5" pos:column="35">/* Number of elements in apVal */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">sqlite3_value<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier><modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">apVal<pos:position pos:line="6" pos:column="24"/></name></decl></parameter>           <comment type="block" pos:line="6" pos:column="35">/* Arguments for the indexing scheme */</comment>
)<pos:position pos:line="7" pos:column="2"/></parameter_list><block pos:line="7" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name> <init pos:line="8" pos:column="10">= <expr><name pos:line="8" pos:column="12">SQLITE_OK<pos:position pos:line="8" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">zSql<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>                     <comment type="block" pos:line="9" pos:column="35">/* SQL statement used to access %_content */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">eSearch<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">Fts3Table<pos:position pos:line="11" pos:column="12"/></name> <modifier pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></modifier></type><name pos:line="11" pos:column="14">p<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><operator pos:line="11" pos:column="18">(<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">Fts3Table<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">*<pos:position pos:line="11" pos:column="30"/></operator><operator pos:line="11" pos:column="30">)<pos:position pos:line="11" pos:column="31"/></operator><name><name pos:line="11" pos:column="31">pCursor<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">pVtab<pos:position pos:line="11" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">Fts3Cursor<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">pCsr<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><operator pos:line="12" pos:column="22">(<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">Fts3Cursor<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></operator><operator pos:line="12" pos:column="35">)<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">pCursor<pos:position pos:line="12" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="44"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">sqlite3_value<pos:position pos:line="14" pos:column="16"/></name> <modifier pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></modifier></type><name pos:line="14" pos:column="18">pCons<pos:position pos:line="14" pos:column="23"/></name> <init pos:line="14" pos:column="24">= <expr><literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>       <comment type="block" pos:line="14" pos:column="35">/* The MATCH or rowid constraint, if any */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">sqlite3_value<pos:position pos:line="15" pos:column="16"/></name> <modifier pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></modifier></type><name pos:line="15" pos:column="18">pLangid<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>     <comment type="block" pos:line="15" pos:column="35">/* The "langid = ?" constraint, if any */</comment>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">sqlite3_value<pos:position pos:line="16" pos:column="16"/></name> <modifier pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></modifier></type><name pos:line="16" pos:column="18">pDocidGe<pos:position pos:line="16" pos:column="26"/></name> <init pos:line="16" pos:column="27">= <expr><literal type="number" pos:line="16" pos:column="29">0<pos:position pos:line="16" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt>    <comment type="block" pos:line="16" pos:column="35">/* The "docid &gt;= ?" constraint, if any */</comment>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">sqlite3_value<pos:position pos:line="17" pos:column="16"/></name> <modifier pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></modifier></type><name pos:line="17" pos:column="18">pDocidLe<pos:position pos:line="17" pos:column="26"/></name> <init pos:line="17" pos:column="27">= <expr><literal type="number" pos:line="17" pos:column="29">0<pos:position pos:line="17" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="31"/></decl_stmt>    <comment type="block" pos:line="17" pos:column="35">/* The "docid &lt;= ?" constraint, if any */</comment>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">iIdx<pos:position pos:line="18" pos:column="11"/></name></decl>;<pos:position pos:line="18" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">UNUSED_PARAMETER<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">idxStr<pos:position pos:line="20" pos:column="26"/></name></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">UNUSED_PARAMETER<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">nVal<pos:position pos:line="21" pos:column="24"/></name></expr></argument>)<pos:position pos:line="21" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name pos:line="23" pos:column="3">eSearch<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">idxNum<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">&amp;<pos:position pos:line="23" pos:column="26"/></operator> <literal type="number" pos:line="23" pos:column="23">0x0000FFFF<pos:position pos:line="23" pos:column="33"/></literal><operator pos:line="23" pos:column="33">)<pos:position pos:line="23" pos:column="34"/></operator></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">assert<pos:position pos:line="24" pos:column="9"/></name><argument_list pos:line="24" pos:column="9">( <argument><expr><name pos:line="24" pos:column="11">eSearch<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">&gt;=<pos:position pos:line="24" pos:column="23"/></operator><literal type="number" pos:line="24" pos:column="20">0<pos:position pos:line="24" pos:column="21"/></literal> <operator pos:line="24" pos:column="22">&amp;&amp;<pos:position pos:line="24" pos:column="32"/></operator> <name pos:line="24" pos:column="25">eSearch<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">&lt;=<pos:position pos:line="24" pos:column="37"/></operator><operator pos:line="24" pos:column="34">(<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">FTS3_FULLTEXT_SEARCH<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">+<pos:position pos:line="24" pos:column="56"/></operator><name><name pos:line="24" pos:column="56">p<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">-&gt;<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="59">nColumn<pos:position pos:line="24" pos:column="66"/></name></name><operator pos:line="24" pos:column="66">)<pos:position pos:line="24" pos:column="67"/></operator></expr></argument> )<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">assert<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">( <argument><expr><name><name pos:line="25" pos:column="11">p<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">pSegments<pos:position pos:line="25" pos:column="23"/></name></name><operator pos:line="25" pos:column="23">==<pos:position pos:line="25" pos:column="25"/></operator><literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal></expr></argument> )<pos:position pos:line="25" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>

  <comment type="block" pos:line="27" pos:column="3">/* Collect arguments into local variables */</comment>
  <expr_stmt><expr><name pos:line="28" pos:column="3">iIdx<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <literal type="number" pos:line="28" pos:column="10">0<pos:position pos:line="28" pos:column="11"/></literal></expr>;<pos:position pos:line="28" pos:column="12"/></expr_stmt>
  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">( <expr><name pos:line="29" pos:column="7">eSearch<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">!=<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">FTS3_FULLSCAN_SEARCH<pos:position pos:line="29" pos:column="36"/></name></expr> )<pos:position pos:line="29" pos:column="38"/></condition><then pos:line="29" pos:column="38"> <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="39">pCons<pos:position pos:line="29" pos:column="44"/></name> <operator pos:line="29" pos:column="45">=<pos:position pos:line="29" pos:column="46"/></operator> <name><name pos:line="29" pos:column="47">apVal<pos:position pos:line="29" pos:column="52"/></name><index pos:line="29" pos:column="52">[<expr><name pos:line="29" pos:column="53">iIdx<pos:position pos:line="29" pos:column="57"/></name><operator pos:line="29" pos:column="57">++<pos:position pos:line="29" pos:column="59"/></operator></expr>]<pos:position pos:line="29" pos:column="60"/></index></name></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt></block></then></if>
  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">( <expr><name pos:line="30" pos:column="7">idxNum<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">&amp;<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="16">FTS3_HAVE_LANGID<pos:position pos:line="30" pos:column="32"/></name></expr> )<pos:position pos:line="30" pos:column="34"/></condition><then pos:line="30" pos:column="34"> <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="35">pLangid<pos:position pos:line="30" pos:column="42"/></name> <operator pos:line="30" pos:column="43">=<pos:position pos:line="30" pos:column="44"/></operator> <name><name pos:line="30" pos:column="45">apVal<pos:position pos:line="30" pos:column="50"/></name><index pos:line="30" pos:column="50">[<expr><name pos:line="30" pos:column="51">iIdx<pos:position pos:line="30" pos:column="55"/></name><operator pos:line="30" pos:column="55">++<pos:position pos:line="30" pos:column="57"/></operator></expr>]<pos:position pos:line="30" pos:column="58"/></index></name></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt></block></then></if>
  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">( <expr><name pos:line="31" pos:column="7">idxNum<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">&amp;<pos:position pos:line="31" pos:column="19"/></operator> <name pos:line="31" pos:column="16">FTS3_HAVE_DOCID_GE<pos:position pos:line="31" pos:column="34"/></name></expr> )<pos:position pos:line="31" pos:column="36"/></condition><then pos:line="31" pos:column="36"> <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="37">pDocidGe<pos:position pos:line="31" pos:column="45"/></name> <operator pos:line="31" pos:column="46">=<pos:position pos:line="31" pos:column="47"/></operator> <name><name pos:line="31" pos:column="48">apVal<pos:position pos:line="31" pos:column="53"/></name><index pos:line="31" pos:column="53">[<expr><name pos:line="31" pos:column="54">iIdx<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">++<pos:position pos:line="31" pos:column="60"/></operator></expr>]<pos:position pos:line="31" pos:column="61"/></index></name></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt></block></then></if>
  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">( <expr><name pos:line="32" pos:column="7">idxNum<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">&amp;<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="16">FTS3_HAVE_DOCID_LE<pos:position pos:line="32" pos:column="34"/></name></expr> )<pos:position pos:line="32" pos:column="36"/></condition><then pos:line="32" pos:column="36"> <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="37">pDocidLe<pos:position pos:line="32" pos:column="45"/></name> <operator pos:line="32" pos:column="46">=<pos:position pos:line="32" pos:column="47"/></operator> <name><name pos:line="32" pos:column="48">apVal<pos:position pos:line="32" pos:column="53"/></name><index pos:line="32" pos:column="53">[<expr><name pos:line="32" pos:column="54">iIdx<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">++<pos:position pos:line="32" pos:column="60"/></operator></expr>]<pos:position pos:line="32" pos:column="61"/></index></name></expr>;<pos:position pos:line="32" pos:column="62"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">assert<pos:position pos:line="33" pos:column="9"/></name><argument_list pos:line="33" pos:column="9">( <argument><expr><name pos:line="33" pos:column="11">iIdx<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">==<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">nVal<pos:position pos:line="33" pos:column="21"/></name></expr></argument> )<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="35" pos:column="3">/* In case the cursor has been used before, clear it now. */</comment>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">fts3ClearCursor<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">pCsr<pos:position pos:line="36" pos:column="23"/></name></expr></argument>)<pos:position pos:line="36" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="38" pos:column="3">/* Set the lower and upper bounds on docids to return */</comment>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">pCsr<pos:position pos:line="39" pos:column="7"/></name><operator pos:line="39" pos:column="7">-&gt;<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="9">iMinDocid<pos:position pos:line="39" pos:column="18"/></name></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <call><name pos:line="39" pos:column="21">fts3DocidRange<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><name pos:line="39" pos:column="36">pDocidGe<pos:position pos:line="39" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="46">SMALLEST_INT64<pos:position pos:line="39" pos:column="60"/></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="40" pos:column="3">pCsr<pos:position pos:line="40" pos:column="7"/></name><operator pos:line="40" pos:column="7">-&gt;<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="9">iMaxDocid<pos:position pos:line="40" pos:column="18"/></name></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <call><name pos:line="40" pos:column="21">fts3DocidRange<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">pDocidLe<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">LARGEST_INT64<pos:position pos:line="40" pos:column="59"/></name></expr></argument>)<pos:position pos:line="40" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="61"/></expr_stmt>

  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">( <expr><name pos:line="42" pos:column="7">idxStr<pos:position pos:line="42" pos:column="13"/></name></expr> )<pos:position pos:line="42" pos:column="15"/></condition><then><block pos:line="42" pos:column="15">{
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">pCsr<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">bDesc<pos:position pos:line="43" pos:column="16"/></name></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <operator pos:line="43" pos:column="19">(<pos:position pos:line="43" pos:column="20"/></operator><name><name pos:line="43" pos:column="20">idxStr<pos:position pos:line="43" pos:column="26"/></name><index pos:line="43" pos:column="26">[<expr><literal type="number" pos:line="43" pos:column="27">0<pos:position pos:line="43" pos:column="28"/></literal></expr>]<pos:position pos:line="43" pos:column="29"/></index></name><operator pos:line="43" pos:column="29">==<pos:position pos:line="43" pos:column="31"/></operator><literal type="char" pos:line="43" pos:column="31">'D'<pos:position pos:line="43" pos:column="34"/></literal><operator pos:line="43" pos:column="34">)<pos:position pos:line="43" pos:column="35"/></operator></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then><else pos:line="44" pos:column="4">else<block pos:line="44" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">pCsr<pos:position pos:line="45" pos:column="9"/></name><operator pos:line="45" pos:column="9">-&gt;<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="11">bDesc<pos:position pos:line="45" pos:column="16"/></name></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <name><name pos:line="45" pos:column="19">p<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">bDescIdx<pos:position pos:line="45" pos:column="30"/></name></name></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="47" pos:column="3">pCsr<pos:position pos:line="47" pos:column="7"/></name><operator pos:line="47" pos:column="7">-&gt;<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="9">eSearch<pos:position pos:line="47" pos:column="16"/></name></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <operator pos:line="47" pos:column="19">(<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">i16<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">)<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">eSearch<pos:position pos:line="47" pos:column="31"/></name></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>

  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">( <expr><name pos:line="49" pos:column="7">eSearch<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">!=<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="16">FTS3_DOCID_SEARCH<pos:position pos:line="49" pos:column="33"/></name> <operator pos:line="49" pos:column="34">&amp;&amp;<pos:position pos:line="49" pos:column="44"/></operator> <name pos:line="49" pos:column="37">eSearch<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">!=<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="46">FTS3_FULLSCAN_SEARCH<pos:position pos:line="49" pos:column="66"/></name></expr> )<pos:position pos:line="49" pos:column="68"/></condition><then><block pos:line="49" pos:column="68">{
    <decl_stmt><decl><type><name pos:line="50" pos:column="5">int<pos:position pos:line="50" pos:column="8"/></name></type> <name pos:line="50" pos:column="9">iCol<pos:position pos:line="50" pos:column="13"/></name> <init pos:line="50" pos:column="14">= <expr><name pos:line="50" pos:column="16">eSearch<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">-<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">FTS3_FULLTEXT_SEARCH<pos:position pos:line="50" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="51" pos:column="5">const<pos:position pos:line="51" pos:column="10"/></specifier> <name pos:line="51" pos:column="11">char<pos:position pos:line="51" pos:column="15"/></name> <modifier pos:line="51" pos:column="16">*<pos:position pos:line="51" pos:column="17"/></modifier></type><name pos:line="51" pos:column="17">zQuery<pos:position pos:line="51" pos:column="23"/></name> <init pos:line="51" pos:column="24">= <expr><operator pos:line="51" pos:column="26">(<pos:position pos:line="51" pos:column="27"/></operator><specifier pos:line="51" pos:column="27">const<pos:position pos:line="51" pos:column="32"/></specifier> <name pos:line="51" pos:column="33">char<pos:position pos:line="51" pos:column="37"/></name> <operator pos:line="51" pos:column="38">*<pos:position pos:line="51" pos:column="39"/></operator><operator pos:line="51" pos:column="39">)<pos:position pos:line="51" pos:column="40"/></operator><call><name pos:line="51" pos:column="40">sqlite3_value_text<pos:position pos:line="51" pos:column="58"/></name><argument_list pos:line="51" pos:column="58">(<argument><expr><name pos:line="51" pos:column="59">pCons<pos:position pos:line="51" pos:column="64"/></name></expr></argument>)<pos:position pos:line="51" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="66"/></decl_stmt>

    <if pos:line="53" pos:column="5">if<condition pos:line="53" pos:column="7">( <expr><name pos:line="53" pos:column="9">zQuery<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">==<pos:position pos:line="53" pos:column="17"/></operator><literal type="number" pos:line="53" pos:column="17">0<pos:position pos:line="53" pos:column="18"/></literal> <operator pos:line="53" pos:column="19">&amp;&amp;<pos:position pos:line="53" pos:column="29"/></operator> <call><name pos:line="53" pos:column="22">sqlite3_value_type<pos:position pos:line="53" pos:column="40"/></name><argument_list pos:line="53" pos:column="40">(<argument><expr><name pos:line="53" pos:column="41">pCons<pos:position pos:line="53" pos:column="46"/></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call><operator pos:line="53" pos:column="47">!=<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="49">SQLITE_NULL<pos:position pos:line="53" pos:column="60"/></name></expr> )<pos:position pos:line="53" pos:column="62"/></condition><then><block pos:line="53" pos:column="62">{
      <return pos:line="54" pos:column="7">return <expr><name pos:line="54" pos:column="14">SQLITE_NOMEM<pos:position pos:line="54" pos:column="26"/></name></expr>;<pos:position pos:line="54" pos:column="27"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="57" pos:column="5">pCsr<pos:position pos:line="57" pos:column="9"/></name><operator pos:line="57" pos:column="9">-&gt;<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="11">iLangid<pos:position pos:line="57" pos:column="18"/></name></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <literal type="number" pos:line="57" pos:column="21">0<pos:position pos:line="57" pos:column="22"/></literal></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>
    <if pos:line="58" pos:column="5">if<condition pos:line="58" pos:column="7">( <expr><name pos:line="58" pos:column="9">pLangid<pos:position pos:line="58" pos:column="16"/></name></expr> )<pos:position pos:line="58" pos:column="18"/></condition><then pos:line="58" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="19">pCsr<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">-&gt;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="25">iLangid<pos:position pos:line="58" pos:column="32"/></name></name> <operator pos:line="58" pos:column="33">=<pos:position pos:line="58" pos:column="34"/></operator> <call><name pos:line="58" pos:column="35">sqlite3_value_int<pos:position pos:line="58" pos:column="52"/></name><argument_list pos:line="58" pos:column="52">(<argument><expr><name pos:line="58" pos:column="53">pLangid<pos:position pos:line="58" pos:column="60"/></name></expr></argument>)<pos:position pos:line="58" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="62"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">assert<pos:position pos:line="60" pos:column="11"/></name><argument_list pos:line="60" pos:column="11">( <argument><expr><name><name pos:line="60" pos:column="13">p<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">-&gt;<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="16">base<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">.<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="21">zErrMsg<pos:position pos:line="60" pos:column="28"/></name></name><operator pos:line="60" pos:column="28">==<pos:position pos:line="60" pos:column="30"/></operator><literal type="number" pos:line="60" pos:column="30">0<pos:position pos:line="60" pos:column="31"/></literal></expr></argument> )<pos:position pos:line="60" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="61" pos:column="5">rc<pos:position pos:line="61" pos:column="7"/></name> <operator pos:line="61" pos:column="8">=<pos:position pos:line="61" pos:column="9"/></operator> <call><name pos:line="61" pos:column="10">sqlite3Fts3ExprParse<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">(<argument><expr><name><name pos:line="61" pos:column="31">p<pos:position pos:line="61" pos:column="32"/></name><operator pos:line="61" pos:column="32">-&gt;<pos:position pos:line="61" pos:column="37"/></operator><name pos:line="61" pos:column="34">pTokenizer<pos:position pos:line="61" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="46">pCsr<pos:position pos:line="61" pos:column="50"/></name><operator pos:line="61" pos:column="50">-&gt;<pos:position pos:line="61" pos:column="55"/></operator><name pos:line="61" pos:column="52">iLangid<pos:position pos:line="61" pos:column="59"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="62" pos:column="9">p<pos:position pos:line="62" pos:column="10"/></name><operator pos:line="62" pos:column="10">-&gt;<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="12">azColumn<pos:position pos:line="62" pos:column="20"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="22">p<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">-&gt;<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="25">bFts4<pos:position pos:line="62" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="32">p<pos:position pos:line="62" pos:column="33"/></name><operator pos:line="62" pos:column="33">-&gt;<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="35">nColumn<pos:position pos:line="62" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="44">iCol<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">zQuery<pos:position pos:line="62" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="58">-<pos:position pos:line="62" pos:column="59"/></operator><literal type="number" pos:line="62" pos:column="59">1<pos:position pos:line="62" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="62" pos:column="62">&amp;<pos:position pos:line="62" pos:column="67"/></operator><name><name pos:line="62" pos:column="63">pCsr<pos:position pos:line="62" pos:column="67"/></name><operator pos:line="62" pos:column="67">-&gt;<pos:position pos:line="62" pos:column="72"/></operator><name pos:line="62" pos:column="69">pExpr<pos:position pos:line="62" pos:column="74"/></name></name></expr></argument>, 
        <argument><expr><operator pos:line="63" pos:column="9">&amp;<pos:position pos:line="63" pos:column="14"/></operator><name><name pos:line="63" pos:column="10">p<pos:position pos:line="63" pos:column="11"/></name><operator pos:line="63" pos:column="11">-&gt;<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="13">base<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">.<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">zErrMsg<pos:position pos:line="63" pos:column="25"/></name></name></expr></argument>
    )<pos:position pos:line="64" pos:column="6"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="7"/></expr_stmt>
    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">( <expr><name pos:line="65" pos:column="9">rc<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">!=<pos:position pos:line="65" pos:column="13"/></operator><name pos:line="65" pos:column="13">SQLITE_OK<pos:position pos:line="65" pos:column="22"/></name></expr> )<pos:position pos:line="65" pos:column="24"/></condition><then><block pos:line="65" pos:column="24">{
      <return pos:line="66" pos:column="7">return <expr><name pos:line="66" pos:column="14">rc<pos:position pos:line="66" pos:column="16"/></name></expr>;<pos:position pos:line="66" pos:column="17"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="69" pos:column="5">rc<pos:position pos:line="69" pos:column="7"/></name> <operator pos:line="69" pos:column="8">=<pos:position pos:line="69" pos:column="9"/></operator> <call><name pos:line="69" pos:column="10">fts3EvalStart<pos:position pos:line="69" pos:column="23"/></name><argument_list pos:line="69" pos:column="23">(<argument><expr><name pos:line="69" pos:column="24">pCsr<pos:position pos:line="69" pos:column="28"/></name></expr></argument>)<pos:position pos:line="69" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">sqlite3Fts3SegmentsClose<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><name pos:line="70" pos:column="30">p<pos:position pos:line="70" pos:column="31"/></name></expr></argument>)<pos:position pos:line="70" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="33"/></expr_stmt>
    <if pos:line="71" pos:column="5">if<condition pos:line="71" pos:column="7">( <expr><name pos:line="71" pos:column="9">rc<pos:position pos:line="71" pos:column="11"/></name><operator pos:line="71" pos:column="11">!=<pos:position pos:line="71" pos:column="13"/></operator><name pos:line="71" pos:column="13">SQLITE_OK<pos:position pos:line="71" pos:column="22"/></name></expr> )<pos:position pos:line="71" pos:column="24"/></condition><then pos:line="71" pos:column="24"> <block type="pseudo"><return pos:line="71" pos:column="25">return <expr><name pos:line="71" pos:column="32">rc<pos:position pos:line="71" pos:column="34"/></name></expr>;<pos:position pos:line="71" pos:column="35"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="72" pos:column="5">pCsr<pos:position pos:line="72" pos:column="9"/></name><operator pos:line="72" pos:column="9">-&gt;<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="11">pNextId<pos:position pos:line="72" pos:column="18"/></name></name> <operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator> <name><name pos:line="72" pos:column="21">pCsr<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">-&gt;<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="27">aDoclist<pos:position pos:line="72" pos:column="35"/></name></name></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">pCsr<pos:position pos:line="73" pos:column="9"/></name><operator pos:line="73" pos:column="9">-&gt;<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="11">iPrevId<pos:position pos:line="73" pos:column="18"/></name></name> <operator pos:line="73" pos:column="19">=<pos:position pos:line="73" pos:column="20"/></operator> <literal type="number" pos:line="73" pos:column="21">0<pos:position pos:line="73" pos:column="22"/></literal></expr>;<pos:position pos:line="73" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="76" pos:column="3">/* Compile a SELECT statement for this cursor. For a full-table-scan, the
  ** statement loops through all rows of the %_content table. For a
  ** full-text query or docid lookup, the statement retrieves a single
  ** row by docid.
  */</comment>
  <if pos:line="81" pos:column="3">if<condition pos:line="81" pos:column="5">( <expr><name pos:line="81" pos:column="7">eSearch<pos:position pos:line="81" pos:column="14"/></name><operator pos:line="81" pos:column="14">==<pos:position pos:line="81" pos:column="16"/></operator><name pos:line="81" pos:column="16">FTS3_FULLSCAN_SEARCH<pos:position pos:line="81" pos:column="36"/></name></expr> )<pos:position pos:line="81" pos:column="38"/></condition><then><block pos:line="81" pos:column="38">{
    <if pos:line="82" pos:column="5">if<condition pos:line="82" pos:column="7">( <expr><name pos:line="82" pos:column="9">pDocidGe<pos:position pos:line="82" pos:column="17"/></name> <operator pos:line="82" pos:column="18">||<pos:position pos:line="82" pos:column="20"/></operator> <name pos:line="82" pos:column="21">pDocidLe<pos:position pos:line="82" pos:column="29"/></name></expr> )<pos:position pos:line="82" pos:column="31"/></condition><then><block pos:line="82" pos:column="31">{
      <expr_stmt><expr><name pos:line="83" pos:column="7">zSql<pos:position pos:line="83" pos:column="11"/></name> <operator pos:line="83" pos:column="12">=<pos:position pos:line="83" pos:column="13"/></operator> <call><name pos:line="83" pos:column="14">sqlite3_mprintf<pos:position pos:line="83" pos:column="29"/></name><argument_list pos:line="83" pos:column="29">(
          <argument><expr><literal type="string" pos:line="84" pos:column="11">"SELECT %s WHERE rowid BETWEEN %lld AND %lld ORDER BY rowid %s"<pos:position pos:line="84" pos:column="74"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="85" pos:column="11">p<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">zReadExprlist<pos:position pos:line="85" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="29">pCsr<pos:position pos:line="85" pos:column="33"/></name><operator pos:line="85" pos:column="33">-&gt;<pos:position pos:line="85" pos:column="38"/></operator><name pos:line="85" pos:column="35">iMinDocid<pos:position pos:line="85" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="46">pCsr<pos:position pos:line="85" pos:column="50"/></name><operator pos:line="85" pos:column="50">-&gt;<pos:position pos:line="85" pos:column="55"/></operator><name pos:line="85" pos:column="52">iMaxDocid<pos:position pos:line="85" pos:column="61"/></name></name></expr></argument>,
          <argument><expr><operator pos:line="86" pos:column="11">(<pos:position pos:line="86" pos:column="12"/></operator><ternary><condition><expr><name><name pos:line="86" pos:column="12">pCsr<pos:position pos:line="86" pos:column="16"/></name><operator pos:line="86" pos:column="16">-&gt;<pos:position pos:line="86" pos:column="21"/></operator><name pos:line="86" pos:column="18">bDesc<pos:position pos:line="86" pos:column="23"/></name></name></expr> ?<pos:position pos:line="86" pos:column="25"/></condition><then pos:line="86" pos:column="25"> <expr><literal type="string" pos:line="86" pos:column="26">"DESC"<pos:position pos:line="86" pos:column="32"/></literal></expr> <pos:position pos:line="86" pos:column="33"/></then><else pos:line="86" pos:column="33">: <expr><literal type="string" pos:line="86" pos:column="35">"ASC"<pos:position pos:line="86" pos:column="40"/></literal></expr></else></ternary><operator pos:line="86" pos:column="40">)<pos:position pos:line="86" pos:column="41"/></operator></expr></argument>
      )<pos:position pos:line="87" pos:column="8"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="9"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></then><else pos:line="88" pos:column="6">else<block pos:line="88" pos:column="10">{
      <expr_stmt><expr><name pos:line="89" pos:column="7">zSql<pos:position pos:line="89" pos:column="11"/></name> <operator pos:line="89" pos:column="12">=<pos:position pos:line="89" pos:column="13"/></operator> <call><name pos:line="89" pos:column="14">sqlite3_mprintf<pos:position pos:line="89" pos:column="29"/></name><argument_list pos:line="89" pos:column="29">(<argument><expr><literal type="string" pos:line="89" pos:column="30">"SELECT %s ORDER BY rowid %s"<pos:position pos:line="89" pos:column="59"/></literal></expr></argument>, 
          <argument><expr><name><name pos:line="90" pos:column="11">p<pos:position pos:line="90" pos:column="12"/></name><operator pos:line="90" pos:column="12">-&gt;<pos:position pos:line="90" pos:column="17"/></operator><name pos:line="90" pos:column="14">zReadExprlist<pos:position pos:line="90" pos:column="27"/></name></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="29">(<pos:position pos:line="90" pos:column="30"/></operator><ternary><condition><expr><name><name pos:line="90" pos:column="30">pCsr<pos:position pos:line="90" pos:column="34"/></name><operator pos:line="90" pos:column="34">-&gt;<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="36">bDesc<pos:position pos:line="90" pos:column="41"/></name></name></expr> ?<pos:position pos:line="90" pos:column="43"/></condition><then pos:line="90" pos:column="43"> <expr><literal type="string" pos:line="90" pos:column="44">"DESC"<pos:position pos:line="90" pos:column="50"/></literal></expr> <pos:position pos:line="90" pos:column="51"/></then><else pos:line="90" pos:column="51">: <expr><literal type="string" pos:line="90" pos:column="53">"ASC"<pos:position pos:line="90" pos:column="58"/></literal></expr></else></ternary><operator pos:line="90" pos:column="58">)<pos:position pos:line="90" pos:column="59"/></operator></expr></argument>
      )<pos:position pos:line="91" pos:column="8"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="9"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></else></if>
    <if pos:line="93" pos:column="5">if<condition pos:line="93" pos:column="7">( <expr><name pos:line="93" pos:column="9">zSql<pos:position pos:line="93" pos:column="13"/></name></expr> )<pos:position pos:line="93" pos:column="15"/></condition><then><block pos:line="93" pos:column="15">{
      <expr_stmt><expr><name pos:line="94" pos:column="7">rc<pos:position pos:line="94" pos:column="9"/></name> <operator pos:line="94" pos:column="10">=<pos:position pos:line="94" pos:column="11"/></operator> <call><name pos:line="94" pos:column="12">sqlite3_prepare_v3<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><name><name pos:line="94" pos:column="31">p<pos:position pos:line="94" pos:column="32"/></name><operator pos:line="94" pos:column="32">-&gt;<pos:position pos:line="94" pos:column="37"/></operator><name pos:line="94" pos:column="34">db<pos:position pos:line="94" pos:column="36"/></name></name></expr></argument>,<argument><expr><name pos:line="94" pos:column="37">zSql<pos:position pos:line="94" pos:column="41"/></name></expr></argument>,<argument><expr><operator pos:line="94" pos:column="42">-<pos:position pos:line="94" pos:column="43"/></operator><literal type="number" pos:line="94" pos:column="43">1<pos:position pos:line="94" pos:column="44"/></literal></expr></argument>,<argument><expr><name pos:line="94" pos:column="45">SQLITE_PREPARE_PERSISTENT<pos:position pos:line="94" pos:column="70"/></name></expr></argument>,<argument><expr><operator pos:line="94" pos:column="71">&amp;<pos:position pos:line="94" pos:column="76"/></operator><name><name pos:line="94" pos:column="72">pCsr<pos:position pos:line="94" pos:column="76"/></name><operator pos:line="94" pos:column="76">-&gt;<pos:position pos:line="94" pos:column="81"/></operator><name pos:line="94" pos:column="78">pStmt<pos:position pos:line="94" pos:column="83"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="94" pos:column="84">0<pos:position pos:line="94" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="87"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="95" pos:column="7">sqlite3_free<pos:position pos:line="95" pos:column="19"/></name><argument_list pos:line="95" pos:column="19">(<argument><expr><name pos:line="95" pos:column="20">zSql<pos:position pos:line="95" pos:column="24"/></name></expr></argument>)<pos:position pos:line="95" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="96" pos:column="6"/></block></then><else pos:line="96" pos:column="6">else<block pos:line="96" pos:column="10">{
      <expr_stmt><expr><name pos:line="97" pos:column="7">rc<pos:position pos:line="97" pos:column="9"/></name> <operator pos:line="97" pos:column="10">=<pos:position pos:line="97" pos:column="11"/></operator> <name pos:line="97" pos:column="12">SQLITE_NOMEM<pos:position pos:line="97" pos:column="24"/></name></expr>;<pos:position pos:line="97" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block></else></if>
  }<pos:position pos:line="99" pos:column="4"/></block></then><elseif pos:line="99" pos:column="4">else <if pos:line="99" pos:column="9">if<condition pos:line="99" pos:column="11">( <expr><name pos:line="99" pos:column="13">eSearch<pos:position pos:line="99" pos:column="20"/></name><operator pos:line="99" pos:column="20">==<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="22">FTS3_DOCID_SEARCH<pos:position pos:line="99" pos:column="39"/></name></expr> )<pos:position pos:line="99" pos:column="41"/></condition><then><block pos:line="99" pos:column="41">{
    <expr_stmt><expr><name pos:line="100" pos:column="5">rc<pos:position pos:line="100" pos:column="7"/></name> <operator pos:line="100" pos:column="8">=<pos:position pos:line="100" pos:column="9"/></operator> <call><name pos:line="100" pos:column="10">fts3CursorSeekStmt<pos:position pos:line="100" pos:column="28"/></name><argument_list pos:line="100" pos:column="28">(<argument><expr><name pos:line="100" pos:column="29">pCsr<pos:position pos:line="100" pos:column="33"/></name></expr></argument>)<pos:position pos:line="100" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="35"/></expr_stmt>
    <if pos:line="101" pos:column="5">if<condition pos:line="101" pos:column="7">( <expr><name pos:line="101" pos:column="9">rc<pos:position pos:line="101" pos:column="11"/></name><operator pos:line="101" pos:column="11">==<pos:position pos:line="101" pos:column="13"/></operator><name pos:line="101" pos:column="13">SQLITE_OK<pos:position pos:line="101" pos:column="22"/></name></expr> )<pos:position pos:line="101" pos:column="24"/></condition><then><block pos:line="101" pos:column="24">{
      <expr_stmt><expr><name pos:line="102" pos:column="7">rc<pos:position pos:line="102" pos:column="9"/></name> <operator pos:line="102" pos:column="10">=<pos:position pos:line="102" pos:column="11"/></operator> <call><name pos:line="102" pos:column="12">sqlite3_bind_value<pos:position pos:line="102" pos:column="30"/></name><argument_list pos:line="102" pos:column="30">(<argument><expr><name><name pos:line="102" pos:column="31">pCsr<pos:position pos:line="102" pos:column="35"/></name><operator pos:line="102" pos:column="35">-&gt;<pos:position pos:line="102" pos:column="40"/></operator><name pos:line="102" pos:column="37">pStmt<pos:position pos:line="102" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="44">1<pos:position pos:line="102" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="47">pCons<pos:position pos:line="102" pos:column="52"/></name></expr></argument>)<pos:position pos:line="102" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if>
  }<pos:position pos:line="104" pos:column="4"/></block></then></if></elseif></if>
  <if pos:line="105" pos:column="3">if<condition pos:line="105" pos:column="5">( <expr><name pos:line="105" pos:column="7">rc<pos:position pos:line="105" pos:column="9"/></name><operator pos:line="105" pos:column="9">!=<pos:position pos:line="105" pos:column="11"/></operator><name pos:line="105" pos:column="11">SQLITE_OK<pos:position pos:line="105" pos:column="20"/></name></expr> )<pos:position pos:line="105" pos:column="22"/></condition><then pos:line="105" pos:column="22"> <block type="pseudo"><return pos:line="105" pos:column="23">return <expr><name pos:line="105" pos:column="30">rc<pos:position pos:line="105" pos:column="32"/></name></expr>;<pos:position pos:line="105" pos:column="33"/></return></block></then></if>

  <return pos:line="107" pos:column="3">return <expr><call><name pos:line="107" pos:column="10">fts3NextMethod<pos:position pos:line="107" pos:column="24"/></name><argument_list pos:line="107" pos:column="24">(<argument><expr><name pos:line="107" pos:column="25">pCursor<pos:position pos:line="107" pos:column="32"/></name></expr></argument>)<pos:position pos:line="107" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="34"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

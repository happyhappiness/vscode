<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_151.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">winMemRealloc<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">pPrior<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">nBytes<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list><block pos:line="1" pos:column="53">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">HANDLE<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">hHeap<pos:position pos:line="2" pos:column="15"/></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">void<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">p<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">winMemAssertMagic<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">()<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">hHeap<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <call><name pos:line="6" pos:column="11">winMemGetHeap<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">()<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">( <argument><expr><name pos:line="7" pos:column="11">hHeap<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">!=<pos:position pos:line="7" pos:column="18"/></operator><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></argument> )<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">( <argument><expr><name pos:line="8" pos:column="11">hHeap<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">!=<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">INVALID_HANDLE_VALUE<pos:position pos:line="8" pos:column="38"/></name></expr></argument> )<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><operator pos:line="9" pos:column="5">!<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">SQLITE_OS_WINRT<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">&amp;&amp;<pos:position pos:line="9" pos:column="32"/></operator> <call><name pos:line="9" pos:column="25">defined<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">SQLITE_WIN32_MALLOC_VALIDATE<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">assert<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">( <argument><expr><call><name pos:line="10" pos:column="11">osHeapValidate<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">hHeap<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">SQLITE_WIN32_HEAP_FLAGS<pos:position pos:line="10" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="58">pPrior<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr></argument> )<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">assert<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">( <argument><expr><name pos:line="12" pos:column="11">nBytes<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">&gt;=<pos:position pos:line="12" pos:column="22"/></operator><literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr></argument> )<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">( <expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">pPrior<pos:position pos:line="13" pos:column="14"/></name></expr> )<pos:position pos:line="13" pos:column="16"/></condition><then><block pos:line="13" pos:column="16">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">p<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">osHeapAlloc<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">hHeap<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">SQLITE_WIN32_HEAP_FLAGS<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="53">(<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="54">SIZE_T<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">)<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="61">nBytes<pos:position pos:line="14" pos:column="67"/></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="69"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then><else pos:line="15" pos:column="4">else<block pos:line="15" pos:column="8">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">p<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">osHeapReAlloc<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">hHeap<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="30">SQLITE_WIN32_HEAP_FLAGS<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="55">pPrior<pos:position pos:line="16" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="63">(<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="64">SIZE_T<pos:position pos:line="16" pos:column="70"/></name><operator pos:line="16" pos:column="70">)<pos:position pos:line="16" pos:column="71"/></operator><name pos:line="16" pos:column="71">nBytes<pos:position pos:line="16" pos:column="77"/></name></expr></argument>)<pos:position pos:line="16" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="79"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></else></if>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">( <expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">p<pos:position pos:line="18" pos:column="9"/></name></expr> )<pos:position pos:line="18" pos:column="11"/></condition><then><block pos:line="18" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">sqlite3_log<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">SQLITE_NOMEM<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="31">"failed to %s %u bytes (%lu), heap=%p"<pos:position pos:line="19" pos:column="69"/></literal></expr></argument>,
                <argument><expr><ternary><condition><expr><name pos:line="20" pos:column="17">pPrior<pos:position pos:line="20" pos:column="23"/></name></expr> ?<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25"> <expr><literal type="string" pos:line="20" pos:column="26">"HeapReAlloc"<pos:position pos:line="20" pos:column="39"/></literal></expr> <pos:position pos:line="20" pos:column="40"/></then><else pos:line="20" pos:column="40">: <expr><literal type="string" pos:line="20" pos:column="42">"HeapAlloc"<pos:position pos:line="20" pos:column="53"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">nBytes<pos:position pos:line="20" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="63">osGetLastError<pos:position pos:line="20" pos:column="77"/></name><argument_list pos:line="20" pos:column="77">()<pos:position pos:line="20" pos:column="79"/></argument_list></call></expr></argument>,
                <argument><expr><operator pos:line="21" pos:column="17">(<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">void<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></operator><operator pos:line="21" pos:column="23">)<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">hHeap<pos:position pos:line="21" pos:column="29"/></name></expr></argument>)<pos:position pos:line="21" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>
  <return pos:line="23" pos:column="3">return <expr><name pos:line="23" pos:column="10">p<pos:position pos:line="23" pos:column="11"/></name></expr>;<pos:position pos:line="23" pos:column="12"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

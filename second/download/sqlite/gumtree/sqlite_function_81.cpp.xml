<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_81.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">checkList<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(
  <parameter><decl><type><name pos:line="2" pos:column="3">IntegrityCk<pos:position pos:line="2" pos:column="14"/></name> <modifier pos:line="2" pos:column="15">*<pos:position pos:line="2" pos:column="16"/></modifier></type><name pos:line="2" pos:column="16">pCheck<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>,  <comment type="block" pos:line="2" pos:column="25">/* Integrity checking context */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">isFreeList<pos:position pos:line="3" pos:column="17"/></name></decl></parameter>,       <comment type="block" pos:line="3" pos:column="25">/* True for a freelist.  False for overflow page list */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">iPage<pos:position pos:line="4" pos:column="12"/></name></decl></parameter>,            <comment type="block" pos:line="4" pos:column="25">/* Page number for first page in the list */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">N<pos:position pos:line="5" pos:column="8"/></name></decl></parameter>                 <comment type="block" pos:line="5" pos:column="25">/* Expected number of pages in the list */</comment>
)<pos:position pos:line="6" pos:column="2"/></parameter_list><block pos:line="6" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">expected<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><name pos:line="8" pos:column="18">N<pos:position pos:line="8" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">iFirst<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name pos:line="9" pos:column="16">iPage<pos:position pos:line="9" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
  <while pos:line="10" pos:column="3">while<condition pos:line="10" pos:column="8">( <expr><name pos:line="10" pos:column="10">N<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">--<pos:position pos:line="10" pos:column="13"/></operator> <operator pos:line="10" pos:column="14">&gt;<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal> <operator pos:line="10" pos:column="18">&amp;&amp;<pos:position pos:line="10" pos:column="28"/></operator> <name><name pos:line="10" pos:column="21">pCheck<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">mxErr<pos:position pos:line="10" pos:column="34"/></name></name></expr> )<pos:position pos:line="10" pos:column="36"/></condition><block pos:line="10" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">DbPage<pos:position pos:line="11" pos:column="11"/></name> <modifier pos:line="11" pos:column="12">*<pos:position pos:line="11" pos:column="13"/></modifier></type><name pos:line="11" pos:column="13">pOvflPage<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">unsigned<pos:position pos:line="12" pos:column="13"/></name> <name pos:line="12" pos:column="14">char<pos:position pos:line="12" pos:column="18"/></name> <modifier pos:line="12" pos:column="19">*<pos:position pos:line="12" pos:column="20"/></modifier></type><name pos:line="12" pos:column="20">pOvflData<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">( <expr><name pos:line="13" pos:column="9">iPage<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">&lt;<pos:position pos:line="13" pos:column="18"/></operator><literal type="number" pos:line="13" pos:column="15">1<pos:position pos:line="13" pos:column="16"/></literal></expr> )<pos:position pos:line="13" pos:column="18"/></condition><then><block pos:line="13" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">checkAppendMsg<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">pCheck<pos:position pos:line="14" pos:column="28"/></name></expr></argument>,
         <argument><expr><literal type="string" pos:line="15" pos:column="10">"%d of %d pages missing from overflow list starting at %d"<pos:position pos:line="15" pos:column="68"/></literal></expr></argument>,
          <argument><expr><name pos:line="16" pos:column="11">N<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">+<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="16">expected<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="26">iFirst<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
      <break pos:line="17" pos:column="7">break;<pos:position pos:line="17" pos:column="13"/></break>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">( <expr><call><name pos:line="19" pos:column="9">checkRef<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">pCheck<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="26">iPage<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr> )<pos:position pos:line="19" pos:column="34"/></condition><then pos:line="19" pos:column="34"> <block type="pseudo"><break pos:line="19" pos:column="35">break;<pos:position pos:line="19" pos:column="41"/></break></block></then></if>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">( <expr><call><name pos:line="20" pos:column="9">sqlite3PagerGet<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name><name pos:line="20" pos:column="25">pCheck<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">pPager<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="41">(<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="42">Pgno<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">)<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="47">iPage<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="54">&amp;<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="55">pOvflPage<pos:position pos:line="20" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="66">0<pos:position pos:line="20" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr> )<pos:position pos:line="20" pos:column="70"/></condition><then><block pos:line="20" pos:column="70">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">checkAppendMsg<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">pCheck<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="30">"failed to get page %d"<pos:position pos:line="21" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="55">iPage<pos:position pos:line="21" pos:column="60"/></name></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>
      <break pos:line="22" pos:column="7">break;<pos:position pos:line="22" pos:column="13"/></break>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="24" pos:column="5">pOvflData<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <operator pos:line="24" pos:column="17">(<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">unsigned<pos:position pos:line="24" pos:column="26"/></name> <name pos:line="24" pos:column="27">char<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">*<pos:position pos:line="24" pos:column="33"/></operator><operator pos:line="24" pos:column="33">)<pos:position pos:line="24" pos:column="34"/></operator><call><name pos:line="24" pos:column="34">sqlite3PagerGetData<pos:position pos:line="24" pos:column="53"/></name><argument_list pos:line="24" pos:column="53">(<argument><expr><name pos:line="24" pos:column="54">pOvflPage<pos:position pos:line="24" pos:column="63"/></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">( <expr><name pos:line="25" pos:column="9">isFreeList<pos:position pos:line="25" pos:column="19"/></name></expr> )<pos:position pos:line="25" pos:column="21"/></condition><then><block pos:line="25" pos:column="21">{
      <decl_stmt><decl><type><name pos:line="26" pos:column="7">int<pos:position pos:line="26" pos:column="10"/></name></type> <name pos:line="26" pos:column="11">n<pos:position pos:line="26" pos:column="12"/></name> <init pos:line="26" pos:column="13">= <expr><call><name pos:line="26" pos:column="15">get4byte<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><operator pos:line="26" pos:column="24">&amp;<pos:position pos:line="26" pos:column="29"/></operator><name><name pos:line="26" pos:column="25">pOvflData<pos:position pos:line="26" pos:column="34"/></name><index pos:line="26" pos:column="34">[<expr><literal type="number" pos:line="26" pos:column="35">4<pos:position pos:line="26" pos:column="36"/></literal></expr>]<pos:position pos:line="26" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="39"/></decl_stmt>
<cpp:ifndef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">ifndef<pos:position pos:line="27" pos:column="8"/></cpp:directive> <name pos:line="27" pos:column="9">SQLITE_OMIT_AUTOVACUUM<pos:position pos:line="27" pos:column="31"/></name></cpp:ifndef>
      <if pos:line="28" pos:column="7">if<condition pos:line="28" pos:column="9">( <expr><name><name pos:line="28" pos:column="11">pCheck<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">pBt<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">autoVacuum<pos:position pos:line="28" pos:column="34"/></name></name></expr> )<pos:position pos:line="28" pos:column="36"/></condition><then><block pos:line="28" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">checkPtrmap<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">pCheck<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="29">iPage<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="36">PTRMAP_FREEPAGE<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="53">0<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
      }<pos:position pos:line="30" pos:column="8"/></block></then></if>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
      <if pos:line="32" pos:column="7">if<condition pos:line="32" pos:column="9">( <expr><name pos:line="32" pos:column="11">n<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">&gt;<pos:position pos:line="32" pos:column="16"/></operator><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">int<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">)<pos:position pos:line="32" pos:column="18"/></operator><name><name pos:line="32" pos:column="18">pCheck<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">pBt<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="31">usableSize<pos:position pos:line="32" pos:column="41"/></name></name><operator pos:line="32" pos:column="41">/<pos:position pos:line="32" pos:column="42"/></operator><literal type="number" pos:line="32" pos:column="42">4<pos:position pos:line="32" pos:column="43"/></literal><operator pos:line="32" pos:column="43">-<pos:position pos:line="32" pos:column="44"/></operator><literal type="number" pos:line="32" pos:column="44">2<pos:position pos:line="32" pos:column="45"/></literal></expr> )<pos:position pos:line="32" pos:column="47"/></condition><then><block pos:line="32" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">checkAppendMsg<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">pCheck<pos:position pos:line="33" pos:column="30"/></name></expr></argument>,
           <argument><expr><literal type="string" pos:line="34" pos:column="12">"freelist leaf count too big on page %d"<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="54">iPage<pos:position pos:line="34" pos:column="59"/></name></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">N<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">--<pos:position pos:line="35" pos:column="12"/></operator></expr>;<pos:position pos:line="35" pos:column="13"/></expr_stmt>
      }<pos:position pos:line="36" pos:column="8"/></block></then><else pos:line="36" pos:column="8">else<block pos:line="36" pos:column="12">{
        <for pos:line="37" pos:column="9">for<control pos:line="37" pos:column="12">(<init><expr><name pos:line="37" pos:column="13">i<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator><literal type="number" pos:line="37" pos:column="15">0<pos:position pos:line="37" pos:column="16"/></literal></expr>;<pos:position pos:line="37" pos:column="17"/></init> <condition><expr><name pos:line="37" pos:column="18">i<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">&lt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">n<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></condition> <incr><expr><name pos:line="37" pos:column="23">i<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">++<pos:position pos:line="37" pos:column="26"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="27"/></control><block pos:line="37" pos:column="27">{
          <decl_stmt><decl><type><name pos:line="38" pos:column="11">Pgno<pos:position pos:line="38" pos:column="15"/></name></type> <name pos:line="38" pos:column="16">iFreePage<pos:position pos:line="38" pos:column="25"/></name> <init pos:line="38" pos:column="26">= <expr><call><name pos:line="38" pos:column="28">get4byte<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><operator pos:line="38" pos:column="37">&amp;<pos:position pos:line="38" pos:column="42"/></operator><name><name pos:line="38" pos:column="38">pOvflData<pos:position pos:line="38" pos:column="47"/></name><index pos:line="38" pos:column="47">[<expr><literal type="number" pos:line="38" pos:column="48">8<pos:position pos:line="38" pos:column="49"/></literal><operator pos:line="38" pos:column="49">+<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="50">i<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">*<pos:position pos:line="38" pos:column="52"/></operator><literal type="number" pos:line="38" pos:column="52">4<pos:position pos:line="38" pos:column="53"/></literal></expr>]<pos:position pos:line="38" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="56"/></decl_stmt>
<cpp:ifndef pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">ifndef<pos:position pos:line="39" pos:column="8"/></cpp:directive> <name pos:line="39" pos:column="9">SQLITE_OMIT_AUTOVACUUM<pos:position pos:line="39" pos:column="31"/></name></cpp:ifndef>
          <if pos:line="40" pos:column="11">if<condition pos:line="40" pos:column="13">( <expr><name><name pos:line="40" pos:column="15">pCheck<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">-&gt;<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="23">pBt<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">-&gt;<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="28">autoVacuum<pos:position pos:line="40" pos:column="38"/></name></name></expr> )<pos:position pos:line="40" pos:column="40"/></condition><then><block pos:line="40" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">checkPtrmap<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">pCheck<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="33">iFreePage<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">PTRMAP_FREEPAGE<pos:position pos:line="41" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="61">0<pos:position pos:line="41" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="64"/></expr_stmt>
          }<pos:position pos:line="42" pos:column="12"/></block></then></if>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
          <expr_stmt><expr><call><name pos:line="44" pos:column="11">checkRef<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><name pos:line="44" pos:column="20">pCheck<pos:position pos:line="44" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="28">iFreePage<pos:position pos:line="44" pos:column="37"/></name></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="46" pos:column="9">N<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">-=<pos:position pos:line="46" pos:column="13"/></operator> <name pos:line="46" pos:column="14">n<pos:position pos:line="46" pos:column="15"/></name></expr>;<pos:position pos:line="46" pos:column="16"/></expr_stmt>
      }<pos:position pos:line="47" pos:column="8"/></block></else></if>
    }<pos:position pos:line="48" pos:column="6"/></block></then>
<cpp:ifndef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifndef<pos:position pos:line="49" pos:column="8"/></cpp:directive> <name pos:line="49" pos:column="9">SQLITE_OMIT_AUTOVACUUM<pos:position pos:line="49" pos:column="31"/></name></cpp:ifndef>
    <else pos:line="50" pos:column="5">else<block pos:line="50" pos:column="9">{
      <comment type="block" pos:line="51" pos:column="7">/* If this database supports auto-vacuum and iPage is not the last
      ** page in this overflow list, check that the pointer-map entry for
      ** the following page matches iPage.
      */</comment>
      <if pos:line="55" pos:column="7">if<condition pos:line="55" pos:column="9">( <expr><name><name pos:line="55" pos:column="11">pCheck<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="19">pBt<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">-&gt;<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="24">autoVacuum<pos:position pos:line="55" pos:column="34"/></name></name> <operator pos:line="55" pos:column="35">&amp;&amp;<pos:position pos:line="55" pos:column="45"/></operator> <name pos:line="55" pos:column="38">N<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">&gt;<pos:position pos:line="55" pos:column="43"/></operator><literal type="number" pos:line="55" pos:column="40">0<pos:position pos:line="55" pos:column="41"/></literal></expr> )<pos:position pos:line="55" pos:column="43"/></condition><then><block pos:line="55" pos:column="43">{
        <expr_stmt><expr><name pos:line="56" pos:column="9">i<pos:position pos:line="56" pos:column="10"/></name> <operator pos:line="56" pos:column="11">=<pos:position pos:line="56" pos:column="12"/></operator> <call><name pos:line="56" pos:column="13">get4byte<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">pOvflData<pos:position pos:line="56" pos:column="31"/></name></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">checkPtrmap<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">pCheck<pos:position pos:line="57" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="29">i<pos:position pos:line="57" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="32">PTRMAP_OVERFLOW2<pos:position pos:line="57" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="50">iPage<pos:position pos:line="57" pos:column="55"/></name></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="57"/></expr_stmt>
      }<pos:position pos:line="58" pos:column="8"/></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="61" pos:column="5">iPage<pos:position pos:line="61" pos:column="10"/></name> <operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator> <call><name pos:line="61" pos:column="13">get4byte<pos:position pos:line="61" pos:column="21"/></name><argument_list pos:line="61" pos:column="21">(<argument><expr><name pos:line="61" pos:column="22">pOvflData<pos:position pos:line="61" pos:column="31"/></name></expr></argument>)<pos:position pos:line="61" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">sqlite3PagerUnref<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><name pos:line="62" pos:column="23">pOvflPage<pos:position pos:line="62" pos:column="32"/></name></expr></argument>)<pos:position pos:line="62" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>

    <if pos:line="64" pos:column="5">if<condition pos:line="64" pos:column="7">( <expr><name pos:line="64" pos:column="9">isFreeList<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">&amp;&amp;<pos:position pos:line="64" pos:column="30"/></operator> <name pos:line="64" pos:column="23">N<pos:position pos:line="64" pos:column="24"/></name><operator pos:line="64" pos:column="24">&lt;<pos:position pos:line="64" pos:column="28"/></operator><operator pos:line="64" pos:column="25">(<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="26">iPage<pos:position pos:line="64" pos:column="31"/></name><operator pos:line="64" pos:column="31">!=<pos:position pos:line="64" pos:column="33"/></operator><literal type="number" pos:line="64" pos:column="33">0<pos:position pos:line="64" pos:column="34"/></literal><operator pos:line="64" pos:column="34">)<pos:position pos:line="64" pos:column="35"/></operator></expr> )<pos:position pos:line="64" pos:column="37"/></condition><then><block pos:line="64" pos:column="37">{
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">checkAppendMsg<pos:position pos:line="65" pos:column="21"/></name><argument_list pos:line="65" pos:column="21">(<argument><expr><name pos:line="65" pos:column="22">pCheck<pos:position pos:line="65" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="30">"free-page count in header is too small"<pos:position pos:line="65" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
  }<pos:position pos:line="67" pos:column="4"/></block></while>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

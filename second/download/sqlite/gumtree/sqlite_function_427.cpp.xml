<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_427.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sqlite3InitCallback<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">pInit<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">argc<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">argv<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier><modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">NotUsed<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list><block pos:line="1" pos:column="76">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">InitData<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">pData<pos:position pos:line="2" pos:column="18"/></name> <init pos:line="2" pos:column="19">= <expr><operator pos:line="2" pos:column="21">(<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">InitData<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></operator><operator pos:line="2" pos:column="31">)<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">pInit<pos:position pos:line="2" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">sqlite3<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">db<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name><name pos:line="3" pos:column="17">pData<pos:position pos:line="3" pos:column="22"/></name><operator pos:line="3" pos:column="22">-&gt;<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="24">db<pos:position pos:line="3" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">iDb<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><name><name pos:line="4" pos:column="13">pData<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">iDb<pos:position pos:line="4" pos:column="23"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">( <argument><expr><name pos:line="6" pos:column="11">argc<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">==<pos:position pos:line="6" pos:column="17"/></operator><literal type="number" pos:line="6" pos:column="17">3<pos:position pos:line="6" pos:column="18"/></literal></expr></argument> )<pos:position pos:line="6" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">UNUSED_PARAMETER2<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">NotUsed<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">argc<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">( <argument><expr><call><name pos:line="8" pos:column="11">sqlite3_mutex_held<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name><name pos:line="8" pos:column="30">db<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">mutex<pos:position pos:line="8" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr></argument> )<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">DbClearProperty<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">db<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="23">iDb<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="28">DB_Empty<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">( <expr><name><name pos:line="10" pos:column="7">db<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">mallocFailed<pos:position pos:line="10" pos:column="23"/></name></name></expr> )<pos:position pos:line="10" pos:column="25"/></condition><then><block pos:line="10" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">corruptSchema<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">pData<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="26">argv<pos:position pos:line="11" pos:column="30"/></name><index pos:line="11" pos:column="30">[<expr><literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr>]<pos:position pos:line="11" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">1<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">assert<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">( <argument><expr><name pos:line="15" pos:column="11">iDb<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">&gt;=<pos:position pos:line="15" pos:column="19"/></operator><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal> <operator pos:line="15" pos:column="18">&amp;&amp;<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="21">iDb<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">&lt;<pos:position pos:line="15" pos:column="28"/></operator><name><name pos:line="15" pos:column="25">db<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">nDb<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument> )<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">( <expr><name pos:line="16" pos:column="7">argv<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">==<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">0<pos:position pos:line="16" pos:column="14"/></literal></expr> )<pos:position pos:line="16" pos:column="16"/></condition><then pos:line="16" pos:column="16"> <block type="pseudo"><return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return></block></then></if>   <comment type="block" pos:line="16" pos:column="29">/* Might happen if EMPTY_RESULT_CALLBACKS are on */</comment>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">( <expr><name><name pos:line="17" pos:column="7">argv<pos:position pos:line="17" pos:column="11"/></name><index pos:line="17" pos:column="11">[<expr><literal type="number" pos:line="17" pos:column="12">1<pos:position pos:line="17" pos:column="13"/></literal></expr>]<pos:position pos:line="17" pos:column="14"/></index></name><operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr> )<pos:position pos:line="17" pos:column="19"/></condition><then><block pos:line="17" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">corruptSchema<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">pData<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="26">argv<pos:position pos:line="18" pos:column="30"/></name><index pos:line="18" pos:column="30">[<expr><literal type="number" pos:line="18" pos:column="31">0<pos:position pos:line="18" pos:column="32"/></literal></expr>]<pos:position pos:line="18" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="35">0<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then><elseif pos:line="19" pos:column="4">else <if pos:line="19" pos:column="9">if<condition pos:line="19" pos:column="11">( <expr><call><name pos:line="19" pos:column="13">sqlite3_strnicmp<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name><name pos:line="19" pos:column="30">argv<pos:position pos:line="19" pos:column="34"/></name><index pos:line="19" pos:column="34">[<expr><literal type="number" pos:line="19" pos:column="35">2<pos:position pos:line="19" pos:column="36"/></literal></expr>]<pos:position pos:line="19" pos:column="37"/></index></name></expr></argument>,<argument><expr><literal type="string" pos:line="19" pos:column="38">"create "<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="19" pos:column="48">7<pos:position pos:line="19" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call><operator pos:line="19" pos:column="50">==<pos:position pos:line="19" pos:column="52"/></operator><literal type="number" pos:line="19" pos:column="52">0<pos:position pos:line="19" pos:column="53"/></literal></expr> )<pos:position pos:line="19" pos:column="55"/></condition><then><block pos:line="19" pos:column="55">{
    <comment type="block" pos:line="20" pos:column="5">/* Call the parser to process a CREATE TABLE, INDEX or VIEW.
    ** But because db-&gt;init.busy is set to 1, no VDBE code is generated
    ** or executed.  All the parser does is build the internal data
    ** structures that describe the table, index, or view.
    */</comment>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">int<pos:position pos:line="25" pos:column="8"/></name></type> <name pos:line="25" pos:column="9">rc<pos:position pos:line="25" pos:column="11"/></name></decl>;<pos:position pos:line="25" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">u8<pos:position pos:line="26" pos:column="7"/></name></type> <name pos:line="26" pos:column="8">saved_iDb<pos:position pos:line="26" pos:column="17"/></name> <init pos:line="26" pos:column="18">= <expr><name><name pos:line="26" pos:column="20">db<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">init<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">.<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">iDb<pos:position pos:line="26" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="26" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">sqlite3_stmt<pos:position pos:line="27" pos:column="17"/></name> <modifier pos:line="27" pos:column="18">*<pos:position pos:line="27" pos:column="19"/></modifier></type><name pos:line="27" pos:column="19">pStmt<pos:position pos:line="27" pos:column="24"/></name></decl>;<pos:position pos:line="27" pos:column="25"/></decl_stmt>
    <macro><name pos:line="28" pos:column="5">TESTONLY<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument pos:line="28" pos:column="14">int rcp<pos:position pos:line="28" pos:column="21"/></argument>)<pos:position pos:line="28" pos:column="22"/></argument_list></macro><empty_stmt pos:line="28" pos:column="22">;<pos:position pos:line="28" pos:column="23"/></empty_stmt>            <comment type="block" pos:line="28" pos:column="35">/* Return code from sqlite3_prepare() */</comment>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">assert<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">( <argument><expr><name><name pos:line="30" pos:column="13">db<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">init<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">.<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">busy<pos:position pos:line="30" pos:column="26"/></name></name></expr></argument> )<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">db<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">init<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">.<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">iDb<pos:position pos:line="31" pos:column="17"/></name></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <name pos:line="31" pos:column="20">iDb<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">db<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">init<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">.<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">newTnum<pos:position pos:line="32" pos:column="21"/></name></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <call><name pos:line="32" pos:column="24">sqlite3Atoi<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name><name pos:line="32" pos:column="36">argv<pos:position pos:line="32" pos:column="40"/></name><index pos:line="32" pos:column="40">[<expr><literal type="number" pos:line="32" pos:column="41">1<pos:position pos:line="32" pos:column="42"/></literal></expr>]<pos:position pos:line="32" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">db<pos:position pos:line="33" pos:column="7"/></name><operator pos:line="33" pos:column="7">-&gt;<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="9">init<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">.<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">orphanTrigger<pos:position pos:line="33" pos:column="27"/></name></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <literal type="number" pos:line="33" pos:column="30">0<pos:position pos:line="33" pos:column="31"/></literal></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
    <macro><name pos:line="34" pos:column="5">TESTONLY<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument pos:line="34" pos:column="14">rcp =<pos:position pos:line="34" pos:column="19"/></argument> )<pos:position pos:line="34" pos:column="21"/></argument_list></macro> <expr_stmt><expr><call><name pos:line="34" pos:column="22">sqlite3_prepare<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">db<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="42">argv<pos:position pos:line="34" pos:column="46"/></name><index pos:line="34" pos:column="46">[<expr><literal type="number" pos:line="34" pos:column="47">2<pos:position pos:line="34" pos:column="48"/></literal></expr>]<pos:position pos:line="34" pos:column="49"/></index></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="51">-<pos:position pos:line="34" pos:column="52"/></operator><literal type="number" pos:line="34" pos:column="52">1<pos:position pos:line="34" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="55">&amp;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="56">pStmt<pos:position pos:line="34" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="63">0<pos:position pos:line="34" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">rc<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <name><name pos:line="35" pos:column="10">db<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">errCode<pos:position pos:line="35" pos:column="21"/></name></name></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">assert<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">( <argument><expr><operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">rc<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">&amp;<pos:position pos:line="36" pos:column="21"/></operator><literal type="number" pos:line="36" pos:column="17">0xFF<pos:position pos:line="36" pos:column="21"/></literal><operator pos:line="36" pos:column="21">)<pos:position pos:line="36" pos:column="22"/></operator><operator pos:line="36" pos:column="22">==<pos:position pos:line="36" pos:column="24"/></operator><operator pos:line="36" pos:column="24">(<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">rcp<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">&amp;<pos:position pos:line="36" pos:column="33"/></operator><literal type="number" pos:line="36" pos:column="29">0xFF<pos:position pos:line="36" pos:column="33"/></literal><operator pos:line="36" pos:column="33">)<pos:position pos:line="36" pos:column="34"/></operator></expr></argument> )<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">db<pos:position pos:line="37" pos:column="7"/></name><operator pos:line="37" pos:column="7">-&gt;<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="9">init<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">.<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">iDb<pos:position pos:line="37" pos:column="17"/></name></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">saved_iDb<pos:position pos:line="37" pos:column="29"/></name></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">assert<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">( <argument><expr><name pos:line="38" pos:column="13">saved_iDb<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">==<pos:position pos:line="38" pos:column="24"/></operator><literal type="number" pos:line="38" pos:column="24">0<pos:position pos:line="38" pos:column="25"/></literal> <operator pos:line="38" pos:column="26">||<pos:position pos:line="38" pos:column="28"/></operator> <operator pos:line="38" pos:column="29">(<pos:position pos:line="38" pos:column="30"/></operator><name><name pos:line="38" pos:column="30">db<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">mDbFlags<pos:position pos:line="38" pos:column="42"/></name></name> <operator pos:line="38" pos:column="43">&amp;<pos:position pos:line="38" pos:column="48"/></operator> <name pos:line="38" pos:column="45">DBFLAG_Vacuum<pos:position pos:line="38" pos:column="58"/></name><operator pos:line="38" pos:column="58">)<pos:position pos:line="38" pos:column="59"/></operator><operator pos:line="38" pos:column="59">!=<pos:position pos:line="38" pos:column="61"/></operator><literal type="number" pos:line="38" pos:column="61">0<pos:position pos:line="38" pos:column="62"/></literal></expr></argument> )<pos:position pos:line="38" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="65"/></expr_stmt>
    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">( <expr><name pos:line="39" pos:column="9">SQLITE_OK<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">!=<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">rc<pos:position pos:line="39" pos:column="22"/></name></expr> )<pos:position pos:line="39" pos:column="24"/></condition><then><block pos:line="39" pos:column="24">{
      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">( <expr><name><name pos:line="40" pos:column="11">db<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">init<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">.<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">orphanTrigger<pos:position pos:line="40" pos:column="33"/></name></name></expr> )<pos:position pos:line="40" pos:column="35"/></condition><then><block pos:line="40" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">assert<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">( <argument><expr><name pos:line="41" pos:column="17">iDb<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">==<pos:position pos:line="41" pos:column="22"/></operator><literal type="number" pos:line="41" pos:column="22">1<pos:position pos:line="41" pos:column="23"/></literal></expr></argument> )<pos:position pos:line="41" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="42" pos:column="8"/></block></then><else pos:line="42" pos:column="8">else<block pos:line="42" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">pData<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">rc<pos:position pos:line="43" pos:column="18"/></name></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <name pos:line="43" pos:column="21">rc<pos:position pos:line="43" pos:column="23"/></name></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
        <if pos:line="44" pos:column="9">if<condition pos:line="44" pos:column="11">( <expr><name pos:line="44" pos:column="13">rc<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">==<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="17">SQLITE_NOMEM<pos:position pos:line="44" pos:column="29"/></name></expr> )<pos:position pos:line="44" pos:column="31"/></condition><then><block pos:line="44" pos:column="31">{
          <expr_stmt><expr><call><name pos:line="45" pos:column="11">sqlite3OomFault<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">db<pos:position pos:line="45" pos:column="29"/></name></expr></argument>)<pos:position pos:line="45" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then><elseif pos:line="46" pos:column="10">else <if pos:line="46" pos:column="15">if<condition pos:line="46" pos:column="17">( <expr><name pos:line="46" pos:column="19">rc<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">!=<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="23">SQLITE_INTERRUPT<pos:position pos:line="46" pos:column="39"/></name> <operator pos:line="46" pos:column="40">&amp;&amp;<pos:position pos:line="46" pos:column="50"/></operator> <operator pos:line="46" pos:column="43">(<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="44">rc<pos:position pos:line="46" pos:column="46"/></name><operator pos:line="46" pos:column="46">&amp;<pos:position pos:line="46" pos:column="51"/></operator><literal type="number" pos:line="46" pos:column="47">0xFF<pos:position pos:line="46" pos:column="51"/></literal><operator pos:line="46" pos:column="51">)<pos:position pos:line="46" pos:column="52"/></operator><operator pos:line="46" pos:column="52">!=<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="54">SQLITE_LOCKED<pos:position pos:line="46" pos:column="67"/></name></expr> )<pos:position pos:line="46" pos:column="69"/></condition><then><block pos:line="46" pos:column="69">{
          <expr_stmt><expr><call><name pos:line="47" pos:column="11">corruptSchema<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">pData<pos:position pos:line="47" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="32">argv<pos:position pos:line="47" pos:column="36"/></name><index pos:line="47" pos:column="36">[<expr><literal type="number" pos:line="47" pos:column="37">0<pos:position pos:line="47" pos:column="38"/></literal></expr>]<pos:position pos:line="47" pos:column="39"/></index></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="41">sqlite3_errmsg<pos:position pos:line="47" pos:column="55"/></name><argument_list pos:line="47" pos:column="55">(<argument><expr><name pos:line="47" pos:column="56">db<pos:position pos:line="47" pos:column="58"/></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if></elseif></if>
      }<pos:position pos:line="49" pos:column="8"/></block></else></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">sqlite3_finalize<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><name pos:line="51" pos:column="22">pStmt<pos:position pos:line="51" pos:column="27"/></name></expr></argument>)<pos:position pos:line="51" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if></elseif><elseif pos:line="52" pos:column="4">else <if pos:line="52" pos:column="9">if<condition pos:line="52" pos:column="11">( <expr><name><name pos:line="52" pos:column="13">argv<pos:position pos:line="52" pos:column="17"/></name><index pos:line="52" pos:column="17">[<expr><literal type="number" pos:line="52" pos:column="18">0<pos:position pos:line="52" pos:column="19"/></literal></expr>]<pos:position pos:line="52" pos:column="20"/></index></name><operator pos:line="52" pos:column="20">==<pos:position pos:line="52" pos:column="22"/></operator><literal type="number" pos:line="52" pos:column="22">0<pos:position pos:line="52" pos:column="23"/></literal> <operator pos:line="52" pos:column="24">||<pos:position pos:line="52" pos:column="26"/></operator> <operator pos:line="52" pos:column="27">(<pos:position pos:line="52" pos:column="28"/></operator><name><name pos:line="52" pos:column="28">argv<pos:position pos:line="52" pos:column="32"/></name><index pos:line="52" pos:column="32">[<expr><literal type="number" pos:line="52" pos:column="33">2<pos:position pos:line="52" pos:column="34"/></literal></expr>]<pos:position pos:line="52" pos:column="35"/></index></name><operator pos:line="52" pos:column="35">!=<pos:position pos:line="52" pos:column="37"/></operator><literal type="number" pos:line="52" pos:column="37">0<pos:position pos:line="52" pos:column="38"/></literal> <operator pos:line="52" pos:column="39">&amp;&amp;<pos:position pos:line="52" pos:column="49"/></operator> <name><name pos:line="52" pos:column="42">argv<pos:position pos:line="52" pos:column="46"/></name><index pos:line="52" pos:column="46">[<expr><literal type="number" pos:line="52" pos:column="47">2<pos:position pos:line="52" pos:column="48"/></literal></expr>]<pos:position pos:line="52" pos:column="49"/></index><index pos:line="52" pos:column="49">[<expr><literal type="number" pos:line="52" pos:column="50">0<pos:position pos:line="52" pos:column="51"/></literal></expr>]<pos:position pos:line="52" pos:column="52"/></index></name><operator pos:line="52" pos:column="52">!=<pos:position pos:line="52" pos:column="54"/></operator><literal type="number" pos:line="52" pos:column="54">0<pos:position pos:line="52" pos:column="55"/></literal><operator pos:line="52" pos:column="55">)<pos:position pos:line="52" pos:column="56"/></operator></expr> )<pos:position pos:line="52" pos:column="58"/></condition><then><block pos:line="52" pos:column="58">{
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">corruptSchema<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><name pos:line="53" pos:column="19">pData<pos:position pos:line="53" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="26">argv<pos:position pos:line="53" pos:column="30"/></name><index pos:line="53" pos:column="30">[<expr><literal type="number" pos:line="53" pos:column="31">0<pos:position pos:line="53" pos:column="32"/></literal></expr>]<pos:position pos:line="53" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="35">0<pos:position pos:line="53" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if></elseif><else pos:line="54" pos:column="4">else<block pos:line="54" pos:column="8">{
    <comment type="block" pos:line="55" pos:column="5">/* If the SQL column is blank it means this is an index that
    ** was created to be the PRIMARY KEY or to fulfill a UNIQUE
    ** constraint for a CREATE TABLE.  The index should have already
    ** been created when we processed the CREATE TABLE.  All we have
    ** to do here is record the root page number for that index.
    */</comment>
    <decl_stmt><decl><type><name pos:line="61" pos:column="5">Index<pos:position pos:line="61" pos:column="10"/></name> <modifier pos:line="61" pos:column="11">*<pos:position pos:line="61" pos:column="12"/></modifier></type><name pos:line="61" pos:column="12">pIndex<pos:position pos:line="61" pos:column="18"/></name></decl>;<pos:position pos:line="61" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">pIndex<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <call><name pos:line="62" pos:column="14">sqlite3FindIndex<pos:position pos:line="62" pos:column="30"/></name><argument_list pos:line="62" pos:column="30">(<argument><expr><name pos:line="62" pos:column="31">db<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="35">argv<pos:position pos:line="62" pos:column="39"/></name><index pos:line="62" pos:column="39">[<expr><literal type="number" pos:line="62" pos:column="40">0<pos:position pos:line="62" pos:column="41"/></literal></expr>]<pos:position pos:line="62" pos:column="42"/></index></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="44">db<pos:position pos:line="62" pos:column="46"/></name><operator pos:line="62" pos:column="46">-&gt;<pos:position pos:line="62" pos:column="51"/></operator><name pos:line="62" pos:column="48">aDb<pos:position pos:line="62" pos:column="51"/></name><index pos:line="62" pos:column="51">[<expr><name pos:line="62" pos:column="52">iDb<pos:position pos:line="62" pos:column="55"/></name></expr>]<pos:position pos:line="62" pos:column="56"/></index></name><operator pos:line="62" pos:column="56">.<pos:position pos:line="62" pos:column="57"/></operator><name pos:line="62" pos:column="57">zDbSName<pos:position pos:line="62" pos:column="65"/></name></expr></argument>)<pos:position pos:line="62" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="67"/></expr_stmt>
    <if pos:line="63" pos:column="5">if<condition pos:line="63" pos:column="7">( <expr><name pos:line="63" pos:column="9">pIndex<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">==<pos:position pos:line="63" pos:column="17"/></operator><literal type="number" pos:line="63" pos:column="17">0<pos:position pos:line="63" pos:column="18"/></literal></expr> )<pos:position pos:line="63" pos:column="20"/></condition><then><block pos:line="63" pos:column="20">{
      <comment type="block" pos:line="64" pos:column="7">/* This can occur if there exists an index on a TEMP table which
      ** has the same name as another index on a permanent index.  Since
      ** the permanent table is hidden by the TEMP table, we can also
      ** safely ignore the index on the permanent table.
      */</comment>
      <comment type="block" pos:line="69" pos:column="7">/* Do Nothing */</comment><empty_stmt pos:line="69" pos:column="23">;<pos:position pos:line="69" pos:column="24"/></empty_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then><elseif pos:line="70" pos:column="6">else <if pos:line="70" pos:column="11">if<condition pos:line="70" pos:column="13">( <expr><call><name pos:line="70" pos:column="15">sqlite3GetInt32<pos:position pos:line="70" pos:column="30"/></name><argument_list pos:line="70" pos:column="30">(<argument><expr><name><name pos:line="70" pos:column="31">argv<pos:position pos:line="70" pos:column="35"/></name><index pos:line="70" pos:column="35">[<expr><literal type="number" pos:line="70" pos:column="36">1<pos:position pos:line="70" pos:column="37"/></literal></expr>]<pos:position pos:line="70" pos:column="38"/></index></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="40">&amp;<pos:position pos:line="70" pos:column="45"/></operator><name><name pos:line="70" pos:column="41">pIndex<pos:position pos:line="70" pos:column="47"/></name><operator pos:line="70" pos:column="47">-&gt;<pos:position pos:line="70" pos:column="52"/></operator><name pos:line="70" pos:column="49">tnum<pos:position pos:line="70" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></call><operator pos:line="70" pos:column="54">==<pos:position pos:line="70" pos:column="56"/></operator><literal type="number" pos:line="70" pos:column="56">0<pos:position pos:line="70" pos:column="57"/></literal></expr> )<pos:position pos:line="70" pos:column="59"/></condition><then><block pos:line="70" pos:column="59">{
      <expr_stmt><expr><call><name pos:line="71" pos:column="7">corruptSchema<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><name pos:line="71" pos:column="21">pData<pos:position pos:line="71" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="28">argv<pos:position pos:line="71" pos:column="32"/></name><index pos:line="71" pos:column="32">[<expr><literal type="number" pos:line="71" pos:column="33">0<pos:position pos:line="71" pos:column="34"/></literal></expr>]<pos:position pos:line="71" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="37">"invalid rootpage"<pos:position pos:line="71" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="73" pos:column="4"/></block></else></if>
  <return pos:line="74" pos:column="3">return <expr><literal type="number" pos:line="74" pos:column="10">0<pos:position pos:line="74" pos:column="11"/></literal></expr>;<pos:position pos:line="74" pos:column="12"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

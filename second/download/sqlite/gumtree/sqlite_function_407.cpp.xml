<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_407.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">winMemShutdown<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">pAppData<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list><block pos:line="1" pos:column="43">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">winMemData<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">pWinMemData<pos:position pos:line="2" pos:column="26"/></name> <init pos:line="2" pos:column="27">= <expr><operator pos:line="2" pos:column="29">(<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">winMemData<pos:position pos:line="2" pos:column="40"/></name> <operator pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></operator><operator pos:line="2" pos:column="42">)<pos:position pos:line="2" pos:column="43"/></operator><name pos:line="2" pos:column="43">pAppData<pos:position pos:line="2" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="52"/></decl_stmt>

  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">( <expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">pWinMemData<pos:position pos:line="4" pos:column="19"/></name></expr> )<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block type="pseudo"><return pos:line="4" pos:column="22">return;<pos:position pos:line="4" pos:column="29"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">assert<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">( <argument><expr><name><name pos:line="5" pos:column="11">pWinMemData<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">magic1<pos:position pos:line="5" pos:column="30"/></name></name><operator pos:line="5" pos:column="30">==<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">WINMEM_MAGIC1<pos:position pos:line="5" pos:column="45"/></name></expr></argument> )<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">( <argument><expr><name><name pos:line="6" pos:column="11">pWinMemData<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">magic2<pos:position pos:line="6" pos:column="30"/></name></name><operator pos:line="6" pos:column="30">==<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">WINMEM_MAGIC2<pos:position pos:line="6" pos:column="45"/></name></expr></argument> )<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">( <expr><name><name pos:line="8" pos:column="7">pWinMemData<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">hHeap<pos:position pos:line="8" pos:column="25"/></name></name></expr> )<pos:position pos:line="8" pos:column="27"/></condition><then><block pos:line="8" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">( <argument><expr><name><name pos:line="9" pos:column="13">pWinMemData<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">hHeap<pos:position pos:line="9" pos:column="31"/></name></name><operator pos:line="9" pos:column="31">!=<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">INVALID_HANDLE_VALUE<pos:position pos:line="9" pos:column="53"/></name></expr></argument> )<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><operator pos:line="10" pos:column="5">!<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">SQLITE_OS_WINRT<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">&amp;&amp;<pos:position pos:line="10" pos:column="32"/></operator> <call><name pos:line="10" pos:column="25">defined<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">SQLITE_WIN32_MALLOC_VALIDATE<pos:position pos:line="10" pos:column="61"/></name></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">( <argument><expr><call><name pos:line="11" pos:column="13">osHeapValidate<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name><name pos:line="11" pos:column="28">pWinMemData<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">hHeap<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">SQLITE_WIN32_HEAP_FLAGS<pos:position pos:line="11" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="73">NULL<pos:position pos:line="11" pos:column="77"/></name></expr></argument>)<pos:position pos:line="11" pos:column="78"/></argument_list></call></expr></argument> )<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="81"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">( <expr><name><name pos:line="13" pos:column="9">pWinMemData<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">bOwned<pos:position pos:line="13" pos:column="28"/></name></name></expr> )<pos:position pos:line="13" pos:column="30"/></condition><then><block pos:line="13" pos:column="30">{
      <if pos:line="14" pos:column="7">if<condition pos:line="14" pos:column="9">( <expr><operator pos:line="14" pos:column="11">!<pos:position pos:line="14" pos:column="12"/></operator><call><name pos:line="14" pos:column="12">osHeapDestroy<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name><name pos:line="14" pos:column="26">pWinMemData<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">hHeap<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr> )<pos:position pos:line="14" pos:column="47"/></condition><then><block pos:line="14" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">sqlite3_log<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">SQLITE_NOMEM<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"failed to HeapDestroy (%lu), heap=%p"<pos:position pos:line="15" pos:column="73"/></literal></expr></argument>,
                    <argument><expr><call><name pos:line="16" pos:column="21">osGetLastError<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">()<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="16" pos:column="39">(<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="40">void<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">*<pos:position pos:line="16" pos:column="45"/></operator><operator pos:line="16" pos:column="45">)<pos:position pos:line="16" pos:column="46"/></operator><name><name pos:line="16" pos:column="46">pWinMemData<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">-&gt;<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="59">hHeap<pos:position pos:line="16" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>
      }<pos:position pos:line="17" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">pWinMemData<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">bOwned<pos:position pos:line="18" pos:column="26"/></name></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">FALSE<pos:position pos:line="18" pos:column="34"/></name></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">pWinMemData<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">hHeap<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">NULL<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_163.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">sqlite3Pragma<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Parse<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pParse<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>, 
  <parameter><decl><type><name pos:line="3" pos:column="3">Token<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">pId1<pos:position pos:line="3" pos:column="14"/></name></decl></parameter>,        <comment type="block" pos:line="3" pos:column="23">/* First part of [schema.]id field */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">Token<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">pId2<pos:position pos:line="4" pos:column="14"/></name></decl></parameter>,        <comment type="block" pos:line="4" pos:column="23">/* Second part of [schema.]id field, or NULL */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">Token<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">pValue<pos:position pos:line="5" pos:column="16"/></name></decl></parameter>,      <comment type="block" pos:line="5" pos:column="23">/* Token for &lt;value&gt;, or NULL */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">minusFlag<pos:position pos:line="6" pos:column="16"/></name></decl></parameter>       <comment type="block" pos:line="6" pos:column="23">/* True if a '-' sign preceded &lt;value&gt; */</comment>
)<pos:position pos:line="7" pos:column="2"/></parameter_list><block pos:line="7" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">zLeft<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>       <comment type="block" pos:line="8" pos:column="26">/* Nul-terminated UTF-8 string &lt;id&gt; */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">zRight<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>      <comment type="block" pos:line="9" pos:column="26">/* Nul-terminated UTF-8 string &lt;value&gt;, or NULL */</comment>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">zDb<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><literal type="number" pos:line="10" pos:column="21">0<pos:position pos:line="10" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>   <comment type="block" pos:line="10" pos:column="26">/* The database name */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">Token<pos:position pos:line="11" pos:column="8"/></name> <modifier pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></modifier></type><name pos:line="11" pos:column="10">pId<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>            <comment type="block" pos:line="11" pos:column="26">/* Pointer to &lt;id&gt; token */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name><name pos:line="12" pos:column="9">aFcntl<pos:position pos:line="12" pos:column="15"/></name><index pos:line="12" pos:column="15">[<expr><literal type="number" pos:line="12" pos:column="16">4<pos:position pos:line="12" pos:column="17"/></literal></expr>]<pos:position pos:line="12" pos:column="18"/></index></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>       <comment type="block" pos:line="12" pos:column="26">/* Argument to SQLITE_FCNTL_PRAGMA */</comment>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">iDb<pos:position pos:line="13" pos:column="10"/></name></decl>;<pos:position pos:line="13" pos:column="11"/></decl_stmt>               <comment type="block" pos:line="13" pos:column="26">/* Database index for &lt;database&gt; */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">rc<pos:position pos:line="14" pos:column="9"/></name></decl>;<pos:position pos:line="14" pos:column="10"/></decl_stmt>                      <comment type="block" pos:line="14" pos:column="32">/* return value form SQLITE_FCNTL_PRAGMA */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">sqlite3<pos:position pos:line="15" pos:column="10"/></name> <modifier pos:line="15" pos:column="11">*<pos:position pos:line="15" pos:column="12"/></modifier></type><name pos:line="15" pos:column="12">db<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><name><name pos:line="15" pos:column="17">pParse<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">db<pos:position pos:line="15" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>    <comment type="block" pos:line="15" pos:column="32">/* The database connection */</comment>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">Db<pos:position pos:line="16" pos:column="5"/></name> <modifier pos:line="16" pos:column="6">*<pos:position pos:line="16" pos:column="7"/></modifier></type><name pos:line="16" pos:column="7">pDb<pos:position pos:line="16" pos:column="10"/></name></decl>;<pos:position pos:line="16" pos:column="11"/></decl_stmt>                     <comment type="block" pos:line="16" pos:column="32">/* The specific database being pragmaed */</comment>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">Vdbe<pos:position pos:line="17" pos:column="7"/></name> <modifier pos:line="17" pos:column="8">*<pos:position pos:line="17" pos:column="9"/></modifier></type><name pos:line="17" pos:column="9">v<pos:position pos:line="17" pos:column="10"/></name> <init pos:line="17" pos:column="11">= <expr><call><name pos:line="17" pos:column="13">sqlite3GetVdbe<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">pParse<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="36"/></decl_stmt>  <comment type="block" pos:line="17" pos:column="38">/* Prepared statement */</comment>
  <decl_stmt><decl><type><specifier pos:line="18" pos:column="3">const<pos:position pos:line="18" pos:column="8"/></specifier> <name pos:line="18" pos:column="9">PragmaName<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">pPragma<pos:position pos:line="18" pos:column="28"/></name></decl>;<pos:position pos:line="18" pos:column="29"/></decl_stmt>   <comment type="block" pos:line="18" pos:column="32">/* The pragma */</comment>

  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">( <expr><name pos:line="20" pos:column="7">v<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">==<pos:position pos:line="20" pos:column="10"/></operator><literal type="number" pos:line="20" pos:column="10">0<pos:position pos:line="20" pos:column="11"/></literal></expr> )<pos:position pos:line="20" pos:column="13"/></condition><then pos:line="20" pos:column="13"> <block type="pseudo"><return pos:line="20" pos:column="14">return;<pos:position pos:line="20" pos:column="21"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">sqlite3VdbeRunOnlyOnce<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">v<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">pParse<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">-&gt;<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="11">nMem<pos:position pos:line="22" pos:column="15"/></name></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">2<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>

  <comment type="block" pos:line="24" pos:column="3">/* Interpret the [schema.] part of the pragma statement. iDb is the
  ** index of the database this pragma is being applied to in db.aDb[]. */</comment>
  <expr_stmt><expr><name pos:line="26" pos:column="3">iDb<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <call><name pos:line="26" pos:column="9">sqlite3TwoPartName<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">pParse<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">pId1<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">pId2<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="48">&amp;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="49">pId<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">( <expr><name pos:line="27" pos:column="7">iDb<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">&lt;<pos:position pos:line="27" pos:column="14"/></operator><literal type="number" pos:line="27" pos:column="11">0<pos:position pos:line="27" pos:column="12"/></literal></expr> )<pos:position pos:line="27" pos:column="14"/></condition><then pos:line="27" pos:column="14"> <block type="pseudo"><return pos:line="27" pos:column="15">return;<pos:position pos:line="27" pos:column="22"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="28" pos:column="3">pDb<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <operator pos:line="28" pos:column="9">&amp;<pos:position pos:line="28" pos:column="14"/></operator><name><name pos:line="28" pos:column="10">db<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">aDb<pos:position pos:line="28" pos:column="17"/></name><index pos:line="28" pos:column="17">[<expr><name pos:line="28" pos:column="18">iDb<pos:position pos:line="28" pos:column="21"/></name></expr>]<pos:position pos:line="28" pos:column="22"/></index></name></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="30" pos:column="3">/* If the temp database has been explicitly named as part of the 
  ** pragma, make sure it is open. 
  */</comment>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">( <expr><name pos:line="33" pos:column="7">iDb<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">==<pos:position pos:line="33" pos:column="12"/></operator><literal type="number" pos:line="33" pos:column="12">1<pos:position pos:line="33" pos:column="13"/></literal> <operator pos:line="33" pos:column="14">&amp;&amp;<pos:position pos:line="33" pos:column="24"/></operator> <call><name pos:line="33" pos:column="17">sqlite3OpenTempDatabase<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name pos:line="33" pos:column="41">pParse<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr> )<pos:position pos:line="33" pos:column="50"/></condition><then><block pos:line="33" pos:column="50">{
    <return pos:line="34" pos:column="5">return;<pos:position pos:line="34" pos:column="12"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="37" pos:column="3">zLeft<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <call><name pos:line="37" pos:column="11">sqlite3NameFromToken<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">db<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="36">pId<pos:position pos:line="37" pos:column="39"/></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">( <expr><operator pos:line="38" pos:column="7">!<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">zLeft<pos:position pos:line="38" pos:column="13"/></name></expr> )<pos:position pos:line="38" pos:column="15"/></condition><then pos:line="38" pos:column="15"> <block type="pseudo"><return pos:line="38" pos:column="16">return;<pos:position pos:line="38" pos:column="23"/></return></block></then></if>
  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">( <expr><name pos:line="39" pos:column="7">minusFlag<pos:position pos:line="39" pos:column="16"/></name></expr> )<pos:position pos:line="39" pos:column="18"/></condition><then><block pos:line="39" pos:column="18">{
    <expr_stmt><expr><name pos:line="40" pos:column="5">zRight<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <call><name pos:line="40" pos:column="14">sqlite3MPrintf<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">db<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="33">"-%T"<pos:position pos:line="40" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="40">pValue<pos:position pos:line="40" pos:column="46"/></name></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></then><else pos:line="41" pos:column="4">else<block pos:line="41" pos:column="8">{
    <expr_stmt><expr><name pos:line="42" pos:column="5">zRight<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">sqlite3NameFromToken<pos:position pos:line="42" pos:column="34"/></name><argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">db<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="39">pValue<pos:position pos:line="42" pos:column="45"/></name></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">assert<pos:position pos:line="45" pos:column="9"/></name><argument_list pos:line="45" pos:column="9">( <argument><expr><name pos:line="45" pos:column="11">pId2<pos:position pos:line="45" pos:column="15"/></name></expr></argument> )<pos:position pos:line="45" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="46" pos:column="3">zDb<pos:position pos:line="46" pos:column="6"/></name> <operator pos:line="46" pos:column="7">=<pos:position pos:line="46" pos:column="8"/></operator> <ternary><condition><expr><name><name pos:line="46" pos:column="9">pId2<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">n<pos:position pos:line="46" pos:column="16"/></name></name><operator pos:line="46" pos:column="16">&gt;<pos:position pos:line="46" pos:column="20"/></operator><literal type="number" pos:line="46" pos:column="17">0<pos:position pos:line="46" pos:column="18"/></literal></expr> ?<pos:position pos:line="46" pos:column="20"/></condition><then pos:line="46" pos:column="20"> <expr><name><name pos:line="46" pos:column="21">pDb<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">zDbSName<pos:position pos:line="46" pos:column="34"/></name></name></expr> <pos:position pos:line="46" pos:column="35"/></then><else pos:line="46" pos:column="35">: <expr><literal type="number" pos:line="46" pos:column="37">0<pos:position pos:line="46" pos:column="38"/></literal></expr></else></ternary></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>
  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">( <expr><call><name pos:line="47" pos:column="7">sqlite3AuthCheck<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">pParse<pos:position pos:line="47" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="32">SQLITE_PRAGMA<pos:position pos:line="47" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="47">zLeft<pos:position pos:line="47" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="54">zRight<pos:position pos:line="47" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="62">zDb<pos:position pos:line="47" pos:column="65"/></name></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr> )<pos:position pos:line="47" pos:column="68"/></condition><then><block pos:line="47" pos:column="68">{
    <goto pos:line="48" pos:column="5">goto <name pos:line="48" pos:column="10">pragma_out<pos:position pos:line="48" pos:column="20"/></name>;<pos:position pos:line="48" pos:column="21"/></goto>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="51" pos:column="3">/* Send an SQLITE_FCNTL_PRAGMA file-control to the underlying VFS
  ** connection.  If it returns SQLITE_OK, then assume that the VFS
  ** handled the pragma and generate a no-op prepared statement.
  **
  ** IMPLEMENTATION-OF: R-12238-55120 Whenever a PRAGMA statement is parsed,
  ** an SQLITE_FCNTL_PRAGMA file control is sent to the open sqlite3_file
  ** object corresponding to the database file to which the pragma
  ** statement refers.
  **
  ** IMPLEMENTATION-OF: R-29875-31678 The argument to the SQLITE_FCNTL_PRAGMA
  ** file control is an array of pointers to strings (char**) in which the
  ** second element of the array is the name of the pragma and the third
  ** element is the argument to the pragma or NULL if the pragma has no
  ** argument.
  */</comment>
  <expr_stmt><expr><name><name pos:line="66" pos:column="3">aFcntl<pos:position pos:line="66" pos:column="9"/></name><index pos:line="66" pos:column="9">[<expr><literal type="number" pos:line="66" pos:column="10">0<pos:position pos:line="66" pos:column="11"/></literal></expr>]<pos:position pos:line="66" pos:column="12"/></index></name> <operator pos:line="66" pos:column="13">=<pos:position pos:line="66" pos:column="14"/></operator> <literal type="number" pos:line="66" pos:column="15">0<pos:position pos:line="66" pos:column="16"/></literal></expr>;<pos:position pos:line="66" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="67" pos:column="3">aFcntl<pos:position pos:line="67" pos:column="9"/></name><index pos:line="67" pos:column="9">[<expr><literal type="number" pos:line="67" pos:column="10">1<pos:position pos:line="67" pos:column="11"/></literal></expr>]<pos:position pos:line="67" pos:column="12"/></index></name> <operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator> <name pos:line="67" pos:column="15">zLeft<pos:position pos:line="67" pos:column="20"/></name></expr>;<pos:position pos:line="67" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="68" pos:column="3">aFcntl<pos:position pos:line="68" pos:column="9"/></name><index pos:line="68" pos:column="9">[<expr><literal type="number" pos:line="68" pos:column="10">2<pos:position pos:line="68" pos:column="11"/></literal></expr>]<pos:position pos:line="68" pos:column="12"/></index></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <name pos:line="68" pos:column="15">zRight<pos:position pos:line="68" pos:column="21"/></name></expr>;<pos:position pos:line="68" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="69" pos:column="3">aFcntl<pos:position pos:line="69" pos:column="9"/></name><index pos:line="69" pos:column="9">[<expr><literal type="number" pos:line="69" pos:column="10">3<pos:position pos:line="69" pos:column="11"/></literal></expr>]<pos:position pos:line="69" pos:column="12"/></index></name> <operator pos:line="69" pos:column="13">=<pos:position pos:line="69" pos:column="14"/></operator> <literal type="number" pos:line="69" pos:column="15">0<pos:position pos:line="69" pos:column="16"/></literal></expr>;<pos:position pos:line="69" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="70" pos:column="3">db<pos:position pos:line="70" pos:column="5"/></name><operator pos:line="70" pos:column="5">-&gt;<pos:position pos:line="70" pos:column="10"/></operator><name pos:line="70" pos:column="7">busyHandler<pos:position pos:line="70" pos:column="18"/></name><operator pos:line="70" pos:column="18">.<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="19">nBusy<pos:position pos:line="70" pos:column="24"/></name></name> <operator pos:line="70" pos:column="25">=<pos:position pos:line="70" pos:column="26"/></operator> <literal type="number" pos:line="70" pos:column="27">0<pos:position pos:line="70" pos:column="28"/></literal></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="71" pos:column="3">rc<pos:position pos:line="71" pos:column="5"/></name> <operator pos:line="71" pos:column="6">=<pos:position pos:line="71" pos:column="7"/></operator> <call><name pos:line="71" pos:column="8">sqlite3_file_control<pos:position pos:line="71" pos:column="28"/></name><argument_list pos:line="71" pos:column="28">(<argument><expr><name pos:line="71" pos:column="29">db<pos:position pos:line="71" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="33">zDb<pos:position pos:line="71" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="38">SQLITE_FCNTL_PRAGMA<pos:position pos:line="71" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="59">(<pos:position pos:line="71" pos:column="60"/></operator><name pos:line="71" pos:column="60">void<pos:position pos:line="71" pos:column="64"/></name><operator pos:line="71" pos:column="64">*<pos:position pos:line="71" pos:column="65"/></operator><operator pos:line="71" pos:column="65">)<pos:position pos:line="71" pos:column="66"/></operator><name pos:line="71" pos:column="66">aFcntl<pos:position pos:line="71" pos:column="72"/></name></expr></argument>)<pos:position pos:line="71" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="74"/></expr_stmt>
  <if pos:line="72" pos:column="3">if<condition pos:line="72" pos:column="5">( <expr><name pos:line="72" pos:column="7">rc<pos:position pos:line="72" pos:column="9"/></name><operator pos:line="72" pos:column="9">==<pos:position pos:line="72" pos:column="11"/></operator><name pos:line="72" pos:column="11">SQLITE_OK<pos:position pos:line="72" pos:column="20"/></name></expr> )<pos:position pos:line="72" pos:column="22"/></condition><then><block pos:line="72" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">sqlite3VdbeSetNumCols<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">v<pos:position pos:line="73" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="30">1<pos:position pos:line="73" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">sqlite3VdbeSetColName<pos:position pos:line="74" pos:column="26"/></name><argument_list pos:line="74" pos:column="26">(<argument><expr><name pos:line="74" pos:column="27">v<pos:position pos:line="74" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="30">0<pos:position pos:line="74" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="33">COLNAME_NAME<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="47">aFcntl<pos:position pos:line="74" pos:column="53"/></name><index pos:line="74" pos:column="53">[<expr><literal type="number" pos:line="74" pos:column="54">0<pos:position pos:line="74" pos:column="55"/></literal></expr>]<pos:position pos:line="74" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="58">SQLITE_TRANSIENT<pos:position pos:line="74" pos:column="74"/></name></expr></argument>)<pos:position pos:line="74" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">returnSingleText<pos:position pos:line="75" pos:column="21"/></name><argument_list pos:line="75" pos:column="21">(<argument><expr><name pos:line="75" pos:column="22">v<pos:position pos:line="75" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="25">aFcntl<pos:position pos:line="75" pos:column="31"/></name><index pos:line="75" pos:column="31">[<expr><literal type="number" pos:line="75" pos:column="32">0<pos:position pos:line="75" pos:column="33"/></literal></expr>]<pos:position pos:line="75" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="75" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">sqlite3_free<pos:position pos:line="76" pos:column="17"/></name><argument_list pos:line="76" pos:column="17">(<argument><expr><name><name pos:line="76" pos:column="18">aFcntl<pos:position pos:line="76" pos:column="24"/></name><index pos:line="76" pos:column="24">[<expr><literal type="number" pos:line="76" pos:column="25">0<pos:position pos:line="76" pos:column="26"/></literal></expr>]<pos:position pos:line="76" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="76" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="29"/></expr_stmt>
    <goto pos:line="77" pos:column="5">goto <name pos:line="77" pos:column="10">pragma_out<pos:position pos:line="77" pos:column="20"/></name>;<pos:position pos:line="77" pos:column="21"/></goto>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>
  <if pos:line="79" pos:column="3">if<condition pos:line="79" pos:column="5">( <expr><name pos:line="79" pos:column="7">rc<pos:position pos:line="79" pos:column="9"/></name><operator pos:line="79" pos:column="9">!=<pos:position pos:line="79" pos:column="11"/></operator><name pos:line="79" pos:column="11">SQLITE_NOTFOUND<pos:position pos:line="79" pos:column="26"/></name></expr> )<pos:position pos:line="79" pos:column="28"/></condition><then><block pos:line="79" pos:column="28">{
    <if pos:line="80" pos:column="5">if<condition pos:line="80" pos:column="7">( <expr><name><name pos:line="80" pos:column="9">aFcntl<pos:position pos:line="80" pos:column="15"/></name><index pos:line="80" pos:column="15">[<expr><literal type="number" pos:line="80" pos:column="16">0<pos:position pos:line="80" pos:column="17"/></literal></expr>]<pos:position pos:line="80" pos:column="18"/></index></name></expr> )<pos:position pos:line="80" pos:column="20"/></condition><then><block pos:line="80" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">sqlite3ErrorMsg<pos:position pos:line="81" pos:column="22"/></name><argument_list pos:line="81" pos:column="22">(<argument><expr><name pos:line="81" pos:column="23">pParse<pos:position pos:line="81" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="31">"%s"<pos:position pos:line="81" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="37">aFcntl<pos:position pos:line="81" pos:column="43"/></name><index pos:line="81" pos:column="43">[<expr><literal type="number" pos:line="81" pos:column="44">0<pos:position pos:line="81" pos:column="45"/></literal></expr>]<pos:position pos:line="81" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="81" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">sqlite3_free<pos:position pos:line="82" pos:column="19"/></name><argument_list pos:line="82" pos:column="19">(<argument><expr><name><name pos:line="82" pos:column="20">aFcntl<pos:position pos:line="82" pos:column="26"/></name><index pos:line="82" pos:column="26">[<expr><literal type="number" pos:line="82" pos:column="27">0<pos:position pos:line="82" pos:column="28"/></literal></expr>]<pos:position pos:line="82" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="82" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">pParse<pos:position pos:line="84" pos:column="11"/></name><operator pos:line="84" pos:column="11">-&gt;<pos:position pos:line="84" pos:column="16"/></operator><name pos:line="84" pos:column="13">nErr<pos:position pos:line="84" pos:column="17"/></name></name><operator pos:line="84" pos:column="17">++<pos:position pos:line="84" pos:column="19"/></operator></expr>;<pos:position pos:line="84" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="85" pos:column="5">pParse<pos:position pos:line="85" pos:column="11"/></name><operator pos:line="85" pos:column="11">-&gt;<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="13">rc<pos:position pos:line="85" pos:column="15"/></name></name> <operator pos:line="85" pos:column="16">=<pos:position pos:line="85" pos:column="17"/></operator> <name pos:line="85" pos:column="18">rc<pos:position pos:line="85" pos:column="20"/></name></expr>;<pos:position pos:line="85" pos:column="21"/></expr_stmt>
    <goto pos:line="86" pos:column="5">goto <name pos:line="86" pos:column="10">pragma_out<pos:position pos:line="86" pos:column="20"/></name>;<pos:position pos:line="86" pos:column="21"/></goto>
  }<pos:position pos:line="87" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="89" pos:column="3">/* Locate the pragma in the lookup table */</comment>
  <expr_stmt><expr><name pos:line="90" pos:column="3">pPragma<pos:position pos:line="90" pos:column="10"/></name> <operator pos:line="90" pos:column="11">=<pos:position pos:line="90" pos:column="12"/></operator> <call><name pos:line="90" pos:column="13">pragmaLocate<pos:position pos:line="90" pos:column="25"/></name><argument_list pos:line="90" pos:column="25">(<argument><expr><name pos:line="90" pos:column="26">zLeft<pos:position pos:line="90" pos:column="31"/></name></expr></argument>)<pos:position pos:line="90" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="33"/></expr_stmt>
  <if pos:line="91" pos:column="3">if<condition pos:line="91" pos:column="5">( <expr><name pos:line="91" pos:column="7">pPragma<pos:position pos:line="91" pos:column="14"/></name><operator pos:line="91" pos:column="14">==<pos:position pos:line="91" pos:column="16"/></operator><literal type="number" pos:line="91" pos:column="16">0<pos:position pos:line="91" pos:column="17"/></literal></expr> )<pos:position pos:line="91" pos:column="19"/></condition><then pos:line="91" pos:column="19"> <block type="pseudo"><goto pos:line="91" pos:column="20">goto <name pos:line="91" pos:column="25">pragma_out<pos:position pos:line="91" pos:column="35"/></name>;<pos:position pos:line="91" pos:column="36"/></goto></block></then></if>

  <comment type="block" pos:line="93" pos:column="3">/* Make sure the database schema is loaded if the pragma requires that */</comment>
  <if pos:line="94" pos:column="3">if<condition pos:line="94" pos:column="5">( <expr><operator pos:line="94" pos:column="7">(<pos:position pos:line="94" pos:column="8"/></operator><name><name pos:line="94" pos:column="8">pPragma<pos:position pos:line="94" pos:column="15"/></name><operator pos:line="94" pos:column="15">-&gt;<pos:position pos:line="94" pos:column="20"/></operator><name pos:line="94" pos:column="17">mPragFlg<pos:position pos:line="94" pos:column="25"/></name></name> <operator pos:line="94" pos:column="26">&amp;<pos:position pos:line="94" pos:column="31"/></operator> <name pos:line="94" pos:column="28">PragFlg_NeedSchema<pos:position pos:line="94" pos:column="46"/></name><operator pos:line="94" pos:column="46">)<pos:position pos:line="94" pos:column="47"/></operator><operator pos:line="94" pos:column="47">!=<pos:position pos:line="94" pos:column="49"/></operator><literal type="number" pos:line="94" pos:column="49">0<pos:position pos:line="94" pos:column="50"/></literal></expr> )<pos:position pos:line="94" pos:column="52"/></condition><then><block pos:line="94" pos:column="52">{
    <if pos:line="95" pos:column="5">if<condition pos:line="95" pos:column="7">( <expr><call><name pos:line="95" pos:column="9">sqlite3ReadSchema<pos:position pos:line="95" pos:column="26"/></name><argument_list pos:line="95" pos:column="26">(<argument><expr><name pos:line="95" pos:column="27">pParse<pos:position pos:line="95" pos:column="33"/></name></expr></argument>)<pos:position pos:line="95" pos:column="34"/></argument_list></call></expr> )<pos:position pos:line="95" pos:column="36"/></condition><then pos:line="95" pos:column="36"> <block type="pseudo"><goto pos:line="95" pos:column="37">goto <name pos:line="95" pos:column="42">pragma_out<pos:position pos:line="95" pos:column="52"/></name>;<pos:position pos:line="95" pos:column="53"/></goto></block></then></if>
  }<pos:position pos:line="96" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="98" pos:column="3">/* Register the result column names for pragmas that return results */</comment>
  <if pos:line="99" pos:column="3">if<condition pos:line="99" pos:column="5">( <expr><operator pos:line="99" pos:column="7">(<pos:position pos:line="99" pos:column="8"/></operator><name><name pos:line="99" pos:column="8">pPragma<pos:position pos:line="99" pos:column="15"/></name><operator pos:line="99" pos:column="15">-&gt;<pos:position pos:line="99" pos:column="20"/></operator><name pos:line="99" pos:column="17">mPragFlg<pos:position pos:line="99" pos:column="25"/></name></name> <operator pos:line="99" pos:column="26">&amp;<pos:position pos:line="99" pos:column="31"/></operator> <name pos:line="99" pos:column="28">PragFlg_NoColumns<pos:position pos:line="99" pos:column="45"/></name><operator pos:line="99" pos:column="45">)<pos:position pos:line="99" pos:column="46"/></operator><operator pos:line="99" pos:column="46">==<pos:position pos:line="99" pos:column="48"/></operator><literal type="number" pos:line="99" pos:column="48">0<pos:position pos:line="99" pos:column="49"/></literal> 
   <operator pos:line="100" pos:column="4">&amp;&amp;<pos:position pos:line="100" pos:column="14"/></operator> <operator pos:line="100" pos:column="7">(<pos:position pos:line="100" pos:column="8"/></operator><operator pos:line="100" pos:column="8">(<pos:position pos:line="100" pos:column="9"/></operator><name><name pos:line="100" pos:column="9">pPragma<pos:position pos:line="100" pos:column="16"/></name><operator pos:line="100" pos:column="16">-&gt;<pos:position pos:line="100" pos:column="21"/></operator><name pos:line="100" pos:column="18">mPragFlg<pos:position pos:line="100" pos:column="26"/></name></name> <operator pos:line="100" pos:column="27">&amp;<pos:position pos:line="100" pos:column="32"/></operator> <name pos:line="100" pos:column="29">PragFlg_NoColumns1<pos:position pos:line="100" pos:column="47"/></name><operator pos:line="100" pos:column="47">)<pos:position pos:line="100" pos:column="48"/></operator><operator pos:line="100" pos:column="48">==<pos:position pos:line="100" pos:column="50"/></operator><literal type="number" pos:line="100" pos:column="50">0<pos:position pos:line="100" pos:column="51"/></literal> <operator pos:line="100" pos:column="52">||<pos:position pos:line="100" pos:column="54"/></operator> <name pos:line="100" pos:column="55">zRight<pos:position pos:line="100" pos:column="61"/></name><operator pos:line="100" pos:column="61">==<pos:position pos:line="100" pos:column="63"/></operator><literal type="number" pos:line="100" pos:column="63">0<pos:position pos:line="100" pos:column="64"/></literal><operator pos:line="100" pos:column="64">)<pos:position pos:line="100" pos:column="65"/></operator></expr>
  )<pos:position pos:line="101" pos:column="4"/></condition><then><block pos:line="101" pos:column="4">{
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">setPragmaResultColumnNames<pos:position pos:line="102" pos:column="31"/></name><argument_list pos:line="102" pos:column="31">(<argument><expr><name pos:line="102" pos:column="32">v<pos:position pos:line="102" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="35">pPragma<pos:position pos:line="102" pos:column="42"/></name></expr></argument>)<pos:position pos:line="102" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="103" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="105" pos:column="3">/* Jump to the appropriate pragma handler */</comment>
  <switch pos:line="106" pos:column="3">switch<condition pos:line="106" pos:column="9">( <expr><name><name pos:line="106" pos:column="11">pPragma<pos:position pos:line="106" pos:column="18"/></name><operator pos:line="106" pos:column="18">-&gt;<pos:position pos:line="106" pos:column="23"/></operator><name pos:line="106" pos:column="20">ePragTyp<pos:position pos:line="106" pos:column="28"/></name></name></expr> )<pos:position pos:line="106" pos:column="30"/></condition><block pos:line="106" pos:column="30">{
  
<cpp:if pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">if<pos:position pos:line="108" pos:column="4"/></cpp:directive> <expr><operator pos:line="108" pos:column="5">!<pos:position pos:line="108" pos:column="6"/></operator><call><name pos:line="108" pos:column="6">defined<pos:position pos:line="108" pos:column="13"/></name><argument_list pos:line="108" pos:column="13">(<argument><expr><name pos:line="108" pos:column="14">SQLITE_OMIT_PAGER_PRAGMAS<pos:position pos:line="108" pos:column="39"/></name></expr></argument>)<pos:position pos:line="108" pos:column="40"/></argument_list></call> <operator pos:line="108" pos:column="41">&amp;&amp;<pos:position pos:line="108" pos:column="51"/></operator> <operator pos:line="108" pos:column="44">!<pos:position pos:line="108" pos:column="45"/></operator><call><name pos:line="108" pos:column="45">defined<pos:position pos:line="108" pos:column="52"/></name><argument_list pos:line="108" pos:column="52">(<argument><expr><name pos:line="108" pos:column="53">SQLITE_OMIT_DEPRECATED<pos:position pos:line="108" pos:column="75"/></name></expr></argument>)<pos:position pos:line="108" pos:column="76"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="109" pos:column="3">/*
  **  PRAGMA [schema.]default_cache_size
  **  PRAGMA [schema.]default_cache_size=N
  **
  ** The first form reports the current persistent setting for the
  ** page cache size.  The value returned is the maximum number of
  ** pages in the page cache.  The second form sets both the current
  ** page cache size value and the persistent page cache size value
  ** stored in the database file.
  **
  ** Older versions of SQLite would set the default cache size to a
  ** negative number to indicate synchronous=OFF.  These days, synchronous
  ** is always on by default regardless of the sign of the default cache
  ** size.  But continue to take the absolute value of the default cache
  ** size of historical compatibility.
  */</comment>
  <case pos:line="125" pos:column="3">case <expr><name pos:line="125" pos:column="8">PragTyp_DEFAULT_CACHE_SIZE<pos:position pos:line="125" pos:column="34"/></name></expr>:<pos:position pos:line="125" pos:column="35"/></case> <block pos:line="125" pos:column="36">{
    <decl_stmt><decl><specifier pos:line="126" pos:column="5">static<pos:position pos:line="126" pos:column="11"/></specifier> <type><specifier pos:line="126" pos:column="12">const<pos:position pos:line="126" pos:column="17"/></specifier> <name pos:line="126" pos:column="18">int<pos:position pos:line="126" pos:column="21"/></name></type> <name pos:line="126" pos:column="22">iLn<pos:position pos:line="126" pos:column="25"/></name> <init pos:line="126" pos:column="26">= <expr><call><name pos:line="126" pos:column="28">VDBE_OFFSET_LINENO<pos:position pos:line="126" pos:column="46"/></name><argument_list pos:line="126" pos:column="46">(<argument><expr><literal type="number" pos:line="126" pos:column="47">2<pos:position pos:line="126" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="126" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="127" pos:column="5">static<pos:position pos:line="127" pos:column="11"/></specifier> <type><specifier pos:line="127" pos:column="12">const<pos:position pos:line="127" pos:column="17"/></specifier> <name pos:line="127" pos:column="18">VdbeOpList<pos:position pos:line="127" pos:column="28"/></name></type> <name><name pos:line="127" pos:column="29">getCacheSize<pos:position pos:line="127" pos:column="41"/></name><index pos:line="127" pos:column="41">[]<pos:position pos:line="127" pos:column="43"/></index></name> <init pos:line="127" pos:column="44">= <expr><block pos:line="127" pos:column="46">{
      <expr><block pos:line="128" pos:column="7">{ <expr><name pos:line="128" pos:column="9">OP_Transaction<pos:position pos:line="128" pos:column="23"/></name></expr>, <expr><literal type="number" pos:line="128" pos:column="25">0<pos:position pos:line="128" pos:column="26"/></literal></expr>, <expr><literal type="number" pos:line="128" pos:column="28">0<pos:position pos:line="128" pos:column="29"/></literal></expr>,        <expr><literal type="number" pos:line="128" pos:column="38">0<pos:position pos:line="128" pos:column="39"/></literal></expr>}<pos:position pos:line="128" pos:column="40"/></block></expr>,                         <comment type="block" pos:line="128" pos:column="66">/* 0 */</comment>
      <expr><block pos:line="129" pos:column="7">{ <expr><name pos:line="129" pos:column="9">OP_ReadCookie<pos:position pos:line="129" pos:column="22"/></name></expr>,  <expr><literal type="number" pos:line="129" pos:column="25">0<pos:position pos:line="129" pos:column="26"/></literal></expr>, <expr><literal type="number" pos:line="129" pos:column="28">1<pos:position pos:line="129" pos:column="29"/></literal></expr>,        <expr><name pos:line="129" pos:column="38">BTREE_DEFAULT_CACHE_SIZE<pos:position pos:line="129" pos:column="62"/></name></expr>}<pos:position pos:line="129" pos:column="63"/></block></expr>,  <comment type="block" pos:line="129" pos:column="66">/* 1 */</comment>
      <expr><block pos:line="130" pos:column="7">{ <expr><name pos:line="130" pos:column="9">OP_IfPos<pos:position pos:line="130" pos:column="17"/></name></expr>,       <expr><literal type="number" pos:line="130" pos:column="25">1<pos:position pos:line="130" pos:column="26"/></literal></expr>, <expr><literal type="number" pos:line="130" pos:column="28">8<pos:position pos:line="130" pos:column="29"/></literal></expr>,        <expr><literal type="number" pos:line="130" pos:column="38">0<pos:position pos:line="130" pos:column="39"/></literal></expr>}<pos:position pos:line="130" pos:column="40"/></block></expr>,
      <expr><block pos:line="131" pos:column="7">{ <expr><name pos:line="131" pos:column="9">OP_Integer<pos:position pos:line="131" pos:column="19"/></name></expr>,     <expr><literal type="number" pos:line="131" pos:column="25">0<pos:position pos:line="131" pos:column="26"/></literal></expr>, <expr><literal type="number" pos:line="131" pos:column="28">2<pos:position pos:line="131" pos:column="29"/></literal></expr>,        <expr><literal type="number" pos:line="131" pos:column="38">0<pos:position pos:line="131" pos:column="39"/></literal></expr>}<pos:position pos:line="131" pos:column="40"/></block></expr>,
      <expr><block pos:line="132" pos:column="7">{ <expr><name pos:line="132" pos:column="9">OP_Subtract<pos:position pos:line="132" pos:column="20"/></name></expr>,    <expr><literal type="number" pos:line="132" pos:column="25">1<pos:position pos:line="132" pos:column="26"/></literal></expr>, <expr><literal type="number" pos:line="132" pos:column="28">2<pos:position pos:line="132" pos:column="29"/></literal></expr>,        <expr><literal type="number" pos:line="132" pos:column="38">1<pos:position pos:line="132" pos:column="39"/></literal></expr>}<pos:position pos:line="132" pos:column="40"/></block></expr>,
      <expr><block pos:line="133" pos:column="7">{ <expr><name pos:line="133" pos:column="9">OP_IfPos<pos:position pos:line="133" pos:column="17"/></name></expr>,       <expr><literal type="number" pos:line="133" pos:column="25">1<pos:position pos:line="133" pos:column="26"/></literal></expr>, <expr><literal type="number" pos:line="133" pos:column="28">8<pos:position pos:line="133" pos:column="29"/></literal></expr>,        <expr><literal type="number" pos:line="133" pos:column="38">0<pos:position pos:line="133" pos:column="39"/></literal></expr>}<pos:position pos:line="133" pos:column="40"/></block></expr>,
      <expr><block pos:line="134" pos:column="7">{ <expr><name pos:line="134" pos:column="9">OP_Integer<pos:position pos:line="134" pos:column="19"/></name></expr>,     <expr><literal type="number" pos:line="134" pos:column="25">0<pos:position pos:line="134" pos:column="26"/></literal></expr>, <expr><literal type="number" pos:line="134" pos:column="28">1<pos:position pos:line="134" pos:column="29"/></literal></expr>,        <expr><literal type="number" pos:line="134" pos:column="38">0<pos:position pos:line="134" pos:column="39"/></literal></expr>}<pos:position pos:line="134" pos:column="40"/></block></expr>,                         <comment type="block" pos:line="134" pos:column="66">/* 6 */</comment>
      <expr><block pos:line="135" pos:column="7">{ <expr><name pos:line="135" pos:column="9">OP_Noop<pos:position pos:line="135" pos:column="16"/></name></expr>,        <expr><literal type="number" pos:line="135" pos:column="25">0<pos:position pos:line="135" pos:column="26"/></literal></expr>, <expr><literal type="number" pos:line="135" pos:column="28">0<pos:position pos:line="135" pos:column="29"/></literal></expr>,        <expr><literal type="number" pos:line="135" pos:column="38">0<pos:position pos:line="135" pos:column="39"/></literal></expr>}<pos:position pos:line="135" pos:column="40"/></block></expr>,
      <expr><block pos:line="136" pos:column="7">{ <expr><name pos:line="136" pos:column="9">OP_ResultRow<pos:position pos:line="136" pos:column="21"/></name></expr>,   <expr><literal type="number" pos:line="136" pos:column="25">1<pos:position pos:line="136" pos:column="26"/></literal></expr>, <expr><literal type="number" pos:line="136" pos:column="28">1<pos:position pos:line="136" pos:column="29"/></literal></expr>,        <expr><literal type="number" pos:line="136" pos:column="38">0<pos:position pos:line="136" pos:column="39"/></literal></expr>}<pos:position pos:line="136" pos:column="40"/></block></expr>,
    }<pos:position pos:line="137" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="137" pos:column="7"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="138" pos:column="5">VdbeOp<pos:position pos:line="138" pos:column="11"/></name> <modifier pos:line="138" pos:column="12">*<pos:position pos:line="138" pos:column="13"/></modifier></type><name pos:line="138" pos:column="13">aOp<pos:position pos:line="138" pos:column="16"/></name></decl>;<pos:position pos:line="138" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="139" pos:column="5">sqlite3VdbeUsesBtree<pos:position pos:line="139" pos:column="25"/></name><argument_list pos:line="139" pos:column="25">(<argument><expr><name pos:line="139" pos:column="26">v<pos:position pos:line="139" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="29">iDb<pos:position pos:line="139" pos:column="32"/></name></expr></argument>)<pos:position pos:line="139" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="34"/></expr_stmt>
    <if pos:line="140" pos:column="5">if<condition pos:line="140" pos:column="7">( <expr><operator pos:line="140" pos:column="9">!<pos:position pos:line="140" pos:column="10"/></operator><name pos:line="140" pos:column="10">zRight<pos:position pos:line="140" pos:column="16"/></name></expr> )<pos:position pos:line="140" pos:column="18"/></condition><then><block pos:line="140" pos:column="18">{
      <expr_stmt><expr><name><name pos:line="141" pos:column="7">pParse<pos:position pos:line="141" pos:column="13"/></name><operator pos:line="141" pos:column="13">-&gt;<pos:position pos:line="141" pos:column="18"/></operator><name pos:line="141" pos:column="15">nMem<pos:position pos:line="141" pos:column="19"/></name></name> <operator pos:line="141" pos:column="20">+=<pos:position pos:line="141" pos:column="22"/></operator> <literal type="number" pos:line="141" pos:column="23">2<pos:position pos:line="141" pos:column="24"/></literal></expr>;<pos:position pos:line="141" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="142" pos:column="7">sqlite3VdbeVerifyNoMallocRequired<pos:position pos:line="142" pos:column="40"/></name><argument_list pos:line="142" pos:column="40">(<argument><expr><name pos:line="142" pos:column="41">v<pos:position pos:line="142" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="142" pos:column="44">ArraySize<pos:position pos:line="142" pos:column="53"/></name><argument_list pos:line="142" pos:column="53">(<argument><expr><name pos:line="142" pos:column="54">getCacheSize<pos:position pos:line="142" pos:column="66"/></name></expr></argument>)<pos:position pos:line="142" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="142" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><name pos:line="143" pos:column="7">aOp<pos:position pos:line="143" pos:column="10"/></name> <operator pos:line="143" pos:column="11">=<pos:position pos:line="143" pos:column="12"/></operator> <call><name pos:line="143" pos:column="13">sqlite3VdbeAddOpList<pos:position pos:line="143" pos:column="33"/></name><argument_list pos:line="143" pos:column="33">(<argument><expr><name pos:line="143" pos:column="34">v<pos:position pos:line="143" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="143" pos:column="37">ArraySize<pos:position pos:line="143" pos:column="46"/></name><argument_list pos:line="143" pos:column="46">(<argument><expr><name pos:line="143" pos:column="47">getCacheSize<pos:position pos:line="143" pos:column="59"/></name></expr></argument>)<pos:position pos:line="143" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="143" pos:column="62">getCacheSize<pos:position pos:line="143" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="76">iLn<pos:position pos:line="143" pos:column="79"/></name></expr></argument>)<pos:position pos:line="143" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="81"/></expr_stmt>
      <if pos:line="144" pos:column="7">if<condition pos:line="144" pos:column="9">( <expr><call><name pos:line="144" pos:column="11">ONLY_IF_REALLOC_STRESS<pos:position pos:line="144" pos:column="33"/></name><argument_list pos:line="144" pos:column="33">(<argument><expr><name pos:line="144" pos:column="34">aOp<pos:position pos:line="144" pos:column="37"/></name><operator pos:line="144" pos:column="37">==<pos:position pos:line="144" pos:column="39"/></operator><literal type="number" pos:line="144" pos:column="39">0<pos:position pos:line="144" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="41"/></argument_list></call></expr> )<pos:position pos:line="144" pos:column="43"/></condition><then pos:line="144" pos:column="43"> <block type="pseudo"><break pos:line="144" pos:column="44">break;<pos:position pos:line="144" pos:column="50"/></break></block></then></if>
      <expr_stmt><expr><name><name pos:line="145" pos:column="7">aOp<pos:position pos:line="145" pos:column="10"/></name><index pos:line="145" pos:column="10">[<expr><literal type="number" pos:line="145" pos:column="11">0<pos:position pos:line="145" pos:column="12"/></literal></expr>]<pos:position pos:line="145" pos:column="13"/></index></name><operator pos:line="145" pos:column="13">.<pos:position pos:line="145" pos:column="14"/></operator><name pos:line="145" pos:column="14">p1<pos:position pos:line="145" pos:column="16"/></name> <operator pos:line="145" pos:column="17">=<pos:position pos:line="145" pos:column="18"/></operator> <name pos:line="145" pos:column="19">iDb<pos:position pos:line="145" pos:column="22"/></name></expr>;<pos:position pos:line="145" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="146" pos:column="7">aOp<pos:position pos:line="146" pos:column="10"/></name><index pos:line="146" pos:column="10">[<expr><literal type="number" pos:line="146" pos:column="11">1<pos:position pos:line="146" pos:column="12"/></literal></expr>]<pos:position pos:line="146" pos:column="13"/></index></name><operator pos:line="146" pos:column="13">.<pos:position pos:line="146" pos:column="14"/></operator><name pos:line="146" pos:column="14">p1<pos:position pos:line="146" pos:column="16"/></name> <operator pos:line="146" pos:column="17">=<pos:position pos:line="146" pos:column="18"/></operator> <name pos:line="146" pos:column="19">iDb<pos:position pos:line="146" pos:column="22"/></name></expr>;<pos:position pos:line="146" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="147" pos:column="7">aOp<pos:position pos:line="147" pos:column="10"/></name><index pos:line="147" pos:column="10">[<expr><literal type="number" pos:line="147" pos:column="11">6<pos:position pos:line="147" pos:column="12"/></literal></expr>]<pos:position pos:line="147" pos:column="13"/></index></name><operator pos:line="147" pos:column="13">.<pos:position pos:line="147" pos:column="14"/></operator><name pos:line="147" pos:column="14">p1<pos:position pos:line="147" pos:column="16"/></name> <operator pos:line="147" pos:column="17">=<pos:position pos:line="147" pos:column="18"/></operator> <name pos:line="147" pos:column="19">SQLITE_DEFAULT_CACHE_SIZE<pos:position pos:line="147" pos:column="44"/></name></expr>;<pos:position pos:line="147" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="148" pos:column="6"/></block></then><else pos:line="148" pos:column="6">else<block pos:line="148" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="149" pos:column="7">int<pos:position pos:line="149" pos:column="10"/></name></type> <name pos:line="149" pos:column="11">size<pos:position pos:line="149" pos:column="15"/></name> <init pos:line="149" pos:column="16">= <expr><call><name pos:line="149" pos:column="18">sqlite3AbsInt32<pos:position pos:line="149" pos:column="33"/></name><argument_list pos:line="149" pos:column="33">(<argument><expr><call><name pos:line="149" pos:column="34">sqlite3Atoi<pos:position pos:line="149" pos:column="45"/></name><argument_list pos:line="149" pos:column="45">(<argument><expr><name pos:line="149" pos:column="46">zRight<pos:position pos:line="149" pos:column="52"/></name></expr></argument>)<pos:position pos:line="149" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="149" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="149" pos:column="55"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="150" pos:column="7">sqlite3BeginWriteOperation<pos:position pos:line="150" pos:column="33"/></name><argument_list pos:line="150" pos:column="33">(<argument><expr><name pos:line="150" pos:column="34">pParse<pos:position pos:line="150" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="150" pos:column="42">0<pos:position pos:line="150" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="150" pos:column="45">iDb<pos:position pos:line="150" pos:column="48"/></name></expr></argument>)<pos:position pos:line="150" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="151" pos:column="7">sqlite3VdbeAddOp3<pos:position pos:line="151" pos:column="24"/></name><argument_list pos:line="151" pos:column="24">(<argument><expr><name pos:line="151" pos:column="25">v<pos:position pos:line="151" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="28">OP_SetCookie<pos:position pos:line="151" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="42">iDb<pos:position pos:line="151" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="47">BTREE_DEFAULT_CACHE_SIZE<pos:position pos:line="151" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="73">size<pos:position pos:line="151" pos:column="77"/></name></expr></argument>)<pos:position pos:line="151" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="152" pos:column="7">assert<pos:position pos:line="152" pos:column="13"/></name><argument_list pos:line="152" pos:column="13">( <argument><expr><call><name pos:line="152" pos:column="15">sqlite3SchemaMutexHeld<pos:position pos:line="152" pos:column="37"/></name><argument_list pos:line="152" pos:column="37">(<argument><expr><name pos:line="152" pos:column="38">db<pos:position pos:line="152" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="42">iDb<pos:position pos:line="152" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="152" pos:column="47">0<pos:position pos:line="152" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="49"/></argument_list></call></expr></argument> )<pos:position pos:line="152" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="153" pos:column="7">pDb<pos:position pos:line="153" pos:column="10"/></name><operator pos:line="153" pos:column="10">-&gt;<pos:position pos:line="153" pos:column="15"/></operator><name pos:line="153" pos:column="12">pSchema<pos:position pos:line="153" pos:column="19"/></name><operator pos:line="153" pos:column="19">-&gt;<pos:position pos:line="153" pos:column="24"/></operator><name pos:line="153" pos:column="21">cache_size<pos:position pos:line="153" pos:column="31"/></name></name> <operator pos:line="153" pos:column="32">=<pos:position pos:line="153" pos:column="33"/></operator> <name pos:line="153" pos:column="34">size<pos:position pos:line="153" pos:column="38"/></name></expr>;<pos:position pos:line="153" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="154" pos:column="7">sqlite3BtreeSetCacheSize<pos:position pos:line="154" pos:column="31"/></name><argument_list pos:line="154" pos:column="31">(<argument><expr><name><name pos:line="154" pos:column="32">pDb<pos:position pos:line="154" pos:column="35"/></name><operator pos:line="154" pos:column="35">-&gt;<pos:position pos:line="154" pos:column="40"/></operator><name pos:line="154" pos:column="37">pBt<pos:position pos:line="154" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="42">pDb<pos:position pos:line="154" pos:column="45"/></name><operator pos:line="154" pos:column="45">-&gt;<pos:position pos:line="154" pos:column="50"/></operator><name pos:line="154" pos:column="47">pSchema<pos:position pos:line="154" pos:column="54"/></name><operator pos:line="154" pos:column="54">-&gt;<pos:position pos:line="154" pos:column="59"/></operator><name pos:line="154" pos:column="56">cache_size<pos:position pos:line="154" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="154" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="155" pos:column="6"/></block></else></if>
    <break pos:line="156" pos:column="5">break;<pos:position pos:line="156" pos:column="11"/></break>
  }<pos:position pos:line="157" pos:column="4"/></block>
<cpp:endif pos:line="158" pos:column="1">#<cpp:directive pos:line="158" pos:column="2">endif<pos:position pos:line="158" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="158" pos:column="8">/* !SQLITE_OMIT_PAGER_PRAGMAS &amp;&amp; !SQLITE_OMIT_DEPRECATED */</comment>

<cpp:if pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">if<pos:position pos:line="160" pos:column="4"/></cpp:directive> <expr><operator pos:line="160" pos:column="5">!<pos:position pos:line="160" pos:column="6"/></operator><call><name pos:line="160" pos:column="6">defined<pos:position pos:line="160" pos:column="13"/></name><argument_list pos:line="160" pos:column="13">(<argument><expr><name pos:line="160" pos:column="14">SQLITE_OMIT_PAGER_PRAGMAS<pos:position pos:line="160" pos:column="39"/></name></expr></argument>)<pos:position pos:line="160" pos:column="40"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="161" pos:column="3">/*
  **  PRAGMA [schema.]page_size
  **  PRAGMA [schema.]page_size=N
  **
  ** The first form reports the current setting for the
  ** database page size in bytes.  The second form sets the
  ** database page size value.  The value can only be set if
  ** the database has not yet been created.
  */</comment>
  <case pos:line="170" pos:column="3">case <expr><name pos:line="170" pos:column="8">PragTyp_PAGE_SIZE<pos:position pos:line="170" pos:column="25"/></name></expr>:<pos:position pos:line="170" pos:column="26"/></case> <block pos:line="170" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="171" pos:column="5">Btree<pos:position pos:line="171" pos:column="10"/></name> <modifier pos:line="171" pos:column="11">*<pos:position pos:line="171" pos:column="12"/></modifier></type><name pos:line="171" pos:column="12">pBt<pos:position pos:line="171" pos:column="15"/></name> <init pos:line="171" pos:column="16">= <expr><name><name pos:line="171" pos:column="18">pDb<pos:position pos:line="171" pos:column="21"/></name><operator pos:line="171" pos:column="21">-&gt;<pos:position pos:line="171" pos:column="26"/></operator><name pos:line="171" pos:column="23">pBt<pos:position pos:line="171" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="171" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="172" pos:column="5">assert<pos:position pos:line="172" pos:column="11"/></name><argument_list pos:line="172" pos:column="11">( <argument><expr><name pos:line="172" pos:column="13">pBt<pos:position pos:line="172" pos:column="16"/></name><operator pos:line="172" pos:column="16">!=<pos:position pos:line="172" pos:column="18"/></operator><literal type="number" pos:line="172" pos:column="18">0<pos:position pos:line="172" pos:column="19"/></literal></expr></argument> )<pos:position pos:line="172" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="22"/></expr_stmt>
    <if pos:line="173" pos:column="5">if<condition pos:line="173" pos:column="7">( <expr><operator pos:line="173" pos:column="9">!<pos:position pos:line="173" pos:column="10"/></operator><name pos:line="173" pos:column="10">zRight<pos:position pos:line="173" pos:column="16"/></name></expr> )<pos:position pos:line="173" pos:column="18"/></condition><then><block pos:line="173" pos:column="18">{
      <decl_stmt><decl><type><name pos:line="174" pos:column="7">int<pos:position pos:line="174" pos:column="10"/></name></type> <name pos:line="174" pos:column="11">size<pos:position pos:line="174" pos:column="15"/></name> <init pos:line="174" pos:column="16">= <expr><ternary><condition><expr><call><name pos:line="174" pos:column="18">ALWAYS<pos:position pos:line="174" pos:column="24"/></name><argument_list pos:line="174" pos:column="24">(<argument><expr><name pos:line="174" pos:column="25">pBt<pos:position pos:line="174" pos:column="28"/></name></expr></argument>)<pos:position pos:line="174" pos:column="29"/></argument_list></call></expr> ?<pos:position pos:line="174" pos:column="31"/></condition><then pos:line="174" pos:column="31"> <expr><call><name pos:line="174" pos:column="32">sqlite3BtreeGetPageSize<pos:position pos:line="174" pos:column="55"/></name><argument_list pos:line="174" pos:column="55">(<argument><expr><name pos:line="174" pos:column="56">pBt<pos:position pos:line="174" pos:column="59"/></name></expr></argument>)<pos:position pos:line="174" pos:column="60"/></argument_list></call></expr> <pos:position pos:line="174" pos:column="61"/></then><else pos:line="174" pos:column="61">: <expr><literal type="number" pos:line="174" pos:column="63">0<pos:position pos:line="174" pos:column="64"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="174" pos:column="65"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="175" pos:column="7">returnSingleInt<pos:position pos:line="175" pos:column="22"/></name><argument_list pos:line="175" pos:column="22">(<argument><expr><name pos:line="175" pos:column="23">v<pos:position pos:line="175" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="26">size<pos:position pos:line="175" pos:column="30"/></name></expr></argument>)<pos:position pos:line="175" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="176" pos:column="6"/></block></then><else pos:line="176" pos:column="6">else<block pos:line="176" pos:column="10">{
      <comment type="block" pos:line="177" pos:column="7">/* Malloc may fail when setting the page-size, as there is an internal
      ** buffer that the pager module resizes using sqlite3_realloc().
      */</comment>
      <expr_stmt><expr><name><name pos:line="180" pos:column="7">db<pos:position pos:line="180" pos:column="9"/></name><operator pos:line="180" pos:column="9">-&gt;<pos:position pos:line="180" pos:column="14"/></operator><name pos:line="180" pos:column="11">nextPagesize<pos:position pos:line="180" pos:column="23"/></name></name> <operator pos:line="180" pos:column="24">=<pos:position pos:line="180" pos:column="25"/></operator> <call><name pos:line="180" pos:column="26">sqlite3Atoi<pos:position pos:line="180" pos:column="37"/></name><argument_list pos:line="180" pos:column="37">(<argument><expr><name pos:line="180" pos:column="38">zRight<pos:position pos:line="180" pos:column="44"/></name></expr></argument>)<pos:position pos:line="180" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="46"/></expr_stmt>
      <if pos:line="181" pos:column="7">if<condition pos:line="181" pos:column="9">( <expr><name pos:line="181" pos:column="11">SQLITE_NOMEM<pos:position pos:line="181" pos:column="23"/></name><operator pos:line="181" pos:column="23">==<pos:position pos:line="181" pos:column="25"/></operator><call><name pos:line="181" pos:column="25">sqlite3BtreeSetPageSize<pos:position pos:line="181" pos:column="48"/></name><argument_list pos:line="181" pos:column="48">(<argument><expr><name pos:line="181" pos:column="49">pBt<pos:position pos:line="181" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="181" pos:column="54">db<pos:position pos:line="181" pos:column="56"/></name><operator pos:line="181" pos:column="56">-&gt;<pos:position pos:line="181" pos:column="61"/></operator><name pos:line="181" pos:column="58">nextPagesize<pos:position pos:line="181" pos:column="70"/></name></name></expr></argument>,<argument><expr><operator pos:line="181" pos:column="71">-<pos:position pos:line="181" pos:column="72"/></operator><literal type="number" pos:line="181" pos:column="72">1<pos:position pos:line="181" pos:column="73"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="181" pos:column="74">0<pos:position pos:line="181" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="76"/></argument_list></call></expr> )<pos:position pos:line="181" pos:column="78"/></condition><then><block pos:line="181" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="182" pos:column="9">sqlite3OomFault<pos:position pos:line="182" pos:column="24"/></name><argument_list pos:line="182" pos:column="24">(<argument><expr><name pos:line="182" pos:column="25">db<pos:position pos:line="182" pos:column="27"/></name></expr></argument>)<pos:position pos:line="182" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="29"/></expr_stmt>
      }<pos:position pos:line="183" pos:column="8"/></block></then></if>
    }<pos:position pos:line="184" pos:column="6"/></block></else></if>
    <break pos:line="185" pos:column="5">break;<pos:position pos:line="185" pos:column="11"/></break>
  }<pos:position pos:line="186" pos:column="4"/></block>

  <comment type="block" pos:line="188" pos:column="3">/*
  **  PRAGMA [schema.]secure_delete
  **  PRAGMA [schema.]secure_delete=ON/OFF/FAST
  **
  ** The first form reports the current setting for the
  ** secure_delete flag.  The second form changes the secure_delete
  ** flag setting and reports the new value.
  */</comment>
  <case pos:line="196" pos:column="3">case <expr><name pos:line="196" pos:column="8">PragTyp_SECURE_DELETE<pos:position pos:line="196" pos:column="29"/></name></expr>:<pos:position pos:line="196" pos:column="30"/></case> <block pos:line="196" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="197" pos:column="5">Btree<pos:position pos:line="197" pos:column="10"/></name> <modifier pos:line="197" pos:column="11">*<pos:position pos:line="197" pos:column="12"/></modifier></type><name pos:line="197" pos:column="12">pBt<pos:position pos:line="197" pos:column="15"/></name> <init pos:line="197" pos:column="16">= <expr><name><name pos:line="197" pos:column="18">pDb<pos:position pos:line="197" pos:column="21"/></name><operator pos:line="197" pos:column="21">-&gt;<pos:position pos:line="197" pos:column="26"/></operator><name pos:line="197" pos:column="23">pBt<pos:position pos:line="197" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="197" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="198" pos:column="5">int<pos:position pos:line="198" pos:column="8"/></name></type> <name pos:line="198" pos:column="9">b<pos:position pos:line="198" pos:column="10"/></name> <init pos:line="198" pos:column="11">= <expr><operator pos:line="198" pos:column="13">-<pos:position pos:line="198" pos:column="14"/></operator><literal type="number" pos:line="198" pos:column="14">1<pos:position pos:line="198" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="198" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="199" pos:column="5">assert<pos:position pos:line="199" pos:column="11"/></name><argument_list pos:line="199" pos:column="11">( <argument><expr><name pos:line="199" pos:column="13">pBt<pos:position pos:line="199" pos:column="16"/></name><operator pos:line="199" pos:column="16">!=<pos:position pos:line="199" pos:column="18"/></operator><literal type="number" pos:line="199" pos:column="18">0<pos:position pos:line="199" pos:column="19"/></literal></expr></argument> )<pos:position pos:line="199" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="22"/></expr_stmt>
    <if pos:line="200" pos:column="5">if<condition pos:line="200" pos:column="7">( <expr><name pos:line="200" pos:column="9">zRight<pos:position pos:line="200" pos:column="15"/></name></expr> )<pos:position pos:line="200" pos:column="17"/></condition><then><block pos:line="200" pos:column="17">{
      <if pos:line="201" pos:column="7">if<condition pos:line="201" pos:column="9">( <expr><call><name pos:line="201" pos:column="11">sqlite3_stricmp<pos:position pos:line="201" pos:column="26"/></name><argument_list pos:line="201" pos:column="26">(<argument><expr><name pos:line="201" pos:column="27">zRight<pos:position pos:line="201" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="35">"fast"<pos:position pos:line="201" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="42"/></argument_list></call><operator pos:line="201" pos:column="42">==<pos:position pos:line="201" pos:column="44"/></operator><literal type="number" pos:line="201" pos:column="44">0<pos:position pos:line="201" pos:column="45"/></literal></expr> )<pos:position pos:line="201" pos:column="47"/></condition><then><block pos:line="201" pos:column="47">{
        <expr_stmt><expr><name pos:line="202" pos:column="9">b<pos:position pos:line="202" pos:column="10"/></name> <operator pos:line="202" pos:column="11">=<pos:position pos:line="202" pos:column="12"/></operator> <literal type="number" pos:line="202" pos:column="13">2<pos:position pos:line="202" pos:column="14"/></literal></expr>;<pos:position pos:line="202" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="203" pos:column="8"/></block></then><else pos:line="203" pos:column="8">else<block pos:line="203" pos:column="12">{
        <expr_stmt><expr><name pos:line="204" pos:column="9">b<pos:position pos:line="204" pos:column="10"/></name> <operator pos:line="204" pos:column="11">=<pos:position pos:line="204" pos:column="12"/></operator> <call><name pos:line="204" pos:column="13">sqlite3GetBoolean<pos:position pos:line="204" pos:column="30"/></name><argument_list pos:line="204" pos:column="30">(<argument><expr><name pos:line="204" pos:column="31">zRight<pos:position pos:line="204" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="204" pos:column="39">0<pos:position pos:line="204" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="204" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="42"/></expr_stmt>
      }<pos:position pos:line="205" pos:column="8"/></block></else></if>
    }<pos:position pos:line="206" pos:column="6"/></block></then></if>
    <if pos:line="207" pos:column="5">if<condition pos:line="207" pos:column="7">( <expr><name><name pos:line="207" pos:column="9">pId2<pos:position pos:line="207" pos:column="13"/></name><operator pos:line="207" pos:column="13">-&gt;<pos:position pos:line="207" pos:column="18"/></operator><name pos:line="207" pos:column="15">n<pos:position pos:line="207" pos:column="16"/></name></name><operator pos:line="207" pos:column="16">==<pos:position pos:line="207" pos:column="18"/></operator><literal type="number" pos:line="207" pos:column="18">0<pos:position pos:line="207" pos:column="19"/></literal> <operator pos:line="207" pos:column="20">&amp;&amp;<pos:position pos:line="207" pos:column="30"/></operator> <name pos:line="207" pos:column="23">b<pos:position pos:line="207" pos:column="24"/></name><operator pos:line="207" pos:column="24">&gt;=<pos:position pos:line="207" pos:column="29"/></operator><literal type="number" pos:line="207" pos:column="26">0<pos:position pos:line="207" pos:column="27"/></literal></expr> )<pos:position pos:line="207" pos:column="29"/></condition><then><block pos:line="207" pos:column="29">{
      <decl_stmt><decl><type><name pos:line="208" pos:column="7">int<pos:position pos:line="208" pos:column="10"/></name></type> <name pos:line="208" pos:column="11">ii<pos:position pos:line="208" pos:column="13"/></name></decl>;<pos:position pos:line="208" pos:column="14"/></decl_stmt>
      <for pos:line="209" pos:column="7">for<control pos:line="209" pos:column="10">(<init><expr><name pos:line="209" pos:column="11">ii<pos:position pos:line="209" pos:column="13"/></name><operator pos:line="209" pos:column="13">=<pos:position pos:line="209" pos:column="14"/></operator><literal type="number" pos:line="209" pos:column="14">0<pos:position pos:line="209" pos:column="15"/></literal></expr>;<pos:position pos:line="209" pos:column="16"/></init> <condition><expr><name pos:line="209" pos:column="17">ii<pos:position pos:line="209" pos:column="19"/></name><operator pos:line="209" pos:column="19">&lt;<pos:position pos:line="209" pos:column="23"/></operator><name><name pos:line="209" pos:column="20">db<pos:position pos:line="209" pos:column="22"/></name><operator pos:line="209" pos:column="22">-&gt;<pos:position pos:line="209" pos:column="27"/></operator><name pos:line="209" pos:column="24">nDb<pos:position pos:line="209" pos:column="27"/></name></name></expr>;<pos:position pos:line="209" pos:column="28"/></condition> <incr><expr><name pos:line="209" pos:column="29">ii<pos:position pos:line="209" pos:column="31"/></name><operator pos:line="209" pos:column="31">++<pos:position pos:line="209" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="209" pos:column="34"/></control><block pos:line="209" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="210" pos:column="9">sqlite3BtreeSecureDelete<pos:position pos:line="210" pos:column="33"/></name><argument_list pos:line="210" pos:column="33">(<argument><expr><name><name pos:line="210" pos:column="34">db<pos:position pos:line="210" pos:column="36"/></name><operator pos:line="210" pos:column="36">-&gt;<pos:position pos:line="210" pos:column="41"/></operator><name pos:line="210" pos:column="38">aDb<pos:position pos:line="210" pos:column="41"/></name><index pos:line="210" pos:column="41">[<expr><name pos:line="210" pos:column="42">ii<pos:position pos:line="210" pos:column="44"/></name></expr>]<pos:position pos:line="210" pos:column="45"/></index></name><operator pos:line="210" pos:column="45">.<pos:position pos:line="210" pos:column="46"/></operator><name pos:line="210" pos:column="46">pBt<pos:position pos:line="210" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="51">b<pos:position pos:line="210" pos:column="52"/></name></expr></argument>)<pos:position pos:line="210" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="211" pos:column="8"/></block></for>
    }<pos:position pos:line="212" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="213" pos:column="5">b<pos:position pos:line="213" pos:column="6"/></name> <operator pos:line="213" pos:column="7">=<pos:position pos:line="213" pos:column="8"/></operator> <call><name pos:line="213" pos:column="9">sqlite3BtreeSecureDelete<pos:position pos:line="213" pos:column="33"/></name><argument_list pos:line="213" pos:column="33">(<argument><expr><name pos:line="213" pos:column="34">pBt<pos:position pos:line="213" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="39">b<pos:position pos:line="213" pos:column="40"/></name></expr></argument>)<pos:position pos:line="213" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="214" pos:column="5">returnSingleInt<pos:position pos:line="214" pos:column="20"/></name><argument_list pos:line="214" pos:column="20">(<argument><expr><name pos:line="214" pos:column="21">v<pos:position pos:line="214" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="24">b<pos:position pos:line="214" pos:column="25"/></name></expr></argument>)<pos:position pos:line="214" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="27"/></expr_stmt>
    <break pos:line="215" pos:column="5">break;<pos:position pos:line="215" pos:column="11"/></break>
  }<pos:position pos:line="216" pos:column="4"/></block>

  <comment type="block" pos:line="218" pos:column="3">/*
  **  PRAGMA [schema.]max_page_count
  **  PRAGMA [schema.]max_page_count=N
  **
  ** The first form reports the current setting for the
  ** maximum number of pages in the database file.  The 
  ** second form attempts to change this setting.  Both
  ** forms return the current setting.
  **
  ** The absolute value of N is used.  This is undocumented and might
  ** change.  The only purpose is to provide an easy way to test
  ** the sqlite3AbsInt32() function.
  **
  **  PRAGMA [schema.]page_count
  **
  ** Return the number of pages in the specified database.
  */</comment>
  <case pos:line="235" pos:column="3">case <expr><name pos:line="235" pos:column="8">PragTyp_PAGE_COUNT<pos:position pos:line="235" pos:column="26"/></name></expr>:<pos:position pos:line="235" pos:column="27"/></case> <block pos:line="235" pos:column="28">{
    <decl_stmt><decl><type><name pos:line="236" pos:column="5">int<pos:position pos:line="236" pos:column="8"/></name></type> <name pos:line="236" pos:column="9">iReg<pos:position pos:line="236" pos:column="13"/></name></decl>;<pos:position pos:line="236" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="237" pos:column="5">sqlite3CodeVerifySchema<pos:position pos:line="237" pos:column="28"/></name><argument_list pos:line="237" pos:column="28">(<argument><expr><name pos:line="237" pos:column="29">pParse<pos:position pos:line="237" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="37">iDb<pos:position pos:line="237" pos:column="40"/></name></expr></argument>)<pos:position pos:line="237" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="238" pos:column="5">iReg<pos:position pos:line="238" pos:column="9"/></name> <operator pos:line="238" pos:column="10">=<pos:position pos:line="238" pos:column="11"/></operator> <operator pos:line="238" pos:column="12">++<pos:position pos:line="238" pos:column="14"/></operator><name><name pos:line="238" pos:column="14">pParse<pos:position pos:line="238" pos:column="20"/></name><operator pos:line="238" pos:column="20">-&gt;<pos:position pos:line="238" pos:column="25"/></operator><name pos:line="238" pos:column="22">nMem<pos:position pos:line="238" pos:column="26"/></name></name></expr>;<pos:position pos:line="238" pos:column="27"/></expr_stmt>
    <if pos:line="239" pos:column="5">if<condition pos:line="239" pos:column="7">( <expr><call><name pos:line="239" pos:column="9">sqlite3Tolower<pos:position pos:line="239" pos:column="23"/></name><argument_list pos:line="239" pos:column="23">(<argument><expr><name><name pos:line="239" pos:column="24">zLeft<pos:position pos:line="239" pos:column="29"/></name><index pos:line="239" pos:column="29">[<expr><literal type="number" pos:line="239" pos:column="30">0<pos:position pos:line="239" pos:column="31"/></literal></expr>]<pos:position pos:line="239" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="239" pos:column="33"/></argument_list></call><operator pos:line="239" pos:column="33">==<pos:position pos:line="239" pos:column="35"/></operator><literal type="char" pos:line="239" pos:column="35">'p'<pos:position pos:line="239" pos:column="38"/></literal></expr> )<pos:position pos:line="239" pos:column="40"/></condition><then><block pos:line="239" pos:column="40">{
      <expr_stmt><expr><call><name pos:line="240" pos:column="7">sqlite3VdbeAddOp2<pos:position pos:line="240" pos:column="24"/></name><argument_list pos:line="240" pos:column="24">(<argument><expr><name pos:line="240" pos:column="25">v<pos:position pos:line="240" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="240" pos:column="28">OP_Pagecount<pos:position pos:line="240" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="240" pos:column="42">iDb<pos:position pos:line="240" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="240" pos:column="47">iReg<pos:position pos:line="240" pos:column="51"/></name></expr></argument>)<pos:position pos:line="240" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="241" pos:column="6"/></block></then><else pos:line="241" pos:column="6">else<block pos:line="241" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="242" pos:column="7">sqlite3VdbeAddOp3<pos:position pos:line="242" pos:column="24"/></name><argument_list pos:line="242" pos:column="24">(<argument><expr><name pos:line="242" pos:column="25">v<pos:position pos:line="242" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="28">OP_MaxPgcnt<pos:position pos:line="242" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="41">iDb<pos:position pos:line="242" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="46">iReg<pos:position pos:line="242" pos:column="50"/></name></expr></argument>, 
                        <argument><expr><call><name pos:line="243" pos:column="25">sqlite3AbsInt32<pos:position pos:line="243" pos:column="40"/></name><argument_list pos:line="243" pos:column="40">(<argument><expr><call><name pos:line="243" pos:column="41">sqlite3Atoi<pos:position pos:line="243" pos:column="52"/></name><argument_list pos:line="243" pos:column="52">(<argument><expr><name pos:line="243" pos:column="53">zRight<pos:position pos:line="243" pos:column="59"/></name></expr></argument>)<pos:position pos:line="243" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="243" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="243" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="244" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="245" pos:column="5">sqlite3VdbeAddOp2<pos:position pos:line="245" pos:column="22"/></name><argument_list pos:line="245" pos:column="22">(<argument><expr><name pos:line="245" pos:column="23">v<pos:position pos:line="245" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="26">OP_ResultRow<pos:position pos:line="245" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="40">iReg<pos:position pos:line="245" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="245" pos:column="46">1<pos:position pos:line="245" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="245" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="49"/></expr_stmt>
    <break pos:line="246" pos:column="5">break;<pos:position pos:line="246" pos:column="11"/></break>
  }<pos:position pos:line="247" pos:column="4"/></block>

  <comment type="block" pos:line="249" pos:column="3">/*
  **  PRAGMA [schema.]locking_mode
  **  PRAGMA [schema.]locking_mode = (normal|exclusive)
  */</comment>
  <case pos:line="253" pos:column="3">case <expr><name pos:line="253" pos:column="8">PragTyp_LOCKING_MODE<pos:position pos:line="253" pos:column="28"/></name></expr>:<pos:position pos:line="253" pos:column="29"/></case> <block pos:line="253" pos:column="30">{
    <decl_stmt><decl><type><specifier pos:line="254" pos:column="5">const<pos:position pos:line="254" pos:column="10"/></specifier> <name pos:line="254" pos:column="11">char<pos:position pos:line="254" pos:column="15"/></name> <modifier pos:line="254" pos:column="16">*<pos:position pos:line="254" pos:column="17"/></modifier></type><name pos:line="254" pos:column="17">zRet<pos:position pos:line="254" pos:column="21"/></name> <init pos:line="254" pos:column="22">= <expr><literal type="string" pos:line="254" pos:column="24">"normal"<pos:position pos:line="254" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="254" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="255" pos:column="5">int<pos:position pos:line="255" pos:column="8"/></name></type> <name pos:line="255" pos:column="9">eMode<pos:position pos:line="255" pos:column="14"/></name> <init pos:line="255" pos:column="15">= <expr><call><name pos:line="255" pos:column="17">getLockingMode<pos:position pos:line="255" pos:column="31"/></name><argument_list pos:line="255" pos:column="31">(<argument><expr><name pos:line="255" pos:column="32">zRight<pos:position pos:line="255" pos:column="38"/></name></expr></argument>)<pos:position pos:line="255" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="255" pos:column="40"/></decl_stmt>

    <if pos:line="257" pos:column="5">if<condition pos:line="257" pos:column="7">( <expr><name><name pos:line="257" pos:column="9">pId2<pos:position pos:line="257" pos:column="13"/></name><operator pos:line="257" pos:column="13">-&gt;<pos:position pos:line="257" pos:column="18"/></operator><name pos:line="257" pos:column="15">n<pos:position pos:line="257" pos:column="16"/></name></name><operator pos:line="257" pos:column="16">==<pos:position pos:line="257" pos:column="18"/></operator><literal type="number" pos:line="257" pos:column="18">0<pos:position pos:line="257" pos:column="19"/></literal> <operator pos:line="257" pos:column="20">&amp;&amp;<pos:position pos:line="257" pos:column="30"/></operator> <name pos:line="257" pos:column="23">eMode<pos:position pos:line="257" pos:column="28"/></name><operator pos:line="257" pos:column="28">==<pos:position pos:line="257" pos:column="30"/></operator><name pos:line="257" pos:column="30">PAGER_LOCKINGMODE_QUERY<pos:position pos:line="257" pos:column="53"/></name></expr> )<pos:position pos:line="257" pos:column="55"/></condition><then><block pos:line="257" pos:column="55">{
      <comment type="block" pos:line="258" pos:column="7">/* Simple "PRAGMA locking_mode;" statement. This is a query for
      ** the current default locking mode (which may be different to
      ** the locking-mode of the main database).
      */</comment>
      <expr_stmt><expr><name pos:line="262" pos:column="7">eMode<pos:position pos:line="262" pos:column="12"/></name> <operator pos:line="262" pos:column="13">=<pos:position pos:line="262" pos:column="14"/></operator> <name><name pos:line="262" pos:column="15">db<pos:position pos:line="262" pos:column="17"/></name><operator pos:line="262" pos:column="17">-&gt;<pos:position pos:line="262" pos:column="22"/></operator><name pos:line="262" pos:column="19">dfltLockMode<pos:position pos:line="262" pos:column="31"/></name></name></expr>;<pos:position pos:line="262" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="263" pos:column="6"/></block></then><else pos:line="263" pos:column="6">else<block pos:line="263" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="264" pos:column="7">Pager<pos:position pos:line="264" pos:column="12"/></name> <modifier pos:line="264" pos:column="13">*<pos:position pos:line="264" pos:column="14"/></modifier></type><name pos:line="264" pos:column="14">pPager<pos:position pos:line="264" pos:column="20"/></name></decl>;<pos:position pos:line="264" pos:column="21"/></decl_stmt>
      <if pos:line="265" pos:column="7">if<condition pos:line="265" pos:column="9">( <expr><name><name pos:line="265" pos:column="11">pId2<pos:position pos:line="265" pos:column="15"/></name><operator pos:line="265" pos:column="15">-&gt;<pos:position pos:line="265" pos:column="20"/></operator><name pos:line="265" pos:column="17">n<pos:position pos:line="265" pos:column="18"/></name></name><operator pos:line="265" pos:column="18">==<pos:position pos:line="265" pos:column="20"/></operator><literal type="number" pos:line="265" pos:column="20">0<pos:position pos:line="265" pos:column="21"/></literal></expr> )<pos:position pos:line="265" pos:column="23"/></condition><then><block pos:line="265" pos:column="23">{
        <comment type="block" pos:line="266" pos:column="9">/* This indicates that no database name was specified as part
        ** of the PRAGMA command. In this case the locking-mode must be
        ** set on all attached databases, as well as the main db file.
        **
        ** Also, the sqlite3.dfltLockMode variable is set so that
        ** any subsequently attached databases also use the specified
        ** locking mode.
        */</comment>
        <decl_stmt><decl><type><name pos:line="274" pos:column="9">int<pos:position pos:line="274" pos:column="12"/></name></type> <name pos:line="274" pos:column="13">ii<pos:position pos:line="274" pos:column="15"/></name></decl>;<pos:position pos:line="274" pos:column="16"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="275" pos:column="9">assert<pos:position pos:line="275" pos:column="15"/></name><argument_list pos:line="275" pos:column="15">(<argument><expr><name pos:line="275" pos:column="16">pDb<pos:position pos:line="275" pos:column="19"/></name><operator pos:line="275" pos:column="19">==<pos:position pos:line="275" pos:column="21"/></operator><operator pos:line="275" pos:column="21">&amp;<pos:position pos:line="275" pos:column="26"/></operator><name><name pos:line="275" pos:column="22">db<pos:position pos:line="275" pos:column="24"/></name><operator pos:line="275" pos:column="24">-&gt;<pos:position pos:line="275" pos:column="29"/></operator><name pos:line="275" pos:column="26">aDb<pos:position pos:line="275" pos:column="29"/></name><index pos:line="275" pos:column="29">[<expr><literal type="number" pos:line="275" pos:column="30">0<pos:position pos:line="275" pos:column="31"/></literal></expr>]<pos:position pos:line="275" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="275" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="34"/></expr_stmt>
        <for pos:line="276" pos:column="9">for<control pos:line="276" pos:column="12">(<init><expr><name pos:line="276" pos:column="13">ii<pos:position pos:line="276" pos:column="15"/></name><operator pos:line="276" pos:column="15">=<pos:position pos:line="276" pos:column="16"/></operator><literal type="number" pos:line="276" pos:column="16">2<pos:position pos:line="276" pos:column="17"/></literal></expr>;<pos:position pos:line="276" pos:column="18"/></init> <condition><expr><name pos:line="276" pos:column="19">ii<pos:position pos:line="276" pos:column="21"/></name><operator pos:line="276" pos:column="21">&lt;<pos:position pos:line="276" pos:column="25"/></operator><name><name pos:line="276" pos:column="22">db<pos:position pos:line="276" pos:column="24"/></name><operator pos:line="276" pos:column="24">-&gt;<pos:position pos:line="276" pos:column="29"/></operator><name pos:line="276" pos:column="26">nDb<pos:position pos:line="276" pos:column="29"/></name></name></expr>;<pos:position pos:line="276" pos:column="30"/></condition> <incr><expr><name pos:line="276" pos:column="31">ii<pos:position pos:line="276" pos:column="33"/></name><operator pos:line="276" pos:column="33">++<pos:position pos:line="276" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="276" pos:column="36"/></control><block pos:line="276" pos:column="36">{
          <expr_stmt><expr><name pos:line="277" pos:column="11">pPager<pos:position pos:line="277" pos:column="17"/></name> <operator pos:line="277" pos:column="18">=<pos:position pos:line="277" pos:column="19"/></operator> <call><name pos:line="277" pos:column="20">sqlite3BtreePager<pos:position pos:line="277" pos:column="37"/></name><argument_list pos:line="277" pos:column="37">(<argument><expr><name><name pos:line="277" pos:column="38">db<pos:position pos:line="277" pos:column="40"/></name><operator pos:line="277" pos:column="40">-&gt;<pos:position pos:line="277" pos:column="45"/></operator><name pos:line="277" pos:column="42">aDb<pos:position pos:line="277" pos:column="45"/></name><index pos:line="277" pos:column="45">[<expr><name pos:line="277" pos:column="46">ii<pos:position pos:line="277" pos:column="48"/></name></expr>]<pos:position pos:line="277" pos:column="49"/></index></name><operator pos:line="277" pos:column="49">.<pos:position pos:line="277" pos:column="50"/></operator><name pos:line="277" pos:column="50">pBt<pos:position pos:line="277" pos:column="53"/></name></expr></argument>)<pos:position pos:line="277" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="55"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="278" pos:column="11">sqlite3PagerLockingMode<pos:position pos:line="278" pos:column="34"/></name><argument_list pos:line="278" pos:column="34">(<argument><expr><name pos:line="278" pos:column="35">pPager<pos:position pos:line="278" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="43">eMode<pos:position pos:line="278" pos:column="48"/></name></expr></argument>)<pos:position pos:line="278" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="279" pos:column="10"/></block></for>
        <expr_stmt><expr><name><name pos:line="280" pos:column="9">db<pos:position pos:line="280" pos:column="11"/></name><operator pos:line="280" pos:column="11">-&gt;<pos:position pos:line="280" pos:column="16"/></operator><name pos:line="280" pos:column="13">dfltLockMode<pos:position pos:line="280" pos:column="25"/></name></name> <operator pos:line="280" pos:column="26">=<pos:position pos:line="280" pos:column="27"/></operator> <operator pos:line="280" pos:column="28">(<pos:position pos:line="280" pos:column="29"/></operator><name pos:line="280" pos:column="29">u8<pos:position pos:line="280" pos:column="31"/></name><operator pos:line="280" pos:column="31">)<pos:position pos:line="280" pos:column="32"/></operator><name pos:line="280" pos:column="32">eMode<pos:position pos:line="280" pos:column="37"/></name></expr>;<pos:position pos:line="280" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="281" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="282" pos:column="7">pPager<pos:position pos:line="282" pos:column="13"/></name> <operator pos:line="282" pos:column="14">=<pos:position pos:line="282" pos:column="15"/></operator> <call><name pos:line="282" pos:column="16">sqlite3BtreePager<pos:position pos:line="282" pos:column="33"/></name><argument_list pos:line="282" pos:column="33">(<argument><expr><name><name pos:line="282" pos:column="34">pDb<pos:position pos:line="282" pos:column="37"/></name><operator pos:line="282" pos:column="37">-&gt;<pos:position pos:line="282" pos:column="42"/></operator><name pos:line="282" pos:column="39">pBt<pos:position pos:line="282" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="282" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="283" pos:column="7">eMode<pos:position pos:line="283" pos:column="12"/></name> <operator pos:line="283" pos:column="13">=<pos:position pos:line="283" pos:column="14"/></operator> <call><name pos:line="283" pos:column="15">sqlite3PagerLockingMode<pos:position pos:line="283" pos:column="38"/></name><argument_list pos:line="283" pos:column="38">(<argument><expr><name pos:line="283" pos:column="39">pPager<pos:position pos:line="283" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="47">eMode<pos:position pos:line="283" pos:column="52"/></name></expr></argument>)<pos:position pos:line="283" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="284" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="286" pos:column="5">assert<pos:position pos:line="286" pos:column="11"/></name><argument_list pos:line="286" pos:column="11">( <argument><expr><name pos:line="286" pos:column="13">eMode<pos:position pos:line="286" pos:column="18"/></name><operator pos:line="286" pos:column="18">==<pos:position pos:line="286" pos:column="20"/></operator><name pos:line="286" pos:column="20">PAGER_LOCKINGMODE_NORMAL<pos:position pos:line="286" pos:column="44"/></name>
            <operator pos:line="287" pos:column="13">||<pos:position pos:line="287" pos:column="15"/></operator> <name pos:line="287" pos:column="16">eMode<pos:position pos:line="287" pos:column="21"/></name><operator pos:line="287" pos:column="21">==<pos:position pos:line="287" pos:column="23"/></operator><name pos:line="287" pos:column="23">PAGER_LOCKINGMODE_EXCLUSIVE<pos:position pos:line="287" pos:column="50"/></name></expr></argument> )<pos:position pos:line="287" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="53"/></expr_stmt>
    <if pos:line="288" pos:column="5">if<condition pos:line="288" pos:column="7">( <expr><name pos:line="288" pos:column="9">eMode<pos:position pos:line="288" pos:column="14"/></name><operator pos:line="288" pos:column="14">==<pos:position pos:line="288" pos:column="16"/></operator><name pos:line="288" pos:column="16">PAGER_LOCKINGMODE_EXCLUSIVE<pos:position pos:line="288" pos:column="43"/></name></expr> )<pos:position pos:line="288" pos:column="45"/></condition><then><block pos:line="288" pos:column="45">{
      <expr_stmt><expr><name pos:line="289" pos:column="7">zRet<pos:position pos:line="289" pos:column="11"/></name> <operator pos:line="289" pos:column="12">=<pos:position pos:line="289" pos:column="13"/></operator> <literal type="string" pos:line="289" pos:column="14">"exclusive"<pos:position pos:line="289" pos:column="25"/></literal></expr>;<pos:position pos:line="289" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="290" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="291" pos:column="5">returnSingleText<pos:position pos:line="291" pos:column="21"/></name><argument_list pos:line="291" pos:column="21">(<argument><expr><name pos:line="291" pos:column="22">v<pos:position pos:line="291" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="291" pos:column="25">zRet<pos:position pos:line="291" pos:column="29"/></name></expr></argument>)<pos:position pos:line="291" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="31"/></expr_stmt>
    <break pos:line="292" pos:column="5">break;<pos:position pos:line="292" pos:column="11"/></break>
  }<pos:position pos:line="293" pos:column="4"/></block>

  <comment type="block" pos:line="295" pos:column="3">/*
  **  PRAGMA [schema.]journal_mode
  **  PRAGMA [schema.]journal_mode =
  **                      (delete|persist|off|truncate|memory|wal|off)
  */</comment>
  <case pos:line="300" pos:column="3">case <expr><name pos:line="300" pos:column="8">PragTyp_JOURNAL_MODE<pos:position pos:line="300" pos:column="28"/></name></expr>:<pos:position pos:line="300" pos:column="29"/></case> <block pos:line="300" pos:column="30">{
    <decl_stmt><decl><type><name pos:line="301" pos:column="5">int<pos:position pos:line="301" pos:column="8"/></name></type> <name pos:line="301" pos:column="9">eMode<pos:position pos:line="301" pos:column="14"/></name></decl>;<pos:position pos:line="301" pos:column="15"/></decl_stmt>        <comment type="block" pos:line="301" pos:column="23">/* One of the PAGER_JOURNALMODE_XXX symbols */</comment>
    <decl_stmt><decl><type><name pos:line="302" pos:column="5">int<pos:position pos:line="302" pos:column="8"/></name></type> <name pos:line="302" pos:column="9">ii<pos:position pos:line="302" pos:column="11"/></name></decl>;<pos:position pos:line="302" pos:column="12"/></decl_stmt>           <comment type="block" pos:line="302" pos:column="23">/* Loop counter */</comment>

    <if pos:line="304" pos:column="5">if<condition pos:line="304" pos:column="7">( <expr><name pos:line="304" pos:column="9">zRight<pos:position pos:line="304" pos:column="15"/></name><operator pos:line="304" pos:column="15">==<pos:position pos:line="304" pos:column="17"/></operator><literal type="number" pos:line="304" pos:column="17">0<pos:position pos:line="304" pos:column="18"/></literal></expr> )<pos:position pos:line="304" pos:column="20"/></condition><then><block pos:line="304" pos:column="20">{
      <comment type="block" pos:line="305" pos:column="7">/* If there is no "=MODE" part of the pragma, do a query for the
      ** current mode */</comment>
      <expr_stmt><expr><name pos:line="307" pos:column="7">eMode<pos:position pos:line="307" pos:column="12"/></name> <operator pos:line="307" pos:column="13">=<pos:position pos:line="307" pos:column="14"/></operator> <name pos:line="307" pos:column="15">PAGER_JOURNALMODE_QUERY<pos:position pos:line="307" pos:column="38"/></name></expr>;<pos:position pos:line="307" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="308" pos:column="6"/></block></then><else pos:line="308" pos:column="6">else<block pos:line="308" pos:column="10">{
      <decl_stmt><decl><type><specifier pos:line="309" pos:column="7">const<pos:position pos:line="309" pos:column="12"/></specifier> <name pos:line="309" pos:column="13">char<pos:position pos:line="309" pos:column="17"/></name> <modifier pos:line="309" pos:column="18">*<pos:position pos:line="309" pos:column="19"/></modifier></type><name pos:line="309" pos:column="19">zMode<pos:position pos:line="309" pos:column="24"/></name></decl>;<pos:position pos:line="309" pos:column="25"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="310" pos:column="7">int<pos:position pos:line="310" pos:column="10"/></name></type> <name pos:line="310" pos:column="11">n<pos:position pos:line="310" pos:column="12"/></name> <init pos:line="310" pos:column="13">= <expr><call><name pos:line="310" pos:column="15">sqlite3Strlen30<pos:position pos:line="310" pos:column="30"/></name><argument_list pos:line="310" pos:column="30">(<argument><expr><name pos:line="310" pos:column="31">zRight<pos:position pos:line="310" pos:column="37"/></name></expr></argument>)<pos:position pos:line="310" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="310" pos:column="39"/></decl_stmt>
      <for pos:line="311" pos:column="7">for<control pos:line="311" pos:column="10">(<init><expr><name pos:line="311" pos:column="11">eMode<pos:position pos:line="311" pos:column="16"/></name><operator pos:line="311" pos:column="16">=<pos:position pos:line="311" pos:column="17"/></operator><literal type="number" pos:line="311" pos:column="17">0<pos:position pos:line="311" pos:column="18"/></literal></expr>;<pos:position pos:line="311" pos:column="19"/></init> <condition><expr><operator pos:line="311" pos:column="20">(<pos:position pos:line="311" pos:column="21"/></operator><name pos:line="311" pos:column="21">zMode<pos:position pos:line="311" pos:column="26"/></name> <operator pos:line="311" pos:column="27">=<pos:position pos:line="311" pos:column="28"/></operator> <call><name pos:line="311" pos:column="29">sqlite3JournalModename<pos:position pos:line="311" pos:column="51"/></name><argument_list pos:line="311" pos:column="51">(<argument><expr><name pos:line="311" pos:column="52">eMode<pos:position pos:line="311" pos:column="57"/></name></expr></argument>)<pos:position pos:line="311" pos:column="58"/></argument_list></call><operator pos:line="311" pos:column="58">)<pos:position pos:line="311" pos:column="59"/></operator><operator pos:line="311" pos:column="59">!=<pos:position pos:line="311" pos:column="61"/></operator><literal type="number" pos:line="311" pos:column="61">0<pos:position pos:line="311" pos:column="62"/></literal></expr>;<pos:position pos:line="311" pos:column="63"/></condition> <incr><expr><name pos:line="311" pos:column="64">eMode<pos:position pos:line="311" pos:column="69"/></name><operator pos:line="311" pos:column="69">++<pos:position pos:line="311" pos:column="71"/></operator></expr></incr>)<pos:position pos:line="311" pos:column="72"/></control><block pos:line="311" pos:column="72">{
        <if pos:line="312" pos:column="9">if<condition pos:line="312" pos:column="11">( <expr><call><name pos:line="312" pos:column="13">sqlite3StrNICmp<pos:position pos:line="312" pos:column="28"/></name><argument_list pos:line="312" pos:column="28">(<argument><expr><name pos:line="312" pos:column="29">zRight<pos:position pos:line="312" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="37">zMode<pos:position pos:line="312" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="44">n<pos:position pos:line="312" pos:column="45"/></name></expr></argument>)<pos:position pos:line="312" pos:column="46"/></argument_list></call><operator pos:line="312" pos:column="46">==<pos:position pos:line="312" pos:column="48"/></operator><literal type="number" pos:line="312" pos:column="48">0<pos:position pos:line="312" pos:column="49"/></literal></expr> )<pos:position pos:line="312" pos:column="51"/></condition><then pos:line="312" pos:column="51"> <block type="pseudo"><break pos:line="312" pos:column="52">break;<pos:position pos:line="312" pos:column="58"/></break></block></then></if>
      }<pos:position pos:line="313" pos:column="8"/></block></for>
      <if pos:line="314" pos:column="7">if<condition pos:line="314" pos:column="9">( <expr><operator pos:line="314" pos:column="11">!<pos:position pos:line="314" pos:column="12"/></operator><name pos:line="314" pos:column="12">zMode<pos:position pos:line="314" pos:column="17"/></name></expr> )<pos:position pos:line="314" pos:column="19"/></condition><then><block pos:line="314" pos:column="19">{
        <comment type="block" pos:line="315" pos:column="9">/* If the "=MODE" part does not match any known journal mode,
        ** then do a query */</comment>
        <expr_stmt><expr><name pos:line="317" pos:column="9">eMode<pos:position pos:line="317" pos:column="14"/></name> <operator pos:line="317" pos:column="15">=<pos:position pos:line="317" pos:column="16"/></operator> <name pos:line="317" pos:column="17">PAGER_JOURNALMODE_QUERY<pos:position pos:line="317" pos:column="40"/></name></expr>;<pos:position pos:line="317" pos:column="41"/></expr_stmt>
      }<pos:position pos:line="318" pos:column="8"/></block></then></if>
    }<pos:position pos:line="319" pos:column="6"/></block></else></if>
    <if pos:line="320" pos:column="5">if<condition pos:line="320" pos:column="7">( <expr><name pos:line="320" pos:column="9">eMode<pos:position pos:line="320" pos:column="14"/></name><operator pos:line="320" pos:column="14">==<pos:position pos:line="320" pos:column="16"/></operator><name pos:line="320" pos:column="16">PAGER_JOURNALMODE_QUERY<pos:position pos:line="320" pos:column="39"/></name> <operator pos:line="320" pos:column="40">&amp;&amp;<pos:position pos:line="320" pos:column="50"/></operator> <name><name pos:line="320" pos:column="43">pId2<pos:position pos:line="320" pos:column="47"/></name><operator pos:line="320" pos:column="47">-&gt;<pos:position pos:line="320" pos:column="52"/></operator><name pos:line="320" pos:column="49">n<pos:position pos:line="320" pos:column="50"/></name></name><operator pos:line="320" pos:column="50">==<pos:position pos:line="320" pos:column="52"/></operator><literal type="number" pos:line="320" pos:column="52">0<pos:position pos:line="320" pos:column="53"/></literal></expr> )<pos:position pos:line="320" pos:column="55"/></condition><then><block pos:line="320" pos:column="55">{
      <comment type="block" pos:line="321" pos:column="7">/* Convert "PRAGMA journal_mode" into "PRAGMA main.journal_mode" */</comment>
      <expr_stmt><expr><name pos:line="322" pos:column="7">iDb<pos:position pos:line="322" pos:column="10"/></name> <operator pos:line="322" pos:column="11">=<pos:position pos:line="322" pos:column="12"/></operator> <literal type="number" pos:line="322" pos:column="13">0<pos:position pos:line="322" pos:column="14"/></literal></expr>;<pos:position pos:line="322" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="323" pos:column="7">pId2<pos:position pos:line="323" pos:column="11"/></name><operator pos:line="323" pos:column="11">-&gt;<pos:position pos:line="323" pos:column="16"/></operator><name pos:line="323" pos:column="13">n<pos:position pos:line="323" pos:column="14"/></name></name> <operator pos:line="323" pos:column="15">=<pos:position pos:line="323" pos:column="16"/></operator> <literal type="number" pos:line="323" pos:column="17">1<pos:position pos:line="323" pos:column="18"/></literal></expr>;<pos:position pos:line="323" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="324" pos:column="6"/></block></then></if>
    <for pos:line="325" pos:column="5">for<control pos:line="325" pos:column="8">(<init><expr><name pos:line="325" pos:column="9">ii<pos:position pos:line="325" pos:column="11"/></name><operator pos:line="325" pos:column="11">=<pos:position pos:line="325" pos:column="12"/></operator><name><name pos:line="325" pos:column="12">db<pos:position pos:line="325" pos:column="14"/></name><operator pos:line="325" pos:column="14">-&gt;<pos:position pos:line="325" pos:column="19"/></operator><name pos:line="325" pos:column="16">nDb<pos:position pos:line="325" pos:column="19"/></name></name><operator pos:line="325" pos:column="19">-<pos:position pos:line="325" pos:column="20"/></operator><literal type="number" pos:line="325" pos:column="20">1<pos:position pos:line="325" pos:column="21"/></literal></expr>;<pos:position pos:line="325" pos:column="22"/></init> <condition><expr><name pos:line="325" pos:column="23">ii<pos:position pos:line="325" pos:column="25"/></name><operator pos:line="325" pos:column="25">&gt;=<pos:position pos:line="325" pos:column="30"/></operator><literal type="number" pos:line="325" pos:column="27">0<pos:position pos:line="325" pos:column="28"/></literal></expr>;<pos:position pos:line="325" pos:column="29"/></condition> <incr><expr><name pos:line="325" pos:column="30">ii<pos:position pos:line="325" pos:column="32"/></name><operator pos:line="325" pos:column="32">--<pos:position pos:line="325" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="325" pos:column="35"/></control><block pos:line="325" pos:column="35">{
      <if pos:line="326" pos:column="7">if<condition pos:line="326" pos:column="9">( <expr><name><name pos:line="326" pos:column="11">db<pos:position pos:line="326" pos:column="13"/></name><operator pos:line="326" pos:column="13">-&gt;<pos:position pos:line="326" pos:column="18"/></operator><name pos:line="326" pos:column="15">aDb<pos:position pos:line="326" pos:column="18"/></name><index pos:line="326" pos:column="18">[<expr><name pos:line="326" pos:column="19">ii<pos:position pos:line="326" pos:column="21"/></name></expr>]<pos:position pos:line="326" pos:column="22"/></index></name><operator pos:line="326" pos:column="22">.<pos:position pos:line="326" pos:column="23"/></operator><name pos:line="326" pos:column="23">pBt<pos:position pos:line="326" pos:column="26"/></name> <operator pos:line="326" pos:column="27">&amp;&amp;<pos:position pos:line="326" pos:column="37"/></operator> <operator pos:line="326" pos:column="30">(<pos:position pos:line="326" pos:column="31"/></operator><name pos:line="326" pos:column="31">ii<pos:position pos:line="326" pos:column="33"/></name><operator pos:line="326" pos:column="33">==<pos:position pos:line="326" pos:column="35"/></operator><name pos:line="326" pos:column="35">iDb<pos:position pos:line="326" pos:column="38"/></name> <operator pos:line="326" pos:column="39">||<pos:position pos:line="326" pos:column="41"/></operator> <name><name pos:line="326" pos:column="42">pId2<pos:position pos:line="326" pos:column="46"/></name><operator pos:line="326" pos:column="46">-&gt;<pos:position pos:line="326" pos:column="51"/></operator><name pos:line="326" pos:column="48">n<pos:position pos:line="326" pos:column="49"/></name></name><operator pos:line="326" pos:column="49">==<pos:position pos:line="326" pos:column="51"/></operator><literal type="number" pos:line="326" pos:column="51">0<pos:position pos:line="326" pos:column="52"/></literal><operator pos:line="326" pos:column="52">)<pos:position pos:line="326" pos:column="53"/></operator></expr> )<pos:position pos:line="326" pos:column="55"/></condition><then><block pos:line="326" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="327" pos:column="9">sqlite3VdbeUsesBtree<pos:position pos:line="327" pos:column="29"/></name><argument_list pos:line="327" pos:column="29">(<argument><expr><name pos:line="327" pos:column="30">v<pos:position pos:line="327" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="327" pos:column="33">ii<pos:position pos:line="327" pos:column="35"/></name></expr></argument>)<pos:position pos:line="327" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="328" pos:column="9">sqlite3VdbeAddOp3<pos:position pos:line="328" pos:column="26"/></name><argument_list pos:line="328" pos:column="26">(<argument><expr><name pos:line="328" pos:column="27">v<pos:position pos:line="328" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="30">OP_JournalMode<pos:position pos:line="328" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="46">ii<pos:position pos:line="328" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="328" pos:column="50">1<pos:position pos:line="328" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="328" pos:column="53">eMode<pos:position pos:line="328" pos:column="58"/></name></expr></argument>)<pos:position pos:line="328" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="329" pos:column="8"/></block></then></if>
    }<pos:position pos:line="330" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="331" pos:column="5">sqlite3VdbeAddOp2<pos:position pos:line="331" pos:column="22"/></name><argument_list pos:line="331" pos:column="22">(<argument><expr><name pos:line="331" pos:column="23">v<pos:position pos:line="331" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="331" pos:column="26">OP_ResultRow<pos:position pos:line="331" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="331" pos:column="40">1<pos:position pos:line="331" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="331" pos:column="43">1<pos:position pos:line="331" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="331" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="46"/></expr_stmt>
    <break pos:line="332" pos:column="5">break;<pos:position pos:line="332" pos:column="11"/></break>
  }<pos:position pos:line="333" pos:column="4"/></block>

  <comment type="block" pos:line="335" pos:column="3">/*
  **  PRAGMA [schema.]journal_size_limit
  **  PRAGMA [schema.]journal_size_limit=N
  **
  ** Get or set the size limit on rollback journal files.
  */</comment>
  <case pos:line="341" pos:column="3">case <expr><name pos:line="341" pos:column="8">PragTyp_JOURNAL_SIZE_LIMIT<pos:position pos:line="341" pos:column="34"/></name></expr>:<pos:position pos:line="341" pos:column="35"/></case> <block pos:line="341" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="342" pos:column="5">Pager<pos:position pos:line="342" pos:column="10"/></name> <modifier pos:line="342" pos:column="11">*<pos:position pos:line="342" pos:column="12"/></modifier></type><name pos:line="342" pos:column="12">pPager<pos:position pos:line="342" pos:column="18"/></name> <init pos:line="342" pos:column="19">= <expr><call><name pos:line="342" pos:column="21">sqlite3BtreePager<pos:position pos:line="342" pos:column="38"/></name><argument_list pos:line="342" pos:column="38">(<argument><expr><name><name pos:line="342" pos:column="39">pDb<pos:position pos:line="342" pos:column="42"/></name><operator pos:line="342" pos:column="42">-&gt;<pos:position pos:line="342" pos:column="47"/></operator><name pos:line="342" pos:column="44">pBt<pos:position pos:line="342" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="342" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="342" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="343" pos:column="5">i64<pos:position pos:line="343" pos:column="8"/></name></type> <name pos:line="343" pos:column="9">iLimit<pos:position pos:line="343" pos:column="15"/></name> <init pos:line="343" pos:column="16">= <expr><operator pos:line="343" pos:column="18">-<pos:position pos:line="343" pos:column="19"/></operator><literal type="number" pos:line="343" pos:column="19">2<pos:position pos:line="343" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="343" pos:column="21"/></decl_stmt>
    <if pos:line="344" pos:column="5">if<condition pos:line="344" pos:column="7">( <expr><name pos:line="344" pos:column="9">zRight<pos:position pos:line="344" pos:column="15"/></name></expr> )<pos:position pos:line="344" pos:column="17"/></condition><then><block pos:line="344" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="345" pos:column="7">sqlite3DecOrHexToI64<pos:position pos:line="345" pos:column="27"/></name><argument_list pos:line="345" pos:column="27">(<argument><expr><name pos:line="345" pos:column="28">zRight<pos:position pos:line="345" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="345" pos:column="36">&amp;<pos:position pos:line="345" pos:column="41"/></operator><name pos:line="345" pos:column="37">iLimit<pos:position pos:line="345" pos:column="43"/></name></expr></argument>)<pos:position pos:line="345" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="45"/></expr_stmt>
      <if pos:line="346" pos:column="7">if<condition pos:line="346" pos:column="9">( <expr><name pos:line="346" pos:column="11">iLimit<pos:position pos:line="346" pos:column="17"/></name><operator pos:line="346" pos:column="17">&lt;<pos:position pos:line="346" pos:column="21"/></operator><operator pos:line="346" pos:column="18">-<pos:position pos:line="346" pos:column="19"/></operator><literal type="number" pos:line="346" pos:column="19">1<pos:position pos:line="346" pos:column="20"/></literal></expr> )<pos:position pos:line="346" pos:column="22"/></condition><then pos:line="346" pos:column="22"> <block type="pseudo"><expr_stmt><expr><name pos:line="346" pos:column="23">iLimit<pos:position pos:line="346" pos:column="29"/></name> <operator pos:line="346" pos:column="30">=<pos:position pos:line="346" pos:column="31"/></operator> <operator pos:line="346" pos:column="32">-<pos:position pos:line="346" pos:column="33"/></operator><literal type="number" pos:line="346" pos:column="33">1<pos:position pos:line="346" pos:column="34"/></literal></expr>;<pos:position pos:line="346" pos:column="35"/></expr_stmt></block></then></if>
    }<pos:position pos:line="347" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="348" pos:column="5">iLimit<pos:position pos:line="348" pos:column="11"/></name> <operator pos:line="348" pos:column="12">=<pos:position pos:line="348" pos:column="13"/></operator> <call><name pos:line="348" pos:column="14">sqlite3PagerJournalSizeLimit<pos:position pos:line="348" pos:column="42"/></name><argument_list pos:line="348" pos:column="42">(<argument><expr><name pos:line="348" pos:column="43">pPager<pos:position pos:line="348" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="348" pos:column="51">iLimit<pos:position pos:line="348" pos:column="57"/></name></expr></argument>)<pos:position pos:line="348" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="349" pos:column="5">returnSingleInt<pos:position pos:line="349" pos:column="20"/></name><argument_list pos:line="349" pos:column="20">(<argument><expr><name pos:line="349" pos:column="21">v<pos:position pos:line="349" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="24">iLimit<pos:position pos:line="349" pos:column="30"/></name></expr></argument>)<pos:position pos:line="349" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="32"/></expr_stmt>
    <break pos:line="350" pos:column="5">break;<pos:position pos:line="350" pos:column="11"/></break>
  }<pos:position pos:line="351" pos:column="4"/></block>

<cpp:endif pos:line="353" pos:column="1">#<cpp:directive pos:line="353" pos:column="2">endif<pos:position pos:line="353" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="353" pos:column="8">/* SQLITE_OMIT_PAGER_PRAGMAS */</comment>

  <comment type="block" pos:line="355" pos:column="3">/*
  **  PRAGMA [schema.]auto_vacuum
  **  PRAGMA [schema.]auto_vacuum=N
  **
  ** Get or set the value of the database 'auto-vacuum' parameter.
  ** The value is one of:  0 NONE 1 FULL 2 INCREMENTAL
  */</comment>
<cpp:ifndef pos:line="362" pos:column="1">#<cpp:directive pos:line="362" pos:column="2">ifndef<pos:position pos:line="362" pos:column="8"/></cpp:directive> <name pos:line="362" pos:column="9">SQLITE_OMIT_AUTOVACUUM<pos:position pos:line="362" pos:column="31"/></name></cpp:ifndef>
  <case pos:line="363" pos:column="3">case <expr><name pos:line="363" pos:column="8">PragTyp_AUTO_VACUUM<pos:position pos:line="363" pos:column="27"/></name></expr>:<pos:position pos:line="363" pos:column="28"/></case> <block pos:line="363" pos:column="29">{
    <decl_stmt><decl><type><name pos:line="364" pos:column="5">Btree<pos:position pos:line="364" pos:column="10"/></name> <modifier pos:line="364" pos:column="11">*<pos:position pos:line="364" pos:column="12"/></modifier></type><name pos:line="364" pos:column="12">pBt<pos:position pos:line="364" pos:column="15"/></name> <init pos:line="364" pos:column="16">= <expr><name><name pos:line="364" pos:column="18">pDb<pos:position pos:line="364" pos:column="21"/></name><operator pos:line="364" pos:column="21">-&gt;<pos:position pos:line="364" pos:column="26"/></operator><name pos:line="364" pos:column="23">pBt<pos:position pos:line="364" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="364" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="365" pos:column="5">assert<pos:position pos:line="365" pos:column="11"/></name><argument_list pos:line="365" pos:column="11">( <argument><expr><name pos:line="365" pos:column="13">pBt<pos:position pos:line="365" pos:column="16"/></name><operator pos:line="365" pos:column="16">!=<pos:position pos:line="365" pos:column="18"/></operator><literal type="number" pos:line="365" pos:column="18">0<pos:position pos:line="365" pos:column="19"/></literal></expr></argument> )<pos:position pos:line="365" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="22"/></expr_stmt>
    <if pos:line="366" pos:column="5">if<condition pos:line="366" pos:column="7">( <expr><operator pos:line="366" pos:column="9">!<pos:position pos:line="366" pos:column="10"/></operator><name pos:line="366" pos:column="10">zRight<pos:position pos:line="366" pos:column="16"/></name></expr> )<pos:position pos:line="366" pos:column="18"/></condition><then><block pos:line="366" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="367" pos:column="7">returnSingleInt<pos:position pos:line="367" pos:column="22"/></name><argument_list pos:line="367" pos:column="22">(<argument><expr><name pos:line="367" pos:column="23">v<pos:position pos:line="367" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="367" pos:column="26">sqlite3BtreeGetAutoVacuum<pos:position pos:line="367" pos:column="51"/></name><argument_list pos:line="367" pos:column="51">(<argument><expr><name pos:line="367" pos:column="52">pBt<pos:position pos:line="367" pos:column="55"/></name></expr></argument>)<pos:position pos:line="367" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="367" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="368" pos:column="6"/></block></then><else pos:line="368" pos:column="6">else<block pos:line="368" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="369" pos:column="7">int<pos:position pos:line="369" pos:column="10"/></name></type> <name pos:line="369" pos:column="11">eAuto<pos:position pos:line="369" pos:column="16"/></name> <init pos:line="369" pos:column="17">= <expr><call><name pos:line="369" pos:column="19">getAutoVacuum<pos:position pos:line="369" pos:column="32"/></name><argument_list pos:line="369" pos:column="32">(<argument><expr><name pos:line="369" pos:column="33">zRight<pos:position pos:line="369" pos:column="39"/></name></expr></argument>)<pos:position pos:line="369" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="369" pos:column="41"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="370" pos:column="7">assert<pos:position pos:line="370" pos:column="13"/></name><argument_list pos:line="370" pos:column="13">( <argument><expr><name pos:line="370" pos:column="15">eAuto<pos:position pos:line="370" pos:column="20"/></name><operator pos:line="370" pos:column="20">&gt;=<pos:position pos:line="370" pos:column="25"/></operator><literal type="number" pos:line="370" pos:column="22">0<pos:position pos:line="370" pos:column="23"/></literal> <operator pos:line="370" pos:column="24">&amp;&amp;<pos:position pos:line="370" pos:column="34"/></operator> <name pos:line="370" pos:column="27">eAuto<pos:position pos:line="370" pos:column="32"/></name><operator pos:line="370" pos:column="32">&lt;=<pos:position pos:line="370" pos:column="37"/></operator><literal type="number" pos:line="370" pos:column="34">2<pos:position pos:line="370" pos:column="35"/></literal></expr></argument> )<pos:position pos:line="370" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="371" pos:column="7">db<pos:position pos:line="371" pos:column="9"/></name><operator pos:line="371" pos:column="9">-&gt;<pos:position pos:line="371" pos:column="14"/></operator><name pos:line="371" pos:column="11">nextAutovac<pos:position pos:line="371" pos:column="22"/></name></name> <operator pos:line="371" pos:column="23">=<pos:position pos:line="371" pos:column="24"/></operator> <operator pos:line="371" pos:column="25">(<pos:position pos:line="371" pos:column="26"/></operator><name pos:line="371" pos:column="26">u8<pos:position pos:line="371" pos:column="28"/></name><operator pos:line="371" pos:column="28">)<pos:position pos:line="371" pos:column="29"/></operator><name pos:line="371" pos:column="29">eAuto<pos:position pos:line="371" pos:column="34"/></name></expr>;<pos:position pos:line="371" pos:column="35"/></expr_stmt>
      <comment type="block" pos:line="372" pos:column="7">/* Call SetAutoVacuum() to set initialize the internal auto and
      ** incr-vacuum flags. This is required in case this connection
      ** creates the database file. It is important that it is created
      ** as an auto-vacuum capable db.
      */</comment>
      <expr_stmt><expr><name pos:line="377" pos:column="7">rc<pos:position pos:line="377" pos:column="9"/></name> <operator pos:line="377" pos:column="10">=<pos:position pos:line="377" pos:column="11"/></operator> <call><name pos:line="377" pos:column="12">sqlite3BtreeSetAutoVacuum<pos:position pos:line="377" pos:column="37"/></name><argument_list pos:line="377" pos:column="37">(<argument><expr><name pos:line="377" pos:column="38">pBt<pos:position pos:line="377" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="377" pos:column="43">eAuto<pos:position pos:line="377" pos:column="48"/></name></expr></argument>)<pos:position pos:line="377" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="377" pos:column="50"/></expr_stmt>
      <if pos:line="378" pos:column="7">if<condition pos:line="378" pos:column="9">( <expr><name pos:line="378" pos:column="11">rc<pos:position pos:line="378" pos:column="13"/></name><operator pos:line="378" pos:column="13">==<pos:position pos:line="378" pos:column="15"/></operator><name pos:line="378" pos:column="15">SQLITE_OK<pos:position pos:line="378" pos:column="24"/></name> <operator pos:line="378" pos:column="25">&amp;&amp;<pos:position pos:line="378" pos:column="35"/></operator> <operator pos:line="378" pos:column="28">(<pos:position pos:line="378" pos:column="29"/></operator><name pos:line="378" pos:column="29">eAuto<pos:position pos:line="378" pos:column="34"/></name><operator pos:line="378" pos:column="34">==<pos:position pos:line="378" pos:column="36"/></operator><literal type="number" pos:line="378" pos:column="36">1<pos:position pos:line="378" pos:column="37"/></literal> <operator pos:line="378" pos:column="38">||<pos:position pos:line="378" pos:column="40"/></operator> <name pos:line="378" pos:column="41">eAuto<pos:position pos:line="378" pos:column="46"/></name><operator pos:line="378" pos:column="46">==<pos:position pos:line="378" pos:column="48"/></operator><literal type="number" pos:line="378" pos:column="48">2<pos:position pos:line="378" pos:column="49"/></literal><operator pos:line="378" pos:column="49">)<pos:position pos:line="378" pos:column="50"/></operator></expr> )<pos:position pos:line="378" pos:column="52"/></condition><then><block pos:line="378" pos:column="52">{
        <comment type="block" pos:line="379" pos:column="9">/* When setting the auto_vacuum mode to either "full" or 
        ** "incremental", write the value of meta[6] in the database
        ** file. Before writing to meta[6], check that meta[3] indicates
        ** that this really is an auto-vacuum capable database.
        */</comment>
        <decl_stmt><decl><specifier pos:line="384" pos:column="9">static<pos:position pos:line="384" pos:column="15"/></specifier> <type><specifier pos:line="384" pos:column="16">const<pos:position pos:line="384" pos:column="21"/></specifier> <name pos:line="384" pos:column="22">int<pos:position pos:line="384" pos:column="25"/></name></type> <name pos:line="384" pos:column="26">iLn<pos:position pos:line="384" pos:column="29"/></name> <init pos:line="384" pos:column="30">= <expr><call><name pos:line="384" pos:column="32">VDBE_OFFSET_LINENO<pos:position pos:line="384" pos:column="50"/></name><argument_list pos:line="384" pos:column="50">(<argument><expr><literal type="number" pos:line="384" pos:column="51">2<pos:position pos:line="384" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="384" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="384" pos:column="54"/></decl_stmt>
        <decl_stmt><decl><specifier pos:line="385" pos:column="9">static<pos:position pos:line="385" pos:column="15"/></specifier> <type><specifier pos:line="385" pos:column="16">const<pos:position pos:line="385" pos:column="21"/></specifier> <name pos:line="385" pos:column="22">VdbeOpList<pos:position pos:line="385" pos:column="32"/></name></type> <name><name pos:line="385" pos:column="33">setMeta6<pos:position pos:line="385" pos:column="41"/></name><index pos:line="385" pos:column="41">[]<pos:position pos:line="385" pos:column="43"/></index></name> <init pos:line="385" pos:column="44">= <expr><block pos:line="385" pos:column="46">{
          <expr><block pos:line="386" pos:column="11">{ <expr><name pos:line="386" pos:column="13">OP_Transaction<pos:position pos:line="386" pos:column="27"/></name></expr>,    <expr><literal type="number" pos:line="386" pos:column="32">0<pos:position pos:line="386" pos:column="33"/></literal></expr>,         <expr><literal type="number" pos:line="386" pos:column="43">1<pos:position pos:line="386" pos:column="44"/></literal></expr>,                 <expr><literal type="number" pos:line="386" pos:column="62">0<pos:position pos:line="386" pos:column="63"/></literal></expr>}<pos:position pos:line="386" pos:column="64"/></block></expr>,    <comment type="block" pos:line="386" pos:column="69">/* 0 */</comment>
          <expr><block pos:line="387" pos:column="11">{ <expr><name pos:line="387" pos:column="13">OP_ReadCookie<pos:position pos:line="387" pos:column="26"/></name></expr>,     <expr><literal type="number" pos:line="387" pos:column="32">0<pos:position pos:line="387" pos:column="33"/></literal></expr>,         <expr><literal type="number" pos:line="387" pos:column="43">1<pos:position pos:line="387" pos:column="44"/></literal></expr>,         <expr><name pos:line="387" pos:column="54">BTREE_LARGEST_ROOT_PAGE<pos:position pos:line="387" pos:column="77"/></name></expr>}<pos:position pos:line="387" pos:column="78"/></block></expr>,
          <expr><block pos:line="388" pos:column="11">{ <expr><name pos:line="388" pos:column="13">OP_If<pos:position pos:line="388" pos:column="18"/></name></expr>,             <expr><literal type="number" pos:line="388" pos:column="32">1<pos:position pos:line="388" pos:column="33"/></literal></expr>,         <expr><literal type="number" pos:line="388" pos:column="43">0<pos:position pos:line="388" pos:column="44"/></literal></expr>,                 <expr><literal type="number" pos:line="388" pos:column="62">0<pos:position pos:line="388" pos:column="63"/></literal></expr>}<pos:position pos:line="388" pos:column="64"/></block></expr>,    <comment type="block" pos:line="388" pos:column="69">/* 2 */</comment>
          <expr><block pos:line="389" pos:column="11">{ <expr><name pos:line="389" pos:column="13">OP_Halt<pos:position pos:line="389" pos:column="20"/></name></expr>,           <expr><name pos:line="389" pos:column="32">SQLITE_OK<pos:position pos:line="389" pos:column="41"/></name></expr>, <expr><name pos:line="389" pos:column="43">OE_Abort<pos:position pos:line="389" pos:column="51"/></name></expr>,          <expr><literal type="number" pos:line="389" pos:column="62">0<pos:position pos:line="389" pos:column="63"/></literal></expr>}<pos:position pos:line="389" pos:column="64"/></block></expr>,    <comment type="block" pos:line="389" pos:column="69">/* 3 */</comment>
          <expr><block pos:line="390" pos:column="11">{ <expr><name pos:line="390" pos:column="13">OP_SetCookie<pos:position pos:line="390" pos:column="25"/></name></expr>,      <expr><literal type="number" pos:line="390" pos:column="32">0<pos:position pos:line="390" pos:column="33"/></literal></expr>,         <expr><name pos:line="390" pos:column="43">BTREE_INCR_VACUUM<pos:position pos:line="390" pos:column="60"/></name></expr>, <expr><literal type="number" pos:line="390" pos:column="62">0<pos:position pos:line="390" pos:column="63"/></literal></expr>}<pos:position pos:line="390" pos:column="64"/></block></expr>,    <comment type="block" pos:line="390" pos:column="69">/* 4 */</comment>
        }<pos:position pos:line="391" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="391" pos:column="11"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="392" pos:column="9">VdbeOp<pos:position pos:line="392" pos:column="15"/></name> <modifier pos:line="392" pos:column="16">*<pos:position pos:line="392" pos:column="17"/></modifier></type><name pos:line="392" pos:column="17">aOp<pos:position pos:line="392" pos:column="20"/></name></decl>;<pos:position pos:line="392" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="393" pos:column="9">int<pos:position pos:line="393" pos:column="12"/></name></type> <name pos:line="393" pos:column="13">iAddr<pos:position pos:line="393" pos:column="18"/></name> <init pos:line="393" pos:column="19">= <expr><call><name pos:line="393" pos:column="21">sqlite3VdbeCurrentAddr<pos:position pos:line="393" pos:column="43"/></name><argument_list pos:line="393" pos:column="43">(<argument><expr><name pos:line="393" pos:column="44">v<pos:position pos:line="393" pos:column="45"/></name></expr></argument>)<pos:position pos:line="393" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="393" pos:column="47"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="394" pos:column="9">sqlite3VdbeVerifyNoMallocRequired<pos:position pos:line="394" pos:column="42"/></name><argument_list pos:line="394" pos:column="42">(<argument><expr><name pos:line="394" pos:column="43">v<pos:position pos:line="394" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="394" pos:column="46">ArraySize<pos:position pos:line="394" pos:column="55"/></name><argument_list pos:line="394" pos:column="55">(<argument><expr><name pos:line="394" pos:column="56">setMeta6<pos:position pos:line="394" pos:column="64"/></name></expr></argument>)<pos:position pos:line="394" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="394" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="395" pos:column="9">aOp<pos:position pos:line="395" pos:column="12"/></name> <operator pos:line="395" pos:column="13">=<pos:position pos:line="395" pos:column="14"/></operator> <call><name pos:line="395" pos:column="15">sqlite3VdbeAddOpList<pos:position pos:line="395" pos:column="35"/></name><argument_list pos:line="395" pos:column="35">(<argument><expr><name pos:line="395" pos:column="36">v<pos:position pos:line="395" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="395" pos:column="39">ArraySize<pos:position pos:line="395" pos:column="48"/></name><argument_list pos:line="395" pos:column="48">(<argument><expr><name pos:line="395" pos:column="49">setMeta6<pos:position pos:line="395" pos:column="57"/></name></expr></argument>)<pos:position pos:line="395" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="395" pos:column="60">setMeta6<pos:position pos:line="395" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="395" pos:column="70">iLn<pos:position pos:line="395" pos:column="73"/></name></expr></argument>)<pos:position pos:line="395" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="75"/></expr_stmt>
        <if pos:line="396" pos:column="9">if<condition pos:line="396" pos:column="11">( <expr><call><name pos:line="396" pos:column="13">ONLY_IF_REALLOC_STRESS<pos:position pos:line="396" pos:column="35"/></name><argument_list pos:line="396" pos:column="35">(<argument><expr><name pos:line="396" pos:column="36">aOp<pos:position pos:line="396" pos:column="39"/></name><operator pos:line="396" pos:column="39">==<pos:position pos:line="396" pos:column="41"/></operator><literal type="number" pos:line="396" pos:column="41">0<pos:position pos:line="396" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="396" pos:column="43"/></argument_list></call></expr> )<pos:position pos:line="396" pos:column="45"/></condition><then pos:line="396" pos:column="45"> <block type="pseudo"><break pos:line="396" pos:column="46">break;<pos:position pos:line="396" pos:column="52"/></break></block></then></if>
        <expr_stmt><expr><name><name pos:line="397" pos:column="9">aOp<pos:position pos:line="397" pos:column="12"/></name><index pos:line="397" pos:column="12">[<expr><literal type="number" pos:line="397" pos:column="13">0<pos:position pos:line="397" pos:column="14"/></literal></expr>]<pos:position pos:line="397" pos:column="15"/></index></name><operator pos:line="397" pos:column="15">.<pos:position pos:line="397" pos:column="16"/></operator><name pos:line="397" pos:column="16">p1<pos:position pos:line="397" pos:column="18"/></name> <operator pos:line="397" pos:column="19">=<pos:position pos:line="397" pos:column="20"/></operator> <name pos:line="397" pos:column="21">iDb<pos:position pos:line="397" pos:column="24"/></name></expr>;<pos:position pos:line="397" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="398" pos:column="9">aOp<pos:position pos:line="398" pos:column="12"/></name><index pos:line="398" pos:column="12">[<expr><literal type="number" pos:line="398" pos:column="13">1<pos:position pos:line="398" pos:column="14"/></literal></expr>]<pos:position pos:line="398" pos:column="15"/></index></name><operator pos:line="398" pos:column="15">.<pos:position pos:line="398" pos:column="16"/></operator><name pos:line="398" pos:column="16">p1<pos:position pos:line="398" pos:column="18"/></name> <operator pos:line="398" pos:column="19">=<pos:position pos:line="398" pos:column="20"/></operator> <name pos:line="398" pos:column="21">iDb<pos:position pos:line="398" pos:column="24"/></name></expr>;<pos:position pos:line="398" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="399" pos:column="9">aOp<pos:position pos:line="399" pos:column="12"/></name><index pos:line="399" pos:column="12">[<expr><literal type="number" pos:line="399" pos:column="13">2<pos:position pos:line="399" pos:column="14"/></literal></expr>]<pos:position pos:line="399" pos:column="15"/></index></name><operator pos:line="399" pos:column="15">.<pos:position pos:line="399" pos:column="16"/></operator><name pos:line="399" pos:column="16">p2<pos:position pos:line="399" pos:column="18"/></name> <operator pos:line="399" pos:column="19">=<pos:position pos:line="399" pos:column="20"/></operator> <name pos:line="399" pos:column="21">iAddr<pos:position pos:line="399" pos:column="26"/></name><operator pos:line="399" pos:column="26">+<pos:position pos:line="399" pos:column="27"/></operator><literal type="number" pos:line="399" pos:column="27">4<pos:position pos:line="399" pos:column="28"/></literal></expr>;<pos:position pos:line="399" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="400" pos:column="9">aOp<pos:position pos:line="400" pos:column="12"/></name><index pos:line="400" pos:column="12">[<expr><literal type="number" pos:line="400" pos:column="13">4<pos:position pos:line="400" pos:column="14"/></literal></expr>]<pos:position pos:line="400" pos:column="15"/></index></name><operator pos:line="400" pos:column="15">.<pos:position pos:line="400" pos:column="16"/></operator><name pos:line="400" pos:column="16">p1<pos:position pos:line="400" pos:column="18"/></name> <operator pos:line="400" pos:column="19">=<pos:position pos:line="400" pos:column="20"/></operator> <name pos:line="400" pos:column="21">iDb<pos:position pos:line="400" pos:column="24"/></name></expr>;<pos:position pos:line="400" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="401" pos:column="9">aOp<pos:position pos:line="401" pos:column="12"/></name><index pos:line="401" pos:column="12">[<expr><literal type="number" pos:line="401" pos:column="13">4<pos:position pos:line="401" pos:column="14"/></literal></expr>]<pos:position pos:line="401" pos:column="15"/></index></name><operator pos:line="401" pos:column="15">.<pos:position pos:line="401" pos:column="16"/></operator><name pos:line="401" pos:column="16">p3<pos:position pos:line="401" pos:column="18"/></name> <operator pos:line="401" pos:column="19">=<pos:position pos:line="401" pos:column="20"/></operator> <name pos:line="401" pos:column="21">eAuto<pos:position pos:line="401" pos:column="26"/></name> <operator pos:line="401" pos:column="27">-<pos:position pos:line="401" pos:column="28"/></operator> <literal type="number" pos:line="401" pos:column="29">1<pos:position pos:line="401" pos:column="30"/></literal></expr>;<pos:position pos:line="401" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="402" pos:column="9">sqlite3VdbeUsesBtree<pos:position pos:line="402" pos:column="29"/></name><argument_list pos:line="402" pos:column="29">(<argument><expr><name pos:line="402" pos:column="30">v<pos:position pos:line="402" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="402" pos:column="33">iDb<pos:position pos:line="402" pos:column="36"/></name></expr></argument>)<pos:position pos:line="402" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="403" pos:column="8"/></block></then></if>
    }<pos:position pos:line="404" pos:column="6"/></block></else></if>
    <break pos:line="405" pos:column="5">break;<pos:position pos:line="405" pos:column="11"/></break>
  }<pos:position pos:line="406" pos:column="4"/></block>
<cpp:endif pos:line="407" pos:column="1">#<cpp:directive pos:line="407" pos:column="2">endif<pos:position pos:line="407" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="409" pos:column="3">/*
  **  PRAGMA [schema.]incremental_vacuum(N)
  **
  ** Do N steps of incremental vacuuming on a database.
  */</comment>
<cpp:ifndef pos:line="414" pos:column="1">#<cpp:directive pos:line="414" pos:column="2">ifndef<pos:position pos:line="414" pos:column="8"/></cpp:directive> <name pos:line="414" pos:column="9">SQLITE_OMIT_AUTOVACUUM<pos:position pos:line="414" pos:column="31"/></name></cpp:ifndef>
  <case pos:line="415" pos:column="3">case <expr><name pos:line="415" pos:column="8">PragTyp_INCREMENTAL_VACUUM<pos:position pos:line="415" pos:column="34"/></name></expr>:<pos:position pos:line="415" pos:column="35"/></case> <block pos:line="415" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="416" pos:column="5">int<pos:position pos:line="416" pos:column="8"/></name></type> <name pos:line="416" pos:column="9">iLimit<pos:position pos:line="416" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="416" pos:column="17">addr<pos:position pos:line="416" pos:column="21"/></name></decl>;<pos:position pos:line="416" pos:column="22"/></decl_stmt>
    <if pos:line="417" pos:column="5">if<condition pos:line="417" pos:column="7">( <expr><name pos:line="417" pos:column="9">zRight<pos:position pos:line="417" pos:column="15"/></name><operator pos:line="417" pos:column="15">==<pos:position pos:line="417" pos:column="17"/></operator><literal type="number" pos:line="417" pos:column="17">0<pos:position pos:line="417" pos:column="18"/></literal> <operator pos:line="417" pos:column="19">||<pos:position pos:line="417" pos:column="21"/></operator> <operator pos:line="417" pos:column="22">!<pos:position pos:line="417" pos:column="23"/></operator><call><name pos:line="417" pos:column="23">sqlite3GetInt32<pos:position pos:line="417" pos:column="38"/></name><argument_list pos:line="417" pos:column="38">(<argument><expr><name pos:line="417" pos:column="39">zRight<pos:position pos:line="417" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="417" pos:column="47">&amp;<pos:position pos:line="417" pos:column="52"/></operator><name pos:line="417" pos:column="48">iLimit<pos:position pos:line="417" pos:column="54"/></name></expr></argument>)<pos:position pos:line="417" pos:column="55"/></argument_list></call> <operator pos:line="417" pos:column="56">||<pos:position pos:line="417" pos:column="58"/></operator> <name pos:line="417" pos:column="59">iLimit<pos:position pos:line="417" pos:column="65"/></name><operator pos:line="417" pos:column="65">&lt;=<pos:position pos:line="417" pos:column="70"/></operator><literal type="number" pos:line="417" pos:column="67">0<pos:position pos:line="417" pos:column="68"/></literal></expr> )<pos:position pos:line="417" pos:column="70"/></condition><then><block pos:line="417" pos:column="70">{
      <expr_stmt><expr><name pos:line="418" pos:column="7">iLimit<pos:position pos:line="418" pos:column="13"/></name> <operator pos:line="418" pos:column="14">=<pos:position pos:line="418" pos:column="15"/></operator> <literal type="number" pos:line="418" pos:column="16">0x7fffffff<pos:position pos:line="418" pos:column="26"/></literal></expr>;<pos:position pos:line="418" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="419" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="420" pos:column="5">sqlite3BeginWriteOperation<pos:position pos:line="420" pos:column="31"/></name><argument_list pos:line="420" pos:column="31">(<argument><expr><name pos:line="420" pos:column="32">pParse<pos:position pos:line="420" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="420" pos:column="40">0<pos:position pos:line="420" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="420" pos:column="43">iDb<pos:position pos:line="420" pos:column="46"/></name></expr></argument>)<pos:position pos:line="420" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="420" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="421" pos:column="5">sqlite3VdbeAddOp2<pos:position pos:line="421" pos:column="22"/></name><argument_list pos:line="421" pos:column="22">(<argument><expr><name pos:line="421" pos:column="23">v<pos:position pos:line="421" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="421" pos:column="26">OP_Integer<pos:position pos:line="421" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="421" pos:column="38">iLimit<pos:position pos:line="421" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="421" pos:column="46">1<pos:position pos:line="421" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="421" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="422" pos:column="5">addr<pos:position pos:line="422" pos:column="9"/></name> <operator pos:line="422" pos:column="10">=<pos:position pos:line="422" pos:column="11"/></operator> <call><name pos:line="422" pos:column="12">sqlite3VdbeAddOp1<pos:position pos:line="422" pos:column="29"/></name><argument_list pos:line="422" pos:column="29">(<argument><expr><name pos:line="422" pos:column="30">v<pos:position pos:line="422" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="422" pos:column="33">OP_IncrVacuum<pos:position pos:line="422" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="422" pos:column="48">iDb<pos:position pos:line="422" pos:column="51"/></name></expr></argument>)<pos:position pos:line="422" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="53"/></expr_stmt> <expr_stmt><expr><call><name pos:line="422" pos:column="54">VdbeCoverage<pos:position pos:line="422" pos:column="66"/></name><argument_list pos:line="422" pos:column="66">(<argument><expr><name pos:line="422" pos:column="67">v<pos:position pos:line="422" pos:column="68"/></name></expr></argument>)<pos:position pos:line="422" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="423" pos:column="5">sqlite3VdbeAddOp1<pos:position pos:line="423" pos:column="22"/></name><argument_list pos:line="423" pos:column="22">(<argument><expr><name pos:line="423" pos:column="23">v<pos:position pos:line="423" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="423" pos:column="26">OP_ResultRow<pos:position pos:line="423" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="423" pos:column="40">1<pos:position pos:line="423" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="423" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="424" pos:column="5">sqlite3VdbeAddOp2<pos:position pos:line="424" pos:column="22"/></name><argument_list pos:line="424" pos:column="22">(<argument><expr><name pos:line="424" pos:column="23">v<pos:position pos:line="424" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="26">OP_AddImm<pos:position pos:line="424" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="424" pos:column="37">1<pos:position pos:line="424" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="424" pos:column="40">-<pos:position pos:line="424" pos:column="41"/></operator><literal type="number" pos:line="424" pos:column="41">1<pos:position pos:line="424" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="424" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="425" pos:column="5">sqlite3VdbeAddOp2<pos:position pos:line="425" pos:column="22"/></name><argument_list pos:line="425" pos:column="22">(<argument><expr><name pos:line="425" pos:column="23">v<pos:position pos:line="425" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="425" pos:column="26">OP_IfPos<pos:position pos:line="425" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="425" pos:column="36">1<pos:position pos:line="425" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="425" pos:column="39">addr<pos:position pos:line="425" pos:column="43"/></name></expr></argument>)<pos:position pos:line="425" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="45"/></expr_stmt> <expr_stmt><expr><call><name pos:line="425" pos:column="46">VdbeCoverage<pos:position pos:line="425" pos:column="58"/></name><argument_list pos:line="425" pos:column="58">(<argument><expr><name pos:line="425" pos:column="59">v<pos:position pos:line="425" pos:column="60"/></name></expr></argument>)<pos:position pos:line="425" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="426" pos:column="5">sqlite3VdbeJumpHere<pos:position pos:line="426" pos:column="24"/></name><argument_list pos:line="426" pos:column="24">(<argument><expr><name pos:line="426" pos:column="25">v<pos:position pos:line="426" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="426" pos:column="28">addr<pos:position pos:line="426" pos:column="32"/></name></expr></argument>)<pos:position pos:line="426" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="426" pos:column="34"/></expr_stmt>
    <break pos:line="427" pos:column="5">break;<pos:position pos:line="427" pos:column="11"/></break>
  }<pos:position pos:line="428" pos:column="4"/></block>
<cpp:endif pos:line="429" pos:column="1">#<cpp:directive pos:line="429" pos:column="2">endif<pos:position pos:line="429" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifndef pos:line="431" pos:column="1">#<cpp:directive pos:line="431" pos:column="2">ifndef<pos:position pos:line="431" pos:column="8"/></cpp:directive> <name pos:line="431" pos:column="9">SQLITE_OMIT_PAGER_PRAGMAS<pos:position pos:line="431" pos:column="34"/></name></cpp:ifndef>
  <comment type="block" pos:line="432" pos:column="3">/*
  **  PRAGMA [schema.]cache_size
  **  PRAGMA [schema.]cache_size=N
  **
  ** The first form reports the current local setting for the
  ** page cache size. The second form sets the local
  ** page cache size value.  If N is positive then that is the
  ** number of pages in the cache.  If N is negative, then the
  ** number of pages is adjusted so that the cache uses -N kibibytes
  ** of memory.
  */</comment>
  <case pos:line="443" pos:column="3">case <expr><name pos:line="443" pos:column="8">PragTyp_CACHE_SIZE<pos:position pos:line="443" pos:column="26"/></name></expr>:<pos:position pos:line="443" pos:column="27"/></case> <block pos:line="443" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="444" pos:column="5">assert<pos:position pos:line="444" pos:column="11"/></name><argument_list pos:line="444" pos:column="11">( <argument><expr><call><name pos:line="444" pos:column="13">sqlite3SchemaMutexHeld<pos:position pos:line="444" pos:column="35"/></name><argument_list pos:line="444" pos:column="35">(<argument><expr><name pos:line="444" pos:column="36">db<pos:position pos:line="444" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="444" pos:column="40">iDb<pos:position pos:line="444" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="444" pos:column="45">0<pos:position pos:line="444" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="444" pos:column="47"/></argument_list></call></expr></argument> )<pos:position pos:line="444" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="444" pos:column="50"/></expr_stmt>
    <if pos:line="445" pos:column="5">if<condition pos:line="445" pos:column="7">( <expr><operator pos:line="445" pos:column="9">!<pos:position pos:line="445" pos:column="10"/></operator><name pos:line="445" pos:column="10">zRight<pos:position pos:line="445" pos:column="16"/></name></expr> )<pos:position pos:line="445" pos:column="18"/></condition><then><block pos:line="445" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="446" pos:column="7">returnSingleInt<pos:position pos:line="446" pos:column="22"/></name><argument_list pos:line="446" pos:column="22">(<argument><expr><name pos:line="446" pos:column="23">v<pos:position pos:line="446" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="446" pos:column="26">pDb<pos:position pos:line="446" pos:column="29"/></name><operator pos:line="446" pos:column="29">-&gt;<pos:position pos:line="446" pos:column="34"/></operator><name pos:line="446" pos:column="31">pSchema<pos:position pos:line="446" pos:column="38"/></name><operator pos:line="446" pos:column="38">-&gt;<pos:position pos:line="446" pos:column="43"/></operator><name pos:line="446" pos:column="40">cache_size<pos:position pos:line="446" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="446" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="447" pos:column="6"/></block></then><else pos:line="447" pos:column="6">else<block pos:line="447" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="448" pos:column="7">int<pos:position pos:line="448" pos:column="10"/></name></type> <name pos:line="448" pos:column="11">size<pos:position pos:line="448" pos:column="15"/></name> <init pos:line="448" pos:column="16">= <expr><call><name pos:line="448" pos:column="18">sqlite3Atoi<pos:position pos:line="448" pos:column="29"/></name><argument_list pos:line="448" pos:column="29">(<argument><expr><name pos:line="448" pos:column="30">zRight<pos:position pos:line="448" pos:column="36"/></name></expr></argument>)<pos:position pos:line="448" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="448" pos:column="38"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="449" pos:column="7">pDb<pos:position pos:line="449" pos:column="10"/></name><operator pos:line="449" pos:column="10">-&gt;<pos:position pos:line="449" pos:column="15"/></operator><name pos:line="449" pos:column="12">pSchema<pos:position pos:line="449" pos:column="19"/></name><operator pos:line="449" pos:column="19">-&gt;<pos:position pos:line="449" pos:column="24"/></operator><name pos:line="449" pos:column="21">cache_size<pos:position pos:line="449" pos:column="31"/></name></name> <operator pos:line="449" pos:column="32">=<pos:position pos:line="449" pos:column="33"/></operator> <name pos:line="449" pos:column="34">size<pos:position pos:line="449" pos:column="38"/></name></expr>;<pos:position pos:line="449" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="450" pos:column="7">sqlite3BtreeSetCacheSize<pos:position pos:line="450" pos:column="31"/></name><argument_list pos:line="450" pos:column="31">(<argument><expr><name><name pos:line="450" pos:column="32">pDb<pos:position pos:line="450" pos:column="35"/></name><operator pos:line="450" pos:column="35">-&gt;<pos:position pos:line="450" pos:column="40"/></operator><name pos:line="450" pos:column="37">pBt<pos:position pos:line="450" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="450" pos:column="42">pDb<pos:position pos:line="450" pos:column="45"/></name><operator pos:line="450" pos:column="45">-&gt;<pos:position pos:line="450" pos:column="50"/></operator><name pos:line="450" pos:column="47">pSchema<pos:position pos:line="450" pos:column="54"/></name><operator pos:line="450" pos:column="54">-&gt;<pos:position pos:line="450" pos:column="59"/></operator><name pos:line="450" pos:column="56">cache_size<pos:position pos:line="450" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="450" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="451" pos:column="6"/></block></else></if>
    <break pos:line="452" pos:column="5">break;<pos:position pos:line="452" pos:column="11"/></break>
  }<pos:position pos:line="453" pos:column="4"/></block>

  <comment type="block" pos:line="455" pos:column="3">/*
  **  PRAGMA [schema.]cache_spill
  **  PRAGMA cache_spill=BOOLEAN
  **  PRAGMA [schema.]cache_spill=N
  **
  ** The first form reports the current local setting for the
  ** page cache spill size. The second form turns cache spill on
  ** or off.  When turnning cache spill on, the size is set to the
  ** current cache_size.  The third form sets a spill size that
  ** may be different form the cache size.
  ** If N is positive then that is the
  ** number of pages in the cache.  If N is negative, then the
  ** number of pages is adjusted so that the cache uses -N kibibytes
  ** of memory.
  **
  ** If the number of cache_spill pages is less then the number of
  ** cache_size pages, no spilling occurs until the page count exceeds
  ** the number of cache_size pages.
  **
  ** The cache_spill=BOOLEAN setting applies to all attached schemas,
  ** not just the schema specified.
  */</comment>
  <case pos:line="477" pos:column="3">case <expr><name pos:line="477" pos:column="8">PragTyp_CACHE_SPILL<pos:position pos:line="477" pos:column="27"/></name></expr>:<pos:position pos:line="477" pos:column="28"/></case> <block pos:line="477" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="478" pos:column="5">assert<pos:position pos:line="478" pos:column="11"/></name><argument_list pos:line="478" pos:column="11">( <argument><expr><call><name pos:line="478" pos:column="13">sqlite3SchemaMutexHeld<pos:position pos:line="478" pos:column="35"/></name><argument_list pos:line="478" pos:column="35">(<argument><expr><name pos:line="478" pos:column="36">db<pos:position pos:line="478" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="478" pos:column="40">iDb<pos:position pos:line="478" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="478" pos:column="45">0<pos:position pos:line="478" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="478" pos:column="47"/></argument_list></call></expr></argument> )<pos:position pos:line="478" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="478" pos:column="50"/></expr_stmt>
    <if pos:line="479" pos:column="5">if<condition pos:line="479" pos:column="7">( <expr><operator pos:line="479" pos:column="9">!<pos:position pos:line="479" pos:column="10"/></operator><name pos:line="479" pos:column="10">zRight<pos:position pos:line="479" pos:column="16"/></name></expr> )<pos:position pos:line="479" pos:column="18"/></condition><then><block pos:line="479" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="480" pos:column="7">returnSingleInt<pos:position pos:line="480" pos:column="22"/></name><argument_list pos:line="480" pos:column="22">(<argument><expr><name pos:line="480" pos:column="23">v<pos:position pos:line="480" pos:column="24"/></name></expr></argument>,
         <argument><expr><ternary><condition><expr><operator pos:line="481" pos:column="10">(<pos:position pos:line="481" pos:column="11"/></operator><name><name pos:line="481" pos:column="11">db<pos:position pos:line="481" pos:column="13"/></name><operator pos:line="481" pos:column="13">-&gt;<pos:position pos:line="481" pos:column="18"/></operator><name pos:line="481" pos:column="15">flags<pos:position pos:line="481" pos:column="20"/></name></name> <operator pos:line="481" pos:column="21">&amp;<pos:position pos:line="481" pos:column="26"/></operator> <name pos:line="481" pos:column="23">SQLITE_CacheSpill<pos:position pos:line="481" pos:column="40"/></name><operator pos:line="481" pos:column="40">)<pos:position pos:line="481" pos:column="41"/></operator><operator pos:line="481" pos:column="41">==<pos:position pos:line="481" pos:column="43"/></operator><literal type="number" pos:line="481" pos:column="43">0<pos:position pos:line="481" pos:column="44"/></literal></expr> ?<pos:position pos:line="481" pos:column="46"/></condition><then pos:line="481" pos:column="46"> <expr><literal type="number" pos:line="481" pos:column="47">0<pos:position pos:line="481" pos:column="48"/></literal></expr> <pos:position pos:line="481" pos:column="49"/></then><else pos:line="481" pos:column="49">: 
            <expr><call><name pos:line="482" pos:column="13">sqlite3BtreeSetSpillSize<pos:position pos:line="482" pos:column="37"/></name><argument_list pos:line="482" pos:column="37">(<argument><expr><name><name pos:line="482" pos:column="38">pDb<pos:position pos:line="482" pos:column="41"/></name><operator pos:line="482" pos:column="41">-&gt;<pos:position pos:line="482" pos:column="46"/></operator><name pos:line="482" pos:column="43">pBt<pos:position pos:line="482" pos:column="46"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="482" pos:column="47">0<pos:position pos:line="482" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="482" pos:column="49"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="482" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="482" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="483" pos:column="6"/></block></then><else pos:line="483" pos:column="6">else<block pos:line="483" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="484" pos:column="7">int<pos:position pos:line="484" pos:column="10"/></name></type> <name pos:line="484" pos:column="11">size<pos:position pos:line="484" pos:column="15"/></name> <init pos:line="484" pos:column="16">= <expr><literal type="number" pos:line="484" pos:column="18">1<pos:position pos:line="484" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="484" pos:column="20"/></decl_stmt>
      <if pos:line="485" pos:column="7">if<condition pos:line="485" pos:column="9">( <expr><call><name pos:line="485" pos:column="11">sqlite3GetInt32<pos:position pos:line="485" pos:column="26"/></name><argument_list pos:line="485" pos:column="26">(<argument><expr><name pos:line="485" pos:column="27">zRight<pos:position pos:line="485" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="485" pos:column="35">&amp;<pos:position pos:line="485" pos:column="40"/></operator><name pos:line="485" pos:column="36">size<pos:position pos:line="485" pos:column="40"/></name></expr></argument>)<pos:position pos:line="485" pos:column="41"/></argument_list></call></expr> )<pos:position pos:line="485" pos:column="43"/></condition><then><block pos:line="485" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="486" pos:column="9">sqlite3BtreeSetSpillSize<pos:position pos:line="486" pos:column="33"/></name><argument_list pos:line="486" pos:column="33">(<argument><expr><name><name pos:line="486" pos:column="34">pDb<pos:position pos:line="486" pos:column="37"/></name><operator pos:line="486" pos:column="37">-&gt;<pos:position pos:line="486" pos:column="42"/></operator><name pos:line="486" pos:column="39">pBt<pos:position pos:line="486" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="486" pos:column="44">size<pos:position pos:line="486" pos:column="48"/></name></expr></argument>)<pos:position pos:line="486" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="486" pos:column="50"/></expr_stmt>
      }<pos:position pos:line="487" pos:column="8"/></block></then></if>
      <if pos:line="488" pos:column="7">if<condition pos:line="488" pos:column="9">( <expr><call><name pos:line="488" pos:column="11">sqlite3GetBoolean<pos:position pos:line="488" pos:column="28"/></name><argument_list pos:line="488" pos:column="28">(<argument><expr><name pos:line="488" pos:column="29">zRight<pos:position pos:line="488" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="488" pos:column="37">size<pos:position pos:line="488" pos:column="41"/></name><operator pos:line="488" pos:column="41">!=<pos:position pos:line="488" pos:column="43"/></operator><literal type="number" pos:line="488" pos:column="43">0<pos:position pos:line="488" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="488" pos:column="45"/></argument_list></call></expr> )<pos:position pos:line="488" pos:column="47"/></condition><then><block pos:line="488" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="489" pos:column="9">db<pos:position pos:line="489" pos:column="11"/></name><operator pos:line="489" pos:column="11">-&gt;<pos:position pos:line="489" pos:column="16"/></operator><name pos:line="489" pos:column="13">flags<pos:position pos:line="489" pos:column="18"/></name></name> <operator pos:line="489" pos:column="19">|=<pos:position pos:line="489" pos:column="21"/></operator> <name pos:line="489" pos:column="22">SQLITE_CacheSpill<pos:position pos:line="489" pos:column="39"/></name></expr>;<pos:position pos:line="489" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="490" pos:column="8"/></block></then><else pos:line="490" pos:column="8">else<block pos:line="490" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="491" pos:column="9">db<pos:position pos:line="491" pos:column="11"/></name><operator pos:line="491" pos:column="11">-&gt;<pos:position pos:line="491" pos:column="16"/></operator><name pos:line="491" pos:column="13">flags<pos:position pos:line="491" pos:column="18"/></name></name> <operator pos:line="491" pos:column="19">&amp;=<pos:position pos:line="491" pos:column="25"/></operator> <operator pos:line="491" pos:column="22">~<pos:position pos:line="491" pos:column="23"/></operator><name pos:line="491" pos:column="23">SQLITE_CacheSpill<pos:position pos:line="491" pos:column="40"/></name></expr>;<pos:position pos:line="491" pos:column="41"/></expr_stmt>
      }<pos:position pos:line="492" pos:column="8"/></block></else></if>
      <expr_stmt><expr><call><name pos:line="493" pos:column="7">setAllPagerFlags<pos:position pos:line="493" pos:column="23"/></name><argument_list pos:line="493" pos:column="23">(<argument><expr><name pos:line="493" pos:column="24">db<pos:position pos:line="493" pos:column="26"/></name></expr></argument>)<pos:position pos:line="493" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="493" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="494" pos:column="6"/></block></else></if>
    <break pos:line="495" pos:column="5">break;<pos:position pos:line="495" pos:column="11"/></break>
  }<pos:position pos:line="496" pos:column="4"/></block>

  <comment type="block" pos:line="498" pos:column="3">/*
  **  PRAGMA [schema.]mmap_size(N)
  **
  ** Used to set mapping size limit. The mapping size limit is
  ** used to limit the aggregate size of all memory mapped regions of the
  ** database file. If this parameter is set to zero, then memory mapping
  ** is not used at all.  If N is negative, then the default memory map
  ** limit determined by sqlite3_config(SQLITE_CONFIG_MMAP_SIZE) is set.
  ** The parameter N is measured in bytes.
  **
  ** This value is advisory.  The underlying VFS is free to memory map
  ** as little or as much as it wants.  Except, if N is set to 0 then the
  ** upper layers will never invoke the xFetch interfaces to the VFS.
  */</comment>
  <case pos:line="512" pos:column="3">case <expr><name pos:line="512" pos:column="8">PragTyp_MMAP_SIZE<pos:position pos:line="512" pos:column="25"/></name></expr>:<pos:position pos:line="512" pos:column="26"/></case> <block pos:line="512" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="513" pos:column="5">sqlite3_int64<pos:position pos:line="513" pos:column="18"/></name></type> <name pos:line="513" pos:column="19">sz<pos:position pos:line="513" pos:column="21"/></name></decl>;<pos:position pos:line="513" pos:column="22"/></decl_stmt>
<cpp:if pos:line="514" pos:column="1">#<cpp:directive pos:line="514" pos:column="2">if<pos:position pos:line="514" pos:column="4"/></cpp:directive> <expr><name pos:line="514" pos:column="5">SQLITE_MAX_MMAP_SIZE<pos:position pos:line="514" pos:column="25"/></name><operator pos:line="514" pos:column="25">&gt;<pos:position pos:line="514" pos:column="29"/></operator><literal type="number" pos:line="514" pos:column="26">0<pos:position pos:line="514" pos:column="27"/></literal></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="515" pos:column="5">assert<pos:position pos:line="515" pos:column="11"/></name><argument_list pos:line="515" pos:column="11">( <argument><expr><call><name pos:line="515" pos:column="13">sqlite3SchemaMutexHeld<pos:position pos:line="515" pos:column="35"/></name><argument_list pos:line="515" pos:column="35">(<argument><expr><name pos:line="515" pos:column="36">db<pos:position pos:line="515" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="515" pos:column="40">iDb<pos:position pos:line="515" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="515" pos:column="45">0<pos:position pos:line="515" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="515" pos:column="47"/></argument_list></call></expr></argument> )<pos:position pos:line="515" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="515" pos:column="50"/></expr_stmt>
    <if pos:line="516" pos:column="5">if<condition pos:line="516" pos:column="7">( <expr><name pos:line="516" pos:column="9">zRight<pos:position pos:line="516" pos:column="15"/></name></expr> )<pos:position pos:line="516" pos:column="17"/></condition><then><block pos:line="516" pos:column="17">{
      <decl_stmt><decl><type><name pos:line="517" pos:column="7">int<pos:position pos:line="517" pos:column="10"/></name></type> <name pos:line="517" pos:column="11">ii<pos:position pos:line="517" pos:column="13"/></name></decl>;<pos:position pos:line="517" pos:column="14"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="518" pos:column="7">sqlite3DecOrHexToI64<pos:position pos:line="518" pos:column="27"/></name><argument_list pos:line="518" pos:column="27">(<argument><expr><name pos:line="518" pos:column="28">zRight<pos:position pos:line="518" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="518" pos:column="36">&amp;<pos:position pos:line="518" pos:column="41"/></operator><name pos:line="518" pos:column="37">sz<pos:position pos:line="518" pos:column="39"/></name></expr></argument>)<pos:position pos:line="518" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="518" pos:column="41"/></expr_stmt>
      <if pos:line="519" pos:column="7">if<condition pos:line="519" pos:column="9">( <expr><name pos:line="519" pos:column="11">sz<pos:position pos:line="519" pos:column="13"/></name><operator pos:line="519" pos:column="13">&lt;<pos:position pos:line="519" pos:column="17"/></operator><literal type="number" pos:line="519" pos:column="14">0<pos:position pos:line="519" pos:column="15"/></literal></expr> )<pos:position pos:line="519" pos:column="17"/></condition><then pos:line="519" pos:column="17"> <block type="pseudo"><expr_stmt><expr><name pos:line="519" pos:column="18">sz<pos:position pos:line="519" pos:column="20"/></name> <operator pos:line="519" pos:column="21">=<pos:position pos:line="519" pos:column="22"/></operator> <name><name pos:line="519" pos:column="23">sqlite3GlobalConfig<pos:position pos:line="519" pos:column="42"/></name><operator pos:line="519" pos:column="42">.<pos:position pos:line="519" pos:column="43"/></operator><name pos:line="519" pos:column="43">szMmap<pos:position pos:line="519" pos:column="49"/></name></name></expr>;<pos:position pos:line="519" pos:column="50"/></expr_stmt></block></then></if>
      <if pos:line="520" pos:column="7">if<condition pos:line="520" pos:column="9">( <expr><name><name pos:line="520" pos:column="11">pId2<pos:position pos:line="520" pos:column="15"/></name><operator pos:line="520" pos:column="15">-&gt;<pos:position pos:line="520" pos:column="20"/></operator><name pos:line="520" pos:column="17">n<pos:position pos:line="520" pos:column="18"/></name></name><operator pos:line="520" pos:column="18">==<pos:position pos:line="520" pos:column="20"/></operator><literal type="number" pos:line="520" pos:column="20">0<pos:position pos:line="520" pos:column="21"/></literal></expr> )<pos:position pos:line="520" pos:column="23"/></condition><then pos:line="520" pos:column="23"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="520" pos:column="24">db<pos:position pos:line="520" pos:column="26"/></name><operator pos:line="520" pos:column="26">-&gt;<pos:position pos:line="520" pos:column="31"/></operator><name pos:line="520" pos:column="28">szMmap<pos:position pos:line="520" pos:column="34"/></name></name> <operator pos:line="520" pos:column="35">=<pos:position pos:line="520" pos:column="36"/></operator> <name pos:line="520" pos:column="37">sz<pos:position pos:line="520" pos:column="39"/></name></expr>;<pos:position pos:line="520" pos:column="40"/></expr_stmt></block></then></if>
      <for pos:line="521" pos:column="7">for<control pos:line="521" pos:column="10">(<init><expr><name pos:line="521" pos:column="11">ii<pos:position pos:line="521" pos:column="13"/></name><operator pos:line="521" pos:column="13">=<pos:position pos:line="521" pos:column="14"/></operator><name><name pos:line="521" pos:column="14">db<pos:position pos:line="521" pos:column="16"/></name><operator pos:line="521" pos:column="16">-&gt;<pos:position pos:line="521" pos:column="21"/></operator><name pos:line="521" pos:column="18">nDb<pos:position pos:line="521" pos:column="21"/></name></name><operator pos:line="521" pos:column="21">-<pos:position pos:line="521" pos:column="22"/></operator><literal type="number" pos:line="521" pos:column="22">1<pos:position pos:line="521" pos:column="23"/></literal></expr>;<pos:position pos:line="521" pos:column="24"/></init> <condition><expr><name pos:line="521" pos:column="25">ii<pos:position pos:line="521" pos:column="27"/></name><operator pos:line="521" pos:column="27">&gt;=<pos:position pos:line="521" pos:column="32"/></operator><literal type="number" pos:line="521" pos:column="29">0<pos:position pos:line="521" pos:column="30"/></literal></expr>;<pos:position pos:line="521" pos:column="31"/></condition> <incr><expr><name pos:line="521" pos:column="32">ii<pos:position pos:line="521" pos:column="34"/></name><operator pos:line="521" pos:column="34">--<pos:position pos:line="521" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="521" pos:column="37"/></control><block pos:line="521" pos:column="37">{
        <if pos:line="522" pos:column="9">if<condition pos:line="522" pos:column="11">( <expr><name><name pos:line="522" pos:column="13">db<pos:position pos:line="522" pos:column="15"/></name><operator pos:line="522" pos:column="15">-&gt;<pos:position pos:line="522" pos:column="20"/></operator><name pos:line="522" pos:column="17">aDb<pos:position pos:line="522" pos:column="20"/></name><index pos:line="522" pos:column="20">[<expr><name pos:line="522" pos:column="21">ii<pos:position pos:line="522" pos:column="23"/></name></expr>]<pos:position pos:line="522" pos:column="24"/></index></name><operator pos:line="522" pos:column="24">.<pos:position pos:line="522" pos:column="25"/></operator><name pos:line="522" pos:column="25">pBt<pos:position pos:line="522" pos:column="28"/></name> <operator pos:line="522" pos:column="29">&amp;&amp;<pos:position pos:line="522" pos:column="39"/></operator> <operator pos:line="522" pos:column="32">(<pos:position pos:line="522" pos:column="33"/></operator><name pos:line="522" pos:column="33">ii<pos:position pos:line="522" pos:column="35"/></name><operator pos:line="522" pos:column="35">==<pos:position pos:line="522" pos:column="37"/></operator><name pos:line="522" pos:column="37">iDb<pos:position pos:line="522" pos:column="40"/></name> <operator pos:line="522" pos:column="41">||<pos:position pos:line="522" pos:column="43"/></operator> <name><name pos:line="522" pos:column="44">pId2<pos:position pos:line="522" pos:column="48"/></name><operator pos:line="522" pos:column="48">-&gt;<pos:position pos:line="522" pos:column="53"/></operator><name pos:line="522" pos:column="50">n<pos:position pos:line="522" pos:column="51"/></name></name><operator pos:line="522" pos:column="51">==<pos:position pos:line="522" pos:column="53"/></operator><literal type="number" pos:line="522" pos:column="53">0<pos:position pos:line="522" pos:column="54"/></literal><operator pos:line="522" pos:column="54">)<pos:position pos:line="522" pos:column="55"/></operator></expr> )<pos:position pos:line="522" pos:column="57"/></condition><then><block pos:line="522" pos:column="57">{
          <expr_stmt><expr><call><name pos:line="523" pos:column="11">sqlite3BtreeSetMmapLimit<pos:position pos:line="523" pos:column="35"/></name><argument_list pos:line="523" pos:column="35">(<argument><expr><name><name pos:line="523" pos:column="36">db<pos:position pos:line="523" pos:column="38"/></name><operator pos:line="523" pos:column="38">-&gt;<pos:position pos:line="523" pos:column="43"/></operator><name pos:line="523" pos:column="40">aDb<pos:position pos:line="523" pos:column="43"/></name><index pos:line="523" pos:column="43">[<expr><name pos:line="523" pos:column="44">ii<pos:position pos:line="523" pos:column="46"/></name></expr>]<pos:position pos:line="523" pos:column="47"/></index></name><operator pos:line="523" pos:column="47">.<pos:position pos:line="523" pos:column="48"/></operator><name pos:line="523" pos:column="48">pBt<pos:position pos:line="523" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="523" pos:column="53">sz<pos:position pos:line="523" pos:column="55"/></name></expr></argument>)<pos:position pos:line="523" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="523" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="524" pos:column="10"/></block></then></if>
      }<pos:position pos:line="525" pos:column="8"/></block></for>
    }<pos:position pos:line="526" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="527" pos:column="5">sz<pos:position pos:line="527" pos:column="7"/></name> <operator pos:line="527" pos:column="8">=<pos:position pos:line="527" pos:column="9"/></operator> <operator pos:line="527" pos:column="10">-<pos:position pos:line="527" pos:column="11"/></operator><literal type="number" pos:line="527" pos:column="11">1<pos:position pos:line="527" pos:column="12"/></literal></expr>;<pos:position pos:line="527" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="528" pos:column="5">rc<pos:position pos:line="528" pos:column="7"/></name> <operator pos:line="528" pos:column="8">=<pos:position pos:line="528" pos:column="9"/></operator> <call><name pos:line="528" pos:column="10">sqlite3_file_control<pos:position pos:line="528" pos:column="30"/></name><argument_list pos:line="528" pos:column="30">(<argument><expr><name pos:line="528" pos:column="31">db<pos:position pos:line="528" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="528" pos:column="35">zDb<pos:position pos:line="528" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="528" pos:column="40">SQLITE_FCNTL_MMAP_SIZE<pos:position pos:line="528" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="528" pos:column="64">&amp;<pos:position pos:line="528" pos:column="69"/></operator><name pos:line="528" pos:column="65">sz<pos:position pos:line="528" pos:column="67"/></name></expr></argument>)<pos:position pos:line="528" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="528" pos:column="69"/></expr_stmt>
<cpp:else pos:line="529" pos:column="1">#<cpp:directive pos:line="529" pos:column="2">else<pos:position pos:line="529" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="530" pos:column="5">sz<pos:position pos:line="530" pos:column="7"/></name> <operator pos:line="530" pos:column="8">=<pos:position pos:line="530" pos:column="9"/></operator> <literal type="number" pos:line="530" pos:column="10">0<pos:position pos:line="530" pos:column="11"/></literal></expr>;<pos:position pos:line="530" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="531" pos:column="5">rc<pos:position pos:line="531" pos:column="7"/></name> <operator pos:line="531" pos:column="8">=<pos:position pos:line="531" pos:column="9"/></operator> <name pos:line="531" pos:column="10">SQLITE_OK<pos:position pos:line="531" pos:column="19"/></name></expr>;<pos:position pos:line="531" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="532" pos:column="1">#<cpp:directive pos:line="532" pos:column="2">endif<pos:position pos:line="532" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="533" pos:column="5">if<condition pos:line="533" pos:column="7">( <expr><name pos:line="533" pos:column="9">rc<pos:position pos:line="533" pos:column="11"/></name><operator pos:line="533" pos:column="11">==<pos:position pos:line="533" pos:column="13"/></operator><name pos:line="533" pos:column="13">SQLITE_OK<pos:position pos:line="533" pos:column="22"/></name></expr> )<pos:position pos:line="533" pos:column="24"/></condition><then><block pos:line="533" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="534" pos:column="7">returnSingleInt<pos:position pos:line="534" pos:column="22"/></name><argument_list pos:line="534" pos:column="22">(<argument><expr><name pos:line="534" pos:column="23">v<pos:position pos:line="534" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="534" pos:column="26">sz<pos:position pos:line="534" pos:column="28"/></name></expr></argument>)<pos:position pos:line="534" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="534" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="535" pos:column="6"/></block></then><elseif pos:line="535" pos:column="6">else <if pos:line="535" pos:column="11">if<condition pos:line="535" pos:column="13">( <expr><name pos:line="535" pos:column="15">rc<pos:position pos:line="535" pos:column="17"/></name><operator pos:line="535" pos:column="17">!=<pos:position pos:line="535" pos:column="19"/></operator><name pos:line="535" pos:column="19">SQLITE_NOTFOUND<pos:position pos:line="535" pos:column="34"/></name></expr> )<pos:position pos:line="535" pos:column="36"/></condition><then><block pos:line="535" pos:column="36">{
      <expr_stmt><expr><name><name pos:line="536" pos:column="7">pParse<pos:position pos:line="536" pos:column="13"/></name><operator pos:line="536" pos:column="13">-&gt;<pos:position pos:line="536" pos:column="18"/></operator><name pos:line="536" pos:column="15">nErr<pos:position pos:line="536" pos:column="19"/></name></name><operator pos:line="536" pos:column="19">++<pos:position pos:line="536" pos:column="21"/></operator></expr>;<pos:position pos:line="536" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="537" pos:column="7">pParse<pos:position pos:line="537" pos:column="13"/></name><operator pos:line="537" pos:column="13">-&gt;<pos:position pos:line="537" pos:column="18"/></operator><name pos:line="537" pos:column="15">rc<pos:position pos:line="537" pos:column="17"/></name></name> <operator pos:line="537" pos:column="18">=<pos:position pos:line="537" pos:column="19"/></operator> <name pos:line="537" pos:column="20">rc<pos:position pos:line="537" pos:column="22"/></name></expr>;<pos:position pos:line="537" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="538" pos:column="6"/></block></then></if></elseif></if>
    <break pos:line="539" pos:column="5">break;<pos:position pos:line="539" pos:column="11"/></break>
  }<pos:position pos:line="540" pos:column="4"/></block>

  <comment type="block" pos:line="542" pos:column="3">/*
  **   PRAGMA temp_store
  **   PRAGMA temp_store = "default"|"memory"|"file"
  **
  ** Return or set the local value of the temp_store flag.  Changing
  ** the local value does not make changes to the disk file and the default
  ** value will be restored the next time the database is opened.
  **
  ** Note that it is possible for the library compile-time options to
  ** override this setting
  */</comment>
  <case pos:line="553" pos:column="3">case <expr><name pos:line="553" pos:column="8">PragTyp_TEMP_STORE<pos:position pos:line="553" pos:column="26"/></name></expr>:<pos:position pos:line="553" pos:column="27"/></case> <block pos:line="553" pos:column="28">{
    <if pos:line="554" pos:column="5">if<condition pos:line="554" pos:column="7">( <expr><operator pos:line="554" pos:column="9">!<pos:position pos:line="554" pos:column="10"/></operator><name pos:line="554" pos:column="10">zRight<pos:position pos:line="554" pos:column="16"/></name></expr> )<pos:position pos:line="554" pos:column="18"/></condition><then><block pos:line="554" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="555" pos:column="7">returnSingleInt<pos:position pos:line="555" pos:column="22"/></name><argument_list pos:line="555" pos:column="22">(<argument><expr><name pos:line="555" pos:column="23">v<pos:position pos:line="555" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="555" pos:column="26">db<pos:position pos:line="555" pos:column="28"/></name><operator pos:line="555" pos:column="28">-&gt;<pos:position pos:line="555" pos:column="33"/></operator><name pos:line="555" pos:column="30">temp_store<pos:position pos:line="555" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="555" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="555" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="556" pos:column="6"/></block></then><else pos:line="556" pos:column="6">else<block pos:line="556" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="557" pos:column="7">changeTempStorage<pos:position pos:line="557" pos:column="24"/></name><argument_list pos:line="557" pos:column="24">(<argument><expr><name pos:line="557" pos:column="25">pParse<pos:position pos:line="557" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="557" pos:column="33">zRight<pos:position pos:line="557" pos:column="39"/></name></expr></argument>)<pos:position pos:line="557" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="557" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="558" pos:column="6"/></block></else></if>
    <break pos:line="559" pos:column="5">break;<pos:position pos:line="559" pos:column="11"/></break>
  }<pos:position pos:line="560" pos:column="4"/></block>

  <comment type="block" pos:line="562" pos:column="3">/*
  **   PRAGMA temp_store_directory
  **   PRAGMA temp_store_directory = ""|"directory_name"
  **
  ** Return or set the local value of the temp_store_directory flag.  Changing
  ** the value sets a specific directory to be used for temporary files.
  ** Setting to a null string reverts to the default temporary directory search.
  ** If temporary directory is changed, then invalidateTempStorage.
  **
  */</comment>
  <case pos:line="572" pos:column="3">case <expr><name pos:line="572" pos:column="8">PragTyp_TEMP_STORE_DIRECTORY<pos:position pos:line="572" pos:column="36"/></name></expr>:<pos:position pos:line="572" pos:column="37"/></case> <block pos:line="572" pos:column="38">{
    <if pos:line="573" pos:column="5">if<condition pos:line="573" pos:column="7">( <expr><operator pos:line="573" pos:column="9">!<pos:position pos:line="573" pos:column="10"/></operator><name pos:line="573" pos:column="10">zRight<pos:position pos:line="573" pos:column="16"/></name></expr> )<pos:position pos:line="573" pos:column="18"/></condition><then><block pos:line="573" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="574" pos:column="7">returnSingleText<pos:position pos:line="574" pos:column="23"/></name><argument_list pos:line="574" pos:column="23">(<argument><expr><name pos:line="574" pos:column="24">v<pos:position pos:line="574" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="574" pos:column="27">sqlite3_temp_directory<pos:position pos:line="574" pos:column="49"/></name></expr></argument>)<pos:position pos:line="574" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="574" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="575" pos:column="6"/></block></then><else pos:line="575" pos:column="6">else<block pos:line="575" pos:column="10">{
<cpp:ifndef pos:line="576" pos:column="1">#<cpp:directive pos:line="576" pos:column="2">ifndef<pos:position pos:line="576" pos:column="8"/></cpp:directive> <name pos:line="576" pos:column="9">SQLITE_OMIT_WSD<pos:position pos:line="576" pos:column="24"/></name></cpp:ifndef>
      <if pos:line="577" pos:column="7">if<condition pos:line="577" pos:column="9">( <expr><name><name pos:line="577" pos:column="11">zRight<pos:position pos:line="577" pos:column="17"/></name><index pos:line="577" pos:column="17">[<expr><literal type="number" pos:line="577" pos:column="18">0<pos:position pos:line="577" pos:column="19"/></literal></expr>]<pos:position pos:line="577" pos:column="20"/></index></name></expr> )<pos:position pos:line="577" pos:column="22"/></condition><then><block pos:line="577" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="578" pos:column="9">int<pos:position pos:line="578" pos:column="12"/></name></type> <name pos:line="578" pos:column="13">res<pos:position pos:line="578" pos:column="16"/></name></decl>;<pos:position pos:line="578" pos:column="17"/></decl_stmt>
        <expr_stmt><expr><name pos:line="579" pos:column="9">rc<pos:position pos:line="579" pos:column="11"/></name> <operator pos:line="579" pos:column="12">=<pos:position pos:line="579" pos:column="13"/></operator> <call><name pos:line="579" pos:column="14">sqlite3OsAccess<pos:position pos:line="579" pos:column="29"/></name><argument_list pos:line="579" pos:column="29">(<argument><expr><name><name pos:line="579" pos:column="30">db<pos:position pos:line="579" pos:column="32"/></name><operator pos:line="579" pos:column="32">-&gt;<pos:position pos:line="579" pos:column="37"/></operator><name pos:line="579" pos:column="34">pVfs<pos:position pos:line="579" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="579" pos:column="40">zRight<pos:position pos:line="579" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="579" pos:column="48">SQLITE_ACCESS_READWRITE<pos:position pos:line="579" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="579" pos:column="73">&amp;<pos:position pos:line="579" pos:column="78"/></operator><name pos:line="579" pos:column="74">res<pos:position pos:line="579" pos:column="77"/></name></expr></argument>)<pos:position pos:line="579" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="579" pos:column="79"/></expr_stmt>
        <if pos:line="580" pos:column="9">if<condition pos:line="580" pos:column="11">( <expr><name pos:line="580" pos:column="13">rc<pos:position pos:line="580" pos:column="15"/></name><operator pos:line="580" pos:column="15">!=<pos:position pos:line="580" pos:column="17"/></operator><name pos:line="580" pos:column="17">SQLITE_OK<pos:position pos:line="580" pos:column="26"/></name> <operator pos:line="580" pos:column="27">||<pos:position pos:line="580" pos:column="29"/></operator> <name pos:line="580" pos:column="30">res<pos:position pos:line="580" pos:column="33"/></name><operator pos:line="580" pos:column="33">==<pos:position pos:line="580" pos:column="35"/></operator><literal type="number" pos:line="580" pos:column="35">0<pos:position pos:line="580" pos:column="36"/></literal></expr> )<pos:position pos:line="580" pos:column="38"/></condition><then><block pos:line="580" pos:column="38">{
          <expr_stmt><expr><call><name pos:line="581" pos:column="11">sqlite3ErrorMsg<pos:position pos:line="581" pos:column="26"/></name><argument_list pos:line="581" pos:column="26">(<argument><expr><name pos:line="581" pos:column="27">pParse<pos:position pos:line="581" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="581" pos:column="35">"not a writable directory"<pos:position pos:line="581" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="581" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="581" pos:column="63"/></expr_stmt>
          <goto pos:line="582" pos:column="11">goto <name pos:line="582" pos:column="16">pragma_out<pos:position pos:line="582" pos:column="26"/></name>;<pos:position pos:line="582" pos:column="27"/></goto>
        }<pos:position pos:line="583" pos:column="10"/></block></then></if>
      }<pos:position pos:line="584" pos:column="8"/></block></then></if>
      <if pos:line="585" pos:column="7">if<condition pos:line="585" pos:column="9">( <expr><name pos:line="585" pos:column="11">SQLITE_TEMP_STORE<pos:position pos:line="585" pos:column="28"/></name><operator pos:line="585" pos:column="28">==<pos:position pos:line="585" pos:column="30"/></operator><literal type="number" pos:line="585" pos:column="30">0<pos:position pos:line="585" pos:column="31"/></literal>
       <operator pos:line="586" pos:column="8">||<pos:position pos:line="586" pos:column="10"/></operator> <operator pos:line="586" pos:column="11">(<pos:position pos:line="586" pos:column="12"/></operator><name pos:line="586" pos:column="12">SQLITE_TEMP_STORE<pos:position pos:line="586" pos:column="29"/></name><operator pos:line="586" pos:column="29">==<pos:position pos:line="586" pos:column="31"/></operator><literal type="number" pos:line="586" pos:column="31">1<pos:position pos:line="586" pos:column="32"/></literal> <operator pos:line="586" pos:column="33">&amp;&amp;<pos:position pos:line="586" pos:column="43"/></operator> <name><name pos:line="586" pos:column="36">db<pos:position pos:line="586" pos:column="38"/></name><operator pos:line="586" pos:column="38">-&gt;<pos:position pos:line="586" pos:column="43"/></operator><name pos:line="586" pos:column="40">temp_store<pos:position pos:line="586" pos:column="50"/></name></name><operator pos:line="586" pos:column="50">&lt;=<pos:position pos:line="586" pos:column="55"/></operator><literal type="number" pos:line="586" pos:column="52">1<pos:position pos:line="586" pos:column="53"/></literal><operator pos:line="586" pos:column="53">)<pos:position pos:line="586" pos:column="54"/></operator>
       <operator pos:line="587" pos:column="8">||<pos:position pos:line="587" pos:column="10"/></operator> <operator pos:line="587" pos:column="11">(<pos:position pos:line="587" pos:column="12"/></operator><name pos:line="587" pos:column="12">SQLITE_TEMP_STORE<pos:position pos:line="587" pos:column="29"/></name><operator pos:line="587" pos:column="29">==<pos:position pos:line="587" pos:column="31"/></operator><literal type="number" pos:line="587" pos:column="31">2<pos:position pos:line="587" pos:column="32"/></literal> <operator pos:line="587" pos:column="33">&amp;&amp;<pos:position pos:line="587" pos:column="43"/></operator> <name><name pos:line="587" pos:column="36">db<pos:position pos:line="587" pos:column="38"/></name><operator pos:line="587" pos:column="38">-&gt;<pos:position pos:line="587" pos:column="43"/></operator><name pos:line="587" pos:column="40">temp_store<pos:position pos:line="587" pos:column="50"/></name></name><operator pos:line="587" pos:column="50">==<pos:position pos:line="587" pos:column="52"/></operator><literal type="number" pos:line="587" pos:column="52">1<pos:position pos:line="587" pos:column="53"/></literal><operator pos:line="587" pos:column="53">)<pos:position pos:line="587" pos:column="54"/></operator></expr>
      )<pos:position pos:line="588" pos:column="8"/></condition><then><block pos:line="588" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="589" pos:column="9">invalidateTempStorage<pos:position pos:line="589" pos:column="30"/></name><argument_list pos:line="589" pos:column="30">(<argument><expr><name pos:line="589" pos:column="31">pParse<pos:position pos:line="589" pos:column="37"/></name></expr></argument>)<pos:position pos:line="589" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="589" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="590" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="591" pos:column="7">sqlite3_free<pos:position pos:line="591" pos:column="19"/></name><argument_list pos:line="591" pos:column="19">(<argument><expr><name pos:line="591" pos:column="20">sqlite3_temp_directory<pos:position pos:line="591" pos:column="42"/></name></expr></argument>)<pos:position pos:line="591" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="591" pos:column="44"/></expr_stmt>
      <if pos:line="592" pos:column="7">if<condition pos:line="592" pos:column="9">( <expr><name><name pos:line="592" pos:column="11">zRight<pos:position pos:line="592" pos:column="17"/></name><index pos:line="592" pos:column="17">[<expr><literal type="number" pos:line="592" pos:column="18">0<pos:position pos:line="592" pos:column="19"/></literal></expr>]<pos:position pos:line="592" pos:column="20"/></index></name></expr> )<pos:position pos:line="592" pos:column="22"/></condition><then><block pos:line="592" pos:column="22">{
        <expr_stmt><expr><name pos:line="593" pos:column="9">sqlite3_temp_directory<pos:position pos:line="593" pos:column="31"/></name> <operator pos:line="593" pos:column="32">=<pos:position pos:line="593" pos:column="33"/></operator> <call><name pos:line="593" pos:column="34">sqlite3_mprintf<pos:position pos:line="593" pos:column="49"/></name><argument_list pos:line="593" pos:column="49">(<argument><expr><literal type="string" pos:line="593" pos:column="50">"%s"<pos:position pos:line="593" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="593" pos:column="56">zRight<pos:position pos:line="593" pos:column="62"/></name></expr></argument>)<pos:position pos:line="593" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="593" pos:column="64"/></expr_stmt>
      }<pos:position pos:line="594" pos:column="8"/></block></then><else pos:line="594" pos:column="8">else<block pos:line="594" pos:column="12">{
        <expr_stmt><expr><name pos:line="595" pos:column="9">sqlite3_temp_directory<pos:position pos:line="595" pos:column="31"/></name> <operator pos:line="595" pos:column="32">=<pos:position pos:line="595" pos:column="33"/></operator> <literal type="number" pos:line="595" pos:column="34">0<pos:position pos:line="595" pos:column="35"/></literal></expr>;<pos:position pos:line="595" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="596" pos:column="8"/></block></else></if>
<cpp:endif pos:line="597" pos:column="1">#<cpp:directive pos:line="597" pos:column="2">endif<pos:position pos:line="597" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="597" pos:column="8">/* SQLITE_OMIT_WSD */</comment>
    }<pos:position pos:line="598" pos:column="6"/></block></else></if>
    <break pos:line="599" pos:column="5">break;<pos:position pos:line="599" pos:column="11"/></break>
  }<pos:position pos:line="600" pos:column="4"/></block>

<cpp:if pos:line="602" pos:column="1">#<cpp:directive pos:line="602" pos:column="2">if<pos:position pos:line="602" pos:column="4"/></cpp:directive> <expr><name pos:line="602" pos:column="5">SQLITE_OS_WIN<pos:position pos:line="602" pos:column="18"/></name></expr></cpp:if>
  <comment type="block" pos:line="603" pos:column="3">/*
  **   PRAGMA data_store_directory
  **   PRAGMA data_store_directory = ""|"directory_name"
  **
  ** Return or set the local value of the data_store_directory flag.  Changing
  ** the value sets a specific directory to be used for database files that
  ** were specified with a relative pathname.  Setting to a null string reverts
  ** to the default database directory, which for database files specified with
  ** a relative path will probably be based on the current directory for the
  ** process.  Database file specified with an absolute path are not impacted
  ** by this setting, regardless of its value.
  **
  */</comment>
  <case pos:line="616" pos:column="3">case <expr><name pos:line="616" pos:column="8">PragTyp_DATA_STORE_DIRECTORY<pos:position pos:line="616" pos:column="36"/></name></expr>:<pos:position pos:line="616" pos:column="37"/></case> <block pos:line="616" pos:column="38">{
    <if pos:line="617" pos:column="5">if<condition pos:line="617" pos:column="7">( <expr><operator pos:line="617" pos:column="9">!<pos:position pos:line="617" pos:column="10"/></operator><name pos:line="617" pos:column="10">zRight<pos:position pos:line="617" pos:column="16"/></name></expr> )<pos:position pos:line="617" pos:column="18"/></condition><then><block pos:line="617" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="618" pos:column="7">returnSingleText<pos:position pos:line="618" pos:column="23"/></name><argument_list pos:line="618" pos:column="23">(<argument><expr><name pos:line="618" pos:column="24">v<pos:position pos:line="618" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="618" pos:column="27">sqlite3_data_directory<pos:position pos:line="618" pos:column="49"/></name></expr></argument>)<pos:position pos:line="618" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="618" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="619" pos:column="6"/></block></then><else pos:line="619" pos:column="6">else<block pos:line="619" pos:column="10">{
<cpp:ifndef pos:line="620" pos:column="1">#<cpp:directive pos:line="620" pos:column="2">ifndef<pos:position pos:line="620" pos:column="8"/></cpp:directive> <name pos:line="620" pos:column="9">SQLITE_OMIT_WSD<pos:position pos:line="620" pos:column="24"/></name></cpp:ifndef>
      <if pos:line="621" pos:column="7">if<condition pos:line="621" pos:column="9">( <expr><name><name pos:line="621" pos:column="11">zRight<pos:position pos:line="621" pos:column="17"/></name><index pos:line="621" pos:column="17">[<expr><literal type="number" pos:line="621" pos:column="18">0<pos:position pos:line="621" pos:column="19"/></literal></expr>]<pos:position pos:line="621" pos:column="20"/></index></name></expr> )<pos:position pos:line="621" pos:column="22"/></condition><then><block pos:line="621" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="622" pos:column="9">int<pos:position pos:line="622" pos:column="12"/></name></type> <name pos:line="622" pos:column="13">res<pos:position pos:line="622" pos:column="16"/></name></decl>;<pos:position pos:line="622" pos:column="17"/></decl_stmt>
        <expr_stmt><expr><name pos:line="623" pos:column="9">rc<pos:position pos:line="623" pos:column="11"/></name> <operator pos:line="623" pos:column="12">=<pos:position pos:line="623" pos:column="13"/></operator> <call><name pos:line="623" pos:column="14">sqlite3OsAccess<pos:position pos:line="623" pos:column="29"/></name><argument_list pos:line="623" pos:column="29">(<argument><expr><name><name pos:line="623" pos:column="30">db<pos:position pos:line="623" pos:column="32"/></name><operator pos:line="623" pos:column="32">-&gt;<pos:position pos:line="623" pos:column="37"/></operator><name pos:line="623" pos:column="34">pVfs<pos:position pos:line="623" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="623" pos:column="40">zRight<pos:position pos:line="623" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="623" pos:column="48">SQLITE_ACCESS_READWRITE<pos:position pos:line="623" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="623" pos:column="73">&amp;<pos:position pos:line="623" pos:column="78"/></operator><name pos:line="623" pos:column="74">res<pos:position pos:line="623" pos:column="77"/></name></expr></argument>)<pos:position pos:line="623" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="623" pos:column="79"/></expr_stmt>
        <if pos:line="624" pos:column="9">if<condition pos:line="624" pos:column="11">( <expr><name pos:line="624" pos:column="13">rc<pos:position pos:line="624" pos:column="15"/></name><operator pos:line="624" pos:column="15">!=<pos:position pos:line="624" pos:column="17"/></operator><name pos:line="624" pos:column="17">SQLITE_OK<pos:position pos:line="624" pos:column="26"/></name> <operator pos:line="624" pos:column="27">||<pos:position pos:line="624" pos:column="29"/></operator> <name pos:line="624" pos:column="30">res<pos:position pos:line="624" pos:column="33"/></name><operator pos:line="624" pos:column="33">==<pos:position pos:line="624" pos:column="35"/></operator><literal type="number" pos:line="624" pos:column="35">0<pos:position pos:line="624" pos:column="36"/></literal></expr> )<pos:position pos:line="624" pos:column="38"/></condition><then><block pos:line="624" pos:column="38">{
          <expr_stmt><expr><call><name pos:line="625" pos:column="11">sqlite3ErrorMsg<pos:position pos:line="625" pos:column="26"/></name><argument_list pos:line="625" pos:column="26">(<argument><expr><name pos:line="625" pos:column="27">pParse<pos:position pos:line="625" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="625" pos:column="35">"not a writable directory"<pos:position pos:line="625" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="625" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="625" pos:column="63"/></expr_stmt>
          <goto pos:line="626" pos:column="11">goto <name pos:line="626" pos:column="16">pragma_out<pos:position pos:line="626" pos:column="26"/></name>;<pos:position pos:line="626" pos:column="27"/></goto>
        }<pos:position pos:line="627" pos:column="10"/></block></then></if>
      }<pos:position pos:line="628" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="629" pos:column="7">sqlite3_free<pos:position pos:line="629" pos:column="19"/></name><argument_list pos:line="629" pos:column="19">(<argument><expr><name pos:line="629" pos:column="20">sqlite3_data_directory<pos:position pos:line="629" pos:column="42"/></name></expr></argument>)<pos:position pos:line="629" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="629" pos:column="44"/></expr_stmt>
      <if pos:line="630" pos:column="7">if<condition pos:line="630" pos:column="9">( <expr><name><name pos:line="630" pos:column="11">zRight<pos:position pos:line="630" pos:column="17"/></name><index pos:line="630" pos:column="17">[<expr><literal type="number" pos:line="630" pos:column="18">0<pos:position pos:line="630" pos:column="19"/></literal></expr>]<pos:position pos:line="630" pos:column="20"/></index></name></expr> )<pos:position pos:line="630" pos:column="22"/></condition><then><block pos:line="630" pos:column="22">{
        <expr_stmt><expr><name pos:line="631" pos:column="9">sqlite3_data_directory<pos:position pos:line="631" pos:column="31"/></name> <operator pos:line="631" pos:column="32">=<pos:position pos:line="631" pos:column="33"/></operator> <call><name pos:line="631" pos:column="34">sqlite3_mprintf<pos:position pos:line="631" pos:column="49"/></name><argument_list pos:line="631" pos:column="49">(<argument><expr><literal type="string" pos:line="631" pos:column="50">"%s"<pos:position pos:line="631" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="631" pos:column="56">zRight<pos:position pos:line="631" pos:column="62"/></name></expr></argument>)<pos:position pos:line="631" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="631" pos:column="64"/></expr_stmt>
      }<pos:position pos:line="632" pos:column="8"/></block></then><else pos:line="632" pos:column="8">else<block pos:line="632" pos:column="12">{
        <expr_stmt><expr><name pos:line="633" pos:column="9">sqlite3_data_directory<pos:position pos:line="633" pos:column="31"/></name> <operator pos:line="633" pos:column="32">=<pos:position pos:line="633" pos:column="33"/></operator> <literal type="number" pos:line="633" pos:column="34">0<pos:position pos:line="633" pos:column="35"/></literal></expr>;<pos:position pos:line="633" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="634" pos:column="8"/></block></else></if>
<cpp:endif pos:line="635" pos:column="1">#<cpp:directive pos:line="635" pos:column="2">endif<pos:position pos:line="635" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="635" pos:column="8">/* SQLITE_OMIT_WSD */</comment>
    }<pos:position pos:line="636" pos:column="6"/></block></else></if>
    <break pos:line="637" pos:column="5">break;<pos:position pos:line="637" pos:column="11"/></break>
  }<pos:position pos:line="638" pos:column="4"/></block>
<cpp:endif pos:line="639" pos:column="1">#<cpp:directive pos:line="639" pos:column="2">endif<pos:position pos:line="639" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="641" pos:column="1">#<cpp:directive pos:line="641" pos:column="2">if<pos:position pos:line="641" pos:column="4"/></cpp:directive> <expr><name pos:line="641" pos:column="5">SQLITE_ENABLE_LOCKING_STYLE<pos:position pos:line="641" pos:column="32"/></name></expr></cpp:if>
  <comment type="block" pos:line="642" pos:column="3">/*
  **   PRAGMA [schema.]lock_proxy_file
  **   PRAGMA [schema.]lock_proxy_file = ":auto:"|"lock_file_path"
  **
  ** Return or set the value of the lock_proxy_file flag.  Changing
  ** the value sets a specific file to be used for database access locks.
  **
  */</comment>
  <case pos:line="650" pos:column="3">case <expr><name pos:line="650" pos:column="8">PragTyp_LOCK_PROXY_FILE<pos:position pos:line="650" pos:column="31"/></name></expr>:<pos:position pos:line="650" pos:column="32"/></case> <block pos:line="650" pos:column="33">{
    <if pos:line="651" pos:column="5">if<condition pos:line="651" pos:column="7">( <expr><operator pos:line="651" pos:column="9">!<pos:position pos:line="651" pos:column="10"/></operator><name pos:line="651" pos:column="10">zRight<pos:position pos:line="651" pos:column="16"/></name></expr> )<pos:position pos:line="651" pos:column="18"/></condition><then><block pos:line="651" pos:column="18">{
      <decl_stmt><decl><type><name pos:line="652" pos:column="7">Pager<pos:position pos:line="652" pos:column="12"/></name> <modifier pos:line="652" pos:column="13">*<pos:position pos:line="652" pos:column="14"/></modifier></type><name pos:line="652" pos:column="14">pPager<pos:position pos:line="652" pos:column="20"/></name> <init pos:line="652" pos:column="21">= <expr><call><name pos:line="652" pos:column="23">sqlite3BtreePager<pos:position pos:line="652" pos:column="40"/></name><argument_list pos:line="652" pos:column="40">(<argument><expr><name><name pos:line="652" pos:column="41">pDb<pos:position pos:line="652" pos:column="44"/></name><operator pos:line="652" pos:column="44">-&gt;<pos:position pos:line="652" pos:column="49"/></operator><name pos:line="652" pos:column="46">pBt<pos:position pos:line="652" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="652" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="652" pos:column="51"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="653" pos:column="7">char<pos:position pos:line="653" pos:column="11"/></name> <modifier pos:line="653" pos:column="12">*<pos:position pos:line="653" pos:column="13"/></modifier></type><name pos:line="653" pos:column="13">proxy_file_path<pos:position pos:line="653" pos:column="28"/></name> <init pos:line="653" pos:column="29">= <expr><name pos:line="653" pos:column="31">NULL<pos:position pos:line="653" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="653" pos:column="36"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="654" pos:column="7">sqlite3_file<pos:position pos:line="654" pos:column="19"/></name> <modifier pos:line="654" pos:column="20">*<pos:position pos:line="654" pos:column="21"/></modifier></type><name pos:line="654" pos:column="21">pFile<pos:position pos:line="654" pos:column="26"/></name> <init pos:line="654" pos:column="27">= <expr><call><name pos:line="654" pos:column="29">sqlite3PagerFile<pos:position pos:line="654" pos:column="45"/></name><argument_list pos:line="654" pos:column="45">(<argument><expr><name pos:line="654" pos:column="46">pPager<pos:position pos:line="654" pos:column="52"/></name></expr></argument>)<pos:position pos:line="654" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="654" pos:column="54"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="655" pos:column="7">sqlite3OsFileControlHint<pos:position pos:line="655" pos:column="31"/></name><argument_list pos:line="655" pos:column="31">(<argument><expr><name pos:line="655" pos:column="32">pFile<pos:position pos:line="655" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="655" pos:column="39">SQLITE_GET_LOCKPROXYFILE<pos:position pos:line="655" pos:column="63"/></name></expr></argument>, 
                           <argument><expr><operator pos:line="656" pos:column="28">&amp;<pos:position pos:line="656" pos:column="33"/></operator><name pos:line="656" pos:column="29">proxy_file_path<pos:position pos:line="656" pos:column="44"/></name></expr></argument>)<pos:position pos:line="656" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="656" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="657" pos:column="7">returnSingleText<pos:position pos:line="657" pos:column="23"/></name><argument_list pos:line="657" pos:column="23">(<argument><expr><name pos:line="657" pos:column="24">v<pos:position pos:line="657" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="657" pos:column="27">proxy_file_path<pos:position pos:line="657" pos:column="42"/></name></expr></argument>)<pos:position pos:line="657" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="657" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="658" pos:column="6"/></block></then><else pos:line="658" pos:column="6">else<block pos:line="658" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="659" pos:column="7">Pager<pos:position pos:line="659" pos:column="12"/></name> <modifier pos:line="659" pos:column="13">*<pos:position pos:line="659" pos:column="14"/></modifier></type><name pos:line="659" pos:column="14">pPager<pos:position pos:line="659" pos:column="20"/></name> <init pos:line="659" pos:column="21">= <expr><call><name pos:line="659" pos:column="23">sqlite3BtreePager<pos:position pos:line="659" pos:column="40"/></name><argument_list pos:line="659" pos:column="40">(<argument><expr><name><name pos:line="659" pos:column="41">pDb<pos:position pos:line="659" pos:column="44"/></name><operator pos:line="659" pos:column="44">-&gt;<pos:position pos:line="659" pos:column="49"/></operator><name pos:line="659" pos:column="46">pBt<pos:position pos:line="659" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="659" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="659" pos:column="51"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="660" pos:column="7">sqlite3_file<pos:position pos:line="660" pos:column="19"/></name> <modifier pos:line="660" pos:column="20">*<pos:position pos:line="660" pos:column="21"/></modifier></type><name pos:line="660" pos:column="21">pFile<pos:position pos:line="660" pos:column="26"/></name> <init pos:line="660" pos:column="27">= <expr><call><name pos:line="660" pos:column="29">sqlite3PagerFile<pos:position pos:line="660" pos:column="45"/></name><argument_list pos:line="660" pos:column="45">(<argument><expr><name pos:line="660" pos:column="46">pPager<pos:position pos:line="660" pos:column="52"/></name></expr></argument>)<pos:position pos:line="660" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="660" pos:column="54"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="661" pos:column="7">int<pos:position pos:line="661" pos:column="10"/></name></type> <name pos:line="661" pos:column="11">res<pos:position pos:line="661" pos:column="14"/></name></decl>;<pos:position pos:line="661" pos:column="15"/></decl_stmt>
      <if pos:line="662" pos:column="7">if<condition pos:line="662" pos:column="9">( <expr><name><name pos:line="662" pos:column="11">zRight<pos:position pos:line="662" pos:column="17"/></name><index pos:line="662" pos:column="17">[<expr><literal type="number" pos:line="662" pos:column="18">0<pos:position pos:line="662" pos:column="19"/></literal></expr>]<pos:position pos:line="662" pos:column="20"/></index></name></expr> )<pos:position pos:line="662" pos:column="22"/></condition><then><block pos:line="662" pos:column="22">{
        <expr_stmt><expr><name pos:line="663" pos:column="9">res<pos:position pos:line="663" pos:column="12"/></name><operator pos:line="663" pos:column="12">=<pos:position pos:line="663" pos:column="13"/></operator><call><name pos:line="663" pos:column="13">sqlite3OsFileControl<pos:position pos:line="663" pos:column="33"/></name><argument_list pos:line="663" pos:column="33">(<argument><expr><name pos:line="663" pos:column="34">pFile<pos:position pos:line="663" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="663" pos:column="41">SQLITE_SET_LOCKPROXYFILE<pos:position pos:line="663" pos:column="65"/></name></expr></argument>, 
                                     <argument><expr><name pos:line="664" pos:column="38">zRight<pos:position pos:line="664" pos:column="44"/></name></expr></argument>)<pos:position pos:line="664" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="664" pos:column="46"/></expr_stmt>
      }<pos:position pos:line="665" pos:column="8"/></block></then> <else pos:line="665" pos:column="9">else <block pos:line="665" pos:column="14">{
        <expr_stmt><expr><name pos:line="666" pos:column="9">res<pos:position pos:line="666" pos:column="12"/></name><operator pos:line="666" pos:column="12">=<pos:position pos:line="666" pos:column="13"/></operator><call><name pos:line="666" pos:column="13">sqlite3OsFileControl<pos:position pos:line="666" pos:column="33"/></name><argument_list pos:line="666" pos:column="33">(<argument><expr><name pos:line="666" pos:column="34">pFile<pos:position pos:line="666" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="666" pos:column="41">SQLITE_SET_LOCKPROXYFILE<pos:position pos:line="666" pos:column="65"/></name></expr></argument>, 
                                     <argument><expr><name pos:line="667" pos:column="38">NULL<pos:position pos:line="667" pos:column="42"/></name></expr></argument>)<pos:position pos:line="667" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="667" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="668" pos:column="8"/></block></else></if>
      <if pos:line="669" pos:column="7">if<condition pos:line="669" pos:column="9">( <expr><name pos:line="669" pos:column="11">res<pos:position pos:line="669" pos:column="14"/></name><operator pos:line="669" pos:column="14">!=<pos:position pos:line="669" pos:column="16"/></operator><name pos:line="669" pos:column="16">SQLITE_OK<pos:position pos:line="669" pos:column="25"/></name></expr> )<pos:position pos:line="669" pos:column="27"/></condition><then><block pos:line="669" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="670" pos:column="9">sqlite3ErrorMsg<pos:position pos:line="670" pos:column="24"/></name><argument_list pos:line="670" pos:column="24">(<argument><expr><name pos:line="670" pos:column="25">pParse<pos:position pos:line="670" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="670" pos:column="33">"failed to set lock proxy file"<pos:position pos:line="670" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="670" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="670" pos:column="66"/></expr_stmt>
        <goto pos:line="671" pos:column="9">goto <name pos:line="671" pos:column="14">pragma_out<pos:position pos:line="671" pos:column="24"/></name>;<pos:position pos:line="671" pos:column="25"/></goto>
      }<pos:position pos:line="672" pos:column="8"/></block></then></if>
    }<pos:position pos:line="673" pos:column="6"/></block></else></if>
    <break pos:line="674" pos:column="5">break;<pos:position pos:line="674" pos:column="11"/></break>
  }<pos:position pos:line="675" pos:column="4"/></block>
<cpp:endif pos:line="676" pos:column="1">#<cpp:directive pos:line="676" pos:column="2">endif<pos:position pos:line="676" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="676" pos:column="8">/* SQLITE_ENABLE_LOCKING_STYLE */</comment>      
    
  <comment type="block" pos:line="678" pos:column="3">/*
  **   PRAGMA [schema.]synchronous
  **   PRAGMA [schema.]synchronous=OFF|ON|NORMAL|FULL|EXTRA
  **
  ** Return or set the local value of the synchronous flag.  Changing
  ** the local value does not make changes to the disk file and the
  ** default value will be restored the next time the database is
  ** opened.
  */</comment>
  <case pos:line="687" pos:column="3">case <expr><name pos:line="687" pos:column="8">PragTyp_SYNCHRONOUS<pos:position pos:line="687" pos:column="27"/></name></expr>:<pos:position pos:line="687" pos:column="28"/></case> <block pos:line="687" pos:column="29">{
    <if pos:line="688" pos:column="5">if<condition pos:line="688" pos:column="7">( <expr><operator pos:line="688" pos:column="9">!<pos:position pos:line="688" pos:column="10"/></operator><name pos:line="688" pos:column="10">zRight<pos:position pos:line="688" pos:column="16"/></name></expr> )<pos:position pos:line="688" pos:column="18"/></condition><then><block pos:line="688" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="689" pos:column="7">returnSingleInt<pos:position pos:line="689" pos:column="22"/></name><argument_list pos:line="689" pos:column="22">(<argument><expr><name pos:line="689" pos:column="23">v<pos:position pos:line="689" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="689" pos:column="26">pDb<pos:position pos:line="689" pos:column="29"/></name><operator pos:line="689" pos:column="29">-&gt;<pos:position pos:line="689" pos:column="34"/></operator><name pos:line="689" pos:column="31">safety_level<pos:position pos:line="689" pos:column="43"/></name></name><operator pos:line="689" pos:column="43">-<pos:position pos:line="689" pos:column="44"/></operator><literal type="number" pos:line="689" pos:column="44">1<pos:position pos:line="689" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="689" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="689" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="690" pos:column="6"/></block></then><else pos:line="690" pos:column="6">else<block pos:line="690" pos:column="10">{
      <if pos:line="691" pos:column="7">if<condition pos:line="691" pos:column="9">( <expr><operator pos:line="691" pos:column="11">!<pos:position pos:line="691" pos:column="12"/></operator><name><name pos:line="691" pos:column="12">db<pos:position pos:line="691" pos:column="14"/></name><operator pos:line="691" pos:column="14">-&gt;<pos:position pos:line="691" pos:column="19"/></operator><name pos:line="691" pos:column="16">autoCommit<pos:position pos:line="691" pos:column="26"/></name></name></expr> )<pos:position pos:line="691" pos:column="28"/></condition><then><block pos:line="691" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="692" pos:column="9">sqlite3ErrorMsg<pos:position pos:line="692" pos:column="24"/></name><argument_list pos:line="692" pos:column="24">(<argument><expr><name pos:line="692" pos:column="25">pParse<pos:position pos:line="692" pos:column="31"/></name></expr></argument>, 
            <argument><expr><literal type="string" pos:line="693" pos:column="13">"Safety level may not be changed inside a transaction"<pos:position pos:line="693" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="693" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="693" pos:column="69"/></expr_stmt>
      }<pos:position pos:line="694" pos:column="8"/></block></then><elseif pos:line="694" pos:column="8">else <if pos:line="694" pos:column="13">if<condition pos:line="694" pos:column="15">( <expr><name pos:line="694" pos:column="17">iDb<pos:position pos:line="694" pos:column="20"/></name><operator pos:line="694" pos:column="20">!=<pos:position pos:line="694" pos:column="22"/></operator><literal type="number" pos:line="694" pos:column="22">1<pos:position pos:line="694" pos:column="23"/></literal></expr> )<pos:position pos:line="694" pos:column="25"/></condition><then><block pos:line="694" pos:column="25">{
        <decl_stmt><decl><type><name pos:line="695" pos:column="9">int<pos:position pos:line="695" pos:column="12"/></name></type> <name pos:line="695" pos:column="13">iLevel<pos:position pos:line="695" pos:column="19"/></name> <init pos:line="695" pos:column="20">= <expr><operator pos:line="695" pos:column="22">(<pos:position pos:line="695" pos:column="23"/></operator><call><name pos:line="695" pos:column="23">getSafetyLevel<pos:position pos:line="695" pos:column="37"/></name><argument_list pos:line="695" pos:column="37">(<argument><expr><name pos:line="695" pos:column="38">zRight<pos:position pos:line="695" pos:column="44"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="695" pos:column="45">0<pos:position pos:line="695" pos:column="46"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="695" pos:column="47">1<pos:position pos:line="695" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="695" pos:column="49"/></argument_list></call><operator pos:line="695" pos:column="49">+<pos:position pos:line="695" pos:column="50"/></operator><literal type="number" pos:line="695" pos:column="50">1<pos:position pos:line="695" pos:column="51"/></literal><operator pos:line="695" pos:column="51">)<pos:position pos:line="695" pos:column="52"/></operator> <operator pos:line="695" pos:column="53">&amp;<pos:position pos:line="695" pos:column="58"/></operator> <name pos:line="695" pos:column="55">PAGER_SYNCHRONOUS_MASK<pos:position pos:line="695" pos:column="77"/></name></expr></init></decl>;<pos:position pos:line="695" pos:column="78"/></decl_stmt>
        <if pos:line="696" pos:column="9">if<condition pos:line="696" pos:column="11">( <expr><name pos:line="696" pos:column="13">iLevel<pos:position pos:line="696" pos:column="19"/></name><operator pos:line="696" pos:column="19">==<pos:position pos:line="696" pos:column="21"/></operator><literal type="number" pos:line="696" pos:column="21">0<pos:position pos:line="696" pos:column="22"/></literal></expr> )<pos:position pos:line="696" pos:column="24"/></condition><then pos:line="696" pos:column="24"> <block type="pseudo"><expr_stmt><expr><name pos:line="696" pos:column="25">iLevel<pos:position pos:line="696" pos:column="31"/></name> <operator pos:line="696" pos:column="32">=<pos:position pos:line="696" pos:column="33"/></operator> <literal type="number" pos:line="696" pos:column="34">1<pos:position pos:line="696" pos:column="35"/></literal></expr>;<pos:position pos:line="696" pos:column="36"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="697" pos:column="9">pDb<pos:position pos:line="697" pos:column="12"/></name><operator pos:line="697" pos:column="12">-&gt;<pos:position pos:line="697" pos:column="17"/></operator><name pos:line="697" pos:column="14">safety_level<pos:position pos:line="697" pos:column="26"/></name></name> <operator pos:line="697" pos:column="27">=<pos:position pos:line="697" pos:column="28"/></operator> <name pos:line="697" pos:column="29">iLevel<pos:position pos:line="697" pos:column="35"/></name></expr>;<pos:position pos:line="697" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="698" pos:column="9">pDb<pos:position pos:line="698" pos:column="12"/></name><operator pos:line="698" pos:column="12">-&gt;<pos:position pos:line="698" pos:column="17"/></operator><name pos:line="698" pos:column="14">bSyncSet<pos:position pos:line="698" pos:column="22"/></name></name> <operator pos:line="698" pos:column="23">=<pos:position pos:line="698" pos:column="24"/></operator> <literal type="number" pos:line="698" pos:column="25">1<pos:position pos:line="698" pos:column="26"/></literal></expr>;<pos:position pos:line="698" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="699" pos:column="9">setAllPagerFlags<pos:position pos:line="699" pos:column="25"/></name><argument_list pos:line="699" pos:column="25">(<argument><expr><name pos:line="699" pos:column="26">db<pos:position pos:line="699" pos:column="28"/></name></expr></argument>)<pos:position pos:line="699" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="699" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="700" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="701" pos:column="6"/></block></else></if>
    <break pos:line="702" pos:column="5">break;<pos:position pos:line="702" pos:column="11"/></break>
  }<pos:position pos:line="703" pos:column="4"/></block>
<cpp:endif pos:line="704" pos:column="1">#<cpp:directive pos:line="704" pos:column="2">endif<pos:position pos:line="704" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="704" pos:column="8">/* SQLITE_OMIT_PAGER_PRAGMAS */</comment>

<cpp:ifndef pos:line="706" pos:column="1">#<cpp:directive pos:line="706" pos:column="2">ifndef<pos:position pos:line="706" pos:column="8"/></cpp:directive> <name pos:line="706" pos:column="9">SQLITE_OMIT_FLAG_PRAGMAS<pos:position pos:line="706" pos:column="33"/></name></cpp:ifndef>
  <case pos:line="707" pos:column="3">case <expr><name pos:line="707" pos:column="8">PragTyp_FLAG<pos:position pos:line="707" pos:column="20"/></name></expr>:<pos:position pos:line="707" pos:column="21"/></case> <block pos:line="707" pos:column="22">{
    <if pos:line="708" pos:column="5">if<condition pos:line="708" pos:column="7">( <expr><name pos:line="708" pos:column="9">zRight<pos:position pos:line="708" pos:column="15"/></name><operator pos:line="708" pos:column="15">==<pos:position pos:line="708" pos:column="17"/></operator><literal type="number" pos:line="708" pos:column="17">0<pos:position pos:line="708" pos:column="18"/></literal></expr> )<pos:position pos:line="708" pos:column="20"/></condition><then><block pos:line="708" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="709" pos:column="7">setPragmaResultColumnNames<pos:position pos:line="709" pos:column="33"/></name><argument_list pos:line="709" pos:column="33">(<argument><expr><name pos:line="709" pos:column="34">v<pos:position pos:line="709" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="709" pos:column="37">pPragma<pos:position pos:line="709" pos:column="44"/></name></expr></argument>)<pos:position pos:line="709" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="709" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="710" pos:column="7">returnSingleInt<pos:position pos:line="710" pos:column="22"/></name><argument_list pos:line="710" pos:column="22">(<argument><expr><name pos:line="710" pos:column="23">v<pos:position pos:line="710" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="710" pos:column="26">(<pos:position pos:line="710" pos:column="27"/></operator><name><name pos:line="710" pos:column="27">db<pos:position pos:line="710" pos:column="29"/></name><operator pos:line="710" pos:column="29">-&gt;<pos:position pos:line="710" pos:column="34"/></operator><name pos:line="710" pos:column="31">flags<pos:position pos:line="710" pos:column="36"/></name></name> <operator pos:line="710" pos:column="37">&amp;<pos:position pos:line="710" pos:column="42"/></operator> <name><name pos:line="710" pos:column="39">pPragma<pos:position pos:line="710" pos:column="46"/></name><operator pos:line="710" pos:column="46">-&gt;<pos:position pos:line="710" pos:column="51"/></operator><name pos:line="710" pos:column="48">iArg<pos:position pos:line="710" pos:column="52"/></name></name><operator pos:line="710" pos:column="52">)<pos:position pos:line="710" pos:column="53"/></operator><operator pos:line="710" pos:column="53">!=<pos:position pos:line="710" pos:column="55"/></operator><literal type="number" pos:line="710" pos:column="55">0<pos:position pos:line="710" pos:column="56"/></literal></expr></argument> )<pos:position pos:line="710" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="710" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="711" pos:column="6"/></block></then><else pos:line="711" pos:column="6">else<block pos:line="711" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="712" pos:column="7">int<pos:position pos:line="712" pos:column="10"/></name></type> <name pos:line="712" pos:column="11">mask<pos:position pos:line="712" pos:column="15"/></name> <init pos:line="712" pos:column="16">= <expr><name><name pos:line="712" pos:column="18">pPragma<pos:position pos:line="712" pos:column="25"/></name><operator pos:line="712" pos:column="25">-&gt;<pos:position pos:line="712" pos:column="30"/></operator><name pos:line="712" pos:column="27">iArg<pos:position pos:line="712" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="712" pos:column="32"/></decl_stmt>    <comment type="block" pos:line="712" pos:column="36">/* Mask of bits to set or clear. */</comment>
      <if pos:line="713" pos:column="7">if<condition pos:line="713" pos:column="9">( <expr><name><name pos:line="713" pos:column="11">db<pos:position pos:line="713" pos:column="13"/></name><operator pos:line="713" pos:column="13">-&gt;<pos:position pos:line="713" pos:column="18"/></operator><name pos:line="713" pos:column="15">autoCommit<pos:position pos:line="713" pos:column="25"/></name></name><operator pos:line="713" pos:column="25">==<pos:position pos:line="713" pos:column="27"/></operator><literal type="number" pos:line="713" pos:column="27">0<pos:position pos:line="713" pos:column="28"/></literal></expr> )<pos:position pos:line="713" pos:column="30"/></condition><then><block pos:line="713" pos:column="30">{
        <comment type="block" pos:line="714" pos:column="9">/* Foreign key support may not be enabled or disabled while not
        ** in auto-commit mode.  */</comment>
        <expr_stmt><expr><name pos:line="716" pos:column="9">mask<pos:position pos:line="716" pos:column="13"/></name> <operator pos:line="716" pos:column="14">&amp;=<pos:position pos:line="716" pos:column="20"/></operator> <operator pos:line="716" pos:column="17">~<pos:position pos:line="716" pos:column="18"/></operator><operator pos:line="716" pos:column="18">(<pos:position pos:line="716" pos:column="19"/></operator><name pos:line="716" pos:column="19">SQLITE_ForeignKeys<pos:position pos:line="716" pos:column="37"/></name><operator pos:line="716" pos:column="37">)<pos:position pos:line="716" pos:column="38"/></operator></expr>;<pos:position pos:line="716" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="717" pos:column="8"/></block></then></if>
<cpp:if pos:line="718" pos:column="1">#<cpp:directive pos:line="718" pos:column="2">if<pos:position pos:line="718" pos:column="4"/></cpp:directive> <expr><name pos:line="718" pos:column="5">SQLITE_USER_AUTHENTICATION<pos:position pos:line="718" pos:column="31"/></name></expr></cpp:if>
      <if pos:line="719" pos:column="7">if<condition pos:line="719" pos:column="9">( <expr><name><name pos:line="719" pos:column="11">db<pos:position pos:line="719" pos:column="13"/></name><operator pos:line="719" pos:column="13">-&gt;<pos:position pos:line="719" pos:column="18"/></operator><name pos:line="719" pos:column="15">auth<pos:position pos:line="719" pos:column="19"/></name><operator pos:line="719" pos:column="19">.<pos:position pos:line="719" pos:column="20"/></operator><name pos:line="719" pos:column="20">authLevel<pos:position pos:line="719" pos:column="29"/></name></name><operator pos:line="719" pos:column="29">==<pos:position pos:line="719" pos:column="31"/></operator><name pos:line="719" pos:column="31">UAUTH_User<pos:position pos:line="719" pos:column="41"/></name></expr> )<pos:position pos:line="719" pos:column="43"/></condition><then><block pos:line="719" pos:column="43">{
        <comment type="block" pos:line="720" pos:column="9">/* Do not allow non-admin users to modify the schema arbitrarily */</comment>
        <expr_stmt><expr><name pos:line="721" pos:column="9">mask<pos:position pos:line="721" pos:column="13"/></name> <operator pos:line="721" pos:column="14">&amp;=<pos:position pos:line="721" pos:column="20"/></operator> <operator pos:line="721" pos:column="17">~<pos:position pos:line="721" pos:column="18"/></operator><operator pos:line="721" pos:column="18">(<pos:position pos:line="721" pos:column="19"/></operator><name pos:line="721" pos:column="19">SQLITE_WriteSchema<pos:position pos:line="721" pos:column="37"/></name><operator pos:line="721" pos:column="37">)<pos:position pos:line="721" pos:column="38"/></operator></expr>;<pos:position pos:line="721" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="722" pos:column="8"/></block></then></if>
<cpp:endif pos:line="723" pos:column="1">#<cpp:directive pos:line="723" pos:column="2">endif<pos:position pos:line="723" pos:column="7"/></cpp:directive></cpp:endif>

      <if pos:line="725" pos:column="7">if<condition pos:line="725" pos:column="9">( <expr><call><name pos:line="725" pos:column="11">sqlite3GetBoolean<pos:position pos:line="725" pos:column="28"/></name><argument_list pos:line="725" pos:column="28">(<argument><expr><name pos:line="725" pos:column="29">zRight<pos:position pos:line="725" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="725" pos:column="37">0<pos:position pos:line="725" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="725" pos:column="39"/></argument_list></call></expr> )<pos:position pos:line="725" pos:column="41"/></condition><then><block pos:line="725" pos:column="41">{
        <expr_stmt><expr><name><name pos:line="726" pos:column="9">db<pos:position pos:line="726" pos:column="11"/></name><operator pos:line="726" pos:column="11">-&gt;<pos:position pos:line="726" pos:column="16"/></operator><name pos:line="726" pos:column="13">flags<pos:position pos:line="726" pos:column="18"/></name></name> <operator pos:line="726" pos:column="19">|=<pos:position pos:line="726" pos:column="21"/></operator> <name pos:line="726" pos:column="22">mask<pos:position pos:line="726" pos:column="26"/></name></expr>;<pos:position pos:line="726" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="727" pos:column="8"/></block></then><else pos:line="727" pos:column="8">else<block pos:line="727" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="728" pos:column="9">db<pos:position pos:line="728" pos:column="11"/></name><operator pos:line="728" pos:column="11">-&gt;<pos:position pos:line="728" pos:column="16"/></operator><name pos:line="728" pos:column="13">flags<pos:position pos:line="728" pos:column="18"/></name></name> <operator pos:line="728" pos:column="19">&amp;=<pos:position pos:line="728" pos:column="25"/></operator> <operator pos:line="728" pos:column="22">~<pos:position pos:line="728" pos:column="23"/></operator><name pos:line="728" pos:column="23">mask<pos:position pos:line="728" pos:column="27"/></name></expr>;<pos:position pos:line="728" pos:column="28"/></expr_stmt>
        <if pos:line="729" pos:column="9">if<condition pos:line="729" pos:column="11">( <expr><name pos:line="729" pos:column="13">mask<pos:position pos:line="729" pos:column="17"/></name><operator pos:line="729" pos:column="17">==<pos:position pos:line="729" pos:column="19"/></operator><name pos:line="729" pos:column="19">SQLITE_DeferFKs<pos:position pos:line="729" pos:column="34"/></name></expr> )<pos:position pos:line="729" pos:column="36"/></condition><then pos:line="729" pos:column="36"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="729" pos:column="37">db<pos:position pos:line="729" pos:column="39"/></name><operator pos:line="729" pos:column="39">-&gt;<pos:position pos:line="729" pos:column="44"/></operator><name pos:line="729" pos:column="41">nDeferredImmCons<pos:position pos:line="729" pos:column="57"/></name></name> <operator pos:line="729" pos:column="58">=<pos:position pos:line="729" pos:column="59"/></operator> <literal type="number" pos:line="729" pos:column="60">0<pos:position pos:line="729" pos:column="61"/></literal></expr>;<pos:position pos:line="729" pos:column="62"/></expr_stmt></block></then></if>
      }<pos:position pos:line="730" pos:column="8"/></block></else></if>

      <comment type="block" pos:line="732" pos:column="7">/* Many of the flag-pragmas modify the code generated by the SQL 
      ** compiler (eg. count_changes). So add an opcode to expire all
      ** compiled SQL statements after modifying a pragma value.
      */</comment>
      <expr_stmt><expr><call><name pos:line="736" pos:column="7">sqlite3VdbeAddOp0<pos:position pos:line="736" pos:column="24"/></name><argument_list pos:line="736" pos:column="24">(<argument><expr><name pos:line="736" pos:column="25">v<pos:position pos:line="736" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="736" pos:column="28">OP_Expire<pos:position pos:line="736" pos:column="37"/></name></expr></argument>)<pos:position pos:line="736" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="736" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="737" pos:column="7">setAllPagerFlags<pos:position pos:line="737" pos:column="23"/></name><argument_list pos:line="737" pos:column="23">(<argument><expr><name pos:line="737" pos:column="24">db<pos:position pos:line="737" pos:column="26"/></name></expr></argument>)<pos:position pos:line="737" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="737" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="738" pos:column="6"/></block></else></if>
    <break pos:line="739" pos:column="5">break;<pos:position pos:line="739" pos:column="11"/></break>
  }<pos:position pos:line="740" pos:column="4"/></block>
<cpp:endif pos:line="741" pos:column="1">#<cpp:directive pos:line="741" pos:column="2">endif<pos:position pos:line="741" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="741" pos:column="8">/* SQLITE_OMIT_FLAG_PRAGMAS */</comment>

<cpp:ifndef pos:line="743" pos:column="1">#<cpp:directive pos:line="743" pos:column="2">ifndef<pos:position pos:line="743" pos:column="8"/></cpp:directive> <name pos:line="743" pos:column="9">SQLITE_OMIT_SCHEMA_PRAGMAS<pos:position pos:line="743" pos:column="35"/></name></cpp:ifndef>
  <comment type="block" pos:line="744" pos:column="3">/*
  **   PRAGMA table_info(&lt;table&gt;)
  **
  ** Return a single row for each column of the named table. The columns of
  ** the returned data set are:
  **
  ** cid:        Column id (numbered from left to right, starting at 0)
  ** name:       Column name
  ** type:       Column declaration type.
  ** notnull:    True if 'NOT NULL' is part of column declaration
  ** dflt_value: The default value for the column, if any.
  */</comment>
  <case pos:line="756" pos:column="3">case <expr><name pos:line="756" pos:column="8">PragTyp_TABLE_INFO<pos:position pos:line="756" pos:column="26"/></name></expr>:<pos:position pos:line="756" pos:column="27"/></case> <if pos:line="756" pos:column="28">if<condition pos:line="756" pos:column="30">( <expr><name pos:line="756" pos:column="32">zRight<pos:position pos:line="756" pos:column="38"/></name></expr> )<pos:position pos:line="756" pos:column="40"/></condition><then><block pos:line="756" pos:column="40">{
    <decl_stmt><decl><type><name pos:line="757" pos:column="5">Table<pos:position pos:line="757" pos:column="10"/></name> <modifier pos:line="757" pos:column="11">*<pos:position pos:line="757" pos:column="12"/></modifier></type><name pos:line="757" pos:column="12">pTab<pos:position pos:line="757" pos:column="16"/></name></decl>;<pos:position pos:line="757" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><name pos:line="758" pos:column="5">pTab<pos:position pos:line="758" pos:column="9"/></name> <operator pos:line="758" pos:column="10">=<pos:position pos:line="758" pos:column="11"/></operator> <call><name pos:line="758" pos:column="12">sqlite3LocateTable<pos:position pos:line="758" pos:column="30"/></name><argument_list pos:line="758" pos:column="30">(<argument><expr><name pos:line="758" pos:column="31">pParse<pos:position pos:line="758" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="758" pos:column="39">LOCATE_NOERR<pos:position pos:line="758" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="758" pos:column="53">zRight<pos:position pos:line="758" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="758" pos:column="61">zDb<pos:position pos:line="758" pos:column="64"/></name></expr></argument>)<pos:position pos:line="758" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="758" pos:column="66"/></expr_stmt>
    <if pos:line="759" pos:column="5">if<condition pos:line="759" pos:column="7">( <expr><name pos:line="759" pos:column="9">pTab<pos:position pos:line="759" pos:column="13"/></name></expr> )<pos:position pos:line="759" pos:column="15"/></condition><then><block pos:line="759" pos:column="15">{
      <decl_stmt><decl><type><name pos:line="760" pos:column="7">int<pos:position pos:line="760" pos:column="10"/></name></type> <name pos:line="760" pos:column="11">i<pos:position pos:line="760" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="760" pos:column="14">k<pos:position pos:line="760" pos:column="15"/></name></decl>;<pos:position pos:line="760" pos:column="16"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="761" pos:column="7">int<pos:position pos:line="761" pos:column="10"/></name></type> <name pos:line="761" pos:column="11">nHidden<pos:position pos:line="761" pos:column="18"/></name> <init pos:line="761" pos:column="19">= <expr><literal type="number" pos:line="761" pos:column="21">0<pos:position pos:line="761" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="761" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="762" pos:column="7">Column<pos:position pos:line="762" pos:column="13"/></name> <modifier pos:line="762" pos:column="14">*<pos:position pos:line="762" pos:column="15"/></modifier></type><name pos:line="762" pos:column="15">pCol<pos:position pos:line="762" pos:column="19"/></name></decl>;<pos:position pos:line="762" pos:column="20"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="763" pos:column="7">Index<pos:position pos:line="763" pos:column="12"/></name> <modifier pos:line="763" pos:column="13">*<pos:position pos:line="763" pos:column="14"/></modifier></type><name pos:line="763" pos:column="14">pPk<pos:position pos:line="763" pos:column="17"/></name> <init pos:line="763" pos:column="18">= <expr><call><name pos:line="763" pos:column="20">sqlite3PrimaryKeyIndex<pos:position pos:line="763" pos:column="42"/></name><argument_list pos:line="763" pos:column="42">(<argument><expr><name pos:line="763" pos:column="43">pTab<pos:position pos:line="763" pos:column="47"/></name></expr></argument>)<pos:position pos:line="763" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="763" pos:column="49"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="764" pos:column="7">pParse<pos:position pos:line="764" pos:column="13"/></name><operator pos:line="764" pos:column="13">-&gt;<pos:position pos:line="764" pos:column="18"/></operator><name pos:line="764" pos:column="15">nMem<pos:position pos:line="764" pos:column="19"/></name></name> <operator pos:line="764" pos:column="20">=<pos:position pos:line="764" pos:column="21"/></operator> <literal type="number" pos:line="764" pos:column="22">6<pos:position pos:line="764" pos:column="23"/></literal></expr>;<pos:position pos:line="764" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="765" pos:column="7">sqlite3CodeVerifySchema<pos:position pos:line="765" pos:column="30"/></name><argument_list pos:line="765" pos:column="30">(<argument><expr><name pos:line="765" pos:column="31">pParse<pos:position pos:line="765" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="765" pos:column="39">iDb<pos:position pos:line="765" pos:column="42"/></name></expr></argument>)<pos:position pos:line="765" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="765" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="766" pos:column="7">sqlite3ViewGetColumnNames<pos:position pos:line="766" pos:column="32"/></name><argument_list pos:line="766" pos:column="32">(<argument><expr><name pos:line="766" pos:column="33">pParse<pos:position pos:line="766" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="766" pos:column="41">pTab<pos:position pos:line="766" pos:column="45"/></name></expr></argument>)<pos:position pos:line="766" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="766" pos:column="47"/></expr_stmt>
      <for pos:line="767" pos:column="7">for<control pos:line="767" pos:column="10">(<init><expr><name pos:line="767" pos:column="11">i<pos:position pos:line="767" pos:column="12"/></name><operator pos:line="767" pos:column="12">=<pos:position pos:line="767" pos:column="13"/></operator><literal type="number" pos:line="767" pos:column="13">0<pos:position pos:line="767" pos:column="14"/></literal></expr><operator pos:line="767" pos:column="14">,<pos:position pos:line="767" pos:column="15"/></operator> <expr><name pos:line="767" pos:column="16">pCol<pos:position pos:line="767" pos:column="20"/></name><operator pos:line="767" pos:column="20">=<pos:position pos:line="767" pos:column="21"/></operator><name><name pos:line="767" pos:column="21">pTab<pos:position pos:line="767" pos:column="25"/></name><operator pos:line="767" pos:column="25">-&gt;<pos:position pos:line="767" pos:column="30"/></operator><name pos:line="767" pos:column="27">aCol<pos:position pos:line="767" pos:column="31"/></name></name></expr>;<pos:position pos:line="767" pos:column="32"/></init> <condition><expr><name pos:line="767" pos:column="33">i<pos:position pos:line="767" pos:column="34"/></name><operator pos:line="767" pos:column="34">&lt;<pos:position pos:line="767" pos:column="38"/></operator><name><name pos:line="767" pos:column="35">pTab<pos:position pos:line="767" pos:column="39"/></name><operator pos:line="767" pos:column="39">-&gt;<pos:position pos:line="767" pos:column="44"/></operator><name pos:line="767" pos:column="41">nCol<pos:position pos:line="767" pos:column="45"/></name></name></expr>;<pos:position pos:line="767" pos:column="46"/></condition> <incr><expr><name pos:line="767" pos:column="47">i<pos:position pos:line="767" pos:column="48"/></name><operator pos:line="767" pos:column="48">++<pos:position pos:line="767" pos:column="50"/></operator></expr><operator pos:line="767" pos:column="50">,<pos:position pos:line="767" pos:column="51"/></operator> <expr><name pos:line="767" pos:column="52">pCol<pos:position pos:line="767" pos:column="56"/></name><operator pos:line="767" pos:column="56">++<pos:position pos:line="767" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="767" pos:column="59"/></control><block pos:line="767" pos:column="59">{
        <if pos:line="768" pos:column="9">if<condition pos:line="768" pos:column="11">( <expr><call><name pos:line="768" pos:column="13">IsHiddenColumn<pos:position pos:line="768" pos:column="27"/></name><argument_list pos:line="768" pos:column="27">(<argument><expr><name pos:line="768" pos:column="28">pCol<pos:position pos:line="768" pos:column="32"/></name></expr></argument>)<pos:position pos:line="768" pos:column="33"/></argument_list></call></expr> )<pos:position pos:line="768" pos:column="35"/></condition><then><block pos:line="768" pos:column="35">{
          <expr_stmt><expr><name pos:line="769" pos:column="11">nHidden<pos:position pos:line="769" pos:column="18"/></name><operator pos:line="769" pos:column="18">++<pos:position pos:line="769" pos:column="20"/></operator></expr>;<pos:position pos:line="769" pos:column="21"/></expr_stmt>
          <continue pos:line="770" pos:column="11">continue;<pos:position pos:line="770" pos:column="20"/></continue>
        }<pos:position pos:line="771" pos:column="10"/></block></then></if>
        <if pos:line="772" pos:column="9">if<condition pos:line="772" pos:column="11">( <expr><operator pos:line="772" pos:column="13">(<pos:position pos:line="772" pos:column="14"/></operator><name><name pos:line="772" pos:column="14">pCol<pos:position pos:line="772" pos:column="18"/></name><operator pos:line="772" pos:column="18">-&gt;<pos:position pos:line="772" pos:column="23"/></operator><name pos:line="772" pos:column="20">colFlags<pos:position pos:line="772" pos:column="28"/></name></name> <operator pos:line="772" pos:column="29">&amp;<pos:position pos:line="772" pos:column="34"/></operator> <name pos:line="772" pos:column="31">COLFLAG_PRIMKEY<pos:position pos:line="772" pos:column="46"/></name><operator pos:line="772" pos:column="46">)<pos:position pos:line="772" pos:column="47"/></operator><operator pos:line="772" pos:column="47">==<pos:position pos:line="772" pos:column="49"/></operator><literal type="number" pos:line="772" pos:column="49">0<pos:position pos:line="772" pos:column="50"/></literal></expr> )<pos:position pos:line="772" pos:column="52"/></condition><then><block pos:line="772" pos:column="52">{
          <expr_stmt><expr><name pos:line="773" pos:column="11">k<pos:position pos:line="773" pos:column="12"/></name> <operator pos:line="773" pos:column="13">=<pos:position pos:line="773" pos:column="14"/></operator> <literal type="number" pos:line="773" pos:column="15">0<pos:position pos:line="773" pos:column="16"/></literal></expr>;<pos:position pos:line="773" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="774" pos:column="10"/></block></then><elseif pos:line="774" pos:column="10">else <if pos:line="774" pos:column="15">if<condition pos:line="774" pos:column="17">( <expr><name pos:line="774" pos:column="19">pPk<pos:position pos:line="774" pos:column="22"/></name><operator pos:line="774" pos:column="22">==<pos:position pos:line="774" pos:column="24"/></operator><literal type="number" pos:line="774" pos:column="24">0<pos:position pos:line="774" pos:column="25"/></literal></expr> )<pos:position pos:line="774" pos:column="27"/></condition><then><block pos:line="774" pos:column="27">{
          <expr_stmt><expr><name pos:line="775" pos:column="11">k<pos:position pos:line="775" pos:column="12"/></name> <operator pos:line="775" pos:column="13">=<pos:position pos:line="775" pos:column="14"/></operator> <literal type="number" pos:line="775" pos:column="15">1<pos:position pos:line="775" pos:column="16"/></literal></expr>;<pos:position pos:line="775" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="776" pos:column="10"/></block></then></if></elseif><else pos:line="776" pos:column="10">else<block pos:line="776" pos:column="14">{
          <for pos:line="777" pos:column="11">for<control pos:line="777" pos:column="14">(<init><expr><name pos:line="777" pos:column="15">k<pos:position pos:line="777" pos:column="16"/></name><operator pos:line="777" pos:column="16">=<pos:position pos:line="777" pos:column="17"/></operator><literal type="number" pos:line="777" pos:column="17">1<pos:position pos:line="777" pos:column="18"/></literal></expr>;<pos:position pos:line="777" pos:column="19"/></init> <condition><expr><name pos:line="777" pos:column="20">k<pos:position pos:line="777" pos:column="21"/></name><operator pos:line="777" pos:column="21">&lt;=<pos:position pos:line="777" pos:column="26"/></operator><name><name pos:line="777" pos:column="23">pTab<pos:position pos:line="777" pos:column="27"/></name><operator pos:line="777" pos:column="27">-&gt;<pos:position pos:line="777" pos:column="32"/></operator><name pos:line="777" pos:column="29">nCol<pos:position pos:line="777" pos:column="33"/></name></name> <operator pos:line="777" pos:column="34">&amp;&amp;<pos:position pos:line="777" pos:column="44"/></operator> <name><name pos:line="777" pos:column="37">pPk<pos:position pos:line="777" pos:column="40"/></name><operator pos:line="777" pos:column="40">-&gt;<pos:position pos:line="777" pos:column="45"/></operator><name pos:line="777" pos:column="42">aiColumn<pos:position pos:line="777" pos:column="50"/></name><index pos:line="777" pos:column="50">[<expr><name pos:line="777" pos:column="51">k<pos:position pos:line="777" pos:column="52"/></name><operator pos:line="777" pos:column="52">-<pos:position pos:line="777" pos:column="53"/></operator><literal type="number" pos:line="777" pos:column="53">1<pos:position pos:line="777" pos:column="54"/></literal></expr>]<pos:position pos:line="777" pos:column="55"/></index></name><operator pos:line="777" pos:column="55">!=<pos:position pos:line="777" pos:column="57"/></operator><name pos:line="777" pos:column="57">i<pos:position pos:line="777" pos:column="58"/></name></expr>;<pos:position pos:line="777" pos:column="59"/></condition> <incr><expr><name pos:line="777" pos:column="60">k<pos:position pos:line="777" pos:column="61"/></name><operator pos:line="777" pos:column="61">++<pos:position pos:line="777" pos:column="63"/></operator></expr></incr>)<pos:position pos:line="777" pos:column="64"/></control><block pos:line="777" pos:column="64">{}<pos:position pos:line="777" pos:column="66"/></block></for>
        }<pos:position pos:line="778" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="779" pos:column="9">assert<pos:position pos:line="779" pos:column="15"/></name><argument_list pos:line="779" pos:column="15">( <argument><expr><name><name pos:line="779" pos:column="17">pCol<pos:position pos:line="779" pos:column="21"/></name><operator pos:line="779" pos:column="21">-&gt;<pos:position pos:line="779" pos:column="26"/></operator><name pos:line="779" pos:column="23">pDflt<pos:position pos:line="779" pos:column="28"/></name></name><operator pos:line="779" pos:column="28">==<pos:position pos:line="779" pos:column="30"/></operator><literal type="number" pos:line="779" pos:column="30">0<pos:position pos:line="779" pos:column="31"/></literal> <operator pos:line="779" pos:column="32">||<pos:position pos:line="779" pos:column="34"/></operator> <name><name pos:line="779" pos:column="35">pCol<pos:position pos:line="779" pos:column="39"/></name><operator pos:line="779" pos:column="39">-&gt;<pos:position pos:line="779" pos:column="44"/></operator><name pos:line="779" pos:column="41">pDflt<pos:position pos:line="779" pos:column="46"/></name><operator pos:line="779" pos:column="46">-&gt;<pos:position pos:line="779" pos:column="51"/></operator><name pos:line="779" pos:column="48">op<pos:position pos:line="779" pos:column="50"/></name></name><operator pos:line="779" pos:column="50">==<pos:position pos:line="779" pos:column="52"/></operator><name pos:line="779" pos:column="52">TK_SPAN<pos:position pos:line="779" pos:column="59"/></name></expr></argument> )<pos:position pos:line="779" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="779" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="780" pos:column="9">sqlite3VdbeMultiLoad<pos:position pos:line="780" pos:column="29"/></name><argument_list pos:line="780" pos:column="29">(<argument><expr><name pos:line="780" pos:column="30">v<pos:position pos:line="780" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="780" pos:column="33">1<pos:position pos:line="780" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="780" pos:column="36">"issisi"<pos:position pos:line="780" pos:column="44"/></literal></expr></argument>,
               <argument><expr><name pos:line="781" pos:column="16">i<pos:position pos:line="781" pos:column="17"/></name><operator pos:line="781" pos:column="17">-<pos:position pos:line="781" pos:column="18"/></operator><name pos:line="781" pos:column="18">nHidden<pos:position pos:line="781" pos:column="25"/></name></expr></argument>,
               <argument><expr><name><name pos:line="782" pos:column="16">pCol<pos:position pos:line="782" pos:column="20"/></name><operator pos:line="782" pos:column="20">-&gt;<pos:position pos:line="782" pos:column="25"/></operator><name pos:line="782" pos:column="22">zName<pos:position pos:line="782" pos:column="27"/></name></name></expr></argument>,
               <argument><expr><call><name pos:line="783" pos:column="16">sqlite3ColumnType<pos:position pos:line="783" pos:column="33"/></name><argument_list pos:line="783" pos:column="33">(<argument><expr><name pos:line="783" pos:column="34">pCol<pos:position pos:line="783" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="783" pos:column="39">""<pos:position pos:line="783" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="783" pos:column="42"/></argument_list></call></expr></argument>,
               <argument><expr><ternary><condition><expr><name><name pos:line="784" pos:column="16">pCol<pos:position pos:line="784" pos:column="20"/></name><operator pos:line="784" pos:column="20">-&gt;<pos:position pos:line="784" pos:column="25"/></operator><name pos:line="784" pos:column="22">notNull<pos:position pos:line="784" pos:column="29"/></name></name></expr> ?<pos:position pos:line="784" pos:column="31"/></condition><then pos:line="784" pos:column="31"> <expr><literal type="number" pos:line="784" pos:column="32">1<pos:position pos:line="784" pos:column="33"/></literal></expr> <pos:position pos:line="784" pos:column="34"/></then><else pos:line="784" pos:column="34">: <expr><literal type="number" pos:line="784" pos:column="36">0<pos:position pos:line="784" pos:column="37"/></literal></expr></else></ternary></expr></argument>,
               <argument><expr><ternary><condition><expr><name><name pos:line="785" pos:column="16">pCol<pos:position pos:line="785" pos:column="20"/></name><operator pos:line="785" pos:column="20">-&gt;<pos:position pos:line="785" pos:column="25"/></operator><name pos:line="785" pos:column="22">pDflt<pos:position pos:line="785" pos:column="27"/></name></name></expr> ?<pos:position pos:line="785" pos:column="29"/></condition><then pos:line="785" pos:column="29"> <expr><name><name pos:line="785" pos:column="30">pCol<pos:position pos:line="785" pos:column="34"/></name><operator pos:line="785" pos:column="34">-&gt;<pos:position pos:line="785" pos:column="39"/></operator><name pos:line="785" pos:column="36">pDflt<pos:position pos:line="785" pos:column="41"/></name><operator pos:line="785" pos:column="41">-&gt;<pos:position pos:line="785" pos:column="46"/></operator><name pos:line="785" pos:column="43">u<pos:position pos:line="785" pos:column="44"/></name><operator pos:line="785" pos:column="44">.<pos:position pos:line="785" pos:column="45"/></operator><name pos:line="785" pos:column="45">zToken<pos:position pos:line="785" pos:column="51"/></name></name></expr> <pos:position pos:line="785" pos:column="52"/></then><else pos:line="785" pos:column="52">: <expr><literal type="number" pos:line="785" pos:column="54">0<pos:position pos:line="785" pos:column="55"/></literal></expr></else></ternary></expr></argument>,
               <argument><expr><name pos:line="786" pos:column="16">k<pos:position pos:line="786" pos:column="17"/></name></expr></argument>)<pos:position pos:line="786" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="786" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="787" pos:column="8"/></block></for>
    }<pos:position pos:line="788" pos:column="6"/></block></then></if>
  }<pos:position pos:line="789" pos:column="4"/></block></then></if>
  <break pos:line="790" pos:column="3">break;<pos:position pos:line="790" pos:column="9"/></break>

<cpp:ifdef pos:line="792" pos:column="1">#<cpp:directive pos:line="792" pos:column="2">ifdef<pos:position pos:line="792" pos:column="7"/></cpp:directive> <name pos:line="792" pos:column="8">SQLITE_DEBUG<pos:position pos:line="792" pos:column="20"/></name></cpp:ifdef>
  <case pos:line="793" pos:column="3">case <expr><name pos:line="793" pos:column="8">PragTyp_STATS<pos:position pos:line="793" pos:column="21"/></name></expr>:<pos:position pos:line="793" pos:column="22"/></case> <block pos:line="793" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="794" pos:column="5">Index<pos:position pos:line="794" pos:column="10"/></name> <modifier pos:line="794" pos:column="11">*<pos:position pos:line="794" pos:column="12"/></modifier></type><name pos:line="794" pos:column="12">pIdx<pos:position pos:line="794" pos:column="16"/></name></decl>;<pos:position pos:line="794" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="795" pos:column="5">HashElem<pos:position pos:line="795" pos:column="13"/></name> <modifier pos:line="795" pos:column="14">*<pos:position pos:line="795" pos:column="15"/></modifier></type><name pos:line="795" pos:column="15">i<pos:position pos:line="795" pos:column="16"/></name></decl>;<pos:position pos:line="795" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="796" pos:column="5">pParse<pos:position pos:line="796" pos:column="11"/></name><operator pos:line="796" pos:column="11">-&gt;<pos:position pos:line="796" pos:column="16"/></operator><name pos:line="796" pos:column="13">nMem<pos:position pos:line="796" pos:column="17"/></name></name> <operator pos:line="796" pos:column="18">=<pos:position pos:line="796" pos:column="19"/></operator> <literal type="number" pos:line="796" pos:column="20">5<pos:position pos:line="796" pos:column="21"/></literal></expr>;<pos:position pos:line="796" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="797" pos:column="5">sqlite3CodeVerifySchema<pos:position pos:line="797" pos:column="28"/></name><argument_list pos:line="797" pos:column="28">(<argument><expr><name pos:line="797" pos:column="29">pParse<pos:position pos:line="797" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="797" pos:column="37">iDb<pos:position pos:line="797" pos:column="40"/></name></expr></argument>)<pos:position pos:line="797" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="797" pos:column="42"/></expr_stmt>
    <for pos:line="798" pos:column="5">for<control pos:line="798" pos:column="8">(<init><expr><name pos:line="798" pos:column="9">i<pos:position pos:line="798" pos:column="10"/></name><operator pos:line="798" pos:column="10">=<pos:position pos:line="798" pos:column="11"/></operator><call><name pos:line="798" pos:column="11">sqliteHashFirst<pos:position pos:line="798" pos:column="26"/></name><argument_list pos:line="798" pos:column="26">(<argument><expr><operator pos:line="798" pos:column="27">&amp;<pos:position pos:line="798" pos:column="32"/></operator><name><name pos:line="798" pos:column="28">pDb<pos:position pos:line="798" pos:column="31"/></name><operator pos:line="798" pos:column="31">-&gt;<pos:position pos:line="798" pos:column="36"/></operator><name pos:line="798" pos:column="33">pSchema<pos:position pos:line="798" pos:column="40"/></name><operator pos:line="798" pos:column="40">-&gt;<pos:position pos:line="798" pos:column="45"/></operator><name pos:line="798" pos:column="42">tblHash<pos:position pos:line="798" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="798" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="798" pos:column="51"/></init> <condition><expr><name pos:line="798" pos:column="52">i<pos:position pos:line="798" pos:column="53"/></name></expr>;<pos:position pos:line="798" pos:column="54"/></condition> <incr><expr><name pos:line="798" pos:column="55">i<pos:position pos:line="798" pos:column="56"/></name><operator pos:line="798" pos:column="56">=<pos:position pos:line="798" pos:column="57"/></operator><call><name pos:line="798" pos:column="57">sqliteHashNext<pos:position pos:line="798" pos:column="71"/></name><argument_list pos:line="798" pos:column="71">(<argument><expr><name pos:line="798" pos:column="72">i<pos:position pos:line="798" pos:column="73"/></name></expr></argument>)<pos:position pos:line="798" pos:column="74"/></argument_list></call></expr></incr>)<pos:position pos:line="798" pos:column="75"/></control><block pos:line="798" pos:column="75">{
      <decl_stmt><decl><type><name pos:line="799" pos:column="7">Table<pos:position pos:line="799" pos:column="12"/></name> <modifier pos:line="799" pos:column="13">*<pos:position pos:line="799" pos:column="14"/></modifier></type><name pos:line="799" pos:column="14">pTab<pos:position pos:line="799" pos:column="18"/></name> <init pos:line="799" pos:column="19">= <expr><call><name pos:line="799" pos:column="21">sqliteHashData<pos:position pos:line="799" pos:column="35"/></name><argument_list pos:line="799" pos:column="35">(<argument><expr><name pos:line="799" pos:column="36">i<pos:position pos:line="799" pos:column="37"/></name></expr></argument>)<pos:position pos:line="799" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="799" pos:column="39"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="800" pos:column="7">sqlite3VdbeMultiLoad<pos:position pos:line="800" pos:column="27"/></name><argument_list pos:line="800" pos:column="27">(<argument><expr><name pos:line="800" pos:column="28">v<pos:position pos:line="800" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="800" pos:column="31">1<pos:position pos:line="800" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="800" pos:column="34">"ssiii"<pos:position pos:line="800" pos:column="41"/></literal></expr></argument>,
           <argument><expr><name><name pos:line="801" pos:column="12">pTab<pos:position pos:line="801" pos:column="16"/></name><operator pos:line="801" pos:column="16">-&gt;<pos:position pos:line="801" pos:column="21"/></operator><name pos:line="801" pos:column="18">zName<pos:position pos:line="801" pos:column="23"/></name></name></expr></argument>,
           <argument><expr><literal type="number" pos:line="802" pos:column="12">0<pos:position pos:line="802" pos:column="13"/></literal></expr></argument>,
           <argument><expr><name><name pos:line="803" pos:column="12">pTab<pos:position pos:line="803" pos:column="16"/></name><operator pos:line="803" pos:column="16">-&gt;<pos:position pos:line="803" pos:column="21"/></operator><name pos:line="803" pos:column="18">szTabRow<pos:position pos:line="803" pos:column="26"/></name></name></expr></argument>,
           <argument><expr><name><name pos:line="804" pos:column="12">pTab<pos:position pos:line="804" pos:column="16"/></name><operator pos:line="804" pos:column="16">-&gt;<pos:position pos:line="804" pos:column="21"/></operator><name pos:line="804" pos:column="18">nRowLogEst<pos:position pos:line="804" pos:column="28"/></name></name></expr></argument>,
           <argument><expr><name><name pos:line="805" pos:column="12">pTab<pos:position pos:line="805" pos:column="16"/></name><operator pos:line="805" pos:column="16">-&gt;<pos:position pos:line="805" pos:column="21"/></operator><name pos:line="805" pos:column="18">tabFlags<pos:position pos:line="805" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="805" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="805" pos:column="28"/></expr_stmt>
      <for pos:line="806" pos:column="7">for<control pos:line="806" pos:column="10">(<init><expr><name pos:line="806" pos:column="11">pIdx<pos:position pos:line="806" pos:column="15"/></name><operator pos:line="806" pos:column="15">=<pos:position pos:line="806" pos:column="16"/></operator><name><name pos:line="806" pos:column="16">pTab<pos:position pos:line="806" pos:column="20"/></name><operator pos:line="806" pos:column="20">-&gt;<pos:position pos:line="806" pos:column="25"/></operator><name pos:line="806" pos:column="22">pIndex<pos:position pos:line="806" pos:column="28"/></name></name></expr>;<pos:position pos:line="806" pos:column="29"/></init> <condition><expr><name pos:line="806" pos:column="30">pIdx<pos:position pos:line="806" pos:column="34"/></name></expr>;<pos:position pos:line="806" pos:column="35"/></condition> <incr><expr><name pos:line="806" pos:column="36">pIdx<pos:position pos:line="806" pos:column="40"/></name><operator pos:line="806" pos:column="40">=<pos:position pos:line="806" pos:column="41"/></operator><name><name pos:line="806" pos:column="41">pIdx<pos:position pos:line="806" pos:column="45"/></name><operator pos:line="806" pos:column="45">-&gt;<pos:position pos:line="806" pos:column="50"/></operator><name pos:line="806" pos:column="47">pNext<pos:position pos:line="806" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="806" pos:column="53"/></control><block pos:line="806" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="807" pos:column="9">sqlite3VdbeMultiLoad<pos:position pos:line="807" pos:column="29"/></name><argument_list pos:line="807" pos:column="29">(<argument><expr><name pos:line="807" pos:column="30">v<pos:position pos:line="807" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="807" pos:column="33">2<pos:position pos:line="807" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="807" pos:column="36">"siiiX"<pos:position pos:line="807" pos:column="43"/></literal></expr></argument>,
           <argument><expr><name><name pos:line="808" pos:column="12">pIdx<pos:position pos:line="808" pos:column="16"/></name><operator pos:line="808" pos:column="16">-&gt;<pos:position pos:line="808" pos:column="21"/></operator><name pos:line="808" pos:column="18">zName<pos:position pos:line="808" pos:column="23"/></name></name></expr></argument>,
           <argument><expr><name><name pos:line="809" pos:column="12">pIdx<pos:position pos:line="809" pos:column="16"/></name><operator pos:line="809" pos:column="16">-&gt;<pos:position pos:line="809" pos:column="21"/></operator><name pos:line="809" pos:column="18">szIdxRow<pos:position pos:line="809" pos:column="26"/></name></name></expr></argument>,
           <argument><expr><name><name pos:line="810" pos:column="12">pIdx<pos:position pos:line="810" pos:column="16"/></name><operator pos:line="810" pos:column="16">-&gt;<pos:position pos:line="810" pos:column="21"/></operator><name pos:line="810" pos:column="18">aiRowLogEst<pos:position pos:line="810" pos:column="29"/></name><index pos:line="810" pos:column="29">[<expr><literal type="number" pos:line="810" pos:column="30">0<pos:position pos:line="810" pos:column="31"/></literal></expr>]<pos:position pos:line="810" pos:column="32"/></index></name></expr></argument>,
           <argument><expr><name><name pos:line="811" pos:column="12">pIdx<pos:position pos:line="811" pos:column="16"/></name><operator pos:line="811" pos:column="16">-&gt;<pos:position pos:line="811" pos:column="21"/></operator><name pos:line="811" pos:column="18">hasStat1<pos:position pos:line="811" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="811" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="811" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="812" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="812" pos:column="26"/></name><argument_list pos:line="812" pos:column="26">(<argument><expr><name pos:line="812" pos:column="27">v<pos:position pos:line="812" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="812" pos:column="30">OP_ResultRow<pos:position pos:line="812" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="812" pos:column="44">1<pos:position pos:line="812" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="812" pos:column="47">5<pos:position pos:line="812" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="812" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="812" pos:column="50"/></expr_stmt>
      }<pos:position pos:line="813" pos:column="8"/></block></for>
    }<pos:position pos:line="814" pos:column="6"/></block></for>
  }<pos:position pos:line="815" pos:column="4"/></block>
  <break pos:line="816" pos:column="3">break;<pos:position pos:line="816" pos:column="9"/></break>
<cpp:endif pos:line="817" pos:column="1">#<cpp:directive pos:line="817" pos:column="2">endif<pos:position pos:line="817" pos:column="7"/></cpp:directive></cpp:endif>

  <case pos:line="819" pos:column="3">case <expr><name pos:line="819" pos:column="8">PragTyp_INDEX_INFO<pos:position pos:line="819" pos:column="26"/></name></expr>:<pos:position pos:line="819" pos:column="27"/></case> <if pos:line="819" pos:column="28">if<condition pos:line="819" pos:column="30">( <expr><name pos:line="819" pos:column="32">zRight<pos:position pos:line="819" pos:column="38"/></name></expr> )<pos:position pos:line="819" pos:column="40"/></condition><then><block pos:line="819" pos:column="40">{
    <decl_stmt><decl><type><name pos:line="820" pos:column="5">Index<pos:position pos:line="820" pos:column="10"/></name> <modifier pos:line="820" pos:column="11">*<pos:position pos:line="820" pos:column="12"/></modifier></type><name pos:line="820" pos:column="12">pIdx<pos:position pos:line="820" pos:column="16"/></name></decl>;<pos:position pos:line="820" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="821" pos:column="5">Table<pos:position pos:line="821" pos:column="10"/></name> <modifier pos:line="821" pos:column="11">*<pos:position pos:line="821" pos:column="12"/></modifier></type><name pos:line="821" pos:column="12">pTab<pos:position pos:line="821" pos:column="16"/></name></decl>;<pos:position pos:line="821" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><name pos:line="822" pos:column="5">pIdx<pos:position pos:line="822" pos:column="9"/></name> <operator pos:line="822" pos:column="10">=<pos:position pos:line="822" pos:column="11"/></operator> <call><name pos:line="822" pos:column="12">sqlite3FindIndex<pos:position pos:line="822" pos:column="28"/></name><argument_list pos:line="822" pos:column="28">(<argument><expr><name pos:line="822" pos:column="29">db<pos:position pos:line="822" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="822" pos:column="33">zRight<pos:position pos:line="822" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="822" pos:column="41">zDb<pos:position pos:line="822" pos:column="44"/></name></expr></argument>)<pos:position pos:line="822" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="822" pos:column="46"/></expr_stmt>
    <if pos:line="823" pos:column="5">if<condition pos:line="823" pos:column="7">( <expr><name pos:line="823" pos:column="9">pIdx<pos:position pos:line="823" pos:column="13"/></name></expr> )<pos:position pos:line="823" pos:column="15"/></condition><then><block pos:line="823" pos:column="15">{
      <decl_stmt><decl><type><name pos:line="824" pos:column="7">int<pos:position pos:line="824" pos:column="10"/></name></type> <name pos:line="824" pos:column="11">i<pos:position pos:line="824" pos:column="12"/></name></decl>;<pos:position pos:line="824" pos:column="13"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="825" pos:column="7">int<pos:position pos:line="825" pos:column="10"/></name></type> <name pos:line="825" pos:column="11">mx<pos:position pos:line="825" pos:column="13"/></name></decl>;<pos:position pos:line="825" pos:column="14"/></decl_stmt>
      <if pos:line="826" pos:column="7">if<condition pos:line="826" pos:column="9">( <expr><name><name pos:line="826" pos:column="11">pPragma<pos:position pos:line="826" pos:column="18"/></name><operator pos:line="826" pos:column="18">-&gt;<pos:position pos:line="826" pos:column="23"/></operator><name pos:line="826" pos:column="20">iArg<pos:position pos:line="826" pos:column="24"/></name></name></expr> )<pos:position pos:line="826" pos:column="26"/></condition><then><block pos:line="826" pos:column="26">{
        <comment type="block" pos:line="827" pos:column="9">/* PRAGMA index_xinfo (newer version with more rows and columns) */</comment>
        <expr_stmt><expr><name pos:line="828" pos:column="9">mx<pos:position pos:line="828" pos:column="11"/></name> <operator pos:line="828" pos:column="12">=<pos:position pos:line="828" pos:column="13"/></operator> <name><name pos:line="828" pos:column="14">pIdx<pos:position pos:line="828" pos:column="18"/></name><operator pos:line="828" pos:column="18">-&gt;<pos:position pos:line="828" pos:column="23"/></operator><name pos:line="828" pos:column="20">nColumn<pos:position pos:line="828" pos:column="27"/></name></name></expr>;<pos:position pos:line="828" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="829" pos:column="9">pParse<pos:position pos:line="829" pos:column="15"/></name><operator pos:line="829" pos:column="15">-&gt;<pos:position pos:line="829" pos:column="20"/></operator><name pos:line="829" pos:column="17">nMem<pos:position pos:line="829" pos:column="21"/></name></name> <operator pos:line="829" pos:column="22">=<pos:position pos:line="829" pos:column="23"/></operator> <literal type="number" pos:line="829" pos:column="24">6<pos:position pos:line="829" pos:column="25"/></literal></expr>;<pos:position pos:line="829" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="830" pos:column="8"/></block></then><else pos:line="830" pos:column="8">else<block pos:line="830" pos:column="12">{
        <comment type="block" pos:line="831" pos:column="9">/* PRAGMA index_info (legacy version) */</comment>
        <expr_stmt><expr><name pos:line="832" pos:column="9">mx<pos:position pos:line="832" pos:column="11"/></name> <operator pos:line="832" pos:column="12">=<pos:position pos:line="832" pos:column="13"/></operator> <name><name pos:line="832" pos:column="14">pIdx<pos:position pos:line="832" pos:column="18"/></name><operator pos:line="832" pos:column="18">-&gt;<pos:position pos:line="832" pos:column="23"/></operator><name pos:line="832" pos:column="20">nKeyCol<pos:position pos:line="832" pos:column="27"/></name></name></expr>;<pos:position pos:line="832" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="833" pos:column="9">pParse<pos:position pos:line="833" pos:column="15"/></name><operator pos:line="833" pos:column="15">-&gt;<pos:position pos:line="833" pos:column="20"/></operator><name pos:line="833" pos:column="17">nMem<pos:position pos:line="833" pos:column="21"/></name></name> <operator pos:line="833" pos:column="22">=<pos:position pos:line="833" pos:column="23"/></operator> <literal type="number" pos:line="833" pos:column="24">3<pos:position pos:line="833" pos:column="25"/></literal></expr>;<pos:position pos:line="833" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="834" pos:column="8"/></block></else></if>
      <expr_stmt><expr><name pos:line="835" pos:column="7">pTab<pos:position pos:line="835" pos:column="11"/></name> <operator pos:line="835" pos:column="12">=<pos:position pos:line="835" pos:column="13"/></operator> <name><name pos:line="835" pos:column="14">pIdx<pos:position pos:line="835" pos:column="18"/></name><operator pos:line="835" pos:column="18">-&gt;<pos:position pos:line="835" pos:column="23"/></operator><name pos:line="835" pos:column="20">pTable<pos:position pos:line="835" pos:column="26"/></name></name></expr>;<pos:position pos:line="835" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="836" pos:column="7">sqlite3CodeVerifySchema<pos:position pos:line="836" pos:column="30"/></name><argument_list pos:line="836" pos:column="30">(<argument><expr><name pos:line="836" pos:column="31">pParse<pos:position pos:line="836" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="836" pos:column="39">iDb<pos:position pos:line="836" pos:column="42"/></name></expr></argument>)<pos:position pos:line="836" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="836" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="837" pos:column="7">assert<pos:position pos:line="837" pos:column="13"/></name><argument_list pos:line="837" pos:column="13">( <argument><expr><name><name pos:line="837" pos:column="15">pParse<pos:position pos:line="837" pos:column="21"/></name><operator pos:line="837" pos:column="21">-&gt;<pos:position pos:line="837" pos:column="26"/></operator><name pos:line="837" pos:column="23">nMem<pos:position pos:line="837" pos:column="27"/></name></name><operator pos:line="837" pos:column="27">&lt;=<pos:position pos:line="837" pos:column="32"/></operator><name><name pos:line="837" pos:column="29">pPragma<pos:position pos:line="837" pos:column="36"/></name><operator pos:line="837" pos:column="36">-&gt;<pos:position pos:line="837" pos:column="41"/></operator><name pos:line="837" pos:column="38">nPragCName<pos:position pos:line="837" pos:column="48"/></name></name></expr></argument> )<pos:position pos:line="837" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="837" pos:column="51"/></expr_stmt>
      <for pos:line="838" pos:column="7">for<control pos:line="838" pos:column="10">(<init><expr><name pos:line="838" pos:column="11">i<pos:position pos:line="838" pos:column="12"/></name><operator pos:line="838" pos:column="12">=<pos:position pos:line="838" pos:column="13"/></operator><literal type="number" pos:line="838" pos:column="13">0<pos:position pos:line="838" pos:column="14"/></literal></expr>;<pos:position pos:line="838" pos:column="15"/></init> <condition><expr><name pos:line="838" pos:column="16">i<pos:position pos:line="838" pos:column="17"/></name><operator pos:line="838" pos:column="17">&lt;<pos:position pos:line="838" pos:column="21"/></operator><name pos:line="838" pos:column="18">mx<pos:position pos:line="838" pos:column="20"/></name></expr>;<pos:position pos:line="838" pos:column="21"/></condition> <incr><expr><name pos:line="838" pos:column="22">i<pos:position pos:line="838" pos:column="23"/></name><operator pos:line="838" pos:column="23">++<pos:position pos:line="838" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="838" pos:column="26"/></control><block pos:line="838" pos:column="26">{
        <decl_stmt><decl><type><name pos:line="839" pos:column="9">i16<pos:position pos:line="839" pos:column="12"/></name></type> <name pos:line="839" pos:column="13">cnum<pos:position pos:line="839" pos:column="17"/></name> <init pos:line="839" pos:column="18">= <expr><name><name pos:line="839" pos:column="20">pIdx<pos:position pos:line="839" pos:column="24"/></name><operator pos:line="839" pos:column="24">-&gt;<pos:position pos:line="839" pos:column="29"/></operator><name pos:line="839" pos:column="26">aiColumn<pos:position pos:line="839" pos:column="34"/></name><index pos:line="839" pos:column="34">[<expr><name pos:line="839" pos:column="35">i<pos:position pos:line="839" pos:column="36"/></name></expr>]<pos:position pos:line="839" pos:column="37"/></index></name></expr></init></decl>;<pos:position pos:line="839" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="840" pos:column="9">sqlite3VdbeMultiLoad<pos:position pos:line="840" pos:column="29"/></name><argument_list pos:line="840" pos:column="29">(<argument><expr><name pos:line="840" pos:column="30">v<pos:position pos:line="840" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="840" pos:column="33">1<pos:position pos:line="840" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="840" pos:column="36">"iisX"<pos:position pos:line="840" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="840" pos:column="44">i<pos:position pos:line="840" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="840" pos:column="47">cnum<pos:position pos:line="840" pos:column="51"/></name></expr></argument>,
                             <argument><expr><ternary><condition><expr><name pos:line="841" pos:column="30">cnum<pos:position pos:line="841" pos:column="34"/></name><operator pos:line="841" pos:column="34">&lt;<pos:position pos:line="841" pos:column="38"/></operator><literal type="number" pos:line="841" pos:column="35">0<pos:position pos:line="841" pos:column="36"/></literal></expr> ?<pos:position pos:line="841" pos:column="38"/></condition><then pos:line="841" pos:column="38"> <expr><literal type="number" pos:line="841" pos:column="39">0<pos:position pos:line="841" pos:column="40"/></literal></expr> <pos:position pos:line="841" pos:column="41"/></then><else pos:line="841" pos:column="41">: <expr><name><name pos:line="841" pos:column="43">pTab<pos:position pos:line="841" pos:column="47"/></name><operator pos:line="841" pos:column="47">-&gt;<pos:position pos:line="841" pos:column="52"/></operator><name pos:line="841" pos:column="49">aCol<pos:position pos:line="841" pos:column="53"/></name><index pos:line="841" pos:column="53">[<expr><name pos:line="841" pos:column="54">cnum<pos:position pos:line="841" pos:column="58"/></name></expr>]<pos:position pos:line="841" pos:column="59"/></index></name><operator pos:line="841" pos:column="59">.<pos:position pos:line="841" pos:column="60"/></operator><name pos:line="841" pos:column="60">zName<pos:position pos:line="841" pos:column="65"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="841" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="841" pos:column="67"/></expr_stmt>
        <if pos:line="842" pos:column="9">if<condition pos:line="842" pos:column="11">( <expr><name><name pos:line="842" pos:column="13">pPragma<pos:position pos:line="842" pos:column="20"/></name><operator pos:line="842" pos:column="20">-&gt;<pos:position pos:line="842" pos:column="25"/></operator><name pos:line="842" pos:column="22">iArg<pos:position pos:line="842" pos:column="26"/></name></name></expr> )<pos:position pos:line="842" pos:column="28"/></condition><then><block pos:line="842" pos:column="28">{
          <expr_stmt><expr><call><name pos:line="843" pos:column="11">sqlite3VdbeMultiLoad<pos:position pos:line="843" pos:column="31"/></name><argument_list pos:line="843" pos:column="31">(<argument><expr><name pos:line="843" pos:column="32">v<pos:position pos:line="843" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="843" pos:column="35">4<pos:position pos:line="843" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="843" pos:column="38">"isiX"<pos:position pos:line="843" pos:column="44"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="844" pos:column="13">pIdx<pos:position pos:line="844" pos:column="17"/></name><operator pos:line="844" pos:column="17">-&gt;<pos:position pos:line="844" pos:column="22"/></operator><name pos:line="844" pos:column="19">aSortOrder<pos:position pos:line="844" pos:column="29"/></name><index pos:line="844" pos:column="29">[<expr><name pos:line="844" pos:column="30">i<pos:position pos:line="844" pos:column="31"/></name></expr>]<pos:position pos:line="844" pos:column="32"/></index></name></expr></argument>,
            <argument><expr><name><name pos:line="845" pos:column="13">pIdx<pos:position pos:line="845" pos:column="17"/></name><operator pos:line="845" pos:column="17">-&gt;<pos:position pos:line="845" pos:column="22"/></operator><name pos:line="845" pos:column="19">azColl<pos:position pos:line="845" pos:column="25"/></name><index pos:line="845" pos:column="25">[<expr><name pos:line="845" pos:column="26">i<pos:position pos:line="845" pos:column="27"/></name></expr>]<pos:position pos:line="845" pos:column="28"/></index></name></expr></argument>,
            <argument><expr><name pos:line="846" pos:column="13">i<pos:position pos:line="846" pos:column="14"/></name><operator pos:line="846" pos:column="14">&lt;<pos:position pos:line="846" pos:column="18"/></operator><name><name pos:line="846" pos:column="15">pIdx<pos:position pos:line="846" pos:column="19"/></name><operator pos:line="846" pos:column="19">-&gt;<pos:position pos:line="846" pos:column="24"/></operator><name pos:line="846" pos:column="21">nKeyCol<pos:position pos:line="846" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="846" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="846" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="847" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="848" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="848" pos:column="26"/></name><argument_list pos:line="848" pos:column="26">(<argument><expr><name pos:line="848" pos:column="27">v<pos:position pos:line="848" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="848" pos:column="30">OP_ResultRow<pos:position pos:line="848" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="848" pos:column="44">1<pos:position pos:line="848" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="848" pos:column="47">pParse<pos:position pos:line="848" pos:column="53"/></name><operator pos:line="848" pos:column="53">-&gt;<pos:position pos:line="848" pos:column="58"/></operator><name pos:line="848" pos:column="55">nMem<pos:position pos:line="848" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="848" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="848" pos:column="61"/></expr_stmt>
      }<pos:position pos:line="849" pos:column="8"/></block></for>
    }<pos:position pos:line="850" pos:column="6"/></block></then></if>
  }<pos:position pos:line="851" pos:column="4"/></block></then></if>
  <break pos:line="852" pos:column="3">break;<pos:position pos:line="852" pos:column="9"/></break>

  <case pos:line="854" pos:column="3">case <expr><name pos:line="854" pos:column="8">PragTyp_INDEX_LIST<pos:position pos:line="854" pos:column="26"/></name></expr>:<pos:position pos:line="854" pos:column="27"/></case> <if pos:line="854" pos:column="28">if<condition pos:line="854" pos:column="30">( <expr><name pos:line="854" pos:column="32">zRight<pos:position pos:line="854" pos:column="38"/></name></expr> )<pos:position pos:line="854" pos:column="40"/></condition><then><block pos:line="854" pos:column="40">{
    <decl_stmt><decl><type><name pos:line="855" pos:column="5">Index<pos:position pos:line="855" pos:column="10"/></name> <modifier pos:line="855" pos:column="11">*<pos:position pos:line="855" pos:column="12"/></modifier></type><name pos:line="855" pos:column="12">pIdx<pos:position pos:line="855" pos:column="16"/></name></decl>;<pos:position pos:line="855" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="856" pos:column="5">Table<pos:position pos:line="856" pos:column="10"/></name> <modifier pos:line="856" pos:column="11">*<pos:position pos:line="856" pos:column="12"/></modifier></type><name pos:line="856" pos:column="12">pTab<pos:position pos:line="856" pos:column="16"/></name></decl>;<pos:position pos:line="856" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="857" pos:column="5">int<pos:position pos:line="857" pos:column="8"/></name></type> <name pos:line="857" pos:column="9">i<pos:position pos:line="857" pos:column="10"/></name></decl>;<pos:position pos:line="857" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><name pos:line="858" pos:column="5">pTab<pos:position pos:line="858" pos:column="9"/></name> <operator pos:line="858" pos:column="10">=<pos:position pos:line="858" pos:column="11"/></operator> <call><name pos:line="858" pos:column="12">sqlite3FindTable<pos:position pos:line="858" pos:column="28"/></name><argument_list pos:line="858" pos:column="28">(<argument><expr><name pos:line="858" pos:column="29">db<pos:position pos:line="858" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="858" pos:column="33">zRight<pos:position pos:line="858" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="858" pos:column="41">zDb<pos:position pos:line="858" pos:column="44"/></name></expr></argument>)<pos:position pos:line="858" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="858" pos:column="46"/></expr_stmt>
    <if pos:line="859" pos:column="5">if<condition pos:line="859" pos:column="7">( <expr><name pos:line="859" pos:column="9">pTab<pos:position pos:line="859" pos:column="13"/></name></expr> )<pos:position pos:line="859" pos:column="15"/></condition><then><block pos:line="859" pos:column="15">{
      <expr_stmt><expr><name><name pos:line="860" pos:column="7">pParse<pos:position pos:line="860" pos:column="13"/></name><operator pos:line="860" pos:column="13">-&gt;<pos:position pos:line="860" pos:column="18"/></operator><name pos:line="860" pos:column="15">nMem<pos:position pos:line="860" pos:column="19"/></name></name> <operator pos:line="860" pos:column="20">=<pos:position pos:line="860" pos:column="21"/></operator> <literal type="number" pos:line="860" pos:column="22">5<pos:position pos:line="860" pos:column="23"/></literal></expr>;<pos:position pos:line="860" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="861" pos:column="7">sqlite3CodeVerifySchema<pos:position pos:line="861" pos:column="30"/></name><argument_list pos:line="861" pos:column="30">(<argument><expr><name pos:line="861" pos:column="31">pParse<pos:position pos:line="861" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="861" pos:column="39">iDb<pos:position pos:line="861" pos:column="42"/></name></expr></argument>)<pos:position pos:line="861" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="861" pos:column="44"/></expr_stmt>
      <for pos:line="862" pos:column="7">for<control pos:line="862" pos:column="10">(<init><expr><name pos:line="862" pos:column="11">pIdx<pos:position pos:line="862" pos:column="15"/></name><operator pos:line="862" pos:column="15">=<pos:position pos:line="862" pos:column="16"/></operator><name><name pos:line="862" pos:column="16">pTab<pos:position pos:line="862" pos:column="20"/></name><operator pos:line="862" pos:column="20">-&gt;<pos:position pos:line="862" pos:column="25"/></operator><name pos:line="862" pos:column="22">pIndex<pos:position pos:line="862" pos:column="28"/></name></name></expr><operator pos:line="862" pos:column="28">,<pos:position pos:line="862" pos:column="29"/></operator> <expr><name pos:line="862" pos:column="30">i<pos:position pos:line="862" pos:column="31"/></name><operator pos:line="862" pos:column="31">=<pos:position pos:line="862" pos:column="32"/></operator><literal type="number" pos:line="862" pos:column="32">0<pos:position pos:line="862" pos:column="33"/></literal></expr>;<pos:position pos:line="862" pos:column="34"/></init> <condition><expr><name pos:line="862" pos:column="35">pIdx<pos:position pos:line="862" pos:column="39"/></name></expr>;<pos:position pos:line="862" pos:column="40"/></condition> <incr><expr><name pos:line="862" pos:column="41">pIdx<pos:position pos:line="862" pos:column="45"/></name><operator pos:line="862" pos:column="45">=<pos:position pos:line="862" pos:column="46"/></operator><name><name pos:line="862" pos:column="46">pIdx<pos:position pos:line="862" pos:column="50"/></name><operator pos:line="862" pos:column="50">-&gt;<pos:position pos:line="862" pos:column="55"/></operator><name pos:line="862" pos:column="52">pNext<pos:position pos:line="862" pos:column="57"/></name></name></expr><operator pos:line="862" pos:column="57">,<pos:position pos:line="862" pos:column="58"/></operator> <expr><name pos:line="862" pos:column="59">i<pos:position pos:line="862" pos:column="60"/></name><operator pos:line="862" pos:column="60">++<pos:position pos:line="862" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="862" pos:column="63"/></control><block pos:line="862" pos:column="63">{
        <decl_stmt><decl><type><specifier pos:line="863" pos:column="9">const<pos:position pos:line="863" pos:column="14"/></specifier> <name pos:line="863" pos:column="15">char<pos:position pos:line="863" pos:column="19"/></name> <modifier pos:line="863" pos:column="20">*<pos:position pos:line="863" pos:column="21"/></modifier></type><name><name pos:line="863" pos:column="21">azOrigin<pos:position pos:line="863" pos:column="29"/></name><index pos:line="863" pos:column="29">[]<pos:position pos:line="863" pos:column="31"/></index></name> <init pos:line="863" pos:column="32">= <expr><block pos:line="863" pos:column="34">{ <expr><literal type="string" pos:line="863" pos:column="36">"c"<pos:position pos:line="863" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="863" pos:column="41">"u"<pos:position pos:line="863" pos:column="44"/></literal></expr>, <expr><literal type="string" pos:line="863" pos:column="46">"pk"<pos:position pos:line="863" pos:column="50"/></literal></expr> }<pos:position pos:line="863" pos:column="52"/></block></expr></init></decl>;<pos:position pos:line="863" pos:column="53"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="864" pos:column="9">sqlite3VdbeMultiLoad<pos:position pos:line="864" pos:column="29"/></name><argument_list pos:line="864" pos:column="29">(<argument><expr><name pos:line="864" pos:column="30">v<pos:position pos:line="864" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="864" pos:column="33">1<pos:position pos:line="864" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="864" pos:column="36">"isisi"<pos:position pos:line="864" pos:column="43"/></literal></expr></argument>,
           <argument><expr><name pos:line="865" pos:column="12">i<pos:position pos:line="865" pos:column="13"/></name></expr></argument>,
           <argument><expr><name><name pos:line="866" pos:column="12">pIdx<pos:position pos:line="866" pos:column="16"/></name><operator pos:line="866" pos:column="16">-&gt;<pos:position pos:line="866" pos:column="21"/></operator><name pos:line="866" pos:column="18">zName<pos:position pos:line="866" pos:column="23"/></name></name></expr></argument>,
           <argument><expr><call><name pos:line="867" pos:column="12">IsUniqueIndex<pos:position pos:line="867" pos:column="25"/></name><argument_list pos:line="867" pos:column="25">(<argument><expr><name pos:line="867" pos:column="26">pIdx<pos:position pos:line="867" pos:column="30"/></name></expr></argument>)<pos:position pos:line="867" pos:column="31"/></argument_list></call></expr></argument>,
           <argument><expr><name><name pos:line="868" pos:column="12">azOrigin<pos:position pos:line="868" pos:column="20"/></name><index pos:line="868" pos:column="20">[<expr><name><name pos:line="868" pos:column="21">pIdx<pos:position pos:line="868" pos:column="25"/></name><operator pos:line="868" pos:column="25">-&gt;<pos:position pos:line="868" pos:column="30"/></operator><name pos:line="868" pos:column="27">idxType<pos:position pos:line="868" pos:column="34"/></name></name></expr>]<pos:position pos:line="868" pos:column="35"/></index></name></expr></argument>,
           <argument><expr><name><name pos:line="869" pos:column="12">pIdx<pos:position pos:line="869" pos:column="16"/></name><operator pos:line="869" pos:column="16">-&gt;<pos:position pos:line="869" pos:column="21"/></operator><name pos:line="869" pos:column="18">pPartIdxWhere<pos:position pos:line="869" pos:column="31"/></name></name><operator pos:line="869" pos:column="31">!=<pos:position pos:line="869" pos:column="33"/></operator><literal type="number" pos:line="869" pos:column="33">0<pos:position pos:line="869" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="869" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="869" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="870" pos:column="8"/></block></for>
    }<pos:position pos:line="871" pos:column="6"/></block></then></if>
  }<pos:position pos:line="872" pos:column="4"/></block></then></if>
  <break pos:line="873" pos:column="3">break;<pos:position pos:line="873" pos:column="9"/></break>

  <case pos:line="875" pos:column="3">case <expr><name pos:line="875" pos:column="8">PragTyp_DATABASE_LIST<pos:position pos:line="875" pos:column="29"/></name></expr>:<pos:position pos:line="875" pos:column="30"/></case> <block pos:line="875" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="876" pos:column="5">int<pos:position pos:line="876" pos:column="8"/></name></type> <name pos:line="876" pos:column="9">i<pos:position pos:line="876" pos:column="10"/></name></decl>;<pos:position pos:line="876" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="877" pos:column="5">pParse<pos:position pos:line="877" pos:column="11"/></name><operator pos:line="877" pos:column="11">-&gt;<pos:position pos:line="877" pos:column="16"/></operator><name pos:line="877" pos:column="13">nMem<pos:position pos:line="877" pos:column="17"/></name></name> <operator pos:line="877" pos:column="18">=<pos:position pos:line="877" pos:column="19"/></operator> <literal type="number" pos:line="877" pos:column="20">3<pos:position pos:line="877" pos:column="21"/></literal></expr>;<pos:position pos:line="877" pos:column="22"/></expr_stmt>
    <for pos:line="878" pos:column="5">for<control pos:line="878" pos:column="8">(<init><expr><name pos:line="878" pos:column="9">i<pos:position pos:line="878" pos:column="10"/></name><operator pos:line="878" pos:column="10">=<pos:position pos:line="878" pos:column="11"/></operator><literal type="number" pos:line="878" pos:column="11">0<pos:position pos:line="878" pos:column="12"/></literal></expr>;<pos:position pos:line="878" pos:column="13"/></init> <condition><expr><name pos:line="878" pos:column="14">i<pos:position pos:line="878" pos:column="15"/></name><operator pos:line="878" pos:column="15">&lt;<pos:position pos:line="878" pos:column="19"/></operator><name><name pos:line="878" pos:column="16">db<pos:position pos:line="878" pos:column="18"/></name><operator pos:line="878" pos:column="18">-&gt;<pos:position pos:line="878" pos:column="23"/></operator><name pos:line="878" pos:column="20">nDb<pos:position pos:line="878" pos:column="23"/></name></name></expr>;<pos:position pos:line="878" pos:column="24"/></condition> <incr><expr><name pos:line="878" pos:column="25">i<pos:position pos:line="878" pos:column="26"/></name><operator pos:line="878" pos:column="26">++<pos:position pos:line="878" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="878" pos:column="29"/></control><block pos:line="878" pos:column="29">{
      <if pos:line="879" pos:column="7">if<condition pos:line="879" pos:column="9">( <expr><name><name pos:line="879" pos:column="11">db<pos:position pos:line="879" pos:column="13"/></name><operator pos:line="879" pos:column="13">-&gt;<pos:position pos:line="879" pos:column="18"/></operator><name pos:line="879" pos:column="15">aDb<pos:position pos:line="879" pos:column="18"/></name><index pos:line="879" pos:column="18">[<expr><name pos:line="879" pos:column="19">i<pos:position pos:line="879" pos:column="20"/></name></expr>]<pos:position pos:line="879" pos:column="21"/></index></name><operator pos:line="879" pos:column="21">.<pos:position pos:line="879" pos:column="22"/></operator><name pos:line="879" pos:column="22">pBt<pos:position pos:line="879" pos:column="25"/></name><operator pos:line="879" pos:column="25">==<pos:position pos:line="879" pos:column="27"/></operator><literal type="number" pos:line="879" pos:column="27">0<pos:position pos:line="879" pos:column="28"/></literal></expr> )<pos:position pos:line="879" pos:column="30"/></condition><then pos:line="879" pos:column="30"> <block type="pseudo"><continue pos:line="879" pos:column="31">continue;<pos:position pos:line="879" pos:column="40"/></continue></block></then></if>
      <expr_stmt><expr><call><name pos:line="880" pos:column="7">assert<pos:position pos:line="880" pos:column="13"/></name><argument_list pos:line="880" pos:column="13">( <argument><expr><name><name pos:line="880" pos:column="15">db<pos:position pos:line="880" pos:column="17"/></name><operator pos:line="880" pos:column="17">-&gt;<pos:position pos:line="880" pos:column="22"/></operator><name pos:line="880" pos:column="19">aDb<pos:position pos:line="880" pos:column="22"/></name><index pos:line="880" pos:column="22">[<expr><name pos:line="880" pos:column="23">i<pos:position pos:line="880" pos:column="24"/></name></expr>]<pos:position pos:line="880" pos:column="25"/></index></name><operator pos:line="880" pos:column="25">.<pos:position pos:line="880" pos:column="26"/></operator><name pos:line="880" pos:column="26">zDbSName<pos:position pos:line="880" pos:column="34"/></name><operator pos:line="880" pos:column="34">!=<pos:position pos:line="880" pos:column="36"/></operator><literal type="number" pos:line="880" pos:column="36">0<pos:position pos:line="880" pos:column="37"/></literal></expr></argument> )<pos:position pos:line="880" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="880" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="881" pos:column="7">sqlite3VdbeMultiLoad<pos:position pos:line="881" pos:column="27"/></name><argument_list pos:line="881" pos:column="27">(<argument><expr><name pos:line="881" pos:column="28">v<pos:position pos:line="881" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="881" pos:column="31">1<pos:position pos:line="881" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="881" pos:column="34">"iss"<pos:position pos:line="881" pos:column="39"/></literal></expr></argument>,
         <argument><expr><name pos:line="882" pos:column="10">i<pos:position pos:line="882" pos:column="11"/></name></expr></argument>,
         <argument><expr><name><name pos:line="883" pos:column="10">db<pos:position pos:line="883" pos:column="12"/></name><operator pos:line="883" pos:column="12">-&gt;<pos:position pos:line="883" pos:column="17"/></operator><name pos:line="883" pos:column="14">aDb<pos:position pos:line="883" pos:column="17"/></name><index pos:line="883" pos:column="17">[<expr><name pos:line="883" pos:column="18">i<pos:position pos:line="883" pos:column="19"/></name></expr>]<pos:position pos:line="883" pos:column="20"/></index></name><operator pos:line="883" pos:column="20">.<pos:position pos:line="883" pos:column="21"/></operator><name pos:line="883" pos:column="21">zDbSName<pos:position pos:line="883" pos:column="29"/></name></expr></argument>,
         <argument><expr><call><name pos:line="884" pos:column="10">sqlite3BtreeGetFilename<pos:position pos:line="884" pos:column="33"/></name><argument_list pos:line="884" pos:column="33">(<argument><expr><name><name pos:line="884" pos:column="34">db<pos:position pos:line="884" pos:column="36"/></name><operator pos:line="884" pos:column="36">-&gt;<pos:position pos:line="884" pos:column="41"/></operator><name pos:line="884" pos:column="38">aDb<pos:position pos:line="884" pos:column="41"/></name><index pos:line="884" pos:column="41">[<expr><name pos:line="884" pos:column="42">i<pos:position pos:line="884" pos:column="43"/></name></expr>]<pos:position pos:line="884" pos:column="44"/></index></name><operator pos:line="884" pos:column="44">.<pos:position pos:line="884" pos:column="45"/></operator><name pos:line="884" pos:column="45">pBt<pos:position pos:line="884" pos:column="48"/></name></expr></argument>)<pos:position pos:line="884" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="884" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="884" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="885" pos:column="6"/></block></for>
  }<pos:position pos:line="886" pos:column="4"/></block>
  <break pos:line="887" pos:column="3">break;<pos:position pos:line="887" pos:column="9"/></break>

  <case pos:line="889" pos:column="3">case <expr><name pos:line="889" pos:column="8">PragTyp_COLLATION_LIST<pos:position pos:line="889" pos:column="30"/></name></expr>:<pos:position pos:line="889" pos:column="31"/></case> <block pos:line="889" pos:column="32">{
    <decl_stmt><decl><type><name pos:line="890" pos:column="5">int<pos:position pos:line="890" pos:column="8"/></name></type> <name pos:line="890" pos:column="9">i<pos:position pos:line="890" pos:column="10"/></name> <init pos:line="890" pos:column="11">= <expr><literal type="number" pos:line="890" pos:column="13">0<pos:position pos:line="890" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="890" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="891" pos:column="5">HashElem<pos:position pos:line="891" pos:column="13"/></name> <modifier pos:line="891" pos:column="14">*<pos:position pos:line="891" pos:column="15"/></modifier></type><name pos:line="891" pos:column="15">p<pos:position pos:line="891" pos:column="16"/></name></decl>;<pos:position pos:line="891" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="892" pos:column="5">pParse<pos:position pos:line="892" pos:column="11"/></name><operator pos:line="892" pos:column="11">-&gt;<pos:position pos:line="892" pos:column="16"/></operator><name pos:line="892" pos:column="13">nMem<pos:position pos:line="892" pos:column="17"/></name></name> <operator pos:line="892" pos:column="18">=<pos:position pos:line="892" pos:column="19"/></operator> <literal type="number" pos:line="892" pos:column="20">2<pos:position pos:line="892" pos:column="21"/></literal></expr>;<pos:position pos:line="892" pos:column="22"/></expr_stmt>
    <for pos:line="893" pos:column="5">for<control pos:line="893" pos:column="8">(<init><expr><name pos:line="893" pos:column="9">p<pos:position pos:line="893" pos:column="10"/></name><operator pos:line="893" pos:column="10">=<pos:position pos:line="893" pos:column="11"/></operator><call><name pos:line="893" pos:column="11">sqliteHashFirst<pos:position pos:line="893" pos:column="26"/></name><argument_list pos:line="893" pos:column="26">(<argument><expr><operator pos:line="893" pos:column="27">&amp;<pos:position pos:line="893" pos:column="32"/></operator><name><name pos:line="893" pos:column="28">db<pos:position pos:line="893" pos:column="30"/></name><operator pos:line="893" pos:column="30">-&gt;<pos:position pos:line="893" pos:column="35"/></operator><name pos:line="893" pos:column="32">aCollSeq<pos:position pos:line="893" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="893" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="893" pos:column="42"/></init> <condition><expr><name pos:line="893" pos:column="43">p<pos:position pos:line="893" pos:column="44"/></name></expr>;<pos:position pos:line="893" pos:column="45"/></condition> <incr><expr><name pos:line="893" pos:column="46">p<pos:position pos:line="893" pos:column="47"/></name><operator pos:line="893" pos:column="47">=<pos:position pos:line="893" pos:column="48"/></operator><call><name pos:line="893" pos:column="48">sqliteHashNext<pos:position pos:line="893" pos:column="62"/></name><argument_list pos:line="893" pos:column="62">(<argument><expr><name pos:line="893" pos:column="63">p<pos:position pos:line="893" pos:column="64"/></name></expr></argument>)<pos:position pos:line="893" pos:column="65"/></argument_list></call></expr></incr>)<pos:position pos:line="893" pos:column="66"/></control><block pos:line="893" pos:column="66">{
      <decl_stmt><decl><type><name pos:line="894" pos:column="7">CollSeq<pos:position pos:line="894" pos:column="14"/></name> <modifier pos:line="894" pos:column="15">*<pos:position pos:line="894" pos:column="16"/></modifier></type><name pos:line="894" pos:column="16">pColl<pos:position pos:line="894" pos:column="21"/></name> <init pos:line="894" pos:column="22">= <expr><operator pos:line="894" pos:column="24">(<pos:position pos:line="894" pos:column="25"/></operator><name pos:line="894" pos:column="25">CollSeq<pos:position pos:line="894" pos:column="32"/></name> <operator pos:line="894" pos:column="33">*<pos:position pos:line="894" pos:column="34"/></operator><operator pos:line="894" pos:column="34">)<pos:position pos:line="894" pos:column="35"/></operator><call><name pos:line="894" pos:column="35">sqliteHashData<pos:position pos:line="894" pos:column="49"/></name><argument_list pos:line="894" pos:column="49">(<argument><expr><name pos:line="894" pos:column="50">p<pos:position pos:line="894" pos:column="51"/></name></expr></argument>)<pos:position pos:line="894" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="894" pos:column="53"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="895" pos:column="7">sqlite3VdbeMultiLoad<pos:position pos:line="895" pos:column="27"/></name><argument_list pos:line="895" pos:column="27">(<argument><expr><name pos:line="895" pos:column="28">v<pos:position pos:line="895" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="895" pos:column="31">1<pos:position pos:line="895" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="895" pos:column="34">"is"<pos:position pos:line="895" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="895" pos:column="40">i<pos:position pos:line="895" pos:column="41"/></name><operator pos:line="895" pos:column="41">++<pos:position pos:line="895" pos:column="43"/></operator></expr></argument>, <argument><expr><name><name pos:line="895" pos:column="45">pColl<pos:position pos:line="895" pos:column="50"/></name><operator pos:line="895" pos:column="50">-&gt;<pos:position pos:line="895" pos:column="55"/></operator><name pos:line="895" pos:column="52">zName<pos:position pos:line="895" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="895" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="895" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="896" pos:column="6"/></block></for>
  }<pos:position pos:line="897" pos:column="4"/></block>
  <break pos:line="898" pos:column="3">break;<pos:position pos:line="898" pos:column="9"/></break>

<cpp:ifdef pos:line="900" pos:column="1">#<cpp:directive pos:line="900" pos:column="2">ifdef<pos:position pos:line="900" pos:column="7"/></cpp:directive> <name pos:line="900" pos:column="8">SQLITE_INTROSPECTION_PRAGMAS<pos:position pos:line="900" pos:column="36"/></name></cpp:ifdef>
  <case pos:line="901" pos:column="3">case <expr><name pos:line="901" pos:column="8">PragTyp_FUNCTION_LIST<pos:position pos:line="901" pos:column="29"/></name></expr>:<pos:position pos:line="901" pos:column="30"/></case> <block pos:line="901" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="902" pos:column="5">int<pos:position pos:line="902" pos:column="8"/></name></type> <name pos:line="902" pos:column="9">i<pos:position pos:line="902" pos:column="10"/></name></decl>;<pos:position pos:line="902" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="903" pos:column="5">HashElem<pos:position pos:line="903" pos:column="13"/></name> <modifier pos:line="903" pos:column="14">*<pos:position pos:line="903" pos:column="15"/></modifier></type><name pos:line="903" pos:column="15">j<pos:position pos:line="903" pos:column="16"/></name></decl>;<pos:position pos:line="903" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="904" pos:column="5">FuncDef<pos:position pos:line="904" pos:column="12"/></name> <modifier pos:line="904" pos:column="13">*<pos:position pos:line="904" pos:column="14"/></modifier></type><name pos:line="904" pos:column="14">p<pos:position pos:line="904" pos:column="15"/></name></decl>;<pos:position pos:line="904" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="905" pos:column="5">pParse<pos:position pos:line="905" pos:column="11"/></name><operator pos:line="905" pos:column="11">-&gt;<pos:position pos:line="905" pos:column="16"/></operator><name pos:line="905" pos:column="13">nMem<pos:position pos:line="905" pos:column="17"/></name></name> <operator pos:line="905" pos:column="18">=<pos:position pos:line="905" pos:column="19"/></operator> <literal type="number" pos:line="905" pos:column="20">2<pos:position pos:line="905" pos:column="21"/></literal></expr>;<pos:position pos:line="905" pos:column="22"/></expr_stmt>
    <for pos:line="906" pos:column="5">for<control pos:line="906" pos:column="8">(<init><expr><name pos:line="906" pos:column="9">i<pos:position pos:line="906" pos:column="10"/></name><operator pos:line="906" pos:column="10">=<pos:position pos:line="906" pos:column="11"/></operator><literal type="number" pos:line="906" pos:column="11">0<pos:position pos:line="906" pos:column="12"/></literal></expr>;<pos:position pos:line="906" pos:column="13"/></init> <condition><expr><name pos:line="906" pos:column="14">i<pos:position pos:line="906" pos:column="15"/></name><operator pos:line="906" pos:column="15">&lt;<pos:position pos:line="906" pos:column="19"/></operator><name pos:line="906" pos:column="16">SQLITE_FUNC_HASH_SZ<pos:position pos:line="906" pos:column="35"/></name></expr>;<pos:position pos:line="906" pos:column="36"/></condition> <incr><expr><name pos:line="906" pos:column="37">i<pos:position pos:line="906" pos:column="38"/></name><operator pos:line="906" pos:column="38">++<pos:position pos:line="906" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="906" pos:column="41"/></control><block pos:line="906" pos:column="41">{
      <for pos:line="907" pos:column="7">for<control pos:line="907" pos:column="10">(<init><expr><name pos:line="907" pos:column="11">p<pos:position pos:line="907" pos:column="12"/></name><operator pos:line="907" pos:column="12">=<pos:position pos:line="907" pos:column="13"/></operator><name><name pos:line="907" pos:column="13">sqlite3BuiltinFunctions<pos:position pos:line="907" pos:column="36"/></name><operator pos:line="907" pos:column="36">.<pos:position pos:line="907" pos:column="37"/></operator><name pos:line="907" pos:column="37">a<pos:position pos:line="907" pos:column="38"/></name><index pos:line="907" pos:column="38">[<expr><name pos:line="907" pos:column="39">i<pos:position pos:line="907" pos:column="40"/></name></expr>]<pos:position pos:line="907" pos:column="41"/></index></name></expr>;<pos:position pos:line="907" pos:column="42"/></init> <condition><expr><name pos:line="907" pos:column="43">p<pos:position pos:line="907" pos:column="44"/></name></expr>;<pos:position pos:line="907" pos:column="45"/></condition> <incr><expr><name pos:line="907" pos:column="46">p<pos:position pos:line="907" pos:column="47"/></name><operator pos:line="907" pos:column="47">=<pos:position pos:line="907" pos:column="48"/></operator><name><name pos:line="907" pos:column="48">p<pos:position pos:line="907" pos:column="49"/></name><operator pos:line="907" pos:column="49">-&gt;<pos:position pos:line="907" pos:column="54"/></operator><name pos:line="907" pos:column="51">u<pos:position pos:line="907" pos:column="52"/></name><operator pos:line="907" pos:column="52">.<pos:position pos:line="907" pos:column="53"/></operator><name pos:line="907" pos:column="53">pHash<pos:position pos:line="907" pos:column="58"/></name></name></expr></incr> )<pos:position pos:line="907" pos:column="60"/></control><block pos:line="907" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="908" pos:column="9">sqlite3VdbeMultiLoad<pos:position pos:line="908" pos:column="29"/></name><argument_list pos:line="908" pos:column="29">(<argument><expr><name pos:line="908" pos:column="30">v<pos:position pos:line="908" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="908" pos:column="33">1<pos:position pos:line="908" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="908" pos:column="36">"si"<pos:position pos:line="908" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="908" pos:column="42">p<pos:position pos:line="908" pos:column="43"/></name><operator pos:line="908" pos:column="43">-&gt;<pos:position pos:line="908" pos:column="48"/></operator><name pos:line="908" pos:column="45">zName<pos:position pos:line="908" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="908" pos:column="52">1<pos:position pos:line="908" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="908" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="908" pos:column="55"/></expr_stmt>
      }<pos:position pos:line="909" pos:column="8"/></block></for>
    }<pos:position pos:line="910" pos:column="6"/></block></for>
    <for pos:line="911" pos:column="5">for<control pos:line="911" pos:column="8">(<init><expr><name pos:line="911" pos:column="9">j<pos:position pos:line="911" pos:column="10"/></name><operator pos:line="911" pos:column="10">=<pos:position pos:line="911" pos:column="11"/></operator><call><name pos:line="911" pos:column="11">sqliteHashFirst<pos:position pos:line="911" pos:column="26"/></name><argument_list pos:line="911" pos:column="26">(<argument><expr><operator pos:line="911" pos:column="27">&amp;<pos:position pos:line="911" pos:column="32"/></operator><name><name pos:line="911" pos:column="28">db<pos:position pos:line="911" pos:column="30"/></name><operator pos:line="911" pos:column="30">-&gt;<pos:position pos:line="911" pos:column="35"/></operator><name pos:line="911" pos:column="32">aFunc<pos:position pos:line="911" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="911" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="911" pos:column="39"/></init> <condition><expr><name pos:line="911" pos:column="40">j<pos:position pos:line="911" pos:column="41"/></name></expr>;<pos:position pos:line="911" pos:column="42"/></condition> <incr><expr><name pos:line="911" pos:column="43">j<pos:position pos:line="911" pos:column="44"/></name><operator pos:line="911" pos:column="44">=<pos:position pos:line="911" pos:column="45"/></operator><call><name pos:line="911" pos:column="45">sqliteHashNext<pos:position pos:line="911" pos:column="59"/></name><argument_list pos:line="911" pos:column="59">(<argument><expr><name pos:line="911" pos:column="60">j<pos:position pos:line="911" pos:column="61"/></name></expr></argument>)<pos:position pos:line="911" pos:column="62"/></argument_list></call></expr></incr>)<pos:position pos:line="911" pos:column="63"/></control><block pos:line="911" pos:column="63">{
      <expr_stmt><expr><name pos:line="912" pos:column="7">p<pos:position pos:line="912" pos:column="8"/></name> <operator pos:line="912" pos:column="9">=<pos:position pos:line="912" pos:column="10"/></operator> <operator pos:line="912" pos:column="11">(<pos:position pos:line="912" pos:column="12"/></operator><name pos:line="912" pos:column="12">FuncDef<pos:position pos:line="912" pos:column="19"/></name><operator pos:line="912" pos:column="19">*<pos:position pos:line="912" pos:column="20"/></operator><operator pos:line="912" pos:column="20">)<pos:position pos:line="912" pos:column="21"/></operator><call><name pos:line="912" pos:column="21">sqliteHashData<pos:position pos:line="912" pos:column="35"/></name><argument_list pos:line="912" pos:column="35">(<argument><expr><name pos:line="912" pos:column="36">j<pos:position pos:line="912" pos:column="37"/></name></expr></argument>)<pos:position pos:line="912" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="912" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="913" pos:column="7">sqlite3VdbeMultiLoad<pos:position pos:line="913" pos:column="27"/></name><argument_list pos:line="913" pos:column="27">(<argument><expr><name pos:line="913" pos:column="28">v<pos:position pos:line="913" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="913" pos:column="31">1<pos:position pos:line="913" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="913" pos:column="34">"si"<pos:position pos:line="913" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="913" pos:column="40">p<pos:position pos:line="913" pos:column="41"/></name><operator pos:line="913" pos:column="41">-&gt;<pos:position pos:line="913" pos:column="46"/></operator><name pos:line="913" pos:column="43">zName<pos:position pos:line="913" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="913" pos:column="50">0<pos:position pos:line="913" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="913" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="913" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="914" pos:column="6"/></block></for>
  }<pos:position pos:line="915" pos:column="4"/></block>
  <break pos:line="916" pos:column="3">break;<pos:position pos:line="916" pos:column="9"/></break>

<cpp:ifndef pos:line="918" pos:column="1">#<cpp:directive pos:line="918" pos:column="2">ifndef<pos:position pos:line="918" pos:column="8"/></cpp:directive> <name pos:line="918" pos:column="9">SQLITE_OMIT_VIRTUALTABLE<pos:position pos:line="918" pos:column="33"/></name></cpp:ifndef>
  <case pos:line="919" pos:column="3">case <expr><name pos:line="919" pos:column="8">PragTyp_MODULE_LIST<pos:position pos:line="919" pos:column="27"/></name></expr>:<pos:position pos:line="919" pos:column="28"/></case> <block pos:line="919" pos:column="29">{
    <decl_stmt><decl><type><name pos:line="920" pos:column="5">HashElem<pos:position pos:line="920" pos:column="13"/></name> <modifier pos:line="920" pos:column="14">*<pos:position pos:line="920" pos:column="15"/></modifier></type><name pos:line="920" pos:column="15">j<pos:position pos:line="920" pos:column="16"/></name></decl>;<pos:position pos:line="920" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="921" pos:column="5">pParse<pos:position pos:line="921" pos:column="11"/></name><operator pos:line="921" pos:column="11">-&gt;<pos:position pos:line="921" pos:column="16"/></operator><name pos:line="921" pos:column="13">nMem<pos:position pos:line="921" pos:column="17"/></name></name> <operator pos:line="921" pos:column="18">=<pos:position pos:line="921" pos:column="19"/></operator> <literal type="number" pos:line="921" pos:column="20">1<pos:position pos:line="921" pos:column="21"/></literal></expr>;<pos:position pos:line="921" pos:column="22"/></expr_stmt>
    <for pos:line="922" pos:column="5">for<control pos:line="922" pos:column="8">(<init><expr><name pos:line="922" pos:column="9">j<pos:position pos:line="922" pos:column="10"/></name><operator pos:line="922" pos:column="10">=<pos:position pos:line="922" pos:column="11"/></operator><call><name pos:line="922" pos:column="11">sqliteHashFirst<pos:position pos:line="922" pos:column="26"/></name><argument_list pos:line="922" pos:column="26">(<argument><expr><operator pos:line="922" pos:column="27">&amp;<pos:position pos:line="922" pos:column="32"/></operator><name><name pos:line="922" pos:column="28">db<pos:position pos:line="922" pos:column="30"/></name><operator pos:line="922" pos:column="30">-&gt;<pos:position pos:line="922" pos:column="35"/></operator><name pos:line="922" pos:column="32">aModule<pos:position pos:line="922" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="922" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="922" pos:column="41"/></init> <condition><expr><name pos:line="922" pos:column="42">j<pos:position pos:line="922" pos:column="43"/></name></expr>;<pos:position pos:line="922" pos:column="44"/></condition> <incr><expr><name pos:line="922" pos:column="45">j<pos:position pos:line="922" pos:column="46"/></name><operator pos:line="922" pos:column="46">=<pos:position pos:line="922" pos:column="47"/></operator><call><name pos:line="922" pos:column="47">sqliteHashNext<pos:position pos:line="922" pos:column="61"/></name><argument_list pos:line="922" pos:column="61">(<argument><expr><name pos:line="922" pos:column="62">j<pos:position pos:line="922" pos:column="63"/></name></expr></argument>)<pos:position pos:line="922" pos:column="64"/></argument_list></call></expr></incr>)<pos:position pos:line="922" pos:column="65"/></control><block pos:line="922" pos:column="65">{
      <decl_stmt><decl><type><name pos:line="923" pos:column="7">Module<pos:position pos:line="923" pos:column="13"/></name> <modifier pos:line="923" pos:column="14">*<pos:position pos:line="923" pos:column="15"/></modifier></type><name pos:line="923" pos:column="15">pMod<pos:position pos:line="923" pos:column="19"/></name> <init pos:line="923" pos:column="20">= <expr><operator pos:line="923" pos:column="22">(<pos:position pos:line="923" pos:column="23"/></operator><name pos:line="923" pos:column="23">Module<pos:position pos:line="923" pos:column="29"/></name><operator pos:line="923" pos:column="29">*<pos:position pos:line="923" pos:column="30"/></operator><operator pos:line="923" pos:column="30">)<pos:position pos:line="923" pos:column="31"/></operator><call><name pos:line="923" pos:column="31">sqliteHashData<pos:position pos:line="923" pos:column="45"/></name><argument_list pos:line="923" pos:column="45">(<argument><expr><name pos:line="923" pos:column="46">j<pos:position pos:line="923" pos:column="47"/></name></expr></argument>)<pos:position pos:line="923" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="923" pos:column="49"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="924" pos:column="7">sqlite3VdbeMultiLoad<pos:position pos:line="924" pos:column="27"/></name><argument_list pos:line="924" pos:column="27">(<argument><expr><name pos:line="924" pos:column="28">v<pos:position pos:line="924" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="924" pos:column="31">1<pos:position pos:line="924" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="924" pos:column="34">"s"<pos:position pos:line="924" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="924" pos:column="39">pMod<pos:position pos:line="924" pos:column="43"/></name><operator pos:line="924" pos:column="43">-&gt;<pos:position pos:line="924" pos:column="48"/></operator><name pos:line="924" pos:column="45">zName<pos:position pos:line="924" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="924" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="924" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="925" pos:column="6"/></block></for>
  }<pos:position pos:line="926" pos:column="4"/></block>
  <break pos:line="927" pos:column="3">break;<pos:position pos:line="927" pos:column="9"/></break>
<cpp:endif pos:line="928" pos:column="1">#<cpp:directive pos:line="928" pos:column="2">endif<pos:position pos:line="928" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="928" pos:column="8">/* SQLITE_OMIT_VIRTUALTABLE */</comment>

  <case pos:line="930" pos:column="3">case <expr><name pos:line="930" pos:column="8">PragTyp_PRAGMA_LIST<pos:position pos:line="930" pos:column="27"/></name></expr>:<pos:position pos:line="930" pos:column="28"/></case> <block pos:line="930" pos:column="29">{
    <decl_stmt><decl><type><name pos:line="931" pos:column="5">int<pos:position pos:line="931" pos:column="8"/></name></type> <name pos:line="931" pos:column="9">i<pos:position pos:line="931" pos:column="10"/></name></decl>;<pos:position pos:line="931" pos:column="11"/></decl_stmt>
    <for pos:line="932" pos:column="5">for<control pos:line="932" pos:column="8">(<init><expr><name pos:line="932" pos:column="9">i<pos:position pos:line="932" pos:column="10"/></name><operator pos:line="932" pos:column="10">=<pos:position pos:line="932" pos:column="11"/></operator><literal type="number" pos:line="932" pos:column="11">0<pos:position pos:line="932" pos:column="12"/></literal></expr>;<pos:position pos:line="932" pos:column="13"/></init> <condition><expr><name pos:line="932" pos:column="14">i<pos:position pos:line="932" pos:column="15"/></name><operator pos:line="932" pos:column="15">&lt;<pos:position pos:line="932" pos:column="19"/></operator><call><name pos:line="932" pos:column="16">ArraySize<pos:position pos:line="932" pos:column="25"/></name><argument_list pos:line="932" pos:column="25">(<argument><expr><name pos:line="932" pos:column="26">aPragmaName<pos:position pos:line="932" pos:column="37"/></name></expr></argument>)<pos:position pos:line="932" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="932" pos:column="39"/></condition> <incr><expr><name pos:line="932" pos:column="40">i<pos:position pos:line="932" pos:column="41"/></name><operator pos:line="932" pos:column="41">++<pos:position pos:line="932" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="932" pos:column="44"/></control><block pos:line="932" pos:column="44">{
      <expr_stmt><expr><call><name pos:line="933" pos:column="7">sqlite3VdbeMultiLoad<pos:position pos:line="933" pos:column="27"/></name><argument_list pos:line="933" pos:column="27">(<argument><expr><name pos:line="933" pos:column="28">v<pos:position pos:line="933" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="933" pos:column="31">1<pos:position pos:line="933" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="933" pos:column="34">"s"<pos:position pos:line="933" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="933" pos:column="39">aPragmaName<pos:position pos:line="933" pos:column="50"/></name><index pos:line="933" pos:column="50">[<expr><name pos:line="933" pos:column="51">i<pos:position pos:line="933" pos:column="52"/></name></expr>]<pos:position pos:line="933" pos:column="53"/></index></name><operator pos:line="933" pos:column="53">.<pos:position pos:line="933" pos:column="54"/></operator><name pos:line="933" pos:column="54">zName<pos:position pos:line="933" pos:column="59"/></name></expr></argument>)<pos:position pos:line="933" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="933" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="934" pos:column="6"/></block></for>
  }<pos:position pos:line="935" pos:column="4"/></block>
  <break pos:line="936" pos:column="3">break;<pos:position pos:line="936" pos:column="9"/></break>
<cpp:endif pos:line="937" pos:column="1">#<cpp:directive pos:line="937" pos:column="2">endif<pos:position pos:line="937" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="937" pos:column="8">/* SQLITE_INTROSPECTION_PRAGMAS */</comment>

<cpp:endif pos:line="939" pos:column="1">#<cpp:directive pos:line="939" pos:column="2">endif<pos:position pos:line="939" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="939" pos:column="8">/* SQLITE_OMIT_SCHEMA_PRAGMAS */</comment>

<cpp:ifndef pos:line="941" pos:column="1">#<cpp:directive pos:line="941" pos:column="2">ifndef<pos:position pos:line="941" pos:column="8"/></cpp:directive> <name pos:line="941" pos:column="9">SQLITE_OMIT_FOREIGN_KEY<pos:position pos:line="941" pos:column="32"/></name></cpp:ifndef>
  <case pos:line="942" pos:column="3">case <expr><name pos:line="942" pos:column="8">PragTyp_FOREIGN_KEY_LIST<pos:position pos:line="942" pos:column="32"/></name></expr>:<pos:position pos:line="942" pos:column="33"/></case> <if pos:line="942" pos:column="34">if<condition pos:line="942" pos:column="36">( <expr><name pos:line="942" pos:column="38">zRight<pos:position pos:line="942" pos:column="44"/></name></expr> )<pos:position pos:line="942" pos:column="46"/></condition><then><block pos:line="942" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="943" pos:column="5">FKey<pos:position pos:line="943" pos:column="9"/></name> <modifier pos:line="943" pos:column="10">*<pos:position pos:line="943" pos:column="11"/></modifier></type><name pos:line="943" pos:column="11">pFK<pos:position pos:line="943" pos:column="14"/></name></decl>;<pos:position pos:line="943" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="944" pos:column="5">Table<pos:position pos:line="944" pos:column="10"/></name> <modifier pos:line="944" pos:column="11">*<pos:position pos:line="944" pos:column="12"/></modifier></type><name pos:line="944" pos:column="12">pTab<pos:position pos:line="944" pos:column="16"/></name></decl>;<pos:position pos:line="944" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><name pos:line="945" pos:column="5">pTab<pos:position pos:line="945" pos:column="9"/></name> <operator pos:line="945" pos:column="10">=<pos:position pos:line="945" pos:column="11"/></operator> <call><name pos:line="945" pos:column="12">sqlite3FindTable<pos:position pos:line="945" pos:column="28"/></name><argument_list pos:line="945" pos:column="28">(<argument><expr><name pos:line="945" pos:column="29">db<pos:position pos:line="945" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="945" pos:column="33">zRight<pos:position pos:line="945" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="945" pos:column="41">zDb<pos:position pos:line="945" pos:column="44"/></name></expr></argument>)<pos:position pos:line="945" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="945" pos:column="46"/></expr_stmt>
    <if pos:line="946" pos:column="5">if<condition pos:line="946" pos:column="7">( <expr><name pos:line="946" pos:column="9">pTab<pos:position pos:line="946" pos:column="13"/></name></expr> )<pos:position pos:line="946" pos:column="15"/></condition><then><block pos:line="946" pos:column="15">{
      <expr_stmt><expr><name pos:line="947" pos:column="7">pFK<pos:position pos:line="947" pos:column="10"/></name> <operator pos:line="947" pos:column="11">=<pos:position pos:line="947" pos:column="12"/></operator> <name><name pos:line="947" pos:column="13">pTab<pos:position pos:line="947" pos:column="17"/></name><operator pos:line="947" pos:column="17">-&gt;<pos:position pos:line="947" pos:column="22"/></operator><name pos:line="947" pos:column="19">pFKey<pos:position pos:line="947" pos:column="24"/></name></name></expr>;<pos:position pos:line="947" pos:column="25"/></expr_stmt>
      <if pos:line="948" pos:column="7">if<condition pos:line="948" pos:column="9">( <expr><name pos:line="948" pos:column="11">pFK<pos:position pos:line="948" pos:column="14"/></name></expr> )<pos:position pos:line="948" pos:column="16"/></condition><then><block pos:line="948" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="949" pos:column="9">int<pos:position pos:line="949" pos:column="12"/></name></type> <name pos:line="949" pos:column="13">i<pos:position pos:line="949" pos:column="14"/></name> <init pos:line="949" pos:column="15">= <expr><literal type="number" pos:line="949" pos:column="17">0<pos:position pos:line="949" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="949" pos:column="19"/></decl_stmt> 
        <expr_stmt><expr><name><name pos:line="950" pos:column="9">pParse<pos:position pos:line="950" pos:column="15"/></name><operator pos:line="950" pos:column="15">-&gt;<pos:position pos:line="950" pos:column="20"/></operator><name pos:line="950" pos:column="17">nMem<pos:position pos:line="950" pos:column="21"/></name></name> <operator pos:line="950" pos:column="22">=<pos:position pos:line="950" pos:column="23"/></operator> <literal type="number" pos:line="950" pos:column="24">8<pos:position pos:line="950" pos:column="25"/></literal></expr>;<pos:position pos:line="950" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="951" pos:column="9">sqlite3CodeVerifySchema<pos:position pos:line="951" pos:column="32"/></name><argument_list pos:line="951" pos:column="32">(<argument><expr><name pos:line="951" pos:column="33">pParse<pos:position pos:line="951" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="951" pos:column="41">iDb<pos:position pos:line="951" pos:column="44"/></name></expr></argument>)<pos:position pos:line="951" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="951" pos:column="46"/></expr_stmt>
        <while pos:line="952" pos:column="9">while<condition pos:line="952" pos:column="14">(<expr><name pos:line="952" pos:column="15">pFK<pos:position pos:line="952" pos:column="18"/></name></expr>)<pos:position pos:line="952" pos:column="19"/></condition><block pos:line="952" pos:column="19">{
          <decl_stmt><decl><type><name pos:line="953" pos:column="11">int<pos:position pos:line="953" pos:column="14"/></name></type> <name pos:line="953" pos:column="15">j<pos:position pos:line="953" pos:column="16"/></name></decl>;<pos:position pos:line="953" pos:column="17"/></decl_stmt>
          <for pos:line="954" pos:column="11">for<control pos:line="954" pos:column="14">(<init><expr><name pos:line="954" pos:column="15">j<pos:position pos:line="954" pos:column="16"/></name><operator pos:line="954" pos:column="16">=<pos:position pos:line="954" pos:column="17"/></operator><literal type="number" pos:line="954" pos:column="17">0<pos:position pos:line="954" pos:column="18"/></literal></expr>;<pos:position pos:line="954" pos:column="19"/></init> <condition><expr><name pos:line="954" pos:column="20">j<pos:position pos:line="954" pos:column="21"/></name><operator pos:line="954" pos:column="21">&lt;<pos:position pos:line="954" pos:column="25"/></operator><name><name pos:line="954" pos:column="22">pFK<pos:position pos:line="954" pos:column="25"/></name><operator pos:line="954" pos:column="25">-&gt;<pos:position pos:line="954" pos:column="30"/></operator><name pos:line="954" pos:column="27">nCol<pos:position pos:line="954" pos:column="31"/></name></name></expr>;<pos:position pos:line="954" pos:column="32"/></condition> <incr><expr><name pos:line="954" pos:column="33">j<pos:position pos:line="954" pos:column="34"/></name><operator pos:line="954" pos:column="34">++<pos:position pos:line="954" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="954" pos:column="37"/></control><block pos:line="954" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="955" pos:column="13">sqlite3VdbeMultiLoad<pos:position pos:line="955" pos:column="33"/></name><argument_list pos:line="955" pos:column="33">(<argument><expr><name pos:line="955" pos:column="34">v<pos:position pos:line="955" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="955" pos:column="37">1<pos:position pos:line="955" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="955" pos:column="40">"iissssss"<pos:position pos:line="955" pos:column="50"/></literal></expr></argument>,
                   <argument><expr><name pos:line="956" pos:column="20">i<pos:position pos:line="956" pos:column="21"/></name></expr></argument>,
                   <argument><expr><name pos:line="957" pos:column="20">j<pos:position pos:line="957" pos:column="21"/></name></expr></argument>,
                   <argument><expr><name><name pos:line="958" pos:column="20">pFK<pos:position pos:line="958" pos:column="23"/></name><operator pos:line="958" pos:column="23">-&gt;<pos:position pos:line="958" pos:column="28"/></operator><name pos:line="958" pos:column="25">zTo<pos:position pos:line="958" pos:column="28"/></name></name></expr></argument>,
                   <argument><expr><name><name pos:line="959" pos:column="20">pTab<pos:position pos:line="959" pos:column="24"/></name><operator pos:line="959" pos:column="24">-&gt;<pos:position pos:line="959" pos:column="29"/></operator><name pos:line="959" pos:column="26">aCol<pos:position pos:line="959" pos:column="30"/></name><index pos:line="959" pos:column="30">[<expr><name><name pos:line="959" pos:column="31">pFK<pos:position pos:line="959" pos:column="34"/></name><operator pos:line="959" pos:column="34">-&gt;<pos:position pos:line="959" pos:column="39"/></operator><name pos:line="959" pos:column="36">aCol<pos:position pos:line="959" pos:column="40"/></name><index pos:line="959" pos:column="40">[<expr><name pos:line="959" pos:column="41">j<pos:position pos:line="959" pos:column="42"/></name></expr>]<pos:position pos:line="959" pos:column="43"/></index></name><operator pos:line="959" pos:column="43">.<pos:position pos:line="959" pos:column="44"/></operator><name pos:line="959" pos:column="44">iFrom<pos:position pos:line="959" pos:column="49"/></name></expr>]<pos:position pos:line="959" pos:column="50"/></index></name><operator pos:line="959" pos:column="50">.<pos:position pos:line="959" pos:column="51"/></operator><name pos:line="959" pos:column="51">zName<pos:position pos:line="959" pos:column="56"/></name></expr></argument>,
                   <argument><expr><name><name pos:line="960" pos:column="20">pFK<pos:position pos:line="960" pos:column="23"/></name><operator pos:line="960" pos:column="23">-&gt;<pos:position pos:line="960" pos:column="28"/></operator><name pos:line="960" pos:column="25">aCol<pos:position pos:line="960" pos:column="29"/></name><index pos:line="960" pos:column="29">[<expr><name pos:line="960" pos:column="30">j<pos:position pos:line="960" pos:column="31"/></name></expr>]<pos:position pos:line="960" pos:column="32"/></index></name><operator pos:line="960" pos:column="32">.<pos:position pos:line="960" pos:column="33"/></operator><name pos:line="960" pos:column="33">zCol<pos:position pos:line="960" pos:column="37"/></name></expr></argument>,
                   <argument><expr><call><name pos:line="961" pos:column="20">actionName<pos:position pos:line="961" pos:column="30"/></name><argument_list pos:line="961" pos:column="30">(<argument><expr><name><name pos:line="961" pos:column="31">pFK<pos:position pos:line="961" pos:column="34"/></name><operator pos:line="961" pos:column="34">-&gt;<pos:position pos:line="961" pos:column="39"/></operator><name pos:line="961" pos:column="36">aAction<pos:position pos:line="961" pos:column="43"/></name><index pos:line="961" pos:column="43">[<expr><literal type="number" pos:line="961" pos:column="44">1<pos:position pos:line="961" pos:column="45"/></literal></expr>]<pos:position pos:line="961" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="961" pos:column="47"/></argument_list></call></expr></argument>,  <comment type="block" pos:line="961" pos:column="50">/* ON UPDATE */</comment>
                   <argument><expr><call><name pos:line="962" pos:column="20">actionName<pos:position pos:line="962" pos:column="30"/></name><argument_list pos:line="962" pos:column="30">(<argument><expr><name><name pos:line="962" pos:column="31">pFK<pos:position pos:line="962" pos:column="34"/></name><operator pos:line="962" pos:column="34">-&gt;<pos:position pos:line="962" pos:column="39"/></operator><name pos:line="962" pos:column="36">aAction<pos:position pos:line="962" pos:column="43"/></name><index pos:line="962" pos:column="43">[<expr><literal type="number" pos:line="962" pos:column="44">0<pos:position pos:line="962" pos:column="45"/></literal></expr>]<pos:position pos:line="962" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="962" pos:column="47"/></argument_list></call></expr></argument>,  <comment type="block" pos:line="962" pos:column="50">/* ON DELETE */</comment>
                   <argument><expr><literal type="string" pos:line="963" pos:column="20">"NONE"<pos:position pos:line="963" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="963" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="963" pos:column="28"/></expr_stmt>
          }<pos:position pos:line="964" pos:column="12"/></block></for>
          <expr_stmt><expr><operator pos:line="965" pos:column="11">++<pos:position pos:line="965" pos:column="13"/></operator><name pos:line="965" pos:column="13">i<pos:position pos:line="965" pos:column="14"/></name></expr>;<pos:position pos:line="965" pos:column="15"/></expr_stmt>
          <expr_stmt><expr><name pos:line="966" pos:column="11">pFK<pos:position pos:line="966" pos:column="14"/></name> <operator pos:line="966" pos:column="15">=<pos:position pos:line="966" pos:column="16"/></operator> <name><name pos:line="966" pos:column="17">pFK<pos:position pos:line="966" pos:column="20"/></name><operator pos:line="966" pos:column="20">-&gt;<pos:position pos:line="966" pos:column="25"/></operator><name pos:line="966" pos:column="22">pNextFrom<pos:position pos:line="966" pos:column="31"/></name></name></expr>;<pos:position pos:line="966" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="967" pos:column="10"/></block></while>
      }<pos:position pos:line="968" pos:column="8"/></block></then></if>
    }<pos:position pos:line="969" pos:column="6"/></block></then></if>
  }<pos:position pos:line="970" pos:column="4"/></block></then></if>
  <break pos:line="971" pos:column="3">break;<pos:position pos:line="971" pos:column="9"/></break>
<cpp:endif pos:line="972" pos:column="1">#<cpp:directive pos:line="972" pos:column="2">endif<pos:position pos:line="972" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="972" pos:column="8">/* !defined(SQLITE_OMIT_FOREIGN_KEY) */</comment>

<cpp:ifndef pos:line="974" pos:column="1">#<cpp:directive pos:line="974" pos:column="2">ifndef<pos:position pos:line="974" pos:column="8"/></cpp:directive> <name pos:line="974" pos:column="9">SQLITE_OMIT_FOREIGN_KEY<pos:position pos:line="974" pos:column="32"/></name></cpp:ifndef>
<cpp:ifndef pos:line="975" pos:column="1">#<cpp:directive pos:line="975" pos:column="2">ifndef<pos:position pos:line="975" pos:column="8"/></cpp:directive> <name pos:line="975" pos:column="9">SQLITE_OMIT_TRIGGER<pos:position pos:line="975" pos:column="28"/></name></cpp:ifndef>
  <case pos:line="976" pos:column="3">case <expr><name pos:line="976" pos:column="8">PragTyp_FOREIGN_KEY_CHECK<pos:position pos:line="976" pos:column="33"/></name></expr>:<pos:position pos:line="976" pos:column="34"/></case> <block pos:line="976" pos:column="35">{
    <decl_stmt><decl><type><name pos:line="977" pos:column="5">FKey<pos:position pos:line="977" pos:column="9"/></name> <modifier pos:line="977" pos:column="10">*<pos:position pos:line="977" pos:column="11"/></modifier></type><name pos:line="977" pos:column="11">pFK<pos:position pos:line="977" pos:column="14"/></name></decl>;<pos:position pos:line="977" pos:column="15"/></decl_stmt>             <comment type="block" pos:line="977" pos:column="28">/* A foreign key constraint */</comment>
    <decl_stmt><decl><type><name pos:line="978" pos:column="5">Table<pos:position pos:line="978" pos:column="10"/></name> <modifier pos:line="978" pos:column="11">*<pos:position pos:line="978" pos:column="12"/></modifier></type><name pos:line="978" pos:column="12">pTab<pos:position pos:line="978" pos:column="16"/></name></decl>;<pos:position pos:line="978" pos:column="17"/></decl_stmt>           <comment type="block" pos:line="978" pos:column="28">/* Child table contain "REFERENCES" keyword */</comment>
    <decl_stmt><decl><type><name pos:line="979" pos:column="5">Table<pos:position pos:line="979" pos:column="10"/></name> <modifier pos:line="979" pos:column="11">*<pos:position pos:line="979" pos:column="12"/></modifier></type><name pos:line="979" pos:column="12">pParent<pos:position pos:line="979" pos:column="19"/></name></decl>;<pos:position pos:line="979" pos:column="20"/></decl_stmt>        <comment type="block" pos:line="979" pos:column="28">/* Parent table that child points to */</comment>
    <decl_stmt><decl><type><name pos:line="980" pos:column="5">Index<pos:position pos:line="980" pos:column="10"/></name> <modifier pos:line="980" pos:column="11">*<pos:position pos:line="980" pos:column="12"/></modifier></type><name pos:line="980" pos:column="12">pIdx<pos:position pos:line="980" pos:column="16"/></name></decl>;<pos:position pos:line="980" pos:column="17"/></decl_stmt>           <comment type="block" pos:line="980" pos:column="28">/* Index in the parent table */</comment>
    <decl_stmt><decl><type><name pos:line="981" pos:column="5">int<pos:position pos:line="981" pos:column="8"/></name></type> <name pos:line="981" pos:column="9">i<pos:position pos:line="981" pos:column="10"/></name></decl>;<pos:position pos:line="981" pos:column="11"/></decl_stmt>                 <comment type="block" pos:line="981" pos:column="28">/* Loop counter:  Foreign key number for pTab */</comment>
    <decl_stmt><decl><type><name pos:line="982" pos:column="5">int<pos:position pos:line="982" pos:column="8"/></name></type> <name pos:line="982" pos:column="9">j<pos:position pos:line="982" pos:column="10"/></name></decl>;<pos:position pos:line="982" pos:column="11"/></decl_stmt>                 <comment type="block" pos:line="982" pos:column="28">/* Loop counter:  Field of the foreign key */</comment>
    <decl_stmt><decl><type><name pos:line="983" pos:column="5">HashElem<pos:position pos:line="983" pos:column="13"/></name> <modifier pos:line="983" pos:column="14">*<pos:position pos:line="983" pos:column="15"/></modifier></type><name pos:line="983" pos:column="15">k<pos:position pos:line="983" pos:column="16"/></name></decl>;<pos:position pos:line="983" pos:column="17"/></decl_stmt>           <comment type="block" pos:line="983" pos:column="28">/* Loop counter:  Next table in schema */</comment>
    <decl_stmt><decl><type><name pos:line="984" pos:column="5">int<pos:position pos:line="984" pos:column="8"/></name></type> <name pos:line="984" pos:column="9">x<pos:position pos:line="984" pos:column="10"/></name></decl>;<pos:position pos:line="984" pos:column="11"/></decl_stmt>                 <comment type="block" pos:line="984" pos:column="28">/* result variable */</comment>
    <decl_stmt><decl><type><name pos:line="985" pos:column="5">int<pos:position pos:line="985" pos:column="8"/></name></type> <name pos:line="985" pos:column="9">regResult<pos:position pos:line="985" pos:column="18"/></name></decl>;<pos:position pos:line="985" pos:column="19"/></decl_stmt>         <comment type="block" pos:line="985" pos:column="28">/* 3 registers to hold a result row */</comment>
    <decl_stmt><decl><type><name pos:line="986" pos:column="5">int<pos:position pos:line="986" pos:column="8"/></name></type> <name pos:line="986" pos:column="9">regKey<pos:position pos:line="986" pos:column="15"/></name></decl>;<pos:position pos:line="986" pos:column="16"/></decl_stmt>            <comment type="block" pos:line="986" pos:column="28">/* Register to hold key for checking the FK */</comment>
    <decl_stmt><decl><type><name pos:line="987" pos:column="5">int<pos:position pos:line="987" pos:column="8"/></name></type> <name pos:line="987" pos:column="9">regRow<pos:position pos:line="987" pos:column="15"/></name></decl>;<pos:position pos:line="987" pos:column="16"/></decl_stmt>            <comment type="block" pos:line="987" pos:column="28">/* Registers to hold a row from pTab */</comment>
    <decl_stmt><decl><type><name pos:line="988" pos:column="5">int<pos:position pos:line="988" pos:column="8"/></name></type> <name pos:line="988" pos:column="9">addrTop<pos:position pos:line="988" pos:column="16"/></name></decl>;<pos:position pos:line="988" pos:column="17"/></decl_stmt>           <comment type="block" pos:line="988" pos:column="28">/* Top of a loop checking foreign keys */</comment>
    <decl_stmt><decl><type><name pos:line="989" pos:column="5">int<pos:position pos:line="989" pos:column="8"/></name></type> <name pos:line="989" pos:column="9">addrOk<pos:position pos:line="989" pos:column="15"/></name></decl>;<pos:position pos:line="989" pos:column="16"/></decl_stmt>            <comment type="block" pos:line="989" pos:column="28">/* Jump here if the key is OK */</comment>
    <decl_stmt><decl><type><name pos:line="990" pos:column="5">int<pos:position pos:line="990" pos:column="8"/></name> <modifier pos:line="990" pos:column="9">*<pos:position pos:line="990" pos:column="10"/></modifier></type><name pos:line="990" pos:column="10">aiCols<pos:position pos:line="990" pos:column="16"/></name></decl>;<pos:position pos:line="990" pos:column="17"/></decl_stmt>           <comment type="block" pos:line="990" pos:column="28">/* child to parent column mapping */</comment>

    <expr_stmt><expr><name pos:line="992" pos:column="5">regResult<pos:position pos:line="992" pos:column="14"/></name> <operator pos:line="992" pos:column="15">=<pos:position pos:line="992" pos:column="16"/></operator> <name><name pos:line="992" pos:column="17">pParse<pos:position pos:line="992" pos:column="23"/></name><operator pos:line="992" pos:column="23">-&gt;<pos:position pos:line="992" pos:column="28"/></operator><name pos:line="992" pos:column="25">nMem<pos:position pos:line="992" pos:column="29"/></name></name><operator pos:line="992" pos:column="29">+<pos:position pos:line="992" pos:column="30"/></operator><literal type="number" pos:line="992" pos:column="30">1<pos:position pos:line="992" pos:column="31"/></literal></expr>;<pos:position pos:line="992" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="993" pos:column="5">pParse<pos:position pos:line="993" pos:column="11"/></name><operator pos:line="993" pos:column="11">-&gt;<pos:position pos:line="993" pos:column="16"/></operator><name pos:line="993" pos:column="13">nMem<pos:position pos:line="993" pos:column="17"/></name></name> <operator pos:line="993" pos:column="18">+=<pos:position pos:line="993" pos:column="20"/></operator> <literal type="number" pos:line="993" pos:column="21">4<pos:position pos:line="993" pos:column="22"/></literal></expr>;<pos:position pos:line="993" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="994" pos:column="5">regKey<pos:position pos:line="994" pos:column="11"/></name> <operator pos:line="994" pos:column="12">=<pos:position pos:line="994" pos:column="13"/></operator> <operator pos:line="994" pos:column="14">++<pos:position pos:line="994" pos:column="16"/></operator><name><name pos:line="994" pos:column="16">pParse<pos:position pos:line="994" pos:column="22"/></name><operator pos:line="994" pos:column="22">-&gt;<pos:position pos:line="994" pos:column="27"/></operator><name pos:line="994" pos:column="24">nMem<pos:position pos:line="994" pos:column="28"/></name></name></expr>;<pos:position pos:line="994" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="995" pos:column="5">regRow<pos:position pos:line="995" pos:column="11"/></name> <operator pos:line="995" pos:column="12">=<pos:position pos:line="995" pos:column="13"/></operator> <operator pos:line="995" pos:column="14">++<pos:position pos:line="995" pos:column="16"/></operator><name><name pos:line="995" pos:column="16">pParse<pos:position pos:line="995" pos:column="22"/></name><operator pos:line="995" pos:column="22">-&gt;<pos:position pos:line="995" pos:column="27"/></operator><name pos:line="995" pos:column="24">nMem<pos:position pos:line="995" pos:column="28"/></name></name></expr>;<pos:position pos:line="995" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="996" pos:column="5">sqlite3CodeVerifySchema<pos:position pos:line="996" pos:column="28"/></name><argument_list pos:line="996" pos:column="28">(<argument><expr><name pos:line="996" pos:column="29">pParse<pos:position pos:line="996" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="996" pos:column="37">iDb<pos:position pos:line="996" pos:column="40"/></name></expr></argument>)<pos:position pos:line="996" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="996" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="997" pos:column="5">k<pos:position pos:line="997" pos:column="6"/></name> <operator pos:line="997" pos:column="7">=<pos:position pos:line="997" pos:column="8"/></operator> <call><name pos:line="997" pos:column="9">sqliteHashFirst<pos:position pos:line="997" pos:column="24"/></name><argument_list pos:line="997" pos:column="24">(<argument><expr><operator pos:line="997" pos:column="25">&amp;<pos:position pos:line="997" pos:column="30"/></operator><name><name pos:line="997" pos:column="26">db<pos:position pos:line="997" pos:column="28"/></name><operator pos:line="997" pos:column="28">-&gt;<pos:position pos:line="997" pos:column="33"/></operator><name pos:line="997" pos:column="30">aDb<pos:position pos:line="997" pos:column="33"/></name><index pos:line="997" pos:column="33">[<expr><name pos:line="997" pos:column="34">iDb<pos:position pos:line="997" pos:column="37"/></name></expr>]<pos:position pos:line="997" pos:column="38"/></index></name><operator pos:line="997" pos:column="38">.<pos:position pos:line="997" pos:column="39"/></operator><name><name pos:line="997" pos:column="39">pSchema<pos:position pos:line="997" pos:column="46"/></name><operator pos:line="997" pos:column="46">-&gt;<pos:position pos:line="997" pos:column="51"/></operator><name pos:line="997" pos:column="48">tblHash<pos:position pos:line="997" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="997" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="997" pos:column="57"/></expr_stmt>
    <while pos:line="998" pos:column="5">while<condition pos:line="998" pos:column="10">( <expr><name pos:line="998" pos:column="12">k<pos:position pos:line="998" pos:column="13"/></name></expr> )<pos:position pos:line="998" pos:column="15"/></condition><block pos:line="998" pos:column="15">{
      <if pos:line="999" pos:column="7">if<condition pos:line="999" pos:column="9">( <expr><name pos:line="999" pos:column="11">zRight<pos:position pos:line="999" pos:column="17"/></name></expr> )<pos:position pos:line="999" pos:column="19"/></condition><then><block pos:line="999" pos:column="19">{
        <expr_stmt><expr><name pos:line="1000" pos:column="9">pTab<pos:position pos:line="1000" pos:column="13"/></name> <operator pos:line="1000" pos:column="14">=<pos:position pos:line="1000" pos:column="15"/></operator> <call><name pos:line="1000" pos:column="16">sqlite3LocateTable<pos:position pos:line="1000" pos:column="34"/></name><argument_list pos:line="1000" pos:column="34">(<argument><expr><name pos:line="1000" pos:column="35">pParse<pos:position pos:line="1000" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1000" pos:column="43">0<pos:position pos:line="1000" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="1000" pos:column="46">zRight<pos:position pos:line="1000" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1000" pos:column="54">zDb<pos:position pos:line="1000" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1000" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1000" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1001" pos:column="9">k<pos:position pos:line="1001" pos:column="10"/></name> <operator pos:line="1001" pos:column="11">=<pos:position pos:line="1001" pos:column="12"/></operator> <literal type="number" pos:line="1001" pos:column="13">0<pos:position pos:line="1001" pos:column="14"/></literal></expr>;<pos:position pos:line="1001" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="1002" pos:column="8"/></block></then><else pos:line="1002" pos:column="8">else<block pos:line="1002" pos:column="12">{
        <expr_stmt><expr><name pos:line="1003" pos:column="9">pTab<pos:position pos:line="1003" pos:column="13"/></name> <operator pos:line="1003" pos:column="14">=<pos:position pos:line="1003" pos:column="15"/></operator> <operator pos:line="1003" pos:column="16">(<pos:position pos:line="1003" pos:column="17"/></operator><name pos:line="1003" pos:column="17">Table<pos:position pos:line="1003" pos:column="22"/></name><operator pos:line="1003" pos:column="22">*<pos:position pos:line="1003" pos:column="23"/></operator><operator pos:line="1003" pos:column="23">)<pos:position pos:line="1003" pos:column="24"/></operator><call><name pos:line="1003" pos:column="24">sqliteHashData<pos:position pos:line="1003" pos:column="38"/></name><argument_list pos:line="1003" pos:column="38">(<argument><expr><name pos:line="1003" pos:column="39">k<pos:position pos:line="1003" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1003" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1003" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1004" pos:column="9">k<pos:position pos:line="1004" pos:column="10"/></name> <operator pos:line="1004" pos:column="11">=<pos:position pos:line="1004" pos:column="12"/></operator> <call><name pos:line="1004" pos:column="13">sqliteHashNext<pos:position pos:line="1004" pos:column="27"/></name><argument_list pos:line="1004" pos:column="27">(<argument><expr><name pos:line="1004" pos:column="28">k<pos:position pos:line="1004" pos:column="29"/></name></expr></argument>)<pos:position pos:line="1004" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="1004" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="1005" pos:column="8"/></block></else></if>
      <if pos:line="1006" pos:column="7">if<condition pos:line="1006" pos:column="9">( <expr><name pos:line="1006" pos:column="11">pTab<pos:position pos:line="1006" pos:column="15"/></name><operator pos:line="1006" pos:column="15">==<pos:position pos:line="1006" pos:column="17"/></operator><literal type="number" pos:line="1006" pos:column="17">0<pos:position pos:line="1006" pos:column="18"/></literal> <operator pos:line="1006" pos:column="19">||<pos:position pos:line="1006" pos:column="21"/></operator> <name><name pos:line="1006" pos:column="22">pTab<pos:position pos:line="1006" pos:column="26"/></name><operator pos:line="1006" pos:column="26">-&gt;<pos:position pos:line="1006" pos:column="31"/></operator><name pos:line="1006" pos:column="28">pFKey<pos:position pos:line="1006" pos:column="33"/></name></name><operator pos:line="1006" pos:column="33">==<pos:position pos:line="1006" pos:column="35"/></operator><literal type="number" pos:line="1006" pos:column="35">0<pos:position pos:line="1006" pos:column="36"/></literal></expr> )<pos:position pos:line="1006" pos:column="38"/></condition><then pos:line="1006" pos:column="38"> <block type="pseudo"><continue pos:line="1006" pos:column="39">continue;<pos:position pos:line="1006" pos:column="48"/></continue></block></then></if>
      <expr_stmt><expr><call><name pos:line="1007" pos:column="7">sqlite3TableLock<pos:position pos:line="1007" pos:column="23"/></name><argument_list pos:line="1007" pos:column="23">(<argument><expr><name pos:line="1007" pos:column="24">pParse<pos:position pos:line="1007" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1007" pos:column="32">iDb<pos:position pos:line="1007" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="1007" pos:column="37">pTab<pos:position pos:line="1007" pos:column="41"/></name><operator pos:line="1007" pos:column="41">-&gt;<pos:position pos:line="1007" pos:column="46"/></operator><name pos:line="1007" pos:column="43">tnum<pos:position pos:line="1007" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="1007" pos:column="49">0<pos:position pos:line="1007" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="1007" pos:column="52">pTab<pos:position pos:line="1007" pos:column="56"/></name><operator pos:line="1007" pos:column="56">-&gt;<pos:position pos:line="1007" pos:column="61"/></operator><name pos:line="1007" pos:column="58">zName<pos:position pos:line="1007" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="1007" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="1007" pos:column="65"/></expr_stmt>
      <if pos:line="1008" pos:column="7">if<condition pos:line="1008" pos:column="9">( <expr><name><name pos:line="1008" pos:column="11">pTab<pos:position pos:line="1008" pos:column="15"/></name><operator pos:line="1008" pos:column="15">-&gt;<pos:position pos:line="1008" pos:column="20"/></operator><name pos:line="1008" pos:column="17">nCol<pos:position pos:line="1008" pos:column="21"/></name></name><operator pos:line="1008" pos:column="21">+<pos:position pos:line="1008" pos:column="22"/></operator><name pos:line="1008" pos:column="22">regRow<pos:position pos:line="1008" pos:column="28"/></name><operator pos:line="1008" pos:column="28">&gt;<pos:position pos:line="1008" pos:column="32"/></operator><name><name pos:line="1008" pos:column="29">pParse<pos:position pos:line="1008" pos:column="35"/></name><operator pos:line="1008" pos:column="35">-&gt;<pos:position pos:line="1008" pos:column="40"/></operator><name pos:line="1008" pos:column="37">nMem<pos:position pos:line="1008" pos:column="41"/></name></name></expr> )<pos:position pos:line="1008" pos:column="43"/></condition><then pos:line="1008" pos:column="43"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="1008" pos:column="44">pParse<pos:position pos:line="1008" pos:column="50"/></name><operator pos:line="1008" pos:column="50">-&gt;<pos:position pos:line="1008" pos:column="55"/></operator><name pos:line="1008" pos:column="52">nMem<pos:position pos:line="1008" pos:column="56"/></name></name> <operator pos:line="1008" pos:column="57">=<pos:position pos:line="1008" pos:column="58"/></operator> <name><name pos:line="1008" pos:column="59">pTab<pos:position pos:line="1008" pos:column="63"/></name><operator pos:line="1008" pos:column="63">-&gt;<pos:position pos:line="1008" pos:column="68"/></operator><name pos:line="1008" pos:column="65">nCol<pos:position pos:line="1008" pos:column="69"/></name></name> <operator pos:line="1008" pos:column="70">+<pos:position pos:line="1008" pos:column="71"/></operator> <name pos:line="1008" pos:column="72">regRow<pos:position pos:line="1008" pos:column="78"/></name></expr>;<pos:position pos:line="1008" pos:column="79"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="1009" pos:column="7">sqlite3OpenTable<pos:position pos:line="1009" pos:column="23"/></name><argument_list pos:line="1009" pos:column="23">(<argument><expr><name pos:line="1009" pos:column="24">pParse<pos:position pos:line="1009" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1009" pos:column="32">0<pos:position pos:line="1009" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="1009" pos:column="35">iDb<pos:position pos:line="1009" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="1009" pos:column="40">pTab<pos:position pos:line="1009" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1009" pos:column="46">OP_OpenRead<pos:position pos:line="1009" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1009" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1009" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1010" pos:column="7">sqlite3VdbeLoadString<pos:position pos:line="1010" pos:column="28"/></name><argument_list pos:line="1010" pos:column="28">(<argument><expr><name pos:line="1010" pos:column="29">v<pos:position pos:line="1010" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1010" pos:column="32">regResult<pos:position pos:line="1010" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="1010" pos:column="43">pTab<pos:position pos:line="1010" pos:column="47"/></name><operator pos:line="1010" pos:column="47">-&gt;<pos:position pos:line="1010" pos:column="52"/></operator><name pos:line="1010" pos:column="49">zName<pos:position pos:line="1010" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="1010" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="1010" pos:column="56"/></expr_stmt>
      <for pos:line="1011" pos:column="7">for<control pos:line="1011" pos:column="10">(<init><expr><name pos:line="1011" pos:column="11">i<pos:position pos:line="1011" pos:column="12"/></name><operator pos:line="1011" pos:column="12">=<pos:position pos:line="1011" pos:column="13"/></operator><literal type="number" pos:line="1011" pos:column="13">1<pos:position pos:line="1011" pos:column="14"/></literal></expr><operator pos:line="1011" pos:column="14">,<pos:position pos:line="1011" pos:column="15"/></operator> <expr><name pos:line="1011" pos:column="16">pFK<pos:position pos:line="1011" pos:column="19"/></name><operator pos:line="1011" pos:column="19">=<pos:position pos:line="1011" pos:column="20"/></operator><name><name pos:line="1011" pos:column="20">pTab<pos:position pos:line="1011" pos:column="24"/></name><operator pos:line="1011" pos:column="24">-&gt;<pos:position pos:line="1011" pos:column="29"/></operator><name pos:line="1011" pos:column="26">pFKey<pos:position pos:line="1011" pos:column="31"/></name></name></expr>;<pos:position pos:line="1011" pos:column="32"/></init> <condition><expr><name pos:line="1011" pos:column="33">pFK<pos:position pos:line="1011" pos:column="36"/></name></expr>;<pos:position pos:line="1011" pos:column="37"/></condition> <incr><expr><name pos:line="1011" pos:column="38">i<pos:position pos:line="1011" pos:column="39"/></name><operator pos:line="1011" pos:column="39">++<pos:position pos:line="1011" pos:column="41"/></operator></expr><operator pos:line="1011" pos:column="41">,<pos:position pos:line="1011" pos:column="42"/></operator> <expr><name pos:line="1011" pos:column="43">pFK<pos:position pos:line="1011" pos:column="46"/></name><operator pos:line="1011" pos:column="46">=<pos:position pos:line="1011" pos:column="47"/></operator><name><name pos:line="1011" pos:column="47">pFK<pos:position pos:line="1011" pos:column="50"/></name><operator pos:line="1011" pos:column="50">-&gt;<pos:position pos:line="1011" pos:column="55"/></operator><name pos:line="1011" pos:column="52">pNextFrom<pos:position pos:line="1011" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="1011" pos:column="62"/></control><block pos:line="1011" pos:column="62">{
        <expr_stmt><expr><name pos:line="1012" pos:column="9">pParent<pos:position pos:line="1012" pos:column="16"/></name> <operator pos:line="1012" pos:column="17">=<pos:position pos:line="1012" pos:column="18"/></operator> <call><name pos:line="1012" pos:column="19">sqlite3FindTable<pos:position pos:line="1012" pos:column="35"/></name><argument_list pos:line="1012" pos:column="35">(<argument><expr><name pos:line="1012" pos:column="36">db<pos:position pos:line="1012" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="1012" pos:column="40">pFK<pos:position pos:line="1012" pos:column="43"/></name><operator pos:line="1012" pos:column="43">-&gt;<pos:position pos:line="1012" pos:column="48"/></operator><name pos:line="1012" pos:column="45">zTo<pos:position pos:line="1012" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="1012" pos:column="50">zDb<pos:position pos:line="1012" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1012" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1012" pos:column="55"/></expr_stmt>
        <if pos:line="1013" pos:column="9">if<condition pos:line="1013" pos:column="11">( <expr><name pos:line="1013" pos:column="13">pParent<pos:position pos:line="1013" pos:column="20"/></name><operator pos:line="1013" pos:column="20">==<pos:position pos:line="1013" pos:column="22"/></operator><literal type="number" pos:line="1013" pos:column="22">0<pos:position pos:line="1013" pos:column="23"/></literal></expr> )<pos:position pos:line="1013" pos:column="25"/></condition><then pos:line="1013" pos:column="25"> <block type="pseudo"><continue pos:line="1013" pos:column="26">continue;<pos:position pos:line="1013" pos:column="35"/></continue></block></then></if>
        <expr_stmt><expr><name pos:line="1014" pos:column="9">pIdx<pos:position pos:line="1014" pos:column="13"/></name> <operator pos:line="1014" pos:column="14">=<pos:position pos:line="1014" pos:column="15"/></operator> <literal type="number" pos:line="1014" pos:column="16">0<pos:position pos:line="1014" pos:column="17"/></literal></expr>;<pos:position pos:line="1014" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1015" pos:column="9">sqlite3TableLock<pos:position pos:line="1015" pos:column="25"/></name><argument_list pos:line="1015" pos:column="25">(<argument><expr><name pos:line="1015" pos:column="26">pParse<pos:position pos:line="1015" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1015" pos:column="34">iDb<pos:position pos:line="1015" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="1015" pos:column="39">pParent<pos:position pos:line="1015" pos:column="46"/></name><operator pos:line="1015" pos:column="46">-&gt;<pos:position pos:line="1015" pos:column="51"/></operator><name pos:line="1015" pos:column="48">tnum<pos:position pos:line="1015" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="1015" pos:column="54">0<pos:position pos:line="1015" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="1015" pos:column="57">pParent<pos:position pos:line="1015" pos:column="64"/></name><operator pos:line="1015" pos:column="64">-&gt;<pos:position pos:line="1015" pos:column="69"/></operator><name pos:line="1015" pos:column="66">zName<pos:position pos:line="1015" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="1015" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1015" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1016" pos:column="9">x<pos:position pos:line="1016" pos:column="10"/></name> <operator pos:line="1016" pos:column="11">=<pos:position pos:line="1016" pos:column="12"/></operator> <call><name pos:line="1016" pos:column="13">sqlite3FkLocateIndex<pos:position pos:line="1016" pos:column="33"/></name><argument_list pos:line="1016" pos:column="33">(<argument><expr><name pos:line="1016" pos:column="34">pParse<pos:position pos:line="1016" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="1016" pos:column="42">pParent<pos:position pos:line="1016" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="1016" pos:column="51">pFK<pos:position pos:line="1016" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="1016" pos:column="56">&amp;<pos:position pos:line="1016" pos:column="61"/></operator><name pos:line="1016" pos:column="57">pIdx<pos:position pos:line="1016" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1016" pos:column="63">0<pos:position pos:line="1016" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="1016" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="1016" pos:column="66"/></expr_stmt>
        <if pos:line="1017" pos:column="9">if<condition pos:line="1017" pos:column="11">( <expr><name pos:line="1017" pos:column="13">x<pos:position pos:line="1017" pos:column="14"/></name><operator pos:line="1017" pos:column="14">==<pos:position pos:line="1017" pos:column="16"/></operator><literal type="number" pos:line="1017" pos:column="16">0<pos:position pos:line="1017" pos:column="17"/></literal></expr> )<pos:position pos:line="1017" pos:column="19"/></condition><then><block pos:line="1017" pos:column="19">{
          <if pos:line="1018" pos:column="11">if<condition pos:line="1018" pos:column="13">( <expr><name pos:line="1018" pos:column="15">pIdx<pos:position pos:line="1018" pos:column="19"/></name><operator pos:line="1018" pos:column="19">==<pos:position pos:line="1018" pos:column="21"/></operator><literal type="number" pos:line="1018" pos:column="21">0<pos:position pos:line="1018" pos:column="22"/></literal></expr> )<pos:position pos:line="1018" pos:column="24"/></condition><then><block pos:line="1018" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="1019" pos:column="13">sqlite3OpenTable<pos:position pos:line="1019" pos:column="29"/></name><argument_list pos:line="1019" pos:column="29">(<argument><expr><name pos:line="1019" pos:column="30">pParse<pos:position pos:line="1019" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1019" pos:column="38">i<pos:position pos:line="1019" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1019" pos:column="41">iDb<pos:position pos:line="1019" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1019" pos:column="46">pParent<pos:position pos:line="1019" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="1019" pos:column="55">OP_OpenRead<pos:position pos:line="1019" pos:column="66"/></name></expr></argument>)<pos:position pos:line="1019" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1019" pos:column="68"/></expr_stmt>
          }<pos:position pos:line="1020" pos:column="12"/></block></then><else pos:line="1020" pos:column="12">else<block pos:line="1020" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="1021" pos:column="13">sqlite3VdbeAddOp3<pos:position pos:line="1021" pos:column="30"/></name><argument_list pos:line="1021" pos:column="30">(<argument><expr><name pos:line="1021" pos:column="31">v<pos:position pos:line="1021" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1021" pos:column="34">OP_OpenRead<pos:position pos:line="1021" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1021" pos:column="47">i<pos:position pos:line="1021" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="1021" pos:column="50">pIdx<pos:position pos:line="1021" pos:column="54"/></name><operator pos:line="1021" pos:column="54">-&gt;<pos:position pos:line="1021" pos:column="59"/></operator><name pos:line="1021" pos:column="56">tnum<pos:position pos:line="1021" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="1021" pos:column="62">iDb<pos:position pos:line="1021" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1021" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1021" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1022" pos:column="13">sqlite3VdbeSetP4KeyInfo<pos:position pos:line="1022" pos:column="36"/></name><argument_list pos:line="1022" pos:column="36">(<argument><expr><name pos:line="1022" pos:column="37">pParse<pos:position pos:line="1022" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1022" pos:column="45">pIdx<pos:position pos:line="1022" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1022" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1022" pos:column="51"/></expr_stmt>
          }<pos:position pos:line="1023" pos:column="12"/></block></else></if>
        }<pos:position pos:line="1024" pos:column="10"/></block></then><else pos:line="1024" pos:column="10">else<block pos:line="1024" pos:column="14">{
          <expr_stmt><expr><name pos:line="1025" pos:column="11">k<pos:position pos:line="1025" pos:column="12"/></name> <operator pos:line="1025" pos:column="13">=<pos:position pos:line="1025" pos:column="14"/></operator> <literal type="number" pos:line="1025" pos:column="15">0<pos:position pos:line="1025" pos:column="16"/></literal></expr>;<pos:position pos:line="1025" pos:column="17"/></expr_stmt>
          <break pos:line="1026" pos:column="11">break;<pos:position pos:line="1026" pos:column="17"/></break>
        }<pos:position pos:line="1027" pos:column="10"/></block></else></if>
      }<pos:position pos:line="1028" pos:column="8"/></block></for>
      <expr_stmt><expr><call><name pos:line="1029" pos:column="7">assert<pos:position pos:line="1029" pos:column="13"/></name><argument_list pos:line="1029" pos:column="13">( <argument><expr><name><name pos:line="1029" pos:column="15">pParse<pos:position pos:line="1029" pos:column="21"/></name><operator pos:line="1029" pos:column="21">-&gt;<pos:position pos:line="1029" pos:column="26"/></operator><name pos:line="1029" pos:column="23">nErr<pos:position pos:line="1029" pos:column="27"/></name></name><operator pos:line="1029" pos:column="27">&gt;<pos:position pos:line="1029" pos:column="31"/></operator><literal type="number" pos:line="1029" pos:column="28">0<pos:position pos:line="1029" pos:column="29"/></literal> <operator pos:line="1029" pos:column="30">||<pos:position pos:line="1029" pos:column="32"/></operator> <name pos:line="1029" pos:column="33">pFK<pos:position pos:line="1029" pos:column="36"/></name><operator pos:line="1029" pos:column="36">==<pos:position pos:line="1029" pos:column="38"/></operator><literal type="number" pos:line="1029" pos:column="38">0<pos:position pos:line="1029" pos:column="39"/></literal></expr></argument> )<pos:position pos:line="1029" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1029" pos:column="42"/></expr_stmt>
      <if pos:line="1030" pos:column="7">if<condition pos:line="1030" pos:column="9">( <expr><name pos:line="1030" pos:column="11">pFK<pos:position pos:line="1030" pos:column="14"/></name></expr> )<pos:position pos:line="1030" pos:column="16"/></condition><then pos:line="1030" pos:column="16"> <block type="pseudo"><break pos:line="1030" pos:column="17">break;<pos:position pos:line="1030" pos:column="23"/></break></block></then></if>
      <if pos:line="1031" pos:column="7">if<condition pos:line="1031" pos:column="9">( <expr><name><name pos:line="1031" pos:column="11">pParse<pos:position pos:line="1031" pos:column="17"/></name><operator pos:line="1031" pos:column="17">-&gt;<pos:position pos:line="1031" pos:column="22"/></operator><name pos:line="1031" pos:column="19">nTab<pos:position pos:line="1031" pos:column="23"/></name></name><operator pos:line="1031" pos:column="23">&lt;<pos:position pos:line="1031" pos:column="27"/></operator><name pos:line="1031" pos:column="24">i<pos:position pos:line="1031" pos:column="25"/></name></expr> )<pos:position pos:line="1031" pos:column="27"/></condition><then pos:line="1031" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="1031" pos:column="28">pParse<pos:position pos:line="1031" pos:column="34"/></name><operator pos:line="1031" pos:column="34">-&gt;<pos:position pos:line="1031" pos:column="39"/></operator><name pos:line="1031" pos:column="36">nTab<pos:position pos:line="1031" pos:column="40"/></name></name> <operator pos:line="1031" pos:column="41">=<pos:position pos:line="1031" pos:column="42"/></operator> <name pos:line="1031" pos:column="43">i<pos:position pos:line="1031" pos:column="44"/></name></expr>;<pos:position pos:line="1031" pos:column="45"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="1032" pos:column="7">addrTop<pos:position pos:line="1032" pos:column="14"/></name> <operator pos:line="1032" pos:column="15">=<pos:position pos:line="1032" pos:column="16"/></operator> <call><name pos:line="1032" pos:column="17">sqlite3VdbeAddOp1<pos:position pos:line="1032" pos:column="34"/></name><argument_list pos:line="1032" pos:column="34">(<argument><expr><name pos:line="1032" pos:column="35">v<pos:position pos:line="1032" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1032" pos:column="38">OP_Rewind<pos:position pos:line="1032" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1032" pos:column="49">0<pos:position pos:line="1032" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="1032" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1032" pos:column="52"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1032" pos:column="53">VdbeCoverage<pos:position pos:line="1032" pos:column="65"/></name><argument_list pos:line="1032" pos:column="65">(<argument><expr><name pos:line="1032" pos:column="66">v<pos:position pos:line="1032" pos:column="67"/></name></expr></argument>)<pos:position pos:line="1032" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1032" pos:column="69"/></expr_stmt>
      <for pos:line="1033" pos:column="7">for<control pos:line="1033" pos:column="10">(<init><expr><name pos:line="1033" pos:column="11">i<pos:position pos:line="1033" pos:column="12"/></name><operator pos:line="1033" pos:column="12">=<pos:position pos:line="1033" pos:column="13"/></operator><literal type="number" pos:line="1033" pos:column="13">1<pos:position pos:line="1033" pos:column="14"/></literal></expr><operator pos:line="1033" pos:column="14">,<pos:position pos:line="1033" pos:column="15"/></operator> <expr><name pos:line="1033" pos:column="16">pFK<pos:position pos:line="1033" pos:column="19"/></name><operator pos:line="1033" pos:column="19">=<pos:position pos:line="1033" pos:column="20"/></operator><name><name pos:line="1033" pos:column="20">pTab<pos:position pos:line="1033" pos:column="24"/></name><operator pos:line="1033" pos:column="24">-&gt;<pos:position pos:line="1033" pos:column="29"/></operator><name pos:line="1033" pos:column="26">pFKey<pos:position pos:line="1033" pos:column="31"/></name></name></expr>;<pos:position pos:line="1033" pos:column="32"/></init> <condition><expr><name pos:line="1033" pos:column="33">pFK<pos:position pos:line="1033" pos:column="36"/></name></expr>;<pos:position pos:line="1033" pos:column="37"/></condition> <incr><expr><name pos:line="1033" pos:column="38">i<pos:position pos:line="1033" pos:column="39"/></name><operator pos:line="1033" pos:column="39">++<pos:position pos:line="1033" pos:column="41"/></operator></expr><operator pos:line="1033" pos:column="41">,<pos:position pos:line="1033" pos:column="42"/></operator> <expr><name pos:line="1033" pos:column="43">pFK<pos:position pos:line="1033" pos:column="46"/></name><operator pos:line="1033" pos:column="46">=<pos:position pos:line="1033" pos:column="47"/></operator><name><name pos:line="1033" pos:column="47">pFK<pos:position pos:line="1033" pos:column="50"/></name><operator pos:line="1033" pos:column="50">-&gt;<pos:position pos:line="1033" pos:column="55"/></operator><name pos:line="1033" pos:column="52">pNextFrom<pos:position pos:line="1033" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="1033" pos:column="62"/></control><block pos:line="1033" pos:column="62">{
        <expr_stmt><expr><name pos:line="1034" pos:column="9">pParent<pos:position pos:line="1034" pos:column="16"/></name> <operator pos:line="1034" pos:column="17">=<pos:position pos:line="1034" pos:column="18"/></operator> <call><name pos:line="1034" pos:column="19">sqlite3FindTable<pos:position pos:line="1034" pos:column="35"/></name><argument_list pos:line="1034" pos:column="35">(<argument><expr><name pos:line="1034" pos:column="36">db<pos:position pos:line="1034" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="1034" pos:column="40">pFK<pos:position pos:line="1034" pos:column="43"/></name><operator pos:line="1034" pos:column="43">-&gt;<pos:position pos:line="1034" pos:column="48"/></operator><name pos:line="1034" pos:column="45">zTo<pos:position pos:line="1034" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="1034" pos:column="50">zDb<pos:position pos:line="1034" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1034" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1034" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1035" pos:column="9">pIdx<pos:position pos:line="1035" pos:column="13"/></name> <operator pos:line="1035" pos:column="14">=<pos:position pos:line="1035" pos:column="15"/></operator> <literal type="number" pos:line="1035" pos:column="16">0<pos:position pos:line="1035" pos:column="17"/></literal></expr>;<pos:position pos:line="1035" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1036" pos:column="9">aiCols<pos:position pos:line="1036" pos:column="15"/></name> <operator pos:line="1036" pos:column="16">=<pos:position pos:line="1036" pos:column="17"/></operator> <literal type="number" pos:line="1036" pos:column="18">0<pos:position pos:line="1036" pos:column="19"/></literal></expr>;<pos:position pos:line="1036" pos:column="20"/></expr_stmt>
        <if pos:line="1037" pos:column="9">if<condition pos:line="1037" pos:column="11">( <expr><name pos:line="1037" pos:column="13">pParent<pos:position pos:line="1037" pos:column="20"/></name></expr> )<pos:position pos:line="1037" pos:column="22"/></condition><then><block pos:line="1037" pos:column="22">{
          <expr_stmt><expr><name pos:line="1038" pos:column="11">x<pos:position pos:line="1038" pos:column="12"/></name> <operator pos:line="1038" pos:column="13">=<pos:position pos:line="1038" pos:column="14"/></operator> <call><name pos:line="1038" pos:column="15">sqlite3FkLocateIndex<pos:position pos:line="1038" pos:column="35"/></name><argument_list pos:line="1038" pos:column="35">(<argument><expr><name pos:line="1038" pos:column="36">pParse<pos:position pos:line="1038" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1038" pos:column="44">pParent<pos:position pos:line="1038" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1038" pos:column="53">pFK<pos:position pos:line="1038" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="1038" pos:column="58">&amp;<pos:position pos:line="1038" pos:column="63"/></operator><name pos:line="1038" pos:column="59">pIdx<pos:position pos:line="1038" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="1038" pos:column="65">&amp;<pos:position pos:line="1038" pos:column="70"/></operator><name pos:line="1038" pos:column="66">aiCols<pos:position pos:line="1038" pos:column="72"/></name></expr></argument>)<pos:position pos:line="1038" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="1038" pos:column="74"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1039" pos:column="11">assert<pos:position pos:line="1039" pos:column="17"/></name><argument_list pos:line="1039" pos:column="17">( <argument><expr><name pos:line="1039" pos:column="19">x<pos:position pos:line="1039" pos:column="20"/></name><operator pos:line="1039" pos:column="20">==<pos:position pos:line="1039" pos:column="22"/></operator><literal type="number" pos:line="1039" pos:column="22">0<pos:position pos:line="1039" pos:column="23"/></literal></expr></argument> )<pos:position pos:line="1039" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="1039" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="1040" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="1041" pos:column="9">addrOk<pos:position pos:line="1041" pos:column="15"/></name> <operator pos:line="1041" pos:column="16">=<pos:position pos:line="1041" pos:column="17"/></operator> <call><name pos:line="1041" pos:column="18">sqlite3VdbeMakeLabel<pos:position pos:line="1041" pos:column="38"/></name><argument_list pos:line="1041" pos:column="38">(<argument><expr><name pos:line="1041" pos:column="39">v<pos:position pos:line="1041" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1041" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1041" pos:column="42"/></expr_stmt>

        <comment type="block" pos:line="1043" pos:column="9">/* Generate code to read the child key values into registers
        ** regRow..regRow+n. If any of the child key values are NULL, this 
        ** row cannot cause an FK violation. Jump directly to addrOk in 
        ** this case. */</comment>
        <for pos:line="1047" pos:column="9">for<control pos:line="1047" pos:column="12">(<init><expr><name pos:line="1047" pos:column="13">j<pos:position pos:line="1047" pos:column="14"/></name><operator pos:line="1047" pos:column="14">=<pos:position pos:line="1047" pos:column="15"/></operator><literal type="number" pos:line="1047" pos:column="15">0<pos:position pos:line="1047" pos:column="16"/></literal></expr>;<pos:position pos:line="1047" pos:column="17"/></init> <condition><expr><name pos:line="1047" pos:column="18">j<pos:position pos:line="1047" pos:column="19"/></name><operator pos:line="1047" pos:column="19">&lt;<pos:position pos:line="1047" pos:column="23"/></operator><name><name pos:line="1047" pos:column="20">pFK<pos:position pos:line="1047" pos:column="23"/></name><operator pos:line="1047" pos:column="23">-&gt;<pos:position pos:line="1047" pos:column="28"/></operator><name pos:line="1047" pos:column="25">nCol<pos:position pos:line="1047" pos:column="29"/></name></name></expr>;<pos:position pos:line="1047" pos:column="30"/></condition> <incr><expr><name pos:line="1047" pos:column="31">j<pos:position pos:line="1047" pos:column="32"/></name><operator pos:line="1047" pos:column="32">++<pos:position pos:line="1047" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="1047" pos:column="35"/></control><block pos:line="1047" pos:column="35">{
          <decl_stmt><decl><type><name pos:line="1048" pos:column="11">int<pos:position pos:line="1048" pos:column="14"/></name></type> <name pos:line="1048" pos:column="15">iCol<pos:position pos:line="1048" pos:column="19"/></name> <init pos:line="1048" pos:column="20">= <expr><ternary><condition><expr><name pos:line="1048" pos:column="22">aiCols<pos:position pos:line="1048" pos:column="28"/></name></expr> ?<pos:position pos:line="1048" pos:column="30"/></condition><then pos:line="1048" pos:column="30"> <expr><name><name pos:line="1048" pos:column="31">aiCols<pos:position pos:line="1048" pos:column="37"/></name><index pos:line="1048" pos:column="37">[<expr><name pos:line="1048" pos:column="38">j<pos:position pos:line="1048" pos:column="39"/></name></expr>]<pos:position pos:line="1048" pos:column="40"/></index></name></expr> <pos:position pos:line="1048" pos:column="41"/></then><else pos:line="1048" pos:column="41">: <expr><name><name pos:line="1048" pos:column="43">pFK<pos:position pos:line="1048" pos:column="46"/></name><operator pos:line="1048" pos:column="46">-&gt;<pos:position pos:line="1048" pos:column="51"/></operator><name pos:line="1048" pos:column="48">aCol<pos:position pos:line="1048" pos:column="52"/></name><index pos:line="1048" pos:column="52">[<expr><name pos:line="1048" pos:column="53">j<pos:position pos:line="1048" pos:column="54"/></name></expr>]<pos:position pos:line="1048" pos:column="55"/></index></name><operator pos:line="1048" pos:column="55">.<pos:position pos:line="1048" pos:column="56"/></operator><name pos:line="1048" pos:column="56">iFrom<pos:position pos:line="1048" pos:column="61"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="1048" pos:column="62"/></decl_stmt>
          <expr_stmt><expr><call><name pos:line="1049" pos:column="11">sqlite3ExprCodeGetColumnOfTable<pos:position pos:line="1049" pos:column="42"/></name><argument_list pos:line="1049" pos:column="42">(<argument><expr><name pos:line="1049" pos:column="43">v<pos:position pos:line="1049" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1049" pos:column="46">pTab<pos:position pos:line="1049" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1049" pos:column="52">0<pos:position pos:line="1049" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="1049" pos:column="55">iCol<pos:position pos:line="1049" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="1049" pos:column="61">regRow<pos:position pos:line="1049" pos:column="67"/></name><operator pos:line="1049" pos:column="67">+<pos:position pos:line="1049" pos:column="68"/></operator><name pos:line="1049" pos:column="68">j<pos:position pos:line="1049" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1049" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1049" pos:column="71"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1050" pos:column="11">sqlite3VdbeAddOp2<pos:position pos:line="1050" pos:column="28"/></name><argument_list pos:line="1050" pos:column="28">(<argument><expr><name pos:line="1050" pos:column="29">v<pos:position pos:line="1050" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1050" pos:column="32">OP_IsNull<pos:position pos:line="1050" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="1050" pos:column="43">regRow<pos:position pos:line="1050" pos:column="49"/></name><operator pos:line="1050" pos:column="49">+<pos:position pos:line="1050" pos:column="50"/></operator><name pos:line="1050" pos:column="50">j<pos:position pos:line="1050" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1050" pos:column="53">addrOk<pos:position pos:line="1050" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1050" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1050" pos:column="61"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1050" pos:column="62">VdbeCoverage<pos:position pos:line="1050" pos:column="74"/></name><argument_list pos:line="1050" pos:column="74">(<argument><expr><name pos:line="1050" pos:column="75">v<pos:position pos:line="1050" pos:column="76"/></name></expr></argument>)<pos:position pos:line="1050" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="1050" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="1051" pos:column="10"/></block></for>

        <comment type="block" pos:line="1053" pos:column="9">/* Generate code to query the parent index for a matching parent
        ** key. If a match is found, jump to addrOk. */</comment>
        <if pos:line="1055" pos:column="9">if<condition pos:line="1055" pos:column="11">( <expr><name pos:line="1055" pos:column="13">pIdx<pos:position pos:line="1055" pos:column="17"/></name></expr> )<pos:position pos:line="1055" pos:column="19"/></condition><then><block pos:line="1055" pos:column="19">{
          <expr_stmt><expr><call><name pos:line="1056" pos:column="11">sqlite3VdbeAddOp4<pos:position pos:line="1056" pos:column="28"/></name><argument_list pos:line="1056" pos:column="28">(<argument><expr><name pos:line="1056" pos:column="29">v<pos:position pos:line="1056" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1056" pos:column="32">OP_MakeRecord<pos:position pos:line="1056" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1056" pos:column="47">regRow<pos:position pos:line="1056" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="1056" pos:column="55">pFK<pos:position pos:line="1056" pos:column="58"/></name><operator pos:line="1056" pos:column="58">-&gt;<pos:position pos:line="1056" pos:column="63"/></operator><name pos:line="1056" pos:column="60">nCol<pos:position pos:line="1056" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="1056" pos:column="66">regKey<pos:position pos:line="1056" pos:column="72"/></name></expr></argument>,
              <argument><expr><call><name pos:line="1057" pos:column="15">sqlite3IndexAffinityStr<pos:position pos:line="1057" pos:column="38"/></name><argument_list pos:line="1057" pos:column="38">(<argument><expr><name pos:line="1057" pos:column="39">db<pos:position pos:line="1057" pos:column="41"/></name></expr></argument>,<argument><expr><name pos:line="1057" pos:column="42">pIdx<pos:position pos:line="1057" pos:column="46"/></name></expr></argument>)<pos:position pos:line="1057" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="1057" pos:column="49">pFK<pos:position pos:line="1057" pos:column="52"/></name><operator pos:line="1057" pos:column="52">-&gt;<pos:position pos:line="1057" pos:column="57"/></operator><name pos:line="1057" pos:column="54">nCol<pos:position pos:line="1057" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="1057" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="1057" pos:column="60"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1058" pos:column="11">sqlite3VdbeAddOp4Int<pos:position pos:line="1058" pos:column="31"/></name><argument_list pos:line="1058" pos:column="31">(<argument><expr><name pos:line="1058" pos:column="32">v<pos:position pos:line="1058" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1058" pos:column="35">OP_Found<pos:position pos:line="1058" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1058" pos:column="45">i<pos:position pos:line="1058" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1058" pos:column="48">addrOk<pos:position pos:line="1058" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1058" pos:column="56">regKey<pos:position pos:line="1058" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1058" pos:column="64">0<pos:position pos:line="1058" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="1058" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1058" pos:column="67"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1059" pos:column="11">VdbeCoverage<pos:position pos:line="1059" pos:column="23"/></name><argument_list pos:line="1059" pos:column="23">(<argument><expr><name pos:line="1059" pos:column="24">v<pos:position pos:line="1059" pos:column="25"/></name></expr></argument>)<pos:position pos:line="1059" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="1059" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="1060" pos:column="10"/></block></then><elseif pos:line="1060" pos:column="10">else <if pos:line="1060" pos:column="15">if<condition pos:line="1060" pos:column="17">( <expr><name pos:line="1060" pos:column="19">pParent<pos:position pos:line="1060" pos:column="26"/></name></expr> )<pos:position pos:line="1060" pos:column="28"/></condition><then><block pos:line="1060" pos:column="28">{
          <decl_stmt><decl><type><name pos:line="1061" pos:column="11">int<pos:position pos:line="1061" pos:column="14"/></name></type> <name pos:line="1061" pos:column="15">jmp<pos:position pos:line="1061" pos:column="18"/></name> <init pos:line="1061" pos:column="19">= <expr><call><name pos:line="1061" pos:column="21">sqlite3VdbeCurrentAddr<pos:position pos:line="1061" pos:column="43"/></name><argument_list pos:line="1061" pos:column="43">(<argument><expr><name pos:line="1061" pos:column="44">v<pos:position pos:line="1061" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1061" pos:column="46"/></argument_list></call><operator pos:line="1061" pos:column="46">+<pos:position pos:line="1061" pos:column="47"/></operator><literal type="number" pos:line="1061" pos:column="47">2<pos:position pos:line="1061" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="1061" pos:column="49"/></decl_stmt>
          <expr_stmt><expr><call><name pos:line="1062" pos:column="11">sqlite3VdbeAddOp3<pos:position pos:line="1062" pos:column="28"/></name><argument_list pos:line="1062" pos:column="28">(<argument><expr><name pos:line="1062" pos:column="29">v<pos:position pos:line="1062" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1062" pos:column="32">OP_SeekRowid<pos:position pos:line="1062" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1062" pos:column="46">i<pos:position pos:line="1062" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="1062" pos:column="49">jmp<pos:position pos:line="1062" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1062" pos:column="54">regRow<pos:position pos:line="1062" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1062" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1062" pos:column="62"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1062" pos:column="63">VdbeCoverage<pos:position pos:line="1062" pos:column="75"/></name><argument_list pos:line="1062" pos:column="75">(<argument><expr><name pos:line="1062" pos:column="76">v<pos:position pos:line="1062" pos:column="77"/></name></expr></argument>)<pos:position pos:line="1062" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="1062" pos:column="79"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1063" pos:column="11">sqlite3VdbeGoto<pos:position pos:line="1063" pos:column="26"/></name><argument_list pos:line="1063" pos:column="26">(<argument><expr><name pos:line="1063" pos:column="27">v<pos:position pos:line="1063" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1063" pos:column="30">addrOk<pos:position pos:line="1063" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1063" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1063" pos:column="38"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1064" pos:column="11">assert<pos:position pos:line="1064" pos:column="17"/></name><argument_list pos:line="1064" pos:column="17">( <argument><expr><name><name pos:line="1064" pos:column="19">pFK<pos:position pos:line="1064" pos:column="22"/></name><operator pos:line="1064" pos:column="22">-&gt;<pos:position pos:line="1064" pos:column="27"/></operator><name pos:line="1064" pos:column="24">nCol<pos:position pos:line="1064" pos:column="28"/></name></name><operator pos:line="1064" pos:column="28">==<pos:position pos:line="1064" pos:column="30"/></operator><literal type="number" pos:line="1064" pos:column="30">1<pos:position pos:line="1064" pos:column="31"/></literal></expr></argument> )<pos:position pos:line="1064" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1064" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="1065" pos:column="10"/></block></then></if></elseif></if>

        <comment type="block" pos:line="1067" pos:column="9">/* Generate code to report an FK violation to the caller. */</comment>
        <if pos:line="1068" pos:column="9">if<condition pos:line="1068" pos:column="11">( <expr><call><name pos:line="1068" pos:column="13">HasRowid<pos:position pos:line="1068" pos:column="21"/></name><argument_list pos:line="1068" pos:column="21">(<argument><expr><name pos:line="1068" pos:column="22">pTab<pos:position pos:line="1068" pos:column="26"/></name></expr></argument>)<pos:position pos:line="1068" pos:column="27"/></argument_list></call></expr> )<pos:position pos:line="1068" pos:column="29"/></condition><then><block pos:line="1068" pos:column="29">{
          <expr_stmt><expr><call><name pos:line="1069" pos:column="11">sqlite3VdbeAddOp2<pos:position pos:line="1069" pos:column="28"/></name><argument_list pos:line="1069" pos:column="28">(<argument><expr><name pos:line="1069" pos:column="29">v<pos:position pos:line="1069" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1069" pos:column="32">OP_Rowid<pos:position pos:line="1069" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1069" pos:column="42">0<pos:position pos:line="1069" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="1069" pos:column="45">regResult<pos:position pos:line="1069" pos:column="54"/></name><operator pos:line="1069" pos:column="54">+<pos:position pos:line="1069" pos:column="55"/></operator><literal type="number" pos:line="1069" pos:column="55">1<pos:position pos:line="1069" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="1069" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="1069" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="1070" pos:column="10"/></block></then><else pos:line="1070" pos:column="10">else<block pos:line="1070" pos:column="14">{
          <expr_stmt><expr><call><name pos:line="1071" pos:column="11">sqlite3VdbeAddOp2<pos:position pos:line="1071" pos:column="28"/></name><argument_list pos:line="1071" pos:column="28">(<argument><expr><name pos:line="1071" pos:column="29">v<pos:position pos:line="1071" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1071" pos:column="32">OP_Null<pos:position pos:line="1071" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1071" pos:column="41">0<pos:position pos:line="1071" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="1071" pos:column="44">regResult<pos:position pos:line="1071" pos:column="53"/></name><operator pos:line="1071" pos:column="53">+<pos:position pos:line="1071" pos:column="54"/></operator><literal type="number" pos:line="1071" pos:column="54">1<pos:position pos:line="1071" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="1071" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1071" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="1072" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="1073" pos:column="9">sqlite3VdbeMultiLoad<pos:position pos:line="1073" pos:column="29"/></name><argument_list pos:line="1073" pos:column="29">(<argument><expr><name pos:line="1073" pos:column="30">v<pos:position pos:line="1073" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1073" pos:column="33">regResult<pos:position pos:line="1073" pos:column="42"/></name><operator pos:line="1073" pos:column="42">+<pos:position pos:line="1073" pos:column="43"/></operator><literal type="number" pos:line="1073" pos:column="43">2<pos:position pos:line="1073" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1073" pos:column="46">"siX"<pos:position pos:line="1073" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="1073" pos:column="53">pFK<pos:position pos:line="1073" pos:column="56"/></name><operator pos:line="1073" pos:column="56">-&gt;<pos:position pos:line="1073" pos:column="61"/></operator><name pos:line="1073" pos:column="58">zTo<pos:position pos:line="1073" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="1073" pos:column="63">i<pos:position pos:line="1073" pos:column="64"/></name><operator pos:line="1073" pos:column="64">-<pos:position pos:line="1073" pos:column="65"/></operator><literal type="number" pos:line="1073" pos:column="65">1<pos:position pos:line="1073" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="1073" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1073" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1074" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="1074" pos:column="26"/></name><argument_list pos:line="1074" pos:column="26">(<argument><expr><name pos:line="1074" pos:column="27">v<pos:position pos:line="1074" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1074" pos:column="30">OP_ResultRow<pos:position pos:line="1074" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1074" pos:column="44">regResult<pos:position pos:line="1074" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1074" pos:column="55">4<pos:position pos:line="1074" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="1074" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="1074" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1075" pos:column="9">sqlite3VdbeResolveLabel<pos:position pos:line="1075" pos:column="32"/></name><argument_list pos:line="1075" pos:column="32">(<argument><expr><name pos:line="1075" pos:column="33">v<pos:position pos:line="1075" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1075" pos:column="36">addrOk<pos:position pos:line="1075" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1075" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1075" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1076" pos:column="9">sqlite3DbFree<pos:position pos:line="1076" pos:column="22"/></name><argument_list pos:line="1076" pos:column="22">(<argument><expr><name pos:line="1076" pos:column="23">db<pos:position pos:line="1076" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="1076" pos:column="27">aiCols<pos:position pos:line="1076" pos:column="33"/></name></expr></argument>)<pos:position pos:line="1076" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1076" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="1077" pos:column="8"/></block></for>
      <expr_stmt><expr><call><name pos:line="1078" pos:column="7">sqlite3VdbeAddOp2<pos:position pos:line="1078" pos:column="24"/></name><argument_list pos:line="1078" pos:column="24">(<argument><expr><name pos:line="1078" pos:column="25">v<pos:position pos:line="1078" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1078" pos:column="28">OP_Next<pos:position pos:line="1078" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1078" pos:column="37">0<pos:position pos:line="1078" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="1078" pos:column="40">addrTop<pos:position pos:line="1078" pos:column="47"/></name><operator pos:line="1078" pos:column="47">+<pos:position pos:line="1078" pos:column="48"/></operator><literal type="number" pos:line="1078" pos:column="48">1<pos:position pos:line="1078" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="1078" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1078" pos:column="51"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1078" pos:column="52">VdbeCoverage<pos:position pos:line="1078" pos:column="64"/></name><argument_list pos:line="1078" pos:column="64">(<argument><expr><name pos:line="1078" pos:column="65">v<pos:position pos:line="1078" pos:column="66"/></name></expr></argument>)<pos:position pos:line="1078" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1078" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1079" pos:column="7">sqlite3VdbeJumpHere<pos:position pos:line="1079" pos:column="26"/></name><argument_list pos:line="1079" pos:column="26">(<argument><expr><name pos:line="1079" pos:column="27">v<pos:position pos:line="1079" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1079" pos:column="30">addrTop<pos:position pos:line="1079" pos:column="37"/></name></expr></argument>)<pos:position pos:line="1079" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="1079" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="1080" pos:column="6"/></block></while>
  }<pos:position pos:line="1081" pos:column="4"/></block>
  <break pos:line="1082" pos:column="3">break;<pos:position pos:line="1082" pos:column="9"/></break>
<cpp:endif pos:line="1083" pos:column="1">#<cpp:directive pos:line="1083" pos:column="2">endif<pos:position pos:line="1083" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="1083" pos:column="8">/* !defined(SQLITE_OMIT_TRIGGER) */</comment>
<cpp:endif pos:line="1084" pos:column="1">#<cpp:directive pos:line="1084" pos:column="2">endif<pos:position pos:line="1084" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="1084" pos:column="8">/* !defined(SQLITE_OMIT_FOREIGN_KEY) */</comment>

<cpp:ifndef pos:line="1086" pos:column="1">#<cpp:directive pos:line="1086" pos:column="2">ifndef<pos:position pos:line="1086" pos:column="8"/></cpp:directive> <name pos:line="1086" pos:column="9">NDEBUG<pos:position pos:line="1086" pos:column="15"/></name></cpp:ifndef>
  <case pos:line="1087" pos:column="3">case <expr><name pos:line="1087" pos:column="8">PragTyp_PARSER_TRACE<pos:position pos:line="1087" pos:column="28"/></name></expr>:<pos:position pos:line="1087" pos:column="29"/></case> <block pos:line="1087" pos:column="30">{
    <if pos:line="1088" pos:column="5">if<condition pos:line="1088" pos:column="7">( <expr><name pos:line="1088" pos:column="9">zRight<pos:position pos:line="1088" pos:column="15"/></name></expr> )<pos:position pos:line="1088" pos:column="17"/></condition><then><block pos:line="1088" pos:column="17">{
      <if pos:line="1089" pos:column="7">if<condition pos:line="1089" pos:column="9">( <expr><call><name pos:line="1089" pos:column="11">sqlite3GetBoolean<pos:position pos:line="1089" pos:column="28"/></name><argument_list pos:line="1089" pos:column="28">(<argument><expr><name pos:line="1089" pos:column="29">zRight<pos:position pos:line="1089" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1089" pos:column="37">0<pos:position pos:line="1089" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="1089" pos:column="39"/></argument_list></call></expr> )<pos:position pos:line="1089" pos:column="41"/></condition><then><block pos:line="1089" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="1090" pos:column="9">sqlite3ParserTrace<pos:position pos:line="1090" pos:column="27"/></name><argument_list pos:line="1090" pos:column="27">(<argument><expr><name pos:line="1090" pos:column="28">stdout<pos:position pos:line="1090" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1090" pos:column="36">"parser: "<pos:position pos:line="1090" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="1090" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="1090" pos:column="48"/></expr_stmt>
      }<pos:position pos:line="1091" pos:column="8"/></block></then><else pos:line="1091" pos:column="8">else<block pos:line="1091" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="1092" pos:column="9">sqlite3ParserTrace<pos:position pos:line="1092" pos:column="27"/></name><argument_list pos:line="1092" pos:column="27">(<argument><expr><literal type="number" pos:line="1092" pos:column="28">0<pos:position pos:line="1092" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1092" pos:column="31">0<pos:position pos:line="1092" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="1092" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1092" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="1093" pos:column="8"/></block></else></if>
    }<pos:position pos:line="1094" pos:column="6"/></block></then></if>
  }<pos:position pos:line="1095" pos:column="4"/></block>
  <break pos:line="1096" pos:column="3">break;<pos:position pos:line="1096" pos:column="9"/></break>
<cpp:endif pos:line="1097" pos:column="1">#<cpp:directive pos:line="1097" pos:column="2">endif<pos:position pos:line="1097" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="1099" pos:column="3">/* Reinstall the LIKE and GLOB functions.  The variant of LIKE
  ** used will be case sensitive or not depending on the RHS.
  */</comment>
  <case pos:line="1102" pos:column="3">case <expr><name pos:line="1102" pos:column="8">PragTyp_CASE_SENSITIVE_LIKE<pos:position pos:line="1102" pos:column="35"/></name></expr>:<pos:position pos:line="1102" pos:column="36"/></case> <block pos:line="1102" pos:column="37">{
    <if pos:line="1103" pos:column="5">if<condition pos:line="1103" pos:column="7">( <expr><name pos:line="1103" pos:column="9">zRight<pos:position pos:line="1103" pos:column="15"/></name></expr> )<pos:position pos:line="1103" pos:column="17"/></condition><then><block pos:line="1103" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="1104" pos:column="7">sqlite3RegisterLikeFunctions<pos:position pos:line="1104" pos:column="35"/></name><argument_list pos:line="1104" pos:column="35">(<argument><expr><name pos:line="1104" pos:column="36">db<pos:position pos:line="1104" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="1104" pos:column="40">sqlite3GetBoolean<pos:position pos:line="1104" pos:column="57"/></name><argument_list pos:line="1104" pos:column="57">(<argument><expr><name pos:line="1104" pos:column="58">zRight<pos:position pos:line="1104" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1104" pos:column="66">0<pos:position pos:line="1104" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1104" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="1104" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="1104" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="1105" pos:column="6"/></block></then></if>
  }<pos:position pos:line="1106" pos:column="4"/></block>
  <break pos:line="1107" pos:column="3">break;<pos:position pos:line="1107" pos:column="9"/></break>

<cpp:ifndef pos:line="1109" pos:column="1">#<cpp:directive pos:line="1109" pos:column="2">ifndef<pos:position pos:line="1109" pos:column="8"/></cpp:directive> <name pos:line="1109" pos:column="9">SQLITE_INTEGRITY_CHECK_ERROR_MAX<pos:position pos:line="1109" pos:column="41"/></name></cpp:ifndef>
<cpp:define pos:line="1110" pos:column="1"># <cpp:directive pos:line="1110" pos:column="3">define<pos:position pos:line="1110" pos:column="9"/></cpp:directive> <cpp:macro><name pos:line="1110" pos:column="10">SQLITE_INTEGRITY_CHECK_ERROR_MAX<pos:position pos:line="1110" pos:column="42"/></name></cpp:macro> <cpp:value pos:line="1110" pos:column="43">100<pos:position pos:line="1110" pos:column="46"/></cpp:value></cpp:define>
<cpp:endif pos:line="1111" pos:column="1">#<cpp:directive pos:line="1111" pos:column="2">endif<pos:position pos:line="1111" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifndef pos:line="1113" pos:column="1">#<cpp:directive pos:line="1113" pos:column="2">ifndef<pos:position pos:line="1113" pos:column="8"/></cpp:directive> <name pos:line="1113" pos:column="9">SQLITE_OMIT_INTEGRITY_CHECK<pos:position pos:line="1113" pos:column="36"/></name></cpp:ifndef>
  <comment type="block" pos:line="1114" pos:column="3">/*    PRAGMA integrity_check
  **    PRAGMA integrity_check(N)
  **    PRAGMA quick_check
  **    PRAGMA quick_check(N)
  **
  ** Verify the integrity of the database.
  **
  ** The "quick_check" is reduced version of 
  ** integrity_check designed to detect most database corruption
  ** without the overhead of cross-checking indexes.  Quick_check
  ** is linear time wherease integrity_check is O(NlogN).
  */</comment>
  <case pos:line="1126" pos:column="3">case <expr><name pos:line="1126" pos:column="8">PragTyp_INTEGRITY_CHECK<pos:position pos:line="1126" pos:column="31"/></name></expr>:<pos:position pos:line="1126" pos:column="32"/></case> <block pos:line="1126" pos:column="33">{
    <decl_stmt><decl><type><name pos:line="1127" pos:column="5">int<pos:position pos:line="1127" pos:column="8"/></name></type> <name pos:line="1127" pos:column="9">i<pos:position pos:line="1127" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="1127" pos:column="12">j<pos:position pos:line="1127" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="1127" pos:column="15">addr<pos:position pos:line="1127" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="1127" pos:column="21">mxErr<pos:position pos:line="1127" pos:column="26"/></name></decl>;<pos:position pos:line="1127" pos:column="27"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="1129" pos:column="5">int<pos:position pos:line="1129" pos:column="8"/></name></type> <name pos:line="1129" pos:column="9">isQuick<pos:position pos:line="1129" pos:column="16"/></name> <init pos:line="1129" pos:column="17">= <expr><operator pos:line="1129" pos:column="19">(<pos:position pos:line="1129" pos:column="20"/></operator><call><name pos:line="1129" pos:column="20">sqlite3Tolower<pos:position pos:line="1129" pos:column="34"/></name><argument_list pos:line="1129" pos:column="34">(<argument><expr><name><name pos:line="1129" pos:column="35">zLeft<pos:position pos:line="1129" pos:column="40"/></name><index pos:line="1129" pos:column="40">[<expr><literal type="number" pos:line="1129" pos:column="41">0<pos:position pos:line="1129" pos:column="42"/></literal></expr>]<pos:position pos:line="1129" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="1129" pos:column="44"/></argument_list></call><operator pos:line="1129" pos:column="44">==<pos:position pos:line="1129" pos:column="46"/></operator><literal type="char" pos:line="1129" pos:column="46">'q'<pos:position pos:line="1129" pos:column="49"/></literal><operator pos:line="1129" pos:column="49">)<pos:position pos:line="1129" pos:column="50"/></operator></expr></init></decl>;<pos:position pos:line="1129" pos:column="51"/></decl_stmt>

    <comment type="block" pos:line="1131" pos:column="5">/* If the PRAGMA command was of the form "PRAGMA &lt;db&gt;.integrity_check",
    ** then iDb is set to the index of the database identified by &lt;db&gt;.
    ** In this case, the integrity of database iDb only is verified by
    ** the VDBE created below.
    **
    ** Otherwise, if the command was simply "PRAGMA integrity_check" (or
    ** "PRAGMA quick_check"), then iDb is set to 0. In this case, set iDb
    ** to -1 here, to indicate that the VDBE should verify the integrity
    ** of all attached databases.  */</comment>
    <expr_stmt><expr><call><name pos:line="1140" pos:column="5">assert<pos:position pos:line="1140" pos:column="11"/></name><argument_list pos:line="1140" pos:column="11">( <argument><expr><name pos:line="1140" pos:column="13">iDb<pos:position pos:line="1140" pos:column="16"/></name><operator pos:line="1140" pos:column="16">&gt;=<pos:position pos:line="1140" pos:column="21"/></operator><literal type="number" pos:line="1140" pos:column="18">0<pos:position pos:line="1140" pos:column="19"/></literal></expr></argument> )<pos:position pos:line="1140" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="1140" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="1141" pos:column="5">assert<pos:position pos:line="1141" pos:column="11"/></name><argument_list pos:line="1141" pos:column="11">( <argument><expr><name pos:line="1141" pos:column="13">iDb<pos:position pos:line="1141" pos:column="16"/></name><operator pos:line="1141" pos:column="16">==<pos:position pos:line="1141" pos:column="18"/></operator><literal type="number" pos:line="1141" pos:column="18">0<pos:position pos:line="1141" pos:column="19"/></literal> <operator pos:line="1141" pos:column="20">||<pos:position pos:line="1141" pos:column="22"/></operator> <name><name pos:line="1141" pos:column="23">pId2<pos:position pos:line="1141" pos:column="27"/></name><operator pos:line="1141" pos:column="27">-&gt;<pos:position pos:line="1141" pos:column="32"/></operator><name pos:line="1141" pos:column="29">z<pos:position pos:line="1141" pos:column="30"/></name></name></expr></argument> )<pos:position pos:line="1141" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="1141" pos:column="33"/></expr_stmt>
    <if pos:line="1142" pos:column="5">if<condition pos:line="1142" pos:column="7">( <expr><name><name pos:line="1142" pos:column="9">pId2<pos:position pos:line="1142" pos:column="13"/></name><operator pos:line="1142" pos:column="13">-&gt;<pos:position pos:line="1142" pos:column="18"/></operator><name pos:line="1142" pos:column="15">z<pos:position pos:line="1142" pos:column="16"/></name></name><operator pos:line="1142" pos:column="16">==<pos:position pos:line="1142" pos:column="18"/></operator><literal type="number" pos:line="1142" pos:column="18">0<pos:position pos:line="1142" pos:column="19"/></literal></expr> )<pos:position pos:line="1142" pos:column="21"/></condition><then pos:line="1142" pos:column="21"> <block type="pseudo"><expr_stmt><expr><name pos:line="1142" pos:column="22">iDb<pos:position pos:line="1142" pos:column="25"/></name> <operator pos:line="1142" pos:column="26">=<pos:position pos:line="1142" pos:column="27"/></operator> <operator pos:line="1142" pos:column="28">-<pos:position pos:line="1142" pos:column="29"/></operator><literal type="number" pos:line="1142" pos:column="29">1<pos:position pos:line="1142" pos:column="30"/></literal></expr>;<pos:position pos:line="1142" pos:column="31"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="1144" pos:column="5">/* Initialize the VDBE program */</comment>
    <expr_stmt><expr><name><name pos:line="1145" pos:column="5">pParse<pos:position pos:line="1145" pos:column="11"/></name><operator pos:line="1145" pos:column="11">-&gt;<pos:position pos:line="1145" pos:column="16"/></operator><name pos:line="1145" pos:column="13">nMem<pos:position pos:line="1145" pos:column="17"/></name></name> <operator pos:line="1145" pos:column="18">=<pos:position pos:line="1145" pos:column="19"/></operator> <literal type="number" pos:line="1145" pos:column="20">6<pos:position pos:line="1145" pos:column="21"/></literal></expr>;<pos:position pos:line="1145" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="1147" pos:column="5">/* Set the maximum error count */</comment>
    <expr_stmt><expr><name pos:line="1148" pos:column="5">mxErr<pos:position pos:line="1148" pos:column="10"/></name> <operator pos:line="1148" pos:column="11">=<pos:position pos:line="1148" pos:column="12"/></operator> <name pos:line="1148" pos:column="13">SQLITE_INTEGRITY_CHECK_ERROR_MAX<pos:position pos:line="1148" pos:column="45"/></name></expr>;<pos:position pos:line="1148" pos:column="46"/></expr_stmt>
    <if pos:line="1149" pos:column="5">if<condition pos:line="1149" pos:column="7">( <expr><name pos:line="1149" pos:column="9">zRight<pos:position pos:line="1149" pos:column="15"/></name></expr> )<pos:position pos:line="1149" pos:column="17"/></condition><then><block pos:line="1149" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="1150" pos:column="7">sqlite3GetInt32<pos:position pos:line="1150" pos:column="22"/></name><argument_list pos:line="1150" pos:column="22">(<argument><expr><name pos:line="1150" pos:column="23">zRight<pos:position pos:line="1150" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="1150" pos:column="31">&amp;<pos:position pos:line="1150" pos:column="36"/></operator><name pos:line="1150" pos:column="32">mxErr<pos:position pos:line="1150" pos:column="37"/></name></expr></argument>)<pos:position pos:line="1150" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="1150" pos:column="39"/></expr_stmt>
      <if pos:line="1151" pos:column="7">if<condition pos:line="1151" pos:column="9">( <expr><name pos:line="1151" pos:column="11">mxErr<pos:position pos:line="1151" pos:column="16"/></name><operator pos:line="1151" pos:column="16">&lt;=<pos:position pos:line="1151" pos:column="21"/></operator><literal type="number" pos:line="1151" pos:column="18">0<pos:position pos:line="1151" pos:column="19"/></literal></expr> )<pos:position pos:line="1151" pos:column="21"/></condition><then><block pos:line="1151" pos:column="21">{
        <expr_stmt><expr><name pos:line="1152" pos:column="9">mxErr<pos:position pos:line="1152" pos:column="14"/></name> <operator pos:line="1152" pos:column="15">=<pos:position pos:line="1152" pos:column="16"/></operator> <name pos:line="1152" pos:column="17">SQLITE_INTEGRITY_CHECK_ERROR_MAX<pos:position pos:line="1152" pos:column="49"/></name></expr>;<pos:position pos:line="1152" pos:column="50"/></expr_stmt>
      }<pos:position pos:line="1153" pos:column="8"/></block></then></if>
    }<pos:position pos:line="1154" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="1155" pos:column="5">sqlite3VdbeAddOp2<pos:position pos:line="1155" pos:column="22"/></name><argument_list pos:line="1155" pos:column="22">(<argument><expr><name pos:line="1155" pos:column="23">v<pos:position pos:line="1155" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="1155" pos:column="26">OP_Integer<pos:position pos:line="1155" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1155" pos:column="38">mxErr<pos:position pos:line="1155" pos:column="43"/></name><operator pos:line="1155" pos:column="43">-<pos:position pos:line="1155" pos:column="44"/></operator><literal type="number" pos:line="1155" pos:column="44">1<pos:position pos:line="1155" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1155" pos:column="47">1<pos:position pos:line="1155" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="1155" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1155" pos:column="50"/></expr_stmt> <comment type="block" pos:line="1155" pos:column="51">/* reg[1] holds errors left */</comment>

    <comment type="block" pos:line="1157" pos:column="5">/* Do an integrity check on each database file */</comment>
    <for pos:line="1158" pos:column="5">for<control pos:line="1158" pos:column="8">(<init><expr><name pos:line="1158" pos:column="9">i<pos:position pos:line="1158" pos:column="10"/></name><operator pos:line="1158" pos:column="10">=<pos:position pos:line="1158" pos:column="11"/></operator><literal type="number" pos:line="1158" pos:column="11">0<pos:position pos:line="1158" pos:column="12"/></literal></expr>;<pos:position pos:line="1158" pos:column="13"/></init> <condition><expr><name pos:line="1158" pos:column="14">i<pos:position pos:line="1158" pos:column="15"/></name><operator pos:line="1158" pos:column="15">&lt;<pos:position pos:line="1158" pos:column="19"/></operator><name><name pos:line="1158" pos:column="16">db<pos:position pos:line="1158" pos:column="18"/></name><operator pos:line="1158" pos:column="18">-&gt;<pos:position pos:line="1158" pos:column="23"/></operator><name pos:line="1158" pos:column="20">nDb<pos:position pos:line="1158" pos:column="23"/></name></name></expr>;<pos:position pos:line="1158" pos:column="24"/></condition> <incr><expr><name pos:line="1158" pos:column="25">i<pos:position pos:line="1158" pos:column="26"/></name><operator pos:line="1158" pos:column="26">++<pos:position pos:line="1158" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="1158" pos:column="29"/></control><block pos:line="1158" pos:column="29">{
      <decl_stmt><decl><type><name pos:line="1159" pos:column="7">HashElem<pos:position pos:line="1159" pos:column="15"/></name> <modifier pos:line="1159" pos:column="16">*<pos:position pos:line="1159" pos:column="17"/></modifier></type><name pos:line="1159" pos:column="17">x<pos:position pos:line="1159" pos:column="18"/></name></decl>;<pos:position pos:line="1159" pos:column="19"/></decl_stmt>     <comment type="block" pos:line="1159" pos:column="24">/* For looping over tables in the schema */</comment>
      <decl_stmt><decl><type><name pos:line="1160" pos:column="7">Hash<pos:position pos:line="1160" pos:column="11"/></name> <modifier pos:line="1160" pos:column="12">*<pos:position pos:line="1160" pos:column="13"/></modifier></type><name pos:line="1160" pos:column="13">pTbls<pos:position pos:line="1160" pos:column="18"/></name></decl>;<pos:position pos:line="1160" pos:column="19"/></decl_stmt>     <comment type="block" pos:line="1160" pos:column="24">/* Set of all tables in the schema */</comment>
      <decl_stmt><decl><type><name pos:line="1161" pos:column="7">int<pos:position pos:line="1161" pos:column="10"/></name> <modifier pos:line="1161" pos:column="11">*<pos:position pos:line="1161" pos:column="12"/></modifier></type><name pos:line="1161" pos:column="12">aRoot<pos:position pos:line="1161" pos:column="17"/></name></decl>;<pos:position pos:line="1161" pos:column="18"/></decl_stmt>      <comment type="block" pos:line="1161" pos:column="24">/* Array of root page numbers of all btrees */</comment>
      <decl_stmt><decl><type><name pos:line="1162" pos:column="7">int<pos:position pos:line="1162" pos:column="10"/></name></type> <name pos:line="1162" pos:column="11">cnt<pos:position pos:line="1162" pos:column="14"/></name> <init pos:line="1162" pos:column="15">= <expr><literal type="number" pos:line="1162" pos:column="17">0<pos:position pos:line="1162" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="1162" pos:column="19"/></decl_stmt>     <comment type="block" pos:line="1162" pos:column="24">/* Number of entries in aRoot[] */</comment>
      <decl_stmt><decl><type><name pos:line="1163" pos:column="7">int<pos:position pos:line="1163" pos:column="10"/></name></type> <name pos:line="1163" pos:column="11">mxIdx<pos:position pos:line="1163" pos:column="16"/></name> <init pos:line="1163" pos:column="17">= <expr><literal type="number" pos:line="1163" pos:column="19">0<pos:position pos:line="1163" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="1163" pos:column="21"/></decl_stmt>   <comment type="block" pos:line="1163" pos:column="24">/* Maximum number of indexes for any table */</comment>

      <if pos:line="1165" pos:column="7">if<condition pos:line="1165" pos:column="9">( <expr><name pos:line="1165" pos:column="11">OMIT_TEMPDB<pos:position pos:line="1165" pos:column="22"/></name> <operator pos:line="1165" pos:column="23">&amp;&amp;<pos:position pos:line="1165" pos:column="33"/></operator> <name pos:line="1165" pos:column="26">i<pos:position pos:line="1165" pos:column="27"/></name><operator pos:line="1165" pos:column="27">==<pos:position pos:line="1165" pos:column="29"/></operator><literal type="number" pos:line="1165" pos:column="29">1<pos:position pos:line="1165" pos:column="30"/></literal></expr> )<pos:position pos:line="1165" pos:column="32"/></condition><then pos:line="1165" pos:column="32"> <block type="pseudo"><continue pos:line="1165" pos:column="33">continue;<pos:position pos:line="1165" pos:column="42"/></continue></block></then></if>
      <if pos:line="1166" pos:column="7">if<condition pos:line="1166" pos:column="9">( <expr><name pos:line="1166" pos:column="11">iDb<pos:position pos:line="1166" pos:column="14"/></name><operator pos:line="1166" pos:column="14">&gt;=<pos:position pos:line="1166" pos:column="19"/></operator><literal type="number" pos:line="1166" pos:column="16">0<pos:position pos:line="1166" pos:column="17"/></literal> <operator pos:line="1166" pos:column="18">&amp;&amp;<pos:position pos:line="1166" pos:column="28"/></operator> <name pos:line="1166" pos:column="21">i<pos:position pos:line="1166" pos:column="22"/></name><operator pos:line="1166" pos:column="22">!=<pos:position pos:line="1166" pos:column="24"/></operator><name pos:line="1166" pos:column="24">iDb<pos:position pos:line="1166" pos:column="27"/></name></expr> )<pos:position pos:line="1166" pos:column="29"/></condition><then pos:line="1166" pos:column="29"> <block type="pseudo"><continue pos:line="1166" pos:column="30">continue;<pos:position pos:line="1166" pos:column="39"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="1168" pos:column="7">sqlite3CodeVerifySchema<pos:position pos:line="1168" pos:column="30"/></name><argument_list pos:line="1168" pos:column="30">(<argument><expr><name pos:line="1168" pos:column="31">pParse<pos:position pos:line="1168" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1168" pos:column="39">i<pos:position pos:line="1168" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1168" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1168" pos:column="42"/></expr_stmt>

      <comment type="block" pos:line="1170" pos:column="7">/* Do an integrity check of the B-Tree
      **
      ** Begin by finding the root pages numbers
      ** for all tables and indices in the database.
      */</comment>
      <expr_stmt><expr><call><name pos:line="1175" pos:column="7">assert<pos:position pos:line="1175" pos:column="13"/></name><argument_list pos:line="1175" pos:column="13">( <argument><expr><call><name pos:line="1175" pos:column="15">sqlite3SchemaMutexHeld<pos:position pos:line="1175" pos:column="37"/></name><argument_list pos:line="1175" pos:column="37">(<argument><expr><name pos:line="1175" pos:column="38">db<pos:position pos:line="1175" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="1175" pos:column="42">i<pos:position pos:line="1175" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1175" pos:column="45">0<pos:position pos:line="1175" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="1175" pos:column="47"/></argument_list></call></expr></argument> )<pos:position pos:line="1175" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1175" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name pos:line="1176" pos:column="7">pTbls<pos:position pos:line="1176" pos:column="12"/></name> <operator pos:line="1176" pos:column="13">=<pos:position pos:line="1176" pos:column="14"/></operator> <operator pos:line="1176" pos:column="15">&amp;<pos:position pos:line="1176" pos:column="20"/></operator><name><name pos:line="1176" pos:column="16">db<pos:position pos:line="1176" pos:column="18"/></name><operator pos:line="1176" pos:column="18">-&gt;<pos:position pos:line="1176" pos:column="23"/></operator><name pos:line="1176" pos:column="20">aDb<pos:position pos:line="1176" pos:column="23"/></name><index pos:line="1176" pos:column="23">[<expr><name pos:line="1176" pos:column="24">i<pos:position pos:line="1176" pos:column="25"/></name></expr>]<pos:position pos:line="1176" pos:column="26"/></index></name><operator pos:line="1176" pos:column="26">.<pos:position pos:line="1176" pos:column="27"/></operator><name><name pos:line="1176" pos:column="27">pSchema<pos:position pos:line="1176" pos:column="34"/></name><operator pos:line="1176" pos:column="34">-&gt;<pos:position pos:line="1176" pos:column="39"/></operator><name pos:line="1176" pos:column="36">tblHash<pos:position pos:line="1176" pos:column="43"/></name></name></expr>;<pos:position pos:line="1176" pos:column="44"/></expr_stmt>
      <for pos:line="1177" pos:column="7">for<control pos:line="1177" pos:column="10">(<init><expr><name pos:line="1177" pos:column="11">cnt<pos:position pos:line="1177" pos:column="14"/></name><operator pos:line="1177" pos:column="14">=<pos:position pos:line="1177" pos:column="15"/></operator><literal type="number" pos:line="1177" pos:column="15">0<pos:position pos:line="1177" pos:column="16"/></literal></expr><operator pos:line="1177" pos:column="16">,<pos:position pos:line="1177" pos:column="17"/></operator> <expr><name pos:line="1177" pos:column="18">x<pos:position pos:line="1177" pos:column="19"/></name><operator pos:line="1177" pos:column="19">=<pos:position pos:line="1177" pos:column="20"/></operator><call><name pos:line="1177" pos:column="20">sqliteHashFirst<pos:position pos:line="1177" pos:column="35"/></name><argument_list pos:line="1177" pos:column="35">(<argument><expr><name pos:line="1177" pos:column="36">pTbls<pos:position pos:line="1177" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1177" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="1177" pos:column="43"/></init> <condition><expr><name pos:line="1177" pos:column="44">x<pos:position pos:line="1177" pos:column="45"/></name></expr>;<pos:position pos:line="1177" pos:column="46"/></condition> <incr><expr><name pos:line="1177" pos:column="47">x<pos:position pos:line="1177" pos:column="48"/></name><operator pos:line="1177" pos:column="48">=<pos:position pos:line="1177" pos:column="49"/></operator><call><name pos:line="1177" pos:column="49">sqliteHashNext<pos:position pos:line="1177" pos:column="63"/></name><argument_list pos:line="1177" pos:column="63">(<argument><expr><name pos:line="1177" pos:column="64">x<pos:position pos:line="1177" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1177" pos:column="66"/></argument_list></call></expr></incr>)<pos:position pos:line="1177" pos:column="67"/></control><block pos:line="1177" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="1178" pos:column="9">Table<pos:position pos:line="1178" pos:column="14"/></name> <modifier pos:line="1178" pos:column="15">*<pos:position pos:line="1178" pos:column="16"/></modifier></type><name pos:line="1178" pos:column="16">pTab<pos:position pos:line="1178" pos:column="20"/></name> <init pos:line="1178" pos:column="21">= <expr><call><name pos:line="1178" pos:column="23">sqliteHashData<pos:position pos:line="1178" pos:column="37"/></name><argument_list pos:line="1178" pos:column="37">(<argument><expr><name pos:line="1178" pos:column="38">x<pos:position pos:line="1178" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1178" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1178" pos:column="41"/></decl_stmt>  <comment type="block" pos:line="1178" pos:column="43">/* Current table */</comment>
        <decl_stmt><decl><type><name pos:line="1179" pos:column="9">Index<pos:position pos:line="1179" pos:column="14"/></name> <modifier pos:line="1179" pos:column="15">*<pos:position pos:line="1179" pos:column="16"/></modifier></type><name pos:line="1179" pos:column="16">pIdx<pos:position pos:line="1179" pos:column="20"/></name></decl>;<pos:position pos:line="1179" pos:column="21"/></decl_stmt>                      <comment type="block" pos:line="1179" pos:column="43">/* An index on pTab */</comment>
        <decl_stmt><decl><type><name pos:line="1180" pos:column="9">int<pos:position pos:line="1180" pos:column="12"/></name></type> <name pos:line="1180" pos:column="13">nIdx<pos:position pos:line="1180" pos:column="17"/></name></decl>;<pos:position pos:line="1180" pos:column="18"/></decl_stmt>                         <comment type="block" pos:line="1180" pos:column="43">/* Number of indexes on pTab */</comment>
        <if pos:line="1181" pos:column="9">if<condition pos:line="1181" pos:column="11">( <expr><call><name pos:line="1181" pos:column="13">HasRowid<pos:position pos:line="1181" pos:column="21"/></name><argument_list pos:line="1181" pos:column="21">(<argument><expr><name pos:line="1181" pos:column="22">pTab<pos:position pos:line="1181" pos:column="26"/></name></expr></argument>)<pos:position pos:line="1181" pos:column="27"/></argument_list></call></expr> )<pos:position pos:line="1181" pos:column="29"/></condition><then pos:line="1181" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name pos:line="1181" pos:column="30">cnt<pos:position pos:line="1181" pos:column="33"/></name><operator pos:line="1181" pos:column="33">++<pos:position pos:line="1181" pos:column="35"/></operator></expr>;<pos:position pos:line="1181" pos:column="36"/></expr_stmt></block></then></if>
        <for pos:line="1182" pos:column="9">for<control pos:line="1182" pos:column="12">(<init><expr><name pos:line="1182" pos:column="13">nIdx<pos:position pos:line="1182" pos:column="17"/></name><operator pos:line="1182" pos:column="17">=<pos:position pos:line="1182" pos:column="18"/></operator><literal type="number" pos:line="1182" pos:column="18">0<pos:position pos:line="1182" pos:column="19"/></literal></expr><operator pos:line="1182" pos:column="19">,<pos:position pos:line="1182" pos:column="20"/></operator> <expr><name pos:line="1182" pos:column="21">pIdx<pos:position pos:line="1182" pos:column="25"/></name><operator pos:line="1182" pos:column="25">=<pos:position pos:line="1182" pos:column="26"/></operator><name><name pos:line="1182" pos:column="26">pTab<pos:position pos:line="1182" pos:column="30"/></name><operator pos:line="1182" pos:column="30">-&gt;<pos:position pos:line="1182" pos:column="35"/></operator><name pos:line="1182" pos:column="32">pIndex<pos:position pos:line="1182" pos:column="38"/></name></name></expr>;<pos:position pos:line="1182" pos:column="39"/></init> <condition><expr><name pos:line="1182" pos:column="40">pIdx<pos:position pos:line="1182" pos:column="44"/></name></expr>;<pos:position pos:line="1182" pos:column="45"/></condition> <incr><expr><name pos:line="1182" pos:column="46">pIdx<pos:position pos:line="1182" pos:column="50"/></name><operator pos:line="1182" pos:column="50">=<pos:position pos:line="1182" pos:column="51"/></operator><name><name pos:line="1182" pos:column="51">pIdx<pos:position pos:line="1182" pos:column="55"/></name><operator pos:line="1182" pos:column="55">-&gt;<pos:position pos:line="1182" pos:column="60"/></operator><name pos:line="1182" pos:column="57">pNext<pos:position pos:line="1182" pos:column="62"/></name></name></expr><operator pos:line="1182" pos:column="62">,<pos:position pos:line="1182" pos:column="63"/></operator> <expr><name pos:line="1182" pos:column="64">nIdx<pos:position pos:line="1182" pos:column="68"/></name><operator pos:line="1182" pos:column="68">++<pos:position pos:line="1182" pos:column="70"/></operator></expr></incr>)<pos:position pos:line="1182" pos:column="71"/></control><block pos:line="1182" pos:column="71">{ <expr_stmt><expr><name pos:line="1182" pos:column="73">cnt<pos:position pos:line="1182" pos:column="76"/></name><operator pos:line="1182" pos:column="76">++<pos:position pos:line="1182" pos:column="78"/></operator></expr>;<pos:position pos:line="1182" pos:column="79"/></expr_stmt> }<pos:position pos:line="1182" pos:column="81"/></block></for>
        <if pos:line="1183" pos:column="9">if<condition pos:line="1183" pos:column="11">( <expr><name pos:line="1183" pos:column="13">nIdx<pos:position pos:line="1183" pos:column="17"/></name><operator pos:line="1183" pos:column="17">&gt;<pos:position pos:line="1183" pos:column="21"/></operator><name pos:line="1183" pos:column="18">mxIdx<pos:position pos:line="1183" pos:column="23"/></name></expr> )<pos:position pos:line="1183" pos:column="25"/></condition><then pos:line="1183" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="1183" pos:column="26">mxIdx<pos:position pos:line="1183" pos:column="31"/></name> <operator pos:line="1183" pos:column="32">=<pos:position pos:line="1183" pos:column="33"/></operator> <name pos:line="1183" pos:column="34">nIdx<pos:position pos:line="1183" pos:column="38"/></name></expr>;<pos:position pos:line="1183" pos:column="39"/></expr_stmt></block></then></if>
      }<pos:position pos:line="1184" pos:column="8"/></block></for>
      <expr_stmt><expr><name pos:line="1185" pos:column="7">aRoot<pos:position pos:line="1185" pos:column="12"/></name> <operator pos:line="1185" pos:column="13">=<pos:position pos:line="1185" pos:column="14"/></operator> <call><name pos:line="1185" pos:column="15">sqlite3DbMallocRawNN<pos:position pos:line="1185" pos:column="35"/></name><argument_list pos:line="1185" pos:column="35">(<argument><expr><name pos:line="1185" pos:column="36">db<pos:position pos:line="1185" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="1185" pos:column="40">sizeof<argument_list pos:line="1185" pos:column="46">(<argument><expr><name pos:line="1185" pos:column="47">int<pos:position pos:line="1185" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1185" pos:column="51"/></argument_list></sizeof><operator pos:line="1185" pos:column="51">*<pos:position pos:line="1185" pos:column="52"/></operator><operator pos:line="1185" pos:column="52">(<pos:position pos:line="1185" pos:column="53"/></operator><name pos:line="1185" pos:column="53">cnt<pos:position pos:line="1185" pos:column="56"/></name><operator pos:line="1185" pos:column="56">+<pos:position pos:line="1185" pos:column="57"/></operator><literal type="number" pos:line="1185" pos:column="57">1<pos:position pos:line="1185" pos:column="58"/></literal><operator pos:line="1185" pos:column="58">)<pos:position pos:line="1185" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="1185" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1185" pos:column="61"/></expr_stmt>
      <if pos:line="1186" pos:column="7">if<condition pos:line="1186" pos:column="9">( <expr><name pos:line="1186" pos:column="11">aRoot<pos:position pos:line="1186" pos:column="16"/></name><operator pos:line="1186" pos:column="16">==<pos:position pos:line="1186" pos:column="18"/></operator><literal type="number" pos:line="1186" pos:column="18">0<pos:position pos:line="1186" pos:column="19"/></literal></expr> )<pos:position pos:line="1186" pos:column="21"/></condition><then pos:line="1186" pos:column="21"> <block type="pseudo"><break pos:line="1186" pos:column="22">break;<pos:position pos:line="1186" pos:column="28"/></break></block></then></if>
      <for pos:line="1187" pos:column="7">for<control pos:line="1187" pos:column="10">(<init><expr><name pos:line="1187" pos:column="11">cnt<pos:position pos:line="1187" pos:column="14"/></name><operator pos:line="1187" pos:column="14">=<pos:position pos:line="1187" pos:column="15"/></operator><literal type="number" pos:line="1187" pos:column="15">0<pos:position pos:line="1187" pos:column="16"/></literal></expr><operator pos:line="1187" pos:column="16">,<pos:position pos:line="1187" pos:column="17"/></operator> <expr><name pos:line="1187" pos:column="18">x<pos:position pos:line="1187" pos:column="19"/></name><operator pos:line="1187" pos:column="19">=<pos:position pos:line="1187" pos:column="20"/></operator><call><name pos:line="1187" pos:column="20">sqliteHashFirst<pos:position pos:line="1187" pos:column="35"/></name><argument_list pos:line="1187" pos:column="35">(<argument><expr><name pos:line="1187" pos:column="36">pTbls<pos:position pos:line="1187" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1187" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="1187" pos:column="43"/></init> <condition><expr><name pos:line="1187" pos:column="44">x<pos:position pos:line="1187" pos:column="45"/></name></expr>;<pos:position pos:line="1187" pos:column="46"/></condition> <incr><expr><name pos:line="1187" pos:column="47">x<pos:position pos:line="1187" pos:column="48"/></name><operator pos:line="1187" pos:column="48">=<pos:position pos:line="1187" pos:column="49"/></operator><call><name pos:line="1187" pos:column="49">sqliteHashNext<pos:position pos:line="1187" pos:column="63"/></name><argument_list pos:line="1187" pos:column="63">(<argument><expr><name pos:line="1187" pos:column="64">x<pos:position pos:line="1187" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1187" pos:column="66"/></argument_list></call></expr></incr>)<pos:position pos:line="1187" pos:column="67"/></control><block pos:line="1187" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="1188" pos:column="9">Table<pos:position pos:line="1188" pos:column="14"/></name> <modifier pos:line="1188" pos:column="15">*<pos:position pos:line="1188" pos:column="16"/></modifier></type><name pos:line="1188" pos:column="16">pTab<pos:position pos:line="1188" pos:column="20"/></name> <init pos:line="1188" pos:column="21">= <expr><call><name pos:line="1188" pos:column="23">sqliteHashData<pos:position pos:line="1188" pos:column="37"/></name><argument_list pos:line="1188" pos:column="37">(<argument><expr><name pos:line="1188" pos:column="38">x<pos:position pos:line="1188" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1188" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1188" pos:column="41"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1189" pos:column="9">Index<pos:position pos:line="1189" pos:column="14"/></name> <modifier pos:line="1189" pos:column="15">*<pos:position pos:line="1189" pos:column="16"/></modifier></type><name pos:line="1189" pos:column="16">pIdx<pos:position pos:line="1189" pos:column="20"/></name></decl>;<pos:position pos:line="1189" pos:column="21"/></decl_stmt>
        <if pos:line="1190" pos:column="9">if<condition pos:line="1190" pos:column="11">( <expr><call><name pos:line="1190" pos:column="13">HasRowid<pos:position pos:line="1190" pos:column="21"/></name><argument_list pos:line="1190" pos:column="21">(<argument><expr><name pos:line="1190" pos:column="22">pTab<pos:position pos:line="1190" pos:column="26"/></name></expr></argument>)<pos:position pos:line="1190" pos:column="27"/></argument_list></call></expr> )<pos:position pos:line="1190" pos:column="29"/></condition><then pos:line="1190" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="1190" pos:column="30">aRoot<pos:position pos:line="1190" pos:column="35"/></name><index pos:line="1190" pos:column="35">[<expr><operator pos:line="1190" pos:column="36">++<pos:position pos:line="1190" pos:column="38"/></operator><name pos:line="1190" pos:column="38">cnt<pos:position pos:line="1190" pos:column="41"/></name></expr>]<pos:position pos:line="1190" pos:column="42"/></index></name> <operator pos:line="1190" pos:column="43">=<pos:position pos:line="1190" pos:column="44"/></operator> <name><name pos:line="1190" pos:column="45">pTab<pos:position pos:line="1190" pos:column="49"/></name><operator pos:line="1190" pos:column="49">-&gt;<pos:position pos:line="1190" pos:column="54"/></operator><name pos:line="1190" pos:column="51">tnum<pos:position pos:line="1190" pos:column="55"/></name></name></expr>;<pos:position pos:line="1190" pos:column="56"/></expr_stmt></block></then></if>
        <for pos:line="1191" pos:column="9">for<control pos:line="1191" pos:column="12">(<init><expr><name pos:line="1191" pos:column="13">pIdx<pos:position pos:line="1191" pos:column="17"/></name><operator pos:line="1191" pos:column="17">=<pos:position pos:line="1191" pos:column="18"/></operator><name><name pos:line="1191" pos:column="18">pTab<pos:position pos:line="1191" pos:column="22"/></name><operator pos:line="1191" pos:column="22">-&gt;<pos:position pos:line="1191" pos:column="27"/></operator><name pos:line="1191" pos:column="24">pIndex<pos:position pos:line="1191" pos:column="30"/></name></name></expr>;<pos:position pos:line="1191" pos:column="31"/></init> <condition><expr><name pos:line="1191" pos:column="32">pIdx<pos:position pos:line="1191" pos:column="36"/></name></expr>;<pos:position pos:line="1191" pos:column="37"/></condition> <incr><expr><name pos:line="1191" pos:column="38">pIdx<pos:position pos:line="1191" pos:column="42"/></name><operator pos:line="1191" pos:column="42">=<pos:position pos:line="1191" pos:column="43"/></operator><name><name pos:line="1191" pos:column="43">pIdx<pos:position pos:line="1191" pos:column="47"/></name><operator pos:line="1191" pos:column="47">-&gt;<pos:position pos:line="1191" pos:column="52"/></operator><name pos:line="1191" pos:column="49">pNext<pos:position pos:line="1191" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="1191" pos:column="55"/></control><block pos:line="1191" pos:column="55">{
          <expr_stmt><expr><name><name pos:line="1192" pos:column="11">aRoot<pos:position pos:line="1192" pos:column="16"/></name><index pos:line="1192" pos:column="16">[<expr><operator pos:line="1192" pos:column="17">++<pos:position pos:line="1192" pos:column="19"/></operator><name pos:line="1192" pos:column="19">cnt<pos:position pos:line="1192" pos:column="22"/></name></expr>]<pos:position pos:line="1192" pos:column="23"/></index></name> <operator pos:line="1192" pos:column="24">=<pos:position pos:line="1192" pos:column="25"/></operator> <name><name pos:line="1192" pos:column="26">pIdx<pos:position pos:line="1192" pos:column="30"/></name><operator pos:line="1192" pos:column="30">-&gt;<pos:position pos:line="1192" pos:column="35"/></operator><name pos:line="1192" pos:column="32">tnum<pos:position pos:line="1192" pos:column="36"/></name></name></expr>;<pos:position pos:line="1192" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="1193" pos:column="10"/></block></for>
      }<pos:position pos:line="1194" pos:column="8"/></block></for>
      <expr_stmt><expr><name><name pos:line="1195" pos:column="7">aRoot<pos:position pos:line="1195" pos:column="12"/></name><index pos:line="1195" pos:column="12">[<expr><literal type="number" pos:line="1195" pos:column="13">0<pos:position pos:line="1195" pos:column="14"/></literal></expr>]<pos:position pos:line="1195" pos:column="15"/></index></name> <operator pos:line="1195" pos:column="16">=<pos:position pos:line="1195" pos:column="17"/></operator> <name pos:line="1195" pos:column="18">cnt<pos:position pos:line="1195" pos:column="21"/></name></expr>;<pos:position pos:line="1195" pos:column="22"/></expr_stmt>

      <comment type="block" pos:line="1197" pos:column="7">/* Make sure sufficient number of registers have been allocated */</comment>
      <expr_stmt><expr><name><name pos:line="1198" pos:column="7">pParse<pos:position pos:line="1198" pos:column="13"/></name><operator pos:line="1198" pos:column="13">-&gt;<pos:position pos:line="1198" pos:column="18"/></operator><name pos:line="1198" pos:column="15">nMem<pos:position pos:line="1198" pos:column="19"/></name></name> <operator pos:line="1198" pos:column="20">=<pos:position pos:line="1198" pos:column="21"/></operator> <call><name pos:line="1198" pos:column="22">MAX<pos:position pos:line="1198" pos:column="25"/></name><argument_list pos:line="1198" pos:column="25">( <argument><expr><name><name pos:line="1198" pos:column="27">pParse<pos:position pos:line="1198" pos:column="33"/></name><operator pos:line="1198" pos:column="33">-&gt;<pos:position pos:line="1198" pos:column="38"/></operator><name pos:line="1198" pos:column="35">nMem<pos:position pos:line="1198" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="1198" pos:column="41">8<pos:position pos:line="1198" pos:column="42"/></literal><operator pos:line="1198" pos:column="42">+<pos:position pos:line="1198" pos:column="43"/></operator><name pos:line="1198" pos:column="43">mxIdx<pos:position pos:line="1198" pos:column="48"/></name></expr></argument> )<pos:position pos:line="1198" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1198" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1199" pos:column="7">sqlite3ClearTempRegCache<pos:position pos:line="1199" pos:column="31"/></name><argument_list pos:line="1199" pos:column="31">(<argument><expr><name pos:line="1199" pos:column="32">pParse<pos:position pos:line="1199" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1199" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1199" pos:column="40"/></expr_stmt>

      <comment type="block" pos:line="1201" pos:column="7">/* Do the b-tree integrity checks */</comment>
      <expr_stmt><expr><call><name pos:line="1202" pos:column="7">sqlite3VdbeAddOp4<pos:position pos:line="1202" pos:column="24"/></name><argument_list pos:line="1202" pos:column="24">(<argument><expr><name pos:line="1202" pos:column="25">v<pos:position pos:line="1202" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1202" pos:column="28">OP_IntegrityCk<pos:position pos:line="1202" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1202" pos:column="44">2<pos:position pos:line="1202" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="1202" pos:column="47">cnt<pos:position pos:line="1202" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1202" pos:column="52">1<pos:position pos:line="1202" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="1202" pos:column="55">(<pos:position pos:line="1202" pos:column="56"/></operator><name pos:line="1202" pos:column="56">char<pos:position pos:line="1202" pos:column="60"/></name><operator pos:line="1202" pos:column="60">*<pos:position pos:line="1202" pos:column="61"/></operator><operator pos:line="1202" pos:column="61">)<pos:position pos:line="1202" pos:column="62"/></operator><name pos:line="1202" pos:column="62">aRoot<pos:position pos:line="1202" pos:column="67"/></name></expr></argument>,<argument><expr><name pos:line="1202" pos:column="68">P4_INTARRAY<pos:position pos:line="1202" pos:column="79"/></name></expr></argument>)<pos:position pos:line="1202" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="1202" pos:column="81"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1203" pos:column="7">sqlite3VdbeChangeP5<pos:position pos:line="1203" pos:column="26"/></name><argument_list pos:line="1203" pos:column="26">(<argument><expr><name pos:line="1203" pos:column="27">v<pos:position pos:line="1203" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="1203" pos:column="30">(<pos:position pos:line="1203" pos:column="31"/></operator><name pos:line="1203" pos:column="31">u8<pos:position pos:line="1203" pos:column="33"/></name><operator pos:line="1203" pos:column="33">)<pos:position pos:line="1203" pos:column="34"/></operator><name pos:line="1203" pos:column="34">i<pos:position pos:line="1203" pos:column="35"/></name></expr></argument>)<pos:position pos:line="1203" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1203" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name pos:line="1204" pos:column="7">addr<pos:position pos:line="1204" pos:column="11"/></name> <operator pos:line="1204" pos:column="12">=<pos:position pos:line="1204" pos:column="13"/></operator> <call><name pos:line="1204" pos:column="14">sqlite3VdbeAddOp1<pos:position pos:line="1204" pos:column="31"/></name><argument_list pos:line="1204" pos:column="31">(<argument><expr><name pos:line="1204" pos:column="32">v<pos:position pos:line="1204" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1204" pos:column="35">OP_IsNull<pos:position pos:line="1204" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1204" pos:column="46">2<pos:position pos:line="1204" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="1204" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1204" pos:column="49"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1204" pos:column="50">VdbeCoverage<pos:position pos:line="1204" pos:column="62"/></name><argument_list pos:line="1204" pos:column="62">(<argument><expr><name pos:line="1204" pos:column="63">v<pos:position pos:line="1204" pos:column="64"/></name></expr></argument>)<pos:position pos:line="1204" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="1204" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1205" pos:column="7">sqlite3VdbeAddOp4<pos:position pos:line="1205" pos:column="24"/></name><argument_list pos:line="1205" pos:column="24">(<argument><expr><name pos:line="1205" pos:column="25">v<pos:position pos:line="1205" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1205" pos:column="28">OP_String8<pos:position pos:line="1205" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1205" pos:column="40">0<pos:position pos:line="1205" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1205" pos:column="43">3<pos:position pos:line="1205" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1205" pos:column="46">0<pos:position pos:line="1205" pos:column="47"/></literal></expr></argument>,
         <argument><expr><call><name pos:line="1206" pos:column="10">sqlite3MPrintf<pos:position pos:line="1206" pos:column="24"/></name><argument_list pos:line="1206" pos:column="24">(<argument><expr><name pos:line="1206" pos:column="25">db<pos:position pos:line="1206" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1206" pos:column="29">"*** in database %s ***\n"<pos:position pos:line="1206" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="1206" pos:column="57">db<pos:position pos:line="1206" pos:column="59"/></name><operator pos:line="1206" pos:column="59">-&gt;<pos:position pos:line="1206" pos:column="64"/></operator><name pos:line="1206" pos:column="61">aDb<pos:position pos:line="1206" pos:column="64"/></name><index pos:line="1206" pos:column="64">[<expr><name pos:line="1206" pos:column="65">i<pos:position pos:line="1206" pos:column="66"/></name></expr>]<pos:position pos:line="1206" pos:column="67"/></index></name><operator pos:line="1206" pos:column="67">.<pos:position pos:line="1206" pos:column="68"/></operator><name pos:line="1206" pos:column="68">zDbSName<pos:position pos:line="1206" pos:column="76"/></name></expr></argument>)<pos:position pos:line="1206" pos:column="77"/></argument_list></call></expr></argument>,
         <argument><expr><name pos:line="1207" pos:column="10">P4_DYNAMIC<pos:position pos:line="1207" pos:column="20"/></name></expr></argument>)<pos:position pos:line="1207" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="1207" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1208" pos:column="7">sqlite3VdbeAddOp3<pos:position pos:line="1208" pos:column="24"/></name><argument_list pos:line="1208" pos:column="24">(<argument><expr><name pos:line="1208" pos:column="25">v<pos:position pos:line="1208" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1208" pos:column="28">OP_Concat<pos:position pos:line="1208" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1208" pos:column="39">2<pos:position pos:line="1208" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1208" pos:column="42">3<pos:position pos:line="1208" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1208" pos:column="45">3<pos:position pos:line="1208" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="1208" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="1208" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1209" pos:column="7">integrityCheckResultRow<pos:position pos:line="1209" pos:column="30"/></name><argument_list pos:line="1209" pos:column="30">(<argument><expr><name pos:line="1209" pos:column="31">v<pos:position pos:line="1209" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1209" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1209" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1210" pos:column="7">sqlite3VdbeJumpHere<pos:position pos:line="1210" pos:column="26"/></name><argument_list pos:line="1210" pos:column="26">(<argument><expr><name pos:line="1210" pos:column="27">v<pos:position pos:line="1210" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1210" pos:column="30">addr<pos:position pos:line="1210" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1210" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1210" pos:column="36"/></expr_stmt>

      <comment type="block" pos:line="1212" pos:column="7">/* Make sure all the indices are constructed correctly.
      */</comment>
      <for pos:line="1214" pos:column="7">for<control pos:line="1214" pos:column="10">(<init><expr><name pos:line="1214" pos:column="11">x<pos:position pos:line="1214" pos:column="12"/></name><operator pos:line="1214" pos:column="12">=<pos:position pos:line="1214" pos:column="13"/></operator><call><name pos:line="1214" pos:column="13">sqliteHashFirst<pos:position pos:line="1214" pos:column="28"/></name><argument_list pos:line="1214" pos:column="28">(<argument><expr><name pos:line="1214" pos:column="29">pTbls<pos:position pos:line="1214" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1214" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1214" pos:column="36"/></init> <condition><expr><name pos:line="1214" pos:column="37">x<pos:position pos:line="1214" pos:column="38"/></name></expr>;<pos:position pos:line="1214" pos:column="39"/></condition> <incr><expr><name pos:line="1214" pos:column="40">x<pos:position pos:line="1214" pos:column="41"/></name><operator pos:line="1214" pos:column="41">=<pos:position pos:line="1214" pos:column="42"/></operator><call><name pos:line="1214" pos:column="42">sqliteHashNext<pos:position pos:line="1214" pos:column="56"/></name><argument_list pos:line="1214" pos:column="56">(<argument><expr><name pos:line="1214" pos:column="57">x<pos:position pos:line="1214" pos:column="58"/></name></expr></argument>)<pos:position pos:line="1214" pos:column="59"/></argument_list></call></expr></incr>)<pos:position pos:line="1214" pos:column="60"/></control><block pos:line="1214" pos:column="60">{
        <decl_stmt><decl><type><name pos:line="1215" pos:column="9">Table<pos:position pos:line="1215" pos:column="14"/></name> <modifier pos:line="1215" pos:column="15">*<pos:position pos:line="1215" pos:column="16"/></modifier></type><name pos:line="1215" pos:column="16">pTab<pos:position pos:line="1215" pos:column="20"/></name> <init pos:line="1215" pos:column="21">= <expr><call><name pos:line="1215" pos:column="23">sqliteHashData<pos:position pos:line="1215" pos:column="37"/></name><argument_list pos:line="1215" pos:column="37">(<argument><expr><name pos:line="1215" pos:column="38">x<pos:position pos:line="1215" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1215" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1215" pos:column="41"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1216" pos:column="9">Index<pos:position pos:line="1216" pos:column="14"/></name> <modifier pos:line="1216" pos:column="15">*<pos:position pos:line="1216" pos:column="16"/></modifier></type><name pos:line="1216" pos:column="16">pIdx<pos:position pos:line="1216" pos:column="20"/></name></decl>, <modifier pos:line="1216" pos:column="22">*<pos:position pos:line="1216" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="1216" pos:column="23">pPk<pos:position pos:line="1216" pos:column="26"/></name></decl>;<pos:position pos:line="1216" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1217" pos:column="9">Index<pos:position pos:line="1217" pos:column="14"/></name> <modifier pos:line="1217" pos:column="15">*<pos:position pos:line="1217" pos:column="16"/></modifier></type><name pos:line="1217" pos:column="16">pPrior<pos:position pos:line="1217" pos:column="22"/></name> <init pos:line="1217" pos:column="23">= <expr><literal type="number" pos:line="1217" pos:column="25">0<pos:position pos:line="1217" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="1217" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1218" pos:column="9">int<pos:position pos:line="1218" pos:column="12"/></name></type> <name pos:line="1218" pos:column="13">loopTop<pos:position pos:line="1218" pos:column="20"/></name></decl>;<pos:position pos:line="1218" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1219" pos:column="9">int<pos:position pos:line="1219" pos:column="12"/></name></type> <name pos:line="1219" pos:column="13">iDataCur<pos:position pos:line="1219" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="1219" pos:column="23">iIdxCur<pos:position pos:line="1219" pos:column="30"/></name></decl>;<pos:position pos:line="1219" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1220" pos:column="9">int<pos:position pos:line="1220" pos:column="12"/></name></type> <name pos:line="1220" pos:column="13">r1<pos:position pos:line="1220" pos:column="15"/></name> <init pos:line="1220" pos:column="16">= <expr><operator pos:line="1220" pos:column="18">-<pos:position pos:line="1220" pos:column="19"/></operator><literal type="number" pos:line="1220" pos:column="19">1<pos:position pos:line="1220" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="1220" pos:column="21"/></decl_stmt>

        <if pos:line="1222" pos:column="9">if<condition pos:line="1222" pos:column="11">( <expr><name><name pos:line="1222" pos:column="13">pTab<pos:position pos:line="1222" pos:column="17"/></name><operator pos:line="1222" pos:column="17">-&gt;<pos:position pos:line="1222" pos:column="22"/></operator><name pos:line="1222" pos:column="19">tnum<pos:position pos:line="1222" pos:column="23"/></name></name><operator pos:line="1222" pos:column="23">&lt;<pos:position pos:line="1222" pos:column="27"/></operator><literal type="number" pos:line="1222" pos:column="24">1<pos:position pos:line="1222" pos:column="25"/></literal></expr> )<pos:position pos:line="1222" pos:column="27"/></condition><then pos:line="1222" pos:column="27"> <block type="pseudo"><continue pos:line="1222" pos:column="28">continue;<pos:position pos:line="1222" pos:column="37"/></continue></block></then></if>  <comment type="block" pos:line="1222" pos:column="39">/* Skip VIEWs or VIRTUAL TABLEs */</comment>
        <expr_stmt><expr><name pos:line="1223" pos:column="9">pPk<pos:position pos:line="1223" pos:column="12"/></name> <operator pos:line="1223" pos:column="13">=<pos:position pos:line="1223" pos:column="14"/></operator> <ternary><condition><expr><call><name pos:line="1223" pos:column="15">HasRowid<pos:position pos:line="1223" pos:column="23"/></name><argument_list pos:line="1223" pos:column="23">(<argument><expr><name pos:line="1223" pos:column="24">pTab<pos:position pos:line="1223" pos:column="28"/></name></expr></argument>)<pos:position pos:line="1223" pos:column="29"/></argument_list></call></expr> ?<pos:position pos:line="1223" pos:column="31"/></condition><then pos:line="1223" pos:column="31"> <expr><literal type="number" pos:line="1223" pos:column="32">0<pos:position pos:line="1223" pos:column="33"/></literal></expr> <pos:position pos:line="1223" pos:column="34"/></then><else pos:line="1223" pos:column="34">: <expr><call><name pos:line="1223" pos:column="36">sqlite3PrimaryKeyIndex<pos:position pos:line="1223" pos:column="58"/></name><argument_list pos:line="1223" pos:column="58">(<argument><expr><name pos:line="1223" pos:column="59">pTab<pos:position pos:line="1223" pos:column="63"/></name></expr></argument>)<pos:position pos:line="1223" pos:column="64"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="1223" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1224" pos:column="9">sqlite3ExprCacheClear<pos:position pos:line="1224" pos:column="30"/></name><argument_list pos:line="1224" pos:column="30">(<argument><expr><name pos:line="1224" pos:column="31">pParse<pos:position pos:line="1224" pos:column="37"/></name></expr></argument>)<pos:position pos:line="1224" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="1224" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1225" pos:column="9">sqlite3OpenTableAndIndices<pos:position pos:line="1225" pos:column="35"/></name><argument_list pos:line="1225" pos:column="35">(<argument><expr><name pos:line="1225" pos:column="36">pParse<pos:position pos:line="1225" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1225" pos:column="44">pTab<pos:position pos:line="1225" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1225" pos:column="50">OP_OpenRead<pos:position pos:line="1225" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1225" pos:column="63">0<pos:position pos:line="1225" pos:column="64"/></literal></expr></argument>,
                                   <argument><expr><literal type="number" pos:line="1226" pos:column="36">1<pos:position pos:line="1226" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1226" pos:column="39">0<pos:position pos:line="1226" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="1226" pos:column="42">&amp;<pos:position pos:line="1226" pos:column="47"/></operator><name pos:line="1226" pos:column="43">iDataCur<pos:position pos:line="1226" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="1226" pos:column="53">&amp;<pos:position pos:line="1226" pos:column="58"/></operator><name pos:line="1226" pos:column="54">iIdxCur<pos:position pos:line="1226" pos:column="61"/></name></expr></argument>)<pos:position pos:line="1226" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1226" pos:column="63"/></expr_stmt>
        <comment type="block" pos:line="1227" pos:column="9">/* reg[7] counts the number of entries in the table.
        ** reg[8+i] counts the number of entries in the i-th index 
        */</comment>
        <expr_stmt><expr><call><name pos:line="1230" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="1230" pos:column="26"/></name><argument_list pos:line="1230" pos:column="26">(<argument><expr><name pos:line="1230" pos:column="27">v<pos:position pos:line="1230" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1230" pos:column="30">OP_Integer<pos:position pos:line="1230" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1230" pos:column="42">0<pos:position pos:line="1230" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1230" pos:column="45">7<pos:position pos:line="1230" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="1230" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="1230" pos:column="48"/></expr_stmt>
        <for pos:line="1231" pos:column="9">for<control pos:line="1231" pos:column="12">(<init><expr><name pos:line="1231" pos:column="13">j<pos:position pos:line="1231" pos:column="14"/></name><operator pos:line="1231" pos:column="14">=<pos:position pos:line="1231" pos:column="15"/></operator><literal type="number" pos:line="1231" pos:column="15">0<pos:position pos:line="1231" pos:column="16"/></literal></expr><operator pos:line="1231" pos:column="16">,<pos:position pos:line="1231" pos:column="17"/></operator> <expr><name pos:line="1231" pos:column="18">pIdx<pos:position pos:line="1231" pos:column="22"/></name><operator pos:line="1231" pos:column="22">=<pos:position pos:line="1231" pos:column="23"/></operator><name><name pos:line="1231" pos:column="23">pTab<pos:position pos:line="1231" pos:column="27"/></name><operator pos:line="1231" pos:column="27">-&gt;<pos:position pos:line="1231" pos:column="32"/></operator><name pos:line="1231" pos:column="29">pIndex<pos:position pos:line="1231" pos:column="35"/></name></name></expr>;<pos:position pos:line="1231" pos:column="36"/></init> <condition><expr><name pos:line="1231" pos:column="37">pIdx<pos:position pos:line="1231" pos:column="41"/></name></expr>;<pos:position pos:line="1231" pos:column="42"/></condition> <incr><expr><name pos:line="1231" pos:column="43">pIdx<pos:position pos:line="1231" pos:column="47"/></name><operator pos:line="1231" pos:column="47">=<pos:position pos:line="1231" pos:column="48"/></operator><name><name pos:line="1231" pos:column="48">pIdx<pos:position pos:line="1231" pos:column="52"/></name><operator pos:line="1231" pos:column="52">-&gt;<pos:position pos:line="1231" pos:column="57"/></operator><name pos:line="1231" pos:column="54">pNext<pos:position pos:line="1231" pos:column="59"/></name></name></expr><operator pos:line="1231" pos:column="59">,<pos:position pos:line="1231" pos:column="60"/></operator> <expr><name pos:line="1231" pos:column="61">j<pos:position pos:line="1231" pos:column="62"/></name><operator pos:line="1231" pos:column="62">++<pos:position pos:line="1231" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="1231" pos:column="65"/></control><block pos:line="1231" pos:column="65">{
          <expr_stmt><expr><call><name pos:line="1232" pos:column="11">sqlite3VdbeAddOp2<pos:position pos:line="1232" pos:column="28"/></name><argument_list pos:line="1232" pos:column="28">(<argument><expr><name pos:line="1232" pos:column="29">v<pos:position pos:line="1232" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1232" pos:column="32">OP_Integer<pos:position pos:line="1232" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1232" pos:column="44">0<pos:position pos:line="1232" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1232" pos:column="47">8<pos:position pos:line="1232" pos:column="48"/></literal><operator pos:line="1232" pos:column="48">+<pos:position pos:line="1232" pos:column="49"/></operator><name pos:line="1232" pos:column="49">j<pos:position pos:line="1232" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1232" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1232" pos:column="52"/></expr_stmt> <comment type="block" pos:line="1232" pos:column="53">/* index entries counter */</comment>
        }<pos:position pos:line="1233" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="1234" pos:column="9">assert<pos:position pos:line="1234" pos:column="15"/></name><argument_list pos:line="1234" pos:column="15">( <argument><expr><name><name pos:line="1234" pos:column="17">pParse<pos:position pos:line="1234" pos:column="23"/></name><operator pos:line="1234" pos:column="23">-&gt;<pos:position pos:line="1234" pos:column="28"/></operator><name pos:line="1234" pos:column="25">nMem<pos:position pos:line="1234" pos:column="29"/></name></name><operator pos:line="1234" pos:column="29">&gt;=<pos:position pos:line="1234" pos:column="34"/></operator><literal type="number" pos:line="1234" pos:column="31">8<pos:position pos:line="1234" pos:column="32"/></literal><operator pos:line="1234" pos:column="32">+<pos:position pos:line="1234" pos:column="33"/></operator><name pos:line="1234" pos:column="33">j<pos:position pos:line="1234" pos:column="34"/></name></expr></argument> )<pos:position pos:line="1234" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1234" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1235" pos:column="9">assert<pos:position pos:line="1235" pos:column="15"/></name><argument_list pos:line="1235" pos:column="15">( <argument><expr><call><name pos:line="1235" pos:column="17">sqlite3NoTempsInRange<pos:position pos:line="1235" pos:column="38"/></name><argument_list pos:line="1235" pos:column="38">(<argument><expr><name pos:line="1235" pos:column="39">pParse<pos:position pos:line="1235" pos:column="45"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="1235" pos:column="46">1<pos:position pos:line="1235" pos:column="47"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="1235" pos:column="48">7<pos:position pos:line="1235" pos:column="49"/></literal><operator pos:line="1235" pos:column="49">+<pos:position pos:line="1235" pos:column="50"/></operator><name pos:line="1235" pos:column="50">j<pos:position pos:line="1235" pos:column="51"/></name></expr></argument>)<pos:position pos:line="1235" pos:column="52"/></argument_list></call></expr></argument> )<pos:position pos:line="1235" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1235" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1236" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="1236" pos:column="26"/></name><argument_list pos:line="1236" pos:column="26">(<argument><expr><name pos:line="1236" pos:column="27">v<pos:position pos:line="1236" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1236" pos:column="30">OP_Rewind<pos:position pos:line="1236" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1236" pos:column="41">iDataCur<pos:position pos:line="1236" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1236" pos:column="51">0<pos:position pos:line="1236" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="1236" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1236" pos:column="54"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1236" pos:column="55">VdbeCoverage<pos:position pos:line="1236" pos:column="67"/></name><argument_list pos:line="1236" pos:column="67">(<argument><expr><name pos:line="1236" pos:column="68">v<pos:position pos:line="1236" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1236" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1236" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1237" pos:column="9">loopTop<pos:position pos:line="1237" pos:column="16"/></name> <operator pos:line="1237" pos:column="17">=<pos:position pos:line="1237" pos:column="18"/></operator> <call><name pos:line="1237" pos:column="19">sqlite3VdbeAddOp2<pos:position pos:line="1237" pos:column="36"/></name><argument_list pos:line="1237" pos:column="36">(<argument><expr><name pos:line="1237" pos:column="37">v<pos:position pos:line="1237" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="1237" pos:column="40">OP_AddImm<pos:position pos:line="1237" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1237" pos:column="51">7<pos:position pos:line="1237" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1237" pos:column="54">1<pos:position pos:line="1237" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="1237" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1237" pos:column="57"/></expr_stmt>
        <comment type="block" pos:line="1238" pos:column="9">/* Verify that all NOT NULL columns really are NOT NULL */</comment>
        <for pos:line="1239" pos:column="9">for<control pos:line="1239" pos:column="12">(<init><expr><name pos:line="1239" pos:column="13">j<pos:position pos:line="1239" pos:column="14"/></name><operator pos:line="1239" pos:column="14">=<pos:position pos:line="1239" pos:column="15"/></operator><literal type="number" pos:line="1239" pos:column="15">0<pos:position pos:line="1239" pos:column="16"/></literal></expr>;<pos:position pos:line="1239" pos:column="17"/></init> <condition><expr><name pos:line="1239" pos:column="18">j<pos:position pos:line="1239" pos:column="19"/></name><operator pos:line="1239" pos:column="19">&lt;<pos:position pos:line="1239" pos:column="23"/></operator><name><name pos:line="1239" pos:column="20">pTab<pos:position pos:line="1239" pos:column="24"/></name><operator pos:line="1239" pos:column="24">-&gt;<pos:position pos:line="1239" pos:column="29"/></operator><name pos:line="1239" pos:column="26">nCol<pos:position pos:line="1239" pos:column="30"/></name></name></expr>;<pos:position pos:line="1239" pos:column="31"/></condition> <incr><expr><name pos:line="1239" pos:column="32">j<pos:position pos:line="1239" pos:column="33"/></name><operator pos:line="1239" pos:column="33">++<pos:position pos:line="1239" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1239" pos:column="36"/></control><block pos:line="1239" pos:column="36">{
          <decl_stmt><decl><type><name pos:line="1240" pos:column="11">char<pos:position pos:line="1240" pos:column="15"/></name> <modifier pos:line="1240" pos:column="16">*<pos:position pos:line="1240" pos:column="17"/></modifier></type><name pos:line="1240" pos:column="17">zErr<pos:position pos:line="1240" pos:column="21"/></name></decl>;<pos:position pos:line="1240" pos:column="22"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="1241" pos:column="11">int<pos:position pos:line="1241" pos:column="14"/></name></type> <name pos:line="1241" pos:column="15">jmp2<pos:position pos:line="1241" pos:column="19"/></name></decl>;<pos:position pos:line="1241" pos:column="20"/></decl_stmt>
          <if pos:line="1242" pos:column="11">if<condition pos:line="1242" pos:column="13">( <expr><name pos:line="1242" pos:column="15">j<pos:position pos:line="1242" pos:column="16"/></name><operator pos:line="1242" pos:column="16">==<pos:position pos:line="1242" pos:column="18"/></operator><name><name pos:line="1242" pos:column="18">pTab<pos:position pos:line="1242" pos:column="22"/></name><operator pos:line="1242" pos:column="22">-&gt;<pos:position pos:line="1242" pos:column="27"/></operator><name pos:line="1242" pos:column="24">iPKey<pos:position pos:line="1242" pos:column="29"/></name></name></expr> )<pos:position pos:line="1242" pos:column="31"/></condition><then pos:line="1242" pos:column="31"> <block type="pseudo"><continue pos:line="1242" pos:column="32">continue;<pos:position pos:line="1242" pos:column="41"/></continue></block></then></if>
          <if pos:line="1243" pos:column="11">if<condition pos:line="1243" pos:column="13">( <expr><name><name pos:line="1243" pos:column="15">pTab<pos:position pos:line="1243" pos:column="19"/></name><operator pos:line="1243" pos:column="19">-&gt;<pos:position pos:line="1243" pos:column="24"/></operator><name pos:line="1243" pos:column="21">aCol<pos:position pos:line="1243" pos:column="25"/></name><index pos:line="1243" pos:column="25">[<expr><name pos:line="1243" pos:column="26">j<pos:position pos:line="1243" pos:column="27"/></name></expr>]<pos:position pos:line="1243" pos:column="28"/></index></name><operator pos:line="1243" pos:column="28">.<pos:position pos:line="1243" pos:column="29"/></operator><name pos:line="1243" pos:column="29">notNull<pos:position pos:line="1243" pos:column="36"/></name><operator pos:line="1243" pos:column="36">==<pos:position pos:line="1243" pos:column="38"/></operator><literal type="number" pos:line="1243" pos:column="38">0<pos:position pos:line="1243" pos:column="39"/></literal></expr> )<pos:position pos:line="1243" pos:column="41"/></condition><then pos:line="1243" pos:column="41"> <block type="pseudo"><continue pos:line="1243" pos:column="42">continue;<pos:position pos:line="1243" pos:column="51"/></continue></block></then></if>
          <expr_stmt><expr><call><name pos:line="1244" pos:column="11">sqlite3ExprCodeGetColumnOfTable<pos:position pos:line="1244" pos:column="42"/></name><argument_list pos:line="1244" pos:column="42">(<argument><expr><name pos:line="1244" pos:column="43">v<pos:position pos:line="1244" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1244" pos:column="46">pTab<pos:position pos:line="1244" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1244" pos:column="52">iDataCur<pos:position pos:line="1244" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1244" pos:column="62">j<pos:position pos:line="1244" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1244" pos:column="65">3<pos:position pos:line="1244" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="1244" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1244" pos:column="68"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1245" pos:column="11">sqlite3VdbeChangeP5<pos:position pos:line="1245" pos:column="30"/></name><argument_list pos:line="1245" pos:column="30">(<argument><expr><name pos:line="1245" pos:column="31">v<pos:position pos:line="1245" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1245" pos:column="34">OPFLAG_TYPEOFARG<pos:position pos:line="1245" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1245" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1245" pos:column="52"/></expr_stmt>
          <expr_stmt><expr><name pos:line="1246" pos:column="11">jmp2<pos:position pos:line="1246" pos:column="15"/></name> <operator pos:line="1246" pos:column="16">=<pos:position pos:line="1246" pos:column="17"/></operator> <call><name pos:line="1246" pos:column="18">sqlite3VdbeAddOp1<pos:position pos:line="1246" pos:column="35"/></name><argument_list pos:line="1246" pos:column="35">(<argument><expr><name pos:line="1246" pos:column="36">v<pos:position pos:line="1246" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1246" pos:column="39">OP_NotNull<pos:position pos:line="1246" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1246" pos:column="51">3<pos:position pos:line="1246" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="1246" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1246" pos:column="54"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1246" pos:column="55">VdbeCoverage<pos:position pos:line="1246" pos:column="67"/></name><argument_list pos:line="1246" pos:column="67">(<argument><expr><name pos:line="1246" pos:column="68">v<pos:position pos:line="1246" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1246" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1246" pos:column="71"/></expr_stmt>
          <expr_stmt><expr><name pos:line="1247" pos:column="11">zErr<pos:position pos:line="1247" pos:column="15"/></name> <operator pos:line="1247" pos:column="16">=<pos:position pos:line="1247" pos:column="17"/></operator> <call><name pos:line="1247" pos:column="18">sqlite3MPrintf<pos:position pos:line="1247" pos:column="32"/></name><argument_list pos:line="1247" pos:column="32">(<argument><expr><name pos:line="1247" pos:column="33">db<pos:position pos:line="1247" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1247" pos:column="37">"NULL value in %s.%s"<pos:position pos:line="1247" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="1247" pos:column="60">pTab<pos:position pos:line="1247" pos:column="64"/></name><operator pos:line="1247" pos:column="64">-&gt;<pos:position pos:line="1247" pos:column="69"/></operator><name pos:line="1247" pos:column="66">zName<pos:position pos:line="1247" pos:column="71"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="1248" pos:column="31">pTab<pos:position pos:line="1248" pos:column="35"/></name><operator pos:line="1248" pos:column="35">-&gt;<pos:position pos:line="1248" pos:column="40"/></operator><name pos:line="1248" pos:column="37">aCol<pos:position pos:line="1248" pos:column="41"/></name><index pos:line="1248" pos:column="41">[<expr><name pos:line="1248" pos:column="42">j<pos:position pos:line="1248" pos:column="43"/></name></expr>]<pos:position pos:line="1248" pos:column="44"/></index></name><operator pos:line="1248" pos:column="44">.<pos:position pos:line="1248" pos:column="45"/></operator><name pos:line="1248" pos:column="45">zName<pos:position pos:line="1248" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1248" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1248" pos:column="52"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1249" pos:column="11">sqlite3VdbeAddOp4<pos:position pos:line="1249" pos:column="28"/></name><argument_list pos:line="1249" pos:column="28">(<argument><expr><name pos:line="1249" pos:column="29">v<pos:position pos:line="1249" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1249" pos:column="32">OP_String8<pos:position pos:line="1249" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1249" pos:column="44">0<pos:position pos:line="1249" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1249" pos:column="47">3<pos:position pos:line="1249" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1249" pos:column="50">0<pos:position pos:line="1249" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="1249" pos:column="53">zErr<pos:position pos:line="1249" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1249" pos:column="59">P4_DYNAMIC<pos:position pos:line="1249" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1249" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1249" pos:column="71"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1250" pos:column="11">integrityCheckResultRow<pos:position pos:line="1250" pos:column="34"/></name><argument_list pos:line="1250" pos:column="34">(<argument><expr><name pos:line="1250" pos:column="35">v<pos:position pos:line="1250" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1250" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1250" pos:column="38"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1251" pos:column="11">sqlite3VdbeJumpHere<pos:position pos:line="1251" pos:column="30"/></name><argument_list pos:line="1251" pos:column="30">(<argument><expr><name pos:line="1251" pos:column="31">v<pos:position pos:line="1251" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1251" pos:column="34">jmp2<pos:position pos:line="1251" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1251" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1251" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="1252" pos:column="10"/></block></for>
        <comment type="block" pos:line="1253" pos:column="9">/* Verify CHECK constraints */</comment>
        <if pos:line="1254" pos:column="9">if<condition pos:line="1254" pos:column="11">( <expr><name><name pos:line="1254" pos:column="13">pTab<pos:position pos:line="1254" pos:column="17"/></name><operator pos:line="1254" pos:column="17">-&gt;<pos:position pos:line="1254" pos:column="22"/></operator><name pos:line="1254" pos:column="19">pCheck<pos:position pos:line="1254" pos:column="25"/></name></name> <operator pos:line="1254" pos:column="26">&amp;&amp;<pos:position pos:line="1254" pos:column="36"/></operator> <operator pos:line="1254" pos:column="29">(<pos:position pos:line="1254" pos:column="30"/></operator><name><name pos:line="1254" pos:column="30">db<pos:position pos:line="1254" pos:column="32"/></name><operator pos:line="1254" pos:column="32">-&gt;<pos:position pos:line="1254" pos:column="37"/></operator><name pos:line="1254" pos:column="34">flags<pos:position pos:line="1254" pos:column="39"/></name></name> <operator pos:line="1254" pos:column="40">&amp;<pos:position pos:line="1254" pos:column="45"/></operator> <name pos:line="1254" pos:column="42">SQLITE_IgnoreChecks<pos:position pos:line="1254" pos:column="61"/></name><operator pos:line="1254" pos:column="61">)<pos:position pos:line="1254" pos:column="62"/></operator><operator pos:line="1254" pos:column="62">==<pos:position pos:line="1254" pos:column="64"/></operator><literal type="number" pos:line="1254" pos:column="64">0<pos:position pos:line="1254" pos:column="65"/></literal></expr> )<pos:position pos:line="1254" pos:column="67"/></condition><then><block pos:line="1254" pos:column="67">{
          <decl_stmt><decl><type><name pos:line="1255" pos:column="11">ExprList<pos:position pos:line="1255" pos:column="19"/></name> <modifier pos:line="1255" pos:column="20">*<pos:position pos:line="1255" pos:column="21"/></modifier></type><name pos:line="1255" pos:column="21">pCheck<pos:position pos:line="1255" pos:column="27"/></name> <init pos:line="1255" pos:column="28">= <expr><call><name pos:line="1255" pos:column="30">sqlite3ExprListDup<pos:position pos:line="1255" pos:column="48"/></name><argument_list pos:line="1255" pos:column="48">(<argument><expr><name pos:line="1255" pos:column="49">db<pos:position pos:line="1255" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="1255" pos:column="53">pTab<pos:position pos:line="1255" pos:column="57"/></name><operator pos:line="1255" pos:column="57">-&gt;<pos:position pos:line="1255" pos:column="62"/></operator><name pos:line="1255" pos:column="59">pCheck<pos:position pos:line="1255" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="1255" pos:column="67">0<pos:position pos:line="1255" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="1255" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1255" pos:column="70"/></decl_stmt>
          <if pos:line="1256" pos:column="11">if<condition pos:line="1256" pos:column="13">( <expr><name><name pos:line="1256" pos:column="15">db<pos:position pos:line="1256" pos:column="17"/></name><operator pos:line="1256" pos:column="17">-&gt;<pos:position pos:line="1256" pos:column="22"/></operator><name pos:line="1256" pos:column="19">mallocFailed<pos:position pos:line="1256" pos:column="31"/></name></name><operator pos:line="1256" pos:column="31">==<pos:position pos:line="1256" pos:column="33"/></operator><literal type="number" pos:line="1256" pos:column="33">0<pos:position pos:line="1256" pos:column="34"/></literal></expr> )<pos:position pos:line="1256" pos:column="36"/></condition><then><block pos:line="1256" pos:column="36">{
            <decl_stmt><decl><type><name pos:line="1257" pos:column="13">int<pos:position pos:line="1257" pos:column="16"/></name></type> <name pos:line="1257" pos:column="17">addrCkFault<pos:position pos:line="1257" pos:column="28"/></name> <init pos:line="1257" pos:column="29">= <expr><call><name pos:line="1257" pos:column="31">sqlite3VdbeMakeLabel<pos:position pos:line="1257" pos:column="51"/></name><argument_list pos:line="1257" pos:column="51">(<argument><expr><name pos:line="1257" pos:column="52">v<pos:position pos:line="1257" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1257" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1257" pos:column="55"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="1258" pos:column="13">int<pos:position pos:line="1258" pos:column="16"/></name></type> <name pos:line="1258" pos:column="17">addrCkOk<pos:position pos:line="1258" pos:column="25"/></name> <init pos:line="1258" pos:column="26">= <expr><call><name pos:line="1258" pos:column="28">sqlite3VdbeMakeLabel<pos:position pos:line="1258" pos:column="48"/></name><argument_list pos:line="1258" pos:column="48">(<argument><expr><name pos:line="1258" pos:column="49">v<pos:position pos:line="1258" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1258" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1258" pos:column="52"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="1259" pos:column="13">char<pos:position pos:line="1259" pos:column="17"/></name> <modifier pos:line="1259" pos:column="18">*<pos:position pos:line="1259" pos:column="19"/></modifier></type><name pos:line="1259" pos:column="19">zErr<pos:position pos:line="1259" pos:column="23"/></name></decl>;<pos:position pos:line="1259" pos:column="24"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="1260" pos:column="13">int<pos:position pos:line="1260" pos:column="16"/></name></type> <name pos:line="1260" pos:column="17">k<pos:position pos:line="1260" pos:column="18"/></name></decl>;<pos:position pos:line="1260" pos:column="19"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="1261" pos:column="13">pParse<pos:position pos:line="1261" pos:column="19"/></name><operator pos:line="1261" pos:column="19">-&gt;<pos:position pos:line="1261" pos:column="24"/></operator><name pos:line="1261" pos:column="21">iSelfTab<pos:position pos:line="1261" pos:column="29"/></name></name> <operator pos:line="1261" pos:column="30">=<pos:position pos:line="1261" pos:column="31"/></operator> <name pos:line="1261" pos:column="32">iDataCur<pos:position pos:line="1261" pos:column="40"/></name> <operator pos:line="1261" pos:column="41">+<pos:position pos:line="1261" pos:column="42"/></operator> <literal type="number" pos:line="1261" pos:column="43">1<pos:position pos:line="1261" pos:column="44"/></literal></expr>;<pos:position pos:line="1261" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1262" pos:column="13">sqlite3ExprCachePush<pos:position pos:line="1262" pos:column="33"/></name><argument_list pos:line="1262" pos:column="33">(<argument><expr><name pos:line="1262" pos:column="34">pParse<pos:position pos:line="1262" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1262" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1262" pos:column="42"/></expr_stmt>
            <for pos:line="1263" pos:column="13">for<control pos:line="1263" pos:column="16">(<init><expr><name pos:line="1263" pos:column="17">k<pos:position pos:line="1263" pos:column="18"/></name><operator pos:line="1263" pos:column="18">=<pos:position pos:line="1263" pos:column="19"/></operator><name><name pos:line="1263" pos:column="19">pCheck<pos:position pos:line="1263" pos:column="25"/></name><operator pos:line="1263" pos:column="25">-&gt;<pos:position pos:line="1263" pos:column="30"/></operator><name pos:line="1263" pos:column="27">nExpr<pos:position pos:line="1263" pos:column="32"/></name></name><operator pos:line="1263" pos:column="32">-<pos:position pos:line="1263" pos:column="33"/></operator><literal type="number" pos:line="1263" pos:column="33">1<pos:position pos:line="1263" pos:column="34"/></literal></expr>;<pos:position pos:line="1263" pos:column="35"/></init> <condition><expr><name pos:line="1263" pos:column="36">k<pos:position pos:line="1263" pos:column="37"/></name><operator pos:line="1263" pos:column="37">&gt;<pos:position pos:line="1263" pos:column="41"/></operator><literal type="number" pos:line="1263" pos:column="38">0<pos:position pos:line="1263" pos:column="39"/></literal></expr>;<pos:position pos:line="1263" pos:column="40"/></condition> <incr><expr><name pos:line="1263" pos:column="41">k<pos:position pos:line="1263" pos:column="42"/></name><operator pos:line="1263" pos:column="42">--<pos:position pos:line="1263" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="1263" pos:column="45"/></control><block pos:line="1263" pos:column="45">{
              <expr_stmt><expr><call><name pos:line="1264" pos:column="15">sqlite3ExprIfFalse<pos:position pos:line="1264" pos:column="33"/></name><argument_list pos:line="1264" pos:column="33">(<argument><expr><name pos:line="1264" pos:column="34">pParse<pos:position pos:line="1264" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="1264" pos:column="42">pCheck<pos:position pos:line="1264" pos:column="48"/></name><operator pos:line="1264" pos:column="48">-&gt;<pos:position pos:line="1264" pos:column="53"/></operator><name pos:line="1264" pos:column="50">a<pos:position pos:line="1264" pos:column="51"/></name><index pos:line="1264" pos:column="51">[<expr><name pos:line="1264" pos:column="52">k<pos:position pos:line="1264" pos:column="53"/></name></expr>]<pos:position pos:line="1264" pos:column="54"/></index></name><operator pos:line="1264" pos:column="54">.<pos:position pos:line="1264" pos:column="55"/></operator><name pos:line="1264" pos:column="55">pExpr<pos:position pos:line="1264" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1264" pos:column="62">addrCkFault<pos:position pos:line="1264" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1264" pos:column="75">0<pos:position pos:line="1264" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="1264" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="1264" pos:column="78"/></expr_stmt>
            }<pos:position pos:line="1265" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="1266" pos:column="13">sqlite3ExprIfTrue<pos:position pos:line="1266" pos:column="30"/></name><argument_list pos:line="1266" pos:column="30">(<argument><expr><name pos:line="1266" pos:column="31">pParse<pos:position pos:line="1266" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="1266" pos:column="39">pCheck<pos:position pos:line="1266" pos:column="45"/></name><operator pos:line="1266" pos:column="45">-&gt;<pos:position pos:line="1266" pos:column="50"/></operator><name pos:line="1266" pos:column="47">a<pos:position pos:line="1266" pos:column="48"/></name><index pos:line="1266" pos:column="48">[<expr><literal type="number" pos:line="1266" pos:column="49">0<pos:position pos:line="1266" pos:column="50"/></literal></expr>]<pos:position pos:line="1266" pos:column="51"/></index></name><operator pos:line="1266" pos:column="51">.<pos:position pos:line="1266" pos:column="52"/></operator><name pos:line="1266" pos:column="52">pExpr<pos:position pos:line="1266" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1266" pos:column="59">addrCkOk<pos:position pos:line="1266" pos:column="67"/></name></expr></argument>, 
                <argument><expr><name pos:line="1267" pos:column="17">SQLITE_JUMPIFNULL<pos:position pos:line="1267" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1267" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1267" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1268" pos:column="13">sqlite3VdbeResolveLabel<pos:position pos:line="1268" pos:column="36"/></name><argument_list pos:line="1268" pos:column="36">(<argument><expr><name pos:line="1268" pos:column="37">v<pos:position pos:line="1268" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="1268" pos:column="40">addrCkFault<pos:position pos:line="1268" pos:column="51"/></name></expr></argument>)<pos:position pos:line="1268" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1268" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="1269" pos:column="13">pParse<pos:position pos:line="1269" pos:column="19"/></name><operator pos:line="1269" pos:column="19">-&gt;<pos:position pos:line="1269" pos:column="24"/></operator><name pos:line="1269" pos:column="21">iSelfTab<pos:position pos:line="1269" pos:column="29"/></name></name> <operator pos:line="1269" pos:column="30">=<pos:position pos:line="1269" pos:column="31"/></operator> <literal type="number" pos:line="1269" pos:column="32">0<pos:position pos:line="1269" pos:column="33"/></literal></expr>;<pos:position pos:line="1269" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="1270" pos:column="13">zErr<pos:position pos:line="1270" pos:column="17"/></name> <operator pos:line="1270" pos:column="18">=<pos:position pos:line="1270" pos:column="19"/></operator> <call><name pos:line="1270" pos:column="20">sqlite3MPrintf<pos:position pos:line="1270" pos:column="34"/></name><argument_list pos:line="1270" pos:column="34">(<argument><expr><name pos:line="1270" pos:column="35">db<pos:position pos:line="1270" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1270" pos:column="39">"CHECK constraint failed in %s"<pos:position pos:line="1270" pos:column="70"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="1271" pos:column="17">pTab<pos:position pos:line="1271" pos:column="21"/></name><operator pos:line="1271" pos:column="21">-&gt;<pos:position pos:line="1271" pos:column="26"/></operator><name pos:line="1271" pos:column="23">zName<pos:position pos:line="1271" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="1271" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1271" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1272" pos:column="13">sqlite3VdbeAddOp4<pos:position pos:line="1272" pos:column="30"/></name><argument_list pos:line="1272" pos:column="30">(<argument><expr><name pos:line="1272" pos:column="31">v<pos:position pos:line="1272" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1272" pos:column="34">OP_String8<pos:position pos:line="1272" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1272" pos:column="46">0<pos:position pos:line="1272" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1272" pos:column="49">3<pos:position pos:line="1272" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1272" pos:column="52">0<pos:position pos:line="1272" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="1272" pos:column="55">zErr<pos:position pos:line="1272" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="1272" pos:column="61">P4_DYNAMIC<pos:position pos:line="1272" pos:column="71"/></name></expr></argument>)<pos:position pos:line="1272" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1272" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1273" pos:column="13">integrityCheckResultRow<pos:position pos:line="1273" pos:column="36"/></name><argument_list pos:line="1273" pos:column="36">(<argument><expr><name pos:line="1273" pos:column="37">v<pos:position pos:line="1273" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1273" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1273" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1274" pos:column="13">sqlite3VdbeResolveLabel<pos:position pos:line="1274" pos:column="36"/></name><argument_list pos:line="1274" pos:column="36">(<argument><expr><name pos:line="1274" pos:column="37">v<pos:position pos:line="1274" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="1274" pos:column="40">addrCkOk<pos:position pos:line="1274" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1274" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1274" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1275" pos:column="13">sqlite3ExprCachePop<pos:position pos:line="1275" pos:column="32"/></name><argument_list pos:line="1275" pos:column="32">(<argument><expr><name pos:line="1275" pos:column="33">pParse<pos:position pos:line="1275" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1275" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1275" pos:column="41"/></expr_stmt>
          }<pos:position pos:line="1276" pos:column="12"/></block></then></if>
          <expr_stmt><expr><call><name pos:line="1277" pos:column="11">sqlite3ExprListDelete<pos:position pos:line="1277" pos:column="32"/></name><argument_list pos:line="1277" pos:column="32">(<argument><expr><name pos:line="1277" pos:column="33">db<pos:position pos:line="1277" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1277" pos:column="37">pCheck<pos:position pos:line="1277" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1277" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="1277" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="1278" pos:column="10"/></block></then></if>
        <if pos:line="1279" pos:column="9">if<condition pos:line="1279" pos:column="11">( <expr><operator pos:line="1279" pos:column="13">!<pos:position pos:line="1279" pos:column="14"/></operator><name pos:line="1279" pos:column="14">isQuick<pos:position pos:line="1279" pos:column="21"/></name></expr> )<pos:position pos:line="1279" pos:column="23"/></condition><then><block pos:line="1279" pos:column="23">{ <comment type="block" pos:line="1279" pos:column="25">/* Omit the remaining tests for quick_check */</comment>
          <comment type="block" pos:line="1280" pos:column="11">/* Sanity check on record header decoding */</comment>
          <expr_stmt><expr><call><name pos:line="1281" pos:column="11">sqlite3VdbeAddOp3<pos:position pos:line="1281" pos:column="28"/></name><argument_list pos:line="1281" pos:column="28">(<argument><expr><name pos:line="1281" pos:column="29">v<pos:position pos:line="1281" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1281" pos:column="32">OP_Column<pos:position pos:line="1281" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="1281" pos:column="43">iDataCur<pos:position pos:line="1281" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="1281" pos:column="53">pTab<pos:position pos:line="1281" pos:column="57"/></name><operator pos:line="1281" pos:column="57">-&gt;<pos:position pos:line="1281" pos:column="62"/></operator><name pos:line="1281" pos:column="59">nCol<pos:position pos:line="1281" pos:column="63"/></name></name><operator pos:line="1281" pos:column="63">-<pos:position pos:line="1281" pos:column="64"/></operator><literal type="number" pos:line="1281" pos:column="64">1<pos:position pos:line="1281" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1281" pos:column="67">3<pos:position pos:line="1281" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="1281" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="1281" pos:column="70"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1282" pos:column="11">sqlite3VdbeChangeP5<pos:position pos:line="1282" pos:column="30"/></name><argument_list pos:line="1282" pos:column="30">(<argument><expr><name pos:line="1282" pos:column="31">v<pos:position pos:line="1282" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1282" pos:column="34">OPFLAG_TYPEOFARG<pos:position pos:line="1282" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1282" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1282" pos:column="52"/></expr_stmt>
          <comment type="block" pos:line="1283" pos:column="11">/* Validate index entries for the current row */</comment>
          <for pos:line="1284" pos:column="11">for<control pos:line="1284" pos:column="14">(<init><expr><name pos:line="1284" pos:column="15">j<pos:position pos:line="1284" pos:column="16"/></name><operator pos:line="1284" pos:column="16">=<pos:position pos:line="1284" pos:column="17"/></operator><literal type="number" pos:line="1284" pos:column="17">0<pos:position pos:line="1284" pos:column="18"/></literal></expr><operator pos:line="1284" pos:column="18">,<pos:position pos:line="1284" pos:column="19"/></operator> <expr><name pos:line="1284" pos:column="20">pIdx<pos:position pos:line="1284" pos:column="24"/></name><operator pos:line="1284" pos:column="24">=<pos:position pos:line="1284" pos:column="25"/></operator><name><name pos:line="1284" pos:column="25">pTab<pos:position pos:line="1284" pos:column="29"/></name><operator pos:line="1284" pos:column="29">-&gt;<pos:position pos:line="1284" pos:column="34"/></operator><name pos:line="1284" pos:column="31">pIndex<pos:position pos:line="1284" pos:column="37"/></name></name></expr>;<pos:position pos:line="1284" pos:column="38"/></init> <condition><expr><name pos:line="1284" pos:column="39">pIdx<pos:position pos:line="1284" pos:column="43"/></name></expr>;<pos:position pos:line="1284" pos:column="44"/></condition> <incr><expr><name pos:line="1284" pos:column="45">pIdx<pos:position pos:line="1284" pos:column="49"/></name><operator pos:line="1284" pos:column="49">=<pos:position pos:line="1284" pos:column="50"/></operator><name><name pos:line="1284" pos:column="50">pIdx<pos:position pos:line="1284" pos:column="54"/></name><operator pos:line="1284" pos:column="54">-&gt;<pos:position pos:line="1284" pos:column="59"/></operator><name pos:line="1284" pos:column="56">pNext<pos:position pos:line="1284" pos:column="61"/></name></name></expr><operator pos:line="1284" pos:column="61">,<pos:position pos:line="1284" pos:column="62"/></operator> <expr><name pos:line="1284" pos:column="63">j<pos:position pos:line="1284" pos:column="64"/></name><operator pos:line="1284" pos:column="64">++<pos:position pos:line="1284" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="1284" pos:column="67"/></control><block pos:line="1284" pos:column="67">{
            <decl_stmt><decl><type><name pos:line="1285" pos:column="13">int<pos:position pos:line="1285" pos:column="16"/></name></type> <name pos:line="1285" pos:column="17">jmp2<pos:position pos:line="1285" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="1285" pos:column="23">jmp3<pos:position pos:line="1285" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="1285" pos:column="29">jmp4<pos:position pos:line="1285" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="1285" pos:column="35">jmp5<pos:position pos:line="1285" pos:column="39"/></name></decl>;<pos:position pos:line="1285" pos:column="40"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="1286" pos:column="13">int<pos:position pos:line="1286" pos:column="16"/></name></type> <name pos:line="1286" pos:column="17">ckUniq<pos:position pos:line="1286" pos:column="23"/></name> <init pos:line="1286" pos:column="24">= <expr><call><name pos:line="1286" pos:column="26">sqlite3VdbeMakeLabel<pos:position pos:line="1286" pos:column="46"/></name><argument_list pos:line="1286" pos:column="46">(<argument><expr><name pos:line="1286" pos:column="47">v<pos:position pos:line="1286" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1286" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1286" pos:column="50"/></decl_stmt>
            <if pos:line="1287" pos:column="13">if<condition pos:line="1287" pos:column="15">( <expr><name pos:line="1287" pos:column="17">pPk<pos:position pos:line="1287" pos:column="20"/></name><operator pos:line="1287" pos:column="20">==<pos:position pos:line="1287" pos:column="22"/></operator><name pos:line="1287" pos:column="22">pIdx<pos:position pos:line="1287" pos:column="26"/></name></expr> )<pos:position pos:line="1287" pos:column="28"/></condition><then pos:line="1287" pos:column="28"> <block type="pseudo"><continue pos:line="1287" pos:column="29">continue;<pos:position pos:line="1287" pos:column="38"/></continue></block></then></if>
            <expr_stmt><expr><name pos:line="1288" pos:column="13">r1<pos:position pos:line="1288" pos:column="15"/></name> <operator pos:line="1288" pos:column="16">=<pos:position pos:line="1288" pos:column="17"/></operator> <call><name pos:line="1288" pos:column="18">sqlite3GenerateIndexKey<pos:position pos:line="1288" pos:column="41"/></name><argument_list pos:line="1288" pos:column="41">(<argument><expr><name pos:line="1288" pos:column="42">pParse<pos:position pos:line="1288" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1288" pos:column="50">pIdx<pos:position pos:line="1288" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1288" pos:column="56">iDataCur<pos:position pos:line="1288" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1288" pos:column="66">0<pos:position pos:line="1288" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1288" pos:column="69">0<pos:position pos:line="1288" pos:column="70"/></literal></expr></argument>, <argument><expr><operator pos:line="1288" pos:column="72">&amp;<pos:position pos:line="1288" pos:column="77"/></operator><name pos:line="1288" pos:column="73">jmp3<pos:position pos:line="1288" pos:column="77"/></name></expr></argument>,
                                         <argument><expr><name pos:line="1289" pos:column="42">pPrior<pos:position pos:line="1289" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1289" pos:column="50">r1<pos:position pos:line="1289" pos:column="52"/></name></expr></argument>)<pos:position pos:line="1289" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1289" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="1290" pos:column="13">pPrior<pos:position pos:line="1290" pos:column="19"/></name> <operator pos:line="1290" pos:column="20">=<pos:position pos:line="1290" pos:column="21"/></operator> <name pos:line="1290" pos:column="22">pIdx<pos:position pos:line="1290" pos:column="26"/></name></expr>;<pos:position pos:line="1290" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1291" pos:column="13">sqlite3VdbeAddOp2<pos:position pos:line="1291" pos:column="30"/></name><argument_list pos:line="1291" pos:column="30">(<argument><expr><name pos:line="1291" pos:column="31">v<pos:position pos:line="1291" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1291" pos:column="34">OP_AddImm<pos:position pos:line="1291" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1291" pos:column="45">8<pos:position pos:line="1291" pos:column="46"/></literal><operator pos:line="1291" pos:column="46">+<pos:position pos:line="1291" pos:column="47"/></operator><name pos:line="1291" pos:column="47">j<pos:position pos:line="1291" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1291" pos:column="50">1<pos:position pos:line="1291" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="1291" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1291" pos:column="53"/></expr_stmt><comment type="block" pos:line="1291" pos:column="53">/* increment entry count */</comment>
            <comment type="block" pos:line="1292" pos:column="13">/* Verify that an index entry exists for the current table row */</comment>
            <expr_stmt><expr><name pos:line="1293" pos:column="13">jmp2<pos:position pos:line="1293" pos:column="17"/></name> <operator pos:line="1293" pos:column="18">=<pos:position pos:line="1293" pos:column="19"/></operator> <call><name pos:line="1293" pos:column="20">sqlite3VdbeAddOp4Int<pos:position pos:line="1293" pos:column="40"/></name><argument_list pos:line="1293" pos:column="40">(<argument><expr><name pos:line="1293" pos:column="41">v<pos:position pos:line="1293" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1293" pos:column="44">OP_Found<pos:position pos:line="1293" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="1293" pos:column="54">iIdxCur<pos:position pos:line="1293" pos:column="61"/></name><operator pos:line="1293" pos:column="61">+<pos:position pos:line="1293" pos:column="62"/></operator><name pos:line="1293" pos:column="62">j<pos:position pos:line="1293" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="1293" pos:column="65">ckUniq<pos:position pos:line="1293" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="1293" pos:column="73">r1<pos:position pos:line="1293" pos:column="75"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="1294" pos:column="41">pIdx<pos:position pos:line="1294" pos:column="45"/></name><operator pos:line="1294" pos:column="45">-&gt;<pos:position pos:line="1294" pos:column="50"/></operator><name pos:line="1294" pos:column="47">nColumn<pos:position pos:line="1294" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="1294" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="1294" pos:column="56"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1294" pos:column="57">VdbeCoverage<pos:position pos:line="1294" pos:column="69"/></name><argument_list pos:line="1294" pos:column="69">(<argument><expr><name pos:line="1294" pos:column="70">v<pos:position pos:line="1294" pos:column="71"/></name></expr></argument>)<pos:position pos:line="1294" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1294" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1295" pos:column="13">sqlite3VdbeLoadString<pos:position pos:line="1295" pos:column="34"/></name><argument_list pos:line="1295" pos:column="34">(<argument><expr><name pos:line="1295" pos:column="35">v<pos:position pos:line="1295" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1295" pos:column="38">3<pos:position pos:line="1295" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1295" pos:column="41">"row "<pos:position pos:line="1295" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="1295" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1295" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1296" pos:column="13">sqlite3VdbeAddOp3<pos:position pos:line="1296" pos:column="30"/></name><argument_list pos:line="1296" pos:column="30">(<argument><expr><name pos:line="1296" pos:column="31">v<pos:position pos:line="1296" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1296" pos:column="34">OP_Concat<pos:position pos:line="1296" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1296" pos:column="45">7<pos:position pos:line="1296" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1296" pos:column="48">3<pos:position pos:line="1296" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1296" pos:column="51">3<pos:position pos:line="1296" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="1296" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1296" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1297" pos:column="13">sqlite3VdbeLoadString<pos:position pos:line="1297" pos:column="34"/></name><argument_list pos:line="1297" pos:column="34">(<argument><expr><name pos:line="1297" pos:column="35">v<pos:position pos:line="1297" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1297" pos:column="38">4<pos:position pos:line="1297" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1297" pos:column="41">" missing from index "<pos:position pos:line="1297" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="1297" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="1297" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1298" pos:column="13">sqlite3VdbeAddOp3<pos:position pos:line="1298" pos:column="30"/></name><argument_list pos:line="1298" pos:column="30">(<argument><expr><name pos:line="1298" pos:column="31">v<pos:position pos:line="1298" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1298" pos:column="34">OP_Concat<pos:position pos:line="1298" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1298" pos:column="45">4<pos:position pos:line="1298" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1298" pos:column="48">3<pos:position pos:line="1298" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1298" pos:column="51">3<pos:position pos:line="1298" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="1298" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1298" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="1299" pos:column="13">jmp5<pos:position pos:line="1299" pos:column="17"/></name> <operator pos:line="1299" pos:column="18">=<pos:position pos:line="1299" pos:column="19"/></operator> <call><name pos:line="1299" pos:column="20">sqlite3VdbeLoadString<pos:position pos:line="1299" pos:column="41"/></name><argument_list pos:line="1299" pos:column="41">(<argument><expr><name pos:line="1299" pos:column="42">v<pos:position pos:line="1299" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1299" pos:column="45">4<pos:position pos:line="1299" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="1299" pos:column="48">pIdx<pos:position pos:line="1299" pos:column="52"/></name><operator pos:line="1299" pos:column="52">-&gt;<pos:position pos:line="1299" pos:column="57"/></operator><name pos:line="1299" pos:column="54">zName<pos:position pos:line="1299" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="1299" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1299" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1300" pos:column="13">sqlite3VdbeAddOp3<pos:position pos:line="1300" pos:column="30"/></name><argument_list pos:line="1300" pos:column="30">(<argument><expr><name pos:line="1300" pos:column="31">v<pos:position pos:line="1300" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1300" pos:column="34">OP_Concat<pos:position pos:line="1300" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1300" pos:column="45">4<pos:position pos:line="1300" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1300" pos:column="48">3<pos:position pos:line="1300" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1300" pos:column="51">3<pos:position pos:line="1300" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="1300" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1300" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="1301" pos:column="13">jmp4<pos:position pos:line="1301" pos:column="17"/></name> <operator pos:line="1301" pos:column="18">=<pos:position pos:line="1301" pos:column="19"/></operator> <call><name pos:line="1301" pos:column="20">integrityCheckResultRow<pos:position pos:line="1301" pos:column="43"/></name><argument_list pos:line="1301" pos:column="43">(<argument><expr><name pos:line="1301" pos:column="44">v<pos:position pos:line="1301" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1301" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="1301" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1302" pos:column="13">sqlite3VdbeJumpHere<pos:position pos:line="1302" pos:column="32"/></name><argument_list pos:line="1302" pos:column="32">(<argument><expr><name pos:line="1302" pos:column="33">v<pos:position pos:line="1302" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1302" pos:column="36">jmp2<pos:position pos:line="1302" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1302" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1302" pos:column="42"/></expr_stmt>
            <comment type="block" pos:line="1303" pos:column="13">/* For UNIQUE indexes, verify that only one entry exists with the
            ** current key.  The entry is unique if (1) any column is NULL
            ** or (2) the next entry has a different key */</comment>
            <if pos:line="1306" pos:column="13">if<condition pos:line="1306" pos:column="15">( <expr><call><name pos:line="1306" pos:column="17">IsUniqueIndex<pos:position pos:line="1306" pos:column="30"/></name><argument_list pos:line="1306" pos:column="30">(<argument><expr><name pos:line="1306" pos:column="31">pIdx<pos:position pos:line="1306" pos:column="35"/></name></expr></argument>)<pos:position pos:line="1306" pos:column="36"/></argument_list></call></expr> )<pos:position pos:line="1306" pos:column="38"/></condition><then><block pos:line="1306" pos:column="38">{
              <decl_stmt><decl><type><name pos:line="1307" pos:column="15">int<pos:position pos:line="1307" pos:column="18"/></name></type> <name pos:line="1307" pos:column="19">uniqOk<pos:position pos:line="1307" pos:column="25"/></name> <init pos:line="1307" pos:column="26">= <expr><call><name pos:line="1307" pos:column="28">sqlite3VdbeMakeLabel<pos:position pos:line="1307" pos:column="48"/></name><argument_list pos:line="1307" pos:column="48">(<argument><expr><name pos:line="1307" pos:column="49">v<pos:position pos:line="1307" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1307" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1307" pos:column="52"/></decl_stmt>
              <decl_stmt><decl><type><name pos:line="1308" pos:column="15">int<pos:position pos:line="1308" pos:column="18"/></name></type> <name pos:line="1308" pos:column="19">jmp6<pos:position pos:line="1308" pos:column="23"/></name></decl>;<pos:position pos:line="1308" pos:column="24"/></decl_stmt>
              <decl_stmt><decl><type><name pos:line="1309" pos:column="15">int<pos:position pos:line="1309" pos:column="18"/></name></type> <name pos:line="1309" pos:column="19">kk<pos:position pos:line="1309" pos:column="21"/></name></decl>;<pos:position pos:line="1309" pos:column="22"/></decl_stmt>
              <for pos:line="1310" pos:column="15">for<control pos:line="1310" pos:column="18">(<init><expr><name pos:line="1310" pos:column="19">kk<pos:position pos:line="1310" pos:column="21"/></name><operator pos:line="1310" pos:column="21">=<pos:position pos:line="1310" pos:column="22"/></operator><literal type="number" pos:line="1310" pos:column="22">0<pos:position pos:line="1310" pos:column="23"/></literal></expr>;<pos:position pos:line="1310" pos:column="24"/></init> <condition><expr><name pos:line="1310" pos:column="25">kk<pos:position pos:line="1310" pos:column="27"/></name><operator pos:line="1310" pos:column="27">&lt;<pos:position pos:line="1310" pos:column="31"/></operator><name><name pos:line="1310" pos:column="28">pIdx<pos:position pos:line="1310" pos:column="32"/></name><operator pos:line="1310" pos:column="32">-&gt;<pos:position pos:line="1310" pos:column="37"/></operator><name pos:line="1310" pos:column="34">nKeyCol<pos:position pos:line="1310" pos:column="41"/></name></name></expr>;<pos:position pos:line="1310" pos:column="42"/></condition> <incr><expr><name pos:line="1310" pos:column="43">kk<pos:position pos:line="1310" pos:column="45"/></name><operator pos:line="1310" pos:column="45">++<pos:position pos:line="1310" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="1310" pos:column="48"/></control><block pos:line="1310" pos:column="48">{
                <decl_stmt><decl><type><name pos:line="1311" pos:column="17">int<pos:position pos:line="1311" pos:column="20"/></name></type> <name pos:line="1311" pos:column="21">iCol<pos:position pos:line="1311" pos:column="25"/></name> <init pos:line="1311" pos:column="26">= <expr><name><name pos:line="1311" pos:column="28">pIdx<pos:position pos:line="1311" pos:column="32"/></name><operator pos:line="1311" pos:column="32">-&gt;<pos:position pos:line="1311" pos:column="37"/></operator><name pos:line="1311" pos:column="34">aiColumn<pos:position pos:line="1311" pos:column="42"/></name><index pos:line="1311" pos:column="42">[<expr><name pos:line="1311" pos:column="43">kk<pos:position pos:line="1311" pos:column="45"/></name></expr>]<pos:position pos:line="1311" pos:column="46"/></index></name></expr></init></decl>;<pos:position pos:line="1311" pos:column="47"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="1312" pos:column="17">assert<pos:position pos:line="1312" pos:column="23"/></name><argument_list pos:line="1312" pos:column="23">( <argument><expr><name pos:line="1312" pos:column="25">iCol<pos:position pos:line="1312" pos:column="29"/></name><operator pos:line="1312" pos:column="29">!=<pos:position pos:line="1312" pos:column="31"/></operator><name pos:line="1312" pos:column="31">XN_ROWID<pos:position pos:line="1312" pos:column="39"/></name> <operator pos:line="1312" pos:column="40">&amp;&amp;<pos:position pos:line="1312" pos:column="50"/></operator> <name pos:line="1312" pos:column="43">iCol<pos:position pos:line="1312" pos:column="47"/></name><operator pos:line="1312" pos:column="47">&lt;<pos:position pos:line="1312" pos:column="51"/></operator><name><name pos:line="1312" pos:column="48">pTab<pos:position pos:line="1312" pos:column="52"/></name><operator pos:line="1312" pos:column="52">-&gt;<pos:position pos:line="1312" pos:column="57"/></operator><name pos:line="1312" pos:column="54">nCol<pos:position pos:line="1312" pos:column="58"/></name></name></expr></argument> )<pos:position pos:line="1312" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1312" pos:column="61"/></expr_stmt>
                <if pos:line="1313" pos:column="17">if<condition pos:line="1313" pos:column="19">( <expr><name pos:line="1313" pos:column="21">iCol<pos:position pos:line="1313" pos:column="25"/></name><operator pos:line="1313" pos:column="25">&gt;=<pos:position pos:line="1313" pos:column="30"/></operator><literal type="number" pos:line="1313" pos:column="27">0<pos:position pos:line="1313" pos:column="28"/></literal> <operator pos:line="1313" pos:column="29">&amp;&amp;<pos:position pos:line="1313" pos:column="39"/></operator> <name><name pos:line="1313" pos:column="32">pTab<pos:position pos:line="1313" pos:column="36"/></name><operator pos:line="1313" pos:column="36">-&gt;<pos:position pos:line="1313" pos:column="41"/></operator><name pos:line="1313" pos:column="38">aCol<pos:position pos:line="1313" pos:column="42"/></name><index pos:line="1313" pos:column="42">[<expr><name pos:line="1313" pos:column="43">iCol<pos:position pos:line="1313" pos:column="47"/></name></expr>]<pos:position pos:line="1313" pos:column="48"/></index></name><operator pos:line="1313" pos:column="48">.<pos:position pos:line="1313" pos:column="49"/></operator><name pos:line="1313" pos:column="49">notNull<pos:position pos:line="1313" pos:column="56"/></name></expr> )<pos:position pos:line="1313" pos:column="58"/></condition><then pos:line="1313" pos:column="58"> <block type="pseudo"><continue pos:line="1313" pos:column="59">continue;<pos:position pos:line="1313" pos:column="68"/></continue></block></then></if>
                <expr_stmt><expr><call><name pos:line="1314" pos:column="17">sqlite3VdbeAddOp2<pos:position pos:line="1314" pos:column="34"/></name><argument_list pos:line="1314" pos:column="34">(<argument><expr><name pos:line="1314" pos:column="35">v<pos:position pos:line="1314" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1314" pos:column="38">OP_IsNull<pos:position pos:line="1314" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="1314" pos:column="49">r1<pos:position pos:line="1314" pos:column="51"/></name><operator pos:line="1314" pos:column="51">+<pos:position pos:line="1314" pos:column="52"/></operator><name pos:line="1314" pos:column="52">kk<pos:position pos:line="1314" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1314" pos:column="56">uniqOk<pos:position pos:line="1314" pos:column="62"/></name></expr></argument>)<pos:position pos:line="1314" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="1314" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="1315" pos:column="17">VdbeCoverage<pos:position pos:line="1315" pos:column="29"/></name><argument_list pos:line="1315" pos:column="29">(<argument><expr><name pos:line="1315" pos:column="30">v<pos:position pos:line="1315" pos:column="31"/></name></expr></argument>)<pos:position pos:line="1315" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="1315" pos:column="33"/></expr_stmt>
              }<pos:position pos:line="1316" pos:column="16"/></block></for>
              <expr_stmt><expr><name pos:line="1317" pos:column="15">jmp6<pos:position pos:line="1317" pos:column="19"/></name> <operator pos:line="1317" pos:column="20">=<pos:position pos:line="1317" pos:column="21"/></operator> <call><name pos:line="1317" pos:column="22">sqlite3VdbeAddOp1<pos:position pos:line="1317" pos:column="39"/></name><argument_list pos:line="1317" pos:column="39">(<argument><expr><name pos:line="1317" pos:column="40">v<pos:position pos:line="1317" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="1317" pos:column="43">OP_Next<pos:position pos:line="1317" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1317" pos:column="52">iIdxCur<pos:position pos:line="1317" pos:column="59"/></name><operator pos:line="1317" pos:column="59">+<pos:position pos:line="1317" pos:column="60"/></operator><name pos:line="1317" pos:column="60">j<pos:position pos:line="1317" pos:column="61"/></name></expr></argument>)<pos:position pos:line="1317" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1317" pos:column="63"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1317" pos:column="64">VdbeCoverage<pos:position pos:line="1317" pos:column="76"/></name><argument_list pos:line="1317" pos:column="76">(<argument><expr><name pos:line="1317" pos:column="77">v<pos:position pos:line="1317" pos:column="78"/></name></expr></argument>)<pos:position pos:line="1317" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="1317" pos:column="80"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="1318" pos:column="15">sqlite3VdbeGoto<pos:position pos:line="1318" pos:column="30"/></name><argument_list pos:line="1318" pos:column="30">(<argument><expr><name pos:line="1318" pos:column="31">v<pos:position pos:line="1318" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1318" pos:column="34">uniqOk<pos:position pos:line="1318" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1318" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1318" pos:column="42"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="1319" pos:column="15">sqlite3VdbeJumpHere<pos:position pos:line="1319" pos:column="34"/></name><argument_list pos:line="1319" pos:column="34">(<argument><expr><name pos:line="1319" pos:column="35">v<pos:position pos:line="1319" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1319" pos:column="38">jmp6<pos:position pos:line="1319" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1319" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1319" pos:column="44"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="1320" pos:column="15">sqlite3VdbeAddOp4Int<pos:position pos:line="1320" pos:column="35"/></name><argument_list pos:line="1320" pos:column="35">(<argument><expr><name pos:line="1320" pos:column="36">v<pos:position pos:line="1320" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1320" pos:column="39">OP_IdxGT<pos:position pos:line="1320" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="1320" pos:column="49">iIdxCur<pos:position pos:line="1320" pos:column="56"/></name><operator pos:line="1320" pos:column="56">+<pos:position pos:line="1320" pos:column="57"/></operator><name pos:line="1320" pos:column="57">j<pos:position pos:line="1320" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="1320" pos:column="60">uniqOk<pos:position pos:line="1320" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="1320" pos:column="68">r1<pos:position pos:line="1320" pos:column="70"/></name></expr></argument>,
                                   <argument><expr><name><name pos:line="1321" pos:column="36">pIdx<pos:position pos:line="1321" pos:column="40"/></name><operator pos:line="1321" pos:column="40">-&gt;<pos:position pos:line="1321" pos:column="45"/></operator><name pos:line="1321" pos:column="42">nKeyCol<pos:position pos:line="1321" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="1321" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1321" pos:column="51"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1321" pos:column="52">VdbeCoverage<pos:position pos:line="1321" pos:column="64"/></name><argument_list pos:line="1321" pos:column="64">(<argument><expr><name pos:line="1321" pos:column="65">v<pos:position pos:line="1321" pos:column="66"/></name></expr></argument>)<pos:position pos:line="1321" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1321" pos:column="68"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="1322" pos:column="15">sqlite3VdbeLoadString<pos:position pos:line="1322" pos:column="36"/></name><argument_list pos:line="1322" pos:column="36">(<argument><expr><name pos:line="1322" pos:column="37">v<pos:position pos:line="1322" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1322" pos:column="40">3<pos:position pos:line="1322" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1322" pos:column="43">"non-unique entry in index "<pos:position pos:line="1322" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="1322" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1322" pos:column="73"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="1323" pos:column="15">sqlite3VdbeGoto<pos:position pos:line="1323" pos:column="30"/></name><argument_list pos:line="1323" pos:column="30">(<argument><expr><name pos:line="1323" pos:column="31">v<pos:position pos:line="1323" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1323" pos:column="34">jmp5<pos:position pos:line="1323" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1323" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1323" pos:column="40"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="1324" pos:column="15">sqlite3VdbeResolveLabel<pos:position pos:line="1324" pos:column="38"/></name><argument_list pos:line="1324" pos:column="38">(<argument><expr><name pos:line="1324" pos:column="39">v<pos:position pos:line="1324" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="1324" pos:column="42">uniqOk<pos:position pos:line="1324" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1324" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1324" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="1325" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="1326" pos:column="13">sqlite3VdbeJumpHere<pos:position pos:line="1326" pos:column="32"/></name><argument_list pos:line="1326" pos:column="32">(<argument><expr><name pos:line="1326" pos:column="33">v<pos:position pos:line="1326" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1326" pos:column="36">jmp4<pos:position pos:line="1326" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1326" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1326" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1327" pos:column="13">sqlite3ResolvePartIdxLabel<pos:position pos:line="1327" pos:column="39"/></name><argument_list pos:line="1327" pos:column="39">(<argument><expr><name pos:line="1327" pos:column="40">pParse<pos:position pos:line="1327" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1327" pos:column="48">jmp3<pos:position pos:line="1327" pos:column="52"/></name></expr></argument>)<pos:position pos:line="1327" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1327" pos:column="54"/></expr_stmt>
          }<pos:position pos:line="1328" pos:column="12"/></block></for>
        }<pos:position pos:line="1329" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="1330" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="1330" pos:column="26"/></name><argument_list pos:line="1330" pos:column="26">(<argument><expr><name pos:line="1330" pos:column="27">v<pos:position pos:line="1330" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1330" pos:column="30">OP_Next<pos:position pos:line="1330" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1330" pos:column="39">iDataCur<pos:position pos:line="1330" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="1330" pos:column="49">loopTop<pos:position pos:line="1330" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1330" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="1330" pos:column="58"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1330" pos:column="59">VdbeCoverage<pos:position pos:line="1330" pos:column="71"/></name><argument_list pos:line="1330" pos:column="71">(<argument><expr><name pos:line="1330" pos:column="72">v<pos:position pos:line="1330" pos:column="73"/></name></expr></argument>)<pos:position pos:line="1330" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="1330" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1331" pos:column="9">sqlite3VdbeJumpHere<pos:position pos:line="1331" pos:column="28"/></name><argument_list pos:line="1331" pos:column="28">(<argument><expr><name pos:line="1331" pos:column="29">v<pos:position pos:line="1331" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1331" pos:column="32">loopTop<pos:position pos:line="1331" pos:column="39"/></name><operator pos:line="1331" pos:column="39">-<pos:position pos:line="1331" pos:column="40"/></operator><literal type="number" pos:line="1331" pos:column="40">1<pos:position pos:line="1331" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="1331" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="1331" pos:column="43"/></expr_stmt>
<cpp:ifndef pos:line="1332" pos:column="1">#<cpp:directive pos:line="1332" pos:column="2">ifndef<pos:position pos:line="1332" pos:column="8"/></cpp:directive> <name pos:line="1332" pos:column="9">SQLITE_OMIT_BTREECOUNT<pos:position pos:line="1332" pos:column="31"/></name></cpp:ifndef>
        <if pos:line="1333" pos:column="9">if<condition pos:line="1333" pos:column="11">( <expr><operator pos:line="1333" pos:column="13">!<pos:position pos:line="1333" pos:column="14"/></operator><name pos:line="1333" pos:column="14">isQuick<pos:position pos:line="1333" pos:column="21"/></name></expr> )<pos:position pos:line="1333" pos:column="23"/></condition><then><block pos:line="1333" pos:column="23">{
          <expr_stmt><expr><call><name pos:line="1334" pos:column="11">sqlite3VdbeLoadString<pos:position pos:line="1334" pos:column="32"/></name><argument_list pos:line="1334" pos:column="32">(<argument><expr><name pos:line="1334" pos:column="33">v<pos:position pos:line="1334" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1334" pos:column="36">2<pos:position pos:line="1334" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1334" pos:column="39">"wrong # of entries in index "<pos:position pos:line="1334" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="1334" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1334" pos:column="71"/></expr_stmt>
          <for pos:line="1335" pos:column="11">for<control pos:line="1335" pos:column="14">(<init><expr><name pos:line="1335" pos:column="15">j<pos:position pos:line="1335" pos:column="16"/></name><operator pos:line="1335" pos:column="16">=<pos:position pos:line="1335" pos:column="17"/></operator><literal type="number" pos:line="1335" pos:column="17">0<pos:position pos:line="1335" pos:column="18"/></literal></expr><operator pos:line="1335" pos:column="18">,<pos:position pos:line="1335" pos:column="19"/></operator> <expr><name pos:line="1335" pos:column="20">pIdx<pos:position pos:line="1335" pos:column="24"/></name><operator pos:line="1335" pos:column="24">=<pos:position pos:line="1335" pos:column="25"/></operator><name><name pos:line="1335" pos:column="25">pTab<pos:position pos:line="1335" pos:column="29"/></name><operator pos:line="1335" pos:column="29">-&gt;<pos:position pos:line="1335" pos:column="34"/></operator><name pos:line="1335" pos:column="31">pIndex<pos:position pos:line="1335" pos:column="37"/></name></name></expr>;<pos:position pos:line="1335" pos:column="38"/></init> <condition><expr><name pos:line="1335" pos:column="39">pIdx<pos:position pos:line="1335" pos:column="43"/></name></expr>;<pos:position pos:line="1335" pos:column="44"/></condition> <incr><expr><name pos:line="1335" pos:column="45">pIdx<pos:position pos:line="1335" pos:column="49"/></name><operator pos:line="1335" pos:column="49">=<pos:position pos:line="1335" pos:column="50"/></operator><name><name pos:line="1335" pos:column="50">pIdx<pos:position pos:line="1335" pos:column="54"/></name><operator pos:line="1335" pos:column="54">-&gt;<pos:position pos:line="1335" pos:column="59"/></operator><name pos:line="1335" pos:column="56">pNext<pos:position pos:line="1335" pos:column="61"/></name></name></expr><operator pos:line="1335" pos:column="61">,<pos:position pos:line="1335" pos:column="62"/></operator> <expr><name pos:line="1335" pos:column="63">j<pos:position pos:line="1335" pos:column="64"/></name><operator pos:line="1335" pos:column="64">++<pos:position pos:line="1335" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="1335" pos:column="67"/></control><block pos:line="1335" pos:column="67">{
            <if pos:line="1336" pos:column="13">if<condition pos:line="1336" pos:column="15">( <expr><name pos:line="1336" pos:column="17">pPk<pos:position pos:line="1336" pos:column="20"/></name><operator pos:line="1336" pos:column="20">==<pos:position pos:line="1336" pos:column="22"/></operator><name pos:line="1336" pos:column="22">pIdx<pos:position pos:line="1336" pos:column="26"/></name></expr> )<pos:position pos:line="1336" pos:column="28"/></condition><then pos:line="1336" pos:column="28"> <block type="pseudo"><continue pos:line="1336" pos:column="29">continue;<pos:position pos:line="1336" pos:column="38"/></continue></block></then></if>
            <expr_stmt><expr><call><name pos:line="1337" pos:column="13">sqlite3VdbeAddOp2<pos:position pos:line="1337" pos:column="30"/></name><argument_list pos:line="1337" pos:column="30">(<argument><expr><name pos:line="1337" pos:column="31">v<pos:position pos:line="1337" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1337" pos:column="34">OP_Count<pos:position pos:line="1337" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1337" pos:column="44">iIdxCur<pos:position pos:line="1337" pos:column="51"/></name><operator pos:line="1337" pos:column="51">+<pos:position pos:line="1337" pos:column="52"/></operator><name pos:line="1337" pos:column="52">j<pos:position pos:line="1337" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1337" pos:column="55">3<pos:position pos:line="1337" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="1337" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="1337" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name pos:line="1338" pos:column="13">addr<pos:position pos:line="1338" pos:column="17"/></name> <operator pos:line="1338" pos:column="18">=<pos:position pos:line="1338" pos:column="19"/></operator> <call><name pos:line="1338" pos:column="20">sqlite3VdbeAddOp3<pos:position pos:line="1338" pos:column="37"/></name><argument_list pos:line="1338" pos:column="37">(<argument><expr><name pos:line="1338" pos:column="38">v<pos:position pos:line="1338" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1338" pos:column="41">OP_Eq<pos:position pos:line="1338" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1338" pos:column="48">8<pos:position pos:line="1338" pos:column="49"/></literal><operator pos:line="1338" pos:column="49">+<pos:position pos:line="1338" pos:column="50"/></operator><name pos:line="1338" pos:column="50">j<pos:position pos:line="1338" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1338" pos:column="53">0<pos:position pos:line="1338" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1338" pos:column="56">3<pos:position pos:line="1338" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="1338" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1338" pos:column="59"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1338" pos:column="60">VdbeCoverage<pos:position pos:line="1338" pos:column="72"/></name><argument_list pos:line="1338" pos:column="72">(<argument><expr><name pos:line="1338" pos:column="73">v<pos:position pos:line="1338" pos:column="74"/></name></expr></argument>)<pos:position pos:line="1338" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="1338" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1339" pos:column="13">sqlite3VdbeChangeP5<pos:position pos:line="1339" pos:column="32"/></name><argument_list pos:line="1339" pos:column="32">(<argument><expr><name pos:line="1339" pos:column="33">v<pos:position pos:line="1339" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1339" pos:column="36">SQLITE_NOTNULL<pos:position pos:line="1339" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1339" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1339" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1340" pos:column="13">sqlite3VdbeLoadString<pos:position pos:line="1340" pos:column="34"/></name><argument_list pos:line="1340" pos:column="34">(<argument><expr><name pos:line="1340" pos:column="35">v<pos:position pos:line="1340" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1340" pos:column="38">4<pos:position pos:line="1340" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="1340" pos:column="41">pIdx<pos:position pos:line="1340" pos:column="45"/></name><operator pos:line="1340" pos:column="45">-&gt;<pos:position pos:line="1340" pos:column="50"/></operator><name pos:line="1340" pos:column="47">zName<pos:position pos:line="1340" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="1340" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1340" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1341" pos:column="13">sqlite3VdbeAddOp3<pos:position pos:line="1341" pos:column="30"/></name><argument_list pos:line="1341" pos:column="30">(<argument><expr><name pos:line="1341" pos:column="31">v<pos:position pos:line="1341" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1341" pos:column="34">OP_Concat<pos:position pos:line="1341" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1341" pos:column="45">4<pos:position pos:line="1341" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1341" pos:column="48">2<pos:position pos:line="1341" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1341" pos:column="51">3<pos:position pos:line="1341" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="1341" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1341" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1342" pos:column="13">integrityCheckResultRow<pos:position pos:line="1342" pos:column="36"/></name><argument_list pos:line="1342" pos:column="36">(<argument><expr><name pos:line="1342" pos:column="37">v<pos:position pos:line="1342" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1342" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1342" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="1343" pos:column="13">sqlite3VdbeJumpHere<pos:position pos:line="1343" pos:column="32"/></name><argument_list pos:line="1343" pos:column="32">(<argument><expr><name pos:line="1343" pos:column="33">v<pos:position pos:line="1343" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1343" pos:column="36">addr<pos:position pos:line="1343" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1343" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1343" pos:column="42"/></expr_stmt>
          }<pos:position pos:line="1344" pos:column="12"/></block></for>
        }<pos:position pos:line="1345" pos:column="10"/></block></then></if>
<cpp:endif pos:line="1346" pos:column="1">#<cpp:directive pos:line="1346" pos:column="2">endif<pos:position pos:line="1346" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="1346" pos:column="8">/* SQLITE_OMIT_BTREECOUNT */</comment>
      }<pos:position pos:line="1347" pos:column="8"/></block></for> 
    }<pos:position pos:line="1348" pos:column="6"/></block></for>
    <block pos:line="1349" pos:column="5">{
      <decl_stmt><decl><specifier pos:line="1350" pos:column="7">static<pos:position pos:line="1350" pos:column="13"/></specifier> <type><specifier pos:line="1350" pos:column="14">const<pos:position pos:line="1350" pos:column="19"/></specifier> <name pos:line="1350" pos:column="20">int<pos:position pos:line="1350" pos:column="23"/></name></type> <name pos:line="1350" pos:column="24">iLn<pos:position pos:line="1350" pos:column="27"/></name> <init pos:line="1350" pos:column="28">= <expr><call><name pos:line="1350" pos:column="30">VDBE_OFFSET_LINENO<pos:position pos:line="1350" pos:column="48"/></name><argument_list pos:line="1350" pos:column="48">(<argument><expr><literal type="number" pos:line="1350" pos:column="49">2<pos:position pos:line="1350" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="1350" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1350" pos:column="52"/></decl_stmt>
      <decl_stmt><decl><specifier pos:line="1351" pos:column="7">static<pos:position pos:line="1351" pos:column="13"/></specifier> <type><specifier pos:line="1351" pos:column="14">const<pos:position pos:line="1351" pos:column="19"/></specifier> <name pos:line="1351" pos:column="20">VdbeOpList<pos:position pos:line="1351" pos:column="30"/></name></type> <name><name pos:line="1351" pos:column="31">endCode<pos:position pos:line="1351" pos:column="38"/></name><index pos:line="1351" pos:column="38">[]<pos:position pos:line="1351" pos:column="40"/></index></name> <init pos:line="1351" pos:column="41">= <expr><block pos:line="1351" pos:column="43">{
        <expr><block pos:line="1352" pos:column="9">{ <expr><name pos:line="1352" pos:column="11">OP_AddImm<pos:position pos:line="1352" pos:column="20"/></name></expr>,      <expr><literal type="number" pos:line="1352" pos:column="27">1<pos:position pos:line="1352" pos:column="28"/></literal></expr>, <expr><literal type="number" pos:line="1352" pos:column="30">0<pos:position pos:line="1352" pos:column="31"/></literal></expr>,        <expr><literal type="number" pos:line="1352" pos:column="40">0<pos:position pos:line="1352" pos:column="41"/></literal></expr>}<pos:position pos:line="1352" pos:column="42"/></block></expr>,    <comment type="block" pos:line="1352" pos:column="47">/* 0 */</comment>
        <expr><block pos:line="1353" pos:column="9">{ <expr><name pos:line="1353" pos:column="11">OP_IfNotZero<pos:position pos:line="1353" pos:column="23"/></name></expr>,   <expr><literal type="number" pos:line="1353" pos:column="27">1<pos:position pos:line="1353" pos:column="28"/></literal></expr>, <expr><literal type="number" pos:line="1353" pos:column="30">4<pos:position pos:line="1353" pos:column="31"/></literal></expr>,        <expr><literal type="number" pos:line="1353" pos:column="40">0<pos:position pos:line="1353" pos:column="41"/></literal></expr>}<pos:position pos:line="1353" pos:column="42"/></block></expr>,    <comment type="block" pos:line="1353" pos:column="47">/* 1 */</comment>
        <expr><block pos:line="1354" pos:column="9">{ <expr><name pos:line="1354" pos:column="11">OP_String8<pos:position pos:line="1354" pos:column="21"/></name></expr>,     <expr><literal type="number" pos:line="1354" pos:column="27">0<pos:position pos:line="1354" pos:column="28"/></literal></expr>, <expr><literal type="number" pos:line="1354" pos:column="30">3<pos:position pos:line="1354" pos:column="31"/></literal></expr>,        <expr><literal type="number" pos:line="1354" pos:column="40">0<pos:position pos:line="1354" pos:column="41"/></literal></expr>}<pos:position pos:line="1354" pos:column="42"/></block></expr>,    <comment type="block" pos:line="1354" pos:column="47">/* 2 */</comment>
        <expr><block pos:line="1355" pos:column="9">{ <expr><name pos:line="1355" pos:column="11">OP_ResultRow<pos:position pos:line="1355" pos:column="23"/></name></expr>,   <expr><literal type="number" pos:line="1355" pos:column="27">3<pos:position pos:line="1355" pos:column="28"/></literal></expr>, <expr><literal type="number" pos:line="1355" pos:column="30">1<pos:position pos:line="1355" pos:column="31"/></literal></expr>,        <expr><literal type="number" pos:line="1355" pos:column="40">0<pos:position pos:line="1355" pos:column="41"/></literal></expr>}<pos:position pos:line="1355" pos:column="42"/></block></expr>,    <comment type="block" pos:line="1355" pos:column="47">/* 3 */</comment>
        <expr><block pos:line="1356" pos:column="9">{ <expr><name pos:line="1356" pos:column="11">OP_Halt<pos:position pos:line="1356" pos:column="18"/></name></expr>,        <expr><literal type="number" pos:line="1356" pos:column="27">0<pos:position pos:line="1356" pos:column="28"/></literal></expr>, <expr><literal type="number" pos:line="1356" pos:column="30">0<pos:position pos:line="1356" pos:column="31"/></literal></expr>,        <expr><literal type="number" pos:line="1356" pos:column="40">0<pos:position pos:line="1356" pos:column="41"/></literal></expr>}<pos:position pos:line="1356" pos:column="42"/></block></expr>,    <comment type="block" pos:line="1356" pos:column="47">/* 4 */</comment>
        <expr><block pos:line="1357" pos:column="9">{ <expr><name pos:line="1357" pos:column="11">OP_String8<pos:position pos:line="1357" pos:column="21"/></name></expr>,     <expr><literal type="number" pos:line="1357" pos:column="27">0<pos:position pos:line="1357" pos:column="28"/></literal></expr>, <expr><literal type="number" pos:line="1357" pos:column="30">3<pos:position pos:line="1357" pos:column="31"/></literal></expr>,        <expr><literal type="number" pos:line="1357" pos:column="40">0<pos:position pos:line="1357" pos:column="41"/></literal></expr>}<pos:position pos:line="1357" pos:column="42"/></block></expr>,    <comment type="block" pos:line="1357" pos:column="47">/* 5 */</comment>
        <expr><block pos:line="1358" pos:column="9">{ <expr><name pos:line="1358" pos:column="11">OP_Goto<pos:position pos:line="1358" pos:column="18"/></name></expr>,        <expr><literal type="number" pos:line="1358" pos:column="27">0<pos:position pos:line="1358" pos:column="28"/></literal></expr>, <expr><literal type="number" pos:line="1358" pos:column="30">3<pos:position pos:line="1358" pos:column="31"/></literal></expr>,        <expr><literal type="number" pos:line="1358" pos:column="40">0<pos:position pos:line="1358" pos:column="41"/></literal></expr>}<pos:position pos:line="1358" pos:column="42"/></block></expr>,    <comment type="block" pos:line="1358" pos:column="47">/* 6 */</comment>
      }<pos:position pos:line="1359" pos:column="8"/></block></expr></init></decl>;<pos:position pos:line="1359" pos:column="9"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="1360" pos:column="7">VdbeOp<pos:position pos:line="1360" pos:column="13"/></name> <modifier pos:line="1360" pos:column="14">*<pos:position pos:line="1360" pos:column="15"/></modifier></type><name pos:line="1360" pos:column="15">aOp<pos:position pos:line="1360" pos:column="18"/></name></decl>;<pos:position pos:line="1360" pos:column="19"/></decl_stmt>

      <expr_stmt><expr><name pos:line="1362" pos:column="7">aOp<pos:position pos:line="1362" pos:column="10"/></name> <operator pos:line="1362" pos:column="11">=<pos:position pos:line="1362" pos:column="12"/></operator> <call><name pos:line="1362" pos:column="13">sqlite3VdbeAddOpList<pos:position pos:line="1362" pos:column="33"/></name><argument_list pos:line="1362" pos:column="33">(<argument><expr><name pos:line="1362" pos:column="34">v<pos:position pos:line="1362" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="1362" pos:column="37">ArraySize<pos:position pos:line="1362" pos:column="46"/></name><argument_list pos:line="1362" pos:column="46">(<argument><expr><name pos:line="1362" pos:column="47">endCode<pos:position pos:line="1362" pos:column="54"/></name></expr></argument>)<pos:position pos:line="1362" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="1362" pos:column="57">endCode<pos:position pos:line="1362" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="1362" pos:column="66">iLn<pos:position pos:line="1362" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1362" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1362" pos:column="71"/></expr_stmt>
      <if pos:line="1363" pos:column="7">if<condition pos:line="1363" pos:column="9">( <expr><name pos:line="1363" pos:column="11">aOp<pos:position pos:line="1363" pos:column="14"/></name></expr> )<pos:position pos:line="1363" pos:column="16"/></condition><then><block pos:line="1363" pos:column="16">{
        <expr_stmt><expr><name><name pos:line="1364" pos:column="9">aOp<pos:position pos:line="1364" pos:column="12"/></name><index pos:line="1364" pos:column="12">[<expr><literal type="number" pos:line="1364" pos:column="13">0<pos:position pos:line="1364" pos:column="14"/></literal></expr>]<pos:position pos:line="1364" pos:column="15"/></index></name><operator pos:line="1364" pos:column="15">.<pos:position pos:line="1364" pos:column="16"/></operator><name pos:line="1364" pos:column="16">p2<pos:position pos:line="1364" pos:column="18"/></name> <operator pos:line="1364" pos:column="19">=<pos:position pos:line="1364" pos:column="20"/></operator> <literal type="number" pos:line="1364" pos:column="21">1<pos:position pos:line="1364" pos:column="22"/></literal><operator pos:line="1364" pos:column="22">-<pos:position pos:line="1364" pos:column="23"/></operator><name pos:line="1364" pos:column="23">mxErr<pos:position pos:line="1364" pos:column="28"/></name></expr>;<pos:position pos:line="1364" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="1365" pos:column="9">aOp<pos:position pos:line="1365" pos:column="12"/></name><index pos:line="1365" pos:column="12">[<expr><literal type="number" pos:line="1365" pos:column="13">2<pos:position pos:line="1365" pos:column="14"/></literal></expr>]<pos:position pos:line="1365" pos:column="15"/></index></name><operator pos:line="1365" pos:column="15">.<pos:position pos:line="1365" pos:column="16"/></operator><name pos:line="1365" pos:column="16">p4type<pos:position pos:line="1365" pos:column="22"/></name> <operator pos:line="1365" pos:column="23">=<pos:position pos:line="1365" pos:column="24"/></operator> <name pos:line="1365" pos:column="25">P4_STATIC<pos:position pos:line="1365" pos:column="34"/></name></expr>;<pos:position pos:line="1365" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="1366" pos:column="9">aOp<pos:position pos:line="1366" pos:column="12"/></name><index pos:line="1366" pos:column="12">[<expr><literal type="number" pos:line="1366" pos:column="13">2<pos:position pos:line="1366" pos:column="14"/></literal></expr>]<pos:position pos:line="1366" pos:column="15"/></index></name><operator pos:line="1366" pos:column="15">.<pos:position pos:line="1366" pos:column="16"/></operator><name><name pos:line="1366" pos:column="16">p4<pos:position pos:line="1366" pos:column="18"/></name><operator pos:line="1366" pos:column="18">.<pos:position pos:line="1366" pos:column="19"/></operator><name pos:line="1366" pos:column="19">z<pos:position pos:line="1366" pos:column="20"/></name></name> <operator pos:line="1366" pos:column="21">=<pos:position pos:line="1366" pos:column="22"/></operator> <literal type="string" pos:line="1366" pos:column="23">"ok"<pos:position pos:line="1366" pos:column="27"/></literal></expr>;<pos:position pos:line="1366" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="1367" pos:column="9">aOp<pos:position pos:line="1367" pos:column="12"/></name><index pos:line="1367" pos:column="12">[<expr><literal type="number" pos:line="1367" pos:column="13">5<pos:position pos:line="1367" pos:column="14"/></literal></expr>]<pos:position pos:line="1367" pos:column="15"/></index></name><operator pos:line="1367" pos:column="15">.<pos:position pos:line="1367" pos:column="16"/></operator><name pos:line="1367" pos:column="16">p4type<pos:position pos:line="1367" pos:column="22"/></name> <operator pos:line="1367" pos:column="23">=<pos:position pos:line="1367" pos:column="24"/></operator> <name pos:line="1367" pos:column="25">P4_STATIC<pos:position pos:line="1367" pos:column="34"/></name></expr>;<pos:position pos:line="1367" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="1368" pos:column="9">aOp<pos:position pos:line="1368" pos:column="12"/></name><index pos:line="1368" pos:column="12">[<expr><literal type="number" pos:line="1368" pos:column="13">5<pos:position pos:line="1368" pos:column="14"/></literal></expr>]<pos:position pos:line="1368" pos:column="15"/></index></name><operator pos:line="1368" pos:column="15">.<pos:position pos:line="1368" pos:column="16"/></operator><name><name pos:line="1368" pos:column="16">p4<pos:position pos:line="1368" pos:column="18"/></name><operator pos:line="1368" pos:column="18">.<pos:position pos:line="1368" pos:column="19"/></operator><name pos:line="1368" pos:column="19">z<pos:position pos:line="1368" pos:column="20"/></name></name> <operator pos:line="1368" pos:column="21">=<pos:position pos:line="1368" pos:column="22"/></operator> <operator pos:line="1368" pos:column="23">(<pos:position pos:line="1368" pos:column="24"/></operator><name pos:line="1368" pos:column="24">char<pos:position pos:line="1368" pos:column="28"/></name><operator pos:line="1368" pos:column="28">*<pos:position pos:line="1368" pos:column="29"/></operator><operator pos:line="1368" pos:column="29">)<pos:position pos:line="1368" pos:column="30"/></operator><call><name pos:line="1368" pos:column="30">sqlite3ErrStr<pos:position pos:line="1368" pos:column="43"/></name><argument_list pos:line="1368" pos:column="43">(<argument><expr><name pos:line="1368" pos:column="44">SQLITE_CORRUPT<pos:position pos:line="1368" pos:column="58"/></name></expr></argument>)<pos:position pos:line="1368" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="1368" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="1369" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="1370" pos:column="7">sqlite3VdbeChangeP3<pos:position pos:line="1370" pos:column="26"/></name><argument_list pos:line="1370" pos:column="26">(<argument><expr><name pos:line="1370" pos:column="27">v<pos:position pos:line="1370" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1370" pos:column="30">0<pos:position pos:line="1370" pos:column="31"/></literal></expr></argument>, <argument><expr><call><name pos:line="1370" pos:column="33">sqlite3VdbeCurrentAddr<pos:position pos:line="1370" pos:column="55"/></name><argument_list pos:line="1370" pos:column="55">(<argument><expr><name pos:line="1370" pos:column="56">v<pos:position pos:line="1370" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1370" pos:column="58"/></argument_list></call><operator pos:line="1370" pos:column="58">-<pos:position pos:line="1370" pos:column="59"/></operator><literal type="number" pos:line="1370" pos:column="59">2<pos:position pos:line="1370" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="1370" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1370" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="1371" pos:column="6"/></block>
  }<pos:position pos:line="1372" pos:column="4"/></block>
  <break pos:line="1373" pos:column="3">break;<pos:position pos:line="1373" pos:column="9"/></break>
<cpp:endif pos:line="1374" pos:column="1">#<cpp:directive pos:line="1374" pos:column="2">endif<pos:position pos:line="1374" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="1374" pos:column="8">/* SQLITE_OMIT_INTEGRITY_CHECK */</comment>

<cpp:ifndef pos:line="1376" pos:column="1">#<cpp:directive pos:line="1376" pos:column="2">ifndef<pos:position pos:line="1376" pos:column="8"/></cpp:directive> <name pos:line="1376" pos:column="9">SQLITE_OMIT_UTF16<pos:position pos:line="1376" pos:column="26"/></name></cpp:ifndef>
  <comment type="block" pos:line="1377" pos:column="3">/*
  **   PRAGMA encoding
  **   PRAGMA encoding = "utf-8"|"utf-16"|"utf-16le"|"utf-16be"
  **
  ** In its first form, this pragma returns the encoding of the main
  ** database. If the database is not initialized, it is initialized now.
  **
  ** The second form of this pragma is a no-op if the main database file
  ** has not already been initialized. In this case it sets the default
  ** encoding that will be used for the main database file if a new file
  ** is created. If an existing main database file is opened, then the
  ** default text encoding for the existing database is used.
  ** 
  ** In all cases new databases created using the ATTACH command are
  ** created to use the same default text encoding as the main database. If
  ** the main database has not been initialized and/or created when ATTACH
  ** is executed, this is done before the ATTACH operation.
  **
  ** In the second form this pragma sets the text encoding to be used in
  ** new database files created using this database handle. It is only
  ** useful if invoked immediately after the main database i
  */</comment>
  <case pos:line="1399" pos:column="3">case <expr><name pos:line="1399" pos:column="8">PragTyp_ENCODING<pos:position pos:line="1399" pos:column="24"/></name></expr>:<pos:position pos:line="1399" pos:column="25"/></case> <block pos:line="1399" pos:column="26">{
    <struct><specifier pos:line="1400" pos:column="5">static<pos:position pos:line="1400" pos:column="11"/></specifier> <specifier pos:line="1400" pos:column="12">const<pos:position pos:line="1400" pos:column="17"/></specifier> struct <name pos:line="1400" pos:column="25">EncName<pos:position pos:line="1400" pos:column="32"/></name> <block pos:line="1400" pos:column="33">{<public type="default" pos:line="1400" pos:column="34">
      <decl_stmt><decl><type><name pos:line="1401" pos:column="7">char<pos:position pos:line="1401" pos:column="11"/></name> <modifier pos:line="1401" pos:column="12">*<pos:position pos:line="1401" pos:column="13"/></modifier></type><name pos:line="1401" pos:column="13">zName<pos:position pos:line="1401" pos:column="18"/></name></decl>;<pos:position pos:line="1401" pos:column="19"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="1402" pos:column="7">u8<pos:position pos:line="1402" pos:column="9"/></name></type> <name pos:line="1402" pos:column="10">enc<pos:position pos:line="1402" pos:column="13"/></name></decl>;<pos:position pos:line="1402" pos:column="14"/></decl_stmt>
    <pos:position pos:line="1403" pos:column="5"/></public>}<pos:position pos:line="1403" pos:column="6"/></block> <decl><name><name pos:line="1403" pos:column="7">encnames<pos:position pos:line="1403" pos:column="15"/></name><index pos:line="1403" pos:column="15">[]<pos:position pos:line="1403" pos:column="17"/></index></name> <init pos:line="1403" pos:column="18">= <expr><block pos:line="1403" pos:column="20">{
      <expr><block pos:line="1404" pos:column="7">{ <expr><literal type="string" pos:line="1404" pos:column="9">"UTF8"<pos:position pos:line="1404" pos:column="15"/></literal></expr>,     <expr><name pos:line="1404" pos:column="21">SQLITE_UTF8<pos:position pos:line="1404" pos:column="32"/></name></expr>        }<pos:position pos:line="1404" pos:column="41"/></block></expr>,
      <expr><block pos:line="1405" pos:column="7">{ <expr><literal type="string" pos:line="1405" pos:column="9">"UTF-8"<pos:position pos:line="1405" pos:column="16"/></literal></expr>,    <expr><name pos:line="1405" pos:column="21">SQLITE_UTF8<pos:position pos:line="1405" pos:column="32"/></name></expr>        }<pos:position pos:line="1405" pos:column="41"/></block></expr>,  <comment type="block" pos:line="1405" pos:column="44">/* Must be element [1] */</comment>
      <expr><block pos:line="1406" pos:column="7">{ <expr><literal type="string" pos:line="1406" pos:column="9">"UTF-16le"<pos:position pos:line="1406" pos:column="19"/></literal></expr>, <expr><name pos:line="1406" pos:column="21">SQLITE_UTF16LE<pos:position pos:line="1406" pos:column="35"/></name></expr>     }<pos:position pos:line="1406" pos:column="41"/></block></expr>,  <comment type="block" pos:line="1406" pos:column="44">/* Must be element [2] */</comment>
      <expr><block pos:line="1407" pos:column="7">{ <expr><literal type="string" pos:line="1407" pos:column="9">"UTF-16be"<pos:position pos:line="1407" pos:column="19"/></literal></expr>, <expr><name pos:line="1407" pos:column="21">SQLITE_UTF16BE<pos:position pos:line="1407" pos:column="35"/></name></expr>     }<pos:position pos:line="1407" pos:column="41"/></block></expr>,  <comment type="block" pos:line="1407" pos:column="44">/* Must be element [3] */</comment>
      <expr><block pos:line="1408" pos:column="7">{ <expr><literal type="string" pos:line="1408" pos:column="9">"UTF16le"<pos:position pos:line="1408" pos:column="18"/></literal></expr>,  <expr><name pos:line="1408" pos:column="21">SQLITE_UTF16LE<pos:position pos:line="1408" pos:column="35"/></name></expr>     }<pos:position pos:line="1408" pos:column="41"/></block></expr>,
      <expr><block pos:line="1409" pos:column="7">{ <expr><literal type="string" pos:line="1409" pos:column="9">"UTF16be"<pos:position pos:line="1409" pos:column="18"/></literal></expr>,  <expr><name pos:line="1409" pos:column="21">SQLITE_UTF16BE<pos:position pos:line="1409" pos:column="35"/></name></expr>     }<pos:position pos:line="1409" pos:column="41"/></block></expr>,
      <expr><block pos:line="1410" pos:column="7">{ <expr><literal type="string" pos:line="1410" pos:column="9">"UTF-16"<pos:position pos:line="1410" pos:column="17"/></literal></expr>,   <expr><literal type="number" pos:line="1410" pos:column="21">0<pos:position pos:line="1410" pos:column="22"/></literal></expr>                  }<pos:position pos:line="1410" pos:column="41"/></block></expr>, <comment type="block" pos:line="1410" pos:column="43">/* SQLITE_UTF16NATIVE */</comment>
      <expr><block pos:line="1411" pos:column="7">{ <expr><literal type="string" pos:line="1411" pos:column="9">"UTF16"<pos:position pos:line="1411" pos:column="16"/></literal></expr>,    <expr><literal type="number" pos:line="1411" pos:column="21">0<pos:position pos:line="1411" pos:column="22"/></literal></expr>                  }<pos:position pos:line="1411" pos:column="41"/></block></expr>, <comment type="block" pos:line="1411" pos:column="43">/* SQLITE_UTF16NATIVE */</comment>
      <expr><block pos:line="1412" pos:column="7">{ <expr><literal type="number" pos:line="1412" pos:column="9">0<pos:position pos:line="1412" pos:column="10"/></literal></expr>, <expr><literal type="number" pos:line="1412" pos:column="12">0<pos:position pos:line="1412" pos:column="13"/></literal></expr> }<pos:position pos:line="1412" pos:column="15"/></block></expr>
    }<pos:position pos:line="1413" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="1413" pos:column="7"/></struct>
    <decl_stmt><decl><type><specifier pos:line="1414" pos:column="5">const<pos:position pos:line="1414" pos:column="10"/></specifier> <name><name pos:line="1414" pos:column="11">struct<pos:position pos:line="1414" pos:column="17"/></name> <name pos:line="1414" pos:column="18">EncName<pos:position pos:line="1414" pos:column="25"/></name></name> <modifier pos:line="1414" pos:column="26">*<pos:position pos:line="1414" pos:column="27"/></modifier></type><name pos:line="1414" pos:column="27">pEnc<pos:position pos:line="1414" pos:column="31"/></name></decl>;<pos:position pos:line="1414" pos:column="32"/></decl_stmt>
    <if pos:line="1415" pos:column="5">if<condition pos:line="1415" pos:column="7">( <expr><operator pos:line="1415" pos:column="9">!<pos:position pos:line="1415" pos:column="10"/></operator><name pos:line="1415" pos:column="10">zRight<pos:position pos:line="1415" pos:column="16"/></name></expr> )<pos:position pos:line="1415" pos:column="18"/></condition><then><block pos:line="1415" pos:column="18">{    <comment type="block" pos:line="1415" pos:column="23">/* "PRAGMA encoding" */</comment>
      <if pos:line="1416" pos:column="7">if<condition pos:line="1416" pos:column="9">( <expr><call><name pos:line="1416" pos:column="11">sqlite3ReadSchema<pos:position pos:line="1416" pos:column="28"/></name><argument_list pos:line="1416" pos:column="28">(<argument><expr><name pos:line="1416" pos:column="29">pParse<pos:position pos:line="1416" pos:column="35"/></name></expr></argument>)<pos:position pos:line="1416" pos:column="36"/></argument_list></call></expr> )<pos:position pos:line="1416" pos:column="38"/></condition><then pos:line="1416" pos:column="38"> <block type="pseudo"><goto pos:line="1416" pos:column="39">goto <name pos:line="1416" pos:column="44">pragma_out<pos:position pos:line="1416" pos:column="54"/></name>;<pos:position pos:line="1416" pos:column="55"/></goto></block></then></if>
      <expr_stmt><expr><call><name pos:line="1417" pos:column="7">assert<pos:position pos:line="1417" pos:column="13"/></name><argument_list pos:line="1417" pos:column="13">( <argument><expr><name><name pos:line="1417" pos:column="15">encnames<pos:position pos:line="1417" pos:column="23"/></name><index pos:line="1417" pos:column="23">[<expr><name pos:line="1417" pos:column="24">SQLITE_UTF8<pos:position pos:line="1417" pos:column="35"/></name></expr>]<pos:position pos:line="1417" pos:column="36"/></index></name><operator pos:line="1417" pos:column="36">.<pos:position pos:line="1417" pos:column="37"/></operator><name pos:line="1417" pos:column="37">enc<pos:position pos:line="1417" pos:column="40"/></name><operator pos:line="1417" pos:column="40">==<pos:position pos:line="1417" pos:column="42"/></operator><name pos:line="1417" pos:column="42">SQLITE_UTF8<pos:position pos:line="1417" pos:column="53"/></name></expr></argument> )<pos:position pos:line="1417" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="1417" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1418" pos:column="7">assert<pos:position pos:line="1418" pos:column="13"/></name><argument_list pos:line="1418" pos:column="13">( <argument><expr><name><name pos:line="1418" pos:column="15">encnames<pos:position pos:line="1418" pos:column="23"/></name><index pos:line="1418" pos:column="23">[<expr><name pos:line="1418" pos:column="24">SQLITE_UTF16LE<pos:position pos:line="1418" pos:column="38"/></name></expr>]<pos:position pos:line="1418" pos:column="39"/></index></name><operator pos:line="1418" pos:column="39">.<pos:position pos:line="1418" pos:column="40"/></operator><name pos:line="1418" pos:column="40">enc<pos:position pos:line="1418" pos:column="43"/></name><operator pos:line="1418" pos:column="43">==<pos:position pos:line="1418" pos:column="45"/></operator><name pos:line="1418" pos:column="45">SQLITE_UTF16LE<pos:position pos:line="1418" pos:column="59"/></name></expr></argument> )<pos:position pos:line="1418" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1418" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1419" pos:column="7">assert<pos:position pos:line="1419" pos:column="13"/></name><argument_list pos:line="1419" pos:column="13">( <argument><expr><name><name pos:line="1419" pos:column="15">encnames<pos:position pos:line="1419" pos:column="23"/></name><index pos:line="1419" pos:column="23">[<expr><name pos:line="1419" pos:column="24">SQLITE_UTF16BE<pos:position pos:line="1419" pos:column="38"/></name></expr>]<pos:position pos:line="1419" pos:column="39"/></index></name><operator pos:line="1419" pos:column="39">.<pos:position pos:line="1419" pos:column="40"/></operator><name pos:line="1419" pos:column="40">enc<pos:position pos:line="1419" pos:column="43"/></name><operator pos:line="1419" pos:column="43">==<pos:position pos:line="1419" pos:column="45"/></operator><name pos:line="1419" pos:column="45">SQLITE_UTF16BE<pos:position pos:line="1419" pos:column="59"/></name></expr></argument> )<pos:position pos:line="1419" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1419" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1420" pos:column="7">returnSingleText<pos:position pos:line="1420" pos:column="23"/></name><argument_list pos:line="1420" pos:column="23">(<argument><expr><name pos:line="1420" pos:column="24">v<pos:position pos:line="1420" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="1420" pos:column="27">encnames<pos:position pos:line="1420" pos:column="35"/></name><index pos:line="1420" pos:column="35">[<expr><call><name pos:line="1420" pos:column="36">ENC<pos:position pos:line="1420" pos:column="39"/></name><argument_list pos:line="1420" pos:column="39">(<argument><expr><name><name pos:line="1420" pos:column="40">pParse<pos:position pos:line="1420" pos:column="46"/></name><operator pos:line="1420" pos:column="46">-&gt;<pos:position pos:line="1420" pos:column="51"/></operator><name pos:line="1420" pos:column="48">db<pos:position pos:line="1420" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="1420" pos:column="51"/></argument_list></call></expr>]<pos:position pos:line="1420" pos:column="52"/></index></name><operator pos:line="1420" pos:column="52">.<pos:position pos:line="1420" pos:column="53"/></operator><name pos:line="1420" pos:column="53">zName<pos:position pos:line="1420" pos:column="58"/></name></expr></argument>)<pos:position pos:line="1420" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="1420" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="1421" pos:column="6"/></block></then><else pos:line="1421" pos:column="6">else<block pos:line="1421" pos:column="10">{                        <comment type="block" pos:line="1421" pos:column="35">/* "PRAGMA encoding = XXX" */</comment>
      <comment type="block" pos:line="1422" pos:column="7">/* Only change the value of sqlite.enc if the database handle is not
      ** initialized. If the main database exists, the new sqlite.enc value
      ** will be overwritten when the schema is next loaded. If it does not
      ** already exists, it will be created to use the new encoding value.
      */</comment>
      <if pos:line="1427" pos:column="7">if<condition pos:line="1427" pos:column="9">( 
        <expr><operator pos:line="1428" pos:column="9">!<pos:position pos:line="1428" pos:column="10"/></operator><operator pos:line="1428" pos:column="10">(<pos:position pos:line="1428" pos:column="11"/></operator><call><name pos:line="1428" pos:column="11">DbHasProperty<pos:position pos:line="1428" pos:column="24"/></name><argument_list pos:line="1428" pos:column="24">(<argument><expr><name pos:line="1428" pos:column="25">db<pos:position pos:line="1428" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1428" pos:column="29">0<pos:position pos:line="1428" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="1428" pos:column="32">DB_SchemaLoaded<pos:position pos:line="1428" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1428" pos:column="48"/></argument_list></call><operator pos:line="1428" pos:column="48">)<pos:position pos:line="1428" pos:column="49"/></operator> <operator pos:line="1428" pos:column="50">||<pos:position pos:line="1428" pos:column="52"/></operator> 
        <call><name pos:line="1429" pos:column="9">DbHasProperty<pos:position pos:line="1429" pos:column="22"/></name><argument_list pos:line="1429" pos:column="22">(<argument><expr><name pos:line="1429" pos:column="23">db<pos:position pos:line="1429" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1429" pos:column="27">0<pos:position pos:line="1429" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="1429" pos:column="30">DB_Empty<pos:position pos:line="1429" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1429" pos:column="39"/></argument_list></call></expr> 
      )<pos:position pos:line="1430" pos:column="8"/></condition><then><block pos:line="1430" pos:column="8">{
        <for pos:line="1431" pos:column="9">for<control pos:line="1431" pos:column="12">(<init><expr><name pos:line="1431" pos:column="13">pEnc<pos:position pos:line="1431" pos:column="17"/></name><operator pos:line="1431" pos:column="17">=<pos:position pos:line="1431" pos:column="18"/></operator><operator pos:line="1431" pos:column="18">&amp;<pos:position pos:line="1431" pos:column="23"/></operator><name><name pos:line="1431" pos:column="19">encnames<pos:position pos:line="1431" pos:column="27"/></name><index pos:line="1431" pos:column="27">[<expr><literal type="number" pos:line="1431" pos:column="28">0<pos:position pos:line="1431" pos:column="29"/></literal></expr>]<pos:position pos:line="1431" pos:column="30"/></index></name></expr>;<pos:position pos:line="1431" pos:column="31"/></init> <condition><expr><name><name pos:line="1431" pos:column="32">pEnc<pos:position pos:line="1431" pos:column="36"/></name><operator pos:line="1431" pos:column="36">-&gt;<pos:position pos:line="1431" pos:column="41"/></operator><name pos:line="1431" pos:column="38">zName<pos:position pos:line="1431" pos:column="43"/></name></name></expr>;<pos:position pos:line="1431" pos:column="44"/></condition> <incr><expr><name pos:line="1431" pos:column="45">pEnc<pos:position pos:line="1431" pos:column="49"/></name><operator pos:line="1431" pos:column="49">++<pos:position pos:line="1431" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="1431" pos:column="52"/></control><block pos:line="1431" pos:column="52">{
          <if pos:line="1432" pos:column="11">if<condition pos:line="1432" pos:column="13">( <expr><literal type="number" pos:line="1432" pos:column="15">0<pos:position pos:line="1432" pos:column="16"/></literal><operator pos:line="1432" pos:column="16">==<pos:position pos:line="1432" pos:column="18"/></operator><call><name pos:line="1432" pos:column="18">sqlite3StrICmp<pos:position pos:line="1432" pos:column="32"/></name><argument_list pos:line="1432" pos:column="32">(<argument><expr><name pos:line="1432" pos:column="33">zRight<pos:position pos:line="1432" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="1432" pos:column="41">pEnc<pos:position pos:line="1432" pos:column="45"/></name><operator pos:line="1432" pos:column="45">-&gt;<pos:position pos:line="1432" pos:column="50"/></operator><name pos:line="1432" pos:column="47">zName<pos:position pos:line="1432" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="1432" pos:column="53"/></argument_list></call></expr> )<pos:position pos:line="1432" pos:column="55"/></condition><then><block pos:line="1432" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="1433" pos:column="13">SCHEMA_ENC<pos:position pos:line="1433" pos:column="23"/></name><argument_list pos:line="1433" pos:column="23">(<argument><expr><name pos:line="1433" pos:column="24">db<pos:position pos:line="1433" pos:column="26"/></name></expr></argument>)<pos:position pos:line="1433" pos:column="27"/></argument_list></call> <operator pos:line="1433" pos:column="28">=<pos:position pos:line="1433" pos:column="29"/></operator> <call><name pos:line="1433" pos:column="30">ENC<pos:position pos:line="1433" pos:column="33"/></name><argument_list pos:line="1433" pos:column="33">(<argument><expr><name pos:line="1433" pos:column="34">db<pos:position pos:line="1433" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1433" pos:column="37"/></argument_list></call> <operator pos:line="1433" pos:column="38">=<pos:position pos:line="1433" pos:column="39"/></operator>
                <ternary><condition><expr><name><name pos:line="1434" pos:column="17">pEnc<pos:position pos:line="1434" pos:column="21"/></name><operator pos:line="1434" pos:column="21">-&gt;<pos:position pos:line="1434" pos:column="26"/></operator><name pos:line="1434" pos:column="23">enc<pos:position pos:line="1434" pos:column="26"/></name></name></expr> ?<pos:position pos:line="1434" pos:column="28"/></condition><then pos:line="1434" pos:column="28"> <expr><name><name pos:line="1434" pos:column="29">pEnc<pos:position pos:line="1434" pos:column="33"/></name><operator pos:line="1434" pos:column="33">-&gt;<pos:position pos:line="1434" pos:column="38"/></operator><name pos:line="1434" pos:column="35">enc<pos:position pos:line="1434" pos:column="38"/></name></name></expr> <pos:position pos:line="1434" pos:column="39"/></then><else pos:line="1434" pos:column="39">: <expr><name pos:line="1434" pos:column="41">SQLITE_UTF16NATIVE<pos:position pos:line="1434" pos:column="59"/></name></expr></else></ternary></expr>;<pos:position pos:line="1434" pos:column="60"/></expr_stmt>
            <break pos:line="1435" pos:column="13">break;<pos:position pos:line="1435" pos:column="19"/></break>
          }<pos:position pos:line="1436" pos:column="12"/></block></then></if>
        }<pos:position pos:line="1437" pos:column="10"/></block></for>
        <if pos:line="1438" pos:column="9">if<condition pos:line="1438" pos:column="11">( <expr><operator pos:line="1438" pos:column="13">!<pos:position pos:line="1438" pos:column="14"/></operator><name><name pos:line="1438" pos:column="14">pEnc<pos:position pos:line="1438" pos:column="18"/></name><operator pos:line="1438" pos:column="18">-&gt;<pos:position pos:line="1438" pos:column="23"/></operator><name pos:line="1438" pos:column="20">zName<pos:position pos:line="1438" pos:column="25"/></name></name></expr> )<pos:position pos:line="1438" pos:column="27"/></condition><then><block pos:line="1438" pos:column="27">{
          <expr_stmt><expr><call><name pos:line="1439" pos:column="11">sqlite3ErrorMsg<pos:position pos:line="1439" pos:column="26"/></name><argument_list pos:line="1439" pos:column="26">(<argument><expr><name pos:line="1439" pos:column="27">pParse<pos:position pos:line="1439" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1439" pos:column="35">"unsupported encoding: %s"<pos:position pos:line="1439" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="1439" pos:column="63">zRight<pos:position pos:line="1439" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1439" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1439" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="1440" pos:column="10"/></block></then></if>
      }<pos:position pos:line="1441" pos:column="8"/></block></then></if>
    }<pos:position pos:line="1442" pos:column="6"/></block></else></if>
  }<pos:position pos:line="1443" pos:column="4"/></block>
  <break pos:line="1444" pos:column="3">break;<pos:position pos:line="1444" pos:column="9"/></break>
<cpp:endif pos:line="1445" pos:column="1">#<cpp:directive pos:line="1445" pos:column="2">endif<pos:position pos:line="1445" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="1445" pos:column="8">/* SQLITE_OMIT_UTF16 */</comment>

<cpp:ifndef pos:line="1447" pos:column="1">#<cpp:directive pos:line="1447" pos:column="2">ifndef<pos:position pos:line="1447" pos:column="8"/></cpp:directive> <name pos:line="1447" pos:column="9">SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS<pos:position pos:line="1447" pos:column="43"/></name></cpp:ifndef>
  <comment type="block" pos:line="1448" pos:column="3">/*
  **   PRAGMA [schema.]schema_version
  **   PRAGMA [schema.]schema_version = &lt;integer&gt;
  **
  **   PRAGMA [schema.]user_version
  **   PRAGMA [schema.]user_version = &lt;integer&gt;
  **
  **   PRAGMA [schema.]freelist_count
  **
  **   PRAGMA [schema.]data_version
  **
  **   PRAGMA [schema.]application_id
  **   PRAGMA [schema.]application_id = &lt;integer&gt;
  **
  ** The pragma's schema_version and user_version are used to set or get
  ** the value of the schema-version and user-version, respectively. Both
  ** the schema-version and the user-version are 32-bit signed integers
  ** stored in the database header.
  **
  ** The schema-cookie is usually only manipulated internally by SQLite. It
  ** is incremented by SQLite whenever the database schema is modified (by
  ** creating or dropping a table or index). The schema version is used by
  ** SQLite each time a query is executed to ensure that the internal cache
  ** of the schema used when compiling the SQL query matches the schema of
  ** the database against which the compiled query is actually executed.
  ** Subverting this mechanism by using "PRAGMA schema_version" to modify
  ** the schema-version is potentially dangerous and may lead to program
  ** crashes or database corruption. Use with caution!
  **
  ** The user-version is not used internally by SQLite. It may be used by
  ** applications for any purpose.
  */</comment>
  <case pos:line="1480" pos:column="3">case <expr><name pos:line="1480" pos:column="8">PragTyp_HEADER_VALUE<pos:position pos:line="1480" pos:column="28"/></name></expr>:<pos:position pos:line="1480" pos:column="29"/></case> <block pos:line="1480" pos:column="30">{
    <decl_stmt><decl><type><name pos:line="1481" pos:column="5">int<pos:position pos:line="1481" pos:column="8"/></name></type> <name pos:line="1481" pos:column="9">iCookie<pos:position pos:line="1481" pos:column="16"/></name> <init pos:line="1481" pos:column="17">= <expr><name><name pos:line="1481" pos:column="19">pPragma<pos:position pos:line="1481" pos:column="26"/></name><operator pos:line="1481" pos:column="26">-&gt;<pos:position pos:line="1481" pos:column="31"/></operator><name pos:line="1481" pos:column="28">iArg<pos:position pos:line="1481" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="1481" pos:column="33"/></decl_stmt>  <comment type="block" pos:line="1481" pos:column="35">/* Which cookie to read or write */</comment>
    <expr_stmt><expr><call><name pos:line="1482" pos:column="5">sqlite3VdbeUsesBtree<pos:position pos:line="1482" pos:column="25"/></name><argument_list pos:line="1482" pos:column="25">(<argument><expr><name pos:line="1482" pos:column="26">v<pos:position pos:line="1482" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1482" pos:column="29">iDb<pos:position pos:line="1482" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1482" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1482" pos:column="34"/></expr_stmt>
    <if pos:line="1483" pos:column="5">if<condition pos:line="1483" pos:column="7">( <expr><name pos:line="1483" pos:column="9">zRight<pos:position pos:line="1483" pos:column="15"/></name> <operator pos:line="1483" pos:column="16">&amp;&amp;<pos:position pos:line="1483" pos:column="26"/></operator> <operator pos:line="1483" pos:column="19">(<pos:position pos:line="1483" pos:column="20"/></operator><name><name pos:line="1483" pos:column="20">pPragma<pos:position pos:line="1483" pos:column="27"/></name><operator pos:line="1483" pos:column="27">-&gt;<pos:position pos:line="1483" pos:column="32"/></operator><name pos:line="1483" pos:column="29">mPragFlg<pos:position pos:line="1483" pos:column="37"/></name></name> <operator pos:line="1483" pos:column="38">&amp;<pos:position pos:line="1483" pos:column="43"/></operator> <name pos:line="1483" pos:column="40">PragFlg_ReadOnly<pos:position pos:line="1483" pos:column="56"/></name><operator pos:line="1483" pos:column="56">)<pos:position pos:line="1483" pos:column="57"/></operator><operator pos:line="1483" pos:column="57">==<pos:position pos:line="1483" pos:column="59"/></operator><literal type="number" pos:line="1483" pos:column="59">0<pos:position pos:line="1483" pos:column="60"/></literal></expr> )<pos:position pos:line="1483" pos:column="62"/></condition><then><block pos:line="1483" pos:column="62">{
      <comment type="block" pos:line="1484" pos:column="7">/* Write the specified cookie value */</comment>
      <decl_stmt><decl><specifier pos:line="1485" pos:column="7">static<pos:position pos:line="1485" pos:column="13"/></specifier> <type><specifier pos:line="1485" pos:column="14">const<pos:position pos:line="1485" pos:column="19"/></specifier> <name pos:line="1485" pos:column="20">VdbeOpList<pos:position pos:line="1485" pos:column="30"/></name></type> <name><name pos:line="1485" pos:column="31">setCookie<pos:position pos:line="1485" pos:column="40"/></name><index pos:line="1485" pos:column="40">[]<pos:position pos:line="1485" pos:column="42"/></index></name> <init pos:line="1485" pos:column="43">= <expr><block pos:line="1485" pos:column="45">{
        <expr><block pos:line="1486" pos:column="9">{ <expr><name pos:line="1486" pos:column="11">OP_Transaction<pos:position pos:line="1486" pos:column="25"/></name></expr>,    <expr><literal type="number" pos:line="1486" pos:column="30">0<pos:position pos:line="1486" pos:column="31"/></literal></expr>,  <expr><literal type="number" pos:line="1486" pos:column="34">1<pos:position pos:line="1486" pos:column="35"/></literal></expr>,  <expr><literal type="number" pos:line="1486" pos:column="38">0<pos:position pos:line="1486" pos:column="39"/></literal></expr>}<pos:position pos:line="1486" pos:column="40"/></block></expr>,    <comment type="block" pos:line="1486" pos:column="45">/* 0 */</comment>
        <expr><block pos:line="1487" pos:column="9">{ <expr><name pos:line="1487" pos:column="11">OP_SetCookie<pos:position pos:line="1487" pos:column="23"/></name></expr>,      <expr><literal type="number" pos:line="1487" pos:column="30">0<pos:position pos:line="1487" pos:column="31"/></literal></expr>,  <expr><literal type="number" pos:line="1487" pos:column="34">0<pos:position pos:line="1487" pos:column="35"/></literal></expr>,  <expr><literal type="number" pos:line="1487" pos:column="38">0<pos:position pos:line="1487" pos:column="39"/></literal></expr>}<pos:position pos:line="1487" pos:column="40"/></block></expr>,    <comment type="block" pos:line="1487" pos:column="45">/* 1 */</comment>
      }<pos:position pos:line="1488" pos:column="8"/></block></expr></init></decl>;<pos:position pos:line="1488" pos:column="9"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="1489" pos:column="7">VdbeOp<pos:position pos:line="1489" pos:column="13"/></name> <modifier pos:line="1489" pos:column="14">*<pos:position pos:line="1489" pos:column="15"/></modifier></type><name pos:line="1489" pos:column="15">aOp<pos:position pos:line="1489" pos:column="18"/></name></decl>;<pos:position pos:line="1489" pos:column="19"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="1490" pos:column="7">sqlite3VdbeVerifyNoMallocRequired<pos:position pos:line="1490" pos:column="40"/></name><argument_list pos:line="1490" pos:column="40">(<argument><expr><name pos:line="1490" pos:column="41">v<pos:position pos:line="1490" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="1490" pos:column="44">ArraySize<pos:position pos:line="1490" pos:column="53"/></name><argument_list pos:line="1490" pos:column="53">(<argument><expr><name pos:line="1490" pos:column="54">setCookie<pos:position pos:line="1490" pos:column="63"/></name></expr></argument>)<pos:position pos:line="1490" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="1490" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="1490" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><name pos:line="1491" pos:column="7">aOp<pos:position pos:line="1491" pos:column="10"/></name> <operator pos:line="1491" pos:column="11">=<pos:position pos:line="1491" pos:column="12"/></operator> <call><name pos:line="1491" pos:column="13">sqlite3VdbeAddOpList<pos:position pos:line="1491" pos:column="33"/></name><argument_list pos:line="1491" pos:column="33">(<argument><expr><name pos:line="1491" pos:column="34">v<pos:position pos:line="1491" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="1491" pos:column="37">ArraySize<pos:position pos:line="1491" pos:column="46"/></name><argument_list pos:line="1491" pos:column="46">(<argument><expr><name pos:line="1491" pos:column="47">setCookie<pos:position pos:line="1491" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1491" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="1491" pos:column="59">setCookie<pos:position pos:line="1491" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1491" pos:column="70">0<pos:position pos:line="1491" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="1491" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1491" pos:column="73"/></expr_stmt>
      <if pos:line="1492" pos:column="7">if<condition pos:line="1492" pos:column="9">( <expr><call><name pos:line="1492" pos:column="11">ONLY_IF_REALLOC_STRESS<pos:position pos:line="1492" pos:column="33"/></name><argument_list pos:line="1492" pos:column="33">(<argument><expr><name pos:line="1492" pos:column="34">aOp<pos:position pos:line="1492" pos:column="37"/></name><operator pos:line="1492" pos:column="37">==<pos:position pos:line="1492" pos:column="39"/></operator><literal type="number" pos:line="1492" pos:column="39">0<pos:position pos:line="1492" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="1492" pos:column="41"/></argument_list></call></expr> )<pos:position pos:line="1492" pos:column="43"/></condition><then pos:line="1492" pos:column="43"> <block type="pseudo"><break pos:line="1492" pos:column="44">break;<pos:position pos:line="1492" pos:column="50"/></break></block></then></if>
      <expr_stmt><expr><name><name pos:line="1493" pos:column="7">aOp<pos:position pos:line="1493" pos:column="10"/></name><index pos:line="1493" pos:column="10">[<expr><literal type="number" pos:line="1493" pos:column="11">0<pos:position pos:line="1493" pos:column="12"/></literal></expr>]<pos:position pos:line="1493" pos:column="13"/></index></name><operator pos:line="1493" pos:column="13">.<pos:position pos:line="1493" pos:column="14"/></operator><name pos:line="1493" pos:column="14">p1<pos:position pos:line="1493" pos:column="16"/></name> <operator pos:line="1493" pos:column="17">=<pos:position pos:line="1493" pos:column="18"/></operator> <name pos:line="1493" pos:column="19">iDb<pos:position pos:line="1493" pos:column="22"/></name></expr>;<pos:position pos:line="1493" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1494" pos:column="7">aOp<pos:position pos:line="1494" pos:column="10"/></name><index pos:line="1494" pos:column="10">[<expr><literal type="number" pos:line="1494" pos:column="11">1<pos:position pos:line="1494" pos:column="12"/></literal></expr>]<pos:position pos:line="1494" pos:column="13"/></index></name><operator pos:line="1494" pos:column="13">.<pos:position pos:line="1494" pos:column="14"/></operator><name pos:line="1494" pos:column="14">p1<pos:position pos:line="1494" pos:column="16"/></name> <operator pos:line="1494" pos:column="17">=<pos:position pos:line="1494" pos:column="18"/></operator> <name pos:line="1494" pos:column="19">iDb<pos:position pos:line="1494" pos:column="22"/></name></expr>;<pos:position pos:line="1494" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1495" pos:column="7">aOp<pos:position pos:line="1495" pos:column="10"/></name><index pos:line="1495" pos:column="10">[<expr><literal type="number" pos:line="1495" pos:column="11">1<pos:position pos:line="1495" pos:column="12"/></literal></expr>]<pos:position pos:line="1495" pos:column="13"/></index></name><operator pos:line="1495" pos:column="13">.<pos:position pos:line="1495" pos:column="14"/></operator><name pos:line="1495" pos:column="14">p2<pos:position pos:line="1495" pos:column="16"/></name> <operator pos:line="1495" pos:column="17">=<pos:position pos:line="1495" pos:column="18"/></operator> <name pos:line="1495" pos:column="19">iCookie<pos:position pos:line="1495" pos:column="26"/></name></expr>;<pos:position pos:line="1495" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1496" pos:column="7">aOp<pos:position pos:line="1496" pos:column="10"/></name><index pos:line="1496" pos:column="10">[<expr><literal type="number" pos:line="1496" pos:column="11">1<pos:position pos:line="1496" pos:column="12"/></literal></expr>]<pos:position pos:line="1496" pos:column="13"/></index></name><operator pos:line="1496" pos:column="13">.<pos:position pos:line="1496" pos:column="14"/></operator><name pos:line="1496" pos:column="14">p3<pos:position pos:line="1496" pos:column="16"/></name> <operator pos:line="1496" pos:column="17">=<pos:position pos:line="1496" pos:column="18"/></operator> <call><name pos:line="1496" pos:column="19">sqlite3Atoi<pos:position pos:line="1496" pos:column="30"/></name><argument_list pos:line="1496" pos:column="30">(<argument><expr><name pos:line="1496" pos:column="31">zRight<pos:position pos:line="1496" pos:column="37"/></name></expr></argument>)<pos:position pos:line="1496" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="1496" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="1497" pos:column="6"/></block></then><else pos:line="1497" pos:column="6">else<block pos:line="1497" pos:column="10">{
      <comment type="block" pos:line="1498" pos:column="7">/* Read the specified cookie value */</comment>
      <decl_stmt><decl><specifier pos:line="1499" pos:column="7">static<pos:position pos:line="1499" pos:column="13"/></specifier> <type><specifier pos:line="1499" pos:column="14">const<pos:position pos:line="1499" pos:column="19"/></specifier> <name pos:line="1499" pos:column="20">VdbeOpList<pos:position pos:line="1499" pos:column="30"/></name></type> <name><name pos:line="1499" pos:column="31">readCookie<pos:position pos:line="1499" pos:column="41"/></name><index pos:line="1499" pos:column="41">[]<pos:position pos:line="1499" pos:column="43"/></index></name> <init pos:line="1499" pos:column="44">= <expr><block pos:line="1499" pos:column="46">{
        <expr><block pos:line="1500" pos:column="9">{ <expr><name pos:line="1500" pos:column="11">OP_Transaction<pos:position pos:line="1500" pos:column="25"/></name></expr>,     <expr><literal type="number" pos:line="1500" pos:column="31">0<pos:position pos:line="1500" pos:column="32"/></literal></expr>,  <expr><literal type="number" pos:line="1500" pos:column="35">0<pos:position pos:line="1500" pos:column="36"/></literal></expr>,  <expr><literal type="number" pos:line="1500" pos:column="39">0<pos:position pos:line="1500" pos:column="40"/></literal></expr>}<pos:position pos:line="1500" pos:column="41"/></block></expr>,    <comment type="block" pos:line="1500" pos:column="46">/* 0 */</comment>
        <expr><block pos:line="1501" pos:column="9">{ <expr><name pos:line="1501" pos:column="11">OP_ReadCookie<pos:position pos:line="1501" pos:column="24"/></name></expr>,      <expr><literal type="number" pos:line="1501" pos:column="31">0<pos:position pos:line="1501" pos:column="32"/></literal></expr>,  <expr><literal type="number" pos:line="1501" pos:column="35">1<pos:position pos:line="1501" pos:column="36"/></literal></expr>,  <expr><literal type="number" pos:line="1501" pos:column="39">0<pos:position pos:line="1501" pos:column="40"/></literal></expr>}<pos:position pos:line="1501" pos:column="41"/></block></expr>,    <comment type="block" pos:line="1501" pos:column="46">/* 1 */</comment>
        <expr><block pos:line="1502" pos:column="9">{ <expr><name pos:line="1502" pos:column="11">OP_ResultRow<pos:position pos:line="1502" pos:column="23"/></name></expr>,       <expr><literal type="number" pos:line="1502" pos:column="31">1<pos:position pos:line="1502" pos:column="32"/></literal></expr>,  <expr><literal type="number" pos:line="1502" pos:column="35">1<pos:position pos:line="1502" pos:column="36"/></literal></expr>,  <expr><literal type="number" pos:line="1502" pos:column="39">0<pos:position pos:line="1502" pos:column="40"/></literal></expr>}<pos:position pos:line="1502" pos:column="41"/></block></expr>
      }<pos:position pos:line="1503" pos:column="8"/></block></expr></init></decl>;<pos:position pos:line="1503" pos:column="9"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="1504" pos:column="7">VdbeOp<pos:position pos:line="1504" pos:column="13"/></name> <modifier pos:line="1504" pos:column="14">*<pos:position pos:line="1504" pos:column="15"/></modifier></type><name pos:line="1504" pos:column="15">aOp<pos:position pos:line="1504" pos:column="18"/></name></decl>;<pos:position pos:line="1504" pos:column="19"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="1505" pos:column="7">sqlite3VdbeVerifyNoMallocRequired<pos:position pos:line="1505" pos:column="40"/></name><argument_list pos:line="1505" pos:column="40">(<argument><expr><name pos:line="1505" pos:column="41">v<pos:position pos:line="1505" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="1505" pos:column="44">ArraySize<pos:position pos:line="1505" pos:column="53"/></name><argument_list pos:line="1505" pos:column="53">(<argument><expr><name pos:line="1505" pos:column="54">readCookie<pos:position pos:line="1505" pos:column="64"/></name></expr></argument>)<pos:position pos:line="1505" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="1505" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1505" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name pos:line="1506" pos:column="7">aOp<pos:position pos:line="1506" pos:column="10"/></name> <operator pos:line="1506" pos:column="11">=<pos:position pos:line="1506" pos:column="12"/></operator> <call><name pos:line="1506" pos:column="13">sqlite3VdbeAddOpList<pos:position pos:line="1506" pos:column="33"/></name><argument_list pos:line="1506" pos:column="33">(<argument><expr><name pos:line="1506" pos:column="34">v<pos:position pos:line="1506" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="1506" pos:column="37">ArraySize<pos:position pos:line="1506" pos:column="46"/></name><argument_list pos:line="1506" pos:column="46">(<argument><expr><name pos:line="1506" pos:column="47">readCookie<pos:position pos:line="1506" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1506" pos:column="58"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="1506" pos:column="59">readCookie<pos:position pos:line="1506" pos:column="69"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="1506" pos:column="70">0<pos:position pos:line="1506" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="1506" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1506" pos:column="73"/></expr_stmt>
      <if pos:line="1507" pos:column="7">if<condition pos:line="1507" pos:column="9">( <expr><call><name pos:line="1507" pos:column="11">ONLY_IF_REALLOC_STRESS<pos:position pos:line="1507" pos:column="33"/></name><argument_list pos:line="1507" pos:column="33">(<argument><expr><name pos:line="1507" pos:column="34">aOp<pos:position pos:line="1507" pos:column="37"/></name><operator pos:line="1507" pos:column="37">==<pos:position pos:line="1507" pos:column="39"/></operator><literal type="number" pos:line="1507" pos:column="39">0<pos:position pos:line="1507" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="1507" pos:column="41"/></argument_list></call></expr> )<pos:position pos:line="1507" pos:column="43"/></condition><then pos:line="1507" pos:column="43"> <block type="pseudo"><break pos:line="1507" pos:column="44">break;<pos:position pos:line="1507" pos:column="50"/></break></block></then></if>
      <expr_stmt><expr><name><name pos:line="1508" pos:column="7">aOp<pos:position pos:line="1508" pos:column="10"/></name><index pos:line="1508" pos:column="10">[<expr><literal type="number" pos:line="1508" pos:column="11">0<pos:position pos:line="1508" pos:column="12"/></literal></expr>]<pos:position pos:line="1508" pos:column="13"/></index></name><operator pos:line="1508" pos:column="13">.<pos:position pos:line="1508" pos:column="14"/></operator><name pos:line="1508" pos:column="14">p1<pos:position pos:line="1508" pos:column="16"/></name> <operator pos:line="1508" pos:column="17">=<pos:position pos:line="1508" pos:column="18"/></operator> <name pos:line="1508" pos:column="19">iDb<pos:position pos:line="1508" pos:column="22"/></name></expr>;<pos:position pos:line="1508" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1509" pos:column="7">aOp<pos:position pos:line="1509" pos:column="10"/></name><index pos:line="1509" pos:column="10">[<expr><literal type="number" pos:line="1509" pos:column="11">1<pos:position pos:line="1509" pos:column="12"/></literal></expr>]<pos:position pos:line="1509" pos:column="13"/></index></name><operator pos:line="1509" pos:column="13">.<pos:position pos:line="1509" pos:column="14"/></operator><name pos:line="1509" pos:column="14">p1<pos:position pos:line="1509" pos:column="16"/></name> <operator pos:line="1509" pos:column="17">=<pos:position pos:line="1509" pos:column="18"/></operator> <name pos:line="1509" pos:column="19">iDb<pos:position pos:line="1509" pos:column="22"/></name></expr>;<pos:position pos:line="1509" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1510" pos:column="7">aOp<pos:position pos:line="1510" pos:column="10"/></name><index pos:line="1510" pos:column="10">[<expr><literal type="number" pos:line="1510" pos:column="11">1<pos:position pos:line="1510" pos:column="12"/></literal></expr>]<pos:position pos:line="1510" pos:column="13"/></index></name><operator pos:line="1510" pos:column="13">.<pos:position pos:line="1510" pos:column="14"/></operator><name pos:line="1510" pos:column="14">p3<pos:position pos:line="1510" pos:column="16"/></name> <operator pos:line="1510" pos:column="17">=<pos:position pos:line="1510" pos:column="18"/></operator> <name pos:line="1510" pos:column="19">iCookie<pos:position pos:line="1510" pos:column="26"/></name></expr>;<pos:position pos:line="1510" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1511" pos:column="7">sqlite3VdbeReusable<pos:position pos:line="1511" pos:column="26"/></name><argument_list pos:line="1511" pos:column="26">(<argument><expr><name pos:line="1511" pos:column="27">v<pos:position pos:line="1511" pos:column="28"/></name></expr></argument>)<pos:position pos:line="1511" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1511" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="1512" pos:column="6"/></block></else></if>
  }<pos:position pos:line="1513" pos:column="4"/></block>
  <break pos:line="1514" pos:column="3">break;<pos:position pos:line="1514" pos:column="9"/></break>
<cpp:endif pos:line="1515" pos:column="1">#<cpp:directive pos:line="1515" pos:column="2">endif<pos:position pos:line="1515" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="1515" pos:column="8">/* SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS */</comment>

<cpp:ifndef pos:line="1517" pos:column="1">#<cpp:directive pos:line="1517" pos:column="2">ifndef<pos:position pos:line="1517" pos:column="8"/></cpp:directive> <name pos:line="1517" pos:column="9">SQLITE_OMIT_COMPILEOPTION_DIAGS<pos:position pos:line="1517" pos:column="40"/></name></cpp:ifndef>
  <comment type="block" pos:line="1518" pos:column="3">/*
  **   PRAGMA compile_options
  **
  ** Return the names of all compile-time options used in this build,
  ** one option per row.
  */</comment>
  <case pos:line="1524" pos:column="3">case <expr><name pos:line="1524" pos:column="8">PragTyp_COMPILE_OPTIONS<pos:position pos:line="1524" pos:column="31"/></name></expr>:<pos:position pos:line="1524" pos:column="32"/></case> <block pos:line="1524" pos:column="33">{
    <decl_stmt><decl><type><name pos:line="1525" pos:column="5">int<pos:position pos:line="1525" pos:column="8"/></name></type> <name pos:line="1525" pos:column="9">i<pos:position pos:line="1525" pos:column="10"/></name> <init pos:line="1525" pos:column="11">= <expr><literal type="number" pos:line="1525" pos:column="13">0<pos:position pos:line="1525" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="1525" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1526" pos:column="5">const<pos:position pos:line="1526" pos:column="10"/></specifier> <name pos:line="1526" pos:column="11">char<pos:position pos:line="1526" pos:column="15"/></name> <modifier pos:line="1526" pos:column="16">*<pos:position pos:line="1526" pos:column="17"/></modifier></type><name pos:line="1526" pos:column="17">zOpt<pos:position pos:line="1526" pos:column="21"/></name></decl>;<pos:position pos:line="1526" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="1527" pos:column="5">pParse<pos:position pos:line="1527" pos:column="11"/></name><operator pos:line="1527" pos:column="11">-&gt;<pos:position pos:line="1527" pos:column="16"/></operator><name pos:line="1527" pos:column="13">nMem<pos:position pos:line="1527" pos:column="17"/></name></name> <operator pos:line="1527" pos:column="18">=<pos:position pos:line="1527" pos:column="19"/></operator> <literal type="number" pos:line="1527" pos:column="20">1<pos:position pos:line="1527" pos:column="21"/></literal></expr>;<pos:position pos:line="1527" pos:column="22"/></expr_stmt>
    <while pos:line="1528" pos:column="5">while<condition pos:line="1528" pos:column="10">( <expr><operator pos:line="1528" pos:column="12">(<pos:position pos:line="1528" pos:column="13"/></operator><name pos:line="1528" pos:column="13">zOpt<pos:position pos:line="1528" pos:column="17"/></name> <operator pos:line="1528" pos:column="18">=<pos:position pos:line="1528" pos:column="19"/></operator> <call><name pos:line="1528" pos:column="20">sqlite3_compileoption_get<pos:position pos:line="1528" pos:column="45"/></name><argument_list pos:line="1528" pos:column="45">(<argument><expr><name pos:line="1528" pos:column="46">i<pos:position pos:line="1528" pos:column="47"/></name><operator pos:line="1528" pos:column="47">++<pos:position pos:line="1528" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="1528" pos:column="50"/></argument_list></call><operator pos:line="1528" pos:column="50">)<pos:position pos:line="1528" pos:column="51"/></operator><operator pos:line="1528" pos:column="51">!=<pos:position pos:line="1528" pos:column="53"/></operator><literal type="number" pos:line="1528" pos:column="53">0<pos:position pos:line="1528" pos:column="54"/></literal></expr> )<pos:position pos:line="1528" pos:column="56"/></condition><block pos:line="1528" pos:column="56">{
      <expr_stmt><expr><call><name pos:line="1529" pos:column="7">sqlite3VdbeLoadString<pos:position pos:line="1529" pos:column="28"/></name><argument_list pos:line="1529" pos:column="28">(<argument><expr><name pos:line="1529" pos:column="29">v<pos:position pos:line="1529" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1529" pos:column="32">1<pos:position pos:line="1529" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="1529" pos:column="35">zOpt<pos:position pos:line="1529" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1529" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1529" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1530" pos:column="7">sqlite3VdbeAddOp2<pos:position pos:line="1530" pos:column="24"/></name><argument_list pos:line="1530" pos:column="24">(<argument><expr><name pos:line="1530" pos:column="25">v<pos:position pos:line="1530" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1530" pos:column="28">OP_ResultRow<pos:position pos:line="1530" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1530" pos:column="42">1<pos:position pos:line="1530" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1530" pos:column="45">1<pos:position pos:line="1530" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="1530" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="1530" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="1531" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="1532" pos:column="5">sqlite3VdbeReusable<pos:position pos:line="1532" pos:column="24"/></name><argument_list pos:line="1532" pos:column="24">(<argument><expr><name pos:line="1532" pos:column="25">v<pos:position pos:line="1532" pos:column="26"/></name></expr></argument>)<pos:position pos:line="1532" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="1532" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="1533" pos:column="4"/></block>
  <break pos:line="1534" pos:column="3">break;<pos:position pos:line="1534" pos:column="9"/></break>
<cpp:endif pos:line="1535" pos:column="1">#<cpp:directive pos:line="1535" pos:column="2">endif<pos:position pos:line="1535" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="1535" pos:column="8">/* SQLITE_OMIT_COMPILEOPTION_DIAGS */</comment>

<cpp:ifndef pos:line="1537" pos:column="1">#<cpp:directive pos:line="1537" pos:column="2">ifndef<pos:position pos:line="1537" pos:column="8"/></cpp:directive> <name pos:line="1537" pos:column="9">SQLITE_OMIT_WAL<pos:position pos:line="1537" pos:column="24"/></name></cpp:ifndef>
  <comment type="block" pos:line="1538" pos:column="3">/*
  **   PRAGMA [schema.]wal_checkpoint = passive|full|restart|truncate
  **
  ** Checkpoint the database.
  */</comment>
  <case pos:line="1543" pos:column="3">case <expr><name pos:line="1543" pos:column="8">PragTyp_WAL_CHECKPOINT<pos:position pos:line="1543" pos:column="30"/></name></expr>:<pos:position pos:line="1543" pos:column="31"/></case> <block pos:line="1543" pos:column="32">{
    <decl_stmt><decl><type><name pos:line="1544" pos:column="5">int<pos:position pos:line="1544" pos:column="8"/></name></type> <name pos:line="1544" pos:column="9">iBt<pos:position pos:line="1544" pos:column="12"/></name> <init pos:line="1544" pos:column="13">= <expr><operator pos:line="1544" pos:column="15">(<pos:position pos:line="1544" pos:column="16"/></operator><ternary><condition><expr><name><name pos:line="1544" pos:column="16">pId2<pos:position pos:line="1544" pos:column="20"/></name><operator pos:line="1544" pos:column="20">-&gt;<pos:position pos:line="1544" pos:column="25"/></operator><name pos:line="1544" pos:column="22">z<pos:position pos:line="1544" pos:column="23"/></name></name></expr>?<pos:position pos:line="1544" pos:column="24"/></condition><then><expr><name pos:line="1544" pos:column="24">iDb<pos:position pos:line="1544" pos:column="27"/></name></expr></then><else pos:line="1544" pos:column="27">:<expr><name pos:line="1544" pos:column="28">SQLITE_MAX_ATTACHED<pos:position pos:line="1544" pos:column="47"/></name></expr></else></ternary><operator pos:line="1544" pos:column="47">)<pos:position pos:line="1544" pos:column="48"/></operator></expr></init></decl>;<pos:position pos:line="1544" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1545" pos:column="5">int<pos:position pos:line="1545" pos:column="8"/></name></type> <name pos:line="1545" pos:column="9">eMode<pos:position pos:line="1545" pos:column="14"/></name> <init pos:line="1545" pos:column="15">= <expr><name pos:line="1545" pos:column="17">SQLITE_CHECKPOINT_PASSIVE<pos:position pos:line="1545" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="1545" pos:column="43"/></decl_stmt>
    <if pos:line="1546" pos:column="5">if<condition pos:line="1546" pos:column="7">( <expr><name pos:line="1546" pos:column="9">zRight<pos:position pos:line="1546" pos:column="15"/></name></expr> )<pos:position pos:line="1546" pos:column="17"/></condition><then><block pos:line="1546" pos:column="17">{
      <if pos:line="1547" pos:column="7">if<condition pos:line="1547" pos:column="9">( <expr><call><name pos:line="1547" pos:column="11">sqlite3StrICmp<pos:position pos:line="1547" pos:column="25"/></name><argument_list pos:line="1547" pos:column="25">(<argument><expr><name pos:line="1547" pos:column="26">zRight<pos:position pos:line="1547" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1547" pos:column="34">"full"<pos:position pos:line="1547" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="1547" pos:column="41"/></argument_list></call><operator pos:line="1547" pos:column="41">==<pos:position pos:line="1547" pos:column="43"/></operator><literal type="number" pos:line="1547" pos:column="43">0<pos:position pos:line="1547" pos:column="44"/></literal></expr> )<pos:position pos:line="1547" pos:column="46"/></condition><then><block pos:line="1547" pos:column="46">{
        <expr_stmt><expr><name pos:line="1548" pos:column="9">eMode<pos:position pos:line="1548" pos:column="14"/></name> <operator pos:line="1548" pos:column="15">=<pos:position pos:line="1548" pos:column="16"/></operator> <name pos:line="1548" pos:column="17">SQLITE_CHECKPOINT_FULL<pos:position pos:line="1548" pos:column="39"/></name></expr>;<pos:position pos:line="1548" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="1549" pos:column="8"/></block></then><elseif pos:line="1549" pos:column="8">else <if pos:line="1549" pos:column="13">if<condition pos:line="1549" pos:column="15">( <expr><call><name pos:line="1549" pos:column="17">sqlite3StrICmp<pos:position pos:line="1549" pos:column="31"/></name><argument_list pos:line="1549" pos:column="31">(<argument><expr><name pos:line="1549" pos:column="32">zRight<pos:position pos:line="1549" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1549" pos:column="40">"restart"<pos:position pos:line="1549" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="1549" pos:column="50"/></argument_list></call><operator pos:line="1549" pos:column="50">==<pos:position pos:line="1549" pos:column="52"/></operator><literal type="number" pos:line="1549" pos:column="52">0<pos:position pos:line="1549" pos:column="53"/></literal></expr> )<pos:position pos:line="1549" pos:column="55"/></condition><then><block pos:line="1549" pos:column="55">{
        <expr_stmt><expr><name pos:line="1550" pos:column="9">eMode<pos:position pos:line="1550" pos:column="14"/></name> <operator pos:line="1550" pos:column="15">=<pos:position pos:line="1550" pos:column="16"/></operator> <name pos:line="1550" pos:column="17">SQLITE_CHECKPOINT_RESTART<pos:position pos:line="1550" pos:column="42"/></name></expr>;<pos:position pos:line="1550" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="1551" pos:column="8"/></block></then></if></elseif><elseif pos:line="1551" pos:column="8">else <if pos:line="1551" pos:column="13">if<condition pos:line="1551" pos:column="15">( <expr><call><name pos:line="1551" pos:column="17">sqlite3StrICmp<pos:position pos:line="1551" pos:column="31"/></name><argument_list pos:line="1551" pos:column="31">(<argument><expr><name pos:line="1551" pos:column="32">zRight<pos:position pos:line="1551" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1551" pos:column="40">"truncate"<pos:position pos:line="1551" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="1551" pos:column="51"/></argument_list></call><operator pos:line="1551" pos:column="51">==<pos:position pos:line="1551" pos:column="53"/></operator><literal type="number" pos:line="1551" pos:column="53">0<pos:position pos:line="1551" pos:column="54"/></literal></expr> )<pos:position pos:line="1551" pos:column="56"/></condition><then><block pos:line="1551" pos:column="56">{
        <expr_stmt><expr><name pos:line="1552" pos:column="9">eMode<pos:position pos:line="1552" pos:column="14"/></name> <operator pos:line="1552" pos:column="15">=<pos:position pos:line="1552" pos:column="16"/></operator> <name pos:line="1552" pos:column="17">SQLITE_CHECKPOINT_TRUNCATE<pos:position pos:line="1552" pos:column="43"/></name></expr>;<pos:position pos:line="1552" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="1553" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="1554" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="1555" pos:column="5">pParse<pos:position pos:line="1555" pos:column="11"/></name><operator pos:line="1555" pos:column="11">-&gt;<pos:position pos:line="1555" pos:column="16"/></operator><name pos:line="1555" pos:column="13">nMem<pos:position pos:line="1555" pos:column="17"/></name></name> <operator pos:line="1555" pos:column="18">=<pos:position pos:line="1555" pos:column="19"/></operator> <literal type="number" pos:line="1555" pos:column="20">3<pos:position pos:line="1555" pos:column="21"/></literal></expr>;<pos:position pos:line="1555" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="1556" pos:column="5">sqlite3VdbeAddOp3<pos:position pos:line="1556" pos:column="22"/></name><argument_list pos:line="1556" pos:column="22">(<argument><expr><name pos:line="1556" pos:column="23">v<pos:position pos:line="1556" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="1556" pos:column="26">OP_Checkpoint<pos:position pos:line="1556" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1556" pos:column="41">iBt<pos:position pos:line="1556" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1556" pos:column="46">eMode<pos:position pos:line="1556" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1556" pos:column="53">1<pos:position pos:line="1556" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="1556" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="1556" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="1557" pos:column="5">sqlite3VdbeAddOp2<pos:position pos:line="1557" pos:column="22"/></name><argument_list pos:line="1557" pos:column="22">(<argument><expr><name pos:line="1557" pos:column="23">v<pos:position pos:line="1557" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="1557" pos:column="26">OP_ResultRow<pos:position pos:line="1557" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1557" pos:column="40">1<pos:position pos:line="1557" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1557" pos:column="43">3<pos:position pos:line="1557" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="1557" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1557" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="1558" pos:column="4"/></block>
  <break pos:line="1559" pos:column="3">break;<pos:position pos:line="1559" pos:column="9"/></break>

  <comment type="block" pos:line="1561" pos:column="3">/*
  **   PRAGMA wal_autocheckpoint
  **   PRAGMA wal_autocheckpoint = N
  **
  ** Configure a database connection to automatically checkpoint a database
  ** after accumulating N frames in the log. Or query for the current value
  ** of N.
  */</comment>
  <case pos:line="1569" pos:column="3">case <expr><name pos:line="1569" pos:column="8">PragTyp_WAL_AUTOCHECKPOINT<pos:position pos:line="1569" pos:column="34"/></name></expr>:<pos:position pos:line="1569" pos:column="35"/></case> <block pos:line="1569" pos:column="36">{
    <if pos:line="1570" pos:column="5">if<condition pos:line="1570" pos:column="7">( <expr><name pos:line="1570" pos:column="9">zRight<pos:position pos:line="1570" pos:column="15"/></name></expr> )<pos:position pos:line="1570" pos:column="17"/></condition><then><block pos:line="1570" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="1571" pos:column="7">sqlite3_wal_autocheckpoint<pos:position pos:line="1571" pos:column="33"/></name><argument_list pos:line="1571" pos:column="33">(<argument><expr><name pos:line="1571" pos:column="34">db<pos:position pos:line="1571" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="1571" pos:column="38">sqlite3Atoi<pos:position pos:line="1571" pos:column="49"/></name><argument_list pos:line="1571" pos:column="49">(<argument><expr><name pos:line="1571" pos:column="50">zRight<pos:position pos:line="1571" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1571" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="1571" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1571" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="1572" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="1573" pos:column="5">returnSingleInt<pos:position pos:line="1573" pos:column="20"/></name><argument_list pos:line="1573" pos:column="20">(<argument><expr><name pos:line="1573" pos:column="21">v<pos:position pos:line="1573" pos:column="22"/></name></expr></argument>, 
       <argument><expr><ternary><condition><expr><name><name pos:line="1574" pos:column="8">db<pos:position pos:line="1574" pos:column="10"/></name><operator pos:line="1574" pos:column="10">-&gt;<pos:position pos:line="1574" pos:column="15"/></operator><name pos:line="1574" pos:column="12">xWalCallback<pos:position pos:line="1574" pos:column="24"/></name></name><operator pos:line="1574" pos:column="24">==<pos:position pos:line="1574" pos:column="26"/></operator><name pos:line="1574" pos:column="26">sqlite3WalDefaultHook<pos:position pos:line="1574" pos:column="47"/></name></expr> ?<pos:position pos:line="1574" pos:column="49"/></condition><then pos:line="1574" pos:column="49"> 
           <expr><call><name pos:line="1575" pos:column="12">SQLITE_PTR_TO_INT<pos:position pos:line="1575" pos:column="29"/></name><argument_list pos:line="1575" pos:column="29">(<argument><expr><name><name pos:line="1575" pos:column="30">db<pos:position pos:line="1575" pos:column="32"/></name><operator pos:line="1575" pos:column="32">-&gt;<pos:position pos:line="1575" pos:column="37"/></operator><name pos:line="1575" pos:column="34">pWalArg<pos:position pos:line="1575" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="1575" pos:column="42"/></argument_list></call></expr> <pos:position pos:line="1575" pos:column="43"/></then><else pos:line="1575" pos:column="43">: <expr><literal type="number" pos:line="1575" pos:column="45">0<pos:position pos:line="1575" pos:column="46"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="1575" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="1575" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="1576" pos:column="4"/></block>
  <break pos:line="1577" pos:column="3">break;<pos:position pos:line="1577" pos:column="9"/></break>
<cpp:endif pos:line="1578" pos:column="1">#<cpp:directive pos:line="1578" pos:column="2">endif<pos:position pos:line="1578" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="1580" pos:column="3">/*
  **  PRAGMA shrink_memory
  **
  ** IMPLEMENTATION-OF: R-23445-46109 This pragma causes the database
  ** connection on which it is invoked to free up as much memory as it
  ** can, by calling sqlite3_db_release_memory().
  */</comment>
  <case pos:line="1587" pos:column="3">case <expr><name pos:line="1587" pos:column="8">PragTyp_SHRINK_MEMORY<pos:position pos:line="1587" pos:column="29"/></name></expr>:<pos:position pos:line="1587" pos:column="30"/></case> <block pos:line="1587" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="1588" pos:column="5">sqlite3_db_release_memory<pos:position pos:line="1588" pos:column="30"/></name><argument_list pos:line="1588" pos:column="30">(<argument><expr><name pos:line="1588" pos:column="31">db<pos:position pos:line="1588" pos:column="33"/></name></expr></argument>)<pos:position pos:line="1588" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1588" pos:column="35"/></expr_stmt>
    <break pos:line="1589" pos:column="5">break;<pos:position pos:line="1589" pos:column="11"/></break>
  }<pos:position pos:line="1590" pos:column="4"/></block>

  <comment type="block" pos:line="1592" pos:column="3">/*
  **  PRAGMA optimize
  **  PRAGMA optimize(MASK)
  **  PRAGMA schema.optimize
  **  PRAGMA schema.optimize(MASK)
  **
  ** Attempt to optimize the database.  All schemas are optimized in the first
  ** two forms, and only the specified schema is optimized in the latter two.
  **
  ** The details of optimizations performed by this pragma are expected
  ** to change and improve over time.  Applications should anticipate that
  ** this pragma will perform new optimizations in future releases.
  **
  ** The optional argument is a bitmask of optimizations to perform:
  **
  **    0x0001    Debugging mode.  Do not actually perform any optimizations
  **              but instead return one line of text for each optimization
  **              that would have been done.  Off by default.
  **
  **    0x0002    Run ANALYZE on tables that might benefit.  On by default.
  **              See below for additional information.
  **
  **    0x0004    (Not yet implemented) Record usage and performance 
  **              information from the current session in the
  **              database file so that it will be available to "optimize"
  **              pragmas run by future database connections.
  **
  **    0x0008    (Not yet implemented) Create indexes that might have
  **              been helpful to recent queries
  **
  ** The default MASK is and always shall be 0xfffe.  0xfffe means perform all
  ** of the optimizations listed above except Debug Mode, including new
  ** optimizations that have not yet been invented.  If new optimizations are
  ** ever added that should be off by default, those off-by-default 
  ** optimizations will have bitmasks of 0x10000 or larger.
  **
  ** DETERMINATION OF WHEN TO RUN ANALYZE
  **
  ** In the current implementation, a table is analyzed if only if all of
  ** the following are true:
  **
  ** (1) MASK bit 0x02 is set.
  **
  ** (2) The query planner used sqlite_stat1-style statistics for one or
  **     more indexes of the table at some point during the lifetime of
  **     the current connection.
  **
  ** (3) One or more indexes of the table are currently unanalyzed OR
  **     the number of rows in the table has increased by 25 times or more
  **     since the last time ANALYZE was run.
  **
  ** The rules for when tables are analyzed are likely to change in
  ** future releases.
  */</comment>
  <case pos:line="1646" pos:column="3">case <expr><name pos:line="1646" pos:column="8">PragTyp_OPTIMIZE<pos:position pos:line="1646" pos:column="24"/></name></expr>:<pos:position pos:line="1646" pos:column="25"/></case> <block pos:line="1646" pos:column="26">{
    <decl_stmt><decl><type><name pos:line="1647" pos:column="5">int<pos:position pos:line="1647" pos:column="8"/></name></type> <name pos:line="1647" pos:column="9">iDbLast<pos:position pos:line="1647" pos:column="16"/></name></decl>;<pos:position pos:line="1647" pos:column="17"/></decl_stmt>           <comment type="block" pos:line="1647" pos:column="28">/* Loop termination point for the schema loop */</comment>
    <decl_stmt><decl><type><name pos:line="1648" pos:column="5">int<pos:position pos:line="1648" pos:column="8"/></name></type> <name pos:line="1648" pos:column="9">iTabCur<pos:position pos:line="1648" pos:column="16"/></name></decl>;<pos:position pos:line="1648" pos:column="17"/></decl_stmt>           <comment type="block" pos:line="1648" pos:column="28">/* Cursor for a table whose size needs checking */</comment>
    <decl_stmt><decl><type><name pos:line="1649" pos:column="5">HashElem<pos:position pos:line="1649" pos:column="13"/></name> <modifier pos:line="1649" pos:column="14">*<pos:position pos:line="1649" pos:column="15"/></modifier></type><name pos:line="1649" pos:column="15">k<pos:position pos:line="1649" pos:column="16"/></name></decl>;<pos:position pos:line="1649" pos:column="17"/></decl_stmt>           <comment type="block" pos:line="1649" pos:column="28">/* Loop over tables of a schema */</comment>
    <decl_stmt><decl><type><name pos:line="1650" pos:column="5">Schema<pos:position pos:line="1650" pos:column="11"/></name> <modifier pos:line="1650" pos:column="12">*<pos:position pos:line="1650" pos:column="13"/></modifier></type><name pos:line="1650" pos:column="13">pSchema<pos:position pos:line="1650" pos:column="20"/></name></decl>;<pos:position pos:line="1650" pos:column="21"/></decl_stmt>       <comment type="block" pos:line="1650" pos:column="28">/* The current schema */</comment>
    <decl_stmt><decl><type><name pos:line="1651" pos:column="5">Table<pos:position pos:line="1651" pos:column="10"/></name> <modifier pos:line="1651" pos:column="11">*<pos:position pos:line="1651" pos:column="12"/></modifier></type><name pos:line="1651" pos:column="12">pTab<pos:position pos:line="1651" pos:column="16"/></name></decl>;<pos:position pos:line="1651" pos:column="17"/></decl_stmt>           <comment type="block" pos:line="1651" pos:column="28">/* A table in the schema */</comment>
    <decl_stmt><decl><type><name pos:line="1652" pos:column="5">Index<pos:position pos:line="1652" pos:column="10"/></name> <modifier pos:line="1652" pos:column="11">*<pos:position pos:line="1652" pos:column="12"/></modifier></type><name pos:line="1652" pos:column="12">pIdx<pos:position pos:line="1652" pos:column="16"/></name></decl>;<pos:position pos:line="1652" pos:column="17"/></decl_stmt>           <comment type="block" pos:line="1652" pos:column="28">/* An index of the table */</comment>
    <decl_stmt><decl><type><name pos:line="1653" pos:column="5">LogEst<pos:position pos:line="1653" pos:column="11"/></name></type> <name pos:line="1653" pos:column="12">szThreshold<pos:position pos:line="1653" pos:column="23"/></name></decl>;<pos:position pos:line="1653" pos:column="24"/></decl_stmt>    <comment type="block" pos:line="1653" pos:column="28">/* Size threshold above which reanalysis is needd */</comment>
    <decl_stmt><decl><type><name pos:line="1654" pos:column="5">char<pos:position pos:line="1654" pos:column="9"/></name> <modifier pos:line="1654" pos:column="10">*<pos:position pos:line="1654" pos:column="11"/></modifier></type><name pos:line="1654" pos:column="11">zSubSql<pos:position pos:line="1654" pos:column="18"/></name></decl>;<pos:position pos:line="1654" pos:column="19"/></decl_stmt>         <comment type="block" pos:line="1654" pos:column="28">/* SQL statement for the OP_SqlExec opcode */</comment>
    <decl_stmt><decl><type><name pos:line="1655" pos:column="5">u32<pos:position pos:line="1655" pos:column="8"/></name></type> <name pos:line="1655" pos:column="9">opMask<pos:position pos:line="1655" pos:column="15"/></name></decl>;<pos:position pos:line="1655" pos:column="16"/></decl_stmt>            <comment type="block" pos:line="1655" pos:column="28">/* Mask of operations to perform */</comment>

    <if pos:line="1657" pos:column="5">if<condition pos:line="1657" pos:column="7">( <expr><name pos:line="1657" pos:column="9">zRight<pos:position pos:line="1657" pos:column="15"/></name></expr> )<pos:position pos:line="1657" pos:column="17"/></condition><then><block pos:line="1657" pos:column="17">{
      <expr_stmt><expr><name pos:line="1658" pos:column="7">opMask<pos:position pos:line="1658" pos:column="13"/></name> <operator pos:line="1658" pos:column="14">=<pos:position pos:line="1658" pos:column="15"/></operator> <operator pos:line="1658" pos:column="16">(<pos:position pos:line="1658" pos:column="17"/></operator><name pos:line="1658" pos:column="17">u32<pos:position pos:line="1658" pos:column="20"/></name><operator pos:line="1658" pos:column="20">)<pos:position pos:line="1658" pos:column="21"/></operator><call><name pos:line="1658" pos:column="21">sqlite3Atoi<pos:position pos:line="1658" pos:column="32"/></name><argument_list pos:line="1658" pos:column="32">(<argument><expr><name pos:line="1658" pos:column="33">zRight<pos:position pos:line="1658" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1658" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1658" pos:column="41"/></expr_stmt>
      <if pos:line="1659" pos:column="7">if<condition pos:line="1659" pos:column="9">( <expr><operator pos:line="1659" pos:column="11">(<pos:position pos:line="1659" pos:column="12"/></operator><name pos:line="1659" pos:column="12">opMask<pos:position pos:line="1659" pos:column="18"/></name> <operator pos:line="1659" pos:column="19">&amp;<pos:position pos:line="1659" pos:column="24"/></operator> <literal type="number" pos:line="1659" pos:column="21">0x02<pos:position pos:line="1659" pos:column="25"/></literal><operator pos:line="1659" pos:column="25">)<pos:position pos:line="1659" pos:column="26"/></operator><operator pos:line="1659" pos:column="26">==<pos:position pos:line="1659" pos:column="28"/></operator><literal type="number" pos:line="1659" pos:column="28">0<pos:position pos:line="1659" pos:column="29"/></literal></expr> )<pos:position pos:line="1659" pos:column="31"/></condition><then pos:line="1659" pos:column="31"> <block type="pseudo"><break pos:line="1659" pos:column="32">break;<pos:position pos:line="1659" pos:column="38"/></break></block></then></if>
    }<pos:position pos:line="1660" pos:column="6"/></block></then><else pos:line="1660" pos:column="6">else<block pos:line="1660" pos:column="10">{
      <expr_stmt><expr><name pos:line="1661" pos:column="7">opMask<pos:position pos:line="1661" pos:column="13"/></name> <operator pos:line="1661" pos:column="14">=<pos:position pos:line="1661" pos:column="15"/></operator> <literal type="number" pos:line="1661" pos:column="16">0xfffe<pos:position pos:line="1661" pos:column="22"/></literal></expr>;<pos:position pos:line="1661" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="1662" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="1663" pos:column="5">iTabCur<pos:position pos:line="1663" pos:column="12"/></name> <operator pos:line="1663" pos:column="13">=<pos:position pos:line="1663" pos:column="14"/></operator> <name><name pos:line="1663" pos:column="15">pParse<pos:position pos:line="1663" pos:column="21"/></name><operator pos:line="1663" pos:column="21">-&gt;<pos:position pos:line="1663" pos:column="26"/></operator><name pos:line="1663" pos:column="23">nTab<pos:position pos:line="1663" pos:column="27"/></name></name><operator pos:line="1663" pos:column="27">++<pos:position pos:line="1663" pos:column="29"/></operator></expr>;<pos:position pos:line="1663" pos:column="30"/></expr_stmt>
    <for pos:line="1664" pos:column="5">for<control pos:line="1664" pos:column="8">(<init><expr><name pos:line="1664" pos:column="9">iDbLast<pos:position pos:line="1664" pos:column="16"/></name> <operator pos:line="1664" pos:column="17">=<pos:position pos:line="1664" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="1664" pos:column="19">zDb<pos:position pos:line="1664" pos:column="22"/></name></expr>?<pos:position pos:line="1664" pos:column="23"/></condition><then><expr><name pos:line="1664" pos:column="23">iDb<pos:position pos:line="1664" pos:column="26"/></name></expr></then><else pos:line="1664" pos:column="26">:<expr><name><name pos:line="1664" pos:column="27">db<pos:position pos:line="1664" pos:column="29"/></name><operator pos:line="1664" pos:column="29">-&gt;<pos:position pos:line="1664" pos:column="34"/></operator><name pos:line="1664" pos:column="31">nDb<pos:position pos:line="1664" pos:column="34"/></name></name><operator pos:line="1664" pos:column="34">-<pos:position pos:line="1664" pos:column="35"/></operator><literal type="number" pos:line="1664" pos:column="35">1<pos:position pos:line="1664" pos:column="36"/></literal></expr></else></ternary></expr>;<pos:position pos:line="1664" pos:column="37"/></init> <condition><expr><name pos:line="1664" pos:column="38">iDb<pos:position pos:line="1664" pos:column="41"/></name><operator pos:line="1664" pos:column="41">&lt;=<pos:position pos:line="1664" pos:column="46"/></operator><name pos:line="1664" pos:column="43">iDbLast<pos:position pos:line="1664" pos:column="50"/></name></expr>;<pos:position pos:line="1664" pos:column="51"/></condition> <incr><expr><name pos:line="1664" pos:column="52">iDb<pos:position pos:line="1664" pos:column="55"/></name><operator pos:line="1664" pos:column="55">++<pos:position pos:line="1664" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="1664" pos:column="58"/></control><block pos:line="1664" pos:column="58">{
      <if pos:line="1665" pos:column="7">if<condition pos:line="1665" pos:column="9">( <expr><name pos:line="1665" pos:column="11">iDb<pos:position pos:line="1665" pos:column="14"/></name><operator pos:line="1665" pos:column="14">==<pos:position pos:line="1665" pos:column="16"/></operator><literal type="number" pos:line="1665" pos:column="16">1<pos:position pos:line="1665" pos:column="17"/></literal></expr> )<pos:position pos:line="1665" pos:column="19"/></condition><then pos:line="1665" pos:column="19"> <block type="pseudo"><continue pos:line="1665" pos:column="20">continue;<pos:position pos:line="1665" pos:column="29"/></continue></block></then></if>
      <expr_stmt><expr><call><name pos:line="1666" pos:column="7">sqlite3CodeVerifySchema<pos:position pos:line="1666" pos:column="30"/></name><argument_list pos:line="1666" pos:column="30">(<argument><expr><name pos:line="1666" pos:column="31">pParse<pos:position pos:line="1666" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1666" pos:column="39">iDb<pos:position pos:line="1666" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1666" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1666" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="1667" pos:column="7">pSchema<pos:position pos:line="1667" pos:column="14"/></name> <operator pos:line="1667" pos:column="15">=<pos:position pos:line="1667" pos:column="16"/></operator> <name><name pos:line="1667" pos:column="17">db<pos:position pos:line="1667" pos:column="19"/></name><operator pos:line="1667" pos:column="19">-&gt;<pos:position pos:line="1667" pos:column="24"/></operator><name pos:line="1667" pos:column="21">aDb<pos:position pos:line="1667" pos:column="24"/></name><index pos:line="1667" pos:column="24">[<expr><name pos:line="1667" pos:column="25">iDb<pos:position pos:line="1667" pos:column="28"/></name></expr>]<pos:position pos:line="1667" pos:column="29"/></index></name><operator pos:line="1667" pos:column="29">.<pos:position pos:line="1667" pos:column="30"/></operator><name pos:line="1667" pos:column="30">pSchema<pos:position pos:line="1667" pos:column="37"/></name></expr>;<pos:position pos:line="1667" pos:column="38"/></expr_stmt>
      <for pos:line="1668" pos:column="7">for<control pos:line="1668" pos:column="10">(<init><expr><name pos:line="1668" pos:column="11">k<pos:position pos:line="1668" pos:column="12"/></name><operator pos:line="1668" pos:column="12">=<pos:position pos:line="1668" pos:column="13"/></operator><call><name pos:line="1668" pos:column="13">sqliteHashFirst<pos:position pos:line="1668" pos:column="28"/></name><argument_list pos:line="1668" pos:column="28">(<argument><expr><operator pos:line="1668" pos:column="29">&amp;<pos:position pos:line="1668" pos:column="34"/></operator><name><name pos:line="1668" pos:column="30">pSchema<pos:position pos:line="1668" pos:column="37"/></name><operator pos:line="1668" pos:column="37">-&gt;<pos:position pos:line="1668" pos:column="42"/></operator><name pos:line="1668" pos:column="39">tblHash<pos:position pos:line="1668" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="1668" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="1668" pos:column="48"/></init> <condition><expr><name pos:line="1668" pos:column="49">k<pos:position pos:line="1668" pos:column="50"/></name></expr>;<pos:position pos:line="1668" pos:column="51"/></condition> <incr><expr><name pos:line="1668" pos:column="52">k<pos:position pos:line="1668" pos:column="53"/></name><operator pos:line="1668" pos:column="53">=<pos:position pos:line="1668" pos:column="54"/></operator><call><name pos:line="1668" pos:column="54">sqliteHashNext<pos:position pos:line="1668" pos:column="68"/></name><argument_list pos:line="1668" pos:column="68">(<argument><expr><name pos:line="1668" pos:column="69">k<pos:position pos:line="1668" pos:column="70"/></name></expr></argument>)<pos:position pos:line="1668" pos:column="71"/></argument_list></call></expr></incr>)<pos:position pos:line="1668" pos:column="72"/></control><block pos:line="1668" pos:column="72">{
        <expr_stmt><expr><name pos:line="1669" pos:column="9">pTab<pos:position pos:line="1669" pos:column="13"/></name> <operator pos:line="1669" pos:column="14">=<pos:position pos:line="1669" pos:column="15"/></operator> <operator pos:line="1669" pos:column="16">(<pos:position pos:line="1669" pos:column="17"/></operator><name pos:line="1669" pos:column="17">Table<pos:position pos:line="1669" pos:column="22"/></name><operator pos:line="1669" pos:column="22">*<pos:position pos:line="1669" pos:column="23"/></operator><operator pos:line="1669" pos:column="23">)<pos:position pos:line="1669" pos:column="24"/></operator><call><name pos:line="1669" pos:column="24">sqliteHashData<pos:position pos:line="1669" pos:column="38"/></name><argument_list pos:line="1669" pos:column="38">(<argument><expr><name pos:line="1669" pos:column="39">k<pos:position pos:line="1669" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1669" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1669" pos:column="42"/></expr_stmt>

        <comment type="block" pos:line="1671" pos:column="9">/* If table pTab has not been used in a way that would benefit from
        ** having analysis statistics during the current session, then skip it.
        ** This also has the effect of skipping virtual tables and views */</comment>
        <if pos:line="1674" pos:column="9">if<condition pos:line="1674" pos:column="11">( <expr><operator pos:line="1674" pos:column="13">(<pos:position pos:line="1674" pos:column="14"/></operator><name><name pos:line="1674" pos:column="14">pTab<pos:position pos:line="1674" pos:column="18"/></name><operator pos:line="1674" pos:column="18">-&gt;<pos:position pos:line="1674" pos:column="23"/></operator><name pos:line="1674" pos:column="20">tabFlags<pos:position pos:line="1674" pos:column="28"/></name></name> <operator pos:line="1674" pos:column="29">&amp;<pos:position pos:line="1674" pos:column="34"/></operator> <name pos:line="1674" pos:column="31">TF_StatsUsed<pos:position pos:line="1674" pos:column="43"/></name><operator pos:line="1674" pos:column="43">)<pos:position pos:line="1674" pos:column="44"/></operator><operator pos:line="1674" pos:column="44">==<pos:position pos:line="1674" pos:column="46"/></operator><literal type="number" pos:line="1674" pos:column="46">0<pos:position pos:line="1674" pos:column="47"/></literal></expr> )<pos:position pos:line="1674" pos:column="49"/></condition><then pos:line="1674" pos:column="49"> <block type="pseudo"><continue pos:line="1674" pos:column="50">continue;<pos:position pos:line="1674" pos:column="59"/></continue></block></then></if>

        <comment type="block" pos:line="1676" pos:column="9">/* Reanalyze if the table is 25 times larger than the last analysis */</comment>
        <expr_stmt><expr><name pos:line="1677" pos:column="9">szThreshold<pos:position pos:line="1677" pos:column="20"/></name> <operator pos:line="1677" pos:column="21">=<pos:position pos:line="1677" pos:column="22"/></operator> <name><name pos:line="1677" pos:column="23">pTab<pos:position pos:line="1677" pos:column="27"/></name><operator pos:line="1677" pos:column="27">-&gt;<pos:position pos:line="1677" pos:column="32"/></operator><name pos:line="1677" pos:column="29">nRowLogEst<pos:position pos:line="1677" pos:column="39"/></name></name> <operator pos:line="1677" pos:column="40">+<pos:position pos:line="1677" pos:column="41"/></operator> <literal type="number" pos:line="1677" pos:column="42">46<pos:position pos:line="1677" pos:column="44"/></literal></expr>;<pos:position pos:line="1677" pos:column="45"/></expr_stmt> <expr_stmt><expr><call><name pos:line="1677" pos:column="46">assert<pos:position pos:line="1677" pos:column="52"/></name><argument_list pos:line="1677" pos:column="52">( <argument><expr><call><name pos:line="1677" pos:column="54">sqlite3LogEst<pos:position pos:line="1677" pos:column="67"/></name><argument_list pos:line="1677" pos:column="67">(<argument><expr><literal type="number" pos:line="1677" pos:column="68">25<pos:position pos:line="1677" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="1677" pos:column="71"/></argument_list></call><operator pos:line="1677" pos:column="71">==<pos:position pos:line="1677" pos:column="73"/></operator><literal type="number" pos:line="1677" pos:column="73">46<pos:position pos:line="1677" pos:column="75"/></literal></expr></argument> )<pos:position pos:line="1677" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="1677" pos:column="78"/></expr_stmt>
        <for pos:line="1678" pos:column="9">for<control pos:line="1678" pos:column="12">(<init><expr><name pos:line="1678" pos:column="13">pIdx<pos:position pos:line="1678" pos:column="17"/></name><operator pos:line="1678" pos:column="17">=<pos:position pos:line="1678" pos:column="18"/></operator><name><name pos:line="1678" pos:column="18">pTab<pos:position pos:line="1678" pos:column="22"/></name><operator pos:line="1678" pos:column="22">-&gt;<pos:position pos:line="1678" pos:column="27"/></operator><name pos:line="1678" pos:column="24">pIndex<pos:position pos:line="1678" pos:column="30"/></name></name></expr>;<pos:position pos:line="1678" pos:column="31"/></init> <condition><expr><name pos:line="1678" pos:column="32">pIdx<pos:position pos:line="1678" pos:column="36"/></name></expr>;<pos:position pos:line="1678" pos:column="37"/></condition> <incr><expr><name pos:line="1678" pos:column="38">pIdx<pos:position pos:line="1678" pos:column="42"/></name><operator pos:line="1678" pos:column="42">=<pos:position pos:line="1678" pos:column="43"/></operator><name><name pos:line="1678" pos:column="43">pIdx<pos:position pos:line="1678" pos:column="47"/></name><operator pos:line="1678" pos:column="47">-&gt;<pos:position pos:line="1678" pos:column="52"/></operator><name pos:line="1678" pos:column="49">pNext<pos:position pos:line="1678" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="1678" pos:column="55"/></control><block pos:line="1678" pos:column="55">{
          <if pos:line="1679" pos:column="11">if<condition pos:line="1679" pos:column="13">( <expr><operator pos:line="1679" pos:column="15">!<pos:position pos:line="1679" pos:column="16"/></operator><name><name pos:line="1679" pos:column="16">pIdx<pos:position pos:line="1679" pos:column="20"/></name><operator pos:line="1679" pos:column="20">-&gt;<pos:position pos:line="1679" pos:column="25"/></operator><name pos:line="1679" pos:column="22">hasStat1<pos:position pos:line="1679" pos:column="30"/></name></name></expr> )<pos:position pos:line="1679" pos:column="32"/></condition><then><block pos:line="1679" pos:column="32">{
            <expr_stmt><expr><name pos:line="1680" pos:column="13">szThreshold<pos:position pos:line="1680" pos:column="24"/></name> <operator pos:line="1680" pos:column="25">=<pos:position pos:line="1680" pos:column="26"/></operator> <literal type="number" pos:line="1680" pos:column="27">0<pos:position pos:line="1680" pos:column="28"/></literal></expr>;<pos:position pos:line="1680" pos:column="29"/></expr_stmt> <comment type="block" pos:line="1680" pos:column="30">/* Always analyze if any index lacks statistics */</comment>
            <break pos:line="1681" pos:column="13">break;<pos:position pos:line="1681" pos:column="19"/></break>
          }<pos:position pos:line="1682" pos:column="12"/></block></then></if>
        }<pos:position pos:line="1683" pos:column="10"/></block></for>
        <if pos:line="1684" pos:column="9">if<condition pos:line="1684" pos:column="11">( <expr><name pos:line="1684" pos:column="13">szThreshold<pos:position pos:line="1684" pos:column="24"/></name></expr> )<pos:position pos:line="1684" pos:column="26"/></condition><then><block pos:line="1684" pos:column="26">{
          <expr_stmt><expr><call><name pos:line="1685" pos:column="11">sqlite3OpenTable<pos:position pos:line="1685" pos:column="27"/></name><argument_list pos:line="1685" pos:column="27">(<argument><expr><name pos:line="1685" pos:column="28">pParse<pos:position pos:line="1685" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1685" pos:column="36">iTabCur<pos:position pos:line="1685" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1685" pos:column="45">iDb<pos:position pos:line="1685" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1685" pos:column="50">pTab<pos:position pos:line="1685" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1685" pos:column="56">OP_OpenRead<pos:position pos:line="1685" pos:column="67"/></name></expr></argument>)<pos:position pos:line="1685" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1685" pos:column="69"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1686" pos:column="11">sqlite3VdbeAddOp3<pos:position pos:line="1686" pos:column="28"/></name><argument_list pos:line="1686" pos:column="28">(<argument><expr><name pos:line="1686" pos:column="29">v<pos:position pos:line="1686" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1686" pos:column="32">OP_IfSmaller<pos:position pos:line="1686" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1686" pos:column="46">iTabCur<pos:position pos:line="1686" pos:column="53"/></name></expr></argument>, 
                         <argument><expr><call><name pos:line="1687" pos:column="26">sqlite3VdbeCurrentAddr<pos:position pos:line="1687" pos:column="48"/></name><argument_list pos:line="1687" pos:column="48">(<argument><expr><name pos:line="1687" pos:column="49">v<pos:position pos:line="1687" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1687" pos:column="51"/></argument_list></call><operator pos:line="1687" pos:column="51">+<pos:position pos:line="1687" pos:column="52"/></operator><literal type="number" pos:line="1687" pos:column="52">2<pos:position pos:line="1687" pos:column="53"/></literal><operator pos:line="1687" pos:column="53">+<pos:position pos:line="1687" pos:column="54"/></operator><operator pos:line="1687" pos:column="54">(<pos:position pos:line="1687" pos:column="55"/></operator><name pos:line="1687" pos:column="55">opMask<pos:position pos:line="1687" pos:column="61"/></name><operator pos:line="1687" pos:column="61">&amp;<pos:position pos:line="1687" pos:column="66"/></operator><literal type="number" pos:line="1687" pos:column="62">1<pos:position pos:line="1687" pos:column="63"/></literal><operator pos:line="1687" pos:column="63">)<pos:position pos:line="1687" pos:column="64"/></operator></expr></argument>, <argument><expr><name pos:line="1687" pos:column="66">szThreshold<pos:position pos:line="1687" pos:column="77"/></name></expr></argument>)<pos:position pos:line="1687" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="1687" pos:column="79"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1688" pos:column="11">VdbeCoverage<pos:position pos:line="1688" pos:column="23"/></name><argument_list pos:line="1688" pos:column="23">(<argument><expr><name pos:line="1688" pos:column="24">v<pos:position pos:line="1688" pos:column="25"/></name></expr></argument>)<pos:position pos:line="1688" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="1688" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="1689" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="1690" pos:column="9">zSubSql<pos:position pos:line="1690" pos:column="16"/></name> <operator pos:line="1690" pos:column="17">=<pos:position pos:line="1690" pos:column="18"/></operator> <call><name pos:line="1690" pos:column="19">sqlite3MPrintf<pos:position pos:line="1690" pos:column="33"/></name><argument_list pos:line="1690" pos:column="33">(<argument><expr><name pos:line="1690" pos:column="34">db<pos:position pos:line="1690" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1690" pos:column="38">"ANALYZE \"%w\".\"%w\""<pos:position pos:line="1690" pos:column="61"/></literal></expr></argument>,
                                 <argument><expr><name><name pos:line="1691" pos:column="34">db<pos:position pos:line="1691" pos:column="36"/></name><operator pos:line="1691" pos:column="36">-&gt;<pos:position pos:line="1691" pos:column="41"/></operator><name pos:line="1691" pos:column="38">aDb<pos:position pos:line="1691" pos:column="41"/></name><index pos:line="1691" pos:column="41">[<expr><name pos:line="1691" pos:column="42">iDb<pos:position pos:line="1691" pos:column="45"/></name></expr>]<pos:position pos:line="1691" pos:column="46"/></index></name><operator pos:line="1691" pos:column="46">.<pos:position pos:line="1691" pos:column="47"/></operator><name pos:line="1691" pos:column="47">zDbSName<pos:position pos:line="1691" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="1691" pos:column="57">pTab<pos:position pos:line="1691" pos:column="61"/></name><operator pos:line="1691" pos:column="61">-&gt;<pos:position pos:line="1691" pos:column="66"/></operator><name pos:line="1691" pos:column="63">zName<pos:position pos:line="1691" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="1691" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="1691" pos:column="70"/></expr_stmt>
        <if pos:line="1692" pos:column="9">if<condition pos:line="1692" pos:column="11">( <expr><name pos:line="1692" pos:column="13">opMask<pos:position pos:line="1692" pos:column="19"/></name> <operator pos:line="1692" pos:column="20">&amp;<pos:position pos:line="1692" pos:column="25"/></operator> <literal type="number" pos:line="1692" pos:column="22">0x01<pos:position pos:line="1692" pos:column="26"/></literal></expr> )<pos:position pos:line="1692" pos:column="28"/></condition><then><block pos:line="1692" pos:column="28">{
          <decl_stmt><decl><type><name pos:line="1693" pos:column="11">int<pos:position pos:line="1693" pos:column="14"/></name></type> <name pos:line="1693" pos:column="15">r1<pos:position pos:line="1693" pos:column="17"/></name> <init pos:line="1693" pos:column="18">= <expr><call><name pos:line="1693" pos:column="20">sqlite3GetTempReg<pos:position pos:line="1693" pos:column="37"/></name><argument_list pos:line="1693" pos:column="37">(<argument><expr><name pos:line="1693" pos:column="38">pParse<pos:position pos:line="1693" pos:column="44"/></name></expr></argument>)<pos:position pos:line="1693" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1693" pos:column="46"/></decl_stmt>
          <expr_stmt><expr><call><name pos:line="1694" pos:column="11">sqlite3VdbeAddOp4<pos:position pos:line="1694" pos:column="28"/></name><argument_list pos:line="1694" pos:column="28">(<argument><expr><name pos:line="1694" pos:column="29">v<pos:position pos:line="1694" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1694" pos:column="32">OP_String8<pos:position pos:line="1694" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1694" pos:column="44">0<pos:position pos:line="1694" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="1694" pos:column="47">r1<pos:position pos:line="1694" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1694" pos:column="51">0<pos:position pos:line="1694" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="1694" pos:column="54">zSubSql<pos:position pos:line="1694" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="1694" pos:column="63">P4_DYNAMIC<pos:position pos:line="1694" pos:column="73"/></name></expr></argument>)<pos:position pos:line="1694" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="1694" pos:column="75"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="1695" pos:column="11">sqlite3VdbeAddOp2<pos:position pos:line="1695" pos:column="28"/></name><argument_list pos:line="1695" pos:column="28">(<argument><expr><name pos:line="1695" pos:column="29">v<pos:position pos:line="1695" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1695" pos:column="32">OP_ResultRow<pos:position pos:line="1695" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1695" pos:column="46">r1<pos:position pos:line="1695" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1695" pos:column="50">1<pos:position pos:line="1695" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="1695" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1695" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="1696" pos:column="10"/></block></then><else pos:line="1696" pos:column="10">else<block pos:line="1696" pos:column="14">{
          <expr_stmt><expr><call><name pos:line="1697" pos:column="11">sqlite3VdbeAddOp4<pos:position pos:line="1697" pos:column="28"/></name><argument_list pos:line="1697" pos:column="28">(<argument><expr><name pos:line="1697" pos:column="29">v<pos:position pos:line="1697" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1697" pos:column="32">OP_SqlExec<pos:position pos:line="1697" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1697" pos:column="44">0<pos:position pos:line="1697" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1697" pos:column="47">0<pos:position pos:line="1697" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1697" pos:column="50">0<pos:position pos:line="1697" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="1697" pos:column="53">zSubSql<pos:position pos:line="1697" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1697" pos:column="62">P4_DYNAMIC<pos:position pos:line="1697" pos:column="72"/></name></expr></argument>)<pos:position pos:line="1697" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="1697" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="1698" pos:column="10"/></block></else></if>
      }<pos:position pos:line="1699" pos:column="8"/></block></for>
    }<pos:position pos:line="1700" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="1701" pos:column="5">sqlite3VdbeAddOp0<pos:position pos:line="1701" pos:column="22"/></name><argument_list pos:line="1701" pos:column="22">(<argument><expr><name pos:line="1701" pos:column="23">v<pos:position pos:line="1701" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="1701" pos:column="26">OP_Expire<pos:position pos:line="1701" pos:column="35"/></name></expr></argument>)<pos:position pos:line="1701" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1701" pos:column="37"/></expr_stmt>
    <break pos:line="1702" pos:column="5">break;<pos:position pos:line="1702" pos:column="11"/></break>
  }<pos:position pos:line="1703" pos:column="4"/></block>

  <comment type="block" pos:line="1705" pos:column="3">/*
  **   PRAGMA busy_timeout
  **   PRAGMA busy_timeout = N
  **
  ** Call sqlite3_busy_timeout(db, N).  Return the current timeout value
  ** if one is set.  If no busy handler or a different busy handler is set
  ** then 0 is returned.  Setting the busy_timeout to 0 or negative
  ** disables the timeout.
  */</comment>
  <comment type="block" pos:line="1714" pos:column="3">/*case PragTyp_BUSY_TIMEOUT*/</comment> <default pos:line="1714" pos:column="33">default:<pos:position pos:line="1714" pos:column="41"/></default> <block pos:line="1714" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="1715" pos:column="5">assert<pos:position pos:line="1715" pos:column="11"/></name><argument_list pos:line="1715" pos:column="11">( <argument><expr><name><name pos:line="1715" pos:column="13">pPragma<pos:position pos:line="1715" pos:column="20"/></name><operator pos:line="1715" pos:column="20">-&gt;<pos:position pos:line="1715" pos:column="25"/></operator><name pos:line="1715" pos:column="22">ePragTyp<pos:position pos:line="1715" pos:column="30"/></name></name><operator pos:line="1715" pos:column="30">==<pos:position pos:line="1715" pos:column="32"/></operator><name pos:line="1715" pos:column="32">PragTyp_BUSY_TIMEOUT<pos:position pos:line="1715" pos:column="52"/></name></expr></argument> )<pos:position pos:line="1715" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1715" pos:column="55"/></expr_stmt>
    <if pos:line="1716" pos:column="5">if<condition pos:line="1716" pos:column="7">( <expr><name pos:line="1716" pos:column="9">zRight<pos:position pos:line="1716" pos:column="15"/></name></expr> )<pos:position pos:line="1716" pos:column="17"/></condition><then><block pos:line="1716" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="1717" pos:column="7">sqlite3_busy_timeout<pos:position pos:line="1717" pos:column="27"/></name><argument_list pos:line="1717" pos:column="27">(<argument><expr><name pos:line="1717" pos:column="28">db<pos:position pos:line="1717" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="1717" pos:column="32">sqlite3Atoi<pos:position pos:line="1717" pos:column="43"/></name><argument_list pos:line="1717" pos:column="43">(<argument><expr><name pos:line="1717" pos:column="44">zRight<pos:position pos:line="1717" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1717" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="1717" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1717" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="1718" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="1719" pos:column="5">returnSingleInt<pos:position pos:line="1719" pos:column="20"/></name><argument_list pos:line="1719" pos:column="20">(<argument><expr><name pos:line="1719" pos:column="21">v<pos:position pos:line="1719" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="1719" pos:column="24">db<pos:position pos:line="1719" pos:column="26"/></name><operator pos:line="1719" pos:column="26">-&gt;<pos:position pos:line="1719" pos:column="31"/></operator><name pos:line="1719" pos:column="28">busyTimeout<pos:position pos:line="1719" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="1719" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1719" pos:column="41"/></expr_stmt>
    <break pos:line="1720" pos:column="5">break;<pos:position pos:line="1720" pos:column="11"/></break>
  }<pos:position pos:line="1721" pos:column="4"/></block>

  <comment type="block" pos:line="1723" pos:column="3">/*
  **   PRAGMA soft_heap_limit
  **   PRAGMA soft_heap_limit = N
  **
  ** IMPLEMENTATION-OF: R-26343-45930 This pragma invokes the
  ** sqlite3_soft_heap_limit64() interface with the argument N, if N is
  ** specified and is a non-negative integer.
  ** IMPLEMENTATION-OF: R-64451-07163 The soft_heap_limit pragma always
  ** returns the same integer that would be returned by the
  ** sqlite3_soft_heap_limit64(-1) C-language function.
  */</comment>
  <case pos:line="1734" pos:column="3">case <expr><name pos:line="1734" pos:column="8">PragTyp_SOFT_HEAP_LIMIT<pos:position pos:line="1734" pos:column="31"/></name></expr>:<pos:position pos:line="1734" pos:column="32"/></case> <block pos:line="1734" pos:column="33">{
    <decl_stmt><decl><type><name pos:line="1735" pos:column="5">sqlite3_int64<pos:position pos:line="1735" pos:column="18"/></name></type> <name pos:line="1735" pos:column="19">N<pos:position pos:line="1735" pos:column="20"/></name></decl>;<pos:position pos:line="1735" pos:column="21"/></decl_stmt>
    <if pos:line="1736" pos:column="5">if<condition pos:line="1736" pos:column="7">( <expr><name pos:line="1736" pos:column="9">zRight<pos:position pos:line="1736" pos:column="15"/></name> <operator pos:line="1736" pos:column="16">&amp;&amp;<pos:position pos:line="1736" pos:column="26"/></operator> <call><name pos:line="1736" pos:column="19">sqlite3DecOrHexToI64<pos:position pos:line="1736" pos:column="39"/></name><argument_list pos:line="1736" pos:column="39">(<argument><expr><name pos:line="1736" pos:column="40">zRight<pos:position pos:line="1736" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="1736" pos:column="48">&amp;<pos:position pos:line="1736" pos:column="53"/></operator><name pos:line="1736" pos:column="49">N<pos:position pos:line="1736" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1736" pos:column="51"/></argument_list></call><operator pos:line="1736" pos:column="51">==<pos:position pos:line="1736" pos:column="53"/></operator><name pos:line="1736" pos:column="53">SQLITE_OK<pos:position pos:line="1736" pos:column="62"/></name></expr> )<pos:position pos:line="1736" pos:column="64"/></condition><then><block pos:line="1736" pos:column="64">{
      <expr_stmt><expr><call><name pos:line="1737" pos:column="7">sqlite3_soft_heap_limit64<pos:position pos:line="1737" pos:column="32"/></name><argument_list pos:line="1737" pos:column="32">(<argument><expr><name pos:line="1737" pos:column="33">N<pos:position pos:line="1737" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1737" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1737" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="1738" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="1739" pos:column="5">returnSingleInt<pos:position pos:line="1739" pos:column="20"/></name><argument_list pos:line="1739" pos:column="20">(<argument><expr><name pos:line="1739" pos:column="21">v<pos:position pos:line="1739" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="1739" pos:column="24">sqlite3_soft_heap_limit64<pos:position pos:line="1739" pos:column="49"/></name><argument_list pos:line="1739" pos:column="49">(<argument><expr><operator pos:line="1739" pos:column="50">-<pos:position pos:line="1739" pos:column="51"/></operator><literal type="number" pos:line="1739" pos:column="51">1<pos:position pos:line="1739" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="1739" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="1739" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1739" pos:column="55"/></expr_stmt>
    <break pos:line="1740" pos:column="5">break;<pos:position pos:line="1740" pos:column="11"/></break>
  }<pos:position pos:line="1741" pos:column="4"/></block>

  <comment type="block" pos:line="1743" pos:column="3">/*
  **   PRAGMA threads
  **   PRAGMA threads = N
  **
  ** Configure the maximum number of worker threads.  Return the new
  ** maximum, which might be less than requested.
  */</comment>
  <case pos:line="1750" pos:column="3">case <expr><name pos:line="1750" pos:column="8">PragTyp_THREADS<pos:position pos:line="1750" pos:column="23"/></name></expr>:<pos:position pos:line="1750" pos:column="24"/></case> <block pos:line="1750" pos:column="25">{
    <decl_stmt><decl><type><name pos:line="1751" pos:column="5">sqlite3_int64<pos:position pos:line="1751" pos:column="18"/></name></type> <name pos:line="1751" pos:column="19">N<pos:position pos:line="1751" pos:column="20"/></name></decl>;<pos:position pos:line="1751" pos:column="21"/></decl_stmt>
    <if pos:line="1752" pos:column="5">if<condition pos:line="1752" pos:column="7">( <expr><name pos:line="1752" pos:column="9">zRight<pos:position pos:line="1752" pos:column="15"/></name>
     <operator pos:line="1753" pos:column="6">&amp;&amp;<pos:position pos:line="1753" pos:column="16"/></operator> <call><name pos:line="1753" pos:column="9">sqlite3DecOrHexToI64<pos:position pos:line="1753" pos:column="29"/></name><argument_list pos:line="1753" pos:column="29">(<argument><expr><name pos:line="1753" pos:column="30">zRight<pos:position pos:line="1753" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="1753" pos:column="38">&amp;<pos:position pos:line="1753" pos:column="43"/></operator><name pos:line="1753" pos:column="39">N<pos:position pos:line="1753" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1753" pos:column="41"/></argument_list></call><operator pos:line="1753" pos:column="41">==<pos:position pos:line="1753" pos:column="43"/></operator><name pos:line="1753" pos:column="43">SQLITE_OK<pos:position pos:line="1753" pos:column="52"/></name>
     <operator pos:line="1754" pos:column="6">&amp;&amp;<pos:position pos:line="1754" pos:column="16"/></operator> <name pos:line="1754" pos:column="9">N<pos:position pos:line="1754" pos:column="10"/></name><operator pos:line="1754" pos:column="10">&gt;=<pos:position pos:line="1754" pos:column="15"/></operator><literal type="number" pos:line="1754" pos:column="12">0<pos:position pos:line="1754" pos:column="13"/></literal></expr>
    )<pos:position pos:line="1755" pos:column="6"/></condition><then><block pos:line="1755" pos:column="6">{
      <expr_stmt><expr><call><name pos:line="1756" pos:column="7">sqlite3_limit<pos:position pos:line="1756" pos:column="20"/></name><argument_list pos:line="1756" pos:column="20">(<argument><expr><name pos:line="1756" pos:column="21">db<pos:position pos:line="1756" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1756" pos:column="25">SQLITE_LIMIT_WORKER_THREADS<pos:position pos:line="1756" pos:column="52"/></name></expr></argument>, <argument><expr><call pos:line="1756" pos:column="54">(<name pos:line="1756" pos:column="55">int<pos:position pos:line="1756" pos:column="58"/></name>)<argument_list pos:line="1756" pos:column="59">(<argument><expr><name pos:line="1756" pos:column="60">N<pos:position pos:line="1756" pos:column="61"/></name><operator pos:line="1756" pos:column="61">&amp;<pos:position pos:line="1756" pos:column="66"/></operator><literal type="number" pos:line="1756" pos:column="62">0x7fffffff<pos:position pos:line="1756" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="1756" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="1756" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="1756" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="1757" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="1758" pos:column="5">returnSingleInt<pos:position pos:line="1758" pos:column="20"/></name><argument_list pos:line="1758" pos:column="20">(<argument><expr><name pos:line="1758" pos:column="21">v<pos:position pos:line="1758" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="1758" pos:column="24">sqlite3_limit<pos:position pos:line="1758" pos:column="37"/></name><argument_list pos:line="1758" pos:column="37">(<argument><expr><name pos:line="1758" pos:column="38">db<pos:position pos:line="1758" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="1758" pos:column="42">SQLITE_LIMIT_WORKER_THREADS<pos:position pos:line="1758" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="1758" pos:column="71">-<pos:position pos:line="1758" pos:column="72"/></operator><literal type="number" pos:line="1758" pos:column="72">1<pos:position pos:line="1758" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="1758" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="1758" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="1758" pos:column="76"/></expr_stmt>
    <break pos:line="1759" pos:column="5">break;<pos:position pos:line="1759" pos:column="11"/></break>
  }<pos:position pos:line="1760" pos:column="4"/></block>

<cpp:if pos:line="1762" pos:column="1">#<cpp:directive pos:line="1762" pos:column="2">if<pos:position pos:line="1762" pos:column="4"/></cpp:directive> <expr><call><name pos:line="1762" pos:column="5">defined<pos:position pos:line="1762" pos:column="12"/></name><argument_list pos:line="1762" pos:column="12">(<argument><expr><name pos:line="1762" pos:column="13">SQLITE_DEBUG<pos:position pos:line="1762" pos:column="25"/></name></expr></argument>)<pos:position pos:line="1762" pos:column="26"/></argument_list></call> <operator pos:line="1762" pos:column="27">||<pos:position pos:line="1762" pos:column="29"/></operator> <call><name pos:line="1762" pos:column="30">defined<pos:position pos:line="1762" pos:column="37"/></name><argument_list pos:line="1762" pos:column="37">(<argument><expr><name pos:line="1762" pos:column="38">SQLITE_TEST<pos:position pos:line="1762" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1762" pos:column="50"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="1763" pos:column="3">/*
  ** Report the current state of file logs for all databases
  */</comment>
  <case pos:line="1766" pos:column="3">case <expr><name pos:line="1766" pos:column="8">PragTyp_LOCK_STATUS<pos:position pos:line="1766" pos:column="27"/></name></expr>:<pos:position pos:line="1766" pos:column="28"/></case> <block pos:line="1766" pos:column="29">{
    <decl_stmt><decl><specifier pos:line="1767" pos:column="5">static<pos:position pos:line="1767" pos:column="11"/></specifier> <type><specifier pos:line="1767" pos:column="12">const<pos:position pos:line="1767" pos:column="17"/></specifier> <name pos:line="1767" pos:column="18">char<pos:position pos:line="1767" pos:column="22"/></name> <modifier pos:line="1767" pos:column="23">*<pos:position pos:line="1767" pos:column="24"/></modifier><specifier pos:line="1767" pos:column="24">const<pos:position pos:line="1767" pos:column="29"/></specifier></type> <name><name pos:line="1767" pos:column="30">azLockName<pos:position pos:line="1767" pos:column="40"/></name><index pos:line="1767" pos:column="40">[]<pos:position pos:line="1767" pos:column="42"/></index></name> <init pos:line="1767" pos:column="43">= <expr><block pos:line="1767" pos:column="45">{
      <expr><literal type="string" pos:line="1768" pos:column="7">"unlocked"<pos:position pos:line="1768" pos:column="17"/></literal></expr>, <expr><literal type="string" pos:line="1768" pos:column="19">"shared"<pos:position pos:line="1768" pos:column="27"/></literal></expr>, <expr><literal type="string" pos:line="1768" pos:column="29">"reserved"<pos:position pos:line="1768" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="1768" pos:column="41">"pending"<pos:position pos:line="1768" pos:column="50"/></literal></expr>, <expr><literal type="string" pos:line="1768" pos:column="52">"exclusive"<pos:position pos:line="1768" pos:column="63"/></literal></expr>
    }<pos:position pos:line="1769" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="1769" pos:column="7"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1770" pos:column="5">int<pos:position pos:line="1770" pos:column="8"/></name></type> <name pos:line="1770" pos:column="9">i<pos:position pos:line="1770" pos:column="10"/></name></decl>;<pos:position pos:line="1770" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="1771" pos:column="5">pParse<pos:position pos:line="1771" pos:column="11"/></name><operator pos:line="1771" pos:column="11">-&gt;<pos:position pos:line="1771" pos:column="16"/></operator><name pos:line="1771" pos:column="13">nMem<pos:position pos:line="1771" pos:column="17"/></name></name> <operator pos:line="1771" pos:column="18">=<pos:position pos:line="1771" pos:column="19"/></operator> <literal type="number" pos:line="1771" pos:column="20">2<pos:position pos:line="1771" pos:column="21"/></literal></expr>;<pos:position pos:line="1771" pos:column="22"/></expr_stmt>
    <for pos:line="1772" pos:column="5">for<control pos:line="1772" pos:column="8">(<init><expr><name pos:line="1772" pos:column="9">i<pos:position pos:line="1772" pos:column="10"/></name><operator pos:line="1772" pos:column="10">=<pos:position pos:line="1772" pos:column="11"/></operator><literal type="number" pos:line="1772" pos:column="11">0<pos:position pos:line="1772" pos:column="12"/></literal></expr>;<pos:position pos:line="1772" pos:column="13"/></init> <condition><expr><name pos:line="1772" pos:column="14">i<pos:position pos:line="1772" pos:column="15"/></name><operator pos:line="1772" pos:column="15">&lt;<pos:position pos:line="1772" pos:column="19"/></operator><name><name pos:line="1772" pos:column="16">db<pos:position pos:line="1772" pos:column="18"/></name><operator pos:line="1772" pos:column="18">-&gt;<pos:position pos:line="1772" pos:column="23"/></operator><name pos:line="1772" pos:column="20">nDb<pos:position pos:line="1772" pos:column="23"/></name></name></expr>;<pos:position pos:line="1772" pos:column="24"/></condition> <incr><expr><name pos:line="1772" pos:column="25">i<pos:position pos:line="1772" pos:column="26"/></name><operator pos:line="1772" pos:column="26">++<pos:position pos:line="1772" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="1772" pos:column="29"/></control><block pos:line="1772" pos:column="29">{
      <decl_stmt><decl><type><name pos:line="1773" pos:column="7">Btree<pos:position pos:line="1773" pos:column="12"/></name> <modifier pos:line="1773" pos:column="13">*<pos:position pos:line="1773" pos:column="14"/></modifier></type><name pos:line="1773" pos:column="14">pBt<pos:position pos:line="1773" pos:column="17"/></name></decl>;<pos:position pos:line="1773" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="1774" pos:column="7">const<pos:position pos:line="1774" pos:column="12"/></specifier> <name pos:line="1774" pos:column="13">char<pos:position pos:line="1774" pos:column="17"/></name> <modifier pos:line="1774" pos:column="18">*<pos:position pos:line="1774" pos:column="19"/></modifier></type><name pos:line="1774" pos:column="19">zState<pos:position pos:line="1774" pos:column="25"/></name> <init pos:line="1774" pos:column="26">= <expr><literal type="string" pos:line="1774" pos:column="28">"unknown"<pos:position pos:line="1774" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="1774" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="1775" pos:column="7">int<pos:position pos:line="1775" pos:column="10"/></name></type> <name pos:line="1775" pos:column="11">j<pos:position pos:line="1775" pos:column="12"/></name></decl>;<pos:position pos:line="1775" pos:column="13"/></decl_stmt>
      <if pos:line="1776" pos:column="7">if<condition pos:line="1776" pos:column="9">( <expr><name><name pos:line="1776" pos:column="11">db<pos:position pos:line="1776" pos:column="13"/></name><operator pos:line="1776" pos:column="13">-&gt;<pos:position pos:line="1776" pos:column="18"/></operator><name pos:line="1776" pos:column="15">aDb<pos:position pos:line="1776" pos:column="18"/></name><index pos:line="1776" pos:column="18">[<expr><name pos:line="1776" pos:column="19">i<pos:position pos:line="1776" pos:column="20"/></name></expr>]<pos:position pos:line="1776" pos:column="21"/></index></name><operator pos:line="1776" pos:column="21">.<pos:position pos:line="1776" pos:column="22"/></operator><name pos:line="1776" pos:column="22">zDbSName<pos:position pos:line="1776" pos:column="30"/></name><operator pos:line="1776" pos:column="30">==<pos:position pos:line="1776" pos:column="32"/></operator><literal type="number" pos:line="1776" pos:column="32">0<pos:position pos:line="1776" pos:column="33"/></literal></expr> )<pos:position pos:line="1776" pos:column="35"/></condition><then pos:line="1776" pos:column="35"> <block type="pseudo"><continue pos:line="1776" pos:column="36">continue;<pos:position pos:line="1776" pos:column="45"/></continue></block></then></if>
      <expr_stmt><expr><name pos:line="1777" pos:column="7">pBt<pos:position pos:line="1777" pos:column="10"/></name> <operator pos:line="1777" pos:column="11">=<pos:position pos:line="1777" pos:column="12"/></operator> <name><name pos:line="1777" pos:column="13">db<pos:position pos:line="1777" pos:column="15"/></name><operator pos:line="1777" pos:column="15">-&gt;<pos:position pos:line="1777" pos:column="20"/></operator><name pos:line="1777" pos:column="17">aDb<pos:position pos:line="1777" pos:column="20"/></name><index pos:line="1777" pos:column="20">[<expr><name pos:line="1777" pos:column="21">i<pos:position pos:line="1777" pos:column="22"/></name></expr>]<pos:position pos:line="1777" pos:column="23"/></index></name><operator pos:line="1777" pos:column="23">.<pos:position pos:line="1777" pos:column="24"/></operator><name pos:line="1777" pos:column="24">pBt<pos:position pos:line="1777" pos:column="27"/></name></expr>;<pos:position pos:line="1777" pos:column="28"/></expr_stmt>
      <if pos:line="1778" pos:column="7">if<condition pos:line="1778" pos:column="9">( <expr><name pos:line="1778" pos:column="11">pBt<pos:position pos:line="1778" pos:column="14"/></name><operator pos:line="1778" pos:column="14">==<pos:position pos:line="1778" pos:column="16"/></operator><literal type="number" pos:line="1778" pos:column="16">0<pos:position pos:line="1778" pos:column="17"/></literal> <operator pos:line="1778" pos:column="18">||<pos:position pos:line="1778" pos:column="20"/></operator> <call><name pos:line="1778" pos:column="21">sqlite3BtreePager<pos:position pos:line="1778" pos:column="38"/></name><argument_list pos:line="1778" pos:column="38">(<argument><expr><name pos:line="1778" pos:column="39">pBt<pos:position pos:line="1778" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1778" pos:column="43"/></argument_list></call><operator pos:line="1778" pos:column="43">==<pos:position pos:line="1778" pos:column="45"/></operator><literal type="number" pos:line="1778" pos:column="45">0<pos:position pos:line="1778" pos:column="46"/></literal></expr> )<pos:position pos:line="1778" pos:column="48"/></condition><then><block pos:line="1778" pos:column="48">{
        <expr_stmt><expr><name pos:line="1779" pos:column="9">zState<pos:position pos:line="1779" pos:column="15"/></name> <operator pos:line="1779" pos:column="16">=<pos:position pos:line="1779" pos:column="17"/></operator> <literal type="string" pos:line="1779" pos:column="18">"closed"<pos:position pos:line="1779" pos:column="26"/></literal></expr>;<pos:position pos:line="1779" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="1780" pos:column="8"/></block></then><elseif pos:line="1780" pos:column="8">else <if pos:line="1780" pos:column="13">if<condition pos:line="1780" pos:column="15">( <expr><call><name pos:line="1780" pos:column="17">sqlite3_file_control<pos:position pos:line="1780" pos:column="37"/></name><argument_list pos:line="1780" pos:column="37">(<argument><expr><name pos:line="1780" pos:column="38">db<pos:position pos:line="1780" pos:column="40"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="1780" pos:column="42">i<pos:position pos:line="1780" pos:column="43"/></name></expr> ?<pos:position pos:line="1780" pos:column="45"/></condition><then pos:line="1780" pos:column="45"> <expr><name><name pos:line="1780" pos:column="46">db<pos:position pos:line="1780" pos:column="48"/></name><operator pos:line="1780" pos:column="48">-&gt;<pos:position pos:line="1780" pos:column="53"/></operator><name pos:line="1780" pos:column="50">aDb<pos:position pos:line="1780" pos:column="53"/></name><index pos:line="1780" pos:column="53">[<expr><name pos:line="1780" pos:column="54">i<pos:position pos:line="1780" pos:column="55"/></name></expr>]<pos:position pos:line="1780" pos:column="56"/></index></name><operator pos:line="1780" pos:column="56">.<pos:position pos:line="1780" pos:column="57"/></operator><name pos:line="1780" pos:column="57">zDbSName<pos:position pos:line="1780" pos:column="65"/></name></expr> <pos:position pos:line="1780" pos:column="66"/></then><else pos:line="1780" pos:column="66">: <expr><literal type="number" pos:line="1780" pos:column="68">0<pos:position pos:line="1780" pos:column="69"/></literal></expr></else></ternary></expr></argument>, 
                                     <argument><expr><name pos:line="1781" pos:column="38">SQLITE_FCNTL_LOCKSTATE<pos:position pos:line="1781" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="1781" pos:column="62">&amp;<pos:position pos:line="1781" pos:column="67"/></operator><name pos:line="1781" pos:column="63">j<pos:position pos:line="1781" pos:column="64"/></name></expr></argument>)<pos:position pos:line="1781" pos:column="65"/></argument_list></call><operator pos:line="1781" pos:column="65">==<pos:position pos:line="1781" pos:column="67"/></operator><name pos:line="1781" pos:column="67">SQLITE_OK<pos:position pos:line="1781" pos:column="76"/></name></expr> )<pos:position pos:line="1781" pos:column="78"/></condition><then><block pos:line="1781" pos:column="78">{
         <expr_stmt><expr><name pos:line="1782" pos:column="10">zState<pos:position pos:line="1782" pos:column="16"/></name> <operator pos:line="1782" pos:column="17">=<pos:position pos:line="1782" pos:column="18"/></operator> <name><name pos:line="1782" pos:column="19">azLockName<pos:position pos:line="1782" pos:column="29"/></name><index pos:line="1782" pos:column="29">[<expr><name pos:line="1782" pos:column="30">j<pos:position pos:line="1782" pos:column="31"/></name></expr>]<pos:position pos:line="1782" pos:column="32"/></index></name></expr>;<pos:position pos:line="1782" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="1783" pos:column="8"/></block></then></if></elseif></if>
      <expr_stmt><expr><call><name pos:line="1784" pos:column="7">sqlite3VdbeMultiLoad<pos:position pos:line="1784" pos:column="27"/></name><argument_list pos:line="1784" pos:column="27">(<argument><expr><name pos:line="1784" pos:column="28">v<pos:position pos:line="1784" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1784" pos:column="31">1<pos:position pos:line="1784" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1784" pos:column="34">"ss"<pos:position pos:line="1784" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="1784" pos:column="40">db<pos:position pos:line="1784" pos:column="42"/></name><operator pos:line="1784" pos:column="42">-&gt;<pos:position pos:line="1784" pos:column="47"/></operator><name pos:line="1784" pos:column="44">aDb<pos:position pos:line="1784" pos:column="47"/></name><index pos:line="1784" pos:column="47">[<expr><name pos:line="1784" pos:column="48">i<pos:position pos:line="1784" pos:column="49"/></name></expr>]<pos:position pos:line="1784" pos:column="50"/></index></name><operator pos:line="1784" pos:column="50">.<pos:position pos:line="1784" pos:column="51"/></operator><name pos:line="1784" pos:column="51">zDbSName<pos:position pos:line="1784" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="1784" pos:column="61">zState<pos:position pos:line="1784" pos:column="67"/></name></expr></argument>)<pos:position pos:line="1784" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1784" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="1785" pos:column="6"/></block></for>
    <break pos:line="1786" pos:column="5">break;<pos:position pos:line="1786" pos:column="11"/></break>
  }<pos:position pos:line="1787" pos:column="4"/></block>
<cpp:endif pos:line="1788" pos:column="1">#<cpp:directive pos:line="1788" pos:column="2">endif<pos:position pos:line="1788" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="1790" pos:column="1">#<cpp:directive pos:line="1790" pos:column="2">ifdef<pos:position pos:line="1790" pos:column="7"/></cpp:directive> <name pos:line="1790" pos:column="8">SQLITE_HAS_CODEC<pos:position pos:line="1790" pos:column="24"/></name></cpp:ifdef>
  <case pos:line="1791" pos:column="3">case <expr><name pos:line="1791" pos:column="8">PragTyp_KEY<pos:position pos:line="1791" pos:column="19"/></name></expr>:<pos:position pos:line="1791" pos:column="20"/></case> <block pos:line="1791" pos:column="21">{
    <if pos:line="1792" pos:column="5">if<condition pos:line="1792" pos:column="7">( <expr><name pos:line="1792" pos:column="9">zRight<pos:position pos:line="1792" pos:column="15"/></name></expr> )<pos:position pos:line="1792" pos:column="17"/></condition><then pos:line="1792" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1792" pos:column="18">sqlite3_key_v2<pos:position pos:line="1792" pos:column="32"/></name><argument_list pos:line="1792" pos:column="32">(<argument><expr><name pos:line="1792" pos:column="33">db<pos:position pos:line="1792" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1792" pos:column="37">zDb<pos:position pos:line="1792" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="1792" pos:column="42">zRight<pos:position pos:line="1792" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="1792" pos:column="50">sqlite3Strlen30<pos:position pos:line="1792" pos:column="65"/></name><argument_list pos:line="1792" pos:column="65">(<argument><expr><name pos:line="1792" pos:column="66">zRight<pos:position pos:line="1792" pos:column="72"/></name></expr></argument>)<pos:position pos:line="1792" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="1792" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="1792" pos:column="75"/></expr_stmt></block></then></if>
    <break pos:line="1793" pos:column="5">break;<pos:position pos:line="1793" pos:column="11"/></break>
  }<pos:position pos:line="1794" pos:column="4"/></block>
  <case pos:line="1795" pos:column="3">case <expr><name pos:line="1795" pos:column="8">PragTyp_REKEY<pos:position pos:line="1795" pos:column="21"/></name></expr>:<pos:position pos:line="1795" pos:column="22"/></case> <block pos:line="1795" pos:column="23">{
    <if pos:line="1796" pos:column="5">if<condition pos:line="1796" pos:column="7">( <expr><name pos:line="1796" pos:column="9">zRight<pos:position pos:line="1796" pos:column="15"/></name></expr> )<pos:position pos:line="1796" pos:column="17"/></condition><then pos:line="1796" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="1796" pos:column="18">sqlite3_rekey_v2<pos:position pos:line="1796" pos:column="34"/></name><argument_list pos:line="1796" pos:column="34">(<argument><expr><name pos:line="1796" pos:column="35">db<pos:position pos:line="1796" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1796" pos:column="39">zDb<pos:position pos:line="1796" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1796" pos:column="44">zRight<pos:position pos:line="1796" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="1796" pos:column="52">sqlite3Strlen30<pos:position pos:line="1796" pos:column="67"/></name><argument_list pos:line="1796" pos:column="67">(<argument><expr><name pos:line="1796" pos:column="68">zRight<pos:position pos:line="1796" pos:column="74"/></name></expr></argument>)<pos:position pos:line="1796" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="1796" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="1796" pos:column="77"/></expr_stmt></block></then></if>
    <break pos:line="1797" pos:column="5">break;<pos:position pos:line="1797" pos:column="11"/></break>
  }<pos:position pos:line="1798" pos:column="4"/></block>
  <case pos:line="1799" pos:column="3">case <expr><name pos:line="1799" pos:column="8">PragTyp_HEXKEY<pos:position pos:line="1799" pos:column="22"/></name></expr>:<pos:position pos:line="1799" pos:column="23"/></case> <block pos:line="1799" pos:column="24">{
    <if pos:line="1800" pos:column="5">if<condition pos:line="1800" pos:column="7">( <expr><name pos:line="1800" pos:column="9">zRight<pos:position pos:line="1800" pos:column="15"/></name></expr> )<pos:position pos:line="1800" pos:column="17"/></condition><then><block pos:line="1800" pos:column="17">{
      <decl_stmt><decl><type><name pos:line="1801" pos:column="7">u8<pos:position pos:line="1801" pos:column="9"/></name></type> <name pos:line="1801" pos:column="10">iByte<pos:position pos:line="1801" pos:column="15"/></name></decl>;<pos:position pos:line="1801" pos:column="16"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="1802" pos:column="7">int<pos:position pos:line="1802" pos:column="10"/></name></type> <name pos:line="1802" pos:column="11">i<pos:position pos:line="1802" pos:column="12"/></name></decl>;<pos:position pos:line="1802" pos:column="13"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="1803" pos:column="7">char<pos:position pos:line="1803" pos:column="11"/></name></type> <name><name pos:line="1803" pos:column="12">zKey<pos:position pos:line="1803" pos:column="16"/></name><index pos:line="1803" pos:column="16">[<expr><literal type="number" pos:line="1803" pos:column="17">40<pos:position pos:line="1803" pos:column="19"/></literal></expr>]<pos:position pos:line="1803" pos:column="20"/></index></name></decl>;<pos:position pos:line="1803" pos:column="21"/></decl_stmt>
      <for pos:line="1804" pos:column="7">for<control pos:line="1804" pos:column="10">(<init><expr><name pos:line="1804" pos:column="11">i<pos:position pos:line="1804" pos:column="12"/></name><operator pos:line="1804" pos:column="12">=<pos:position pos:line="1804" pos:column="13"/></operator><literal type="number" pos:line="1804" pos:column="13">0<pos:position pos:line="1804" pos:column="14"/></literal></expr><operator pos:line="1804" pos:column="14">,<pos:position pos:line="1804" pos:column="15"/></operator> <expr><name pos:line="1804" pos:column="16">iByte<pos:position pos:line="1804" pos:column="21"/></name><operator pos:line="1804" pos:column="21">=<pos:position pos:line="1804" pos:column="22"/></operator><literal type="number" pos:line="1804" pos:column="22">0<pos:position pos:line="1804" pos:column="23"/></literal></expr>;<pos:position pos:line="1804" pos:column="24"/></init> <condition><expr><name pos:line="1804" pos:column="25">i<pos:position pos:line="1804" pos:column="26"/></name><operator pos:line="1804" pos:column="26">&lt;<pos:position pos:line="1804" pos:column="30"/></operator><sizeof pos:line="1804" pos:column="27">sizeof<argument_list pos:line="1804" pos:column="33">(<argument><expr><name pos:line="1804" pos:column="34">zKey<pos:position pos:line="1804" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1804" pos:column="39"/></argument_list></sizeof><operator pos:line="1804" pos:column="39">*<pos:position pos:line="1804" pos:column="40"/></operator><literal type="number" pos:line="1804" pos:column="40">2<pos:position pos:line="1804" pos:column="41"/></literal> <operator pos:line="1804" pos:column="42">&amp;&amp;<pos:position pos:line="1804" pos:column="52"/></operator> <call><name pos:line="1804" pos:column="45">sqlite3Isxdigit<pos:position pos:line="1804" pos:column="60"/></name><argument_list pos:line="1804" pos:column="60">(<argument><expr><name><name pos:line="1804" pos:column="61">zRight<pos:position pos:line="1804" pos:column="67"/></name><index pos:line="1804" pos:column="67">[<expr><name pos:line="1804" pos:column="68">i<pos:position pos:line="1804" pos:column="69"/></name></expr>]<pos:position pos:line="1804" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="1804" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="1804" pos:column="72"/></condition> <incr><expr><name pos:line="1804" pos:column="73">i<pos:position pos:line="1804" pos:column="74"/></name><operator pos:line="1804" pos:column="74">++<pos:position pos:line="1804" pos:column="76"/></operator></expr></incr>)<pos:position pos:line="1804" pos:column="77"/></control><block pos:line="1804" pos:column="77">{
        <expr_stmt><expr><name pos:line="1805" pos:column="9">iByte<pos:position pos:line="1805" pos:column="14"/></name> <operator pos:line="1805" pos:column="15">=<pos:position pos:line="1805" pos:column="16"/></operator> <operator pos:line="1805" pos:column="17">(<pos:position pos:line="1805" pos:column="18"/></operator><name pos:line="1805" pos:column="18">iByte<pos:position pos:line="1805" pos:column="23"/></name><operator pos:line="1805" pos:column="23">&lt;&lt;<pos:position pos:line="1805" pos:column="31"/></operator><literal type="number" pos:line="1805" pos:column="25">4<pos:position pos:line="1805" pos:column="26"/></literal><operator pos:line="1805" pos:column="26">)<pos:position pos:line="1805" pos:column="27"/></operator> <operator pos:line="1805" pos:column="28">+<pos:position pos:line="1805" pos:column="29"/></operator> <call><name pos:line="1805" pos:column="30">sqlite3HexToInt<pos:position pos:line="1805" pos:column="45"/></name><argument_list pos:line="1805" pos:column="45">(<argument><expr><name><name pos:line="1805" pos:column="46">zRight<pos:position pos:line="1805" pos:column="52"/></name><index pos:line="1805" pos:column="52">[<expr><name pos:line="1805" pos:column="53">i<pos:position pos:line="1805" pos:column="54"/></name></expr>]<pos:position pos:line="1805" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="1805" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1805" pos:column="57"/></expr_stmt>
        <if pos:line="1806" pos:column="9">if<condition pos:line="1806" pos:column="11">( <expr><operator pos:line="1806" pos:column="13">(<pos:position pos:line="1806" pos:column="14"/></operator><name pos:line="1806" pos:column="14">i<pos:position pos:line="1806" pos:column="15"/></name><operator pos:line="1806" pos:column="15">&amp;<pos:position pos:line="1806" pos:column="20"/></operator><literal type="number" pos:line="1806" pos:column="16">1<pos:position pos:line="1806" pos:column="17"/></literal><operator pos:line="1806" pos:column="17">)<pos:position pos:line="1806" pos:column="18"/></operator><operator pos:line="1806" pos:column="18">!=<pos:position pos:line="1806" pos:column="20"/></operator><literal type="number" pos:line="1806" pos:column="20">0<pos:position pos:line="1806" pos:column="21"/></literal></expr> )<pos:position pos:line="1806" pos:column="23"/></condition><then pos:line="1806" pos:column="23"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="1806" pos:column="24">zKey<pos:position pos:line="1806" pos:column="28"/></name><index pos:line="1806" pos:column="28">[<expr><name pos:line="1806" pos:column="29">i<pos:position pos:line="1806" pos:column="30"/></name><operator pos:line="1806" pos:column="30">/<pos:position pos:line="1806" pos:column="31"/></operator><literal type="number" pos:line="1806" pos:column="31">2<pos:position pos:line="1806" pos:column="32"/></literal></expr>]<pos:position pos:line="1806" pos:column="33"/></index></name> <operator pos:line="1806" pos:column="34">=<pos:position pos:line="1806" pos:column="35"/></operator> <name pos:line="1806" pos:column="36">iByte<pos:position pos:line="1806" pos:column="41"/></name></expr>;<pos:position pos:line="1806" pos:column="42"/></expr_stmt></block></then></if>
      }<pos:position pos:line="1807" pos:column="8"/></block></for>
      <if pos:line="1808" pos:column="7">if<condition pos:line="1808" pos:column="9">( <expr><operator pos:line="1808" pos:column="11">(<pos:position pos:line="1808" pos:column="12"/></operator><name><name pos:line="1808" pos:column="12">zLeft<pos:position pos:line="1808" pos:column="17"/></name><index pos:line="1808" pos:column="17">[<expr><literal type="number" pos:line="1808" pos:column="18">3<pos:position pos:line="1808" pos:column="19"/></literal></expr>]<pos:position pos:line="1808" pos:column="20"/></index></name> <operator pos:line="1808" pos:column="21">&amp;<pos:position pos:line="1808" pos:column="26"/></operator> <literal type="number" pos:line="1808" pos:column="23">0xf<pos:position pos:line="1808" pos:column="26"/></literal><operator pos:line="1808" pos:column="26">)<pos:position pos:line="1808" pos:column="27"/></operator><operator pos:line="1808" pos:column="27">==<pos:position pos:line="1808" pos:column="29"/></operator><literal type="number" pos:line="1808" pos:column="29">0xb<pos:position pos:line="1808" pos:column="32"/></literal></expr> )<pos:position pos:line="1808" pos:column="34"/></condition><then><block pos:line="1808" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="1809" pos:column="9">sqlite3_key_v2<pos:position pos:line="1809" pos:column="23"/></name><argument_list pos:line="1809" pos:column="23">(<argument><expr><name pos:line="1809" pos:column="24">db<pos:position pos:line="1809" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1809" pos:column="28">zDb<pos:position pos:line="1809" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1809" pos:column="33">zKey<pos:position pos:line="1809" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1809" pos:column="39">i<pos:position pos:line="1809" pos:column="40"/></name><operator pos:line="1809" pos:column="40">/<pos:position pos:line="1809" pos:column="41"/></operator><literal type="number" pos:line="1809" pos:column="41">2<pos:position pos:line="1809" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="1809" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1809" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="1810" pos:column="8"/></block></then><else pos:line="1810" pos:column="8">else<block pos:line="1810" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="1811" pos:column="9">sqlite3_rekey_v2<pos:position pos:line="1811" pos:column="25"/></name><argument_list pos:line="1811" pos:column="25">(<argument><expr><name pos:line="1811" pos:column="26">db<pos:position pos:line="1811" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1811" pos:column="30">zDb<pos:position pos:line="1811" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1811" pos:column="35">zKey<pos:position pos:line="1811" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1811" pos:column="41">i<pos:position pos:line="1811" pos:column="42"/></name><operator pos:line="1811" pos:column="42">/<pos:position pos:line="1811" pos:column="43"/></operator><literal type="number" pos:line="1811" pos:column="43">2<pos:position pos:line="1811" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="1811" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1811" pos:column="46"/></expr_stmt>
      }<pos:position pos:line="1812" pos:column="8"/></block></else></if>
    }<pos:position pos:line="1813" pos:column="6"/></block></then></if>
    <break pos:line="1814" pos:column="5">break;<pos:position pos:line="1814" pos:column="11"/></break>
  }<pos:position pos:line="1815" pos:column="4"/></block>
<cpp:endif pos:line="1816" pos:column="1">#<cpp:directive pos:line="1816" pos:column="2">endif<pos:position pos:line="1816" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="1817" pos:column="1">#<cpp:directive pos:line="1817" pos:column="2">if<pos:position pos:line="1817" pos:column="4"/></cpp:directive> <expr><call><name pos:line="1817" pos:column="5">defined<pos:position pos:line="1817" pos:column="12"/></name><argument_list pos:line="1817" pos:column="12">(<argument><expr><name pos:line="1817" pos:column="13">SQLITE_HAS_CODEC<pos:position pos:line="1817" pos:column="29"/></name></expr></argument>)<pos:position pos:line="1817" pos:column="30"/></argument_list></call> <operator pos:line="1817" pos:column="31">||<pos:position pos:line="1817" pos:column="33"/></operator> <call><name pos:line="1817" pos:column="34">defined<pos:position pos:line="1817" pos:column="41"/></name><argument_list pos:line="1817" pos:column="41">(<argument><expr><name pos:line="1817" pos:column="42">SQLITE_ENABLE_CEROD<pos:position pos:line="1817" pos:column="61"/></name></expr></argument>)<pos:position pos:line="1817" pos:column="62"/></argument_list></call></expr></cpp:if>
  <case pos:line="1818" pos:column="3">case <expr><name pos:line="1818" pos:column="8">PragTyp_ACTIVATE_EXTENSIONS<pos:position pos:line="1818" pos:column="35"/></name></expr>:<pos:position pos:line="1818" pos:column="36"/></case> <if pos:line="1818" pos:column="37">if<condition pos:line="1818" pos:column="39">( <expr><name pos:line="1818" pos:column="41">zRight<pos:position pos:line="1818" pos:column="47"/></name></expr> )<pos:position pos:line="1818" pos:column="49"/></condition><then><block pos:line="1818" pos:column="49">{
<cpp:ifdef pos:line="1819" pos:column="1">#<cpp:directive pos:line="1819" pos:column="2">ifdef<pos:position pos:line="1819" pos:column="7"/></cpp:directive> <name pos:line="1819" pos:column="8">SQLITE_HAS_CODEC<pos:position pos:line="1819" pos:column="24"/></name></cpp:ifdef>
    <if pos:line="1820" pos:column="5">if<condition pos:line="1820" pos:column="7">( <expr><call><name pos:line="1820" pos:column="9">sqlite3StrNICmp<pos:position pos:line="1820" pos:column="24"/></name><argument_list pos:line="1820" pos:column="24">(<argument><expr><name pos:line="1820" pos:column="25">zRight<pos:position pos:line="1820" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1820" pos:column="33">"see-"<pos:position pos:line="1820" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1820" pos:column="41">4<pos:position pos:line="1820" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="1820" pos:column="43"/></argument_list></call><operator pos:line="1820" pos:column="43">==<pos:position pos:line="1820" pos:column="45"/></operator><literal type="number" pos:line="1820" pos:column="45">0<pos:position pos:line="1820" pos:column="46"/></literal></expr> )<pos:position pos:line="1820" pos:column="48"/></condition><then><block pos:line="1820" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="1821" pos:column="7">sqlite3_activate_see<pos:position pos:line="1821" pos:column="27"/></name><argument_list pos:line="1821" pos:column="27">(<argument><expr><operator pos:line="1821" pos:column="28">&amp;<pos:position pos:line="1821" pos:column="33"/></operator><name><name pos:line="1821" pos:column="29">zRight<pos:position pos:line="1821" pos:column="35"/></name><index pos:line="1821" pos:column="35">[<expr><literal type="number" pos:line="1821" pos:column="36">4<pos:position pos:line="1821" pos:column="37"/></literal></expr>]<pos:position pos:line="1821" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="1821" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1821" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="1822" pos:column="6"/></block></then></if>
<cpp:endif pos:line="1823" pos:column="1">#<cpp:directive pos:line="1823" pos:column="2">endif<pos:position pos:line="1823" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="1824" pos:column="1">#<cpp:directive pos:line="1824" pos:column="2">ifdef<pos:position pos:line="1824" pos:column="7"/></cpp:directive> <name pos:line="1824" pos:column="8">SQLITE_ENABLE_CEROD<pos:position pos:line="1824" pos:column="27"/></name></cpp:ifdef>
    <if pos:line="1825" pos:column="5">if<condition pos:line="1825" pos:column="7">( <expr><call><name pos:line="1825" pos:column="9">sqlite3StrNICmp<pos:position pos:line="1825" pos:column="24"/></name><argument_list pos:line="1825" pos:column="24">(<argument><expr><name pos:line="1825" pos:column="25">zRight<pos:position pos:line="1825" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1825" pos:column="33">"cerod-"<pos:position pos:line="1825" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1825" pos:column="43">6<pos:position pos:line="1825" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="1825" pos:column="45"/></argument_list></call><operator pos:line="1825" pos:column="45">==<pos:position pos:line="1825" pos:column="47"/></operator><literal type="number" pos:line="1825" pos:column="47">0<pos:position pos:line="1825" pos:column="48"/></literal></expr> )<pos:position pos:line="1825" pos:column="50"/></condition><then><block pos:line="1825" pos:column="50">{
      <expr_stmt><expr><call><name pos:line="1826" pos:column="7">sqlite3_activate_cerod<pos:position pos:line="1826" pos:column="29"/></name><argument_list pos:line="1826" pos:column="29">(<argument><expr><operator pos:line="1826" pos:column="30">&amp;<pos:position pos:line="1826" pos:column="35"/></operator><name><name pos:line="1826" pos:column="31">zRight<pos:position pos:line="1826" pos:column="37"/></name><index pos:line="1826" pos:column="37">[<expr><literal type="number" pos:line="1826" pos:column="38">6<pos:position pos:line="1826" pos:column="39"/></literal></expr>]<pos:position pos:line="1826" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="1826" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1826" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="1827" pos:column="6"/></block></then></if>
<cpp:endif pos:line="1828" pos:column="1">#<cpp:directive pos:line="1828" pos:column="2">endif<pos:position pos:line="1828" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="1829" pos:column="4"/></block></then></if>
  <break pos:line="1830" pos:column="3">break;<pos:position pos:line="1830" pos:column="9"/></break>
<cpp:endif pos:line="1831" pos:column="1">#<cpp:directive pos:line="1831" pos:column="2">endif<pos:position pos:line="1831" pos:column="7"/></cpp:directive></cpp:endif>

  }<pos:position pos:line="1833" pos:column="4"/></block></switch> <comment type="block" pos:line="1833" pos:column="5">/* End of the PRAGMA switch */</comment>

  <comment type="block" pos:line="1835" pos:column="3">/* The following block is a no-op unless SQLITE_DEBUG is defined. Its only
  ** purpose is to execute assert() statements to verify that if the
  ** PragFlg_NoColumns1 flag is set and the caller specified an argument
  ** to the PRAGMA, the implementation has not added any OP_ResultRow 
  ** instructions to the VM.  */</comment>
  <if pos:line="1840" pos:column="3">if<condition pos:line="1840" pos:column="5">( <expr><operator pos:line="1840" pos:column="7">(<pos:position pos:line="1840" pos:column="8"/></operator><name><name pos:line="1840" pos:column="8">pPragma<pos:position pos:line="1840" pos:column="15"/></name><operator pos:line="1840" pos:column="15">-&gt;<pos:position pos:line="1840" pos:column="20"/></operator><name pos:line="1840" pos:column="17">mPragFlg<pos:position pos:line="1840" pos:column="25"/></name></name> <operator pos:line="1840" pos:column="26">&amp;<pos:position pos:line="1840" pos:column="31"/></operator> <name pos:line="1840" pos:column="28">PragFlg_NoColumns1<pos:position pos:line="1840" pos:column="46"/></name><operator pos:line="1840" pos:column="46">)<pos:position pos:line="1840" pos:column="47"/></operator> <operator pos:line="1840" pos:column="48">&amp;&amp;<pos:position pos:line="1840" pos:column="58"/></operator> <name pos:line="1840" pos:column="51">zRight<pos:position pos:line="1840" pos:column="57"/></name></expr> )<pos:position pos:line="1840" pos:column="59"/></condition><then><block pos:line="1840" pos:column="59">{
    <expr_stmt><expr><call><name pos:line="1841" pos:column="5">sqlite3VdbeVerifyNoResultRow<pos:position pos:line="1841" pos:column="33"/></name><argument_list pos:line="1841" pos:column="33">(<argument><expr><name pos:line="1841" pos:column="34">v<pos:position pos:line="1841" pos:column="35"/></name></expr></argument>)<pos:position pos:line="1841" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1841" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="1842" pos:column="4"/></block></then></if>

<label><name pos:line="1844" pos:column="1">pragma_out<pos:position pos:line="1844" pos:column="11"/></name>:<pos:position pos:line="1844" pos:column="12"/></label>
  <expr_stmt><expr><call><name pos:line="1845" pos:column="3">sqlite3DbFree<pos:position pos:line="1845" pos:column="16"/></name><argument_list pos:line="1845" pos:column="16">(<argument><expr><name pos:line="1845" pos:column="17">db<pos:position pos:line="1845" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="1845" pos:column="21">zLeft<pos:position pos:line="1845" pos:column="26"/></name></expr></argument>)<pos:position pos:line="1845" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="1845" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="1846" pos:column="3">sqlite3DbFree<pos:position pos:line="1846" pos:column="16"/></name><argument_list pos:line="1846" pos:column="16">(<argument><expr><name pos:line="1846" pos:column="17">db<pos:position pos:line="1846" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="1846" pos:column="21">zRight<pos:position pos:line="1846" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1846" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1846" pos:column="29"/></expr_stmt>
}<pos:position pos:line="1847" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_259.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">constructVtab<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(
  <parameter><decl><type><name pos:line="2" pos:column="3">sqlite3<pos:position pos:line="2" pos:column="10"/></name> <modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier></type><name pos:line="2" pos:column="12">db<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>,              <comment type="block" pos:line="2" pos:column="29">/* The SQLite database connection */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">fts3Hash<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">pHash<pos:position pos:line="3" pos:column="18"/></name></decl></parameter>,          <comment type="block" pos:line="3" pos:column="29">/* Hash table containing tokenizers */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">TableSpec<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">spec<pos:position pos:line="4" pos:column="18"/></name></decl></parameter>,          <comment type="block" pos:line="4" pos:column="29">/* Parsed spec information from parseSpec() */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">sqlite3_vtab<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier><modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">ppVTab<pos:position pos:line="5" pos:column="24"/></name></decl></parameter>,    <comment type="block" pos:line="5" pos:column="29">/* Write the resulting vtab structure here */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier><modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">pzErr<pos:position pos:line="6" pos:column="15"/></name></decl></parameter>              <comment type="block" pos:line="6" pos:column="29">/* Write any error message here */</comment>
)<pos:position pos:line="7" pos:column="2"/></parameter_list><block pos:line="7" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name></decl>;<pos:position pos:line="8" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">n<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">fulltext_vtab<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">v<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">sqlite3_tokenizer_module<pos:position pos:line="11" pos:column="33"/></name> <modifier pos:line="11" pos:column="34">*<pos:position pos:line="11" pos:column="35"/></modifier></type><name pos:line="11" pos:column="35">m<pos:position pos:line="11" pos:column="36"/></name> <init pos:line="11" pos:column="37">= <expr><name pos:line="11" pos:column="39">NULL<pos:position pos:line="11" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">schema<pos:position pos:line="12" pos:column="15"/></name></decl>;<pos:position pos:line="12" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name> <specifier pos:line="14" pos:column="8">const<pos:position pos:line="14" pos:column="13"/></specifier> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">zTok<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>         <comment type="block" pos:line="14" pos:column="29">/* Name of tokenizer to use for this fts table */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">nTok<pos:position pos:line="15" pos:column="11"/></name></decl>;<pos:position pos:line="15" pos:column="12"/></decl_stmt>                 <comment type="block" pos:line="15" pos:column="29">/* Length of zTok, including nul terminator */</comment>

  <expr_stmt><expr><name pos:line="17" pos:column="3">v<pos:position pos:line="17" pos:column="4"/></name> <operator pos:line="17" pos:column="5">=<pos:position pos:line="17" pos:column="6"/></operator> <operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">fulltext_vtab<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></operator><operator pos:line="17" pos:column="23">)<pos:position pos:line="17" pos:column="24"/></operator> <call><name pos:line="17" pos:column="25">sqlite3_malloc<pos:position pos:line="17" pos:column="39"/></name><argument_list pos:line="17" pos:column="39">(<argument><expr><sizeof pos:line="17" pos:column="40">sizeof<argument_list pos:line="17" pos:column="46">(<argument><expr><name pos:line="17" pos:column="47">fulltext_vtab<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">( <expr><name pos:line="18" pos:column="7">v<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">==<pos:position pos:line="18" pos:column="10"/></operator><literal type="number" pos:line="18" pos:column="10">0<pos:position pos:line="18" pos:column="11"/></literal></expr> )<pos:position pos:line="18" pos:column="13"/></condition><then pos:line="18" pos:column="13"> <block type="pseudo"><return pos:line="18" pos:column="14">return <expr><name pos:line="18" pos:column="21">SQLITE_NOMEM<pos:position pos:line="18" pos:column="33"/></name></expr>;<pos:position pos:line="18" pos:column="34"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">CLEAR<pos:position pos:line="19" pos:column="8"/></name><argument_list pos:line="19" pos:column="8">(<argument><expr><name pos:line="19" pos:column="9">v<pos:position pos:line="19" pos:column="10"/></name></expr></argument>)<pos:position pos:line="19" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="12"/></expr_stmt>
  <comment type="block" pos:line="20" pos:column="3">/* sqlite will initialize v-&gt;base */</comment>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">v<pos:position pos:line="21" pos:column="4"/></name><operator pos:line="21" pos:column="4">-&gt;<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="6">db<pos:position pos:line="21" pos:column="8"/></name></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <name pos:line="21" pos:column="11">db<pos:position pos:line="21" pos:column="13"/></name></expr>;<pos:position pos:line="21" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">v<pos:position pos:line="22" pos:column="4"/></name><operator pos:line="22" pos:column="4">-&gt;<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="6">zDb<pos:position pos:line="22" pos:column="9"/></name></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <name><name pos:line="22" pos:column="12">spec<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">zDb<pos:position pos:line="22" pos:column="21"/></name></name></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>       <comment type="block" pos:line="22" pos:column="29">/* Freed when azColumn is freed */</comment>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">v<pos:position pos:line="23" pos:column="4"/></name><operator pos:line="23" pos:column="4">-&gt;<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="6">zName<pos:position pos:line="23" pos:column="11"/></name></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name><name pos:line="23" pos:column="14">spec<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">zName<pos:position pos:line="23" pos:column="25"/></name></name></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>   <comment type="block" pos:line="23" pos:column="29">/* Freed when azColumn is freed */</comment>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">v<pos:position pos:line="24" pos:column="4"/></name><operator pos:line="24" pos:column="4">-&gt;<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="6">nColumn<pos:position pos:line="24" pos:column="13"/></name></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <name><name pos:line="24" pos:column="16">spec<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">nColumn<pos:position pos:line="24" pos:column="29"/></name></name></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">v<pos:position pos:line="25" pos:column="4"/></name><operator pos:line="25" pos:column="4">-&gt;<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="6">azContentColumn<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name><name pos:line="25" pos:column="24">spec<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">azContentColumn<pos:position pos:line="25" pos:column="45"/></name></name></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">spec<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">azContentColumn<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <literal type="number" pos:line="26" pos:column="27">0<pos:position pos:line="26" pos:column="28"/></literal></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">v<pos:position pos:line="27" pos:column="4"/></name><operator pos:line="27" pos:column="4">-&gt;<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="6">azColumn<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name><name pos:line="27" pos:column="17">spec<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">azColumn<pos:position pos:line="27" pos:column="31"/></name></name></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">spec<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">azColumn<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <literal type="number" pos:line="28" pos:column="20">0<pos:position pos:line="28" pos:column="21"/></literal></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>

  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">( <expr><name><name pos:line="30" pos:column="7">spec<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">azTokenizer<pos:position pos:line="30" pos:column="24"/></name></name><operator pos:line="30" pos:column="24">==<pos:position pos:line="30" pos:column="26"/></operator><literal type="number" pos:line="30" pos:column="26">0<pos:position pos:line="30" pos:column="27"/></literal></expr> )<pos:position pos:line="30" pos:column="29"/></condition><then><block pos:line="30" pos:column="29">{
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">SQLITE_NOMEM<pos:position pos:line="31" pos:column="24"/></name></expr>;<pos:position pos:line="31" pos:column="25"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="34" pos:column="3">zTok<pos:position pos:line="34" pos:column="7"/></name> <operator pos:line="34" pos:column="8">=<pos:position pos:line="34" pos:column="9"/></operator> <name><name pos:line="34" pos:column="10">spec<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">-&gt;<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="16">azTokenizer<pos:position pos:line="34" pos:column="27"/></name><index pos:line="34" pos:column="27">[<expr><literal type="number" pos:line="34" pos:column="28">0<pos:position pos:line="34" pos:column="29"/></literal></expr>]<pos:position pos:line="34" pos:column="30"/></index></name></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt> 
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">( <expr><operator pos:line="35" pos:column="7">!<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">zTok<pos:position pos:line="35" pos:column="12"/></name></expr> )<pos:position pos:line="35" pos:column="14"/></condition><then><block pos:line="35" pos:column="14">{
    <expr_stmt><expr><name pos:line="36" pos:column="5">zTok<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <literal type="string" pos:line="36" pos:column="12">"simple"<pos:position pos:line="36" pos:column="20"/></literal></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="38" pos:column="3">nTok<pos:position pos:line="38" pos:column="7"/></name> <operator pos:line="38" pos:column="8">=<pos:position pos:line="38" pos:column="9"/></operator> <call><name pos:line="38" pos:column="10">strlen<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">(<argument><expr><name pos:line="38" pos:column="17">zTok<pos:position pos:line="38" pos:column="21"/></name></expr></argument>)<pos:position pos:line="38" pos:column="22"/></argument_list></call><operator pos:line="38" pos:column="22">+<pos:position pos:line="38" pos:column="23"/></operator><literal type="number" pos:line="38" pos:column="23">1<pos:position pos:line="38" pos:column="24"/></literal></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name pos:line="40" pos:column="3">m<pos:position pos:line="40" pos:column="4"/></name> <operator pos:line="40" pos:column="5">=<pos:position pos:line="40" pos:column="6"/></operator> <operator pos:line="40" pos:column="7">(<pos:position pos:line="40" pos:column="8"/></operator><name pos:line="40" pos:column="8">sqlite3_tokenizer_module<pos:position pos:line="40" pos:column="32"/></name> <operator pos:line="40" pos:column="33">*<pos:position pos:line="40" pos:column="34"/></operator><operator pos:line="40" pos:column="34">)<pos:position pos:line="40" pos:column="35"/></operator><call><name pos:line="40" pos:column="35">sqlite3Fts3HashFind<pos:position pos:line="40" pos:column="54"/></name><argument_list pos:line="40" pos:column="54">(<argument><expr><name pos:line="40" pos:column="55">pHash<pos:position pos:line="40" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="62">zTok<pos:position pos:line="40" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="68">nTok<pos:position pos:line="40" pos:column="72"/></name></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="74"/></expr_stmt>
  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">( <expr><operator pos:line="41" pos:column="7">!<pos:position pos:line="41" pos:column="8"/></operator><name pos:line="41" pos:column="8">m<pos:position pos:line="41" pos:column="9"/></name></expr> )<pos:position pos:line="41" pos:column="11"/></condition><then><block pos:line="41" pos:column="11">{
    <expr_stmt><expr><operator pos:line="42" pos:column="5">*<pos:position pos:line="42" pos:column="6"/></operator><name pos:line="42" pos:column="6">pzErr<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">sqlite3_mprintf<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><literal type="string" pos:line="42" pos:column="30">"unknown tokenizer: %s"<pos:position pos:line="42" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="55">spec<pos:position pos:line="42" pos:column="59"/></name><operator pos:line="42" pos:column="59">-&gt;<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="61">azTokenizer<pos:position pos:line="42" pos:column="72"/></name><index pos:line="42" pos:column="72">[<expr><literal type="number" pos:line="42" pos:column="73">0<pos:position pos:line="42" pos:column="74"/></literal></expr>]<pos:position pos:line="42" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">rc<pos:position pos:line="43" pos:column="7"/></name> <operator pos:line="43" pos:column="8">=<pos:position pos:line="43" pos:column="9"/></operator> <name pos:line="43" pos:column="10">SQLITE_ERROR<pos:position pos:line="43" pos:column="22"/></name></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
    <goto pos:line="44" pos:column="5">goto <name pos:line="44" pos:column="10">err<pos:position pos:line="44" pos:column="13"/></name>;<pos:position pos:line="44" pos:column="14"/></goto>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <for pos:line="47" pos:column="3">for<control pos:line="47" pos:column="6">(<init><expr><name pos:line="47" pos:column="7">n<pos:position pos:line="47" pos:column="8"/></name><operator pos:line="47" pos:column="8">=<pos:position pos:line="47" pos:column="9"/></operator><literal type="number" pos:line="47" pos:column="9">0<pos:position pos:line="47" pos:column="10"/></literal></expr>;<pos:position pos:line="47" pos:column="11"/></init> <condition><expr><name><name pos:line="47" pos:column="12">spec<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">azTokenizer<pos:position pos:line="47" pos:column="29"/></name><index pos:line="47" pos:column="29">[<expr><name pos:line="47" pos:column="30">n<pos:position pos:line="47" pos:column="31"/></name></expr>]<pos:position pos:line="47" pos:column="32"/></index></name></expr>;<pos:position pos:line="47" pos:column="33"/></condition> <incr><expr><name pos:line="47" pos:column="34">n<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">++<pos:position pos:line="47" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="47" pos:column="38"/></control><block pos:line="47" pos:column="38">{}<pos:position pos:line="47" pos:column="40"/></block></for>
  <if pos:line="48" pos:column="3">if<condition pos:line="48" pos:column="5">( <expr><name pos:line="48" pos:column="7">n<pos:position pos:line="48" pos:column="8"/></name></expr> )<pos:position pos:line="48" pos:column="10"/></condition><then><block pos:line="48" pos:column="10">{
    <expr_stmt><expr><name pos:line="49" pos:column="5">rc<pos:position pos:line="49" pos:column="7"/></name> <operator pos:line="49" pos:column="8">=<pos:position pos:line="49" pos:column="9"/></operator> <call><name><name pos:line="49" pos:column="10">m<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">-&gt;<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="13">xCreate<pos:position pos:line="49" pos:column="20"/></name></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name pos:line="49" pos:column="21">n<pos:position pos:line="49" pos:column="22"/></name><operator pos:line="49" pos:column="22">-<pos:position pos:line="49" pos:column="23"/></operator><literal type="number" pos:line="49" pos:column="23">1<pos:position pos:line="49" pos:column="24"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="26">(<pos:position pos:line="49" pos:column="27"/></operator><specifier pos:line="49" pos:column="27">const<pos:position pos:line="49" pos:column="32"/></specifier> <name pos:line="49" pos:column="33">char<pos:position pos:line="49" pos:column="37"/></name><operator pos:line="49" pos:column="37">*<pos:position pos:line="49" pos:column="38"/></operator><specifier pos:line="49" pos:column="38">const<pos:position pos:line="49" pos:column="43"/></specifier><operator pos:line="49" pos:column="43">*<pos:position pos:line="49" pos:column="44"/></operator><operator pos:line="49" pos:column="44">)<pos:position pos:line="49" pos:column="45"/></operator><operator pos:line="49" pos:column="45">&amp;<pos:position pos:line="49" pos:column="50"/></operator><name><name pos:line="49" pos:column="46">spec<pos:position pos:line="49" pos:column="50"/></name><operator pos:line="49" pos:column="50">-&gt;<pos:position pos:line="49" pos:column="55"/></operator><name pos:line="49" pos:column="52">azTokenizer<pos:position pos:line="49" pos:column="63"/></name><index pos:line="49" pos:column="63">[<expr><literal type="number" pos:line="49" pos:column="64">1<pos:position pos:line="49" pos:column="65"/></literal></expr>]<pos:position pos:line="49" pos:column="66"/></index></name></expr></argument>,
                    <argument><expr><operator pos:line="50" pos:column="21">&amp;<pos:position pos:line="50" pos:column="26"/></operator><name><name pos:line="50" pos:column="22">v<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">-&gt;<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="25">pTokenizer<pos:position pos:line="50" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then><else pos:line="51" pos:column="4">else<block pos:line="51" pos:column="8">{
    <expr_stmt><expr><name pos:line="52" pos:column="5">rc<pos:position pos:line="52" pos:column="7"/></name> <operator pos:line="52" pos:column="8">=<pos:position pos:line="52" pos:column="9"/></operator> <call><name><name pos:line="52" pos:column="10">m<pos:position pos:line="52" pos:column="11"/></name><operator pos:line="52" pos:column="11">-&gt;<pos:position pos:line="52" pos:column="16"/></operator><name pos:line="52" pos:column="13">xCreate<pos:position pos:line="52" pos:column="20"/></name></name><argument_list pos:line="52" pos:column="20">(<argument><expr><literal type="number" pos:line="52" pos:column="21">0<pos:position pos:line="52" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="24">0<pos:position pos:line="52" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="27">&amp;<pos:position pos:line="52" pos:column="32"/></operator><name><name pos:line="52" pos:column="28">v<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">pTokenizer<pos:position pos:line="52" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></else></if>
  <if pos:line="54" pos:column="3">if<condition pos:line="54" pos:column="5">( <expr><name pos:line="54" pos:column="7">rc<pos:position pos:line="54" pos:column="9"/></name><operator pos:line="54" pos:column="9">!=<pos:position pos:line="54" pos:column="11"/></operator><name pos:line="54" pos:column="11">SQLITE_OK<pos:position pos:line="54" pos:column="20"/></name></expr> )<pos:position pos:line="54" pos:column="22"/></condition><then pos:line="54" pos:column="22"> <block type="pseudo"><goto pos:line="54" pos:column="23">goto <name pos:line="54" pos:column="28">err<pos:position pos:line="54" pos:column="31"/></name>;<pos:position pos:line="54" pos:column="32"/></goto></block></then></if>
  <expr_stmt><expr><name><name pos:line="55" pos:column="3">v<pos:position pos:line="55" pos:column="4"/></name><operator pos:line="55" pos:column="4">-&gt;<pos:position pos:line="55" pos:column="9"/></operator><name pos:line="55" pos:column="6">pTokenizer<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">-&gt;<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="18">pModule<pos:position pos:line="55" pos:column="25"/></name></name> <operator pos:line="55" pos:column="26">=<pos:position pos:line="55" pos:column="27"/></operator> <name pos:line="55" pos:column="28">m<pos:position pos:line="55" pos:column="29"/></name></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="57" pos:column="3">/* TODO: verify the existence of backing tables foo_content, foo_term */</comment>

  <expr_stmt><expr><name pos:line="59" pos:column="3">schema<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">=<pos:position pos:line="59" pos:column="11"/></operator> <call><name pos:line="59" pos:column="12">fulltextSchema<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(<argument><expr><name><name pos:line="59" pos:column="27">v<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">-&gt;<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="30">nColumn<pos:position pos:line="59" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="39">(<pos:position pos:line="59" pos:column="40"/></operator><specifier pos:line="59" pos:column="40">const<pos:position pos:line="59" pos:column="45"/></specifier> <name pos:line="59" pos:column="46">char<pos:position pos:line="59" pos:column="50"/></name><operator pos:line="59" pos:column="50">*<pos:position pos:line="59" pos:column="51"/></operator><specifier pos:line="59" pos:column="51">const<pos:position pos:line="59" pos:column="56"/></specifier><operator pos:line="59" pos:column="56">*<pos:position pos:line="59" pos:column="57"/></operator><operator pos:line="59" pos:column="57">)<pos:position pos:line="59" pos:column="58"/></operator><name><name pos:line="59" pos:column="58">v<pos:position pos:line="59" pos:column="59"/></name><operator pos:line="59" pos:column="59">-&gt;<pos:position pos:line="59" pos:column="64"/></operator><name pos:line="59" pos:column="61">azColumn<pos:position pos:line="59" pos:column="69"/></name></name></expr></argument>,
                          <argument><expr><name><name pos:line="60" pos:column="27">spec<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">-&gt;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="33">zName<pos:position pos:line="60" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name pos:line="61" pos:column="3">rc<pos:position pos:line="61" pos:column="5"/></name> <operator pos:line="61" pos:column="6">=<pos:position pos:line="61" pos:column="7"/></operator> <call><name pos:line="61" pos:column="8">sqlite3_declare_vtab<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name pos:line="61" pos:column="29">db<pos:position pos:line="61" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="33">schema<pos:position pos:line="61" pos:column="39"/></name></expr></argument>)<pos:position pos:line="61" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">sqlite3_free<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><name pos:line="62" pos:column="16">schema<pos:position pos:line="62" pos:column="22"/></name></expr></argument>)<pos:position pos:line="62" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
  <if pos:line="63" pos:column="3">if<condition pos:line="63" pos:column="5">( <expr><name pos:line="63" pos:column="7">rc<pos:position pos:line="63" pos:column="9"/></name><operator pos:line="63" pos:column="9">!=<pos:position pos:line="63" pos:column="11"/></operator><name pos:line="63" pos:column="11">SQLITE_OK<pos:position pos:line="63" pos:column="20"/></name></expr> )<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22"> <block type="pseudo"><goto pos:line="63" pos:column="23">goto <name pos:line="63" pos:column="28">err<pos:position pos:line="63" pos:column="31"/></name>;<pos:position pos:line="63" pos:column="32"/></goto></block></then></if>

  <expr_stmt><expr><call><name pos:line="65" pos:column="3">memset<pos:position pos:line="65" pos:column="9"/></name><argument_list pos:line="65" pos:column="9">(<argument><expr><name><name pos:line="65" pos:column="10">v<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">-&gt;<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="13">pFulltextStatements<pos:position pos:line="65" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="34">0<pos:position pos:line="65" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="37">sizeof<argument_list pos:line="65" pos:column="43">(<argument><expr><name><name pos:line="65" pos:column="44">v<pos:position pos:line="65" pos:column="45"/></name><operator pos:line="65" pos:column="45">-&gt;<pos:position pos:line="65" pos:column="50"/></operator><name pos:line="65" pos:column="47">pFulltextStatements<pos:position pos:line="65" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="69"/></expr_stmt>

  <comment type="block" pos:line="67" pos:column="3">/* Indicate that the buffer is not live. */</comment>
  <expr_stmt><expr><name><name pos:line="68" pos:column="3">v<pos:position pos:line="68" pos:column="4"/></name><operator pos:line="68" pos:column="4">-&gt;<pos:position pos:line="68" pos:column="9"/></operator><name pos:line="68" pos:column="6">nPendingData<pos:position pos:line="68" pos:column="18"/></name></name> <operator pos:line="68" pos:column="19">=<pos:position pos:line="68" pos:column="20"/></operator> <operator pos:line="68" pos:column="21">-<pos:position pos:line="68" pos:column="22"/></operator><literal type="number" pos:line="68" pos:column="22">1<pos:position pos:line="68" pos:column="23"/></literal></expr>;<pos:position pos:line="68" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="70" pos:column="3">*<pos:position pos:line="70" pos:column="4"/></operator><name pos:line="70" pos:column="4">ppVTab<pos:position pos:line="70" pos:column="10"/></name> <operator pos:line="70" pos:column="11">=<pos:position pos:line="70" pos:column="12"/></operator> <operator pos:line="70" pos:column="13">&amp;<pos:position pos:line="70" pos:column="18"/></operator><name><name pos:line="70" pos:column="14">v<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">-&gt;<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="17">base<pos:position pos:line="70" pos:column="21"/></name></name></expr>;<pos:position pos:line="70" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">FTSTRACE<pos:position pos:line="71" pos:column="11"/></name><argument_list pos:line="71" pos:column="11">(<argument><expr><operator pos:line="71" pos:column="12">(<pos:position pos:line="71" pos:column="13"/></operator><literal type="string" pos:line="71" pos:column="13">"FTS3 Connect %p\n"<pos:position pos:line="71" pos:column="32"/></literal><operator pos:line="71" pos:column="32">,<pos:position pos:line="71" pos:column="33"/></operator> <name pos:line="71" pos:column="34">v<pos:position pos:line="71" pos:column="35"/></name><operator pos:line="71" pos:column="35">)<pos:position pos:line="71" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="71" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="38"/></expr_stmt>

  <return pos:line="73" pos:column="3">return <expr><name pos:line="73" pos:column="10">rc<pos:position pos:line="73" pos:column="12"/></name></expr>;<pos:position pos:line="73" pos:column="13"/></return>

<label><name pos:line="75" pos:column="1">err<pos:position pos:line="75" pos:column="4"/></name>:<pos:position pos:line="75" pos:column="5"/></label>
  <expr_stmt><expr><call><name pos:line="76" pos:column="3">fulltext_vtab_destroy<pos:position pos:line="76" pos:column="24"/></name><argument_list pos:line="76" pos:column="24">(<argument><expr><name pos:line="76" pos:column="25">v<pos:position pos:line="76" pos:column="26"/></name></expr></argument>)<pos:position pos:line="76" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="28"/></expr_stmt>
  <return pos:line="77" pos:column="3">return <expr><name pos:line="77" pos:column="10">rc<pos:position pos:line="77" pos:column="12"/></name></expr>;<pos:position pos:line="77" pos:column="13"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

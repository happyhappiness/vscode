<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_499.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">valueFromExpr<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(
  <parameter><decl><type><name pos:line="2" pos:column="3">sqlite3<pos:position pos:line="2" pos:column="10"/></name> <modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier></type><name pos:line="2" pos:column="12">db<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>,                    <comment type="block" pos:line="2" pos:column="35">/* The database connection */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">Expr<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">pExpr<pos:position pos:line="3" pos:column="14"/></name></decl></parameter>,                    <comment type="block" pos:line="3" pos:column="35">/* The expression to evaluate */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">u8<pos:position pos:line="4" pos:column="5"/></name></type> <name pos:line="4" pos:column="6">enc<pos:position pos:line="4" pos:column="9"/></name></decl></parameter>,                         <comment type="block" pos:line="4" pos:column="35">/* Encoding to use */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">u8<pos:position pos:line="5" pos:column="5"/></name></type> <name pos:line="5" pos:column="6">affinity<pos:position pos:line="5" pos:column="14"/></name></decl></parameter>,                    <comment type="block" pos:line="5" pos:column="35">/* Affinity to use */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">sqlite3_value<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier><modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">ppVal<pos:position pos:line="6" pos:column="24"/></name></decl></parameter>,          <comment type="block" pos:line="6" pos:column="35">/* Write the new value here */</comment>
  <parameter><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">ValueNewStat4Ctx<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">pCtx<pos:position pos:line="7" pos:column="32"/></name></decl></parameter>   <comment type="block" pos:line="7" pos:column="35">/* Second argument for valueNew() */</comment>
)<pos:position pos:line="8" pos:column="2"/></parameter_list><block pos:line="8" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">op<pos:position pos:line="9" pos:column="9"/></name></decl>;<pos:position pos:line="9" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">zVal<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">sqlite3_value<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">pVal<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">negInt<pos:position pos:line="12" pos:column="13"/></name> <init pos:line="12" pos:column="14">= <expr><literal type="number" pos:line="12" pos:column="16">1<pos:position pos:line="12" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="13" pos:column="3">const<pos:position pos:line="13" pos:column="8"/></specifier> <name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">zNeg<pos:position pos:line="13" pos:column="19"/></name> <init pos:line="13" pos:column="20">= <expr><literal type="string" pos:line="13" pos:column="22">""<pos:position pos:line="13" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">rc<pos:position pos:line="14" pos:column="9"/></name> <init pos:line="14" pos:column="10">= <expr><name pos:line="14" pos:column="12">SQLITE_OK<pos:position pos:line="14" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">assert<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">( <argument><expr><name pos:line="16" pos:column="11">pExpr<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">!=<pos:position pos:line="16" pos:column="18"/></operator><literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr></argument> )<pos:position pos:line="16" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
  <while pos:line="17" pos:column="3">while<condition pos:line="17" pos:column="8">( <expr><operator pos:line="17" pos:column="10">(<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">op<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name><name pos:line="17" pos:column="16">pExpr<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">op<pos:position pos:line="17" pos:column="25"/></name></name><operator pos:line="17" pos:column="25">)<pos:position pos:line="17" pos:column="26"/></operator><operator pos:line="17" pos:column="26">==<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">TK_UPLUS<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">||<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="40">op<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">==<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="44">TK_SPAN<pos:position pos:line="17" pos:column="51"/></name></expr> )<pos:position pos:line="17" pos:column="53"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="54">pExpr<pos:position pos:line="17" pos:column="59"/></name> <operator pos:line="17" pos:column="60">=<pos:position pos:line="17" pos:column="61"/></operator> <name><name pos:line="17" pos:column="62">pExpr<pos:position pos:line="17" pos:column="67"/></name><operator pos:line="17" pos:column="67">-&gt;<pos:position pos:line="17" pos:column="72"/></operator><name pos:line="17" pos:column="69">pLeft<pos:position pos:line="17" pos:column="74"/></name></name></expr>;<pos:position pos:line="17" pos:column="75"/></expr_stmt></block></while>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">( <expr><call><name pos:line="18" pos:column="7">NEVER<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">op<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">TK_REGISTER<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr> )<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31"> <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="32">op<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <name><name pos:line="18" pos:column="37">pExpr<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">op2<pos:position pos:line="18" pos:column="47"/></name></name></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="20" pos:column="3">/* Compressed expressions only appear when parsing the DEFAULT clause
  ** on a table column definition, and hence only when pCtx==0.  This
  ** check ensures that an EP_TokenOnly expression is never passed down
  ** into valueFromFunction(). */</comment>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">assert<pos:position pos:line="24" pos:column="9"/></name><argument_list pos:line="24" pos:column="9">( <argument><expr><operator pos:line="24" pos:column="11">(<pos:position pos:line="24" pos:column="12"/></operator><name><name pos:line="24" pos:column="12">pExpr<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">flags<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">&amp;<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="27">EP_TokenOnly<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">)<pos:position pos:line="24" pos:column="40"/></operator><operator pos:line="24" pos:column="40">==<pos:position pos:line="24" pos:column="42"/></operator><literal type="number" pos:line="24" pos:column="42">0<pos:position pos:line="24" pos:column="43"/></literal> <operator pos:line="24" pos:column="44">||<pos:position pos:line="24" pos:column="46"/></operator> <name pos:line="24" pos:column="47">pCtx<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">==<pos:position pos:line="24" pos:column="53"/></operator><literal type="number" pos:line="24" pos:column="53">0<pos:position pos:line="24" pos:column="54"/></literal></expr></argument> )<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">( <expr><name pos:line="26" pos:column="7">op<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">==<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">TK_CAST<pos:position pos:line="26" pos:column="18"/></name></expr> )<pos:position pos:line="26" pos:column="20"/></condition><then><block pos:line="26" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">u8<pos:position pos:line="27" pos:column="7"/></name></type> <name pos:line="27" pos:column="8">aff<pos:position pos:line="27" pos:column="11"/></name> <init pos:line="27" pos:column="12">= <expr><call><name pos:line="27" pos:column="14">sqlite3AffinityType<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name><name pos:line="27" pos:column="34">pExpr<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">-&gt;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="41">u<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">.<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="43">zToken<pos:position pos:line="27" pos:column="49"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="27" pos:column="50">0<pos:position pos:line="27" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="53"/></decl_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">rc<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <call><name pos:line="28" pos:column="10">valueFromExpr<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">db<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="28">pExpr<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">pLeft<pos:position pos:line="28" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">enc<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">aff<pos:position pos:line="28" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="52">ppVal<pos:position pos:line="28" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="59">pCtx<pos:position pos:line="28" pos:column="63"/></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">testcase<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">( <argument><expr><name pos:line="29" pos:column="15">rc<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">!=<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">SQLITE_OK<pos:position pos:line="29" pos:column="28"/></name></expr></argument> )<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">( <expr><operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">ppVal<pos:position pos:line="30" pos:column="15"/></name></expr> )<pos:position pos:line="30" pos:column="17"/></condition><then><block pos:line="30" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">sqlite3VdbeMemCast<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><operator pos:line="31" pos:column="26">*<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">ppVal<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">aff<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">SQLITE_UTF8<pos:position pos:line="31" pos:column="50"/></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">sqlite3ValueApplyAffinity<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><operator pos:line="32" pos:column="33">*<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">ppVal<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">affinity<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">SQLITE_UTF8<pos:position pos:line="32" pos:column="62"/></name></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">rc<pos:position pos:line="34" pos:column="14"/></name></expr>;<pos:position pos:line="34" pos:column="15"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="37" pos:column="3">/* Handle negative integers in a single step.  This is needed in the
  ** case when the value is -9223372036854775808.
  */</comment>
  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">( <expr><name pos:line="40" pos:column="7">op<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">==<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="11">TK_UMINUS<pos:position pos:line="40" pos:column="20"/></name>
   <operator pos:line="41" pos:column="4">&amp;&amp;<pos:position pos:line="41" pos:column="14"/></operator> <operator pos:line="41" pos:column="7">(<pos:position pos:line="41" pos:column="8"/></operator><name><name pos:line="41" pos:column="8">pExpr<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">-&gt;<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="15">pLeft<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">op<pos:position pos:line="41" pos:column="24"/></name></name><operator pos:line="41" pos:column="24">==<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="26">TK_INTEGER<pos:position pos:line="41" pos:column="36"/></name> <operator pos:line="41" pos:column="37">||<pos:position pos:line="41" pos:column="39"/></operator> <name><name pos:line="41" pos:column="40">pExpr<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">-&gt;<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="47">pLeft<pos:position pos:line="41" pos:column="52"/></name><operator pos:line="41" pos:column="52">-&gt;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="54">op<pos:position pos:line="41" pos:column="56"/></name></name><operator pos:line="41" pos:column="56">==<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="58">TK_FLOAT<pos:position pos:line="41" pos:column="66"/></name><operator pos:line="41" pos:column="66">)<pos:position pos:line="41" pos:column="67"/></operator></expr> )<pos:position pos:line="41" pos:column="69"/></condition><then><block pos:line="41" pos:column="69">{
    <expr_stmt><expr><name pos:line="42" pos:column="5">pExpr<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <name><name pos:line="42" pos:column="13">pExpr<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">pLeft<pos:position pos:line="42" pos:column="25"/></name></name></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">op<pos:position pos:line="43" pos:column="7"/></name> <operator pos:line="43" pos:column="8">=<pos:position pos:line="43" pos:column="9"/></operator> <name><name pos:line="43" pos:column="10">pExpr<pos:position pos:line="43" pos:column="15"/></name><operator pos:line="43" pos:column="15">-&gt;<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="17">op<pos:position pos:line="43" pos:column="19"/></name></name></expr>;<pos:position pos:line="43" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">negInt<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <operator pos:line="44" pos:column="14">-<pos:position pos:line="44" pos:column="15"/></operator><literal type="number" pos:line="44" pos:column="15">1<pos:position pos:line="44" pos:column="16"/></literal></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">zNeg<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <literal type="string" pos:line="45" pos:column="12">"-"<pos:position pos:line="45" pos:column="15"/></literal></expr>;<pos:position pos:line="45" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <if pos:line="48" pos:column="3">if<condition pos:line="48" pos:column="5">( <expr><name pos:line="48" pos:column="7">op<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">==<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="11">TK_STRING<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">||<pos:position pos:line="48" pos:column="23"/></operator> <name pos:line="48" pos:column="24">op<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">==<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="28">TK_FLOAT<pos:position pos:line="48" pos:column="36"/></name> <operator pos:line="48" pos:column="37">||<pos:position pos:line="48" pos:column="39"/></operator> <name pos:line="48" pos:column="40">op<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">==<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="44">TK_INTEGER<pos:position pos:line="48" pos:column="54"/></name></expr> )<pos:position pos:line="48" pos:column="56"/></condition><then><block pos:line="48" pos:column="56">{
    <expr_stmt><expr><name pos:line="49" pos:column="5">pVal<pos:position pos:line="49" pos:column="9"/></name> <operator pos:line="49" pos:column="10">=<pos:position pos:line="49" pos:column="11"/></operator> <call><name pos:line="49" pos:column="12">valueNew<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name pos:line="49" pos:column="21">db<pos:position pos:line="49" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="25">pCtx<pos:position pos:line="49" pos:column="29"/></name></expr></argument>)<pos:position pos:line="49" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="31"/></expr_stmt>
    <if pos:line="50" pos:column="5">if<condition pos:line="50" pos:column="7">( <expr><name pos:line="50" pos:column="9">pVal<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">==<pos:position pos:line="50" pos:column="15"/></operator><literal type="number" pos:line="50" pos:column="15">0<pos:position pos:line="50" pos:column="16"/></literal></expr> )<pos:position pos:line="50" pos:column="18"/></condition><then pos:line="50" pos:column="18"> <block type="pseudo"><goto pos:line="50" pos:column="19">goto <name pos:line="50" pos:column="24">no_mem<pos:position pos:line="50" pos:column="30"/></name>;<pos:position pos:line="50" pos:column="31"/></goto></block></then></if>
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">( <expr><call><name pos:line="51" pos:column="9">ExprHasProperty<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">pExpr<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="32">EP_IntValue<pos:position pos:line="51" pos:column="43"/></name></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr> )<pos:position pos:line="51" pos:column="46"/></condition><then><block pos:line="51" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">sqlite3VdbeMemSetInt64<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">pVal<pos:position pos:line="52" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="36">(<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="37">i64<pos:position pos:line="52" pos:column="40"/></name><operator pos:line="52" pos:column="40">)<pos:position pos:line="52" pos:column="41"/></operator><name><name pos:line="52" pos:column="41">pExpr<pos:position pos:line="52" pos:column="46"/></name><operator pos:line="52" pos:column="46">-&gt;<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="48">u<pos:position pos:line="52" pos:column="49"/></name><operator pos:line="52" pos:column="49">.<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="50">iValue<pos:position pos:line="52" pos:column="56"/></name></name><operator pos:line="52" pos:column="56">*<pos:position pos:line="52" pos:column="57"/></operator><name pos:line="52" pos:column="57">negInt<pos:position pos:line="52" pos:column="63"/></name></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then><else pos:line="53" pos:column="6">else<block pos:line="53" pos:column="10">{
      <expr_stmt><expr><name pos:line="54" pos:column="7">zVal<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <call><name pos:line="54" pos:column="14">sqlite3MPrintf<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">db<pos:position pos:line="54" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="33">"%s%s"<pos:position pos:line="54" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="41">zNeg<pos:position pos:line="54" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="47">pExpr<pos:position pos:line="54" pos:column="52"/></name><operator pos:line="54" pos:column="52">-&gt;<pos:position pos:line="54" pos:column="57"/></operator><name pos:line="54" pos:column="54">u<pos:position pos:line="54" pos:column="55"/></name><operator pos:line="54" pos:column="55">.<pos:position pos:line="54" pos:column="56"/></operator><name pos:line="54" pos:column="56">zToken<pos:position pos:line="54" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="64"/></expr_stmt>
      <if pos:line="55" pos:column="7">if<condition pos:line="55" pos:column="9">( <expr><name pos:line="55" pos:column="11">zVal<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">==<pos:position pos:line="55" pos:column="17"/></operator><literal type="number" pos:line="55" pos:column="17">0<pos:position pos:line="55" pos:column="18"/></literal></expr> )<pos:position pos:line="55" pos:column="20"/></condition><then pos:line="55" pos:column="20"> <block type="pseudo"><goto pos:line="55" pos:column="21">goto <name pos:line="55" pos:column="26">no_mem<pos:position pos:line="55" pos:column="32"/></name>;<pos:position pos:line="55" pos:column="33"/></goto></block></then></if>
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">sqlite3ValueSetStr<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><name pos:line="56" pos:column="26">pVal<pos:position pos:line="56" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="32">-<pos:position pos:line="56" pos:column="33"/></operator><literal type="number" pos:line="56" pos:column="33">1<pos:position pos:line="56" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="36">zVal<pos:position pos:line="56" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="42">SQLITE_UTF8<pos:position pos:line="56" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="55">SQLITE_DYNAMIC<pos:position pos:line="56" pos:column="69"/></name></expr></argument>)<pos:position pos:line="56" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></else></if>
    <if pos:line="58" pos:column="5">if<condition pos:line="58" pos:column="7">( <expr><operator pos:line="58" pos:column="9">(<pos:position pos:line="58" pos:column="10"/></operator><name pos:line="58" pos:column="10">op<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">==<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">TK_INTEGER<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">||<pos:position pos:line="58" pos:column="27"/></operator> <name pos:line="58" pos:column="28">op<pos:position pos:line="58" pos:column="30"/></name><operator pos:line="58" pos:column="30">==<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="32">TK_FLOAT<pos:position pos:line="58" pos:column="40"/></name> <operator pos:line="58" pos:column="41">)<pos:position pos:line="58" pos:column="42"/></operator> <operator pos:line="58" pos:column="43">&amp;&amp;<pos:position pos:line="58" pos:column="53"/></operator> <name pos:line="58" pos:column="46">affinity<pos:position pos:line="58" pos:column="54"/></name><operator pos:line="58" pos:column="54">==<pos:position pos:line="58" pos:column="56"/></operator><name pos:line="58" pos:column="56">SQLITE_AFF_BLOB<pos:position pos:line="58" pos:column="71"/></name></expr> )<pos:position pos:line="58" pos:column="73"/></condition><then><block pos:line="58" pos:column="73">{
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">sqlite3ValueApplyAffinity<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">pVal<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="39">SQLITE_AFF_NUMERIC<pos:position pos:line="59" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="59">SQLITE_UTF8<pos:position pos:line="59" pos:column="70"/></name></expr></argument>)<pos:position pos:line="59" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then><else pos:line="60" pos:column="6">else<block pos:line="60" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">sqlite3ValueApplyAffinity<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name pos:line="61" pos:column="33">pVal<pos:position pos:line="61" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="39">affinity<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="49">SQLITE_UTF8<pos:position pos:line="61" pos:column="60"/></name></expr></argument>)<pos:position pos:line="61" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></else></if>
    <if pos:line="63" pos:column="5">if<condition pos:line="63" pos:column="7">( <expr><name><name pos:line="63" pos:column="9">pVal<pos:position pos:line="63" pos:column="13"/></name><operator pos:line="63" pos:column="13">-&gt;<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="15">flags<pos:position pos:line="63" pos:column="20"/></name></name> <operator pos:line="63" pos:column="21">&amp;<pos:position pos:line="63" pos:column="26"/></operator> <operator pos:line="63" pos:column="23">(<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="24">MEM_Int<pos:position pos:line="63" pos:column="31"/></name><operator pos:line="63" pos:column="31">|<pos:position pos:line="63" pos:column="32"/></operator><name pos:line="63" pos:column="32">MEM_Real<pos:position pos:line="63" pos:column="40"/></name><operator pos:line="63" pos:column="40">)<pos:position pos:line="63" pos:column="41"/></operator></expr> )<pos:position pos:line="63" pos:column="43"/></condition><then pos:line="63" pos:column="43"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="44">pVal<pos:position pos:line="63" pos:column="48"/></name><operator pos:line="63" pos:column="48">-&gt;<pos:position pos:line="63" pos:column="53"/></operator><name pos:line="63" pos:column="50">flags<pos:position pos:line="63" pos:column="55"/></name></name> <operator pos:line="63" pos:column="56">&amp;=<pos:position pos:line="63" pos:column="62"/></operator> <operator pos:line="63" pos:column="59">~<pos:position pos:line="63" pos:column="60"/></operator><name pos:line="63" pos:column="60">MEM_Str<pos:position pos:line="63" pos:column="67"/></name></expr>;<pos:position pos:line="63" pos:column="68"/></expr_stmt></block></then></if>
    <if pos:line="64" pos:column="5">if<condition pos:line="64" pos:column="7">( <expr><name pos:line="64" pos:column="9">enc<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">!=<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="14">SQLITE_UTF8<pos:position pos:line="64" pos:column="25"/></name></expr> )<pos:position pos:line="64" pos:column="27"/></condition><then><block pos:line="64" pos:column="27">{
      <expr_stmt><expr><name pos:line="65" pos:column="7">rc<pos:position pos:line="65" pos:column="9"/></name> <operator pos:line="65" pos:column="10">=<pos:position pos:line="65" pos:column="11"/></operator> <call><name pos:line="65" pos:column="12">sqlite3VdbeChangeEncoding<pos:position pos:line="65" pos:column="37"/></name><argument_list pos:line="65" pos:column="37">(<argument><expr><name pos:line="65" pos:column="38">pVal<pos:position pos:line="65" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="44">enc<pos:position pos:line="65" pos:column="47"/></name></expr></argument>)<pos:position pos:line="65" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
  }<pos:position pos:line="67" pos:column="4"/></block></then><elseif pos:line="67" pos:column="4">else <if pos:line="67" pos:column="9">if<condition pos:line="67" pos:column="11">( <expr><name pos:line="67" pos:column="13">op<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">==<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="17">TK_UMINUS<pos:position pos:line="67" pos:column="26"/></name></expr> )<pos:position pos:line="67" pos:column="28"/></condition><then pos:line="67" pos:column="28"> <block pos:line="67" pos:column="29">{
    <comment type="block" pos:line="68" pos:column="5">/* This branch happens for multiple negative signs.  Ex: -(-5) */</comment>
    <if pos:line="69" pos:column="5">if<condition pos:line="69" pos:column="7">( <expr><name pos:line="69" pos:column="9">SQLITE_OK<pos:position pos:line="69" pos:column="18"/></name><operator pos:line="69" pos:column="18">==<pos:position pos:line="69" pos:column="20"/></operator><call><name pos:line="69" pos:column="20">valueFromExpr<pos:position pos:line="69" pos:column="33"/></name><argument_list pos:line="69" pos:column="33">(<argument><expr><name pos:line="69" pos:column="34">db<pos:position pos:line="69" pos:column="36"/></name></expr></argument>,<argument><expr><name><name pos:line="69" pos:column="37">pExpr<pos:position pos:line="69" pos:column="42"/></name><operator pos:line="69" pos:column="42">-&gt;<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="44">pLeft<pos:position pos:line="69" pos:column="49"/></name></name></expr></argument>,<argument><expr><name pos:line="69" pos:column="50">enc<pos:position pos:line="69" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="69" pos:column="54">affinity<pos:position pos:line="69" pos:column="62"/></name></expr></argument>,<argument><expr><operator pos:line="69" pos:column="63">&amp;<pos:position pos:line="69" pos:column="68"/></operator><name pos:line="69" pos:column="64">pVal<pos:position pos:line="69" pos:column="68"/></name></expr></argument>,<argument><expr><name pos:line="69" pos:column="69">pCtx<pos:position pos:line="69" pos:column="73"/></name></expr></argument>)<pos:position pos:line="69" pos:column="74"/></argument_list></call> 
     <operator pos:line="70" pos:column="6">&amp;&amp;<pos:position pos:line="70" pos:column="16"/></operator> <name pos:line="70" pos:column="9">pVal<pos:position pos:line="70" pos:column="13"/></name><operator pos:line="70" pos:column="13">!=<pos:position pos:line="70" pos:column="15"/></operator><literal type="number" pos:line="70" pos:column="15">0<pos:position pos:line="70" pos:column="16"/></literal></expr>
    )<pos:position pos:line="71" pos:column="6"/></condition><then><block pos:line="71" pos:column="6">{
      <expr_stmt><expr><call><name pos:line="72" pos:column="7">sqlite3VdbeMemNumerify<pos:position pos:line="72" pos:column="29"/></name><argument_list pos:line="72" pos:column="29">(<argument><expr><name pos:line="72" pos:column="30">pVal<pos:position pos:line="72" pos:column="34"/></name></expr></argument>)<pos:position pos:line="72" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>
      <if pos:line="73" pos:column="7">if<condition pos:line="73" pos:column="9">( <expr><name><name pos:line="73" pos:column="11">pVal<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">flags<pos:position pos:line="73" pos:column="22"/></name></name> <operator pos:line="73" pos:column="23">&amp;<pos:position pos:line="73" pos:column="28"/></operator> <name pos:line="73" pos:column="25">MEM_Real<pos:position pos:line="73" pos:column="33"/></name></expr> )<pos:position pos:line="73" pos:column="35"/></condition><then><block pos:line="73" pos:column="35">{
        <expr_stmt><expr><name><name pos:line="74" pos:column="9">pVal<pos:position pos:line="74" pos:column="13"/></name><operator pos:line="74" pos:column="13">-&gt;<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="15">u<pos:position pos:line="74" pos:column="16"/></name><operator pos:line="74" pos:column="16">.<pos:position pos:line="74" pos:column="17"/></operator><name pos:line="74" pos:column="17">r<pos:position pos:line="74" pos:column="18"/></name></name> <operator pos:line="74" pos:column="19">=<pos:position pos:line="74" pos:column="20"/></operator> <operator pos:line="74" pos:column="21">-<pos:position pos:line="74" pos:column="22"/></operator><name><name pos:line="74" pos:column="22">pVal<pos:position pos:line="74" pos:column="26"/></name><operator pos:line="74" pos:column="26">-&gt;<pos:position pos:line="74" pos:column="31"/></operator><name pos:line="74" pos:column="28">u<pos:position pos:line="74" pos:column="29"/></name><operator pos:line="74" pos:column="29">.<pos:position pos:line="74" pos:column="30"/></operator><name pos:line="74" pos:column="30">r<pos:position pos:line="74" pos:column="31"/></name></name></expr>;<pos:position pos:line="74" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="75" pos:column="8"/></block></then><elseif pos:line="75" pos:column="8">else <if pos:line="75" pos:column="13">if<condition pos:line="75" pos:column="15">( <expr><name><name pos:line="75" pos:column="17">pVal<pos:position pos:line="75" pos:column="21"/></name><operator pos:line="75" pos:column="21">-&gt;<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="23">u<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">.<pos:position pos:line="75" pos:column="25"/></operator><name pos:line="75" pos:column="25">i<pos:position pos:line="75" pos:column="26"/></name></name><operator pos:line="75" pos:column="26">==<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="28">SMALLEST_INT64<pos:position pos:line="75" pos:column="42"/></name></expr> )<pos:position pos:line="75" pos:column="44"/></condition><then><block pos:line="75" pos:column="44">{
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">pVal<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">-&gt;<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="15">u<pos:position pos:line="76" pos:column="16"/></name><operator pos:line="76" pos:column="16">.<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="17">r<pos:position pos:line="76" pos:column="18"/></name></name> <operator pos:line="76" pos:column="19">=<pos:position pos:line="76" pos:column="20"/></operator> <operator pos:line="76" pos:column="21">-<pos:position pos:line="76" pos:column="22"/></operator><operator pos:line="76" pos:column="22">(<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="23">double<pos:position pos:line="76" pos:column="29"/></name><operator pos:line="76" pos:column="29">)<pos:position pos:line="76" pos:column="30"/></operator><name pos:line="76" pos:column="30">SMALLEST_INT64<pos:position pos:line="76" pos:column="44"/></name></expr>;<pos:position pos:line="76" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">MemSetTypeFlag<pos:position pos:line="77" pos:column="23"/></name><argument_list pos:line="77" pos:column="23">(<argument><expr><name pos:line="77" pos:column="24">pVal<pos:position pos:line="77" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="30">MEM_Real<pos:position pos:line="77" pos:column="38"/></name></expr></argument>)<pos:position pos:line="77" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="78" pos:column="8"/></block></then></if></elseif><else pos:line="78" pos:column="8">else<block pos:line="78" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">pVal<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">-&gt;<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="15">u<pos:position pos:line="79" pos:column="16"/></name><operator pos:line="79" pos:column="16">.<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="17">i<pos:position pos:line="79" pos:column="18"/></name></name> <operator pos:line="79" pos:column="19">=<pos:position pos:line="79" pos:column="20"/></operator> <operator pos:line="79" pos:column="21">-<pos:position pos:line="79" pos:column="22"/></operator><name><name pos:line="79" pos:column="22">pVal<pos:position pos:line="79" pos:column="26"/></name><operator pos:line="79" pos:column="26">-&gt;<pos:position pos:line="79" pos:column="31"/></operator><name pos:line="79" pos:column="28">u<pos:position pos:line="79" pos:column="29"/></name><operator pos:line="79" pos:column="29">.<pos:position pos:line="79" pos:column="30"/></operator><name pos:line="79" pos:column="30">i<pos:position pos:line="79" pos:column="31"/></name></name></expr>;<pos:position pos:line="79" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="80" pos:column="8"/></block></else></if>
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">sqlite3ValueApplyAffinity<pos:position pos:line="81" pos:column="32"/></name><argument_list pos:line="81" pos:column="32">(<argument><expr><name pos:line="81" pos:column="33">pVal<pos:position pos:line="81" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="39">affinity<pos:position pos:line="81" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="49">enc<pos:position pos:line="81" pos:column="52"/></name></expr></argument>)<pos:position pos:line="81" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>
  }<pos:position pos:line="83" pos:column="4"/></block></then></if></elseif><elseif pos:line="83" pos:column="4">else <if pos:line="83" pos:column="9">if<condition pos:line="83" pos:column="11">( <expr><name pos:line="83" pos:column="13">op<pos:position pos:line="83" pos:column="15"/></name><operator pos:line="83" pos:column="15">==<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="17">TK_NULL<pos:position pos:line="83" pos:column="24"/></name></expr> )<pos:position pos:line="83" pos:column="26"/></condition><then><block pos:line="83" pos:column="26">{
    <expr_stmt><expr><name pos:line="84" pos:column="5">pVal<pos:position pos:line="84" pos:column="9"/></name> <operator pos:line="84" pos:column="10">=<pos:position pos:line="84" pos:column="11"/></operator> <call><name pos:line="84" pos:column="12">valueNew<pos:position pos:line="84" pos:column="20"/></name><argument_list pos:line="84" pos:column="20">(<argument><expr><name pos:line="84" pos:column="21">db<pos:position pos:line="84" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="25">pCtx<pos:position pos:line="84" pos:column="29"/></name></expr></argument>)<pos:position pos:line="84" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="31"/></expr_stmt>
    <if pos:line="85" pos:column="5">if<condition pos:line="85" pos:column="7">( <expr><name pos:line="85" pos:column="9">pVal<pos:position pos:line="85" pos:column="13"/></name><operator pos:line="85" pos:column="13">==<pos:position pos:line="85" pos:column="15"/></operator><literal type="number" pos:line="85" pos:column="15">0<pos:position pos:line="85" pos:column="16"/></literal></expr> )<pos:position pos:line="85" pos:column="18"/></condition><then pos:line="85" pos:column="18"> <block type="pseudo"><goto pos:line="85" pos:column="19">goto <name pos:line="85" pos:column="24">no_mem<pos:position pos:line="85" pos:column="30"/></name>;<pos:position pos:line="85" pos:column="31"/></goto></block></then></if>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">sqlite3VdbeMemNumerify<pos:position pos:line="86" pos:column="27"/></name><argument_list pos:line="86" pos:column="27">(<argument><expr><name pos:line="86" pos:column="28">pVal<pos:position pos:line="86" pos:column="32"/></name></expr></argument>)<pos:position pos:line="86" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="87" pos:column="4"/></block></then></if></elseif>
<cpp:ifndef pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">ifndef<pos:position pos:line="88" pos:column="8"/></cpp:directive> <name pos:line="88" pos:column="9">SQLITE_OMIT_BLOB_LITERAL<pos:position pos:line="88" pos:column="33"/></name></cpp:ifndef>
  <elseif pos:line="89" pos:column="3">else <if pos:line="89" pos:column="8">if<condition pos:line="89" pos:column="10">( <expr><name pos:line="89" pos:column="12">op<pos:position pos:line="89" pos:column="14"/></name><operator pos:line="89" pos:column="14">==<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="16">TK_BLOB<pos:position pos:line="89" pos:column="23"/></name></expr> )<pos:position pos:line="89" pos:column="25"/></condition><then><block pos:line="89" pos:column="25">{
    <decl_stmt><decl><type><name pos:line="90" pos:column="5">int<pos:position pos:line="90" pos:column="8"/></name></type> <name pos:line="90" pos:column="9">nVal<pos:position pos:line="90" pos:column="13"/></name></decl>;<pos:position pos:line="90" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">assert<pos:position pos:line="91" pos:column="11"/></name><argument_list pos:line="91" pos:column="11">( <argument><expr><name><name pos:line="91" pos:column="13">pExpr<pos:position pos:line="91" pos:column="18"/></name><operator pos:line="91" pos:column="18">-&gt;<pos:position pos:line="91" pos:column="23"/></operator><name pos:line="91" pos:column="20">u<pos:position pos:line="91" pos:column="21"/></name><operator pos:line="91" pos:column="21">.<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="22">zToken<pos:position pos:line="91" pos:column="28"/></name><index pos:line="91" pos:column="28">[<expr><literal type="number" pos:line="91" pos:column="29">0<pos:position pos:line="91" pos:column="30"/></literal></expr>]<pos:position pos:line="91" pos:column="31"/></index></name><operator pos:line="91" pos:column="31">==<pos:position pos:line="91" pos:column="33"/></operator><literal type="char" pos:line="91" pos:column="33">'x'<pos:position pos:line="91" pos:column="36"/></literal> <operator pos:line="91" pos:column="37">||<pos:position pos:line="91" pos:column="39"/></operator> <name><name pos:line="91" pos:column="40">pExpr<pos:position pos:line="91" pos:column="45"/></name><operator pos:line="91" pos:column="45">-&gt;<pos:position pos:line="91" pos:column="50"/></operator><name pos:line="91" pos:column="47">u<pos:position pos:line="91" pos:column="48"/></name><operator pos:line="91" pos:column="48">.<pos:position pos:line="91" pos:column="49"/></operator><name pos:line="91" pos:column="49">zToken<pos:position pos:line="91" pos:column="55"/></name><index pos:line="91" pos:column="55">[<expr><literal type="number" pos:line="91" pos:column="56">0<pos:position pos:line="91" pos:column="57"/></literal></expr>]<pos:position pos:line="91" pos:column="58"/></index></name><operator pos:line="91" pos:column="58">==<pos:position pos:line="91" pos:column="60"/></operator><literal type="char" pos:line="91" pos:column="60">'X'<pos:position pos:line="91" pos:column="63"/></literal></expr></argument> )<pos:position pos:line="91" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">assert<pos:position pos:line="92" pos:column="11"/></name><argument_list pos:line="92" pos:column="11">( <argument><expr><name><name pos:line="92" pos:column="13">pExpr<pos:position pos:line="92" pos:column="18"/></name><operator pos:line="92" pos:column="18">-&gt;<pos:position pos:line="92" pos:column="23"/></operator><name pos:line="92" pos:column="20">u<pos:position pos:line="92" pos:column="21"/></name><operator pos:line="92" pos:column="21">.<pos:position pos:line="92" pos:column="22"/></operator><name pos:line="92" pos:column="22">zToken<pos:position pos:line="92" pos:column="28"/></name><index pos:line="92" pos:column="28">[<expr><literal type="number" pos:line="92" pos:column="29">1<pos:position pos:line="92" pos:column="30"/></literal></expr>]<pos:position pos:line="92" pos:column="31"/></index></name><operator pos:line="92" pos:column="31">==<pos:position pos:line="92" pos:column="33"/></operator><literal type="char" pos:line="92" pos:column="33">'\''<pos:position pos:line="92" pos:column="37"/></literal></expr></argument> )<pos:position pos:line="92" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="93" pos:column="5">pVal<pos:position pos:line="93" pos:column="9"/></name> <operator pos:line="93" pos:column="10">=<pos:position pos:line="93" pos:column="11"/></operator> <call><name pos:line="93" pos:column="12">valueNew<pos:position pos:line="93" pos:column="20"/></name><argument_list pos:line="93" pos:column="20">(<argument><expr><name pos:line="93" pos:column="21">db<pos:position pos:line="93" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="25">pCtx<pos:position pos:line="93" pos:column="29"/></name></expr></argument>)<pos:position pos:line="93" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="31"/></expr_stmt>
    <if pos:line="94" pos:column="5">if<condition pos:line="94" pos:column="7">( <expr><operator pos:line="94" pos:column="9">!<pos:position pos:line="94" pos:column="10"/></operator><name pos:line="94" pos:column="10">pVal<pos:position pos:line="94" pos:column="14"/></name></expr> )<pos:position pos:line="94" pos:column="16"/></condition><then pos:line="94" pos:column="16"> <block type="pseudo"><goto pos:line="94" pos:column="17">goto <name pos:line="94" pos:column="22">no_mem<pos:position pos:line="94" pos:column="28"/></name>;<pos:position pos:line="94" pos:column="29"/></goto></block></then></if>
    <expr_stmt><expr><name pos:line="95" pos:column="5">zVal<pos:position pos:line="95" pos:column="9"/></name> <operator pos:line="95" pos:column="10">=<pos:position pos:line="95" pos:column="11"/></operator> <operator pos:line="95" pos:column="12">&amp;<pos:position pos:line="95" pos:column="17"/></operator><name><name pos:line="95" pos:column="13">pExpr<pos:position pos:line="95" pos:column="18"/></name><operator pos:line="95" pos:column="18">-&gt;<pos:position pos:line="95" pos:column="23"/></operator><name pos:line="95" pos:column="20">u<pos:position pos:line="95" pos:column="21"/></name><operator pos:line="95" pos:column="21">.<pos:position pos:line="95" pos:column="22"/></operator><name pos:line="95" pos:column="22">zToken<pos:position pos:line="95" pos:column="28"/></name><index pos:line="95" pos:column="28">[<expr><literal type="number" pos:line="95" pos:column="29">2<pos:position pos:line="95" pos:column="30"/></literal></expr>]<pos:position pos:line="95" pos:column="31"/></index></name></expr>;<pos:position pos:line="95" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="96" pos:column="5">nVal<pos:position pos:line="96" pos:column="9"/></name> <operator pos:line="96" pos:column="10">=<pos:position pos:line="96" pos:column="11"/></operator> <call><name pos:line="96" pos:column="12">sqlite3Strlen30<pos:position pos:line="96" pos:column="27"/></name><argument_list pos:line="96" pos:column="27">(<argument><expr><name pos:line="96" pos:column="28">zVal<pos:position pos:line="96" pos:column="32"/></name></expr></argument>)<pos:position pos:line="96" pos:column="33"/></argument_list></call><operator pos:line="96" pos:column="33">-<pos:position pos:line="96" pos:column="34"/></operator><literal type="number" pos:line="96" pos:column="34">1<pos:position pos:line="96" pos:column="35"/></literal></expr>;<pos:position pos:line="96" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">assert<pos:position pos:line="97" pos:column="11"/></name><argument_list pos:line="97" pos:column="11">( <argument><expr><name><name pos:line="97" pos:column="13">zVal<pos:position pos:line="97" pos:column="17"/></name><index pos:line="97" pos:column="17">[<expr><name pos:line="97" pos:column="18">nVal<pos:position pos:line="97" pos:column="22"/></name></expr>]<pos:position pos:line="97" pos:column="23"/></index></name><operator pos:line="97" pos:column="23">==<pos:position pos:line="97" pos:column="25"/></operator><literal type="char" pos:line="97" pos:column="25">'\''<pos:position pos:line="97" pos:column="29"/></literal></expr></argument> )<pos:position pos:line="97" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">sqlite3VdbeMemSetStr<pos:position pos:line="98" pos:column="25"/></name><argument_list pos:line="98" pos:column="25">(<argument><expr><name pos:line="98" pos:column="26">pVal<pos:position pos:line="98" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="98" pos:column="32">sqlite3HexToBlob<pos:position pos:line="98" pos:column="48"/></name><argument_list pos:line="98" pos:column="48">(<argument><expr><name pos:line="98" pos:column="49">db<pos:position pos:line="98" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="53">zVal<pos:position pos:line="98" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="59">nVal<pos:position pos:line="98" pos:column="63"/></name></expr></argument>)<pos:position pos:line="98" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="98" pos:column="66">nVal<pos:position pos:line="98" pos:column="70"/></name><operator pos:line="98" pos:column="70">/<pos:position pos:line="98" pos:column="71"/></operator><literal type="number" pos:line="98" pos:column="71">2<pos:position pos:line="98" pos:column="72"/></literal></expr></argument>,
                         <argument><expr><literal type="number" pos:line="99" pos:column="26">0<pos:position pos:line="99" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="29">SQLITE_DYNAMIC<pos:position pos:line="99" pos:column="43"/></name></expr></argument>)<pos:position pos:line="99" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="100" pos:column="4"/></block></then></if></elseif>
<cpp:endif pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">endif<pos:position pos:line="101" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">ifdef<pos:position pos:line="103" pos:column="7"/></cpp:directive> <name pos:line="103" pos:column="8">SQLITE_ENABLE_STAT3_OR_STAT4<pos:position pos:line="103" pos:column="36"/></name></cpp:ifdef>
  <elseif pos:line="104" pos:column="3">else <if pos:line="104" pos:column="8">if<condition pos:line="104" pos:column="10">( <expr><name pos:line="104" pos:column="12">op<pos:position pos:line="104" pos:column="14"/></name><operator pos:line="104" pos:column="14">==<pos:position pos:line="104" pos:column="16"/></operator><name pos:line="104" pos:column="16">TK_FUNCTION<pos:position pos:line="104" pos:column="27"/></name> <operator pos:line="104" pos:column="28">&amp;&amp;<pos:position pos:line="104" pos:column="38"/></operator> <name pos:line="104" pos:column="31">pCtx<pos:position pos:line="104" pos:column="35"/></name><operator pos:line="104" pos:column="35">!=<pos:position pos:line="104" pos:column="37"/></operator><literal type="number" pos:line="104" pos:column="37">0<pos:position pos:line="104" pos:column="38"/></literal></expr> )<pos:position pos:line="104" pos:column="40"/></condition><then><block pos:line="104" pos:column="40">{
    <expr_stmt><expr><name pos:line="105" pos:column="5">rc<pos:position pos:line="105" pos:column="7"/></name> <operator pos:line="105" pos:column="8">=<pos:position pos:line="105" pos:column="9"/></operator> <call><name pos:line="105" pos:column="10">valueFromFunction<pos:position pos:line="105" pos:column="27"/></name><argument_list pos:line="105" pos:column="27">(<argument><expr><name pos:line="105" pos:column="28">db<pos:position pos:line="105" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="32">pExpr<pos:position pos:line="105" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="39">enc<pos:position pos:line="105" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="44">affinity<pos:position pos:line="105" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="105" pos:column="54">&amp;<pos:position pos:line="105" pos:column="59"/></operator><name pos:line="105" pos:column="55">pVal<pos:position pos:line="105" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="61">pCtx<pos:position pos:line="105" pos:column="65"/></name></expr></argument>)<pos:position pos:line="105" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="106" pos:column="4"/></block></then></if></elseif></if>
<cpp:endif pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">endif<pos:position pos:line="107" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><operator pos:line="109" pos:column="3">*<pos:position pos:line="109" pos:column="4"/></operator><name pos:line="109" pos:column="4">ppVal<pos:position pos:line="109" pos:column="9"/></name> <operator pos:line="109" pos:column="10">=<pos:position pos:line="109" pos:column="11"/></operator> <name pos:line="109" pos:column="12">pVal<pos:position pos:line="109" pos:column="16"/></name></expr>;<pos:position pos:line="109" pos:column="17"/></expr_stmt>
  <return pos:line="110" pos:column="3">return <expr><name pos:line="110" pos:column="10">rc<pos:position pos:line="110" pos:column="12"/></name></expr>;<pos:position pos:line="110" pos:column="13"/></return>

<label><name pos:line="112" pos:column="1">no_mem<pos:position pos:line="112" pos:column="7"/></name>:<pos:position pos:line="112" pos:column="8"/></label>
  <expr_stmt><expr><call><name pos:line="113" pos:column="3">sqlite3OomFault<pos:position pos:line="113" pos:column="18"/></name><argument_list pos:line="113" pos:column="18">(<argument><expr><name pos:line="113" pos:column="19">db<pos:position pos:line="113" pos:column="21"/></name></expr></argument>)<pos:position pos:line="113" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="114" pos:column="3">sqlite3DbFree<pos:position pos:line="114" pos:column="16"/></name><argument_list pos:line="114" pos:column="16">(<argument><expr><name pos:line="114" pos:column="17">db<pos:position pos:line="114" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="21">zVal<pos:position pos:line="114" pos:column="25"/></name></expr></argument>)<pos:position pos:line="114" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="115" pos:column="3">assert<pos:position pos:line="115" pos:column="9"/></name><argument_list pos:line="115" pos:column="9">( <argument><expr><operator pos:line="115" pos:column="11">*<pos:position pos:line="115" pos:column="12"/></operator><name pos:line="115" pos:column="12">ppVal<pos:position pos:line="115" pos:column="17"/></name><operator pos:line="115" pos:column="17">==<pos:position pos:line="115" pos:column="19"/></operator><literal type="number" pos:line="115" pos:column="19">0<pos:position pos:line="115" pos:column="20"/></literal></expr></argument> )<pos:position pos:line="115" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="23"/></expr_stmt>
<cpp:ifdef pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">ifdef<pos:position pos:line="116" pos:column="7"/></cpp:directive> <name pos:line="116" pos:column="8">SQLITE_ENABLE_STAT3_OR_STAT4<pos:position pos:line="116" pos:column="36"/></name></cpp:ifdef>
  <if pos:line="117" pos:column="3">if<condition pos:line="117" pos:column="5">( <expr><name pos:line="117" pos:column="7">pCtx<pos:position pos:line="117" pos:column="11"/></name><operator pos:line="117" pos:column="11">==<pos:position pos:line="117" pos:column="13"/></operator><literal type="number" pos:line="117" pos:column="13">0<pos:position pos:line="117" pos:column="14"/></literal></expr> )<pos:position pos:line="117" pos:column="16"/></condition><then pos:line="117" pos:column="16"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="17">sqlite3ValueFree<pos:position pos:line="117" pos:column="33"/></name><argument_list pos:line="117" pos:column="33">(<argument><expr><name pos:line="117" pos:column="34">pVal<pos:position pos:line="117" pos:column="38"/></name></expr></argument>)<pos:position pos:line="117" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="40"/></expr_stmt></block></then></if>
<cpp:else pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">else<pos:position pos:line="118" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><call><name pos:line="119" pos:column="3">assert<pos:position pos:line="119" pos:column="9"/></name><argument_list pos:line="119" pos:column="9">( <argument><expr><name pos:line="119" pos:column="11">pCtx<pos:position pos:line="119" pos:column="15"/></name><operator pos:line="119" pos:column="15">==<pos:position pos:line="119" pos:column="17"/></operator><literal type="number" pos:line="119" pos:column="17">0<pos:position pos:line="119" pos:column="18"/></literal></expr></argument> )<pos:position pos:line="119" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="21"/></expr_stmt> <expr_stmt><expr><call><name pos:line="119" pos:column="22">sqlite3ValueFree<pos:position pos:line="119" pos:column="38"/></name><argument_list pos:line="119" pos:column="38">(<argument><expr><name pos:line="119" pos:column="39">pVal<pos:position pos:line="119" pos:column="43"/></name></expr></argument>)<pos:position pos:line="119" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">endif<pos:position pos:line="120" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="121" pos:column="3">return <expr><name pos:line="121" pos:column="10">SQLITE_NOMEM_BKPT<pos:position pos:line="121" pos:column="27"/></name></expr>;<pos:position pos:line="121" pos:column="28"/></return>
}<pos:position pos:line="122" pos:column="2"/></block></function></unit>

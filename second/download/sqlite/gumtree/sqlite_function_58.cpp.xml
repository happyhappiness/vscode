<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">renameParentFunc<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(
  <parameter><decl><type><name pos:line="2" pos:column="3">sqlite3_context<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">context<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">NotUsed<pos:position pos:line="3" pos:column="14"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="4" pos:column="3">sqlite3_value<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier><modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">argv<pos:position pos:line="4" pos:column="23"/></name></decl></parameter>
)<pos:position pos:line="5" pos:column="2"/></parameter_list><block pos:line="5" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">sqlite3<pos:position pos:line="6" pos:column="10"/></name> <modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier></type><name pos:line="6" pos:column="12">db<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><call><name pos:line="6" pos:column="17">sqlite3_context_db_handle<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">(<argument><expr><name pos:line="6" pos:column="43">context<pos:position pos:line="6" pos:column="50"/></name></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">zOutput<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">zResult<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">unsigned<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">char<pos:position pos:line="9" pos:column="16"/></name> <specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">zInput<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><call><name pos:line="9" pos:column="33">sqlite3_value_text<pos:position pos:line="9" pos:column="51"/></name><argument_list pos:line="9" pos:column="51">(<argument><expr><name><name pos:line="9" pos:column="52">argv<pos:position pos:line="9" pos:column="56"/></name><index pos:line="9" pos:column="56">[<expr><literal type="number" pos:line="9" pos:column="57">0<pos:position pos:line="9" pos:column="58"/></literal></expr>]<pos:position pos:line="9" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="61"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">unsigned<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">char<pos:position pos:line="10" pos:column="16"/></name> <specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">zOld<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><call><name pos:line="10" pos:column="31">sqlite3_value_text<pos:position pos:line="10" pos:column="49"/></name><argument_list pos:line="10" pos:column="49">(<argument><expr><name><name pos:line="10" pos:column="50">argv<pos:position pos:line="10" pos:column="54"/></name><index pos:line="10" pos:column="54">[<expr><literal type="number" pos:line="10" pos:column="55">1<pos:position pos:line="10" pos:column="56"/></literal></expr>]<pos:position pos:line="10" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="59"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">unsigned<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">char<pos:position pos:line="11" pos:column="16"/></name> <specifier pos:line="11" pos:column="17">const<pos:position pos:line="11" pos:column="22"/></specifier> <modifier pos:line="11" pos:column="23">*<pos:position pos:line="11" pos:column="24"/></modifier></type><name pos:line="11" pos:column="24">zNew<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><call><name pos:line="11" pos:column="31">sqlite3_value_text<pos:position pos:line="11" pos:column="49"/></name><argument_list pos:line="11" pos:column="49">(<argument><expr><name><name pos:line="11" pos:column="50">argv<pos:position pos:line="11" pos:column="54"/></name><index pos:line="11" pos:column="54">[<expr><literal type="number" pos:line="11" pos:column="55">2<pos:position pos:line="11" pos:column="56"/></literal></expr>]<pos:position pos:line="11" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="59"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">unsigned<pos:position pos:line="13" pos:column="11"/></name> <specifier pos:line="13" pos:column="12">const<pos:position pos:line="13" pos:column="17"/></specifier> <name pos:line="13" pos:column="18">char<pos:position pos:line="13" pos:column="22"/></name> <modifier pos:line="13" pos:column="23">*<pos:position pos:line="13" pos:column="24"/></modifier></type><name pos:line="13" pos:column="24">z<pos:position pos:line="13" pos:column="25"/></name></decl>;<pos:position pos:line="13" pos:column="26"/></decl_stmt>         <comment type="block" pos:line="13" pos:column="35">/* Pointer to token */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">n<pos:position pos:line="14" pos:column="8"/></name></decl>;<pos:position pos:line="14" pos:column="9"/></decl_stmt>                          <comment type="block" pos:line="14" pos:column="35">/* Length of token z */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">token<pos:position pos:line="15" pos:column="12"/></name></decl>;<pos:position pos:line="15" pos:column="13"/></decl_stmt>                      <comment type="block" pos:line="15" pos:column="35">/* Type of token */</comment>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">UNUSED_PARAMETER<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">NotUsed<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">( <expr><name pos:line="18" pos:column="7">zInput<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">==<pos:position pos:line="18" pos:column="15"/></operator><literal type="number" pos:line="18" pos:column="15">0<pos:position pos:line="18" pos:column="16"/></literal> <operator pos:line="18" pos:column="17">||<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">zOld<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">==<pos:position pos:line="18" pos:column="26"/></operator><literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr> )<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29"> <block type="pseudo"><return pos:line="18" pos:column="30">return;<pos:position pos:line="18" pos:column="37"/></return></block></then></if>
  <for pos:line="19" pos:column="3">for<control pos:line="19" pos:column="6">(<init><expr><name pos:line="19" pos:column="7">z<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">zInput<pos:position pos:line="19" pos:column="15"/></name></expr>;<pos:position pos:line="19" pos:column="16"/></init> <condition><expr><operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">z<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></condition> <incr><expr><name pos:line="19" pos:column="21">z<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">z<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">+<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">n<pos:position pos:line="19" pos:column="26"/></name></expr></incr>)<pos:position pos:line="19" pos:column="27"/></control><block pos:line="19" pos:column="27">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">n<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name pos:line="20" pos:column="9">sqlite3GetToken<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">z<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="28">&amp;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="29">token<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">( <expr><name pos:line="21" pos:column="9">token<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">==<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">TK_REFERENCES<pos:position pos:line="21" pos:column="29"/></name></expr> )<pos:position pos:line="21" pos:column="31"/></condition><then><block pos:line="21" pos:column="31">{
      <decl_stmt><decl><type><name pos:line="22" pos:column="7">char<pos:position pos:line="22" pos:column="11"/></name> <modifier pos:line="22" pos:column="12">*<pos:position pos:line="22" pos:column="13"/></modifier></type><name pos:line="22" pos:column="13">zParent<pos:position pos:line="22" pos:column="20"/></name></decl>;<pos:position pos:line="22" pos:column="21"/></decl_stmt>
      <do pos:line="23" pos:column="7">do <block pos:line="23" pos:column="10">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">z<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">+=<pos:position pos:line="24" pos:column="13"/></operator> <name pos:line="24" pos:column="14">n<pos:position pos:line="24" pos:column="15"/></name></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">n<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <call><name pos:line="25" pos:column="13">sqlite3GetToken<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">z<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="32">&amp;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="33">token<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="26" pos:column="8"/></block>while<condition pos:line="26" pos:column="13">( <expr><name pos:line="26" pos:column="15">token<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">==<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">TK_SPACE<pos:position pos:line="26" pos:column="30"/></name></expr> )<pos:position pos:line="26" pos:column="32"/></condition>;<pos:position pos:line="26" pos:column="33"/></do>

      <if pos:line="28" pos:column="7">if<condition pos:line="28" pos:column="9">( <expr><name pos:line="28" pos:column="11">token<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">==<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">TK_ILLEGAL<pos:position pos:line="28" pos:column="28"/></name></expr> )<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30"> <block type="pseudo"><break pos:line="28" pos:column="31">break;<pos:position pos:line="28" pos:column="37"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="29" pos:column="7">zParent<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">sqlite3DbStrNDup<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">db<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="38">(<pos:position pos:line="29" pos:column="39"/></operator><specifier pos:line="29" pos:column="39">const<pos:position pos:line="29" pos:column="44"/></specifier> <name pos:line="29" pos:column="45">char<pos:position pos:line="29" pos:column="49"/></name> <operator pos:line="29" pos:column="50">*<pos:position pos:line="29" pos:column="51"/></operator><operator pos:line="29" pos:column="51">)<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="52">z<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">n<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
      <if pos:line="30" pos:column="7">if<condition pos:line="30" pos:column="9">( <expr><name pos:line="30" pos:column="11">zParent<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">==<pos:position pos:line="30" pos:column="20"/></operator><literal type="number" pos:line="30" pos:column="20">0<pos:position pos:line="30" pos:column="21"/></literal></expr> )<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23"> <block type="pseudo"><break pos:line="30" pos:column="24">break;<pos:position pos:line="30" pos:column="30"/></break></block></then></if>
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">sqlite3Dequote<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">zParent<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
      <if pos:line="32" pos:column="7">if<condition pos:line="32" pos:column="9">( <expr><literal type="number" pos:line="32" pos:column="11">0<pos:position pos:line="32" pos:column="12"/></literal><operator pos:line="32" pos:column="12">==<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">sqlite3StrICmp<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><operator pos:line="32" pos:column="29">(<pos:position pos:line="32" pos:column="30"/></operator><specifier pos:line="32" pos:column="30">const<pos:position pos:line="32" pos:column="35"/></specifier> <name pos:line="32" pos:column="36">char<pos:position pos:line="32" pos:column="40"/></name> <operator pos:line="32" pos:column="41">*<pos:position pos:line="32" pos:column="42"/></operator><operator pos:line="32" pos:column="42">)<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="43">zOld<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="49">zParent<pos:position pos:line="32" pos:column="56"/></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr> )<pos:position pos:line="32" pos:column="59"/></condition><then><block pos:line="32" pos:column="59">{
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">char<pos:position pos:line="33" pos:column="13"/></name> <modifier pos:line="33" pos:column="14">*<pos:position pos:line="33" pos:column="15"/></modifier></type><name pos:line="33" pos:column="15">zOut<pos:position pos:line="33" pos:column="19"/></name> <init pos:line="33" pos:column="20">= <expr><call><name pos:line="33" pos:column="22">sqlite3MPrintf<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">db<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="41">"%s%.*s\"%w\""<pos:position pos:line="33" pos:column="55"/></literal></expr></argument>, 
            <argument><expr><operator pos:line="34" pos:column="13">(<pos:position pos:line="34" pos:column="14"/></operator><ternary><condition><expr><name pos:line="34" pos:column="14">zOutput<pos:position pos:line="34" pos:column="21"/></name></expr>?<pos:position pos:line="34" pos:column="22"/></condition><then><expr><name pos:line="34" pos:column="22">zOutput<pos:position pos:line="34" pos:column="29"/></name></expr></then><else pos:line="34" pos:column="29">:<expr><literal type="string" pos:line="34" pos:column="30">""<pos:position pos:line="34" pos:column="32"/></literal></expr></else></ternary><operator pos:line="34" pos:column="32">)<pos:position pos:line="34" pos:column="33"/></operator></expr></argument>, <argument><expr><call pos:line="34" pos:column="35">(<name pos:line="34" pos:column="36">int<pos:position pos:line="34" pos:column="39"/></name>)<argument_list pos:line="34" pos:column="40">(<argument><expr><name pos:line="34" pos:column="41">z<pos:position pos:line="34" pos:column="42"/></name><operator pos:line="34" pos:column="42">-<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="43">zInput<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">zInput<pos:position pos:line="34" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="60">(<pos:position pos:line="34" pos:column="61"/></operator><specifier pos:line="34" pos:column="61">const<pos:position pos:line="34" pos:column="66"/></specifier> <name pos:line="34" pos:column="67">char<pos:position pos:line="34" pos:column="71"/></name> <operator pos:line="34" pos:column="72">*<pos:position pos:line="34" pos:column="73"/></operator><operator pos:line="34" pos:column="73">)<pos:position pos:line="34" pos:column="74"/></operator><name pos:line="34" pos:column="74">zNew<pos:position pos:line="34" pos:column="78"/></name></expr></argument>
        )<pos:position pos:line="35" pos:column="10"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="11"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">sqlite3DbFree<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">db<pos:position pos:line="36" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="27">zOutput<pos:position pos:line="36" pos:column="34"/></name></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">zOutput<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">zOut<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="38" pos:column="9">zInput<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <operator pos:line="38" pos:column="18">&amp;<pos:position pos:line="38" pos:column="23"/></operator><name><name pos:line="38" pos:column="19">z<pos:position pos:line="38" pos:column="20"/></name><index pos:line="38" pos:column="20">[<expr><name pos:line="38" pos:column="21">n<pos:position pos:line="38" pos:column="22"/></name></expr>]<pos:position pos:line="38" pos:column="23"/></index></name></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="39" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">sqlite3DbFree<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">db<pos:position pos:line="40" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="25">zParent<pos:position pos:line="40" pos:column="32"/></name></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
  }<pos:position pos:line="42" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="44" pos:column="3">zResult<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <call><name pos:line="44" pos:column="13">sqlite3MPrintf<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">db<pos:position pos:line="44" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="32">"%s%s"<pos:position pos:line="44" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="40">(<pos:position pos:line="44" pos:column="41"/></operator><ternary><condition><expr><name pos:line="44" pos:column="41">zOutput<pos:position pos:line="44" pos:column="48"/></name></expr>?<pos:position pos:line="44" pos:column="49"/></condition><then><expr><name pos:line="44" pos:column="49">zOutput<pos:position pos:line="44" pos:column="56"/></name></expr></then><else pos:line="44" pos:column="56">:<expr><literal type="string" pos:line="44" pos:column="57">""<pos:position pos:line="44" pos:column="59"/></literal></expr></else></ternary><operator pos:line="44" pos:column="59">)<pos:position pos:line="44" pos:column="60"/></operator></expr></argument>, <argument><expr><name pos:line="44" pos:column="62">zInput<pos:position pos:line="44" pos:column="68"/></name></expr></argument>)<pos:position pos:line="44" pos:column="69"/></argument_list></call></expr><operator pos:line="44" pos:column="69">,<pos:position pos:line="44" pos:column="70"/></operator> 
  <expr><call><name pos:line="45" pos:column="3">sqlite3_result_text<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">context<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="32">zResult<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="41">-<pos:position pos:line="45" pos:column="42"/></operator><literal type="number" pos:line="45" pos:column="42">1<pos:position pos:line="45" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="45">SQLITE_DYNAMIC<pos:position pos:line="45" pos:column="59"/></name></expr></argument>)<pos:position pos:line="45" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">sqlite3DbFree<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">db<pos:position pos:line="46" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="21">zOutput<pos:position pos:line="46" pos:column="28"/></name></expr></argument>)<pos:position pos:line="46" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

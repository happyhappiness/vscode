<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_144.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">unixFileControl<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">sqlite3_file<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">id<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">op<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">void<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">pArg<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list><block pos:line="1" pos:column="65">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">unixFile<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">pFile<pos:position pos:line="2" pos:column="18"/></name> <init pos:line="2" pos:column="19">= <expr><operator pos:line="2" pos:column="21">(<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">unixFile<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></operator><operator pos:line="2" pos:column="31">)<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">id<pos:position pos:line="2" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="35"/></decl_stmt>
  <switch pos:line="3" pos:column="3">switch<condition pos:line="3" pos:column="9">( <expr><name pos:line="3" pos:column="11">op<pos:position pos:line="3" pos:column="13"/></name></expr> )<pos:position pos:line="3" pos:column="15"/></condition><block pos:line="3" pos:column="15">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><call><name pos:line="4" pos:column="5">defined<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">__linux__<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call> <operator pos:line="4" pos:column="24">&amp;&amp;<pos:position pos:line="4" pos:column="34"/></operator> <call><name pos:line="4" pos:column="27">defined<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">(<argument><expr><name pos:line="4" pos:column="35">SQLITE_ENABLE_BATCH_ATOMIC_WRITE<pos:position pos:line="4" pos:column="67"/></name></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr></cpp:if>
    <case pos:line="5" pos:column="5">case <expr><name pos:line="5" pos:column="10">SQLITE_FCNTL_BEGIN_ATOMIC_WRITE<pos:position pos:line="5" pos:column="41"/></name></expr>:<pos:position pos:line="5" pos:column="42"/></case> <block pos:line="5" pos:column="43">{
      <decl_stmt><decl><type><name pos:line="6" pos:column="7">int<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">rc<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><call><name pos:line="6" pos:column="16">osIoctl<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name><name pos:line="6" pos:column="24">pFile<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">h<pos:position pos:line="6" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="34">F2FS_IOC_START_ATOMIC_WRITE<pos:position pos:line="6" pos:column="61"/></name></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="63"/></decl_stmt>
      <return pos:line="7" pos:column="7">return <expr><ternary><condition><expr><name pos:line="7" pos:column="14">rc<pos:position pos:line="7" pos:column="16"/></name></expr> ?<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18"> <expr><name pos:line="7" pos:column="19">SQLITE_IOERR_BEGIN_ATOMIC<pos:position pos:line="7" pos:column="44"/></name></expr> <pos:position pos:line="7" pos:column="45"/></then><else pos:line="7" pos:column="45">: <expr><name pos:line="7" pos:column="47">SQLITE_OK<pos:position pos:line="7" pos:column="56"/></name></expr></else></ternary></expr>;<pos:position pos:line="7" pos:column="57"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block>
    <case pos:line="9" pos:column="5">case <expr><name pos:line="9" pos:column="10">SQLITE_FCNTL_COMMIT_ATOMIC_WRITE<pos:position pos:line="9" pos:column="42"/></name></expr>:<pos:position pos:line="9" pos:column="43"/></case> <block pos:line="9" pos:column="44">{
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">int<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">rc<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><call><name pos:line="10" pos:column="16">osIoctl<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name><name pos:line="10" pos:column="24">pFile<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">h<pos:position pos:line="10" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">F2FS_IOC_COMMIT_ATOMIC_WRITE<pos:position pos:line="10" pos:column="62"/></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="64"/></decl_stmt>
      <return pos:line="11" pos:column="7">return <expr><ternary><condition><expr><name pos:line="11" pos:column="14">rc<pos:position pos:line="11" pos:column="16"/></name></expr> ?<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <expr><name pos:line="11" pos:column="19">SQLITE_IOERR_COMMIT_ATOMIC<pos:position pos:line="11" pos:column="45"/></name></expr> <pos:position pos:line="11" pos:column="46"/></then><else pos:line="11" pos:column="46">: <expr><name pos:line="11" pos:column="48">SQLITE_OK<pos:position pos:line="11" pos:column="57"/></name></expr></else></ternary></expr>;<pos:position pos:line="11" pos:column="58"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block>
    <case pos:line="13" pos:column="5">case <expr><name pos:line="13" pos:column="10">SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE<pos:position pos:line="13" pos:column="44"/></name></expr>:<pos:position pos:line="13" pos:column="45"/></case> <block pos:line="13" pos:column="46">{
      <decl_stmt><decl><type><name pos:line="14" pos:column="7">int<pos:position pos:line="14" pos:column="10"/></name></type> <name pos:line="14" pos:column="11">rc<pos:position pos:line="14" pos:column="13"/></name> <init pos:line="14" pos:column="14">= <expr><call><name pos:line="14" pos:column="16">osIoctl<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name><name pos:line="14" pos:column="24">pFile<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">h<pos:position pos:line="14" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">F2FS_IOC_ABORT_VOLATILE_WRITE<pos:position pos:line="14" pos:column="63"/></name></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="65"/></decl_stmt>
      <return pos:line="15" pos:column="7">return <expr><ternary><condition><expr><name pos:line="15" pos:column="14">rc<pos:position pos:line="15" pos:column="16"/></name></expr> ?<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18"> <expr><name pos:line="15" pos:column="19">SQLITE_IOERR_ROLLBACK_ATOMIC<pos:position pos:line="15" pos:column="47"/></name></expr> <pos:position pos:line="15" pos:column="48"/></then><else pos:line="15" pos:column="48">: <expr><name pos:line="15" pos:column="50">SQLITE_OK<pos:position pos:line="15" pos:column="59"/></name></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="60"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="17" pos:column="8">/* __linux__ &amp;&amp; SQLITE_ENABLE_BATCH_ATOMIC_WRITE */</comment>

    <case pos:line="19" pos:column="5">case <expr><name pos:line="19" pos:column="10">SQLITE_FCNTL_LOCKSTATE<pos:position pos:line="19" pos:column="32"/></name></expr>:<pos:position pos:line="19" pos:column="33"/></case> <block pos:line="19" pos:column="34">{
      <expr_stmt><expr><operator pos:line="20" pos:column="7">*<pos:position pos:line="20" pos:column="8"/></operator><operator pos:line="20" pos:column="8">(<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">*<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">)<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">pArg<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name><name pos:line="20" pos:column="21">pFile<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">eFileLock<pos:position pos:line="20" pos:column="37"/></name></name></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><name pos:line="21" pos:column="14">SQLITE_OK<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block>
    <case pos:line="23" pos:column="5">case <expr><name pos:line="23" pos:column="10">SQLITE_FCNTL_LAST_ERRNO<pos:position pos:line="23" pos:column="33"/></name></expr>:<pos:position pos:line="23" pos:column="34"/></case> <block pos:line="23" pos:column="35">{
      <expr_stmt><expr><operator pos:line="24" pos:column="7">*<pos:position pos:line="24" pos:column="8"/></operator><operator pos:line="24" pos:column="8">(<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="9">int<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">*<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">)<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">pArg<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name><name pos:line="24" pos:column="21">pFile<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">lastErrno<pos:position pos:line="24" pos:column="37"/></name></name></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
      <return pos:line="25" pos:column="7">return <expr><name pos:line="25" pos:column="14">SQLITE_OK<pos:position pos:line="25" pos:column="23"/></name></expr>;<pos:position pos:line="25" pos:column="24"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block>
    <case pos:line="27" pos:column="5">case <expr><name pos:line="27" pos:column="10">SQLITE_FCNTL_CHUNK_SIZE<pos:position pos:line="27" pos:column="33"/></name></expr>:<pos:position pos:line="27" pos:column="34"/></case> <block pos:line="27" pos:column="35">{
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">pFile<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">szChunk<pos:position pos:line="28" pos:column="21"/></name></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <operator pos:line="28" pos:column="24">*<pos:position pos:line="28" pos:column="25"/></operator><operator pos:line="28" pos:column="25">(<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">int<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">*<pos:position pos:line="28" pos:column="31"/></operator><operator pos:line="28" pos:column="31">)<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">pArg<pos:position pos:line="28" pos:column="36"/></name></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">SQLITE_OK<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block>
    <case pos:line="31" pos:column="5">case <expr><name pos:line="31" pos:column="10">SQLITE_FCNTL_SIZE_HINT<pos:position pos:line="31" pos:column="32"/></name></expr>:<pos:position pos:line="31" pos:column="33"/></case> <block pos:line="31" pos:column="34">{
      <decl_stmt><decl><type><name pos:line="32" pos:column="7">int<pos:position pos:line="32" pos:column="10"/></name></type> <name pos:line="32" pos:column="11">rc<pos:position pos:line="32" pos:column="13"/></name></decl>;<pos:position pos:line="32" pos:column="14"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">SimulateIOErrorBenign<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><literal type="number" pos:line="33" pos:column="29">1<pos:position pos:line="33" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="34" pos:column="7">rc<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <call><name pos:line="34" pos:column="12">fcntlSizeHint<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">pFile<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="33">*<pos:position pos:line="34" pos:column="34"/></operator><operator pos:line="34" pos:column="34">(<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">i64<pos:position pos:line="34" pos:column="38"/></name> <operator pos:line="34" pos:column="39">*<pos:position pos:line="34" pos:column="40"/></operator><operator pos:line="34" pos:column="40">)<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="41">pArg<pos:position pos:line="34" pos:column="45"/></name></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">SimulateIOErrorBenign<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><literal type="number" pos:line="35" pos:column="29">0<pos:position pos:line="35" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
      <return pos:line="36" pos:column="7">return <expr><name pos:line="36" pos:column="14">rc<pos:position pos:line="36" pos:column="16"/></name></expr>;<pos:position pos:line="36" pos:column="17"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block>
    <case pos:line="38" pos:column="5">case <expr><name pos:line="38" pos:column="10">SQLITE_FCNTL_PERSIST_WAL<pos:position pos:line="38" pos:column="34"/></name></expr>:<pos:position pos:line="38" pos:column="35"/></case> <block pos:line="38" pos:column="36">{
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">unixModeBit<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><name pos:line="39" pos:column="19">pFile<pos:position pos:line="39" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="26">UNIXFILE_PERSIST_WAL<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="48">(<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="49">int<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">*<pos:position pos:line="39" pos:column="53"/></operator><operator pos:line="39" pos:column="53">)<pos:position pos:line="39" pos:column="54"/></operator><name pos:line="39" pos:column="54">pArg<pos:position pos:line="39" pos:column="58"/></name></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt>
      <return pos:line="40" pos:column="7">return <expr><name pos:line="40" pos:column="14">SQLITE_OK<pos:position pos:line="40" pos:column="23"/></name></expr>;<pos:position pos:line="40" pos:column="24"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block>
    <case pos:line="42" pos:column="5">case <expr><name pos:line="42" pos:column="10">SQLITE_FCNTL_POWERSAFE_OVERWRITE<pos:position pos:line="42" pos:column="42"/></name></expr>:<pos:position pos:line="42" pos:column="43"/></case> <block pos:line="42" pos:column="44">{
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">unixModeBit<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><name pos:line="43" pos:column="19">pFile<pos:position pos:line="43" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="26">UNIXFILE_PSOW<pos:position pos:line="43" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="41">(<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="42">int<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">*<pos:position pos:line="43" pos:column="46"/></operator><operator pos:line="43" pos:column="46">)<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="47">pArg<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>
      <return pos:line="44" pos:column="7">return <expr><name pos:line="44" pos:column="14">SQLITE_OK<pos:position pos:line="44" pos:column="23"/></name></expr>;<pos:position pos:line="44" pos:column="24"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block>
    <case pos:line="46" pos:column="5">case <expr><name pos:line="46" pos:column="10">SQLITE_FCNTL_VFSNAME<pos:position pos:line="46" pos:column="30"/></name></expr>:<pos:position pos:line="46" pos:column="31"/></case> <block pos:line="46" pos:column="32">{
      <expr_stmt><expr><operator pos:line="47" pos:column="7">*<pos:position pos:line="47" pos:column="8"/></operator><operator pos:line="47" pos:column="8">(<pos:position pos:line="47" pos:column="9"/></operator><name pos:line="47" pos:column="9">char<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">*<pos:position pos:line="47" pos:column="14"/></operator><operator pos:line="47" pos:column="14">*<pos:position pos:line="47" pos:column="15"/></operator><operator pos:line="47" pos:column="15">)<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="16">pArg<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <call><name pos:line="47" pos:column="23">sqlite3_mprintf<pos:position pos:line="47" pos:column="38"/></name><argument_list pos:line="47" pos:column="38">(<argument><expr><literal type="string" pos:line="47" pos:column="39">"%s"<pos:position pos:line="47" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="45">pFile<pos:position pos:line="47" pos:column="50"/></name><operator pos:line="47" pos:column="50">-&gt;<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="52">pVfs<pos:position pos:line="47" pos:column="56"/></name><operator pos:line="47" pos:column="56">-&gt;<pos:position pos:line="47" pos:column="61"/></operator><name pos:line="47" pos:column="58">zName<pos:position pos:line="47" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="65"/></expr_stmt>
      <return pos:line="48" pos:column="7">return <expr><name pos:line="48" pos:column="14">SQLITE_OK<pos:position pos:line="48" pos:column="23"/></name></expr>;<pos:position pos:line="48" pos:column="24"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block>
    <case pos:line="50" pos:column="5">case <expr><name pos:line="50" pos:column="10">SQLITE_FCNTL_TEMPFILENAME<pos:position pos:line="50" pos:column="35"/></name></expr>:<pos:position pos:line="50" pos:column="36"/></case> <block pos:line="50" pos:column="37">{
      <decl_stmt><decl><type><name pos:line="51" pos:column="7">char<pos:position pos:line="51" pos:column="11"/></name> <modifier pos:line="51" pos:column="12">*<pos:position pos:line="51" pos:column="13"/></modifier></type><name pos:line="51" pos:column="13">zTFile<pos:position pos:line="51" pos:column="19"/></name> <init pos:line="51" pos:column="20">= <expr><call><name pos:line="51" pos:column="22">sqlite3_malloc64<pos:position pos:line="51" pos:column="38"/></name><argument_list pos:line="51" pos:column="38">( <argument><expr><name><name pos:line="51" pos:column="40">pFile<pos:position pos:line="51" pos:column="45"/></name><operator pos:line="51" pos:column="45">-&gt;<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="47">pVfs<pos:position pos:line="51" pos:column="51"/></name><operator pos:line="51" pos:column="51">-&gt;<pos:position pos:line="51" pos:column="56"/></operator><name pos:line="51" pos:column="53">mxPathname<pos:position pos:line="51" pos:column="63"/></name></name></expr></argument> )<pos:position pos:line="51" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="66"/></decl_stmt>
      <if pos:line="52" pos:column="7">if<condition pos:line="52" pos:column="9">( <expr><name pos:line="52" pos:column="11">zTFile<pos:position pos:line="52" pos:column="17"/></name></expr> )<pos:position pos:line="52" pos:column="19"/></condition><then><block pos:line="52" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">unixGetTempname<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><name><name pos:line="53" pos:column="25">pFile<pos:position pos:line="53" pos:column="30"/></name><operator pos:line="53" pos:column="30">-&gt;<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="32">pVfs<pos:position pos:line="53" pos:column="36"/></name><operator pos:line="53" pos:column="36">-&gt;<pos:position pos:line="53" pos:column="41"/></operator><name pos:line="53" pos:column="38">mxPathname<pos:position pos:line="53" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="50">zTFile<pos:position pos:line="53" pos:column="56"/></name></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="54" pos:column="9">*<pos:position pos:line="54" pos:column="10"/></operator><operator pos:line="54" pos:column="10">(<pos:position pos:line="54" pos:column="11"/></operator><name pos:line="54" pos:column="11">char<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">*<pos:position pos:line="54" pos:column="16"/></operator><operator pos:line="54" pos:column="16">*<pos:position pos:line="54" pos:column="17"/></operator><operator pos:line="54" pos:column="17">)<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="18">pArg<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator> <name pos:line="54" pos:column="25">zTFile<pos:position pos:line="54" pos:column="31"/></name></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="55" pos:column="8"/></block></then></if>
      <return pos:line="56" pos:column="7">return <expr><name pos:line="56" pos:column="14">SQLITE_OK<pos:position pos:line="56" pos:column="23"/></name></expr>;<pos:position pos:line="56" pos:column="24"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block>
    <case pos:line="58" pos:column="5">case <expr><name pos:line="58" pos:column="10">SQLITE_FCNTL_HAS_MOVED<pos:position pos:line="58" pos:column="32"/></name></expr>:<pos:position pos:line="58" pos:column="33"/></case> <block pos:line="58" pos:column="34">{
      <expr_stmt><expr><operator pos:line="59" pos:column="7">*<pos:position pos:line="59" pos:column="8"/></operator><operator pos:line="59" pos:column="8">(<pos:position pos:line="59" pos:column="9"/></operator><name pos:line="59" pos:column="9">int<pos:position pos:line="59" pos:column="12"/></name><operator pos:line="59" pos:column="12">*<pos:position pos:line="59" pos:column="13"/></operator><operator pos:line="59" pos:column="13">)<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="14">pArg<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <call><name pos:line="59" pos:column="21">fileHasMoved<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">pFile<pos:position pos:line="59" pos:column="39"/></name></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
      <return pos:line="60" pos:column="7">return <expr><name pos:line="60" pos:column="14">SQLITE_OK<pos:position pos:line="60" pos:column="23"/></name></expr>;<pos:position pos:line="60" pos:column="24"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block>
<cpp:if pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">if<pos:position pos:line="62" pos:column="4"/></cpp:directive> <expr><name pos:line="62" pos:column="5">SQLITE_MAX_MMAP_SIZE<pos:position pos:line="62" pos:column="25"/></name><operator pos:line="62" pos:column="25">&gt;<pos:position pos:line="62" pos:column="29"/></operator><literal type="number" pos:line="62" pos:column="26">0<pos:position pos:line="62" pos:column="27"/></literal></expr></cpp:if>
    <case pos:line="63" pos:column="5">case <expr><name pos:line="63" pos:column="10">SQLITE_FCNTL_MMAP_SIZE<pos:position pos:line="63" pos:column="32"/></name></expr>:<pos:position pos:line="63" pos:column="33"/></case> <block pos:line="63" pos:column="34">{
      <decl_stmt><decl><type><name pos:line="64" pos:column="7">i64<pos:position pos:line="64" pos:column="10"/></name></type> <name pos:line="64" pos:column="11">newLimit<pos:position pos:line="64" pos:column="19"/></name> <init pos:line="64" pos:column="20">= <expr><operator pos:line="64" pos:column="22">*<pos:position pos:line="64" pos:column="23"/></operator><operator pos:line="64" pos:column="23">(<pos:position pos:line="64" pos:column="24"/></operator><name pos:line="64" pos:column="24">i64<pos:position pos:line="64" pos:column="27"/></name><operator pos:line="64" pos:column="27">*<pos:position pos:line="64" pos:column="28"/></operator><operator pos:line="64" pos:column="28">)<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="29">pArg<pos:position pos:line="64" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="64" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="65" pos:column="7">int<pos:position pos:line="65" pos:column="10"/></name></type> <name pos:line="65" pos:column="11">rc<pos:position pos:line="65" pos:column="13"/></name> <init pos:line="65" pos:column="14">= <expr><name pos:line="65" pos:column="16">SQLITE_OK<pos:position pos:line="65" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="65" pos:column="26"/></decl_stmt>
      <if pos:line="66" pos:column="7">if<condition pos:line="66" pos:column="9">( <expr><name pos:line="66" pos:column="11">newLimit<pos:position pos:line="66" pos:column="19"/></name><operator pos:line="66" pos:column="19">&gt;<pos:position pos:line="66" pos:column="23"/></operator><name><name pos:line="66" pos:column="20">sqlite3GlobalConfig<pos:position pos:line="66" pos:column="39"/></name><operator pos:line="66" pos:column="39">.<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="40">mxMmap<pos:position pos:line="66" pos:column="46"/></name></name></expr> )<pos:position pos:line="66" pos:column="48"/></condition><then><block pos:line="66" pos:column="48">{
        <expr_stmt><expr><name pos:line="67" pos:column="9">newLimit<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">=<pos:position pos:line="67" pos:column="19"/></operator> <name><name pos:line="67" pos:column="20">sqlite3GlobalConfig<pos:position pos:line="67" pos:column="39"/></name><operator pos:line="67" pos:column="39">.<pos:position pos:line="67" pos:column="40"/></operator><name pos:line="67" pos:column="40">mxMmap<pos:position pos:line="67" pos:column="46"/></name></name></expr>;<pos:position pos:line="67" pos:column="47"/></expr_stmt>
      }<pos:position pos:line="68" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="70" pos:column="7">/* The value of newLimit may be eventually cast to (size_t) and passed
      ** to mmap(). Restrict its value to 2GB if (size_t) is not at least a
      ** 64-bit type. */</comment>
      <if pos:line="73" pos:column="7">if<condition pos:line="73" pos:column="9">( <expr><name pos:line="73" pos:column="11">newLimit<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">&gt;<pos:position pos:line="73" pos:column="23"/></operator><literal type="number" pos:line="73" pos:column="20">0<pos:position pos:line="73" pos:column="21"/></literal> <operator pos:line="73" pos:column="22">&amp;&amp;<pos:position pos:line="73" pos:column="32"/></operator> <sizeof pos:line="73" pos:column="25">sizeof<argument_list pos:line="73" pos:column="31">(<argument><expr><name pos:line="73" pos:column="32">size_t<pos:position pos:line="73" pos:column="38"/></name></expr></argument>)<pos:position pos:line="73" pos:column="39"/></argument_list></sizeof><operator pos:line="73" pos:column="39">&lt;<pos:position pos:line="73" pos:column="43"/></operator><literal type="number" pos:line="73" pos:column="40">8<pos:position pos:line="73" pos:column="41"/></literal></expr> )<pos:position pos:line="73" pos:column="43"/></condition><then><block pos:line="73" pos:column="43">{
        <expr_stmt><expr><name pos:line="74" pos:column="9">newLimit<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <operator pos:line="74" pos:column="20">(<pos:position pos:line="74" pos:column="21"/></operator><name pos:line="74" pos:column="21">newLimit<pos:position pos:line="74" pos:column="29"/></name> <operator pos:line="74" pos:column="30">&amp;<pos:position pos:line="74" pos:column="35"/></operator> <literal type="number" pos:line="74" pos:column="32">0x7FFFFFFF<pos:position pos:line="74" pos:column="42"/></literal><operator pos:line="74" pos:column="42">)<pos:position pos:line="74" pos:column="43"/></operator></expr>;<pos:position pos:line="74" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="75" pos:column="8"/></block></then></if>

      <expr_stmt><expr><operator pos:line="77" pos:column="7">*<pos:position pos:line="77" pos:column="8"/></operator><operator pos:line="77" pos:column="8">(<pos:position pos:line="77" pos:column="9"/></operator><name pos:line="77" pos:column="9">i64<pos:position pos:line="77" pos:column="12"/></name><operator pos:line="77" pos:column="12">*<pos:position pos:line="77" pos:column="13"/></operator><operator pos:line="77" pos:column="13">)<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="14">pArg<pos:position pos:line="77" pos:column="18"/></name> <operator pos:line="77" pos:column="19">=<pos:position pos:line="77" pos:column="20"/></operator> <name><name pos:line="77" pos:column="21">pFile<pos:position pos:line="77" pos:column="26"/></name><operator pos:line="77" pos:column="26">-&gt;<pos:position pos:line="77" pos:column="31"/></operator><name pos:line="77" pos:column="28">mmapSizeMax<pos:position pos:line="77" pos:column="39"/></name></name></expr>;<pos:position pos:line="77" pos:column="40"/></expr_stmt>
      <if pos:line="78" pos:column="7">if<condition pos:line="78" pos:column="9">( <expr><name pos:line="78" pos:column="11">newLimit<pos:position pos:line="78" pos:column="19"/></name><operator pos:line="78" pos:column="19">&gt;=<pos:position pos:line="78" pos:column="24"/></operator><literal type="number" pos:line="78" pos:column="21">0<pos:position pos:line="78" pos:column="22"/></literal> <operator pos:line="78" pos:column="23">&amp;&amp;<pos:position pos:line="78" pos:column="33"/></operator> <name pos:line="78" pos:column="26">newLimit<pos:position pos:line="78" pos:column="34"/></name><operator pos:line="78" pos:column="34">!=<pos:position pos:line="78" pos:column="36"/></operator><name><name pos:line="78" pos:column="36">pFile<pos:position pos:line="78" pos:column="41"/></name><operator pos:line="78" pos:column="41">-&gt;<pos:position pos:line="78" pos:column="46"/></operator><name pos:line="78" pos:column="43">mmapSizeMax<pos:position pos:line="78" pos:column="54"/></name></name> <operator pos:line="78" pos:column="55">&amp;&amp;<pos:position pos:line="78" pos:column="65"/></operator> <name><name pos:line="78" pos:column="58">pFile<pos:position pos:line="78" pos:column="63"/></name><operator pos:line="78" pos:column="63">-&gt;<pos:position pos:line="78" pos:column="68"/></operator><name pos:line="78" pos:column="65">nFetchOut<pos:position pos:line="78" pos:column="74"/></name></name><operator pos:line="78" pos:column="74">==<pos:position pos:line="78" pos:column="76"/></operator><literal type="number" pos:line="78" pos:column="76">0<pos:position pos:line="78" pos:column="77"/></literal></expr> )<pos:position pos:line="78" pos:column="79"/></condition><then><block pos:line="78" pos:column="79">{
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">pFile<pos:position pos:line="79" pos:column="14"/></name><operator pos:line="79" pos:column="14">-&gt;<pos:position pos:line="79" pos:column="19"/></operator><name pos:line="79" pos:column="16">mmapSizeMax<pos:position pos:line="79" pos:column="27"/></name></name> <operator pos:line="79" pos:column="28">=<pos:position pos:line="79" pos:column="29"/></operator> <name pos:line="79" pos:column="30">newLimit<pos:position pos:line="79" pos:column="38"/></name></expr>;<pos:position pos:line="79" pos:column="39"/></expr_stmt>
        <if pos:line="80" pos:column="9">if<condition pos:line="80" pos:column="11">( <expr><name><name pos:line="80" pos:column="13">pFile<pos:position pos:line="80" pos:column="18"/></name><operator pos:line="80" pos:column="18">-&gt;<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="20">mmapSize<pos:position pos:line="80" pos:column="28"/></name></name><operator pos:line="80" pos:column="28">&gt;<pos:position pos:line="80" pos:column="32"/></operator><literal type="number" pos:line="80" pos:column="29">0<pos:position pos:line="80" pos:column="30"/></literal></expr> )<pos:position pos:line="80" pos:column="32"/></condition><then><block pos:line="80" pos:column="32">{
          <expr_stmt><expr><call><name pos:line="81" pos:column="11">unixUnmapfile<pos:position pos:line="81" pos:column="24"/></name><argument_list pos:line="81" pos:column="24">(<argument><expr><name pos:line="81" pos:column="25">pFile<pos:position pos:line="81" pos:column="30"/></name></expr></argument>)<pos:position pos:line="81" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="32"/></expr_stmt>
          <expr_stmt><expr><name pos:line="82" pos:column="11">rc<pos:position pos:line="82" pos:column="13"/></name> <operator pos:line="82" pos:column="14">=<pos:position pos:line="82" pos:column="15"/></operator> <call><name pos:line="82" pos:column="16">unixMapfile<pos:position pos:line="82" pos:column="27"/></name><argument_list pos:line="82" pos:column="27">(<argument><expr><name pos:line="82" pos:column="28">pFile<pos:position pos:line="82" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="35">-<pos:position pos:line="82" pos:column="36"/></operator><literal type="number" pos:line="82" pos:column="36">1<pos:position pos:line="82" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>
      }<pos:position pos:line="84" pos:column="8"/></block></then></if>
      <return pos:line="85" pos:column="7">return <expr><name pos:line="85" pos:column="14">rc<pos:position pos:line="85" pos:column="16"/></name></expr>;<pos:position pos:line="85" pos:column="17"/></return>
    }<pos:position pos:line="86" pos:column="6"/></block>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">ifdef<pos:position pos:line="88" pos:column="7"/></cpp:directive> <name pos:line="88" pos:column="8">SQLITE_DEBUG<pos:position pos:line="88" pos:column="20"/></name></cpp:ifdef>
    <comment type="block" pos:line="89" pos:column="5">/* The pager calls this method to signal that it has done
    ** a rollback and that the database is therefore unchanged and
    ** it hence it is OK for the transaction change counter to be
    ** unchanged.
    */</comment>
    <case pos:line="94" pos:column="5">case <expr><name pos:line="94" pos:column="10">SQLITE_FCNTL_DB_UNCHANGED<pos:position pos:line="94" pos:column="35"/></name></expr>:<pos:position pos:line="94" pos:column="36"/></case> <block pos:line="94" pos:column="37">{
      <expr_stmt><expr><operator pos:line="95" pos:column="7">(<pos:position pos:line="95" pos:column="8"/></operator><operator pos:line="95" pos:column="8">(<pos:position pos:line="95" pos:column="9"/></operator><name pos:line="95" pos:column="9">unixFile<pos:position pos:line="95" pos:column="17"/></name><operator pos:line="95" pos:column="17">*<pos:position pos:line="95" pos:column="18"/></operator><operator pos:line="95" pos:column="18">)<pos:position pos:line="95" pos:column="19"/></operator><name pos:line="95" pos:column="19">id<pos:position pos:line="95" pos:column="21"/></name><operator pos:line="95" pos:column="21">)<pos:position pos:line="95" pos:column="22"/></operator><operator pos:line="95" pos:column="22">-&gt;<pos:position pos:line="95" pos:column="27"/></operator><name pos:line="95" pos:column="24">dbUpdate<pos:position pos:line="95" pos:column="32"/></name> <operator pos:line="95" pos:column="33">=<pos:position pos:line="95" pos:column="34"/></operator> <literal type="number" pos:line="95" pos:column="35">0<pos:position pos:line="95" pos:column="36"/></literal></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>
      <return pos:line="96" pos:column="7">return <expr><name pos:line="96" pos:column="14">SQLITE_OK<pos:position pos:line="96" pos:column="23"/></name></expr>;<pos:position pos:line="96" pos:column="24"/></return>
    }<pos:position pos:line="97" pos:column="6"/></block>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif<pos:position pos:line="98" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">if<pos:position pos:line="99" pos:column="4"/></cpp:directive> <expr><name pos:line="99" pos:column="5">SQLITE_ENABLE_LOCKING_STYLE<pos:position pos:line="99" pos:column="32"/></name> <operator pos:line="99" pos:column="33">&amp;&amp;<pos:position pos:line="99" pos:column="43"/></operator> <call><name pos:line="99" pos:column="36">defined<pos:position pos:line="99" pos:column="43"/></name><argument_list pos:line="99" pos:column="43">(<argument><expr><name pos:line="99" pos:column="44">__APPLE__<pos:position pos:line="99" pos:column="53"/></name></expr></argument>)<pos:position pos:line="99" pos:column="54"/></argument_list></call></expr></cpp:if>
    <case pos:line="100" pos:column="5">case <expr><name pos:line="100" pos:column="10">SQLITE_FCNTL_SET_LOCKPROXYFILE<pos:position pos:line="100" pos:column="40"/></name></expr>:<pos:position pos:line="100" pos:column="41"/></case>
    <case pos:line="101" pos:column="5">case <expr><name pos:line="101" pos:column="10">SQLITE_FCNTL_GET_LOCKPROXYFILE<pos:position pos:line="101" pos:column="40"/></name></expr>:<pos:position pos:line="101" pos:column="41"/></case> <block pos:line="101" pos:column="42">{
      <return pos:line="102" pos:column="7">return <expr><call><name pos:line="102" pos:column="14">proxyFileControl<pos:position pos:line="102" pos:column="30"/></name><argument_list pos:line="102" pos:column="30">(<argument><expr><name pos:line="102" pos:column="31">id<pos:position pos:line="102" pos:column="33"/></name></expr></argument>,<argument><expr><name pos:line="102" pos:column="34">op<pos:position pos:line="102" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="102" pos:column="37">pArg<pos:position pos:line="102" pos:column="41"/></name></expr></argument>)<pos:position pos:line="102" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="43"/></return>
    }<pos:position pos:line="103" pos:column="6"/></block>
<cpp:endif pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">endif<pos:position pos:line="104" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="104" pos:column="8">/* SQLITE_ENABLE_LOCKING_STYLE &amp;&amp; defined(__APPLE__) */</comment>
  }<pos:position pos:line="105" pos:column="4"/></block></switch>
  <return pos:line="106" pos:column="3">return <expr><name pos:line="106" pos:column="10">SQLITE_NOTFOUND<pos:position pos:line="106" pos:column="25"/></name></expr>;<pos:position pos:line="106" pos:column="26"/></return>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_389.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">robust_open<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">z<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">f<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">mode_t<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">m<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list><block pos:line="1" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">fd<pos:position pos:line="2" pos:column="9"/></name></decl>;<pos:position pos:line="2" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">mode_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">m2<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><ternary><condition><expr><name pos:line="3" pos:column="15">m<pos:position pos:line="3" pos:column="16"/></name></expr> ?<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18"> <expr><name pos:line="3" pos:column="19">m<pos:position pos:line="3" pos:column="20"/></name></expr> <pos:position pos:line="3" pos:column="21"/></then><else pos:line="3" pos:column="21">: <expr><name pos:line="3" pos:column="23">SQLITE_DEFAULT_FILE_PERMISSIONS<pos:position pos:line="3" pos:column="54"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>
  <while pos:line="4" pos:column="3">while<condition pos:line="4" pos:column="8">(<expr><literal type="number" pos:line="4" pos:column="9">1<pos:position pos:line="4" pos:column="10"/></literal></expr>)<pos:position pos:line="4" pos:column="11"/></condition><block pos:line="4" pos:column="11">{
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><call><name pos:line="5" pos:column="5">defined<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">O_CLOEXEC<pos:position pos:line="5" pos:column="22"/></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><name pos:line="6" pos:column="5">fd<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <call><name pos:line="6" pos:column="10">osOpen<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">z<pos:position pos:line="6" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="6" pos:column="19">f<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">|<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">O_CLOEXEC<pos:position pos:line="6" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="6" pos:column="31">m2<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
<cpp:else pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">else<pos:position pos:line="7" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="8" pos:column="5">fd<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">osOpen<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">z<pos:position pos:line="8" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="19">f<pos:position pos:line="8" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="21">m2<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">( <expr><name pos:line="10" pos:column="9">fd<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">&lt;<pos:position pos:line="10" pos:column="15"/></operator><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr> )<pos:position pos:line="10" pos:column="15"/></condition><then><block pos:line="10" pos:column="15">{
      <if pos:line="11" pos:column="7">if<condition pos:line="11" pos:column="9">( <expr><name pos:line="11" pos:column="11">errno<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">==<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">EINTR<pos:position pos:line="11" pos:column="23"/></name></expr> )<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block type="pseudo"><continue pos:line="11" pos:column="26">continue;<pos:position pos:line="11" pos:column="35"/></continue></block></then></if>
      <break pos:line="12" pos:column="7">break;<pos:position pos:line="12" pos:column="13"/></break>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">( <expr><name pos:line="14" pos:column="9">fd<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">&gt;=<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">SQLITE_MINIMUM_FILE_DESCRIPTOR<pos:position pos:line="14" pos:column="43"/></name></expr> )<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45"> <block type="pseudo"><break pos:line="14" pos:column="46">break;<pos:position pos:line="14" pos:column="52"/></break></block></then></if>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">osClose<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">fd<pos:position pos:line="15" pos:column="15"/></name></expr></argument>)<pos:position pos:line="15" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">sqlite3_log<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">SQLITE_WARNING<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, 
                <argument><expr><literal type="string" pos:line="17" pos:column="17">"attempt to open \"%s\" as file descriptor %d"<pos:position pos:line="17" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="65">z<pos:position pos:line="17" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="68">fd<pos:position pos:line="17" pos:column="70"/></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">fd<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <operator pos:line="18" pos:column="10">-<pos:position pos:line="18" pos:column="11"/></operator><literal type="number" pos:line="18" pos:column="11">1<pos:position pos:line="18" pos:column="12"/></literal></expr>;<pos:position pos:line="18" pos:column="13"/></expr_stmt>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">( <expr><call><name pos:line="19" pos:column="9">osOpen<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="string" pos:line="19" pos:column="16">"/dev/null"<pos:position pos:line="19" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="29">f<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">m<pos:position pos:line="19" pos:column="33"/></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call><operator pos:line="19" pos:column="34">&lt;<pos:position pos:line="19" pos:column="38"/></operator><literal type="number" pos:line="19" pos:column="35">0<pos:position pos:line="19" pos:column="36"/></literal></expr> )<pos:position pos:line="19" pos:column="38"/></condition><then pos:line="19" pos:column="38"> <block type="pseudo"><break pos:line="19" pos:column="39">break;<pos:position pos:line="19" pos:column="45"/></break></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></while>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">( <expr><name pos:line="21" pos:column="7">fd<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">&gt;=<pos:position pos:line="21" pos:column="14"/></operator><literal type="number" pos:line="21" pos:column="11">0<pos:position pos:line="21" pos:column="12"/></literal></expr> )<pos:position pos:line="21" pos:column="14"/></condition><then><block pos:line="21" pos:column="14">{
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">( <expr><name pos:line="22" pos:column="9">m<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">!=<pos:position pos:line="22" pos:column="12"/></operator><literal type="number" pos:line="22" pos:column="12">0<pos:position pos:line="22" pos:column="13"/></literal></expr> )<pos:position pos:line="22" pos:column="15"/></condition><then><block pos:line="22" pos:column="15">{
      <decl_stmt><decl><type><name><name pos:line="23" pos:column="7">struct<pos:position pos:line="23" pos:column="13"/></name> <name pos:line="23" pos:column="14">stat<pos:position pos:line="23" pos:column="18"/></name></name></type> <name pos:line="23" pos:column="19">statbuf<pos:position pos:line="23" pos:column="26"/></name></decl>;<pos:position pos:line="23" pos:column="27"/></decl_stmt>
      <if pos:line="24" pos:column="7">if<condition pos:line="24" pos:column="9">( <expr><call><name pos:line="24" pos:column="11">osFstat<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">fd<pos:position pos:line="24" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="23">&amp;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="24">statbuf<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call><operator pos:line="24" pos:column="32">==<pos:position pos:line="24" pos:column="34"/></operator><literal type="number" pos:line="24" pos:column="34">0<pos:position pos:line="24" pos:column="35"/></literal> 
       <operator pos:line="25" pos:column="8">&amp;&amp;<pos:position pos:line="25" pos:column="18"/></operator> <name><name pos:line="25" pos:column="11">statbuf<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">st_size<pos:position pos:line="25" pos:column="26"/></name></name><operator pos:line="25" pos:column="26">==<pos:position pos:line="25" pos:column="28"/></operator><literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal>
       <operator pos:line="26" pos:column="8">&amp;&amp;<pos:position pos:line="26" pos:column="18"/></operator> <operator pos:line="26" pos:column="11">(<pos:position pos:line="26" pos:column="12"/></operator><name><name pos:line="26" pos:column="12">statbuf<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">.<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">st_mode<pos:position pos:line="26" pos:column="27"/></name></name><operator pos:line="26" pos:column="27">&amp;<pos:position pos:line="26" pos:column="32"/></operator><literal type="number" pos:line="26" pos:column="28">0777<pos:position pos:line="26" pos:column="32"/></literal><operator pos:line="26" pos:column="32">)<pos:position pos:line="26" pos:column="33"/></operator><operator pos:line="26" pos:column="33">!=<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">m<pos:position pos:line="26" pos:column="36"/></name></expr> 
      )<pos:position pos:line="27" pos:column="8"/></condition><then><block pos:line="27" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">osFchmod<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">fd<pos:position pos:line="28" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="22">m<pos:position pos:line="28" pos:column="23"/></name></expr></argument>)<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><call><name pos:line="31" pos:column="5">defined<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">FD_CLOEXEC<pos:position pos:line="31" pos:column="23"/></name></expr></argument>)<pos:position pos:line="31" pos:column="24"/></argument_list></call> <operator pos:line="31" pos:column="25">&amp;&amp;<pos:position pos:line="31" pos:column="35"/></operator> <operator pos:line="31" pos:column="28">(<pos:position pos:line="31" pos:column="29"/></operator><operator pos:line="31" pos:column="29">!<pos:position pos:line="31" pos:column="30"/></operator><call><name pos:line="31" pos:column="30">defined<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">O_CLOEXEC<pos:position pos:line="31" pos:column="47"/></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call> <operator pos:line="31" pos:column="49">||<pos:position pos:line="31" pos:column="51"/></operator> <name pos:line="31" pos:column="52">O_CLOEXEC<pos:position pos:line="31" pos:column="61"/></name><operator pos:line="31" pos:column="61">==<pos:position pos:line="31" pos:column="63"/></operator><literal type="number" pos:line="31" pos:column="63">0<pos:position pos:line="31" pos:column="64"/></literal><operator pos:line="31" pos:column="64">)<pos:position pos:line="31" pos:column="65"/></operator></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">osFcntl<pos:position pos:line="32" pos:column="12"/></name><argument_list pos:line="32" pos:column="12">(<argument><expr><name pos:line="32" pos:column="13">fd<pos:position pos:line="32" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="17">F_SETFD<pos:position pos:line="32" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="26">osFcntl<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">fd<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">F_GETFD<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="47">0<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call> <operator pos:line="32" pos:column="50">|<pos:position pos:line="32" pos:column="51"/></operator> <name pos:line="32" pos:column="52">FD_CLOEXEC<pos:position pos:line="32" pos:column="62"/></name></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>
  <return pos:line="35" pos:column="3">return <expr><name pos:line="35" pos:column="10">fd<pos:position pos:line="35" pos:column="12"/></name></expr>;<pos:position pos:line="35" pos:column="13"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

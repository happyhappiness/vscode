<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_310.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rtreeInit<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(
  <parameter><decl><type><name pos:line="2" pos:column="3">sqlite3<pos:position pos:line="2" pos:column="10"/></name> <modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier></type><name pos:line="2" pos:column="12">db<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>,                        <comment type="block" pos:line="2" pos:column="39">/* Database connection */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">void<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">pAux<pos:position pos:line="3" pos:column="13"/></name></decl></parameter>,                         <comment type="block" pos:line="3" pos:column="39">/* One of the RTREE_COORD_* constants */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">argc<pos:position pos:line="4" pos:column="11"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="13">const<pos:position pos:line="4" pos:column="18"/></specifier> <name pos:line="4" pos:column="19">char<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier><specifier pos:line="4" pos:column="25">const<pos:position pos:line="4" pos:column="30"/></specifier><modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">argv<pos:position pos:line="4" pos:column="35"/></name></decl></parameter>,   <comment type="block" pos:line="4" pos:column="39">/* Parameters to CREATE TABLE statement */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">sqlite3_vtab<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier><modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">ppVtab<pos:position pos:line="5" pos:column="24"/></name></decl></parameter>,              <comment type="block" pos:line="5" pos:column="39">/* OUT: New virtual table */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier><modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">pzErr<pos:position pos:line="6" pos:column="15"/></name></decl></parameter>,                       <comment type="block" pos:line="6" pos:column="39">/* OUT: Error message, if any */</comment>
  <parameter><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">isCreate<pos:position pos:line="7" pos:column="15"/></name></decl></parameter>                        <comment type="block" pos:line="7" pos:column="39">/* True for xCreate, false for xConnect */</comment>
)<pos:position pos:line="8" pos:column="2"/></parameter_list><block pos:line="8" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">rc<pos:position pos:line="9" pos:column="9"/></name> <init pos:line="9" pos:column="10">= <expr><name pos:line="9" pos:column="12">SQLITE_OK<pos:position pos:line="9" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">Rtree<pos:position pos:line="10" pos:column="8"/></name> <modifier pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></modifier></type><name pos:line="10" pos:column="10">pRtree<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">nDb<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>              <comment type="block" pos:line="11" pos:column="25">/* Length of string argv[1] */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">nName<pos:position pos:line="12" pos:column="12"/></name></decl>;<pos:position pos:line="12" pos:column="13"/></decl_stmt>            <comment type="block" pos:line="12" pos:column="25">/* Length of string argv[2] */</comment>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">eCoordType<pos:position pos:line="13" pos:column="17"/></name> <init pos:line="13" pos:column="18">= <expr><operator pos:line="13" pos:column="20">(<pos:position pos:line="13" pos:column="21"/></operator><ternary><condition><expr><name pos:line="13" pos:column="21">pAux<pos:position pos:line="13" pos:column="25"/></name></expr> ?<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <expr><name pos:line="13" pos:column="28">RTREE_COORD_INT32<pos:position pos:line="13" pos:column="45"/></name></expr> <pos:position pos:line="13" pos:column="46"/></then><else pos:line="13" pos:column="46">: <expr><name pos:line="13" pos:column="48">RTREE_COORD_REAL32<pos:position pos:line="13" pos:column="66"/></name></expr></else></ternary><operator pos:line="13" pos:column="66">)<pos:position pos:line="13" pos:column="67"/></operator></expr></init></decl>;<pos:position pos:line="13" pos:column="68"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name><name pos:line="15" pos:column="15">aErrMsg<pos:position pos:line="15" pos:column="22"/></name><index pos:line="15" pos:column="22">[]<pos:position pos:line="15" pos:column="24"/></index></name> <init pos:line="15" pos:column="25">= <expr><block pos:line="15" pos:column="27">{
    <expr><literal type="number" pos:line="16" pos:column="5">0<pos:position pos:line="16" pos:column="6"/></literal></expr>,                                                    <comment type="block" pos:line="16" pos:column="59">/* 0 */</comment>
    <expr><literal type="string" pos:line="17" pos:column="5">"Wrong number of columns for an rtree table"<pos:position pos:line="17" pos:column="49"/></literal></expr>,         <comment type="block" pos:line="17" pos:column="59">/* 1 */</comment>
    <expr><literal type="string" pos:line="18" pos:column="5">"Too few columns for an rtree table"<pos:position pos:line="18" pos:column="41"/></literal></expr>,                 <comment type="block" pos:line="18" pos:column="59">/* 2 */</comment>
    <expr><literal type="string" pos:line="19" pos:column="5">"Too many columns for an rtree table"<pos:position pos:line="19" pos:column="42"/></literal></expr>                 <comment type="block" pos:line="19" pos:column="59">/* 3 */</comment>
  }<pos:position pos:line="20" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="20" pos:column="5"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="22" pos:column="3">int<pos:position pos:line="22" pos:column="6"/></name></type> <name pos:line="22" pos:column="7">iErr<pos:position pos:line="22" pos:column="11"/></name> <init pos:line="22" pos:column="12">= <expr><ternary><condition><expr><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">argc<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">&lt;<pos:position pos:line="22" pos:column="23"/></operator><literal type="number" pos:line="22" pos:column="20">6<pos:position pos:line="22" pos:column="21"/></literal><operator pos:line="22" pos:column="21">)<pos:position pos:line="22" pos:column="22"/></operator></expr> ?<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24"> <expr><literal type="number" pos:line="22" pos:column="25">2<pos:position pos:line="22" pos:column="26"/></literal></expr> <pos:position pos:line="22" pos:column="27"/></then><else pos:line="22" pos:column="27">: <expr><ternary><condition><expr><name pos:line="22" pos:column="29">argc<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">&gt;<pos:position pos:line="22" pos:column="37"/></operator><operator pos:line="22" pos:column="34">(<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">RTREE_MAX_DIMENSIONS<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">*<pos:position pos:line="22" pos:column="56"/></operator><literal type="number" pos:line="22" pos:column="56">2<pos:position pos:line="22" pos:column="57"/></literal><operator pos:line="22" pos:column="57">+<pos:position pos:line="22" pos:column="58"/></operator><literal type="number" pos:line="22" pos:column="58">4<pos:position pos:line="22" pos:column="59"/></literal><operator pos:line="22" pos:column="59">)<pos:position pos:line="22" pos:column="60"/></operator></expr> ?<pos:position pos:line="22" pos:column="62"/></condition><then pos:line="22" pos:column="62"> <expr><literal type="number" pos:line="22" pos:column="63">3<pos:position pos:line="22" pos:column="64"/></literal></expr> <pos:position pos:line="22" pos:column="65"/></then><else pos:line="22" pos:column="65">: <expr><name pos:line="22" pos:column="67">argc<pos:position pos:line="22" pos:column="71"/></name><operator pos:line="22" pos:column="71">%<pos:position pos:line="22" pos:column="72"/></operator><literal type="number" pos:line="22" pos:column="72">2<pos:position pos:line="22" pos:column="73"/></literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;<pos:position pos:line="22" pos:column="74"/></decl_stmt>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">( <expr><name><name pos:line="23" pos:column="7">aErrMsg<pos:position pos:line="23" pos:column="14"/></name><index pos:line="23" pos:column="14">[<expr><name pos:line="23" pos:column="15">iErr<pos:position pos:line="23" pos:column="19"/></name></expr>]<pos:position pos:line="23" pos:column="20"/></index></name></expr> )<pos:position pos:line="23" pos:column="22"/></condition><then><block pos:line="23" pos:column="22">{
    <expr_stmt><expr><operator pos:line="24" pos:column="5">*<pos:position pos:line="24" pos:column="6"/></operator><name pos:line="24" pos:column="6">pzErr<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">sqlite3_mprintf<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><literal type="string" pos:line="24" pos:column="30">"%s"<pos:position pos:line="24" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="36">aErrMsg<pos:position pos:line="24" pos:column="43"/></name><index pos:line="24" pos:column="43">[<expr><name pos:line="24" pos:column="44">iErr<pos:position pos:line="24" pos:column="48"/></name></expr>]<pos:position pos:line="24" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">SQLITE_ERROR<pos:position pos:line="25" pos:column="24"/></name></expr>;<pos:position pos:line="25" pos:column="25"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">sqlite3_vtab_config<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">db<pos:position pos:line="28" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="27">SQLITE_VTAB_CONSTRAINT_SUPPORT<pos:position pos:line="28" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="59">1<pos:position pos:line="28" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>

  <comment type="block" pos:line="30" pos:column="3">/* Allocate the sqlite3_vtab structure */</comment>
  <expr_stmt><expr><name pos:line="31" pos:column="3">nDb<pos:position pos:line="31" pos:column="6"/></name> <operator pos:line="31" pos:column="7">=<pos:position pos:line="31" pos:column="8"/></operator> <operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">int<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">)<pos:position pos:line="31" pos:column="14"/></operator><call><name pos:line="31" pos:column="14">strlen<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name><name pos:line="31" pos:column="21">argv<pos:position pos:line="31" pos:column="25"/></name><index pos:line="31" pos:column="25">[<expr><literal type="number" pos:line="31" pos:column="26">1<pos:position pos:line="31" pos:column="27"/></literal></expr>]<pos:position pos:line="31" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">nName<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <operator pos:line="32" pos:column="11">(<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">int<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">)<pos:position pos:line="32" pos:column="16"/></operator><call><name pos:line="32" pos:column="16">strlen<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name><name pos:line="32" pos:column="23">argv<pos:position pos:line="32" pos:column="27"/></name><index pos:line="32" pos:column="27">[<expr><literal type="number" pos:line="32" pos:column="28">2<pos:position pos:line="32" pos:column="29"/></literal></expr>]<pos:position pos:line="32" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name pos:line="33" pos:column="3">pRtree<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">Rtree<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">*<pos:position pos:line="33" pos:column="20"/></operator><operator pos:line="33" pos:column="20">)<pos:position pos:line="33" pos:column="21"/></operator><call><name pos:line="33" pos:column="21">sqlite3_malloc<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><sizeof pos:line="33" pos:column="36">sizeof<argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">Rtree<pos:position pos:line="33" pos:column="48"/></name></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></sizeof><operator pos:line="33" pos:column="49">+<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="50">nDb<pos:position pos:line="33" pos:column="53"/></name><operator pos:line="33" pos:column="53">+<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="54">nName<pos:position pos:line="33" pos:column="59"/></name><operator pos:line="33" pos:column="59">+<pos:position pos:line="33" pos:column="60"/></operator><literal type="number" pos:line="33" pos:column="60">2<pos:position pos:line="33" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="63"/></expr_stmt>
  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">( <expr><operator pos:line="34" pos:column="7">!<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">pRtree<pos:position pos:line="34" pos:column="14"/></name></expr> )<pos:position pos:line="34" pos:column="16"/></condition><then><block pos:line="34" pos:column="16">{
    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">SQLITE_NOMEM<pos:position pos:line="35" pos:column="24"/></name></expr>;<pos:position pos:line="35" pos:column="25"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">memset<pos:position pos:line="37" pos:column="9"/></name><argument_list pos:line="37" pos:column="9">(<argument><expr><name pos:line="37" pos:column="10">pRtree<pos:position pos:line="37" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="18">0<pos:position pos:line="37" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="21">sizeof<argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">Rtree<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></sizeof><operator pos:line="37" pos:column="34">+<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="35">nDb<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">+<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="39">nName<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">+<pos:position pos:line="37" pos:column="45"/></operator><literal type="number" pos:line="37" pos:column="45">2<pos:position pos:line="37" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="38" pos:column="3">pRtree<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">nBusy<pos:position pos:line="38" pos:column="16"/></name></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <literal type="number" pos:line="38" pos:column="19">1<pos:position pos:line="38" pos:column="20"/></literal></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">pRtree<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">-&gt;<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="11">base<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">.<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="16">pModule<pos:position pos:line="39" pos:column="23"/></name></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <operator pos:line="39" pos:column="26">&amp;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="27">rtreeModule<pos:position pos:line="39" pos:column="38"/></name></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="40" pos:column="3">pRtree<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">zDb<pos:position pos:line="40" pos:column="14"/></name></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <operator pos:line="40" pos:column="17">(<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">char<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">*<pos:position pos:line="40" pos:column="24"/></operator><operator pos:line="40" pos:column="24">)<pos:position pos:line="40" pos:column="25"/></operator><operator pos:line="40" pos:column="25">&amp;<pos:position pos:line="40" pos:column="30"/></operator><name><name pos:line="40" pos:column="26">pRtree<pos:position pos:line="40" pos:column="32"/></name><index pos:line="40" pos:column="32">[<expr><literal type="number" pos:line="40" pos:column="33">1<pos:position pos:line="40" pos:column="34"/></literal></expr>]<pos:position pos:line="40" pos:column="35"/></index></name></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="41" pos:column="3">pRtree<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">zName<pos:position pos:line="41" pos:column="16"/></name></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <operator pos:line="41" pos:column="19">&amp;<pos:position pos:line="41" pos:column="24"/></operator><name><name pos:line="41" pos:column="20">pRtree<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">-&gt;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="28">zDb<pos:position pos:line="41" pos:column="31"/></name><index pos:line="41" pos:column="31">[<expr><name pos:line="41" pos:column="32">nDb<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">+<pos:position pos:line="41" pos:column="36"/></operator><literal type="number" pos:line="41" pos:column="36">1<pos:position pos:line="41" pos:column="37"/></literal></expr>]<pos:position pos:line="41" pos:column="38"/></index></name></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="42" pos:column="3">pRtree<pos:position pos:line="42" pos:column="9"/></name><operator pos:line="42" pos:column="9">-&gt;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="11">nDim<pos:position pos:line="42" pos:column="15"/></name></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <call pos:line="42" pos:column="18">(<name pos:line="42" pos:column="19">u8<pos:position pos:line="42" pos:column="21"/></name>)<argument_list pos:line="42" pos:column="22">(<argument><expr><operator pos:line="42" pos:column="23">(<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">argc<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-<pos:position pos:line="42" pos:column="29"/></operator><literal type="number" pos:line="42" pos:column="29">4<pos:position pos:line="42" pos:column="30"/></literal><operator pos:line="42" pos:column="30">)<pos:position pos:line="42" pos:column="31"/></operator><operator pos:line="42" pos:column="31">/<pos:position pos:line="42" pos:column="32"/></operator><literal type="number" pos:line="42" pos:column="32">2<pos:position pos:line="42" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">pRtree<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">nDim2<pos:position pos:line="43" pos:column="16"/></name></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <name><name pos:line="43" pos:column="19">pRtree<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">-&gt;<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="27">nDim<pos:position pos:line="43" pos:column="31"/></name></name><operator pos:line="43" pos:column="31">*<pos:position pos:line="43" pos:column="32"/></operator><literal type="number" pos:line="43" pos:column="32">2<pos:position pos:line="43" pos:column="33"/></literal></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">pRtree<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">nBytesPerCell<pos:position pos:line="44" pos:column="24"/></name></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <literal type="number" pos:line="44" pos:column="27">8<pos:position pos:line="44" pos:column="28"/></literal> <operator pos:line="44" pos:column="29">+<pos:position pos:line="44" pos:column="30"/></operator> <name><name pos:line="44" pos:column="31">pRtree<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">-&gt;<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="39">nDim2<pos:position pos:line="44" pos:column="44"/></name></name><operator pos:line="44" pos:column="44">*<pos:position pos:line="44" pos:column="45"/></operator><literal type="number" pos:line="44" pos:column="45">4<pos:position pos:line="44" pos:column="46"/></literal></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">pRtree<pos:position pos:line="45" pos:column="9"/></name><operator pos:line="45" pos:column="9">-&gt;<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="11">eCoordType<pos:position pos:line="45" pos:column="21"/></name></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <operator pos:line="45" pos:column="24">(<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="25">u8<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">)<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="28">eCoordType<pos:position pos:line="45" pos:column="38"/></name></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">memcpy<pos:position pos:line="46" pos:column="9"/></name><argument_list pos:line="46" pos:column="9">(<argument><expr><name><name pos:line="46" pos:column="10">pRtree<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">zDb<pos:position pos:line="46" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="23">argv<pos:position pos:line="46" pos:column="27"/></name><index pos:line="46" pos:column="27">[<expr><literal type="number" pos:line="46" pos:column="28">1<pos:position pos:line="46" pos:column="29"/></literal></expr>]<pos:position pos:line="46" pos:column="30"/></index></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="32">nDb<pos:position pos:line="46" pos:column="35"/></name></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">memcpy<pos:position pos:line="47" pos:column="9"/></name><argument_list pos:line="47" pos:column="9">(<argument><expr><name><name pos:line="47" pos:column="10">pRtree<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">zName<pos:position pos:line="47" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="25">argv<pos:position pos:line="47" pos:column="29"/></name><index pos:line="47" pos:column="29">[<expr><literal type="number" pos:line="47" pos:column="30">2<pos:position pos:line="47" pos:column="31"/></literal></expr>]<pos:position pos:line="47" pos:column="32"/></index></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">nName<pos:position pos:line="47" pos:column="39"/></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="49" pos:column="3">/* Figure out the node size to use. */</comment>
  <expr_stmt><expr><name pos:line="50" pos:column="3">rc<pos:position pos:line="50" pos:column="5"/></name> <operator pos:line="50" pos:column="6">=<pos:position pos:line="50" pos:column="7"/></operator> <call><name pos:line="50" pos:column="8">getNodeSize<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">db<pos:position pos:line="50" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="24">pRtree<pos:position pos:line="50" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="32">isCreate<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="42">pzErr<pos:position pos:line="50" pos:column="47"/></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="52" pos:column="3">/* Create/Connect to the underlying relational database schema. If
  ** that is successful, call sqlite3_declare_vtab() to configure
  ** the r-tree table schema.
  */</comment>
  <if pos:line="56" pos:column="3">if<condition pos:line="56" pos:column="5">( <expr><name pos:line="56" pos:column="7">rc<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">==<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="11">SQLITE_OK<pos:position pos:line="56" pos:column="20"/></name></expr> )<pos:position pos:line="56" pos:column="22"/></condition><then><block pos:line="56" pos:column="22">{
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">( <expr><operator pos:line="57" pos:column="9">(<pos:position pos:line="57" pos:column="10"/></operator><name pos:line="57" pos:column="10">rc<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <call><name pos:line="57" pos:column="15">rtreeSqlInit<pos:position pos:line="57" pos:column="27"/></name><argument_list pos:line="57" pos:column="27">(<argument><expr><name pos:line="57" pos:column="28">pRtree<pos:position pos:line="57" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="36">db<pos:position pos:line="57" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="40">argv<pos:position pos:line="57" pos:column="44"/></name><index pos:line="57" pos:column="44">[<expr><literal type="number" pos:line="57" pos:column="45">1<pos:position pos:line="57" pos:column="46"/></literal></expr>]<pos:position pos:line="57" pos:column="47"/></index></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="49">argv<pos:position pos:line="57" pos:column="53"/></name><index pos:line="57" pos:column="53">[<expr><literal type="number" pos:line="57" pos:column="54">2<pos:position pos:line="57" pos:column="55"/></literal></expr>]<pos:position pos:line="57" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="58">isCreate<pos:position pos:line="57" pos:column="66"/></name></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></call><operator pos:line="57" pos:column="67">)<pos:position pos:line="57" pos:column="68"/></operator></expr> )<pos:position pos:line="57" pos:column="70"/></condition><then><block pos:line="57" pos:column="70">{
      <expr_stmt><expr><operator pos:line="58" pos:column="7">*<pos:position pos:line="58" pos:column="8"/></operator><name pos:line="58" pos:column="8">pzErr<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <call><name pos:line="58" pos:column="16">sqlite3_mprintf<pos:position pos:line="58" pos:column="31"/></name><argument_list pos:line="58" pos:column="31">(<argument><expr><literal type="string" pos:line="58" pos:column="32">"%s"<pos:position pos:line="58" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="38">sqlite3_errmsg<pos:position pos:line="58" pos:column="52"/></name><argument_list pos:line="58" pos:column="52">(<argument><expr><name pos:line="58" pos:column="53">db<pos:position pos:line="58" pos:column="55"/></name></expr></argument>)<pos:position pos:line="58" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then><else pos:line="59" pos:column="6">else<block pos:line="59" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="60" pos:column="7">char<pos:position pos:line="60" pos:column="11"/></name> <modifier pos:line="60" pos:column="12">*<pos:position pos:line="60" pos:column="13"/></modifier></type><name pos:line="60" pos:column="13">zSql<pos:position pos:line="60" pos:column="17"/></name> <init pos:line="60" pos:column="18">= <expr><call><name pos:line="60" pos:column="20">sqlite3_mprintf<pos:position pos:line="60" pos:column="35"/></name><argument_list pos:line="60" pos:column="35">(<argument><expr><literal type="string" pos:line="60" pos:column="36">"CREATE TABLE x(%s"<pos:position pos:line="60" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="57">argv<pos:position pos:line="60" pos:column="61"/></name><index pos:line="60" pos:column="61">[<expr><literal type="number" pos:line="60" pos:column="62">3<pos:position pos:line="60" pos:column="63"/></literal></expr>]<pos:position pos:line="60" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="60" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="60" pos:column="66"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="61" pos:column="7">char<pos:position pos:line="61" pos:column="11"/></name> <modifier pos:line="61" pos:column="12">*<pos:position pos:line="61" pos:column="13"/></modifier></type><name pos:line="61" pos:column="13">zTmp<pos:position pos:line="61" pos:column="17"/></name></decl>;<pos:position pos:line="61" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="62" pos:column="7">int<pos:position pos:line="62" pos:column="10"/></name></type> <name pos:line="62" pos:column="11">ii<pos:position pos:line="62" pos:column="13"/></name></decl>;<pos:position pos:line="62" pos:column="14"/></decl_stmt>
      <for pos:line="63" pos:column="7">for<control pos:line="63" pos:column="10">(<init><expr><name pos:line="63" pos:column="11">ii<pos:position pos:line="63" pos:column="13"/></name><operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator><literal type="number" pos:line="63" pos:column="14">4<pos:position pos:line="63" pos:column="15"/></literal></expr>;<pos:position pos:line="63" pos:column="16"/></init> <condition><expr><name pos:line="63" pos:column="17">zSql<pos:position pos:line="63" pos:column="21"/></name> <operator pos:line="63" pos:column="22">&amp;&amp;<pos:position pos:line="63" pos:column="32"/></operator> <name pos:line="63" pos:column="25">ii<pos:position pos:line="63" pos:column="27"/></name><operator pos:line="63" pos:column="27">&lt;<pos:position pos:line="63" pos:column="31"/></operator><name pos:line="63" pos:column="28">argc<pos:position pos:line="63" pos:column="32"/></name></expr>;<pos:position pos:line="63" pos:column="33"/></condition> <incr><expr><name pos:line="63" pos:column="34">ii<pos:position pos:line="63" pos:column="36"/></name><operator pos:line="63" pos:column="36">++<pos:position pos:line="63" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="63" pos:column="39"/></control><block pos:line="63" pos:column="39">{
        <expr_stmt><expr><name pos:line="64" pos:column="9">zTmp<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <name pos:line="64" pos:column="16">zSql<pos:position pos:line="64" pos:column="20"/></name></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="65" pos:column="9">zSql<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <call><name pos:line="65" pos:column="16">sqlite3_mprintf<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><literal type="string" pos:line="65" pos:column="32">"%s, %s"<pos:position pos:line="65" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="42">zTmp<pos:position pos:line="65" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="48">argv<pos:position pos:line="65" pos:column="52"/></name><index pos:line="65" pos:column="52">[<expr><name pos:line="65" pos:column="53">ii<pos:position pos:line="65" pos:column="55"/></name></expr>]<pos:position pos:line="65" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="65" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">sqlite3_free<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><name pos:line="66" pos:column="22">zTmp<pos:position pos:line="66" pos:column="26"/></name></expr></argument>)<pos:position pos:line="66" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="67" pos:column="8"/></block></for>
      <if pos:line="68" pos:column="7">if<condition pos:line="68" pos:column="9">( <expr><name pos:line="68" pos:column="11">zSql<pos:position pos:line="68" pos:column="15"/></name></expr> )<pos:position pos:line="68" pos:column="17"/></condition><then><block pos:line="68" pos:column="17">{
        <expr_stmt><expr><name pos:line="69" pos:column="9">zTmp<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">=<pos:position pos:line="69" pos:column="15"/></operator> <name pos:line="69" pos:column="16">zSql<pos:position pos:line="69" pos:column="20"/></name></expr>;<pos:position pos:line="69" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="70" pos:column="9">zSql<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator> <call><name pos:line="70" pos:column="16">sqlite3_mprintf<pos:position pos:line="70" pos:column="31"/></name><argument_list pos:line="70" pos:column="31">(<argument><expr><literal type="string" pos:line="70" pos:column="32">"%s);"<pos:position pos:line="70" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="40">zTmp<pos:position pos:line="70" pos:column="44"/></name></expr></argument>)<pos:position pos:line="70" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">sqlite3_free<pos:position pos:line="71" pos:column="21"/></name><argument_list pos:line="71" pos:column="21">(<argument><expr><name pos:line="71" pos:column="22">zTmp<pos:position pos:line="71" pos:column="26"/></name></expr></argument>)<pos:position pos:line="71" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="72" pos:column="8"/></block></then></if>
      <if pos:line="73" pos:column="7">if<condition pos:line="73" pos:column="9">( <expr><operator pos:line="73" pos:column="11">!<pos:position pos:line="73" pos:column="12"/></operator><name pos:line="73" pos:column="12">zSql<pos:position pos:line="73" pos:column="16"/></name></expr> )<pos:position pos:line="73" pos:column="18"/></condition><then><block pos:line="73" pos:column="18">{
        <expr_stmt><expr><name pos:line="74" pos:column="9">rc<pos:position pos:line="74" pos:column="11"/></name> <operator pos:line="74" pos:column="12">=<pos:position pos:line="74" pos:column="13"/></operator> <name pos:line="74" pos:column="14">SQLITE_NOMEM<pos:position pos:line="74" pos:column="26"/></name></expr>;<pos:position pos:line="74" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="75" pos:column="8"/></block></then><elseif pos:line="75" pos:column="8">else <if pos:line="75" pos:column="13">if<condition pos:line="75" pos:column="15">( <expr><name pos:line="75" pos:column="17">SQLITE_OK<pos:position pos:line="75" pos:column="26"/></name><operator pos:line="75" pos:column="26">!=<pos:position pos:line="75" pos:column="28"/></operator><operator pos:line="75" pos:column="28">(<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="29">rc<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">=<pos:position pos:line="75" pos:column="33"/></operator> <call><name pos:line="75" pos:column="34">sqlite3_declare_vtab<pos:position pos:line="75" pos:column="54"/></name><argument_list pos:line="75" pos:column="54">(<argument><expr><name pos:line="75" pos:column="55">db<pos:position pos:line="75" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="59">zSql<pos:position pos:line="75" pos:column="63"/></name></expr></argument>)<pos:position pos:line="75" pos:column="64"/></argument_list></call><operator pos:line="75" pos:column="64">)<pos:position pos:line="75" pos:column="65"/></operator></expr> )<pos:position pos:line="75" pos:column="67"/></condition><then><block pos:line="75" pos:column="67">{
        <expr_stmt><expr><operator pos:line="76" pos:column="9">*<pos:position pos:line="76" pos:column="10"/></operator><name pos:line="76" pos:column="10">pzErr<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">=<pos:position pos:line="76" pos:column="17"/></operator> <call><name pos:line="76" pos:column="18">sqlite3_mprintf<pos:position pos:line="76" pos:column="33"/></name><argument_list pos:line="76" pos:column="33">(<argument><expr><literal type="string" pos:line="76" pos:column="34">"%s"<pos:position pos:line="76" pos:column="38"/></literal></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="40">sqlite3_errmsg<pos:position pos:line="76" pos:column="54"/></name><argument_list pos:line="76" pos:column="54">(<argument><expr><name pos:line="76" pos:column="55">db<pos:position pos:line="76" pos:column="57"/></name></expr></argument>)<pos:position pos:line="76" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="77" pos:column="8"/></block></then></if></elseif></if>
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">sqlite3_free<pos:position pos:line="78" pos:column="19"/></name><argument_list pos:line="78" pos:column="19">(<argument><expr><name pos:line="78" pos:column="20">zSql<pos:position pos:line="78" pos:column="24"/></name></expr></argument>)<pos:position pos:line="78" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></else></if>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>

  <if pos:line="82" pos:column="3">if<condition pos:line="82" pos:column="5">( <expr><name pos:line="82" pos:column="7">rc<pos:position pos:line="82" pos:column="9"/></name><operator pos:line="82" pos:column="9">==<pos:position pos:line="82" pos:column="11"/></operator><name pos:line="82" pos:column="11">SQLITE_OK<pos:position pos:line="82" pos:column="20"/></name></expr> )<pos:position pos:line="82" pos:column="22"/></condition><then><block pos:line="82" pos:column="22">{
    <expr_stmt><expr><operator pos:line="83" pos:column="5">*<pos:position pos:line="83" pos:column="6"/></operator><name pos:line="83" pos:column="6">ppVtab<pos:position pos:line="83" pos:column="12"/></name> <operator pos:line="83" pos:column="13">=<pos:position pos:line="83" pos:column="14"/></operator> <operator pos:line="83" pos:column="15">(<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="16">sqlite3_vtab<pos:position pos:line="83" pos:column="28"/></name> <operator pos:line="83" pos:column="29">*<pos:position pos:line="83" pos:column="30"/></operator><operator pos:line="83" pos:column="30">)<pos:position pos:line="83" pos:column="31"/></operator><name pos:line="83" pos:column="31">pRtree<pos:position pos:line="83" pos:column="37"/></name></expr>;<pos:position pos:line="83" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="84" pos:column="4"/></block></then><else pos:line="84" pos:column="4">else<block pos:line="84" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">assert<pos:position pos:line="85" pos:column="11"/></name><argument_list pos:line="85" pos:column="11">( <argument><expr><operator pos:line="85" pos:column="13">*<pos:position pos:line="85" pos:column="14"/></operator><name pos:line="85" pos:column="14">ppVtab<pos:position pos:line="85" pos:column="20"/></name><operator pos:line="85" pos:column="20">==<pos:position pos:line="85" pos:column="22"/></operator><literal type="number" pos:line="85" pos:column="22">0<pos:position pos:line="85" pos:column="23"/></literal></expr></argument> )<pos:position pos:line="85" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">assert<pos:position pos:line="86" pos:column="11"/></name><argument_list pos:line="86" pos:column="11">( <argument><expr><name><name pos:line="86" pos:column="13">pRtree<pos:position pos:line="86" pos:column="19"/></name><operator pos:line="86" pos:column="19">-&gt;<pos:position pos:line="86" pos:column="24"/></operator><name pos:line="86" pos:column="21">nBusy<pos:position pos:line="86" pos:column="26"/></name></name><operator pos:line="86" pos:column="26">==<pos:position pos:line="86" pos:column="28"/></operator><literal type="number" pos:line="86" pos:column="28">1<pos:position pos:line="86" pos:column="29"/></literal></expr></argument> )<pos:position pos:line="86" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">rtreeRelease<pos:position pos:line="87" pos:column="17"/></name><argument_list pos:line="87" pos:column="17">(<argument><expr><name pos:line="87" pos:column="18">pRtree<pos:position pos:line="87" pos:column="24"/></name></expr></argument>)<pos:position pos:line="87" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block></else></if>
  <return pos:line="89" pos:column="3">return <expr><name pos:line="89" pos:column="10">rc<pos:position pos:line="89" pos:column="12"/></name></expr>;<pos:position pos:line="89" pos:column="13"/></return>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

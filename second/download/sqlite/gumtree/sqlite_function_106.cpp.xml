<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_106.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sqlite3CodeSubselect<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Parse<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pParse<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>,          <comment type="block" pos:line="2" pos:column="27">/* Parsing context */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">Expr<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">pExpr<pos:position pos:line="3" pos:column="14"/></name></decl></parameter>,            <comment type="block" pos:line="3" pos:column="27">/* The IN, SELECT, or EXISTS operator */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">rHasNullFlag<pos:position pos:line="4" pos:column="19"/></name></decl></parameter>,       <comment type="block" pos:line="4" pos:column="27">/* Register that records whether NULLs exist in RHS */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">isRowid<pos:position pos:line="5" pos:column="14"/></name></decl></parameter>             <comment type="block" pos:line="5" pos:column="27">/* If true, LHS of IN operator is a rowid */</comment>
)<pos:position pos:line="6" pos:column="2"/></parameter_list><block pos:line="6" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">jmpIfDynamic<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><operator pos:line="7" pos:column="22">-<pos:position pos:line="7" pos:column="23"/></operator><literal type="number" pos:line="7" pos:column="23">1<pos:position pos:line="7" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>                      <comment type="block" pos:line="7" pos:column="47">/* One-time test address */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rReg<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>                           <comment type="block" pos:line="8" pos:column="43">/* Register storing resulting */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">Vdbe<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">v<pos:position pos:line="9" pos:column="10"/></name> <init pos:line="9" pos:column="11">= <expr><call><name pos:line="9" pos:column="13">sqlite3GetVdbe<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">pParse<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">( <expr><call><name pos:line="10" pos:column="7">NEVER<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">v<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">==<pos:position pos:line="10" pos:column="16"/></operator><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="18"/></argument_list></call></expr> )<pos:position pos:line="10" pos:column="20"/></condition><then pos:line="10" pos:column="20"> <block type="pseudo"><return pos:line="10" pos:column="21">return <expr><literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr>;<pos:position pos:line="10" pos:column="30"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">sqlite3ExprCachePush<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">pParse<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* The evaluation of the IN/EXISTS/SELECT must be repeated every time it
  ** is encountered if any of the following is true:
  **
  **    *  The right-hand side is a correlated subquery
  **    *  The right-hand side is an expression list containing variables
  **    *  We are inside a trigger
  **
  ** If all of the above are false, then we can run this code just once
  ** save the results, and reuse the same result on subsequent invocations.
  */</comment>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">( <expr><operator pos:line="23" pos:column="7">!<pos:position pos:line="23" pos:column="8"/></operator><call><name pos:line="23" pos:column="8">ExprHasProperty<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">pExpr<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="31">EP_VarSelect<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr> )<pos:position pos:line="23" pos:column="46"/></condition><then><block pos:line="23" pos:column="46">{
    <expr_stmt><expr><name pos:line="24" pos:column="5">jmpIfDynamic<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <call><name pos:line="24" pos:column="20">sqlite3VdbeAddOp0<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">v<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">OP_Once<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt> <expr_stmt><expr><call><name pos:line="24" pos:column="51">VdbeCoverage<pos:position pos:line="24" pos:column="63"/></name><argument_list pos:line="24" pos:column="63">(<argument><expr><name pos:line="24" pos:column="64">v<pos:position pos:line="24" pos:column="65"/></name></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

<cpp:ifndef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">ifndef<pos:position pos:line="27" pos:column="8"/></cpp:directive> <name pos:line="27" pos:column="9">SQLITE_OMIT_EXPLAIN<pos:position pos:line="27" pos:column="28"/></name></cpp:ifndef>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">( <expr><name><name pos:line="28" pos:column="7">pParse<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">explain<pos:position pos:line="28" pos:column="22"/></name></name><operator pos:line="28" pos:column="22">==<pos:position pos:line="28" pos:column="24"/></operator><literal type="number" pos:line="28" pos:column="24">2<pos:position pos:line="28" pos:column="25"/></literal></expr> )<pos:position pos:line="28" pos:column="27"/></condition><then><block pos:line="28" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">char<pos:position pos:line="29" pos:column="9"/></name> <modifier pos:line="29" pos:column="10">*<pos:position pos:line="29" pos:column="11"/></modifier></type><name pos:line="29" pos:column="11">zMsg<pos:position pos:line="29" pos:column="15"/></name> <init pos:line="29" pos:column="16">= <expr><call><name pos:line="29" pos:column="18">sqlite3MPrintf<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name><name pos:line="29" pos:column="33">pParse<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">db<pos:position pos:line="29" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="45">"EXECUTE %s%s SUBQUERY %d"<pos:position pos:line="29" pos:column="71"/></literal></expr></argument>,
        <argument><expr><ternary><condition><expr><name pos:line="30" pos:column="9">jmpIfDynamic<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">&gt;=<pos:position pos:line="30" pos:column="26"/></operator><literal type="number" pos:line="30" pos:column="23">0<pos:position pos:line="30" pos:column="24"/></literal></expr>?<pos:position pos:line="30" pos:column="25"/></condition><then><expr><literal type="string" pos:line="30" pos:column="25">""<pos:position pos:line="30" pos:column="27"/></literal></expr></then><else pos:line="30" pos:column="27">:<expr><literal type="string" pos:line="30" pos:column="28">"CORRELATED "<pos:position pos:line="30" pos:column="41"/></literal></expr></else></ternary></expr></argument>,
        <argument><expr><ternary><condition><expr><name><name pos:line="31" pos:column="9">pExpr<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">op<pos:position pos:line="31" pos:column="18"/></name></name><operator pos:line="31" pos:column="18">==<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">TK_IN<pos:position pos:line="31" pos:column="25"/></name></expr>?<pos:position pos:line="31" pos:column="26"/></condition><then><expr><literal type="string" pos:line="31" pos:column="26">"LIST"<pos:position pos:line="31" pos:column="32"/></literal></expr></then><else pos:line="31" pos:column="32">:<expr><literal type="string" pos:line="31" pos:column="33">"SCALAR"<pos:position pos:line="31" pos:column="41"/></literal></expr></else></ternary></expr></argument>,
        <argument><expr><name><name pos:line="32" pos:column="9">pParse<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">iNextSelectId<pos:position pos:line="32" pos:column="30"/></name></name></expr></argument>
    )<pos:position pos:line="33" pos:column="6"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="7"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">sqlite3VdbeAddOp4<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">v<pos:position pos:line="34" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="26">OP_Explain<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="38">pParse<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">-&gt;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="46">iSelectId<pos:position pos:line="34" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="57">0<pos:position pos:line="34" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="60">0<pos:position pos:line="34" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="63">zMsg<pos:position pos:line="34" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="69">P4_DYNAMIC<pos:position pos:line="34" pos:column="79"/></name></expr></argument>)<pos:position pos:line="34" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="81"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>

  <switch pos:line="38" pos:column="3">switch<condition pos:line="38" pos:column="9">( <expr><name><name pos:line="38" pos:column="11">pExpr<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">op<pos:position pos:line="38" pos:column="20"/></name></name></expr> )<pos:position pos:line="38" pos:column="22"/></condition><block pos:line="38" pos:column="22">{
    <case pos:line="39" pos:column="5">case <expr><name pos:line="39" pos:column="10">TK_IN<pos:position pos:line="39" pos:column="15"/></name></expr>:<pos:position pos:line="39" pos:column="16"/></case> <block pos:line="39" pos:column="17">{
      <decl_stmt><decl><type><name pos:line="40" pos:column="7">int<pos:position pos:line="40" pos:column="10"/></name></type> <name pos:line="40" pos:column="11">addr<pos:position pos:line="40" pos:column="15"/></name></decl>;<pos:position pos:line="40" pos:column="16"/></decl_stmt>                   <comment type="block" pos:line="40" pos:column="35">/* Address of OP_OpenEphemeral instruction */</comment>
      <decl_stmt><decl><type><name pos:line="41" pos:column="7">Expr<pos:position pos:line="41" pos:column="11"/></name> <modifier pos:line="41" pos:column="12">*<pos:position pos:line="41" pos:column="13"/></modifier></type><name pos:line="41" pos:column="13">pLeft<pos:position pos:line="41" pos:column="18"/></name> <init pos:line="41" pos:column="19">= <expr><name><name pos:line="41" pos:column="21">pExpr<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">-&gt;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="28">pLeft<pos:position pos:line="41" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="41" pos:column="34"/></decl_stmt> <comment type="block" pos:line="41" pos:column="35">/* the LHS of the IN operator */</comment>
      <decl_stmt><decl><type><name pos:line="42" pos:column="7">KeyInfo<pos:position pos:line="42" pos:column="14"/></name> <modifier pos:line="42" pos:column="15">*<pos:position pos:line="42" pos:column="16"/></modifier></type><name pos:line="42" pos:column="16">pKeyInfo<pos:position pos:line="42" pos:column="24"/></name> <init pos:line="42" pos:column="25">= <expr><literal type="number" pos:line="42" pos:column="27">0<pos:position pos:line="42" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="29"/></decl_stmt>      <comment type="block" pos:line="42" pos:column="35">/* Key information */</comment>
      <decl_stmt><decl><type><name pos:line="43" pos:column="7">int<pos:position pos:line="43" pos:column="10"/></name></type> <name pos:line="43" pos:column="11">nVal<pos:position pos:line="43" pos:column="15"/></name></decl>;<pos:position pos:line="43" pos:column="16"/></decl_stmt>                   <comment type="block" pos:line="43" pos:column="35">/* Size of vector pLeft */</comment>
      
      <expr_stmt><expr><name pos:line="45" pos:column="7">nVal<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <call><name pos:line="45" pos:column="14">sqlite3ExprVectorSize<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">pLeft<pos:position pos:line="45" pos:column="41"/></name></expr></argument>)<pos:position pos:line="45" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">assert<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">( <argument><expr><operator pos:line="46" pos:column="15">!<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">isRowid<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">||<pos:position pos:line="46" pos:column="26"/></operator> <name pos:line="46" pos:column="27">nVal<pos:position pos:line="46" pos:column="31"/></name><operator pos:line="46" pos:column="31">==<pos:position pos:line="46" pos:column="33"/></operator><literal type="number" pos:line="46" pos:column="33">1<pos:position pos:line="46" pos:column="34"/></literal></expr></argument> )<pos:position pos:line="46" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>

      <comment type="block" pos:line="48" pos:column="7">/* Whether this is an 'x IN(SELECT...)' or an 'x IN(&lt;exprlist&gt;)'
      ** expression it is handled the same way.  An ephemeral table is 
      ** filled with index keys representing the results from the 
      ** SELECT or the &lt;exprlist&gt;.
      **
      ** If the 'x' expression is a column value, or the SELECT...
      ** statement returns a column value, then the affinity of that
      ** column is used to build the index keys. If both 'x' and the
      ** SELECT... statement are columns, then numeric affinity is used
      ** if either column has NUMERIC or INTEGER affinity. If neither
      ** 'x' nor the SELECT... statement are columns, then numeric affinity
      ** is used.
      */</comment>
      <expr_stmt><expr><name><name pos:line="61" pos:column="7">pExpr<pos:position pos:line="61" pos:column="12"/></name><operator pos:line="61" pos:column="12">-&gt;<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="14">iTable<pos:position pos:line="61" pos:column="20"/></name></name> <operator pos:line="61" pos:column="21">=<pos:position pos:line="61" pos:column="22"/></operator> <name><name pos:line="61" pos:column="23">pParse<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">nTab<pos:position pos:line="61" pos:column="35"/></name></name><operator pos:line="61" pos:column="35">++<pos:position pos:line="61" pos:column="37"/></operator></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name pos:line="62" pos:column="7">addr<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <call><name pos:line="62" pos:column="14">sqlite3VdbeAddOp2<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">v<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="35">OP_OpenEphemeral<pos:position pos:line="62" pos:column="51"/></name></expr></argument>, 
          <argument><expr><name><name pos:line="63" pos:column="11">pExpr<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">iTable<pos:position pos:line="63" pos:column="24"/></name></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="26">(<pos:position pos:line="63" pos:column="27"/></operator><ternary><condition><expr><name pos:line="63" pos:column="27">isRowid<pos:position pos:line="63" pos:column="34"/></name></expr>?<pos:position pos:line="63" pos:column="35"/></condition><then><expr><literal type="number" pos:line="63" pos:column="35">0<pos:position pos:line="63" pos:column="36"/></literal></expr></then><else pos:line="63" pos:column="36">:<expr><name pos:line="63" pos:column="37">nVal<pos:position pos:line="63" pos:column="41"/></name></expr></else></ternary><operator pos:line="63" pos:column="41">)<pos:position pos:line="63" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="64" pos:column="7">pKeyInfo<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="64" pos:column="18">isRowid<pos:position pos:line="64" pos:column="25"/></name></expr> ?<pos:position pos:line="64" pos:column="27"/></condition><then pos:line="64" pos:column="27"> <expr><literal type="number" pos:line="64" pos:column="28">0<pos:position pos:line="64" pos:column="29"/></literal></expr> <pos:position pos:line="64" pos:column="30"/></then><else pos:line="64" pos:column="30">: <expr><call><name pos:line="64" pos:column="32">sqlite3KeyInfoAlloc<pos:position pos:line="64" pos:column="51"/></name><argument_list pos:line="64" pos:column="51">(<argument><expr><name><name pos:line="64" pos:column="52">pParse<pos:position pos:line="64" pos:column="58"/></name><operator pos:line="64" pos:column="58">-&gt;<pos:position pos:line="64" pos:column="63"/></operator><name pos:line="64" pos:column="60">db<pos:position pos:line="64" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="64">nVal<pos:position pos:line="64" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="70">1<pos:position pos:line="64" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="72"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="64" pos:column="73"/></expr_stmt>

      <if pos:line="66" pos:column="7">if<condition pos:line="66" pos:column="9">( <expr><call><name pos:line="66" pos:column="11">ExprHasProperty<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">pExpr<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="34">EP_xIsSelect<pos:position pos:line="66" pos:column="46"/></name></expr></argument>)<pos:position pos:line="66" pos:column="47"/></argument_list></call></expr> )<pos:position pos:line="66" pos:column="49"/></condition><then><block pos:line="66" pos:column="49">{
        <comment type="block" pos:line="67" pos:column="9">/* Case 1:     expr IN (SELECT ...)
        **
        ** Generate code to write the results of the select into the temporary
        ** table allocated and opened above.
        */</comment>
        <decl_stmt><decl><type><name pos:line="72" pos:column="9">Select<pos:position pos:line="72" pos:column="15"/></name> <modifier pos:line="72" pos:column="16">*<pos:position pos:line="72" pos:column="17"/></modifier></type><name pos:line="72" pos:column="17">pSelect<pos:position pos:line="72" pos:column="24"/></name> <init pos:line="72" pos:column="25">= <expr><name><name pos:line="72" pos:column="27">pExpr<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">-&gt;<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="34">x<pos:position pos:line="72" pos:column="35"/></name><operator pos:line="72" pos:column="35">.<pos:position pos:line="72" pos:column="36"/></operator><name pos:line="72" pos:column="36">pSelect<pos:position pos:line="72" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="72" pos:column="44"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="73" pos:column="9">ExprList<pos:position pos:line="73" pos:column="17"/></name> <modifier pos:line="73" pos:column="18">*<pos:position pos:line="73" pos:column="19"/></modifier></type><name pos:line="73" pos:column="19">pEList<pos:position pos:line="73" pos:column="25"/></name> <init pos:line="73" pos:column="26">= <expr><name><name pos:line="73" pos:column="28">pSelect<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">-&gt;<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="37">pEList<pos:position pos:line="73" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="73" pos:column="44"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="75" pos:column="9">assert<pos:position pos:line="75" pos:column="15"/></name><argument_list pos:line="75" pos:column="15">( <argument><expr><operator pos:line="75" pos:column="17">!<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="18">isRowid<pos:position pos:line="75" pos:column="25"/></name></expr></argument> )<pos:position pos:line="75" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="28"/></expr_stmt>
        <comment type="block" pos:line="76" pos:column="9">/* If the LHS and RHS of the IN operator do not match, that
        ** error will have been caught long before we reach this point. */</comment>
        <if pos:line="78" pos:column="9">if<condition pos:line="78" pos:column="11">( <expr><call><name pos:line="78" pos:column="13">ALWAYS<pos:position pos:line="78" pos:column="19"/></name><argument_list pos:line="78" pos:column="19">(<argument><expr><name><name pos:line="78" pos:column="20">pEList<pos:position pos:line="78" pos:column="26"/></name><operator pos:line="78" pos:column="26">-&gt;<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="28">nExpr<pos:position pos:line="78" pos:column="33"/></name></name><operator pos:line="78" pos:column="33">==<pos:position pos:line="78" pos:column="35"/></operator><name pos:line="78" pos:column="35">nVal<pos:position pos:line="78" pos:column="39"/></name></expr></argument>)<pos:position pos:line="78" pos:column="40"/></argument_list></call></expr> )<pos:position pos:line="78" pos:column="42"/></condition><then><block pos:line="78" pos:column="42">{
          <decl_stmt><decl><type><name pos:line="79" pos:column="11">SelectDest<pos:position pos:line="79" pos:column="21"/></name></type> <name pos:line="79" pos:column="22">dest<pos:position pos:line="79" pos:column="26"/></name></decl>;<pos:position pos:line="79" pos:column="27"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="80" pos:column="11">int<pos:position pos:line="80" pos:column="14"/></name></type> <name pos:line="80" pos:column="15">i<pos:position pos:line="80" pos:column="16"/></name></decl>;<pos:position pos:line="80" pos:column="17"/></decl_stmt>
          <expr_stmt><expr><call><name pos:line="81" pos:column="11">sqlite3SelectDestInit<pos:position pos:line="81" pos:column="32"/></name><argument_list pos:line="81" pos:column="32">(<argument><expr><operator pos:line="81" pos:column="33">&amp;<pos:position pos:line="81" pos:column="38"/></operator><name pos:line="81" pos:column="34">dest<pos:position pos:line="81" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="40">SRT_Set<pos:position pos:line="81" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="49">pExpr<pos:position pos:line="81" pos:column="54"/></name><operator pos:line="81" pos:column="54">-&gt;<pos:position pos:line="81" pos:column="59"/></operator><name pos:line="81" pos:column="56">iTable<pos:position pos:line="81" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="64"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="82" pos:column="11">dest<pos:position pos:line="82" pos:column="15"/></name><operator pos:line="82" pos:column="15">.<pos:position pos:line="82" pos:column="16"/></operator><name pos:line="82" pos:column="16">zAffSdst<pos:position pos:line="82" pos:column="24"/></name></name> <operator pos:line="82" pos:column="25">=<pos:position pos:line="82" pos:column="26"/></operator> <call><name pos:line="82" pos:column="27">exprINAffinity<pos:position pos:line="82" pos:column="41"/></name><argument_list pos:line="82" pos:column="41">(<argument><expr><name pos:line="82" pos:column="42">pParse<pos:position pos:line="82" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="50">pExpr<pos:position pos:line="82" pos:column="55"/></name></expr></argument>)<pos:position pos:line="82" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="57"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="83" pos:column="11">pSelect<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">-&gt;<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="20">iLimit<pos:position pos:line="83" pos:column="26"/></name></name> <operator pos:line="83" pos:column="27">=<pos:position pos:line="83" pos:column="28"/></operator> <literal type="number" pos:line="83" pos:column="29">0<pos:position pos:line="83" pos:column="30"/></literal></expr>;<pos:position pos:line="83" pos:column="31"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="84" pos:column="11">testcase<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">( <argument><expr><name><name pos:line="84" pos:column="21">pSelect<pos:position pos:line="84" pos:column="28"/></name><operator pos:line="84" pos:column="28">-&gt;<pos:position pos:line="84" pos:column="33"/></operator><name pos:line="84" pos:column="30">selFlags<pos:position pos:line="84" pos:column="38"/></name></name> <operator pos:line="84" pos:column="39">&amp;<pos:position pos:line="84" pos:column="44"/></operator> <name pos:line="84" pos:column="41">SF_Distinct<pos:position pos:line="84" pos:column="52"/></name></expr></argument> )<pos:position pos:line="84" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="55"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="85" pos:column="11">testcase<pos:position pos:line="85" pos:column="19"/></name><argument_list pos:line="85" pos:column="19">( <argument><expr><name pos:line="85" pos:column="21">pKeyInfo<pos:position pos:line="85" pos:column="29"/></name><operator pos:line="85" pos:column="29">==<pos:position pos:line="85" pos:column="31"/></operator><literal type="number" pos:line="85" pos:column="31">0<pos:position pos:line="85" pos:column="32"/></literal></expr></argument> )<pos:position pos:line="85" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt> <comment type="block" pos:line="85" pos:column="36">/* Caused by OOM in sqlite3KeyInfoAlloc() */</comment>
          <if pos:line="86" pos:column="11">if<condition pos:line="86" pos:column="13">( <expr><call><name pos:line="86" pos:column="15">sqlite3Select<pos:position pos:line="86" pos:column="28"/></name><argument_list pos:line="86" pos:column="28">(<argument><expr><name pos:line="86" pos:column="29">pParse<pos:position pos:line="86" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="37">pSelect<pos:position pos:line="86" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="46">&amp;<pos:position pos:line="86" pos:column="51"/></operator><name pos:line="86" pos:column="47">dest<pos:position pos:line="86" pos:column="51"/></name></expr></argument>)<pos:position pos:line="86" pos:column="52"/></argument_list></call></expr> )<pos:position pos:line="86" pos:column="54"/></condition><then><block pos:line="86" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">sqlite3DbFree<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><name><name pos:line="87" pos:column="27">pParse<pos:position pos:line="87" pos:column="33"/></name><operator pos:line="87" pos:column="33">-&gt;<pos:position pos:line="87" pos:column="38"/></operator><name pos:line="87" pos:column="35">db<pos:position pos:line="87" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="39">dest<pos:position pos:line="87" pos:column="43"/></name><operator pos:line="87" pos:column="43">.<pos:position pos:line="87" pos:column="44"/></operator><name pos:line="87" pos:column="44">zAffSdst<pos:position pos:line="87" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">sqlite3KeyInfoUnref<pos:position pos:line="88" pos:column="32"/></name><argument_list pos:line="88" pos:column="32">(<argument><expr><name pos:line="88" pos:column="33">pKeyInfo<pos:position pos:line="88" pos:column="41"/></name></expr></argument>)<pos:position pos:line="88" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="43"/></expr_stmt>
            <return pos:line="89" pos:column="13">return <expr><literal type="number" pos:line="89" pos:column="20">0<pos:position pos:line="89" pos:column="21"/></literal></expr>;<pos:position pos:line="89" pos:column="22"/></return>
          }<pos:position pos:line="90" pos:column="12"/></block></then></if>
          <expr_stmt><expr><call><name pos:line="91" pos:column="11">sqlite3DbFree<pos:position pos:line="91" pos:column="24"/></name><argument_list pos:line="91" pos:column="24">(<argument><expr><name><name pos:line="91" pos:column="25">pParse<pos:position pos:line="91" pos:column="31"/></name><operator pos:line="91" pos:column="31">-&gt;<pos:position pos:line="91" pos:column="36"/></operator><name pos:line="91" pos:column="33">db<pos:position pos:line="91" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="37">dest<pos:position pos:line="91" pos:column="41"/></name><operator pos:line="91" pos:column="41">.<pos:position pos:line="91" pos:column="42"/></operator><name pos:line="91" pos:column="42">zAffSdst<pos:position pos:line="91" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="52"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="92" pos:column="11">assert<pos:position pos:line="92" pos:column="17"/></name><argument_list pos:line="92" pos:column="17">( <argument><expr><name pos:line="92" pos:column="19">pKeyInfo<pos:position pos:line="92" pos:column="27"/></name><operator pos:line="92" pos:column="27">!=<pos:position pos:line="92" pos:column="29"/></operator><literal type="number" pos:line="92" pos:column="29">0<pos:position pos:line="92" pos:column="30"/></literal></expr></argument> )<pos:position pos:line="92" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="33"/></expr_stmt> <comment type="block" pos:line="92" pos:column="34">/* OOM will cause exit after sqlite3Select() */</comment>
          <expr_stmt><expr><call><name pos:line="93" pos:column="11">assert<pos:position pos:line="93" pos:column="17"/></name><argument_list pos:line="93" pos:column="17">( <argument><expr><name pos:line="93" pos:column="19">pEList<pos:position pos:line="93" pos:column="25"/></name><operator pos:line="93" pos:column="25">!=<pos:position pos:line="93" pos:column="27"/></operator><literal type="number" pos:line="93" pos:column="27">0<pos:position pos:line="93" pos:column="28"/></literal></expr></argument> )<pos:position pos:line="93" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="31"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="94" pos:column="11">assert<pos:position pos:line="94" pos:column="17"/></name><argument_list pos:line="94" pos:column="17">( <argument><expr><name><name pos:line="94" pos:column="19">pEList<pos:position pos:line="94" pos:column="25"/></name><operator pos:line="94" pos:column="25">-&gt;<pos:position pos:line="94" pos:column="30"/></operator><name pos:line="94" pos:column="27">nExpr<pos:position pos:line="94" pos:column="32"/></name></name><operator pos:line="94" pos:column="32">&gt;<pos:position pos:line="94" pos:column="36"/></operator><literal type="number" pos:line="94" pos:column="33">0<pos:position pos:line="94" pos:column="34"/></literal></expr></argument> )<pos:position pos:line="94" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="95" pos:column="11">assert<pos:position pos:line="95" pos:column="17"/></name><argument_list pos:line="95" pos:column="17">( <argument><expr><call><name pos:line="95" pos:column="19">sqlite3KeyInfoIsWriteable<pos:position pos:line="95" pos:column="44"/></name><argument_list pos:line="95" pos:column="44">(<argument><expr><name pos:line="95" pos:column="45">pKeyInfo<pos:position pos:line="95" pos:column="53"/></name></expr></argument>)<pos:position pos:line="95" pos:column="54"/></argument_list></call></expr></argument> )<pos:position pos:line="95" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="57"/></expr_stmt>
          <for pos:line="96" pos:column="11">for<control pos:line="96" pos:column="14">(<init><expr><name pos:line="96" pos:column="15">i<pos:position pos:line="96" pos:column="16"/></name><operator pos:line="96" pos:column="16">=<pos:position pos:line="96" pos:column="17"/></operator><literal type="number" pos:line="96" pos:column="17">0<pos:position pos:line="96" pos:column="18"/></literal></expr>;<pos:position pos:line="96" pos:column="19"/></init> <condition><expr><name pos:line="96" pos:column="20">i<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">&lt;<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="22">nVal<pos:position pos:line="96" pos:column="26"/></name></expr>;<pos:position pos:line="96" pos:column="27"/></condition> <incr><expr><name pos:line="96" pos:column="28">i<pos:position pos:line="96" pos:column="29"/></name><operator pos:line="96" pos:column="29">++<pos:position pos:line="96" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="96" pos:column="32"/></control><block pos:line="96" pos:column="32">{
            <decl_stmt><decl><type><name pos:line="97" pos:column="13">Expr<pos:position pos:line="97" pos:column="17"/></name> <modifier pos:line="97" pos:column="18">*<pos:position pos:line="97" pos:column="19"/></modifier></type><name pos:line="97" pos:column="19">p<pos:position pos:line="97" pos:column="20"/></name> <init pos:line="97" pos:column="21">= <expr><call><name pos:line="97" pos:column="23">sqlite3VectorFieldSubexpr<pos:position pos:line="97" pos:column="48"/></name><argument_list pos:line="97" pos:column="48">(<argument><expr><name pos:line="97" pos:column="49">pLeft<pos:position pos:line="97" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="56">i<pos:position pos:line="97" pos:column="57"/></name></expr></argument>)<pos:position pos:line="97" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="97" pos:column="59"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="98" pos:column="13">pKeyInfo<pos:position pos:line="98" pos:column="21"/></name><operator pos:line="98" pos:column="21">-&gt;<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="23">aColl<pos:position pos:line="98" pos:column="28"/></name><index pos:line="98" pos:column="28">[<expr><name pos:line="98" pos:column="29">i<pos:position pos:line="98" pos:column="30"/></name></expr>]<pos:position pos:line="98" pos:column="31"/></index></name> <operator pos:line="98" pos:column="32">=<pos:position pos:line="98" pos:column="33"/></operator> <call><name pos:line="98" pos:column="34">sqlite3BinaryCompareCollSeq<pos:position pos:line="98" pos:column="61"/></name><argument_list pos:line="98" pos:column="61">(
                <argument><expr><name pos:line="99" pos:column="17">pParse<pos:position pos:line="99" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="25">p<pos:position pos:line="99" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="28">pEList<pos:position pos:line="99" pos:column="34"/></name><operator pos:line="99" pos:column="34">-&gt;<pos:position pos:line="99" pos:column="39"/></operator><name pos:line="99" pos:column="36">a<pos:position pos:line="99" pos:column="37"/></name><index pos:line="99" pos:column="37">[<expr><name pos:line="99" pos:column="38">i<pos:position pos:line="99" pos:column="39"/></name></expr>]<pos:position pos:line="99" pos:column="40"/></index></name><operator pos:line="99" pos:column="40">.<pos:position pos:line="99" pos:column="41"/></operator><name pos:line="99" pos:column="41">pExpr<pos:position pos:line="99" pos:column="46"/></name></expr></argument>
            )<pos:position pos:line="100" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="15"/></expr_stmt>
          }<pos:position pos:line="101" pos:column="12"/></block></for>
        }<pos:position pos:line="102" pos:column="10"/></block></then></if>
      }<pos:position pos:line="103" pos:column="8"/></block></then><elseif pos:line="103" pos:column="8">else <if pos:line="103" pos:column="13">if<condition pos:line="103" pos:column="15">( <expr><call><name pos:line="103" pos:column="17">ALWAYS<pos:position pos:line="103" pos:column="23"/></name><argument_list pos:line="103" pos:column="23">(<argument><expr><name><name pos:line="103" pos:column="24">pExpr<pos:position pos:line="103" pos:column="29"/></name><operator pos:line="103" pos:column="29">-&gt;<pos:position pos:line="103" pos:column="34"/></operator><name pos:line="103" pos:column="31">x<pos:position pos:line="103" pos:column="32"/></name><operator pos:line="103" pos:column="32">.<pos:position pos:line="103" pos:column="33"/></operator><name pos:line="103" pos:column="33">pList<pos:position pos:line="103" pos:column="38"/></name></name><operator pos:line="103" pos:column="38">!=<pos:position pos:line="103" pos:column="40"/></operator><literal type="number" pos:line="103" pos:column="40">0<pos:position pos:line="103" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="42"/></argument_list></call></expr> )<pos:position pos:line="103" pos:column="44"/></condition><then><block pos:line="103" pos:column="44">{
        <comment type="block" pos:line="104" pos:column="9">/* Case 2:     expr IN (exprlist)
        **
        ** For each expression, build an index key from the evaluation and
        ** store it in the temporary table. If &lt;expr&gt; is a column, then use
        ** that columns affinity when building index keys. If &lt;expr&gt; is not
        ** a column, use numeric affinity.
        */</comment>
        <decl_stmt><decl><type><name pos:line="111" pos:column="9">char<pos:position pos:line="111" pos:column="13"/></name></type> <name pos:line="111" pos:column="14">affinity<pos:position pos:line="111" pos:column="22"/></name></decl>;<pos:position pos:line="111" pos:column="23"/></decl_stmt>            <comment type="block" pos:line="111" pos:column="35">/* Affinity of the LHS of the IN */</comment>
        <decl_stmt><decl><type><name pos:line="112" pos:column="9">int<pos:position pos:line="112" pos:column="12"/></name></type> <name pos:line="112" pos:column="13">i<pos:position pos:line="112" pos:column="14"/></name></decl>;<pos:position pos:line="112" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="113" pos:column="9">ExprList<pos:position pos:line="113" pos:column="17"/></name> <modifier pos:line="113" pos:column="18">*<pos:position pos:line="113" pos:column="19"/></modifier></type><name pos:line="113" pos:column="19">pList<pos:position pos:line="113" pos:column="24"/></name> <init pos:line="113" pos:column="25">= <expr><name><name pos:line="113" pos:column="27">pExpr<pos:position pos:line="113" pos:column="32"/></name><operator pos:line="113" pos:column="32">-&gt;<pos:position pos:line="113" pos:column="37"/></operator><name pos:line="113" pos:column="34">x<pos:position pos:line="113" pos:column="35"/></name><operator pos:line="113" pos:column="35">.<pos:position pos:line="113" pos:column="36"/></operator><name pos:line="113" pos:column="36">pList<pos:position pos:line="113" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="113" pos:column="42"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="114" pos:column="9">struct<pos:position pos:line="114" pos:column="15"/></name> <name pos:line="114" pos:column="16">ExprList_item<pos:position pos:line="114" pos:column="29"/></name></name> <modifier pos:line="114" pos:column="30">*<pos:position pos:line="114" pos:column="31"/></modifier></type><name pos:line="114" pos:column="31">pItem<pos:position pos:line="114" pos:column="36"/></name></decl>;<pos:position pos:line="114" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="115" pos:column="9">int<pos:position pos:line="115" pos:column="12"/></name></type> <name pos:line="115" pos:column="13">r1<pos:position pos:line="115" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="115" pos:column="17">r2<pos:position pos:line="115" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="115" pos:column="21">r3<pos:position pos:line="115" pos:column="23"/></name></decl>;<pos:position pos:line="115" pos:column="24"/></decl_stmt>

        <expr_stmt><expr><name pos:line="117" pos:column="9">affinity<pos:position pos:line="117" pos:column="17"/></name> <operator pos:line="117" pos:column="18">=<pos:position pos:line="117" pos:column="19"/></operator> <call><name pos:line="117" pos:column="20">sqlite3ExprAffinity<pos:position pos:line="117" pos:column="39"/></name><argument_list pos:line="117" pos:column="39">(<argument><expr><name pos:line="117" pos:column="40">pLeft<pos:position pos:line="117" pos:column="45"/></name></expr></argument>)<pos:position pos:line="117" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="47"/></expr_stmt>
        <if pos:line="118" pos:column="9">if<condition pos:line="118" pos:column="11">( <expr><operator pos:line="118" pos:column="13">!<pos:position pos:line="118" pos:column="14"/></operator><name pos:line="118" pos:column="14">affinity<pos:position pos:line="118" pos:column="22"/></name></expr> )<pos:position pos:line="118" pos:column="24"/></condition><then><block pos:line="118" pos:column="24">{
          <expr_stmt><expr><name pos:line="119" pos:column="11">affinity<pos:position pos:line="119" pos:column="19"/></name> <operator pos:line="119" pos:column="20">=<pos:position pos:line="119" pos:column="21"/></operator> <name pos:line="119" pos:column="22">SQLITE_AFF_BLOB<pos:position pos:line="119" pos:column="37"/></name></expr>;<pos:position pos:line="119" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="120" pos:column="10"/></block></then></if>
        <if pos:line="121" pos:column="9">if<condition pos:line="121" pos:column="11">( <expr><name pos:line="121" pos:column="13">pKeyInfo<pos:position pos:line="121" pos:column="21"/></name></expr> )<pos:position pos:line="121" pos:column="23"/></condition><then><block pos:line="121" pos:column="23">{
          <expr_stmt><expr><call><name pos:line="122" pos:column="11">assert<pos:position pos:line="122" pos:column="17"/></name><argument_list pos:line="122" pos:column="17">( <argument><expr><call><name pos:line="122" pos:column="19">sqlite3KeyInfoIsWriteable<pos:position pos:line="122" pos:column="44"/></name><argument_list pos:line="122" pos:column="44">(<argument><expr><name pos:line="122" pos:column="45">pKeyInfo<pos:position pos:line="122" pos:column="53"/></name></expr></argument>)<pos:position pos:line="122" pos:column="54"/></argument_list></call></expr></argument> )<pos:position pos:line="122" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="57"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="123" pos:column="11">pKeyInfo<pos:position pos:line="123" pos:column="19"/></name><operator pos:line="123" pos:column="19">-&gt;<pos:position pos:line="123" pos:column="24"/></operator><name pos:line="123" pos:column="21">aColl<pos:position pos:line="123" pos:column="26"/></name><index pos:line="123" pos:column="26">[<expr><literal type="number" pos:line="123" pos:column="27">0<pos:position pos:line="123" pos:column="28"/></literal></expr>]<pos:position pos:line="123" pos:column="29"/></index></name> <operator pos:line="123" pos:column="30">=<pos:position pos:line="123" pos:column="31"/></operator> <call><name pos:line="123" pos:column="32">sqlite3ExprCollSeq<pos:position pos:line="123" pos:column="50"/></name><argument_list pos:line="123" pos:column="50">(<argument><expr><name pos:line="123" pos:column="51">pParse<pos:position pos:line="123" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="59">pExpr<pos:position pos:line="123" pos:column="64"/></name><operator pos:line="123" pos:column="64">-&gt;<pos:position pos:line="123" pos:column="69"/></operator><name pos:line="123" pos:column="66">pLeft<pos:position pos:line="123" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="124" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="126" pos:column="9">/* Loop through each expression in &lt;exprlist&gt;. */</comment>
        <expr_stmt><expr><name pos:line="127" pos:column="9">r1<pos:position pos:line="127" pos:column="11"/></name> <operator pos:line="127" pos:column="12">=<pos:position pos:line="127" pos:column="13"/></operator> <call><name pos:line="127" pos:column="14">sqlite3GetTempReg<pos:position pos:line="127" pos:column="31"/></name><argument_list pos:line="127" pos:column="31">(<argument><expr><name pos:line="127" pos:column="32">pParse<pos:position pos:line="127" pos:column="38"/></name></expr></argument>)<pos:position pos:line="127" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="128" pos:column="9">r2<pos:position pos:line="128" pos:column="11"/></name> <operator pos:line="128" pos:column="12">=<pos:position pos:line="128" pos:column="13"/></operator> <call><name pos:line="128" pos:column="14">sqlite3GetTempReg<pos:position pos:line="128" pos:column="31"/></name><argument_list pos:line="128" pos:column="31">(<argument><expr><name pos:line="128" pos:column="32">pParse<pos:position pos:line="128" pos:column="38"/></name></expr></argument>)<pos:position pos:line="128" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="40"/></expr_stmt>
        <if pos:line="129" pos:column="9">if<condition pos:line="129" pos:column="11">( <expr><name pos:line="129" pos:column="13">isRowid<pos:position pos:line="129" pos:column="20"/></name></expr> )<pos:position pos:line="129" pos:column="22"/></condition><then pos:line="129" pos:column="22"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="129" pos:column="23">sqlite3VdbeAddOp2<pos:position pos:line="129" pos:column="40"/></name><argument_list pos:line="129" pos:column="40">(<argument><expr><name pos:line="129" pos:column="41">v<pos:position pos:line="129" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="44">OP_Null<pos:position pos:line="129" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="53">0<pos:position pos:line="129" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="56">r2<pos:position pos:line="129" pos:column="58"/></name></expr></argument>)<pos:position pos:line="129" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="60"/></expr_stmt></block></then></if>
        <for pos:line="130" pos:column="9">for<control pos:line="130" pos:column="12">(<init><expr><name pos:line="130" pos:column="13">i<pos:position pos:line="130" pos:column="14"/></name><operator pos:line="130" pos:column="14">=<pos:position pos:line="130" pos:column="15"/></operator><name><name pos:line="130" pos:column="15">pList<pos:position pos:line="130" pos:column="20"/></name><operator pos:line="130" pos:column="20">-&gt;<pos:position pos:line="130" pos:column="25"/></operator><name pos:line="130" pos:column="22">nExpr<pos:position pos:line="130" pos:column="27"/></name></name></expr><operator pos:line="130" pos:column="27">,<pos:position pos:line="130" pos:column="28"/></operator> <expr><name pos:line="130" pos:column="29">pItem<pos:position pos:line="130" pos:column="34"/></name><operator pos:line="130" pos:column="34">=<pos:position pos:line="130" pos:column="35"/></operator><name><name pos:line="130" pos:column="35">pList<pos:position pos:line="130" pos:column="40"/></name><operator pos:line="130" pos:column="40">-&gt;<pos:position pos:line="130" pos:column="45"/></operator><name pos:line="130" pos:column="42">a<pos:position pos:line="130" pos:column="43"/></name></name></expr>;<pos:position pos:line="130" pos:column="44"/></init> <condition><expr><name pos:line="130" pos:column="45">i<pos:position pos:line="130" pos:column="46"/></name><operator pos:line="130" pos:column="46">&gt;<pos:position pos:line="130" pos:column="50"/></operator><literal type="number" pos:line="130" pos:column="47">0<pos:position pos:line="130" pos:column="48"/></literal></expr>;<pos:position pos:line="130" pos:column="49"/></condition> <incr><expr><name pos:line="130" pos:column="50">i<pos:position pos:line="130" pos:column="51"/></name><operator pos:line="130" pos:column="51">--<pos:position pos:line="130" pos:column="53"/></operator></expr><operator pos:line="130" pos:column="53">,<pos:position pos:line="130" pos:column="54"/></operator> <expr><name pos:line="130" pos:column="55">pItem<pos:position pos:line="130" pos:column="60"/></name><operator pos:line="130" pos:column="60">++<pos:position pos:line="130" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="130" pos:column="63"/></control><block pos:line="130" pos:column="63">{
          <decl_stmt><decl><type><name pos:line="131" pos:column="11">Expr<pos:position pos:line="131" pos:column="15"/></name> <modifier pos:line="131" pos:column="16">*<pos:position pos:line="131" pos:column="17"/></modifier></type><name pos:line="131" pos:column="17">pE2<pos:position pos:line="131" pos:column="20"/></name> <init pos:line="131" pos:column="21">= <expr><name><name pos:line="131" pos:column="23">pItem<pos:position pos:line="131" pos:column="28"/></name><operator pos:line="131" pos:column="28">-&gt;<pos:position pos:line="131" pos:column="33"/></operator><name pos:line="131" pos:column="30">pExpr<pos:position pos:line="131" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="131" pos:column="36"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="132" pos:column="11">int<pos:position pos:line="132" pos:column="14"/></name></type> <name pos:line="132" pos:column="15">iValToIns<pos:position pos:line="132" pos:column="24"/></name></decl>;<pos:position pos:line="132" pos:column="25"/></decl_stmt>

          <comment type="block" pos:line="134" pos:column="11">/* If the expression is not constant then we will need to
          ** disable the test that was generated above that makes sure
          ** this code only executes once.  Because for a non-constant
          ** expression we need to rerun this code each time.
          */</comment>
          <if pos:line="139" pos:column="11">if<condition pos:line="139" pos:column="13">( <expr><name pos:line="139" pos:column="15">jmpIfDynamic<pos:position pos:line="139" pos:column="27"/></name><operator pos:line="139" pos:column="27">&gt;=<pos:position pos:line="139" pos:column="32"/></operator><literal type="number" pos:line="139" pos:column="29">0<pos:position pos:line="139" pos:column="30"/></literal> <operator pos:line="139" pos:column="31">&amp;&amp;<pos:position pos:line="139" pos:column="41"/></operator> <operator pos:line="139" pos:column="34">!<pos:position pos:line="139" pos:column="35"/></operator><call><name pos:line="139" pos:column="35">sqlite3ExprIsConstant<pos:position pos:line="139" pos:column="56"/></name><argument_list pos:line="139" pos:column="56">(<argument><expr><name pos:line="139" pos:column="57">pE2<pos:position pos:line="139" pos:column="60"/></name></expr></argument>)<pos:position pos:line="139" pos:column="61"/></argument_list></call></expr> )<pos:position pos:line="139" pos:column="63"/></condition><then><block pos:line="139" pos:column="63">{
            <expr_stmt><expr><call><name pos:line="140" pos:column="13">sqlite3VdbeChangeToNoop<pos:position pos:line="140" pos:column="36"/></name><argument_list pos:line="140" pos:column="36">(<argument><expr><name pos:line="140" pos:column="37">v<pos:position pos:line="140" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="40">jmpIfDynamic<pos:position pos:line="140" pos:column="52"/></name></expr></argument>)<pos:position pos:line="140" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="141" pos:column="13">jmpIfDynamic<pos:position pos:line="141" pos:column="25"/></name> <operator pos:line="141" pos:column="26">=<pos:position pos:line="141" pos:column="27"/></operator> <operator pos:line="141" pos:column="28">-<pos:position pos:line="141" pos:column="29"/></operator><literal type="number" pos:line="141" pos:column="29">1<pos:position pos:line="141" pos:column="30"/></literal></expr>;<pos:position pos:line="141" pos:column="31"/></expr_stmt>
          }<pos:position pos:line="142" pos:column="12"/></block></then></if>

          <comment type="block" pos:line="144" pos:column="11">/* Evaluate the expression and insert it into the temp table */</comment>
          <if pos:line="145" pos:column="11">if<condition pos:line="145" pos:column="13">( <expr><name pos:line="145" pos:column="15">isRowid<pos:position pos:line="145" pos:column="22"/></name> <operator pos:line="145" pos:column="23">&amp;&amp;<pos:position pos:line="145" pos:column="33"/></operator> <call><name pos:line="145" pos:column="26">sqlite3ExprIsInteger<pos:position pos:line="145" pos:column="46"/></name><argument_list pos:line="145" pos:column="46">(<argument><expr><name pos:line="145" pos:column="47">pE2<pos:position pos:line="145" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="145" pos:column="52">&amp;<pos:position pos:line="145" pos:column="57"/></operator><name pos:line="145" pos:column="53">iValToIns<pos:position pos:line="145" pos:column="62"/></name></expr></argument>)<pos:position pos:line="145" pos:column="63"/></argument_list></call></expr> )<pos:position pos:line="145" pos:column="65"/></condition><then><block pos:line="145" pos:column="65">{
            <expr_stmt><expr><call><name pos:line="146" pos:column="13">sqlite3VdbeAddOp3<pos:position pos:line="146" pos:column="30"/></name><argument_list pos:line="146" pos:column="30">(<argument><expr><name pos:line="146" pos:column="31">v<pos:position pos:line="146" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="34">OP_InsertInt<pos:position pos:line="146" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="48">pExpr<pos:position pos:line="146" pos:column="53"/></name><operator pos:line="146" pos:column="53">-&gt;<pos:position pos:line="146" pos:column="58"/></operator><name pos:line="146" pos:column="55">iTable<pos:position pos:line="146" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="63">r2<pos:position pos:line="146" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="67">iValToIns<pos:position pos:line="146" pos:column="76"/></name></expr></argument>)<pos:position pos:line="146" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="78"/></expr_stmt>
          }<pos:position pos:line="147" pos:column="12"/></block></then><else pos:line="147" pos:column="12">else<block pos:line="147" pos:column="16">{
            <expr_stmt><expr><name pos:line="148" pos:column="13">r3<pos:position pos:line="148" pos:column="15"/></name> <operator pos:line="148" pos:column="16">=<pos:position pos:line="148" pos:column="17"/></operator> <call><name pos:line="148" pos:column="18">sqlite3ExprCodeTarget<pos:position pos:line="148" pos:column="39"/></name><argument_list pos:line="148" pos:column="39">(<argument><expr><name pos:line="148" pos:column="40">pParse<pos:position pos:line="148" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="48">pE2<pos:position pos:line="148" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="53">r1<pos:position pos:line="148" pos:column="55"/></name></expr></argument>)<pos:position pos:line="148" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="57"/></expr_stmt>
            <if pos:line="149" pos:column="13">if<condition pos:line="149" pos:column="15">( <expr><name pos:line="149" pos:column="17">isRowid<pos:position pos:line="149" pos:column="24"/></name></expr> )<pos:position pos:line="149" pos:column="26"/></condition><then><block pos:line="149" pos:column="26">{
              <expr_stmt><expr><call><name pos:line="150" pos:column="15">sqlite3VdbeAddOp2<pos:position pos:line="150" pos:column="32"/></name><argument_list pos:line="150" pos:column="32">(<argument><expr><name pos:line="150" pos:column="33">v<pos:position pos:line="150" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="36">OP_MustBeInt<pos:position pos:line="150" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="50">r3<pos:position pos:line="150" pos:column="52"/></name></expr></argument>,
                                <argument><expr><call><name pos:line="151" pos:column="33">sqlite3VdbeCurrentAddr<pos:position pos:line="151" pos:column="55"/></name><argument_list pos:line="151" pos:column="55">(<argument><expr><name pos:line="151" pos:column="56">v<pos:position pos:line="151" pos:column="57"/></name></expr></argument>)<pos:position pos:line="151" pos:column="58"/></argument_list></call><operator pos:line="151" pos:column="58">+<pos:position pos:line="151" pos:column="59"/></operator><literal type="number" pos:line="151" pos:column="59">2<pos:position pos:line="151" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="62"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="152" pos:column="15">VdbeCoverage<pos:position pos:line="152" pos:column="27"/></name><argument_list pos:line="152" pos:column="27">(<argument><expr><name pos:line="152" pos:column="28">v<pos:position pos:line="152" pos:column="29"/></name></expr></argument>)<pos:position pos:line="152" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="31"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="153" pos:column="15">sqlite3VdbeAddOp3<pos:position pos:line="153" pos:column="32"/></name><argument_list pos:line="153" pos:column="32">(<argument><expr><name pos:line="153" pos:column="33">v<pos:position pos:line="153" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="36">OP_Insert<pos:position pos:line="153" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="47">pExpr<pos:position pos:line="153" pos:column="52"/></name><operator pos:line="153" pos:column="52">-&gt;<pos:position pos:line="153" pos:column="57"/></operator><name pos:line="153" pos:column="54">iTable<pos:position pos:line="153" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="62">r2<pos:position pos:line="153" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="66">r3<pos:position pos:line="153" pos:column="68"/></name></expr></argument>)<pos:position pos:line="153" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="154" pos:column="14"/></block></then><else pos:line="154" pos:column="14">else<block pos:line="154" pos:column="18">{
              <expr_stmt><expr><call><name pos:line="155" pos:column="15">sqlite3VdbeAddOp4<pos:position pos:line="155" pos:column="32"/></name><argument_list pos:line="155" pos:column="32">(<argument><expr><name pos:line="155" pos:column="33">v<pos:position pos:line="155" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="36">OP_MakeRecord<pos:position pos:line="155" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="51">r3<pos:position pos:line="155" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="155" pos:column="55">1<pos:position pos:line="155" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="155" pos:column="58">r2<pos:position pos:line="155" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="155" pos:column="62">&amp;<pos:position pos:line="155" pos:column="67"/></operator><name pos:line="155" pos:column="63">affinity<pos:position pos:line="155" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="155" pos:column="73">1<pos:position pos:line="155" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="76"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="156" pos:column="15">sqlite3ExprCacheAffinityChange<pos:position pos:line="156" pos:column="45"/></name><argument_list pos:line="156" pos:column="45">(<argument><expr><name pos:line="156" pos:column="46">pParse<pos:position pos:line="156" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="54">r3<pos:position pos:line="156" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="156" pos:column="58">1<pos:position pos:line="156" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="61"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="157" pos:column="15">sqlite3VdbeAddOp4Int<pos:position pos:line="157" pos:column="35"/></name><argument_list pos:line="157" pos:column="35">(<argument><expr><name pos:line="157" pos:column="36">v<pos:position pos:line="157" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="39">OP_IdxInsert<pos:position pos:line="157" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="53">pExpr<pos:position pos:line="157" pos:column="58"/></name><operator pos:line="157" pos:column="58">-&gt;<pos:position pos:line="157" pos:column="63"/></operator><name pos:line="157" pos:column="60">iTable<pos:position pos:line="157" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="68">r2<pos:position pos:line="157" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="72">r3<pos:position pos:line="157" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="76">1<pos:position pos:line="157" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="158" pos:column="14"/></block></else></if>
          }<pos:position pos:line="159" pos:column="12"/></block></else></if>
        }<pos:position pos:line="160" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="161" pos:column="9">sqlite3ReleaseTempReg<pos:position pos:line="161" pos:column="30"/></name><argument_list pos:line="161" pos:column="30">(<argument><expr><name pos:line="161" pos:column="31">pParse<pos:position pos:line="161" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="39">r1<pos:position pos:line="161" pos:column="41"/></name></expr></argument>)<pos:position pos:line="161" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="162" pos:column="9">sqlite3ReleaseTempReg<pos:position pos:line="162" pos:column="30"/></name><argument_list pos:line="162" pos:column="30">(<argument><expr><name pos:line="162" pos:column="31">pParse<pos:position pos:line="162" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="39">r2<pos:position pos:line="162" pos:column="41"/></name></expr></argument>)<pos:position pos:line="162" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="163" pos:column="8"/></block></then></if></elseif></if>
      <if pos:line="164" pos:column="7">if<condition pos:line="164" pos:column="9">( <expr><name pos:line="164" pos:column="11">pKeyInfo<pos:position pos:line="164" pos:column="19"/></name></expr> )<pos:position pos:line="164" pos:column="21"/></condition><then><block pos:line="164" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="165" pos:column="9">sqlite3VdbeChangeP4<pos:position pos:line="165" pos:column="28"/></name><argument_list pos:line="165" pos:column="28">(<argument><expr><name pos:line="165" pos:column="29">v<pos:position pos:line="165" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="32">addr<pos:position pos:line="165" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="165" pos:column="38">(<pos:position pos:line="165" pos:column="39"/></operator><name pos:line="165" pos:column="39">void<pos:position pos:line="165" pos:column="43"/></name> <operator pos:line="165" pos:column="44">*<pos:position pos:line="165" pos:column="45"/></operator><operator pos:line="165" pos:column="45">)<pos:position pos:line="165" pos:column="46"/></operator><name pos:line="165" pos:column="46">pKeyInfo<pos:position pos:line="165" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="56">P4_KEYINFO<pos:position pos:line="165" pos:column="66"/></name></expr></argument>)<pos:position pos:line="165" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="68"/></expr_stmt>
      }<pos:position pos:line="166" pos:column="8"/></block></then></if>
      <break pos:line="167" pos:column="7">break;<pos:position pos:line="167" pos:column="13"/></break>
    }<pos:position pos:line="168" pos:column="6"/></block>

    <case pos:line="170" pos:column="5">case <expr><name pos:line="170" pos:column="10">TK_EXISTS<pos:position pos:line="170" pos:column="19"/></name></expr>:<pos:position pos:line="170" pos:column="20"/></case>
    <case pos:line="171" pos:column="5">case <expr><name pos:line="171" pos:column="10">TK_SELECT<pos:position pos:line="171" pos:column="19"/></name></expr>:<pos:position pos:line="171" pos:column="20"/></case>
    <default pos:line="172" pos:column="5">default:<pos:position pos:line="172" pos:column="13"/></default> <block pos:line="172" pos:column="14">{
      <comment type="block" pos:line="173" pos:column="7">/* Case 3:    (SELECT ... FROM ...)
      **     or:    EXISTS(SELECT ... FROM ...)
      **
      ** For a SELECT, generate code to put the values for all columns of
      ** the first row into an array of registers and return the index of
      ** the first register.
      **
      ** If this is an EXISTS, write an integer 0 (not exists) or 1 (exists)
      ** into a register and return that register number.
      **
      ** In both cases, the query is augmented with "LIMIT 1".  Any 
      ** preexisting limit is discarded in place of the new LIMIT 1.
      */</comment>
      <decl_stmt><decl><type><name pos:line="186" pos:column="7">Select<pos:position pos:line="186" pos:column="13"/></name> <modifier pos:line="186" pos:column="14">*<pos:position pos:line="186" pos:column="15"/></modifier></type><name pos:line="186" pos:column="15">pSel<pos:position pos:line="186" pos:column="19"/></name></decl>;<pos:position pos:line="186" pos:column="20"/></decl_stmt>                         <comment type="block" pos:line="186" pos:column="45">/* SELECT statement to encode */</comment>
      <decl_stmt><decl><type><name pos:line="187" pos:column="7">SelectDest<pos:position pos:line="187" pos:column="17"/></name></type> <name pos:line="187" pos:column="18">dest<pos:position pos:line="187" pos:column="22"/></name></decl>;<pos:position pos:line="187" pos:column="23"/></decl_stmt>                      <comment type="block" pos:line="187" pos:column="45">/* How to deal with SELECT result */</comment>
      <decl_stmt><decl><type><name pos:line="188" pos:column="7">int<pos:position pos:line="188" pos:column="10"/></name></type> <name pos:line="188" pos:column="11">nReg<pos:position pos:line="188" pos:column="15"/></name></decl>;<pos:position pos:line="188" pos:column="16"/></decl_stmt>                             <comment type="block" pos:line="188" pos:column="45">/* Registers to allocate */</comment>

      <expr_stmt><expr><call><name pos:line="190" pos:column="7">testcase<pos:position pos:line="190" pos:column="15"/></name><argument_list pos:line="190" pos:column="15">( <argument><expr><name><name pos:line="190" pos:column="17">pExpr<pos:position pos:line="190" pos:column="22"/></name><operator pos:line="190" pos:column="22">-&gt;<pos:position pos:line="190" pos:column="27"/></operator><name pos:line="190" pos:column="24">op<pos:position pos:line="190" pos:column="26"/></name></name><operator pos:line="190" pos:column="26">==<pos:position pos:line="190" pos:column="28"/></operator><name pos:line="190" pos:column="28">TK_EXISTS<pos:position pos:line="190" pos:column="37"/></name></expr></argument> )<pos:position pos:line="190" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="191" pos:column="7">testcase<pos:position pos:line="191" pos:column="15"/></name><argument_list pos:line="191" pos:column="15">( <argument><expr><name><name pos:line="191" pos:column="17">pExpr<pos:position pos:line="191" pos:column="22"/></name><operator pos:line="191" pos:column="22">-&gt;<pos:position pos:line="191" pos:column="27"/></operator><name pos:line="191" pos:column="24">op<pos:position pos:line="191" pos:column="26"/></name></name><operator pos:line="191" pos:column="26">==<pos:position pos:line="191" pos:column="28"/></operator><name pos:line="191" pos:column="28">TK_SELECT<pos:position pos:line="191" pos:column="37"/></name></expr></argument> )<pos:position pos:line="191" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="192" pos:column="7">assert<pos:position pos:line="192" pos:column="13"/></name><argument_list pos:line="192" pos:column="13">( <argument><expr><name><name pos:line="192" pos:column="15">pExpr<pos:position pos:line="192" pos:column="20"/></name><operator pos:line="192" pos:column="20">-&gt;<pos:position pos:line="192" pos:column="25"/></operator><name pos:line="192" pos:column="22">op<pos:position pos:line="192" pos:column="24"/></name></name><operator pos:line="192" pos:column="24">==<pos:position pos:line="192" pos:column="26"/></operator><name pos:line="192" pos:column="26">TK_EXISTS<pos:position pos:line="192" pos:column="35"/></name> <operator pos:line="192" pos:column="36">||<pos:position pos:line="192" pos:column="38"/></operator> <name><name pos:line="192" pos:column="39">pExpr<pos:position pos:line="192" pos:column="44"/></name><operator pos:line="192" pos:column="44">-&gt;<pos:position pos:line="192" pos:column="49"/></operator><name pos:line="192" pos:column="46">op<pos:position pos:line="192" pos:column="48"/></name></name><operator pos:line="192" pos:column="48">==<pos:position pos:line="192" pos:column="50"/></operator><name pos:line="192" pos:column="50">TK_SELECT<pos:position pos:line="192" pos:column="59"/></name></expr></argument> )<pos:position pos:line="192" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="193" pos:column="7">assert<pos:position pos:line="193" pos:column="13"/></name><argument_list pos:line="193" pos:column="13">( <argument><expr><call><name pos:line="193" pos:column="15">ExprHasProperty<pos:position pos:line="193" pos:column="30"/></name><argument_list pos:line="193" pos:column="30">(<argument><expr><name pos:line="193" pos:column="31">pExpr<pos:position pos:line="193" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="38">EP_xIsSelect<pos:position pos:line="193" pos:column="50"/></name></expr></argument>)<pos:position pos:line="193" pos:column="51"/></argument_list></call></expr></argument> )<pos:position pos:line="193" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="54"/></expr_stmt>

      <expr_stmt><expr><name pos:line="195" pos:column="7">pSel<pos:position pos:line="195" pos:column="11"/></name> <operator pos:line="195" pos:column="12">=<pos:position pos:line="195" pos:column="13"/></operator> <name><name pos:line="195" pos:column="14">pExpr<pos:position pos:line="195" pos:column="19"/></name><operator pos:line="195" pos:column="19">-&gt;<pos:position pos:line="195" pos:column="24"/></operator><name pos:line="195" pos:column="21">x<pos:position pos:line="195" pos:column="22"/></name><operator pos:line="195" pos:column="22">.<pos:position pos:line="195" pos:column="23"/></operator><name pos:line="195" pos:column="23">pSelect<pos:position pos:line="195" pos:column="30"/></name></name></expr>;<pos:position pos:line="195" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="196" pos:column="7">nReg<pos:position pos:line="196" pos:column="11"/></name> <operator pos:line="196" pos:column="12">=<pos:position pos:line="196" pos:column="13"/></operator> <ternary><condition><expr><name><name pos:line="196" pos:column="14">pExpr<pos:position pos:line="196" pos:column="19"/></name><operator pos:line="196" pos:column="19">-&gt;<pos:position pos:line="196" pos:column="24"/></operator><name pos:line="196" pos:column="21">op<pos:position pos:line="196" pos:column="23"/></name></name><operator pos:line="196" pos:column="23">==<pos:position pos:line="196" pos:column="25"/></operator><name pos:line="196" pos:column="25">TK_SELECT<pos:position pos:line="196" pos:column="34"/></name></expr> ?<pos:position pos:line="196" pos:column="36"/></condition><then pos:line="196" pos:column="36"> <expr><name><name pos:line="196" pos:column="37">pSel<pos:position pos:line="196" pos:column="41"/></name><operator pos:line="196" pos:column="41">-&gt;<pos:position pos:line="196" pos:column="46"/></operator><name pos:line="196" pos:column="43">pEList<pos:position pos:line="196" pos:column="49"/></name><operator pos:line="196" pos:column="49">-&gt;<pos:position pos:line="196" pos:column="54"/></operator><name pos:line="196" pos:column="51">nExpr<pos:position pos:line="196" pos:column="56"/></name></name></expr> <pos:position pos:line="196" pos:column="57"/></then><else pos:line="196" pos:column="57">: <expr><literal type="number" pos:line="196" pos:column="59">1<pos:position pos:line="196" pos:column="60"/></literal></expr></else></ternary></expr>;<pos:position pos:line="196" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="197" pos:column="7">sqlite3SelectDestInit<pos:position pos:line="197" pos:column="28"/></name><argument_list pos:line="197" pos:column="28">(<argument><expr><operator pos:line="197" pos:column="29">&amp;<pos:position pos:line="197" pos:column="34"/></operator><name pos:line="197" pos:column="30">dest<pos:position pos:line="197" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="197" pos:column="36">0<pos:position pos:line="197" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="197" pos:column="39">pParse<pos:position pos:line="197" pos:column="45"/></name><operator pos:line="197" pos:column="45">-&gt;<pos:position pos:line="197" pos:column="50"/></operator><name pos:line="197" pos:column="47">nMem<pos:position pos:line="197" pos:column="51"/></name></name><operator pos:line="197" pos:column="51">+<pos:position pos:line="197" pos:column="52"/></operator><literal type="number" pos:line="197" pos:column="52">1<pos:position pos:line="197" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="197" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="198" pos:column="7">pParse<pos:position pos:line="198" pos:column="13"/></name><operator pos:line="198" pos:column="13">-&gt;<pos:position pos:line="198" pos:column="18"/></operator><name pos:line="198" pos:column="15">nMem<pos:position pos:line="198" pos:column="19"/></name></name> <operator pos:line="198" pos:column="20">+=<pos:position pos:line="198" pos:column="22"/></operator> <name pos:line="198" pos:column="23">nReg<pos:position pos:line="198" pos:column="27"/></name></expr>;<pos:position pos:line="198" pos:column="28"/></expr_stmt>
      <if pos:line="199" pos:column="7">if<condition pos:line="199" pos:column="9">( <expr><name><name pos:line="199" pos:column="11">pExpr<pos:position pos:line="199" pos:column="16"/></name><operator pos:line="199" pos:column="16">-&gt;<pos:position pos:line="199" pos:column="21"/></operator><name pos:line="199" pos:column="18">op<pos:position pos:line="199" pos:column="20"/></name></name><operator pos:line="199" pos:column="20">==<pos:position pos:line="199" pos:column="22"/></operator><name pos:line="199" pos:column="22">TK_SELECT<pos:position pos:line="199" pos:column="31"/></name></expr> )<pos:position pos:line="199" pos:column="33"/></condition><then><block pos:line="199" pos:column="33">{
        <expr_stmt><expr><name><name pos:line="200" pos:column="9">dest<pos:position pos:line="200" pos:column="13"/></name><operator pos:line="200" pos:column="13">.<pos:position pos:line="200" pos:column="14"/></operator><name pos:line="200" pos:column="14">eDest<pos:position pos:line="200" pos:column="19"/></name></name> <operator pos:line="200" pos:column="20">=<pos:position pos:line="200" pos:column="21"/></operator> <name pos:line="200" pos:column="22">SRT_Mem<pos:position pos:line="200" pos:column="29"/></name></expr>;<pos:position pos:line="200" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="201" pos:column="9">dest<pos:position pos:line="201" pos:column="13"/></name><operator pos:line="201" pos:column="13">.<pos:position pos:line="201" pos:column="14"/></operator><name pos:line="201" pos:column="14">iSdst<pos:position pos:line="201" pos:column="19"/></name></name> <operator pos:line="201" pos:column="20">=<pos:position pos:line="201" pos:column="21"/></operator> <name><name pos:line="201" pos:column="22">dest<pos:position pos:line="201" pos:column="26"/></name><operator pos:line="201" pos:column="26">.<pos:position pos:line="201" pos:column="27"/></operator><name pos:line="201" pos:column="27">iSDParm<pos:position pos:line="201" pos:column="34"/></name></name></expr>;<pos:position pos:line="201" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="202" pos:column="9">dest<pos:position pos:line="202" pos:column="13"/></name><operator pos:line="202" pos:column="13">.<pos:position pos:line="202" pos:column="14"/></operator><name pos:line="202" pos:column="14">nSdst<pos:position pos:line="202" pos:column="19"/></name></name> <operator pos:line="202" pos:column="20">=<pos:position pos:line="202" pos:column="21"/></operator> <name pos:line="202" pos:column="22">nReg<pos:position pos:line="202" pos:column="26"/></name></expr>;<pos:position pos:line="202" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="203" pos:column="9">sqlite3VdbeAddOp3<pos:position pos:line="203" pos:column="26"/></name><argument_list pos:line="203" pos:column="26">(<argument><expr><name pos:line="203" pos:column="27">v<pos:position pos:line="203" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="30">OP_Null<pos:position pos:line="203" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="203" pos:column="39">0<pos:position pos:line="203" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="203" pos:column="42">dest<pos:position pos:line="203" pos:column="46"/></name><operator pos:line="203" pos:column="46">.<pos:position pos:line="203" pos:column="47"/></operator><name pos:line="203" pos:column="47">iSDParm<pos:position pos:line="203" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="203" pos:column="56">dest<pos:position pos:line="203" pos:column="60"/></name><operator pos:line="203" pos:column="60">.<pos:position pos:line="203" pos:column="61"/></operator><name pos:line="203" pos:column="61">iSDParm<pos:position pos:line="203" pos:column="68"/></name></name><operator pos:line="203" pos:column="68">+<pos:position pos:line="203" pos:column="69"/></operator><name pos:line="203" pos:column="69">nReg<pos:position pos:line="203" pos:column="73"/></name><operator pos:line="203" pos:column="73">-<pos:position pos:line="203" pos:column="74"/></operator><literal type="number" pos:line="203" pos:column="74">1<pos:position pos:line="203" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="204" pos:column="9">VdbeComment<pos:position pos:line="204" pos:column="20"/></name><argument_list pos:line="204" pos:column="20">(<argument><expr><operator pos:line="204" pos:column="21">(<pos:position pos:line="204" pos:column="22"/></operator><name pos:line="204" pos:column="22">v<pos:position pos:line="204" pos:column="23"/></name><operator pos:line="204" pos:column="23">,<pos:position pos:line="204" pos:column="24"/></operator> <literal type="string" pos:line="204" pos:column="25">"Init subquery result"<pos:position pos:line="204" pos:column="47"/></literal><operator pos:line="204" pos:column="47">)<pos:position pos:line="204" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="204" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="50"/></expr_stmt>
      }<pos:position pos:line="205" pos:column="8"/></block></then><else pos:line="205" pos:column="8">else<block pos:line="205" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="206" pos:column="9">dest<pos:position pos:line="206" pos:column="13"/></name><operator pos:line="206" pos:column="13">.<pos:position pos:line="206" pos:column="14"/></operator><name pos:line="206" pos:column="14">eDest<pos:position pos:line="206" pos:column="19"/></name></name> <operator pos:line="206" pos:column="20">=<pos:position pos:line="206" pos:column="21"/></operator> <name pos:line="206" pos:column="22">SRT_Exists<pos:position pos:line="206" pos:column="32"/></name></expr>;<pos:position pos:line="206" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="207" pos:column="9">sqlite3VdbeAddOp2<pos:position pos:line="207" pos:column="26"/></name><argument_list pos:line="207" pos:column="26">(<argument><expr><name pos:line="207" pos:column="27">v<pos:position pos:line="207" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="30">OP_Integer<pos:position pos:line="207" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="207" pos:column="42">0<pos:position pos:line="207" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="207" pos:column="45">dest<pos:position pos:line="207" pos:column="49"/></name><operator pos:line="207" pos:column="49">.<pos:position pos:line="207" pos:column="50"/></operator><name pos:line="207" pos:column="50">iSDParm<pos:position pos:line="207" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="208" pos:column="9">VdbeComment<pos:position pos:line="208" pos:column="20"/></name><argument_list pos:line="208" pos:column="20">(<argument><expr><operator pos:line="208" pos:column="21">(<pos:position pos:line="208" pos:column="22"/></operator><name pos:line="208" pos:column="22">v<pos:position pos:line="208" pos:column="23"/></name><operator pos:line="208" pos:column="23">,<pos:position pos:line="208" pos:column="24"/></operator> <literal type="string" pos:line="208" pos:column="25">"Init EXISTS result"<pos:position pos:line="208" pos:column="45"/></literal><operator pos:line="208" pos:column="45">)<pos:position pos:line="208" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="208" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="48"/></expr_stmt>
      }<pos:position pos:line="209" pos:column="8"/></block></else></if>
      <expr_stmt><expr><call><name pos:line="210" pos:column="7">sqlite3ExprDelete<pos:position pos:line="210" pos:column="24"/></name><argument_list pos:line="210" pos:column="24">(<argument><expr><name><name pos:line="210" pos:column="25">pParse<pos:position pos:line="210" pos:column="31"/></name><operator pos:line="210" pos:column="31">-&gt;<pos:position pos:line="210" pos:column="36"/></operator><name pos:line="210" pos:column="33">db<pos:position pos:line="210" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="210" pos:column="37">pSel<pos:position pos:line="210" pos:column="41"/></name><operator pos:line="210" pos:column="41">-&gt;<pos:position pos:line="210" pos:column="46"/></operator><name pos:line="210" pos:column="43">pLimit<pos:position pos:line="210" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="210" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="211" pos:column="7">pSel<pos:position pos:line="211" pos:column="11"/></name><operator pos:line="211" pos:column="11">-&gt;<pos:position pos:line="211" pos:column="16"/></operator><name pos:line="211" pos:column="13">pLimit<pos:position pos:line="211" pos:column="19"/></name></name> <operator pos:line="211" pos:column="20">=<pos:position pos:line="211" pos:column="21"/></operator> <call><name pos:line="211" pos:column="22">sqlite3ExprAlloc<pos:position pos:line="211" pos:column="38"/></name><argument_list pos:line="211" pos:column="38">(<argument><expr><name><name pos:line="211" pos:column="39">pParse<pos:position pos:line="211" pos:column="45"/></name><operator pos:line="211" pos:column="45">-&gt;<pos:position pos:line="211" pos:column="50"/></operator><name pos:line="211" pos:column="47">db<pos:position pos:line="211" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="211" pos:column="51">TK_INTEGER<pos:position pos:line="211" pos:column="61"/></name></expr></argument>,
                                  <argument><expr><operator pos:line="212" pos:column="35">&amp;<pos:position pos:line="212" pos:column="40"/></operator><name><name pos:line="212" pos:column="36">sqlite3IntTokens<pos:position pos:line="212" pos:column="52"/></name><index pos:line="212" pos:column="52">[<expr><literal type="number" pos:line="212" pos:column="53">1<pos:position pos:line="212" pos:column="54"/></literal></expr>]<pos:position pos:line="212" pos:column="55"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="212" pos:column="57">0<pos:position pos:line="212" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="213" pos:column="7">pSel<pos:position pos:line="213" pos:column="11"/></name><operator pos:line="213" pos:column="11">-&gt;<pos:position pos:line="213" pos:column="16"/></operator><name pos:line="213" pos:column="13">iLimit<pos:position pos:line="213" pos:column="19"/></name></name> <operator pos:line="213" pos:column="20">=<pos:position pos:line="213" pos:column="21"/></operator> <literal type="number" pos:line="213" pos:column="22">0<pos:position pos:line="213" pos:column="23"/></literal></expr>;<pos:position pos:line="213" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="214" pos:column="7">pSel<pos:position pos:line="214" pos:column="11"/></name><operator pos:line="214" pos:column="11">-&gt;<pos:position pos:line="214" pos:column="16"/></operator><name pos:line="214" pos:column="13">selFlags<pos:position pos:line="214" pos:column="21"/></name></name> <operator pos:line="214" pos:column="22">&amp;=<pos:position pos:line="214" pos:column="28"/></operator> <operator pos:line="214" pos:column="25">~<pos:position pos:line="214" pos:column="26"/></operator><name pos:line="214" pos:column="26">SF_MultiValue<pos:position pos:line="214" pos:column="39"/></name></expr>;<pos:position pos:line="214" pos:column="40"/></expr_stmt>
      <if pos:line="215" pos:column="7">if<condition pos:line="215" pos:column="9">( <expr><call><name pos:line="215" pos:column="11">sqlite3Select<pos:position pos:line="215" pos:column="24"/></name><argument_list pos:line="215" pos:column="24">(<argument><expr><name pos:line="215" pos:column="25">pParse<pos:position pos:line="215" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="33">pSel<pos:position pos:line="215" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="215" pos:column="39">&amp;<pos:position pos:line="215" pos:column="44"/></operator><name pos:line="215" pos:column="40">dest<pos:position pos:line="215" pos:column="44"/></name></expr></argument>)<pos:position pos:line="215" pos:column="45"/></argument_list></call></expr> )<pos:position pos:line="215" pos:column="47"/></condition><then><block pos:line="215" pos:column="47">{
        <return pos:line="216" pos:column="9">return <expr><literal type="number" pos:line="216" pos:column="16">0<pos:position pos:line="216" pos:column="17"/></literal></expr>;<pos:position pos:line="216" pos:column="18"/></return>
      }<pos:position pos:line="217" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="218" pos:column="7">rReg<pos:position pos:line="218" pos:column="11"/></name> <operator pos:line="218" pos:column="12">=<pos:position pos:line="218" pos:column="13"/></operator> <name><name pos:line="218" pos:column="14">dest<pos:position pos:line="218" pos:column="18"/></name><operator pos:line="218" pos:column="18">.<pos:position pos:line="218" pos:column="19"/></operator><name pos:line="218" pos:column="19">iSDParm<pos:position pos:line="218" pos:column="26"/></name></name></expr>;<pos:position pos:line="218" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="219" pos:column="7">ExprSetVVAProperty<pos:position pos:line="219" pos:column="25"/></name><argument_list pos:line="219" pos:column="25">(<argument><expr><name pos:line="219" pos:column="26">pExpr<pos:position pos:line="219" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="33">EP_NoReduce<pos:position pos:line="219" pos:column="44"/></name></expr></argument>)<pos:position pos:line="219" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="46"/></expr_stmt>
      <break pos:line="220" pos:column="7">break;<pos:position pos:line="220" pos:column="13"/></break>
    }<pos:position pos:line="221" pos:column="6"/></block>
  }<pos:position pos:line="222" pos:column="4"/></block></switch>

  <if pos:line="224" pos:column="3">if<condition pos:line="224" pos:column="5">( <expr><name pos:line="224" pos:column="7">rHasNullFlag<pos:position pos:line="224" pos:column="19"/></name></expr> )<pos:position pos:line="224" pos:column="21"/></condition><then><block pos:line="224" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="225" pos:column="5">sqlite3SetHasNullFlag<pos:position pos:line="225" pos:column="26"/></name><argument_list pos:line="225" pos:column="26">(<argument><expr><name pos:line="225" pos:column="27">v<pos:position pos:line="225" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="225" pos:column="30">pExpr<pos:position pos:line="225" pos:column="35"/></name><operator pos:line="225" pos:column="35">-&gt;<pos:position pos:line="225" pos:column="40"/></operator><name pos:line="225" pos:column="37">iTable<pos:position pos:line="225" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="45">rHasNullFlag<pos:position pos:line="225" pos:column="57"/></name></expr></argument>)<pos:position pos:line="225" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="59"/></expr_stmt>
  }<pos:position pos:line="226" pos:column="4"/></block></then></if>

  <if pos:line="228" pos:column="3">if<condition pos:line="228" pos:column="5">( <expr><name pos:line="228" pos:column="7">jmpIfDynamic<pos:position pos:line="228" pos:column="19"/></name><operator pos:line="228" pos:column="19">&gt;=<pos:position pos:line="228" pos:column="24"/></operator><literal type="number" pos:line="228" pos:column="21">0<pos:position pos:line="228" pos:column="22"/></literal></expr> )<pos:position pos:line="228" pos:column="24"/></condition><then><block pos:line="228" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="229" pos:column="5">sqlite3VdbeJumpHere<pos:position pos:line="229" pos:column="24"/></name><argument_list pos:line="229" pos:column="24">(<argument><expr><name pos:line="229" pos:column="25">v<pos:position pos:line="229" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="28">jmpIfDynamic<pos:position pos:line="229" pos:column="40"/></name></expr></argument>)<pos:position pos:line="229" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="230" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="231" pos:column="3">sqlite3ExprCachePop<pos:position pos:line="231" pos:column="22"/></name><argument_list pos:line="231" pos:column="22">(<argument><expr><name pos:line="231" pos:column="23">pParse<pos:position pos:line="231" pos:column="29"/></name></expr></argument>)<pos:position pos:line="231" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="31"/></expr_stmt>

  <return pos:line="233" pos:column="3">return <expr><name pos:line="233" pos:column="10">rReg<pos:position pos:line="233" pos:column="14"/></name></expr>;<pos:position pos:line="233" pos:column="15"/></return>
}<pos:position pos:line="234" pos:column="2"/></block></function></unit>

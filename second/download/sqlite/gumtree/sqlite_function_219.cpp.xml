<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_219.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sqlite3_blob_open<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(
  <parameter><decl><type><name pos:line="2" pos:column="3">sqlite3<pos:position pos:line="2" pos:column="10"/></name><modifier pos:line="2" pos:column="10">*<pos:position pos:line="2" pos:column="11"/></modifier></type> <name pos:line="2" pos:column="12">db<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>,            <comment type="block" pos:line="2" pos:column="27">/* The database connection */</comment>
  <parameter><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">zDb<pos:position pos:line="3" pos:column="18"/></name></decl></parameter>,        <comment type="block" pos:line="3" pos:column="27">/* The attached database containing the blob */</comment>
  <parameter><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">zTable<pos:position pos:line="4" pos:column="21"/></name></decl></parameter>,     <comment type="block" pos:line="4" pos:column="27">/* The table containing the blob */</comment>
  <parameter><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">zColumn<pos:position pos:line="5" pos:column="22"/></name></decl></parameter>,    <comment type="block" pos:line="5" pos:column="27">/* The column containing the blob */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">sqlite_int64<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">iRow<pos:position pos:line="6" pos:column="20"/></name></decl></parameter>,      <comment type="block" pos:line="6" pos:column="27">/* The row containing the glob */</comment>
  <parameter><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">wrFlag<pos:position pos:line="7" pos:column="13"/></name></decl></parameter>,             <comment type="block" pos:line="7" pos:column="27">/* True -&gt; read/write access, false -&gt; read-only */</comment>
  <parameter><decl><type><name pos:line="8" pos:column="3">sqlite3_blob<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier><modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">ppBlob<pos:position pos:line="8" pos:column="24"/></name></decl></parameter>   <comment type="block" pos:line="8" pos:column="27">/* Handle for accessing the blob returned here */</comment>
)<pos:position pos:line="9" pos:column="2"/></parameter_list><block pos:line="9" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">nAttempt<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">iCol<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>               <comment type="block" pos:line="11" pos:column="27">/* Index of zColumn in row-record */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">rc<pos:position pos:line="12" pos:column="9"/></name> <init pos:line="12" pos:column="10">= <expr><name pos:line="12" pos:column="12">SQLITE_OK<pos:position pos:line="12" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">zErr<pos:position pos:line="13" pos:column="13"/></name> <init pos:line="13" pos:column="14">= <expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">Table<pos:position pos:line="14" pos:column="8"/></name> <modifier pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></modifier></type><name pos:line="14" pos:column="10">pTab<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">Incrblob<pos:position pos:line="15" pos:column="11"/></name> <modifier pos:line="15" pos:column="12">*<pos:position pos:line="15" pos:column="13"/></modifier></type><name pos:line="15" pos:column="13">pBlob<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><literal type="number" pos:line="15" pos:column="21">0<pos:position pos:line="15" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">Parse<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">sParse<pos:position pos:line="16" pos:column="15"/></name></decl>;<pos:position pos:line="16" pos:column="16"/></decl_stmt>

<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">SQLITE_ENABLE_API_ARMOR<pos:position pos:line="18" pos:column="31"/></name></cpp:ifdef>
  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">( <expr><name pos:line="19" pos:column="7">ppBlob<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">==<pos:position pos:line="19" pos:column="15"/></operator><literal type="number" pos:line="19" pos:column="15">0<pos:position pos:line="19" pos:column="16"/></literal></expr> )<pos:position pos:line="19" pos:column="18"/></condition><then><block pos:line="19" pos:column="18">{
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">SQLITE_MISUSE_BKPT<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><operator pos:line="23" pos:column="3">*<pos:position pos:line="23" pos:column="4"/></operator><name pos:line="23" pos:column="4">ppBlob<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <literal type="number" pos:line="23" pos:column="13">0<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt>
<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">SQLITE_ENABLE_API_ARMOR<pos:position pos:line="24" pos:column="31"/></name></cpp:ifdef>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">( <expr><operator pos:line="25" pos:column="7">!<pos:position pos:line="25" pos:column="8"/></operator><call><name pos:line="25" pos:column="8">sqlite3SafetyCheckOk<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">db<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call> <operator pos:line="25" pos:column="33">||<pos:position pos:line="25" pos:column="35"/></operator> <name pos:line="25" pos:column="36">zTable<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">==<pos:position pos:line="25" pos:column="44"/></operator><literal type="number" pos:line="25" pos:column="44">0<pos:position pos:line="25" pos:column="45"/></literal></expr> )<pos:position pos:line="25" pos:column="47"/></condition><then><block pos:line="25" pos:column="47">{
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">SQLITE_MISUSE_BKPT<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name pos:line="29" pos:column="3">wrFlag<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <operator pos:line="29" pos:column="12">!<pos:position pos:line="29" pos:column="13"/></operator><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">wrFlag<pos:position pos:line="29" pos:column="20"/></name></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>                <comment type="block" pos:line="29" pos:column="37">/* wrFlag = (wrFlag ? 1 : 0); */</comment>

  <expr_stmt><expr><call><name pos:line="31" pos:column="3">sqlite3_mutex_enter<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name><name pos:line="31" pos:column="23">db<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">mutex<pos:position pos:line="31" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name pos:line="33" pos:column="3">pBlob<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <operator pos:line="33" pos:column="11">(<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="12">Incrblob<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">*<pos:position pos:line="33" pos:column="22"/></operator><operator pos:line="33" pos:column="22">)<pos:position pos:line="33" pos:column="23"/></operator><call><name pos:line="33" pos:column="23">sqlite3DbMallocZero<pos:position pos:line="33" pos:column="42"/></name><argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">db<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="47">sizeof<argument_list pos:line="33" pos:column="53">(<argument><expr><name pos:line="33" pos:column="54">Incrblob<pos:position pos:line="33" pos:column="62"/></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
  <do pos:line="34" pos:column="3">do <block pos:line="34" pos:column="6">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">memset<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><operator pos:line="35" pos:column="12">&amp;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="13">sParse<pos:position pos:line="35" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="21">0<pos:position pos:line="35" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="24">sizeof<argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">Parse<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">( <expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">pBlob<pos:position pos:line="36" pos:column="15"/></name></expr> )<pos:position pos:line="36" pos:column="17"/></condition><then pos:line="36" pos:column="17"> <block type="pseudo"><goto pos:line="36" pos:column="18">goto <name pos:line="36" pos:column="23">blob_open_out<pos:position pos:line="36" pos:column="36"/></name>;<pos:position pos:line="36" pos:column="37"/></goto></block></then></if>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">sParse<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">.<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="12">db<pos:position pos:line="37" pos:column="14"/></name></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">db<pos:position pos:line="37" pos:column="19"/></name></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">sqlite3DbFree<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><name pos:line="38" pos:column="19">db<pos:position pos:line="38" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="23">zErr<pos:position pos:line="38" pos:column="27"/></name></expr></argument>)<pos:position pos:line="38" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">zErr<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <literal type="number" pos:line="39" pos:column="12">0<pos:position pos:line="39" pos:column="13"/></literal></expr>;<pos:position pos:line="39" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">sqlite3BtreeEnterAll<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">db<pos:position pos:line="41" pos:column="28"/></name></expr></argument>)<pos:position pos:line="41" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">pTab<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <call><name pos:line="42" pos:column="12">sqlite3LocateTable<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><operator pos:line="42" pos:column="31">&amp;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="32">sParse<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="40">0<pos:position pos:line="42" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="43">zTable<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="51">zDb<pos:position pos:line="42" pos:column="54"/></name></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="56"/></expr_stmt>
    <if pos:line="43" pos:column="5">if<condition pos:line="43" pos:column="7">( <expr><name pos:line="43" pos:column="9">pTab<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">&amp;&amp;<pos:position pos:line="43" pos:column="24"/></operator> <call><name pos:line="43" pos:column="17">IsVirtual<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">pTab<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr> )<pos:position pos:line="43" pos:column="34"/></condition><then><block pos:line="43" pos:column="34">{
      <expr_stmt><expr><name pos:line="44" pos:column="7">pTab<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <literal type="number" pos:line="44" pos:column="14">0<pos:position pos:line="44" pos:column="15"/></literal></expr>;<pos:position pos:line="44" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">sqlite3ErrorMsg<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><operator pos:line="45" pos:column="23">&amp;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="24">sParse<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="32">"cannot open virtual table: %s"<pos:position pos:line="45" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="65">zTable<pos:position pos:line="45" pos:column="71"/></name></expr></argument>)<pos:position pos:line="45" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">( <expr><name pos:line="47" pos:column="9">pTab<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">&amp;&amp;<pos:position pos:line="47" pos:column="24"/></operator> <operator pos:line="47" pos:column="17">!<pos:position pos:line="47" pos:column="18"/></operator><call><name pos:line="47" pos:column="18">HasRowid<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name pos:line="47" pos:column="27">pTab<pos:position pos:line="47" pos:column="31"/></name></expr></argument>)<pos:position pos:line="47" pos:column="32"/></argument_list></call></expr> )<pos:position pos:line="47" pos:column="34"/></condition><then><block pos:line="47" pos:column="34">{
      <expr_stmt><expr><name pos:line="48" pos:column="7">pTab<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <literal type="number" pos:line="48" pos:column="14">0<pos:position pos:line="48" pos:column="15"/></literal></expr>;<pos:position pos:line="48" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">sqlite3ErrorMsg<pos:position pos:line="49" pos:column="22"/></name><argument_list pos:line="49" pos:column="22">(<argument><expr><operator pos:line="49" pos:column="23">&amp;<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="24">sParse<pos:position pos:line="49" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="32">"cannot open table without rowid: %s"<pos:position pos:line="49" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="71">zTable<pos:position pos:line="49" pos:column="77"/></name></expr></argument>)<pos:position pos:line="49" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef<pos:position pos:line="51" pos:column="8"/></cpp:directive> <name pos:line="51" pos:column="9">SQLITE_OMIT_VIEW<pos:position pos:line="51" pos:column="25"/></name></cpp:ifndef>
    <if pos:line="52" pos:column="5">if<condition pos:line="52" pos:column="7">( <expr><name pos:line="52" pos:column="9">pTab<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">&amp;&amp;<pos:position pos:line="52" pos:column="24"/></operator> <name><name pos:line="52" pos:column="17">pTab<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">-&gt;<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="23">pSelect<pos:position pos:line="52" pos:column="30"/></name></name></expr> )<pos:position pos:line="52" pos:column="32"/></condition><then><block pos:line="52" pos:column="32">{
      <expr_stmt><expr><name pos:line="53" pos:column="7">pTab<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <literal type="number" pos:line="53" pos:column="14">0<pos:position pos:line="53" pos:column="15"/></literal></expr>;<pos:position pos:line="53" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">sqlite3ErrorMsg<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><operator pos:line="54" pos:column="23">&amp;<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="24">sParse<pos:position pos:line="54" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="32">"cannot open view: %s"<pos:position pos:line="54" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="56">zTable<pos:position pos:line="54" pos:column="62"/></name></expr></argument>)<pos:position pos:line="54" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">( <expr><operator pos:line="57" pos:column="9">!<pos:position pos:line="57" pos:column="10"/></operator><name pos:line="57" pos:column="10">pTab<pos:position pos:line="57" pos:column="14"/></name></expr> )<pos:position pos:line="57" pos:column="16"/></condition><then><block pos:line="57" pos:column="16">{
      <if pos:line="58" pos:column="7">if<condition pos:line="58" pos:column="9">( <expr><name><name pos:line="58" pos:column="11">sParse<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">.<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="18">zErrMsg<pos:position pos:line="58" pos:column="25"/></name></name></expr> )<pos:position pos:line="58" pos:column="27"/></condition><then><block pos:line="58" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">sqlite3DbFree<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">db<pos:position pos:line="59" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="27">zErr<pos:position pos:line="59" pos:column="31"/></name></expr></argument>)<pos:position pos:line="59" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="60" pos:column="9">zErr<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <name><name pos:line="60" pos:column="16">sParse<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">.<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="23">zErrMsg<pos:position pos:line="60" pos:column="30"/></name></name></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">sParse<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">.<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">zErrMsg<pos:position pos:line="61" pos:column="23"/></name></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <literal type="number" pos:line="61" pos:column="26">0<pos:position pos:line="61" pos:column="27"/></literal></expr>;<pos:position pos:line="61" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="62" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="63" pos:column="7">rc<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">=<pos:position pos:line="63" pos:column="11"/></operator> <name pos:line="63" pos:column="12">SQLITE_ERROR<pos:position pos:line="63" pos:column="24"/></name></expr>;<pos:position pos:line="63" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">sqlite3BtreeLeaveAll<pos:position pos:line="64" pos:column="27"/></name><argument_list pos:line="64" pos:column="27">(<argument><expr><name pos:line="64" pos:column="28">db<pos:position pos:line="64" pos:column="30"/></name></expr></argument>)<pos:position pos:line="64" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="32"/></expr_stmt>
      <goto pos:line="65" pos:column="7">goto <name pos:line="65" pos:column="12">blob_open_out<pos:position pos:line="65" pos:column="25"/></name>;<pos:position pos:line="65" pos:column="26"/></goto>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">pBlob<pos:position pos:line="67" pos:column="10"/></name><operator pos:line="67" pos:column="10">-&gt;<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="12">pTab<pos:position pos:line="67" pos:column="16"/></name></name> <operator pos:line="67" pos:column="17">=<pos:position pos:line="67" pos:column="18"/></operator> <name pos:line="67" pos:column="19">pTab<pos:position pos:line="67" pos:column="23"/></name></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="68" pos:column="5">pBlob<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">-&gt;<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="12">zDb<pos:position pos:line="68" pos:column="15"/></name></name> <operator pos:line="68" pos:column="16">=<pos:position pos:line="68" pos:column="17"/></operator> <name><name pos:line="68" pos:column="18">db<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">-&gt;<pos:position pos:line="68" pos:column="25"/></operator><name pos:line="68" pos:column="22">aDb<pos:position pos:line="68" pos:column="25"/></name><index pos:line="68" pos:column="25">[<expr><call><name pos:line="68" pos:column="26">sqlite3SchemaToIndex<pos:position pos:line="68" pos:column="46"/></name><argument_list pos:line="68" pos:column="46">(<argument><expr><name pos:line="68" pos:column="47">db<pos:position pos:line="68" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="51">pTab<pos:position pos:line="68" pos:column="55"/></name><operator pos:line="68" pos:column="55">-&gt;<pos:position pos:line="68" pos:column="60"/></operator><name pos:line="68" pos:column="57">pSchema<pos:position pos:line="68" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="65"/></argument_list></call></expr>]<pos:position pos:line="68" pos:column="66"/></index></name><operator pos:line="68" pos:column="66">.<pos:position pos:line="68" pos:column="67"/></operator><name pos:line="68" pos:column="67">zDbSName<pos:position pos:line="68" pos:column="75"/></name></expr>;<pos:position pos:line="68" pos:column="76"/></expr_stmt>

    <comment type="block" pos:line="70" pos:column="5">/* Now search pTab for the exact column. */</comment>
    <for pos:line="71" pos:column="5">for<control pos:line="71" pos:column="8">(<init><expr><name pos:line="71" pos:column="9">iCol<pos:position pos:line="71" pos:column="13"/></name><operator pos:line="71" pos:column="13">=<pos:position pos:line="71" pos:column="14"/></operator><literal type="number" pos:line="71" pos:column="14">0<pos:position pos:line="71" pos:column="15"/></literal></expr>;<pos:position pos:line="71" pos:column="16"/></init> <condition><expr><name pos:line="71" pos:column="17">iCol<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">&lt;<pos:position pos:line="71" pos:column="25"/></operator><name><name pos:line="71" pos:column="22">pTab<pos:position pos:line="71" pos:column="26"/></name><operator pos:line="71" pos:column="26">-&gt;<pos:position pos:line="71" pos:column="31"/></operator><name pos:line="71" pos:column="28">nCol<pos:position pos:line="71" pos:column="32"/></name></name></expr>;<pos:position pos:line="71" pos:column="33"/></condition> <incr><expr><name pos:line="71" pos:column="34">iCol<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">++<pos:position pos:line="71" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="71" pos:column="41"/></control> <block pos:line="71" pos:column="42">{
      <if pos:line="72" pos:column="7">if<condition pos:line="72" pos:column="9">( <expr><call><name pos:line="72" pos:column="11">sqlite3StrICmp<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><name><name pos:line="72" pos:column="26">pTab<pos:position pos:line="72" pos:column="30"/></name><operator pos:line="72" pos:column="30">-&gt;<pos:position pos:line="72" pos:column="35"/></operator><name pos:line="72" pos:column="32">aCol<pos:position pos:line="72" pos:column="36"/></name><index pos:line="72" pos:column="36">[<expr><name pos:line="72" pos:column="37">iCol<pos:position pos:line="72" pos:column="41"/></name></expr>]<pos:position pos:line="72" pos:column="42"/></index></name><operator pos:line="72" pos:column="42">.<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="43">zName<pos:position pos:line="72" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="50">zColumn<pos:position pos:line="72" pos:column="57"/></name></expr></argument>)<pos:position pos:line="72" pos:column="58"/></argument_list></call><operator pos:line="72" pos:column="58">==<pos:position pos:line="72" pos:column="60"/></operator><literal type="number" pos:line="72" pos:column="60">0<pos:position pos:line="72" pos:column="61"/></literal></expr> )<pos:position pos:line="72" pos:column="63"/></condition><then><block pos:line="72" pos:column="63">{
        <break pos:line="73" pos:column="9">break;<pos:position pos:line="73" pos:column="15"/></break>
      }<pos:position pos:line="74" pos:column="8"/></block></then></if>
    }<pos:position pos:line="75" pos:column="6"/></block></for>
    <if pos:line="76" pos:column="5">if<condition pos:line="76" pos:column="7">( <expr><name pos:line="76" pos:column="9">iCol<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">==<pos:position pos:line="76" pos:column="15"/></operator><name><name pos:line="76" pos:column="15">pTab<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">-&gt;<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="21">nCol<pos:position pos:line="76" pos:column="25"/></name></name></expr> )<pos:position pos:line="76" pos:column="27"/></condition><then><block pos:line="76" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">sqlite3DbFree<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><name pos:line="77" pos:column="21">db<pos:position pos:line="77" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="25">zErr<pos:position pos:line="77" pos:column="29"/></name></expr></argument>)<pos:position pos:line="77" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="78" pos:column="7">zErr<pos:position pos:line="78" pos:column="11"/></name> <operator pos:line="78" pos:column="12">=<pos:position pos:line="78" pos:column="13"/></operator> <call><name pos:line="78" pos:column="14">sqlite3MPrintf<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><name pos:line="78" pos:column="29">db<pos:position pos:line="78" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="33">"no such column: \"%s\""<pos:position pos:line="78" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="59">zColumn<pos:position pos:line="78" pos:column="66"/></name></expr></argument>)<pos:position pos:line="78" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><name pos:line="79" pos:column="7">rc<pos:position pos:line="79" pos:column="9"/></name> <operator pos:line="79" pos:column="10">=<pos:position pos:line="79" pos:column="11"/></operator> <name pos:line="79" pos:column="12">SQLITE_ERROR<pos:position pos:line="79" pos:column="24"/></name></expr>;<pos:position pos:line="79" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">sqlite3BtreeLeaveAll<pos:position pos:line="80" pos:column="27"/></name><argument_list pos:line="80" pos:column="27">(<argument><expr><name pos:line="80" pos:column="28">db<pos:position pos:line="80" pos:column="30"/></name></expr></argument>)<pos:position pos:line="80" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="32"/></expr_stmt>
      <goto pos:line="81" pos:column="7">goto <name pos:line="81" pos:column="12">blob_open_out<pos:position pos:line="81" pos:column="25"/></name>;<pos:position pos:line="81" pos:column="26"/></goto>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="84" pos:column="5">/* If the value is being opened for writing, check that the
    ** column is not indexed, and that it is not part of a foreign key. 
    */</comment>
    <if pos:line="87" pos:column="5">if<condition pos:line="87" pos:column="7">( <expr><name pos:line="87" pos:column="9">wrFlag<pos:position pos:line="87" pos:column="15"/></name></expr> )<pos:position pos:line="87" pos:column="17"/></condition><then><block pos:line="87" pos:column="17">{
      <decl_stmt><decl><type><specifier pos:line="88" pos:column="7">const<pos:position pos:line="88" pos:column="12"/></specifier> <name pos:line="88" pos:column="13">char<pos:position pos:line="88" pos:column="17"/></name> <modifier pos:line="88" pos:column="18">*<pos:position pos:line="88" pos:column="19"/></modifier></type><name pos:line="88" pos:column="19">zFault<pos:position pos:line="88" pos:column="25"/></name> <init pos:line="88" pos:column="26">= <expr><literal type="number" pos:line="88" pos:column="28">0<pos:position pos:line="88" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="88" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="89" pos:column="7">Index<pos:position pos:line="89" pos:column="12"/></name> <modifier pos:line="89" pos:column="13">*<pos:position pos:line="89" pos:column="14"/></modifier></type><name pos:line="89" pos:column="14">pIdx<pos:position pos:line="89" pos:column="18"/></name></decl>;<pos:position pos:line="89" pos:column="19"/></decl_stmt>
<cpp:ifndef pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">ifndef<pos:position pos:line="90" pos:column="8"/></cpp:directive> <name pos:line="90" pos:column="9">SQLITE_OMIT_FOREIGN_KEY<pos:position pos:line="90" pos:column="32"/></name></cpp:ifndef>
      <if pos:line="91" pos:column="7">if<condition pos:line="91" pos:column="9">( <expr><name><name pos:line="91" pos:column="11">db<pos:position pos:line="91" pos:column="13"/></name><operator pos:line="91" pos:column="13">-&gt;<pos:position pos:line="91" pos:column="18"/></operator><name pos:line="91" pos:column="15">flags<pos:position pos:line="91" pos:column="20"/></name></name><operator pos:line="91" pos:column="20">&amp;<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="21">SQLITE_ForeignKeys<pos:position pos:line="91" pos:column="39"/></name></expr> )<pos:position pos:line="91" pos:column="41"/></condition><then><block pos:line="91" pos:column="41">{
        <comment type="block" pos:line="92" pos:column="9">/* Check that the column is not part of an FK child key definition. It
        ** is not necessary to check if it is part of a parent key, as parent
        ** key columns must be indexed. The check below will pick up this 
        ** case.  */</comment>
        <decl_stmt><decl><type><name pos:line="96" pos:column="9">FKey<pos:position pos:line="96" pos:column="13"/></name> <modifier pos:line="96" pos:column="14">*<pos:position pos:line="96" pos:column="15"/></modifier></type><name pos:line="96" pos:column="15">pFKey<pos:position pos:line="96" pos:column="20"/></name></decl>;<pos:position pos:line="96" pos:column="21"/></decl_stmt>
        <for pos:line="97" pos:column="9">for<control pos:line="97" pos:column="12">(<init><expr><name pos:line="97" pos:column="13">pFKey<pos:position pos:line="97" pos:column="18"/></name><operator pos:line="97" pos:column="18">=<pos:position pos:line="97" pos:column="19"/></operator><name><name pos:line="97" pos:column="19">pTab<pos:position pos:line="97" pos:column="23"/></name><operator pos:line="97" pos:column="23">-&gt;<pos:position pos:line="97" pos:column="28"/></operator><name pos:line="97" pos:column="25">pFKey<pos:position pos:line="97" pos:column="30"/></name></name></expr>;<pos:position pos:line="97" pos:column="31"/></init> <condition><expr><name pos:line="97" pos:column="32">pFKey<pos:position pos:line="97" pos:column="37"/></name></expr>;<pos:position pos:line="97" pos:column="38"/></condition> <incr><expr><name pos:line="97" pos:column="39">pFKey<pos:position pos:line="97" pos:column="44"/></name><operator pos:line="97" pos:column="44">=<pos:position pos:line="97" pos:column="45"/></operator><name><name pos:line="97" pos:column="45">pFKey<pos:position pos:line="97" pos:column="50"/></name><operator pos:line="97" pos:column="50">-&gt;<pos:position pos:line="97" pos:column="55"/></operator><name pos:line="97" pos:column="52">pNextFrom<pos:position pos:line="97" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="97" pos:column="62"/></control><block pos:line="97" pos:column="62">{
          <decl_stmt><decl><type><name pos:line="98" pos:column="11">int<pos:position pos:line="98" pos:column="14"/></name></type> <name pos:line="98" pos:column="15">j<pos:position pos:line="98" pos:column="16"/></name></decl>;<pos:position pos:line="98" pos:column="17"/></decl_stmt>
          <for pos:line="99" pos:column="11">for<control pos:line="99" pos:column="14">(<init><expr><name pos:line="99" pos:column="15">j<pos:position pos:line="99" pos:column="16"/></name><operator pos:line="99" pos:column="16">=<pos:position pos:line="99" pos:column="17"/></operator><literal type="number" pos:line="99" pos:column="17">0<pos:position pos:line="99" pos:column="18"/></literal></expr>;<pos:position pos:line="99" pos:column="19"/></init> <condition><expr><name pos:line="99" pos:column="20">j<pos:position pos:line="99" pos:column="21"/></name><operator pos:line="99" pos:column="21">&lt;<pos:position pos:line="99" pos:column="25"/></operator><name><name pos:line="99" pos:column="22">pFKey<pos:position pos:line="99" pos:column="27"/></name><operator pos:line="99" pos:column="27">-&gt;<pos:position pos:line="99" pos:column="32"/></operator><name pos:line="99" pos:column="29">nCol<pos:position pos:line="99" pos:column="33"/></name></name></expr>;<pos:position pos:line="99" pos:column="34"/></condition> <incr><expr><name pos:line="99" pos:column="35">j<pos:position pos:line="99" pos:column="36"/></name><operator pos:line="99" pos:column="36">++<pos:position pos:line="99" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="99" pos:column="39"/></control><block pos:line="99" pos:column="39">{
            <if pos:line="100" pos:column="13">if<condition pos:line="100" pos:column="15">( <expr><name><name pos:line="100" pos:column="17">pFKey<pos:position pos:line="100" pos:column="22"/></name><operator pos:line="100" pos:column="22">-&gt;<pos:position pos:line="100" pos:column="27"/></operator><name pos:line="100" pos:column="24">aCol<pos:position pos:line="100" pos:column="28"/></name><index pos:line="100" pos:column="28">[<expr><name pos:line="100" pos:column="29">j<pos:position pos:line="100" pos:column="30"/></name></expr>]<pos:position pos:line="100" pos:column="31"/></index></name><operator pos:line="100" pos:column="31">.<pos:position pos:line="100" pos:column="32"/></operator><name pos:line="100" pos:column="32">iFrom<pos:position pos:line="100" pos:column="37"/></name><operator pos:line="100" pos:column="37">==<pos:position pos:line="100" pos:column="39"/></operator><name pos:line="100" pos:column="39">iCol<pos:position pos:line="100" pos:column="43"/></name></expr> )<pos:position pos:line="100" pos:column="45"/></condition><then><block pos:line="100" pos:column="45">{
              <expr_stmt><expr><name pos:line="101" pos:column="15">zFault<pos:position pos:line="101" pos:column="21"/></name> <operator pos:line="101" pos:column="22">=<pos:position pos:line="101" pos:column="23"/></operator> <literal type="string" pos:line="101" pos:column="24">"foreign key"<pos:position pos:line="101" pos:column="37"/></literal></expr>;<pos:position pos:line="101" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="102" pos:column="14"/></block></then></if>
          }<pos:position pos:line="103" pos:column="12"/></block></for>
        }<pos:position pos:line="104" pos:column="10"/></block></for>
      }<pos:position pos:line="105" pos:column="8"/></block></then></if>
<cpp:endif pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">endif<pos:position pos:line="106" pos:column="7"/></cpp:directive></cpp:endif>
      <for pos:line="107" pos:column="7">for<control pos:line="107" pos:column="10">(<init><expr><name pos:line="107" pos:column="11">pIdx<pos:position pos:line="107" pos:column="15"/></name><operator pos:line="107" pos:column="15">=<pos:position pos:line="107" pos:column="16"/></operator><name><name pos:line="107" pos:column="16">pTab<pos:position pos:line="107" pos:column="20"/></name><operator pos:line="107" pos:column="20">-&gt;<pos:position pos:line="107" pos:column="25"/></operator><name pos:line="107" pos:column="22">pIndex<pos:position pos:line="107" pos:column="28"/></name></name></expr>;<pos:position pos:line="107" pos:column="29"/></init> <condition><expr><name pos:line="107" pos:column="30">pIdx<pos:position pos:line="107" pos:column="34"/></name></expr>;<pos:position pos:line="107" pos:column="35"/></condition> <incr><expr><name pos:line="107" pos:column="36">pIdx<pos:position pos:line="107" pos:column="40"/></name><operator pos:line="107" pos:column="40">=<pos:position pos:line="107" pos:column="41"/></operator><name><name pos:line="107" pos:column="41">pIdx<pos:position pos:line="107" pos:column="45"/></name><operator pos:line="107" pos:column="45">-&gt;<pos:position pos:line="107" pos:column="50"/></operator><name pos:line="107" pos:column="47">pNext<pos:position pos:line="107" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="107" pos:column="53"/></control><block pos:line="107" pos:column="53">{
        <decl_stmt><decl><type><name pos:line="108" pos:column="9">int<pos:position pos:line="108" pos:column="12"/></name></type> <name pos:line="108" pos:column="13">j<pos:position pos:line="108" pos:column="14"/></name></decl>;<pos:position pos:line="108" pos:column="15"/></decl_stmt>
        <for pos:line="109" pos:column="9">for<control pos:line="109" pos:column="12">(<init><expr><name pos:line="109" pos:column="13">j<pos:position pos:line="109" pos:column="14"/></name><operator pos:line="109" pos:column="14">=<pos:position pos:line="109" pos:column="15"/></operator><literal type="number" pos:line="109" pos:column="15">0<pos:position pos:line="109" pos:column="16"/></literal></expr>;<pos:position pos:line="109" pos:column="17"/></init> <condition><expr><name pos:line="109" pos:column="18">j<pos:position pos:line="109" pos:column="19"/></name><operator pos:line="109" pos:column="19">&lt;<pos:position pos:line="109" pos:column="23"/></operator><name><name pos:line="109" pos:column="20">pIdx<pos:position pos:line="109" pos:column="24"/></name><operator pos:line="109" pos:column="24">-&gt;<pos:position pos:line="109" pos:column="29"/></operator><name pos:line="109" pos:column="26">nKeyCol<pos:position pos:line="109" pos:column="33"/></name></name></expr>;<pos:position pos:line="109" pos:column="34"/></condition> <incr><expr><name pos:line="109" pos:column="35">j<pos:position pos:line="109" pos:column="36"/></name><operator pos:line="109" pos:column="36">++<pos:position pos:line="109" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="109" pos:column="39"/></control><block pos:line="109" pos:column="39">{
          <comment type="block" pos:line="110" pos:column="11">/* FIXME: Be smarter about indexes that use expressions */</comment>
          <if pos:line="111" pos:column="11">if<condition pos:line="111" pos:column="13">( <expr><name><name pos:line="111" pos:column="15">pIdx<pos:position pos:line="111" pos:column="19"/></name><operator pos:line="111" pos:column="19">-&gt;<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="21">aiColumn<pos:position pos:line="111" pos:column="29"/></name><index pos:line="111" pos:column="29">[<expr><name pos:line="111" pos:column="30">j<pos:position pos:line="111" pos:column="31"/></name></expr>]<pos:position pos:line="111" pos:column="32"/></index></name><operator pos:line="111" pos:column="32">==<pos:position pos:line="111" pos:column="34"/></operator><name pos:line="111" pos:column="34">iCol<pos:position pos:line="111" pos:column="38"/></name> <operator pos:line="111" pos:column="39">||<pos:position pos:line="111" pos:column="41"/></operator> <name><name pos:line="111" pos:column="42">pIdx<pos:position pos:line="111" pos:column="46"/></name><operator pos:line="111" pos:column="46">-&gt;<pos:position pos:line="111" pos:column="51"/></operator><name pos:line="111" pos:column="48">aiColumn<pos:position pos:line="111" pos:column="56"/></name><index pos:line="111" pos:column="56">[<expr><name pos:line="111" pos:column="57">j<pos:position pos:line="111" pos:column="58"/></name></expr>]<pos:position pos:line="111" pos:column="59"/></index></name><operator pos:line="111" pos:column="59">==<pos:position pos:line="111" pos:column="61"/></operator><name pos:line="111" pos:column="61">XN_EXPR<pos:position pos:line="111" pos:column="68"/></name></expr> )<pos:position pos:line="111" pos:column="70"/></condition><then><block pos:line="111" pos:column="70">{
            <expr_stmt><expr><name pos:line="112" pos:column="13">zFault<pos:position pos:line="112" pos:column="19"/></name> <operator pos:line="112" pos:column="20">=<pos:position pos:line="112" pos:column="21"/></operator> <literal type="string" pos:line="112" pos:column="22">"indexed"<pos:position pos:line="112" pos:column="31"/></literal></expr>;<pos:position pos:line="112" pos:column="32"/></expr_stmt>
          }<pos:position pos:line="113" pos:column="12"/></block></then></if>
        }<pos:position pos:line="114" pos:column="10"/></block></for>
      }<pos:position pos:line="115" pos:column="8"/></block></for>
      <if pos:line="116" pos:column="7">if<condition pos:line="116" pos:column="9">( <expr><name pos:line="116" pos:column="11">zFault<pos:position pos:line="116" pos:column="17"/></name></expr> )<pos:position pos:line="116" pos:column="19"/></condition><then><block pos:line="116" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="117" pos:column="9">sqlite3DbFree<pos:position pos:line="117" pos:column="22"/></name><argument_list pos:line="117" pos:column="22">(<argument><expr><name pos:line="117" pos:column="23">db<pos:position pos:line="117" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="27">zErr<pos:position pos:line="117" pos:column="31"/></name></expr></argument>)<pos:position pos:line="117" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="118" pos:column="9">zErr<pos:position pos:line="118" pos:column="13"/></name> <operator pos:line="118" pos:column="14">=<pos:position pos:line="118" pos:column="15"/></operator> <call><name pos:line="118" pos:column="16">sqlite3MPrintf<pos:position pos:line="118" pos:column="30"/></name><argument_list pos:line="118" pos:column="30">(<argument><expr><name pos:line="118" pos:column="31">db<pos:position pos:line="118" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="35">"cannot open %s column for writing"<pos:position pos:line="118" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="72">zFault<pos:position pos:line="118" pos:column="78"/></name></expr></argument>)<pos:position pos:line="118" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><name pos:line="119" pos:column="9">rc<pos:position pos:line="119" pos:column="11"/></name> <operator pos:line="119" pos:column="12">=<pos:position pos:line="119" pos:column="13"/></operator> <name pos:line="119" pos:column="14">SQLITE_ERROR<pos:position pos:line="119" pos:column="26"/></name></expr>;<pos:position pos:line="119" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="120" pos:column="9">sqlite3BtreeLeaveAll<pos:position pos:line="120" pos:column="29"/></name><argument_list pos:line="120" pos:column="29">(<argument><expr><name pos:line="120" pos:column="30">db<pos:position pos:line="120" pos:column="32"/></name></expr></argument>)<pos:position pos:line="120" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="34"/></expr_stmt>
        <goto pos:line="121" pos:column="9">goto <name pos:line="121" pos:column="14">blob_open_out<pos:position pos:line="121" pos:column="27"/></name>;<pos:position pos:line="121" pos:column="28"/></goto>
      }<pos:position pos:line="122" pos:column="8"/></block></then></if>
    }<pos:position pos:line="123" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="125" pos:column="5">pBlob<pos:position pos:line="125" pos:column="10"/></name><operator pos:line="125" pos:column="10">-&gt;<pos:position pos:line="125" pos:column="15"/></operator><name pos:line="125" pos:column="12">pStmt<pos:position pos:line="125" pos:column="17"/></name></name> <operator pos:line="125" pos:column="18">=<pos:position pos:line="125" pos:column="19"/></operator> <operator pos:line="125" pos:column="20">(<pos:position pos:line="125" pos:column="21"/></operator><name pos:line="125" pos:column="21">sqlite3_stmt<pos:position pos:line="125" pos:column="33"/></name> <operator pos:line="125" pos:column="34">*<pos:position pos:line="125" pos:column="35"/></operator><operator pos:line="125" pos:column="35">)<pos:position pos:line="125" pos:column="36"/></operator><call><name pos:line="125" pos:column="36">sqlite3VdbeCreate<pos:position pos:line="125" pos:column="53"/></name><argument_list pos:line="125" pos:column="53">(<argument><expr><operator pos:line="125" pos:column="54">&amp;<pos:position pos:line="125" pos:column="59"/></operator><name pos:line="125" pos:column="55">sParse<pos:position pos:line="125" pos:column="61"/></name></expr></argument>)<pos:position pos:line="125" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="126" pos:column="5">assert<pos:position pos:line="126" pos:column="11"/></name><argument_list pos:line="126" pos:column="11">( <argument><expr><name><name pos:line="126" pos:column="13">pBlob<pos:position pos:line="126" pos:column="18"/></name><operator pos:line="126" pos:column="18">-&gt;<pos:position pos:line="126" pos:column="23"/></operator><name pos:line="126" pos:column="20">pStmt<pos:position pos:line="126" pos:column="25"/></name></name> <operator pos:line="126" pos:column="26">||<pos:position pos:line="126" pos:column="28"/></operator> <name><name pos:line="126" pos:column="29">db<pos:position pos:line="126" pos:column="31"/></name><operator pos:line="126" pos:column="31">-&gt;<pos:position pos:line="126" pos:column="36"/></operator><name pos:line="126" pos:column="33">mallocFailed<pos:position pos:line="126" pos:column="45"/></name></name></expr></argument> )<pos:position pos:line="126" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="48"/></expr_stmt>
    <if pos:line="127" pos:column="5">if<condition pos:line="127" pos:column="7">( <expr><name><name pos:line="127" pos:column="9">pBlob<pos:position pos:line="127" pos:column="14"/></name><operator pos:line="127" pos:column="14">-&gt;<pos:position pos:line="127" pos:column="19"/></operator><name pos:line="127" pos:column="16">pStmt<pos:position pos:line="127" pos:column="21"/></name></name></expr> )<pos:position pos:line="127" pos:column="23"/></condition><then><block pos:line="127" pos:column="23">{
      
      <comment type="block" pos:line="129" pos:column="7">/* This VDBE program seeks a btree cursor to the identified 
      ** db/table/row entry. The reason for using a vdbe program instead
      ** of writing code to use the b-tree layer directly is that the
      ** vdbe program will take advantage of the various transaction,
      ** locking and error handling infrastructure built into the vdbe.
      **
      ** After seeking the cursor, the vdbe executes an OP_ResultRow.
      ** Code external to the Vdbe then "borrows" the b-tree cursor and
      ** uses it to implement the blob_read(), blob_write() and 
      ** blob_bytes() functions.
      **
      ** The sqlite3_blob_close() function finalizes the vdbe program,
      ** which closes the b-tree cursor and (possibly) commits the 
      ** transaction.
      */</comment>
      <decl_stmt><decl><specifier pos:line="144" pos:column="7">static<pos:position pos:line="144" pos:column="13"/></specifier> <type><specifier pos:line="144" pos:column="14">const<pos:position pos:line="144" pos:column="19"/></specifier> <name pos:line="144" pos:column="20">int<pos:position pos:line="144" pos:column="23"/></name></type> <name pos:line="144" pos:column="24">iLn<pos:position pos:line="144" pos:column="27"/></name> <init pos:line="144" pos:column="28">= <expr><call><name pos:line="144" pos:column="30">VDBE_OFFSET_LINENO<pos:position pos:line="144" pos:column="48"/></name><argument_list pos:line="144" pos:column="48">(<argument><expr><literal type="number" pos:line="144" pos:column="49">2<pos:position pos:line="144" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="144" pos:column="52"/></decl_stmt>
      <decl_stmt><decl><specifier pos:line="145" pos:column="7">static<pos:position pos:line="145" pos:column="13"/></specifier> <type><specifier pos:line="145" pos:column="14">const<pos:position pos:line="145" pos:column="19"/></specifier> <name pos:line="145" pos:column="20">VdbeOpList<pos:position pos:line="145" pos:column="30"/></name></type> <name><name pos:line="145" pos:column="31">openBlob<pos:position pos:line="145" pos:column="39"/></name><index pos:line="145" pos:column="39">[]<pos:position pos:line="145" pos:column="41"/></index></name> <init pos:line="145" pos:column="42">= <expr><block pos:line="145" pos:column="44">{
        <expr><block pos:line="146" pos:column="9">{<expr><name pos:line="146" pos:column="10">OP_TableLock<pos:position pos:line="146" pos:column="22"/></name></expr>,      <expr><literal type="number" pos:line="146" pos:column="29">0<pos:position pos:line="146" pos:column="30"/></literal></expr>, <expr><literal type="number" pos:line="146" pos:column="32">0<pos:position pos:line="146" pos:column="33"/></literal></expr>, <expr><literal type="number" pos:line="146" pos:column="35">0<pos:position pos:line="146" pos:column="36"/></literal></expr>}<pos:position pos:line="146" pos:column="37"/></block></expr>,  <comment type="block" pos:line="146" pos:column="40">/* 0: Acquire a read or write lock */</comment>
        <expr><block pos:line="147" pos:column="9">{<expr><name pos:line="147" pos:column="10">OP_OpenRead<pos:position pos:line="147" pos:column="21"/></name></expr>,       <expr><literal type="number" pos:line="147" pos:column="29">0<pos:position pos:line="147" pos:column="30"/></literal></expr>, <expr><literal type="number" pos:line="147" pos:column="32">0<pos:position pos:line="147" pos:column="33"/></literal></expr>, <expr><literal type="number" pos:line="147" pos:column="35">0<pos:position pos:line="147" pos:column="36"/></literal></expr>}<pos:position pos:line="147" pos:column="37"/></block></expr>,  <comment type="block" pos:line="147" pos:column="40">/* 1: Open a cursor */</comment>
        <comment type="block" pos:line="148" pos:column="9">/* blobSeekToRow() will initialize r[1] to the desired rowid */</comment>
        <expr><block pos:line="149" pos:column="9">{<expr><name pos:line="149" pos:column="10">OP_NotExists<pos:position pos:line="149" pos:column="22"/></name></expr>,      <expr><literal type="number" pos:line="149" pos:column="29">0<pos:position pos:line="149" pos:column="30"/></literal></expr>, <expr><literal type="number" pos:line="149" pos:column="32">5<pos:position pos:line="149" pos:column="33"/></literal></expr>, <expr><literal type="number" pos:line="149" pos:column="35">1<pos:position pos:line="149" pos:column="36"/></literal></expr>}<pos:position pos:line="149" pos:column="37"/></block></expr>,  <comment type="block" pos:line="149" pos:column="40">/* 2: Seek the cursor to rowid=r[1] */</comment>
        <expr><block pos:line="150" pos:column="9">{<expr><name pos:line="150" pos:column="10">OP_Column<pos:position pos:line="150" pos:column="19"/></name></expr>,         <expr><literal type="number" pos:line="150" pos:column="29">0<pos:position pos:line="150" pos:column="30"/></literal></expr>, <expr><literal type="number" pos:line="150" pos:column="32">0<pos:position pos:line="150" pos:column="33"/></literal></expr>, <expr><literal type="number" pos:line="150" pos:column="35">1<pos:position pos:line="150" pos:column="36"/></literal></expr>}<pos:position pos:line="150" pos:column="37"/></block></expr>,  <comment type="block" pos:line="150" pos:column="40">/* 3  */</comment>
        <expr><block pos:line="151" pos:column="9">{<expr><name pos:line="151" pos:column="10">OP_ResultRow<pos:position pos:line="151" pos:column="22"/></name></expr>,      <expr><literal type="number" pos:line="151" pos:column="29">1<pos:position pos:line="151" pos:column="30"/></literal></expr>, <expr><literal type="number" pos:line="151" pos:column="32">0<pos:position pos:line="151" pos:column="33"/></literal></expr>, <expr><literal type="number" pos:line="151" pos:column="35">0<pos:position pos:line="151" pos:column="36"/></literal></expr>}<pos:position pos:line="151" pos:column="37"/></block></expr>,  <comment type="block" pos:line="151" pos:column="40">/* 4  */</comment>
        <expr><block pos:line="152" pos:column="9">{<expr><name pos:line="152" pos:column="10">OP_Halt<pos:position pos:line="152" pos:column="17"/></name></expr>,           <expr><literal type="number" pos:line="152" pos:column="29">0<pos:position pos:line="152" pos:column="30"/></literal></expr>, <expr><literal type="number" pos:line="152" pos:column="32">0<pos:position pos:line="152" pos:column="33"/></literal></expr>, <expr><literal type="number" pos:line="152" pos:column="35">0<pos:position pos:line="152" pos:column="36"/></literal></expr>}<pos:position pos:line="152" pos:column="37"/></block></expr>,  <comment type="block" pos:line="152" pos:column="40">/* 5  */</comment>
      }<pos:position pos:line="153" pos:column="8"/></block></expr></init></decl>;<pos:position pos:line="153" pos:column="9"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="154" pos:column="7">Vdbe<pos:position pos:line="154" pos:column="11"/></name> <modifier pos:line="154" pos:column="12">*<pos:position pos:line="154" pos:column="13"/></modifier></type><name pos:line="154" pos:column="13">v<pos:position pos:line="154" pos:column="14"/></name> <init pos:line="154" pos:column="15">= <expr><operator pos:line="154" pos:column="17">(<pos:position pos:line="154" pos:column="18"/></operator><name pos:line="154" pos:column="18">Vdbe<pos:position pos:line="154" pos:column="22"/></name> <operator pos:line="154" pos:column="23">*<pos:position pos:line="154" pos:column="24"/></operator><operator pos:line="154" pos:column="24">)<pos:position pos:line="154" pos:column="25"/></operator><name><name pos:line="154" pos:column="25">pBlob<pos:position pos:line="154" pos:column="30"/></name><operator pos:line="154" pos:column="30">-&gt;<pos:position pos:line="154" pos:column="35"/></operator><name pos:line="154" pos:column="32">pStmt<pos:position pos:line="154" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="154" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="155" pos:column="7">int<pos:position pos:line="155" pos:column="10"/></name></type> <name pos:line="155" pos:column="11">iDb<pos:position pos:line="155" pos:column="14"/></name> <init pos:line="155" pos:column="15">= <expr><call><name pos:line="155" pos:column="17">sqlite3SchemaToIndex<pos:position pos:line="155" pos:column="37"/></name><argument_list pos:line="155" pos:column="37">(<argument><expr><name pos:line="155" pos:column="38">db<pos:position pos:line="155" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="155" pos:column="42">pTab<pos:position pos:line="155" pos:column="46"/></name><operator pos:line="155" pos:column="46">-&gt;<pos:position pos:line="155" pos:column="51"/></operator><name pos:line="155" pos:column="48">pSchema<pos:position pos:line="155" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="155" pos:column="57"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="156" pos:column="7">VdbeOp<pos:position pos:line="156" pos:column="13"/></name> <modifier pos:line="156" pos:column="14">*<pos:position pos:line="156" pos:column="15"/></modifier></type><name pos:line="156" pos:column="15">aOp<pos:position pos:line="156" pos:column="18"/></name></decl>;<pos:position pos:line="156" pos:column="19"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="158" pos:column="7">sqlite3VdbeAddOp4Int<pos:position pos:line="158" pos:column="27"/></name><argument_list pos:line="158" pos:column="27">(<argument><expr><name pos:line="158" pos:column="28">v<pos:position pos:line="158" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="31">OP_Transaction<pos:position pos:line="158" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="47">iDb<pos:position pos:line="158" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="52">wrFlag<pos:position pos:line="158" pos:column="58"/></name></expr></argument>, 
                           <argument><expr><name><name pos:line="159" pos:column="28">pTab<pos:position pos:line="159" pos:column="32"/></name><operator pos:line="159" pos:column="32">-&gt;<pos:position pos:line="159" pos:column="37"/></operator><name pos:line="159" pos:column="34">pSchema<pos:position pos:line="159" pos:column="41"/></name><operator pos:line="159" pos:column="41">-&gt;<pos:position pos:line="159" pos:column="46"/></operator><name pos:line="159" pos:column="43">schema_cookie<pos:position pos:line="159" pos:column="56"/></name></name></expr></argument>,
                           <argument><expr><name><name pos:line="160" pos:column="28">pTab<pos:position pos:line="160" pos:column="32"/></name><operator pos:line="160" pos:column="32">-&gt;<pos:position pos:line="160" pos:column="37"/></operator><name pos:line="160" pos:column="34">pSchema<pos:position pos:line="160" pos:column="41"/></name><operator pos:line="160" pos:column="41">-&gt;<pos:position pos:line="160" pos:column="46"/></operator><name pos:line="160" pos:column="43">iGeneration<pos:position pos:line="160" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="161" pos:column="7">sqlite3VdbeChangeP5<pos:position pos:line="161" pos:column="26"/></name><argument_list pos:line="161" pos:column="26">(<argument><expr><name pos:line="161" pos:column="27">v<pos:position pos:line="161" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="161" pos:column="30">1<pos:position pos:line="161" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="162" pos:column="7">assert<pos:position pos:line="162" pos:column="13"/></name><argument_list pos:line="162" pos:column="13">( <argument><expr><call><name pos:line="162" pos:column="15">sqlite3VdbeCurrentAddr<pos:position pos:line="162" pos:column="37"/></name><argument_list pos:line="162" pos:column="37">(<argument><expr><name pos:line="162" pos:column="38">v<pos:position pos:line="162" pos:column="39"/></name></expr></argument>)<pos:position pos:line="162" pos:column="40"/></argument_list></call><operator pos:line="162" pos:column="40">==<pos:position pos:line="162" pos:column="42"/></operator><literal type="number" pos:line="162" pos:column="42">2<pos:position pos:line="162" pos:column="43"/></literal> <operator pos:line="162" pos:column="44">||<pos:position pos:line="162" pos:column="46"/></operator> <name><name pos:line="162" pos:column="47">db<pos:position pos:line="162" pos:column="49"/></name><operator pos:line="162" pos:column="49">-&gt;<pos:position pos:line="162" pos:column="54"/></operator><name pos:line="162" pos:column="51">mallocFailed<pos:position pos:line="162" pos:column="63"/></name></name></expr></argument> )<pos:position pos:line="162" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><name pos:line="163" pos:column="7">aOp<pos:position pos:line="163" pos:column="10"/></name> <operator pos:line="163" pos:column="11">=<pos:position pos:line="163" pos:column="12"/></operator> <call><name pos:line="163" pos:column="13">sqlite3VdbeAddOpList<pos:position pos:line="163" pos:column="33"/></name><argument_list pos:line="163" pos:column="33">(<argument><expr><name pos:line="163" pos:column="34">v<pos:position pos:line="163" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="163" pos:column="37">ArraySize<pos:position pos:line="163" pos:column="46"/></name><argument_list pos:line="163" pos:column="46">(<argument><expr><name pos:line="163" pos:column="47">openBlob<pos:position pos:line="163" pos:column="55"/></name></expr></argument>)<pos:position pos:line="163" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="163" pos:column="58">openBlob<pos:position pos:line="163" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="68">iLn<pos:position pos:line="163" pos:column="71"/></name></expr></argument>)<pos:position pos:line="163" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="73"/></expr_stmt>

      <comment type="block" pos:line="165" pos:column="7">/* Make sure a mutex is held on the table to be accessed */</comment>
      <expr_stmt><expr><call><name pos:line="166" pos:column="7">sqlite3VdbeUsesBtree<pos:position pos:line="166" pos:column="27"/></name><argument_list pos:line="166" pos:column="27">(<argument><expr><name pos:line="166" pos:column="28">v<pos:position pos:line="166" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="31">iDb<pos:position pos:line="166" pos:column="34"/></name></expr></argument>)<pos:position pos:line="166" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="36"/></expr_stmt> 

      <if pos:line="168" pos:column="7">if<condition pos:line="168" pos:column="9">( <expr><name><name pos:line="168" pos:column="11">db<pos:position pos:line="168" pos:column="13"/></name><operator pos:line="168" pos:column="13">-&gt;<pos:position pos:line="168" pos:column="18"/></operator><name pos:line="168" pos:column="15">mallocFailed<pos:position pos:line="168" pos:column="27"/></name></name><operator pos:line="168" pos:column="27">==<pos:position pos:line="168" pos:column="29"/></operator><literal type="number" pos:line="168" pos:column="29">0<pos:position pos:line="168" pos:column="30"/></literal></expr> )<pos:position pos:line="168" pos:column="32"/></condition><then><block pos:line="168" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="169" pos:column="9">assert<pos:position pos:line="169" pos:column="15"/></name><argument_list pos:line="169" pos:column="15">( <argument><expr><name pos:line="169" pos:column="17">aOp<pos:position pos:line="169" pos:column="20"/></name><operator pos:line="169" pos:column="20">!=<pos:position pos:line="169" pos:column="22"/></operator><literal type="number" pos:line="169" pos:column="22">0<pos:position pos:line="169" pos:column="23"/></literal></expr></argument> )<pos:position pos:line="169" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="26"/></expr_stmt>
        <comment type="block" pos:line="170" pos:column="9">/* Configure the OP_TableLock instruction */</comment>
<cpp:ifdef pos:line="171" pos:column="1">#<cpp:directive pos:line="171" pos:column="2">ifdef<pos:position pos:line="171" pos:column="7"/></cpp:directive> <name pos:line="171" pos:column="8">SQLITE_OMIT_SHARED_CACHE<pos:position pos:line="171" pos:column="32"/></name></cpp:ifdef>
        <expr_stmt><expr><name><name pos:line="172" pos:column="9">aOp<pos:position pos:line="172" pos:column="12"/></name><index pos:line="172" pos:column="12">[<expr><literal type="number" pos:line="172" pos:column="13">0<pos:position pos:line="172" pos:column="14"/></literal></expr>]<pos:position pos:line="172" pos:column="15"/></index></name><operator pos:line="172" pos:column="15">.<pos:position pos:line="172" pos:column="16"/></operator><name pos:line="172" pos:column="16">opcode<pos:position pos:line="172" pos:column="22"/></name> <operator pos:line="172" pos:column="23">=<pos:position pos:line="172" pos:column="24"/></operator> <name pos:line="172" pos:column="25">OP_Noop<pos:position pos:line="172" pos:column="32"/></name></expr>;<pos:position pos:line="172" pos:column="33"/></expr_stmt>
<cpp:else pos:line="173" pos:column="1">#<cpp:directive pos:line="173" pos:column="2">else<pos:position pos:line="173" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name><name pos:line="174" pos:column="9">aOp<pos:position pos:line="174" pos:column="12"/></name><index pos:line="174" pos:column="12">[<expr><literal type="number" pos:line="174" pos:column="13">0<pos:position pos:line="174" pos:column="14"/></literal></expr>]<pos:position pos:line="174" pos:column="15"/></index></name><operator pos:line="174" pos:column="15">.<pos:position pos:line="174" pos:column="16"/></operator><name pos:line="174" pos:column="16">p1<pos:position pos:line="174" pos:column="18"/></name> <operator pos:line="174" pos:column="19">=<pos:position pos:line="174" pos:column="20"/></operator> <name pos:line="174" pos:column="21">iDb<pos:position pos:line="174" pos:column="24"/></name></expr>;<pos:position pos:line="174" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="175" pos:column="9">aOp<pos:position pos:line="175" pos:column="12"/></name><index pos:line="175" pos:column="12">[<expr><literal type="number" pos:line="175" pos:column="13">0<pos:position pos:line="175" pos:column="14"/></literal></expr>]<pos:position pos:line="175" pos:column="15"/></index></name><operator pos:line="175" pos:column="15">.<pos:position pos:line="175" pos:column="16"/></operator><name pos:line="175" pos:column="16">p2<pos:position pos:line="175" pos:column="18"/></name> <operator pos:line="175" pos:column="19">=<pos:position pos:line="175" pos:column="20"/></operator> <name><name pos:line="175" pos:column="21">pTab<pos:position pos:line="175" pos:column="25"/></name><operator pos:line="175" pos:column="25">-&gt;<pos:position pos:line="175" pos:column="30"/></operator><name pos:line="175" pos:column="27">tnum<pos:position pos:line="175" pos:column="31"/></name></name></expr>;<pos:position pos:line="175" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="176" pos:column="9">aOp<pos:position pos:line="176" pos:column="12"/></name><index pos:line="176" pos:column="12">[<expr><literal type="number" pos:line="176" pos:column="13">0<pos:position pos:line="176" pos:column="14"/></literal></expr>]<pos:position pos:line="176" pos:column="15"/></index></name><operator pos:line="176" pos:column="15">.<pos:position pos:line="176" pos:column="16"/></operator><name pos:line="176" pos:column="16">p3<pos:position pos:line="176" pos:column="18"/></name> <operator pos:line="176" pos:column="19">=<pos:position pos:line="176" pos:column="20"/></operator> <name pos:line="176" pos:column="21">wrFlag<pos:position pos:line="176" pos:column="27"/></name></expr>;<pos:position pos:line="176" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="177" pos:column="9">sqlite3VdbeChangeP4<pos:position pos:line="177" pos:column="28"/></name><argument_list pos:line="177" pos:column="28">(<argument><expr><name pos:line="177" pos:column="29">v<pos:position pos:line="177" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="177" pos:column="32">2<pos:position pos:line="177" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="177" pos:column="35">pTab<pos:position pos:line="177" pos:column="39"/></name><operator pos:line="177" pos:column="39">-&gt;<pos:position pos:line="177" pos:column="44"/></operator><name pos:line="177" pos:column="41">zName<pos:position pos:line="177" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="48">P4_TRANSIENT<pos:position pos:line="177" pos:column="60"/></name></expr></argument>)<pos:position pos:line="177" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="62"/></expr_stmt>
      }<pos:position pos:line="178" pos:column="8"/></block></then></if>
      <if pos:line="179" pos:column="7">if<condition pos:line="179" pos:column="9">( <expr><name><name pos:line="179" pos:column="11">db<pos:position pos:line="179" pos:column="13"/></name><operator pos:line="179" pos:column="13">-&gt;<pos:position pos:line="179" pos:column="18"/></operator><name pos:line="179" pos:column="15">mallocFailed<pos:position pos:line="179" pos:column="27"/></name></name><operator pos:line="179" pos:column="27">==<pos:position pos:line="179" pos:column="29"/></operator><literal type="number" pos:line="179" pos:column="29">0<pos:position pos:line="179" pos:column="30"/></literal></expr> )<pos:position pos:line="179" pos:column="32"/></condition><then><block pos:line="179" pos:column="32">{
<cpp:endif pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">endif<pos:position pos:line="180" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="block" pos:line="182" pos:column="9">/* Remove either the OP_OpenWrite or OpenRead. Set the P2 
        ** parameter of the other to pTab-&gt;tnum.  */</comment>
        <if pos:line="184" pos:column="9">if<condition pos:line="184" pos:column="11">( <expr><name pos:line="184" pos:column="13">wrFlag<pos:position pos:line="184" pos:column="19"/></name></expr> )<pos:position pos:line="184" pos:column="21"/></condition><then pos:line="184" pos:column="21"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="184" pos:column="22">aOp<pos:position pos:line="184" pos:column="25"/></name><index pos:line="184" pos:column="25">[<expr><literal type="number" pos:line="184" pos:column="26">1<pos:position pos:line="184" pos:column="27"/></literal></expr>]<pos:position pos:line="184" pos:column="28"/></index></name><operator pos:line="184" pos:column="28">.<pos:position pos:line="184" pos:column="29"/></operator><name pos:line="184" pos:column="29">opcode<pos:position pos:line="184" pos:column="35"/></name> <operator pos:line="184" pos:column="36">=<pos:position pos:line="184" pos:column="37"/></operator> <name pos:line="184" pos:column="38">OP_OpenWrite<pos:position pos:line="184" pos:column="50"/></name></expr>;<pos:position pos:line="184" pos:column="51"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="185" pos:column="9">aOp<pos:position pos:line="185" pos:column="12"/></name><index pos:line="185" pos:column="12">[<expr><literal type="number" pos:line="185" pos:column="13">1<pos:position pos:line="185" pos:column="14"/></literal></expr>]<pos:position pos:line="185" pos:column="15"/></index></name><operator pos:line="185" pos:column="15">.<pos:position pos:line="185" pos:column="16"/></operator><name pos:line="185" pos:column="16">p2<pos:position pos:line="185" pos:column="18"/></name> <operator pos:line="185" pos:column="19">=<pos:position pos:line="185" pos:column="20"/></operator> <name><name pos:line="185" pos:column="21">pTab<pos:position pos:line="185" pos:column="25"/></name><operator pos:line="185" pos:column="25">-&gt;<pos:position pos:line="185" pos:column="30"/></operator><name pos:line="185" pos:column="27">tnum<pos:position pos:line="185" pos:column="31"/></name></name></expr>;<pos:position pos:line="185" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="186" pos:column="9">aOp<pos:position pos:line="186" pos:column="12"/></name><index pos:line="186" pos:column="12">[<expr><literal type="number" pos:line="186" pos:column="13">1<pos:position pos:line="186" pos:column="14"/></literal></expr>]<pos:position pos:line="186" pos:column="15"/></index></name><operator pos:line="186" pos:column="15">.<pos:position pos:line="186" pos:column="16"/></operator><name pos:line="186" pos:column="16">p3<pos:position pos:line="186" pos:column="18"/></name> <operator pos:line="186" pos:column="19">=<pos:position pos:line="186" pos:column="20"/></operator> <name pos:line="186" pos:column="21">iDb<pos:position pos:line="186" pos:column="24"/></name></expr>;<pos:position pos:line="186" pos:column="25"/></expr_stmt>   

        <comment type="block" pos:line="188" pos:column="9">/* Configure the number of columns. Configure the cursor to
        ** think that the table has one more column than it really
        ** does. An OP_Column to retrieve this imaginary column will
        ** always return an SQL NULL. This is useful because it means
        ** we can invoke OP_Column to fill in the vdbe cursors type 
        ** and offset cache without causing any IO.
        */</comment>
        <expr_stmt><expr><name><name pos:line="195" pos:column="9">aOp<pos:position pos:line="195" pos:column="12"/></name><index pos:line="195" pos:column="12">[<expr><literal type="number" pos:line="195" pos:column="13">1<pos:position pos:line="195" pos:column="14"/></literal></expr>]<pos:position pos:line="195" pos:column="15"/></index></name><operator pos:line="195" pos:column="15">.<pos:position pos:line="195" pos:column="16"/></operator><name pos:line="195" pos:column="16">p4type<pos:position pos:line="195" pos:column="22"/></name> <operator pos:line="195" pos:column="23">=<pos:position pos:line="195" pos:column="24"/></operator> <name pos:line="195" pos:column="25">P4_INT32<pos:position pos:line="195" pos:column="33"/></name></expr>;<pos:position pos:line="195" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="196" pos:column="9">aOp<pos:position pos:line="196" pos:column="12"/></name><index pos:line="196" pos:column="12">[<expr><literal type="number" pos:line="196" pos:column="13">1<pos:position pos:line="196" pos:column="14"/></literal></expr>]<pos:position pos:line="196" pos:column="15"/></index></name><operator pos:line="196" pos:column="15">.<pos:position pos:line="196" pos:column="16"/></operator><name><name pos:line="196" pos:column="16">p4<pos:position pos:line="196" pos:column="18"/></name><operator pos:line="196" pos:column="18">.<pos:position pos:line="196" pos:column="19"/></operator><name pos:line="196" pos:column="19">i<pos:position pos:line="196" pos:column="20"/></name></name> <operator pos:line="196" pos:column="21">=<pos:position pos:line="196" pos:column="22"/></operator> <name><name pos:line="196" pos:column="23">pTab<pos:position pos:line="196" pos:column="27"/></name><operator pos:line="196" pos:column="27">-&gt;<pos:position pos:line="196" pos:column="32"/></operator><name pos:line="196" pos:column="29">nCol<pos:position pos:line="196" pos:column="33"/></name></name><operator pos:line="196" pos:column="33">+<pos:position pos:line="196" pos:column="34"/></operator><literal type="number" pos:line="196" pos:column="34">1<pos:position pos:line="196" pos:column="35"/></literal></expr>;<pos:position pos:line="196" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="197" pos:column="9">aOp<pos:position pos:line="197" pos:column="12"/></name><index pos:line="197" pos:column="12">[<expr><literal type="number" pos:line="197" pos:column="13">3<pos:position pos:line="197" pos:column="14"/></literal></expr>]<pos:position pos:line="197" pos:column="15"/></index></name><operator pos:line="197" pos:column="15">.<pos:position pos:line="197" pos:column="16"/></operator><name pos:line="197" pos:column="16">p2<pos:position pos:line="197" pos:column="18"/></name> <operator pos:line="197" pos:column="19">=<pos:position pos:line="197" pos:column="20"/></operator> <name><name pos:line="197" pos:column="21">pTab<pos:position pos:line="197" pos:column="25"/></name><operator pos:line="197" pos:column="25">-&gt;<pos:position pos:line="197" pos:column="30"/></operator><name pos:line="197" pos:column="27">nCol<pos:position pos:line="197" pos:column="31"/></name></name></expr>;<pos:position pos:line="197" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="199" pos:column="9">sParse<pos:position pos:line="199" pos:column="15"/></name><operator pos:line="199" pos:column="15">.<pos:position pos:line="199" pos:column="16"/></operator><name pos:line="199" pos:column="16">nVar<pos:position pos:line="199" pos:column="20"/></name></name> <operator pos:line="199" pos:column="21">=<pos:position pos:line="199" pos:column="22"/></operator> <literal type="number" pos:line="199" pos:column="23">0<pos:position pos:line="199" pos:column="24"/></literal></expr>;<pos:position pos:line="199" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="200" pos:column="9">sParse<pos:position pos:line="200" pos:column="15"/></name><operator pos:line="200" pos:column="15">.<pos:position pos:line="200" pos:column="16"/></operator><name pos:line="200" pos:column="16">nMem<pos:position pos:line="200" pos:column="20"/></name></name> <operator pos:line="200" pos:column="21">=<pos:position pos:line="200" pos:column="22"/></operator> <literal type="number" pos:line="200" pos:column="23">1<pos:position pos:line="200" pos:column="24"/></literal></expr>;<pos:position pos:line="200" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="201" pos:column="9">sParse<pos:position pos:line="201" pos:column="15"/></name><operator pos:line="201" pos:column="15">.<pos:position pos:line="201" pos:column="16"/></operator><name pos:line="201" pos:column="16">nTab<pos:position pos:line="201" pos:column="20"/></name></name> <operator pos:line="201" pos:column="21">=<pos:position pos:line="201" pos:column="22"/></operator> <literal type="number" pos:line="201" pos:column="23">1<pos:position pos:line="201" pos:column="24"/></literal></expr>;<pos:position pos:line="201" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="202" pos:column="9">sqlite3VdbeMakeReady<pos:position pos:line="202" pos:column="29"/></name><argument_list pos:line="202" pos:column="29">(<argument><expr><name pos:line="202" pos:column="30">v<pos:position pos:line="202" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="202" pos:column="33">&amp;<pos:position pos:line="202" pos:column="38"/></operator><name pos:line="202" pos:column="34">sParse<pos:position pos:line="202" pos:column="40"/></name></expr></argument>)<pos:position pos:line="202" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="42"/></expr_stmt>
      }<pos:position pos:line="203" pos:column="8"/></block></then></if>
    }<pos:position pos:line="204" pos:column="6"/></block></then></if>
   
    <expr_stmt><expr><name><name pos:line="206" pos:column="5">pBlob<pos:position pos:line="206" pos:column="10"/></name><operator pos:line="206" pos:column="10">-&gt;<pos:position pos:line="206" pos:column="15"/></operator><name pos:line="206" pos:column="12">iCol<pos:position pos:line="206" pos:column="16"/></name></name> <operator pos:line="206" pos:column="17">=<pos:position pos:line="206" pos:column="18"/></operator> <name pos:line="206" pos:column="19">iCol<pos:position pos:line="206" pos:column="23"/></name></expr>;<pos:position pos:line="206" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="207" pos:column="5">pBlob<pos:position pos:line="207" pos:column="10"/></name><operator pos:line="207" pos:column="10">-&gt;<pos:position pos:line="207" pos:column="15"/></operator><name pos:line="207" pos:column="12">db<pos:position pos:line="207" pos:column="14"/></name></name> <operator pos:line="207" pos:column="15">=<pos:position pos:line="207" pos:column="16"/></operator> <name pos:line="207" pos:column="17">db<pos:position pos:line="207" pos:column="19"/></name></expr>;<pos:position pos:line="207" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="208" pos:column="5">sqlite3BtreeLeaveAll<pos:position pos:line="208" pos:column="25"/></name><argument_list pos:line="208" pos:column="25">(<argument><expr><name pos:line="208" pos:column="26">db<pos:position pos:line="208" pos:column="28"/></name></expr></argument>)<pos:position pos:line="208" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="30"/></expr_stmt>
    <if pos:line="209" pos:column="5">if<condition pos:line="209" pos:column="7">( <expr><name><name pos:line="209" pos:column="9">db<pos:position pos:line="209" pos:column="11"/></name><operator pos:line="209" pos:column="11">-&gt;<pos:position pos:line="209" pos:column="16"/></operator><name pos:line="209" pos:column="13">mallocFailed<pos:position pos:line="209" pos:column="25"/></name></name></expr> )<pos:position pos:line="209" pos:column="27"/></condition><then><block pos:line="209" pos:column="27">{
      <goto pos:line="210" pos:column="7">goto <name pos:line="210" pos:column="12">blob_open_out<pos:position pos:line="210" pos:column="25"/></name>;<pos:position pos:line="210" pos:column="26"/></goto>
    }<pos:position pos:line="211" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="212" pos:column="5">rc<pos:position pos:line="212" pos:column="7"/></name> <operator pos:line="212" pos:column="8">=<pos:position pos:line="212" pos:column="9"/></operator> <call><name pos:line="212" pos:column="10">blobSeekToRow<pos:position pos:line="212" pos:column="23"/></name><argument_list pos:line="212" pos:column="23">(<argument><expr><name pos:line="212" pos:column="24">pBlob<pos:position pos:line="212" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="31">iRow<pos:position pos:line="212" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="212" pos:column="37">&amp;<pos:position pos:line="212" pos:column="42"/></operator><name pos:line="212" pos:column="38">zErr<pos:position pos:line="212" pos:column="42"/></name></expr></argument>)<pos:position pos:line="212" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="213" pos:column="4"/></block> while<condition pos:line="213" pos:column="10">( <expr><operator pos:line="213" pos:column="12">(<pos:position pos:line="213" pos:column="13"/></operator><operator pos:line="213" pos:column="13">++<pos:position pos:line="213" pos:column="15"/></operator><name pos:line="213" pos:column="15">nAttempt<pos:position pos:line="213" pos:column="23"/></name><operator pos:line="213" pos:column="23">)<pos:position pos:line="213" pos:column="24"/></operator><operator pos:line="213" pos:column="24">&lt;<pos:position pos:line="213" pos:column="28"/></operator><name pos:line="213" pos:column="25">SQLITE_MAX_SCHEMA_RETRY<pos:position pos:line="213" pos:column="48"/></name> <operator pos:line="213" pos:column="49">&amp;&amp;<pos:position pos:line="213" pos:column="59"/></operator> <name pos:line="213" pos:column="52">rc<pos:position pos:line="213" pos:column="54"/></name><operator pos:line="213" pos:column="54">==<pos:position pos:line="213" pos:column="56"/></operator><name pos:line="213" pos:column="56">SQLITE_SCHEMA<pos:position pos:line="213" pos:column="69"/></name></expr> )<pos:position pos:line="213" pos:column="71"/></condition>;<pos:position pos:line="213" pos:column="72"/></do>

<label><name pos:line="215" pos:column="1">blob_open_out<pos:position pos:line="215" pos:column="14"/></name>:<pos:position pos:line="215" pos:column="15"/></label>
  <if pos:line="216" pos:column="3">if<condition pos:line="216" pos:column="5">( <expr><name pos:line="216" pos:column="7">rc<pos:position pos:line="216" pos:column="9"/></name><operator pos:line="216" pos:column="9">==<pos:position pos:line="216" pos:column="11"/></operator><name pos:line="216" pos:column="11">SQLITE_OK<pos:position pos:line="216" pos:column="20"/></name> <operator pos:line="216" pos:column="21">&amp;&amp;<pos:position pos:line="216" pos:column="31"/></operator> <name><name pos:line="216" pos:column="24">db<pos:position pos:line="216" pos:column="26"/></name><operator pos:line="216" pos:column="26">-&gt;<pos:position pos:line="216" pos:column="31"/></operator><name pos:line="216" pos:column="28">mallocFailed<pos:position pos:line="216" pos:column="40"/></name></name><operator pos:line="216" pos:column="40">==<pos:position pos:line="216" pos:column="42"/></operator><literal type="number" pos:line="216" pos:column="42">0<pos:position pos:line="216" pos:column="43"/></literal></expr> )<pos:position pos:line="216" pos:column="45"/></condition><then><block pos:line="216" pos:column="45">{
    <expr_stmt><expr><operator pos:line="217" pos:column="5">*<pos:position pos:line="217" pos:column="6"/></operator><name pos:line="217" pos:column="6">ppBlob<pos:position pos:line="217" pos:column="12"/></name> <operator pos:line="217" pos:column="13">=<pos:position pos:line="217" pos:column="14"/></operator> <operator pos:line="217" pos:column="15">(<pos:position pos:line="217" pos:column="16"/></operator><name pos:line="217" pos:column="16">sqlite3_blob<pos:position pos:line="217" pos:column="28"/></name> <operator pos:line="217" pos:column="29">*<pos:position pos:line="217" pos:column="30"/></operator><operator pos:line="217" pos:column="30">)<pos:position pos:line="217" pos:column="31"/></operator><name pos:line="217" pos:column="31">pBlob<pos:position pos:line="217" pos:column="36"/></name></expr>;<pos:position pos:line="217" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="218" pos:column="4"/></block></then><else pos:line="218" pos:column="4">else<block pos:line="218" pos:column="8">{
    <if pos:line="219" pos:column="5">if<condition pos:line="219" pos:column="7">( <expr><name pos:line="219" pos:column="9">pBlob<pos:position pos:line="219" pos:column="14"/></name> <operator pos:line="219" pos:column="15">&amp;&amp;<pos:position pos:line="219" pos:column="25"/></operator> <name><name pos:line="219" pos:column="18">pBlob<pos:position pos:line="219" pos:column="23"/></name><operator pos:line="219" pos:column="23">-&gt;<pos:position pos:line="219" pos:column="28"/></operator><name pos:line="219" pos:column="25">pStmt<pos:position pos:line="219" pos:column="30"/></name></name></expr> )<pos:position pos:line="219" pos:column="32"/></condition><then pos:line="219" pos:column="32"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="219" pos:column="33">sqlite3VdbeFinalize<pos:position pos:line="219" pos:column="52"/></name><argument_list pos:line="219" pos:column="52">(<argument><expr><operator pos:line="219" pos:column="53">(<pos:position pos:line="219" pos:column="54"/></operator><name pos:line="219" pos:column="54">Vdbe<pos:position pos:line="219" pos:column="58"/></name> <operator pos:line="219" pos:column="59">*<pos:position pos:line="219" pos:column="60"/></operator><operator pos:line="219" pos:column="60">)<pos:position pos:line="219" pos:column="61"/></operator><name><name pos:line="219" pos:column="61">pBlob<pos:position pos:line="219" pos:column="66"/></name><operator pos:line="219" pos:column="66">-&gt;<pos:position pos:line="219" pos:column="71"/></operator><name pos:line="219" pos:column="68">pStmt<pos:position pos:line="219" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="219" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="75"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="220" pos:column="5">sqlite3DbFree<pos:position pos:line="220" pos:column="18"/></name><argument_list pos:line="220" pos:column="18">(<argument><expr><name pos:line="220" pos:column="19">db<pos:position pos:line="220" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="23">pBlob<pos:position pos:line="220" pos:column="28"/></name></expr></argument>)<pos:position pos:line="220" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="221" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="222" pos:column="3">sqlite3ErrorWithMsg<pos:position pos:line="222" pos:column="22"/></name><argument_list pos:line="222" pos:column="22">(<argument><expr><name pos:line="222" pos:column="23">db<pos:position pos:line="222" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="222" pos:column="27">rc<pos:position pos:line="222" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="222" pos:column="31">(<pos:position pos:line="222" pos:column="32"/></operator><ternary><condition><expr><name pos:line="222" pos:column="32">zErr<pos:position pos:line="222" pos:column="36"/></name></expr> ?<pos:position pos:line="222" pos:column="38"/></condition><then pos:line="222" pos:column="38"> <expr><literal type="string" pos:line="222" pos:column="39">"%s"<pos:position pos:line="222" pos:column="43"/></literal></expr> <pos:position pos:line="222" pos:column="44"/></then><else pos:line="222" pos:column="44">: <expr><literal type="number" pos:line="222" pos:column="46">0<pos:position pos:line="222" pos:column="47"/></literal></expr></else></ternary><operator pos:line="222" pos:column="47">)<pos:position pos:line="222" pos:column="48"/></operator></expr></argument>, <argument><expr><name pos:line="222" pos:column="50">zErr<pos:position pos:line="222" pos:column="54"/></name></expr></argument>)<pos:position pos:line="222" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="223" pos:column="3">sqlite3DbFree<pos:position pos:line="223" pos:column="16"/></name><argument_list pos:line="223" pos:column="16">(<argument><expr><name pos:line="223" pos:column="17">db<pos:position pos:line="223" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="223" pos:column="21">zErr<pos:position pos:line="223" pos:column="25"/></name></expr></argument>)<pos:position pos:line="223" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="224" pos:column="3">sqlite3ParserReset<pos:position pos:line="224" pos:column="21"/></name><argument_list pos:line="224" pos:column="21">(<argument><expr><operator pos:line="224" pos:column="22">&amp;<pos:position pos:line="224" pos:column="27"/></operator><name pos:line="224" pos:column="23">sParse<pos:position pos:line="224" pos:column="29"/></name></expr></argument>)<pos:position pos:line="224" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name pos:line="225" pos:column="3">rc<pos:position pos:line="225" pos:column="5"/></name> <operator pos:line="225" pos:column="6">=<pos:position pos:line="225" pos:column="7"/></operator> <call><name pos:line="225" pos:column="8">sqlite3ApiExit<pos:position pos:line="225" pos:column="22"/></name><argument_list pos:line="225" pos:column="22">(<argument><expr><name pos:line="225" pos:column="23">db<pos:position pos:line="225" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="27">rc<pos:position pos:line="225" pos:column="29"/></name></expr></argument>)<pos:position pos:line="225" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="226" pos:column="3">sqlite3_mutex_leave<pos:position pos:line="226" pos:column="22"/></name><argument_list pos:line="226" pos:column="22">(<argument><expr><name><name pos:line="226" pos:column="23">db<pos:position pos:line="226" pos:column="25"/></name><operator pos:line="226" pos:column="25">-&gt;<pos:position pos:line="226" pos:column="30"/></operator><name pos:line="226" pos:column="27">mutex<pos:position pos:line="226" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="226" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="34"/></expr_stmt>
  <return pos:line="227" pos:column="3">return <expr><name pos:line="227" pos:column="10">rc<pos:position pos:line="227" pos:column="12"/></name></expr>;<pos:position pos:line="227" pos:column="13"/></return>
}<pos:position pos:line="228" pos:column="2"/></block></function></unit>

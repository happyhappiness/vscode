<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_96.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">sqlite3BtreeIntegrityCheck<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Btree<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">p<pos:position pos:line="2" pos:column="11"/></name></decl></parameter>,     <comment type="block" pos:line="2" pos:column="17">/* The btree to be checked */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name> <modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type><name pos:line="3" pos:column="8">aRoot<pos:position pos:line="3" pos:column="13"/></name></decl></parameter>,   <comment type="block" pos:line="3" pos:column="17">/* An array of root pages numbers for individual trees */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">nRoot<pos:position pos:line="4" pos:column="12"/></name></decl></parameter>,    <comment type="block" pos:line="4" pos:column="17">/* Number of entries in aRoot[] */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">mxErr<pos:position pos:line="5" pos:column="12"/></name></decl></parameter>,    <comment type="block" pos:line="5" pos:column="17">/* Stop reporting errors after this many */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name> <modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type><name pos:line="6" pos:column="8">pnErr<pos:position pos:line="6" pos:column="13"/></name></decl></parameter>    <comment type="block" pos:line="6" pos:column="17">/* Write number of errors seen to this variable */</comment>
)<pos:position pos:line="7" pos:column="2"/></parameter_list><block pos:line="7" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">Pgno<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">i<pos:position pos:line="8" pos:column="9"/></name></decl>;<pos:position pos:line="8" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">IntegrityCk<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">sCheck<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">BtShared<pos:position pos:line="10" pos:column="11"/></name> <modifier pos:line="10" pos:column="12">*<pos:position pos:line="10" pos:column="13"/></modifier></type><name pos:line="10" pos:column="13">pBt<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><name><name pos:line="10" pos:column="19">p<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">pBt<pos:position pos:line="10" pos:column="25"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">savedDbFlags<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><name><name pos:line="11" pos:column="22">pBt<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">db<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">-&gt;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="31">flags<pos:position pos:line="11" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name></type> <name><name pos:line="12" pos:column="8">zErr<pos:position pos:line="12" pos:column="12"/></name><index pos:line="12" pos:column="12">[<expr><literal type="number" pos:line="12" pos:column="13">100<pos:position pos:line="12" pos:column="16"/></literal></expr>]<pos:position pos:line="12" pos:column="17"/></index></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>
  <macro><name pos:line="13" pos:column="3">VVA_ONLY<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">( <argument pos:line="13" pos:column="13">int nRef<pos:position pos:line="13" pos:column="21"/></argument> )<pos:position pos:line="13" pos:column="23"/></argument_list></macro><empty_stmt pos:line="13" pos:column="23">;<pos:position pos:line="13" pos:column="24"/></empty_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">sqlite3BtreeEnter<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">p<pos:position pos:line="15" pos:column="22"/></name></expr></argument>)<pos:position pos:line="15" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">assert<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">( <argument><expr><name><name pos:line="16" pos:column="11">p<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">inTrans<pos:position pos:line="16" pos:column="21"/></name></name><operator pos:line="16" pos:column="21">&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">TRANS_NONE<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">&amp;&amp;<pos:position pos:line="16" pos:column="43"/></operator> <name><name pos:line="16" pos:column="36">pBt<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">inTransaction<pos:position pos:line="16" pos:column="54"/></name></name><operator pos:line="16" pos:column="54">&gt;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="55">TRANS_NONE<pos:position pos:line="16" pos:column="65"/></name></expr></argument> )<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">VVA_ONLY<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">( <argument><expr><name pos:line="17" pos:column="13">nRef<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <call><name pos:line="17" pos:column="20">sqlite3PagerRefcount<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name><name pos:line="17" pos:column="41">pBt<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">pPager<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr></argument> )<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">assert<pos:position pos:line="18" pos:column="9"/></name><argument_list pos:line="18" pos:column="9">( <argument><expr><name pos:line="18" pos:column="11">nRef<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">&gt;=<pos:position pos:line="18" pos:column="20"/></operator><literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr></argument> )<pos:position pos:line="18" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">sCheck<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">.<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">pBt<pos:position pos:line="19" pos:column="13"/></name></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">pBt<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">sCheck<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">.<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">pPager<pos:position pos:line="20" pos:column="16"/></name></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <name><name pos:line="20" pos:column="19">pBt<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">pPager<pos:position pos:line="20" pos:column="30"/></name></name></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">sCheck<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">.<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">nPage<pos:position pos:line="21" pos:column="15"/></name></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">btreePagecount<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name><name pos:line="21" pos:column="33">sCheck<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">.<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="40">pBt<pos:position pos:line="21" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">sCheck<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">.<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">mxErr<pos:position pos:line="22" pos:column="15"/></name></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">mxErr<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">sCheck<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">.<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">nErr<pos:position pos:line="23" pos:column="14"/></name></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <literal type="number" pos:line="23" pos:column="17">0<pos:position pos:line="23" pos:column="18"/></literal></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">sCheck<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">.<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">mallocFailed<pos:position pos:line="24" pos:column="22"/></name></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <literal type="number" pos:line="24" pos:column="25">0<pos:position pos:line="24" pos:column="26"/></literal></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">sCheck<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">.<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">zPfx<pos:position pos:line="25" pos:column="14"/></name></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">sCheck<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">.<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">v1<pos:position pos:line="26" pos:column="12"/></name></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <literal type="number" pos:line="26" pos:column="15">0<pos:position pos:line="26" pos:column="16"/></literal></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">sCheck<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">.<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">v2<pos:position pos:line="27" pos:column="12"/></name></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <literal type="number" pos:line="27" pos:column="15">0<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">sCheck<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">.<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">aPgRef<pos:position pos:line="28" pos:column="16"/></name></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <literal type="number" pos:line="28" pos:column="19">0<pos:position pos:line="28" pos:column="20"/></literal></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">sCheck<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">.<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">heap<pos:position pos:line="29" pos:column="14"/></name></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <literal type="number" pos:line="29" pos:column="17">0<pos:position pos:line="29" pos:column="18"/></literal></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">sqlite3StrAccumInit<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><operator pos:line="30" pos:column="23">&amp;<pos:position pos:line="30" pos:column="28"/></operator><name><name pos:line="30" pos:column="24">sCheck<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">.<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">errMsg<pos:position pos:line="30" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="39">0<pos:position pos:line="30" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="42">zErr<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="48">sizeof<argument_list pos:line="30" pos:column="54">(<argument><expr><name pos:line="30" pos:column="55">zErr<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="30" pos:column="62">SQLITE_MAX_LENGTH<pos:position pos:line="30" pos:column="79"/></name></expr></argument>)<pos:position pos:line="30" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="81"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">sCheck<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">.<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">errMsg<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">.<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">printfFlags<pos:position pos:line="31" pos:column="28"/></name></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <name pos:line="31" pos:column="31">SQLITE_PRINTF_INTERNAL<pos:position pos:line="31" pos:column="53"/></name></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">( <expr><name><name pos:line="32" pos:column="7">sCheck<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">.<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">nPage<pos:position pos:line="32" pos:column="19"/></name></name><operator pos:line="32" pos:column="19">==<pos:position pos:line="32" pos:column="21"/></operator><literal type="number" pos:line="32" pos:column="21">0<pos:position pos:line="32" pos:column="22"/></literal></expr> )<pos:position pos:line="32" pos:column="24"/></condition><then><block pos:line="32" pos:column="24">{
    <goto pos:line="33" pos:column="5">goto <name pos:line="33" pos:column="10">integrity_ck_cleanup<pos:position pos:line="33" pos:column="30"/></name>;<pos:position pos:line="33" pos:column="31"/></goto>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="36" pos:column="3">sCheck<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">.<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">aPgRef<pos:position pos:line="36" pos:column="16"/></name></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <call><name pos:line="36" pos:column="19">sqlite3MallocZero<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><operator pos:line="36" pos:column="37">(<pos:position pos:line="36" pos:column="38"/></operator><name><name pos:line="36" pos:column="38">sCheck<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">.<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="45">nPage<pos:position pos:line="36" pos:column="50"/></name></name> <operator pos:line="36" pos:column="51">/<pos:position pos:line="36" pos:column="52"/></operator> <literal type="number" pos:line="36" pos:column="53">8<pos:position pos:line="36" pos:column="54"/></literal><operator pos:line="36" pos:column="54">)<pos:position pos:line="36" pos:column="55"/></operator><operator pos:line="36" pos:column="55">+<pos:position pos:line="36" pos:column="56"/></operator> <literal type="number" pos:line="36" pos:column="57">1<pos:position pos:line="36" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>
  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">( <expr><operator pos:line="37" pos:column="7">!<pos:position pos:line="37" pos:column="8"/></operator><name><name pos:line="37" pos:column="8">sCheck<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">.<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">aPgRef<pos:position pos:line="37" pos:column="21"/></name></name></expr> )<pos:position pos:line="37" pos:column="23"/></condition><then><block pos:line="37" pos:column="23">{
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">sCheck<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">.<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="12">mallocFailed<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <literal type="number" pos:line="38" pos:column="27">1<pos:position pos:line="38" pos:column="28"/></literal></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
    <goto pos:line="39" pos:column="5">goto <name pos:line="39" pos:column="10">integrity_ck_cleanup<pos:position pos:line="39" pos:column="30"/></name>;<pos:position pos:line="39" pos:column="31"/></goto>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="41" pos:column="3">sCheck<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">.<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">heap<pos:position pos:line="41" pos:column="14"/></name></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <operator pos:line="41" pos:column="17">(<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">u32<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">*<pos:position pos:line="41" pos:column="22"/></operator><operator pos:line="41" pos:column="22">)<pos:position pos:line="41" pos:column="23"/></operator><call><name pos:line="41" pos:column="23">sqlite3PageMalloc<pos:position pos:line="41" pos:column="40"/></name><argument_list pos:line="41" pos:column="40">( <argument><expr><name><name pos:line="41" pos:column="42">pBt<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">-&gt;<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="47">pageSize<pos:position pos:line="41" pos:column="55"/></name></name></expr></argument> )<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>
  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">( <expr><name><name pos:line="42" pos:column="7">sCheck<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">.<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">heap<pos:position pos:line="42" pos:column="18"/></name></name><operator pos:line="42" pos:column="18">==<pos:position pos:line="42" pos:column="20"/></operator><literal type="number" pos:line="42" pos:column="20">0<pos:position pos:line="42" pos:column="21"/></literal></expr> )<pos:position pos:line="42" pos:column="23"/></condition><then><block pos:line="42" pos:column="23">{
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">sCheck<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">.<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="12">mallocFailed<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <literal type="number" pos:line="43" pos:column="27">1<pos:position pos:line="43" pos:column="28"/></literal></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
    <goto pos:line="44" pos:column="5">goto <name pos:line="44" pos:column="10">integrity_ck_cleanup<pos:position pos:line="44" pos:column="30"/></name>;<pos:position pos:line="44" pos:column="31"/></goto>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="47" pos:column="3">i<pos:position pos:line="47" pos:column="4"/></name> <operator pos:line="47" pos:column="5">=<pos:position pos:line="47" pos:column="6"/></operator> <call><name pos:line="47" pos:column="7">PENDING_BYTE_PAGE<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">pBt<pos:position pos:line="47" pos:column="28"/></name></expr></argument>)<pos:position pos:line="47" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>
  <if pos:line="48" pos:column="3">if<condition pos:line="48" pos:column="5">( <expr><name pos:line="48" pos:column="7">i<pos:position pos:line="48" pos:column="8"/></name><operator pos:line="48" pos:column="8">&lt;=<pos:position pos:line="48" pos:column="13"/></operator><name><name pos:line="48" pos:column="10">sCheck<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">.<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="17">nPage<pos:position pos:line="48" pos:column="22"/></name></name></expr> )<pos:position pos:line="48" pos:column="24"/></condition><then pos:line="48" pos:column="24"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">setPageReferenced<pos:position pos:line="48" pos:column="42"/></name><argument_list pos:line="48" pos:column="42">(<argument><expr><operator pos:line="48" pos:column="43">&amp;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="44">sCheck<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="52">i<pos:position pos:line="48" pos:column="53"/></name></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="55"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="50" pos:column="3">/* Check the integrity of the freelist
  */</comment>
  <expr_stmt><expr><name><name pos:line="52" pos:column="3">sCheck<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">.<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">zPfx<pos:position pos:line="52" pos:column="14"/></name></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <literal type="string" pos:line="52" pos:column="17">"Main freelist: "<pos:position pos:line="52" pos:column="34"/></literal></expr>;<pos:position pos:line="52" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">checkList<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><operator pos:line="53" pos:column="13">&amp;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="14">sCheck<pos:position pos:line="53" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="22">1<pos:position pos:line="53" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="25">get4byte<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><operator pos:line="53" pos:column="34">&amp;<pos:position pos:line="53" pos:column="39"/></operator><name><name pos:line="53" pos:column="35">pBt<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">-&gt;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="40">pPage1<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">-&gt;<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="48">aData<pos:position pos:line="53" pos:column="53"/></name><index pos:line="53" pos:column="53">[<expr><literal type="number" pos:line="53" pos:column="54">32<pos:position pos:line="53" pos:column="56"/></literal></expr>]<pos:position pos:line="53" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="53" pos:column="58"/></argument_list></call></expr></argument>,
            <argument><expr><call><name pos:line="54" pos:column="13">get4byte<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><operator pos:line="54" pos:column="22">&amp;<pos:position pos:line="54" pos:column="27"/></operator><name><name pos:line="54" pos:column="23">pBt<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">-&gt;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="28">pPage1<pos:position pos:line="54" pos:column="34"/></name><operator pos:line="54" pos:column="34">-&gt;<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="36">aData<pos:position pos:line="54" pos:column="41"/></name><index pos:line="54" pos:column="41">[<expr><literal type="number" pos:line="54" pos:column="42">36<pos:position pos:line="54" pos:column="44"/></literal></expr>]<pos:position pos:line="54" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="55" pos:column="3">sCheck<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">.<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">zPfx<pos:position pos:line="55" pos:column="14"/></name></name> <operator pos:line="55" pos:column="15">=<pos:position pos:line="55" pos:column="16"/></operator> <literal type="number" pos:line="55" pos:column="17">0<pos:position pos:line="55" pos:column="18"/></literal></expr>;<pos:position pos:line="55" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="57" pos:column="3">/* Check all the tables.
  */</comment>
  <expr_stmt><expr><call><name pos:line="59" pos:column="3">testcase<pos:position pos:line="59" pos:column="11"/></name><argument_list pos:line="59" pos:column="11">( <argument><expr><name><name pos:line="59" pos:column="13">pBt<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">-&gt;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="18">db<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">-&gt;<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="22">flags<pos:position pos:line="59" pos:column="27"/></name></name> <operator pos:line="59" pos:column="28">&amp;<pos:position pos:line="59" pos:column="33"/></operator> <name pos:line="59" pos:column="30">SQLITE_CellSizeCk<pos:position pos:line="59" pos:column="47"/></name></expr></argument> )<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="60" pos:column="3">pBt<pos:position pos:line="60" pos:column="6"/></name><operator pos:line="60" pos:column="6">-&gt;<pos:position pos:line="60" pos:column="11"/></operator><name pos:line="60" pos:column="8">db<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">flags<pos:position pos:line="60" pos:column="17"/></name></name> <operator pos:line="60" pos:column="18">&amp;=<pos:position pos:line="60" pos:column="24"/></operator> <operator pos:line="60" pos:column="21">~<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="22">SQLITE_CellSizeCk<pos:position pos:line="60" pos:column="39"/></name></expr>;<pos:position pos:line="60" pos:column="40"/></expr_stmt>
  <for pos:line="61" pos:column="3">for<control pos:line="61" pos:column="6">(<init><expr><name pos:line="61" pos:column="7">i<pos:position pos:line="61" pos:column="8"/></name><operator pos:line="61" pos:column="8">=<pos:position pos:line="61" pos:column="9"/></operator><literal type="number" pos:line="61" pos:column="9">0<pos:position pos:line="61" pos:column="10"/></literal></expr>;<pos:position pos:line="61" pos:column="11"/></init> <condition><expr><operator pos:line="61" pos:column="12">(<pos:position pos:line="61" pos:column="13"/></operator><name pos:line="61" pos:column="13">int<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">)<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="17">i<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">&lt;<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="19">nRoot<pos:position pos:line="61" pos:column="24"/></name> <operator pos:line="61" pos:column="25">&amp;&amp;<pos:position pos:line="61" pos:column="35"/></operator> <name><name pos:line="61" pos:column="28">sCheck<pos:position pos:line="61" pos:column="34"/></name><operator pos:line="61" pos:column="34">.<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="35">mxErr<pos:position pos:line="61" pos:column="40"/></name></name></expr>;<pos:position pos:line="61" pos:column="41"/></condition> <incr><expr><name pos:line="61" pos:column="42">i<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">++<pos:position pos:line="61" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="61" pos:column="46"/></control><block pos:line="61" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">i64<pos:position pos:line="62" pos:column="8"/></name></type> <name pos:line="62" pos:column="9">notUsed<pos:position pos:line="62" pos:column="16"/></name></decl>;<pos:position pos:line="62" pos:column="17"/></decl_stmt>
    <if pos:line="63" pos:column="5">if<condition pos:line="63" pos:column="7">( <expr><name><name pos:line="63" pos:column="9">aRoot<pos:position pos:line="63" pos:column="14"/></name><index pos:line="63" pos:column="14">[<expr><name pos:line="63" pos:column="15">i<pos:position pos:line="63" pos:column="16"/></name></expr>]<pos:position pos:line="63" pos:column="17"/></index></name><operator pos:line="63" pos:column="17">==<pos:position pos:line="63" pos:column="19"/></operator><literal type="number" pos:line="63" pos:column="19">0<pos:position pos:line="63" pos:column="20"/></literal></expr> )<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22"> <block type="pseudo"><continue pos:line="63" pos:column="23">continue;<pos:position pos:line="63" pos:column="32"/></continue></block></then></if>
<cpp:ifndef pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">ifndef<pos:position pos:line="64" pos:column="8"/></cpp:directive> <name pos:line="64" pos:column="9">SQLITE_OMIT_AUTOVACUUM<pos:position pos:line="64" pos:column="31"/></name></cpp:ifndef>
    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">( <expr><name><name pos:line="65" pos:column="9">pBt<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">-&gt;<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="14">autoVacuum<pos:position pos:line="65" pos:column="24"/></name></name> <operator pos:line="65" pos:column="25">&amp;&amp;<pos:position pos:line="65" pos:column="35"/></operator> <name><name pos:line="65" pos:column="28">aRoot<pos:position pos:line="65" pos:column="33"/></name><index pos:line="65" pos:column="33">[<expr><name pos:line="65" pos:column="34">i<pos:position pos:line="65" pos:column="35"/></name></expr>]<pos:position pos:line="65" pos:column="36"/></index></name><operator pos:line="65" pos:column="36">&gt;<pos:position pos:line="65" pos:column="40"/></operator><literal type="number" pos:line="65" pos:column="37">1<pos:position pos:line="65" pos:column="38"/></literal></expr> )<pos:position pos:line="65" pos:column="40"/></condition><then><block pos:line="65" pos:column="40">{
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">checkPtrmap<pos:position pos:line="66" pos:column="18"/></name><argument_list pos:line="66" pos:column="18">(<argument><expr><operator pos:line="66" pos:column="19">&amp;<pos:position pos:line="66" pos:column="24"/></operator><name pos:line="66" pos:column="20">sCheck<pos:position pos:line="66" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="28">aRoot<pos:position pos:line="66" pos:column="33"/></name><index pos:line="66" pos:column="33">[<expr><name pos:line="66" pos:column="34">i<pos:position pos:line="66" pos:column="35"/></name></expr>]<pos:position pos:line="66" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="38">PTRMAP_ROOTPAGE<pos:position pos:line="66" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="55">0<pos:position pos:line="66" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif<pos:position pos:line="68" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">checkTreePage<pos:position pos:line="69" pos:column="18"/></name><argument_list pos:line="69" pos:column="18">(<argument><expr><operator pos:line="69" pos:column="19">&amp;<pos:position pos:line="69" pos:column="24"/></operator><name pos:line="69" pos:column="20">sCheck<pos:position pos:line="69" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="28">aRoot<pos:position pos:line="69" pos:column="33"/></name><index pos:line="69" pos:column="33">[<expr><name pos:line="69" pos:column="34">i<pos:position pos:line="69" pos:column="35"/></name></expr>]<pos:position pos:line="69" pos:column="36"/></index></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="38">&amp;<pos:position pos:line="69" pos:column="43"/></operator><name pos:line="69" pos:column="39">notUsed<pos:position pos:line="69" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="48">LARGEST_INT64<pos:position pos:line="69" pos:column="61"/></name></expr></argument>)<pos:position pos:line="69" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="70" pos:column="4"/></block></for>
  <expr_stmt><expr><name><name pos:line="71" pos:column="3">pBt<pos:position pos:line="71" pos:column="6"/></name><operator pos:line="71" pos:column="6">-&gt;<pos:position pos:line="71" pos:column="11"/></operator><name pos:line="71" pos:column="8">db<pos:position pos:line="71" pos:column="10"/></name><operator pos:line="71" pos:column="10">-&gt;<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="12">flags<pos:position pos:line="71" pos:column="17"/></name></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <name pos:line="71" pos:column="20">savedDbFlags<pos:position pos:line="71" pos:column="32"/></name></expr>;<pos:position pos:line="71" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="73" pos:column="3">/* Make sure every page in the file is referenced
  */</comment>
  <for pos:line="75" pos:column="3">for<control pos:line="75" pos:column="6">(<init><expr><name pos:line="75" pos:column="7">i<pos:position pos:line="75" pos:column="8"/></name><operator pos:line="75" pos:column="8">=<pos:position pos:line="75" pos:column="9"/></operator><literal type="number" pos:line="75" pos:column="9">1<pos:position pos:line="75" pos:column="10"/></literal></expr>;<pos:position pos:line="75" pos:column="11"/></init> <condition><expr><name pos:line="75" pos:column="12">i<pos:position pos:line="75" pos:column="13"/></name><operator pos:line="75" pos:column="13">&lt;=<pos:position pos:line="75" pos:column="18"/></operator><name><name pos:line="75" pos:column="15">sCheck<pos:position pos:line="75" pos:column="21"/></name><operator pos:line="75" pos:column="21">.<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="22">nPage<pos:position pos:line="75" pos:column="27"/></name></name> <operator pos:line="75" pos:column="28">&amp;&amp;<pos:position pos:line="75" pos:column="38"/></operator> <name><name pos:line="75" pos:column="31">sCheck<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">.<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="38">mxErr<pos:position pos:line="75" pos:column="43"/></name></name></expr>;<pos:position pos:line="75" pos:column="44"/></condition> <incr><expr><name pos:line="75" pos:column="45">i<pos:position pos:line="75" pos:column="46"/></name><operator pos:line="75" pos:column="46">++<pos:position pos:line="75" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="75" pos:column="49"/></control><block pos:line="75" pos:column="49">{
<cpp:ifdef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">ifdef<pos:position pos:line="76" pos:column="7"/></cpp:directive> <name pos:line="76" pos:column="8">SQLITE_OMIT_AUTOVACUUM<pos:position pos:line="76" pos:column="30"/></name></cpp:ifdef>
    <if pos:line="77" pos:column="5">if<condition pos:line="77" pos:column="7">( <expr><call><name pos:line="77" pos:column="9">getPageReferenced<pos:position pos:line="77" pos:column="26"/></name><argument_list pos:line="77" pos:column="26">(<argument><expr><operator pos:line="77" pos:column="27">&amp;<pos:position pos:line="77" pos:column="32"/></operator><name pos:line="77" pos:column="28">sCheck<pos:position pos:line="77" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="36">i<pos:position pos:line="77" pos:column="37"/></name></expr></argument>)<pos:position pos:line="77" pos:column="38"/></argument_list></call><operator pos:line="77" pos:column="38">==<pos:position pos:line="77" pos:column="40"/></operator><literal type="number" pos:line="77" pos:column="40">0<pos:position pos:line="77" pos:column="41"/></literal></expr> )<pos:position pos:line="77" pos:column="43"/></condition><then><block pos:line="77" pos:column="43">{
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">checkAppendMsg<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><operator pos:line="78" pos:column="22">&amp;<pos:position pos:line="78" pos:column="27"/></operator><name pos:line="78" pos:column="23">sCheck<pos:position pos:line="78" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="31">"Page %d is never used"<pos:position pos:line="78" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="56">i<pos:position pos:line="78" pos:column="57"/></name></expr></argument>)<pos:position pos:line="78" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>
<cpp:else pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">else<pos:position pos:line="80" pos:column="6"/></cpp:directive></cpp:else>
    <comment type="block" pos:line="81" pos:column="5">/* If the database supports auto-vacuum, make sure no tables contain
    ** references to pointer-map pages.
    */</comment>
    <if pos:line="84" pos:column="5">if<condition pos:line="84" pos:column="7">( <expr><call><name pos:line="84" pos:column="9">getPageReferenced<pos:position pos:line="84" pos:column="26"/></name><argument_list pos:line="84" pos:column="26">(<argument><expr><operator pos:line="84" pos:column="27">&amp;<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="28">sCheck<pos:position pos:line="84" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="36">i<pos:position pos:line="84" pos:column="37"/></name></expr></argument>)<pos:position pos:line="84" pos:column="38"/></argument_list></call><operator pos:line="84" pos:column="38">==<pos:position pos:line="84" pos:column="40"/></operator><literal type="number" pos:line="84" pos:column="40">0<pos:position pos:line="84" pos:column="41"/></literal> <operator pos:line="84" pos:column="42">&amp;&amp;<pos:position pos:line="84" pos:column="52"/></operator> 
       <operator pos:line="85" pos:column="8">(<pos:position pos:line="85" pos:column="9"/></operator><call><name pos:line="85" pos:column="9">PTRMAP_PAGENO<pos:position pos:line="85" pos:column="22"/></name><argument_list pos:line="85" pos:column="22">(<argument><expr><name pos:line="85" pos:column="23">pBt<pos:position pos:line="85" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="28">i<pos:position pos:line="85" pos:column="29"/></name></expr></argument>)<pos:position pos:line="85" pos:column="30"/></argument_list></call><operator pos:line="85" pos:column="30">!=<pos:position pos:line="85" pos:column="32"/></operator><name pos:line="85" pos:column="32">i<pos:position pos:line="85" pos:column="33"/></name> <operator pos:line="85" pos:column="34">||<pos:position pos:line="85" pos:column="36"/></operator> <operator pos:line="85" pos:column="37">!<pos:position pos:line="85" pos:column="38"/></operator><name><name pos:line="85" pos:column="38">pBt<pos:position pos:line="85" pos:column="41"/></name><operator pos:line="85" pos:column="41">-&gt;<pos:position pos:line="85" pos:column="46"/></operator><name pos:line="85" pos:column="43">autoVacuum<pos:position pos:line="85" pos:column="53"/></name></name><operator pos:line="85" pos:column="53">)<pos:position pos:line="85" pos:column="54"/></operator></expr> )<pos:position pos:line="85" pos:column="56"/></condition><then><block pos:line="85" pos:column="56">{
      <expr_stmt><expr><call><name pos:line="86" pos:column="7">checkAppendMsg<pos:position pos:line="86" pos:column="21"/></name><argument_list pos:line="86" pos:column="21">(<argument><expr><operator pos:line="86" pos:column="22">&amp;<pos:position pos:line="86" pos:column="27"/></operator><name pos:line="86" pos:column="23">sCheck<pos:position pos:line="86" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="31">"Page %d is never used"<pos:position pos:line="86" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="56">i<pos:position pos:line="86" pos:column="57"/></name></expr></argument>)<pos:position pos:line="86" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>
    <if pos:line="88" pos:column="5">if<condition pos:line="88" pos:column="7">( <expr><call><name pos:line="88" pos:column="9">getPageReferenced<pos:position pos:line="88" pos:column="26"/></name><argument_list pos:line="88" pos:column="26">(<argument><expr><operator pos:line="88" pos:column="27">&amp;<pos:position pos:line="88" pos:column="32"/></operator><name pos:line="88" pos:column="28">sCheck<pos:position pos:line="88" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="36">i<pos:position pos:line="88" pos:column="37"/></name></expr></argument>)<pos:position pos:line="88" pos:column="38"/></argument_list></call><operator pos:line="88" pos:column="38">!=<pos:position pos:line="88" pos:column="40"/></operator><literal type="number" pos:line="88" pos:column="40">0<pos:position pos:line="88" pos:column="41"/></literal> <operator pos:line="88" pos:column="42">&amp;&amp;<pos:position pos:line="88" pos:column="52"/></operator> 
       <operator pos:line="89" pos:column="8">(<pos:position pos:line="89" pos:column="9"/></operator><call><name pos:line="89" pos:column="9">PTRMAP_PAGENO<pos:position pos:line="89" pos:column="22"/></name><argument_list pos:line="89" pos:column="22">(<argument><expr><name pos:line="89" pos:column="23">pBt<pos:position pos:line="89" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="28">i<pos:position pos:line="89" pos:column="29"/></name></expr></argument>)<pos:position pos:line="89" pos:column="30"/></argument_list></call><operator pos:line="89" pos:column="30">==<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="32">i<pos:position pos:line="89" pos:column="33"/></name> <operator pos:line="89" pos:column="34">&amp;&amp;<pos:position pos:line="89" pos:column="44"/></operator> <name><name pos:line="89" pos:column="37">pBt<pos:position pos:line="89" pos:column="40"/></name><operator pos:line="89" pos:column="40">-&gt;<pos:position pos:line="89" pos:column="45"/></operator><name pos:line="89" pos:column="42">autoVacuum<pos:position pos:line="89" pos:column="52"/></name></name><operator pos:line="89" pos:column="52">)<pos:position pos:line="89" pos:column="53"/></operator></expr> )<pos:position pos:line="89" pos:column="55"/></condition><then><block pos:line="89" pos:column="55">{
      <expr_stmt><expr><call><name pos:line="90" pos:column="7">checkAppendMsg<pos:position pos:line="90" pos:column="21"/></name><argument_list pos:line="90" pos:column="21">(<argument><expr><operator pos:line="90" pos:column="22">&amp;<pos:position pos:line="90" pos:column="27"/></operator><name pos:line="90" pos:column="23">sCheck<pos:position pos:line="90" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="31">"Pointer map page %d is referenced"<pos:position pos:line="90" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="68">i<pos:position pos:line="90" pos:column="69"/></name></expr></argument>)<pos:position pos:line="90" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>
<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif<pos:position pos:line="92" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="93" pos:column="4"/></block></for>

  <comment type="block" pos:line="95" pos:column="3">/* Clean  up and report errors.
  */</comment>
<label><name pos:line="97" pos:column="1">integrity_ck_cleanup<pos:position pos:line="97" pos:column="21"/></name>:<pos:position pos:line="97" pos:column="22"/></label>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">sqlite3PageFree<pos:position pos:line="98" pos:column="18"/></name><argument_list pos:line="98" pos:column="18">(<argument><expr><name><name pos:line="98" pos:column="19">sCheck<pos:position pos:line="98" pos:column="25"/></name><operator pos:line="98" pos:column="25">.<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="26">heap<pos:position pos:line="98" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="99" pos:column="3">sqlite3_free<pos:position pos:line="99" pos:column="15"/></name><argument_list pos:line="99" pos:column="15">(<argument><expr><name><name pos:line="99" pos:column="16">sCheck<pos:position pos:line="99" pos:column="22"/></name><operator pos:line="99" pos:column="22">.<pos:position pos:line="99" pos:column="23"/></operator><name pos:line="99" pos:column="23">aPgRef<pos:position pos:line="99" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="31"/></expr_stmt>
  <if pos:line="100" pos:column="3">if<condition pos:line="100" pos:column="5">( <expr><name><name pos:line="100" pos:column="7">sCheck<pos:position pos:line="100" pos:column="13"/></name><operator pos:line="100" pos:column="13">.<pos:position pos:line="100" pos:column="14"/></operator><name pos:line="100" pos:column="14">mallocFailed<pos:position pos:line="100" pos:column="26"/></name></name></expr> )<pos:position pos:line="100" pos:column="28"/></condition><then><block pos:line="100" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">sqlite3StrAccumReset<pos:position pos:line="101" pos:column="25"/></name><argument_list pos:line="101" pos:column="25">(<argument><expr><operator pos:line="101" pos:column="26">&amp;<pos:position pos:line="101" pos:column="31"/></operator><name><name pos:line="101" pos:column="27">sCheck<pos:position pos:line="101" pos:column="33"/></name><operator pos:line="101" pos:column="33">.<pos:position pos:line="101" pos:column="34"/></operator><name pos:line="101" pos:column="34">errMsg<pos:position pos:line="101" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="102" pos:column="5">sCheck<pos:position pos:line="102" pos:column="11"/></name><operator pos:line="102" pos:column="11">.<pos:position pos:line="102" pos:column="12"/></operator><name pos:line="102" pos:column="12">nErr<pos:position pos:line="102" pos:column="16"/></name></name><operator pos:line="102" pos:column="16">++<pos:position pos:line="102" pos:column="18"/></operator></expr>;<pos:position pos:line="102" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="103" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="104" pos:column="3">*<pos:position pos:line="104" pos:column="4"/></operator><name pos:line="104" pos:column="4">pnErr<pos:position pos:line="104" pos:column="9"/></name> <operator pos:line="104" pos:column="10">=<pos:position pos:line="104" pos:column="11"/></operator> <name><name pos:line="104" pos:column="12">sCheck<pos:position pos:line="104" pos:column="18"/></name><operator pos:line="104" pos:column="18">.<pos:position pos:line="104" pos:column="19"/></operator><name pos:line="104" pos:column="19">nErr<pos:position pos:line="104" pos:column="23"/></name></name></expr>;<pos:position pos:line="104" pos:column="24"/></expr_stmt>
  <if pos:line="105" pos:column="3">if<condition pos:line="105" pos:column="5">( <expr><name><name pos:line="105" pos:column="7">sCheck<pos:position pos:line="105" pos:column="13"/></name><operator pos:line="105" pos:column="13">.<pos:position pos:line="105" pos:column="14"/></operator><name pos:line="105" pos:column="14">nErr<pos:position pos:line="105" pos:column="18"/></name></name><operator pos:line="105" pos:column="18">==<pos:position pos:line="105" pos:column="20"/></operator><literal type="number" pos:line="105" pos:column="20">0<pos:position pos:line="105" pos:column="21"/></literal></expr> )<pos:position pos:line="105" pos:column="23"/></condition><then pos:line="105" pos:column="23"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="24">sqlite3StrAccumReset<pos:position pos:line="105" pos:column="44"/></name><argument_list pos:line="105" pos:column="44">(<argument><expr><operator pos:line="105" pos:column="45">&amp;<pos:position pos:line="105" pos:column="50"/></operator><name><name pos:line="105" pos:column="46">sCheck<pos:position pos:line="105" pos:column="52"/></name><operator pos:line="105" pos:column="52">.<pos:position pos:line="105" pos:column="53"/></operator><name pos:line="105" pos:column="53">errMsg<pos:position pos:line="105" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="61"/></expr_stmt></block></then></if>
  <comment type="block" pos:line="106" pos:column="3">/* Make sure this analysis did not leave any unref() pages. */</comment>
  <expr_stmt><expr><call><name pos:line="107" pos:column="3">assert<pos:position pos:line="107" pos:column="9"/></name><argument_list pos:line="107" pos:column="9">( <argument><expr><name pos:line="107" pos:column="11">nRef<pos:position pos:line="107" pos:column="15"/></name><operator pos:line="107" pos:column="15">==<pos:position pos:line="107" pos:column="17"/></operator><call><name pos:line="107" pos:column="17">sqlite3PagerRefcount<pos:position pos:line="107" pos:column="37"/></name><argument_list pos:line="107" pos:column="37">(<argument><expr><name><name pos:line="107" pos:column="38">pBt<pos:position pos:line="107" pos:column="41"/></name><operator pos:line="107" pos:column="41">-&gt;<pos:position pos:line="107" pos:column="46"/></operator><name pos:line="107" pos:column="43">pPager<pos:position pos:line="107" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="50"/></argument_list></call></expr></argument> )<pos:position pos:line="107" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="108" pos:column="3">sqlite3BtreeLeave<pos:position pos:line="108" pos:column="20"/></name><argument_list pos:line="108" pos:column="20">(<argument><expr><name pos:line="108" pos:column="21">p<pos:position pos:line="108" pos:column="22"/></name></expr></argument>)<pos:position pos:line="108" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="24"/></expr_stmt>
  <return pos:line="109" pos:column="3">return <expr><call><name pos:line="109" pos:column="10">sqlite3StrAccumFinish<pos:position pos:line="109" pos:column="31"/></name><argument_list pos:line="109" pos:column="31">(<argument><expr><operator pos:line="109" pos:column="32">&amp;<pos:position pos:line="109" pos:column="37"/></operator><name><name pos:line="109" pos:column="33">sCheck<pos:position pos:line="109" pos:column="39"/></name><operator pos:line="109" pos:column="39">.<pos:position pos:line="109" pos:column="40"/></operator><name pos:line="109" pos:column="40">errMsg<pos:position pos:line="109" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="48"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

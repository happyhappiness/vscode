<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_504.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">constructAutomaticIndex<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Parse<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pParse<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>,              <comment type="block" pos:line="2" pos:column="31">/* The parsing context */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">WhereClause<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">pWC<pos:position pos:line="3" pos:column="19"/></name></decl></parameter>,           <comment type="block" pos:line="3" pos:column="31">/* The WHERE clause */</comment>
  <parameter><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">SrcList_item<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">pSrc<pos:position pos:line="4" pos:column="28"/></name></decl></parameter>,  <comment type="block" pos:line="4" pos:column="31">/* The FROM clause term to get the next index */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">Bitmask<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">notReady<pos:position pos:line="5" pos:column="19"/></name></decl></parameter>,           <comment type="block" pos:line="5" pos:column="31">/* Mask of cursors that are not available */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">WhereLevel<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">pLevel<pos:position pos:line="6" pos:column="21"/></name></decl></parameter>          <comment type="block" pos:line="6" pos:column="31">/* Write new index here */</comment>
)<pos:position pos:line="7" pos:column="2"/></parameter_list><block pos:line="7" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">nKeyCol<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>                <comment type="block" pos:line="8" pos:column="31">/* Number of columns in the constructed index */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">WhereTerm<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">pTerm<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>           <comment type="block" pos:line="9" pos:column="31">/* A single term of the WHERE clause */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">WhereTerm<pos:position pos:line="10" pos:column="12"/></name> <modifier pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></modifier></type><name pos:line="10" pos:column="14">pWCEnd<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>          <comment type="block" pos:line="10" pos:column="31">/* End of pWC-&gt;a[] */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">Index<pos:position pos:line="11" pos:column="8"/></name> <modifier pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></modifier></type><name pos:line="11" pos:column="10">pIdx<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>                <comment type="block" pos:line="11" pos:column="31">/* Object describing the transient index */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">Vdbe<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">v<pos:position pos:line="12" pos:column="10"/></name></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>                    <comment type="block" pos:line="12" pos:column="31">/* Prepared statement under construction */</comment>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">addrInit<pos:position pos:line="13" pos:column="15"/></name></decl>;<pos:position pos:line="13" pos:column="16"/></decl_stmt>               <comment type="block" pos:line="13" pos:column="31">/* Address of the initialization bypass jump */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">Table<pos:position pos:line="14" pos:column="8"/></name> <modifier pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></modifier></type><name pos:line="14" pos:column="10">pTable<pos:position pos:line="14" pos:column="16"/></name></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>              <comment type="block" pos:line="14" pos:column="31">/* The table being indexed */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">addrTop<pos:position pos:line="15" pos:column="14"/></name></decl>;<pos:position pos:line="15" pos:column="15"/></decl_stmt>                <comment type="block" pos:line="15" pos:column="31">/* Top of the index fill loop */</comment>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">regRecord<pos:position pos:line="16" pos:column="16"/></name></decl>;<pos:position pos:line="16" pos:column="17"/></decl_stmt>              <comment type="block" pos:line="16" pos:column="31">/* Register holding an index record */</comment>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">int<pos:position pos:line="17" pos:column="6"/></name></type> <name pos:line="17" pos:column="7">n<pos:position pos:line="17" pos:column="8"/></name></decl>;<pos:position pos:line="17" pos:column="9"/></decl_stmt>                      <comment type="block" pos:line="17" pos:column="31">/* Column counter */</comment>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">i<pos:position pos:line="18" pos:column="8"/></name></decl>;<pos:position pos:line="18" pos:column="9"/></decl_stmt>                      <comment type="block" pos:line="18" pos:column="31">/* Loop counter */</comment>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">mxBitCol<pos:position pos:line="19" pos:column="15"/></name></decl>;<pos:position pos:line="19" pos:column="16"/></decl_stmt>               <comment type="block" pos:line="19" pos:column="31">/* Maximum column in pSrc-&gt;colUsed */</comment>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">CollSeq<pos:position pos:line="20" pos:column="10"/></name> <modifier pos:line="20" pos:column="11">*<pos:position pos:line="20" pos:column="12"/></modifier></type><name pos:line="20" pos:column="12">pColl<pos:position pos:line="20" pos:column="17"/></name></decl>;<pos:position pos:line="20" pos:column="18"/></decl_stmt>             <comment type="block" pos:line="20" pos:column="31">/* Collating sequence to on a column */</comment>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">WhereLoop<pos:position pos:line="21" pos:column="12"/></name> <modifier pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></modifier></type><name pos:line="21" pos:column="14">pLoop<pos:position pos:line="21" pos:column="19"/></name></decl>;<pos:position pos:line="21" pos:column="20"/></decl_stmt>           <comment type="block" pos:line="21" pos:column="31">/* The Loop object */</comment>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">char<pos:position pos:line="22" pos:column="7"/></name> <modifier pos:line="22" pos:column="8">*<pos:position pos:line="22" pos:column="9"/></modifier></type><name pos:line="22" pos:column="9">zNotUsed<pos:position pos:line="22" pos:column="17"/></name></decl>;<pos:position pos:line="22" pos:column="18"/></decl_stmt>             <comment type="block" pos:line="22" pos:column="31">/* Extra space on the end of pIdx */</comment>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">Bitmask<pos:position pos:line="23" pos:column="10"/></name></type> <name pos:line="23" pos:column="11">idxCols<pos:position pos:line="23" pos:column="18"/></name></decl>;<pos:position pos:line="23" pos:column="19"/></decl_stmt>            <comment type="block" pos:line="23" pos:column="31">/* Bitmap of columns used for indexing */</comment>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">Bitmask<pos:position pos:line="24" pos:column="10"/></name></type> <name pos:line="24" pos:column="11">extraCols<pos:position pos:line="24" pos:column="20"/></name></decl>;<pos:position pos:line="24" pos:column="21"/></decl_stmt>          <comment type="block" pos:line="24" pos:column="31">/* Bitmap of additional columns */</comment>
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">u8<pos:position pos:line="25" pos:column="5"/></name></type> <name pos:line="25" pos:column="6">sentWarning<pos:position pos:line="25" pos:column="17"/></name> <init pos:line="25" pos:column="18">= <expr><literal type="number" pos:line="25" pos:column="20">0<pos:position pos:line="25" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="22"/></decl_stmt>         <comment type="block" pos:line="25" pos:column="31">/* True if a warnning has been issued */</comment>
  <decl_stmt><decl><type><name pos:line="26" pos:column="3">Expr<pos:position pos:line="26" pos:column="7"/></name> <modifier pos:line="26" pos:column="8">*<pos:position pos:line="26" pos:column="9"/></modifier></type><name pos:line="26" pos:column="9">pPartial<pos:position pos:line="26" pos:column="17"/></name> <init pos:line="26" pos:column="18">= <expr><literal type="number" pos:line="26" pos:column="20">0<pos:position pos:line="26" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="22"/></decl_stmt>         <comment type="block" pos:line="26" pos:column="31">/* Partial Index Expression */</comment>
  <decl_stmt><decl><type><name pos:line="27" pos:column="3">int<pos:position pos:line="27" pos:column="6"/></name></type> <name pos:line="27" pos:column="7">iContinue<pos:position pos:line="27" pos:column="16"/></name> <init pos:line="27" pos:column="17">= <expr><literal type="number" pos:line="27" pos:column="19">0<pos:position pos:line="27" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="21"/></decl_stmt>          <comment type="block" pos:line="27" pos:column="31">/* Jump here to skip excluded rows */</comment>
  <decl_stmt><decl><type><name><name pos:line="28" pos:column="3">struct<pos:position pos:line="28" pos:column="9"/></name> <name pos:line="28" pos:column="10">SrcList_item<pos:position pos:line="28" pos:column="22"/></name></name> <modifier pos:line="28" pos:column="23">*<pos:position pos:line="28" pos:column="24"/></modifier></type><name pos:line="28" pos:column="24">pTabItem<pos:position pos:line="28" pos:column="32"/></name></decl>;<pos:position pos:line="28" pos:column="33"/></decl_stmt>  <comment type="block" pos:line="28" pos:column="35">/* FROM clause term being indexed */</comment>
  <decl_stmt><decl><type><name pos:line="29" pos:column="3">int<pos:position pos:line="29" pos:column="6"/></name></type> <name pos:line="29" pos:column="7">addrCounter<pos:position pos:line="29" pos:column="18"/></name> <init pos:line="29" pos:column="19">= <expr><literal type="number" pos:line="29" pos:column="21">0<pos:position pos:line="29" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="23"/></decl_stmt>        <comment type="block" pos:line="29" pos:column="31">/* Address where integer counter is initialized */</comment>
  <decl_stmt><decl><type><name pos:line="30" pos:column="3">int<pos:position pos:line="30" pos:column="6"/></name></type> <name pos:line="30" pos:column="7">regBase<pos:position pos:line="30" pos:column="14"/></name></decl>;<pos:position pos:line="30" pos:column="15"/></decl_stmt>                <comment type="block" pos:line="30" pos:column="31">/* Array of registers where record is assembled */</comment>

  <comment type="block" pos:line="32" pos:column="3">/* Generate code to skip over the creation and initialization of the
  ** transient index on 2nd and subsequent iterations of the loop. */</comment>
  <expr_stmt><expr><name pos:line="34" pos:column="3">v<pos:position pos:line="34" pos:column="4"/></name> <operator pos:line="34" pos:column="5">=<pos:position pos:line="34" pos:column="6"/></operator> <name><name pos:line="34" pos:column="7">pParse<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">pVdbe<pos:position pos:line="34" pos:column="20"/></name></name></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">assert<pos:position pos:line="35" pos:column="9"/></name><argument_list pos:line="35" pos:column="9">( <argument><expr><name pos:line="35" pos:column="11">v<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">!=<pos:position pos:line="35" pos:column="14"/></operator><literal type="number" pos:line="35" pos:column="14">0<pos:position pos:line="35" pos:column="15"/></literal></expr></argument> )<pos:position pos:line="35" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="36" pos:column="3">addrInit<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">sqlite3VdbeAddOp0<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">v<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">OP_Once<pos:position pos:line="36" pos:column="42"/></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt> <expr_stmt><expr><call><name pos:line="36" pos:column="45">VdbeCoverage<pos:position pos:line="36" pos:column="57"/></name><argument_list pos:line="36" pos:column="57">(<argument><expr><name pos:line="36" pos:column="58">v<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>

  <comment type="block" pos:line="38" pos:column="3">/* Count the number of columns that will be added to the index
  ** and used to match WHERE clause constraints */</comment>
  <expr_stmt><expr><name pos:line="40" pos:column="3">nKeyCol<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <literal type="number" pos:line="40" pos:column="13">0<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="41" pos:column="3">pTable<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <name><name pos:line="41" pos:column="12">pSrc<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">pTab<pos:position pos:line="41" pos:column="22"/></name></name></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="42" pos:column="3">pWCEnd<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <operator pos:line="42" pos:column="12">&amp;<pos:position pos:line="42" pos:column="17"/></operator><name><name pos:line="42" pos:column="13">pWC<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">a<pos:position pos:line="42" pos:column="19"/></name><index pos:line="42" pos:column="19">[<expr><name><name pos:line="42" pos:column="20">pWC<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">-&gt;<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="25">nTerm<pos:position pos:line="42" pos:column="30"/></name></name></expr>]<pos:position pos:line="42" pos:column="31"/></index></name></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name pos:line="43" pos:column="3">pLoop<pos:position pos:line="43" pos:column="8"/></name> <operator pos:line="43" pos:column="9">=<pos:position pos:line="43" pos:column="10"/></operator> <name><name pos:line="43" pos:column="11">pLevel<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">-&gt;<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="19">pWLoop<pos:position pos:line="43" pos:column="25"/></name></name></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="44" pos:column="3">idxCols<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <literal type="number" pos:line="44" pos:column="13">0<pos:position pos:line="44" pos:column="14"/></literal></expr>;<pos:position pos:line="44" pos:column="15"/></expr_stmt>
  <for pos:line="45" pos:column="3">for<control pos:line="45" pos:column="6">(<init><expr><name pos:line="45" pos:column="7">pTerm<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator><name><name pos:line="45" pos:column="13">pWC<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">a<pos:position pos:line="45" pos:column="19"/></name></name></expr>;<pos:position pos:line="45" pos:column="20"/></init> <condition><expr><name pos:line="45" pos:column="21">pTerm<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">&lt;<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="27">pWCEnd<pos:position pos:line="45" pos:column="33"/></name></expr>;<pos:position pos:line="45" pos:column="34"/></condition> <incr><expr><name pos:line="45" pos:column="35">pTerm<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">++<pos:position pos:line="45" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="45" pos:column="43"/></control><block pos:line="45" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">Expr<pos:position pos:line="46" pos:column="9"/></name> <modifier pos:line="46" pos:column="10">*<pos:position pos:line="46" pos:column="11"/></modifier></type><name pos:line="46" pos:column="11">pExpr<pos:position pos:line="46" pos:column="16"/></name> <init pos:line="46" pos:column="17">= <expr><name><name pos:line="46" pos:column="19">pTerm<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">pExpr<pos:position pos:line="46" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="46" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">assert<pos:position pos:line="47" pos:column="11"/></name><argument_list pos:line="47" pos:column="11">( <argument><expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><call><name pos:line="47" pos:column="14">ExprHasProperty<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">pExpr<pos:position pos:line="47" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="37">EP_FromJoin<pos:position pos:line="47" pos:column="48"/></name></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></call>    <comment type="block" pos:line="47" pos:column="53">/* prereq always non-zero */</comment>
         <operator pos:line="48" pos:column="10">||<pos:position pos:line="48" pos:column="12"/></operator> <name><name pos:line="48" pos:column="13">pExpr<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">iRightJoinTable<pos:position pos:line="48" pos:column="35"/></name></name><operator pos:line="48" pos:column="35">!=<pos:position pos:line="48" pos:column="37"/></operator><name><name pos:line="48" pos:column="37">pSrc<pos:position pos:line="48" pos:column="41"/></name><operator pos:line="48" pos:column="41">-&gt;<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="43">iCursor<pos:position pos:line="48" pos:column="50"/></name></name>   <comment type="block" pos:line="48" pos:column="53">/*   for the right-hand   */</comment>
         <operator pos:line="49" pos:column="10">||<pos:position pos:line="49" pos:column="12"/></operator> <name><name pos:line="49" pos:column="13">pLoop<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">-&gt;<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="20">prereq<pos:position pos:line="49" pos:column="26"/></name></name><operator pos:line="49" pos:column="26">!=<pos:position pos:line="49" pos:column="28"/></operator><literal type="number" pos:line="49" pos:column="28">0<pos:position pos:line="49" pos:column="29"/></literal></expr></argument> )<pos:position pos:line="49" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>                     <comment type="block" pos:line="49" pos:column="53">/*   table of a LEFT JOIN */</comment>
    <if pos:line="50" pos:column="5">if<condition pos:line="50" pos:column="7">( <expr><name><name pos:line="50" pos:column="9">pLoop<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">-&gt;<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="16">prereq<pos:position pos:line="50" pos:column="22"/></name></name><operator pos:line="50" pos:column="22">==<pos:position pos:line="50" pos:column="24"/></operator><literal type="number" pos:line="50" pos:column="24">0<pos:position pos:line="50" pos:column="25"/></literal>
     <operator pos:line="51" pos:column="6">&amp;&amp;<pos:position pos:line="51" pos:column="16"/></operator> <operator pos:line="51" pos:column="9">(<pos:position pos:line="51" pos:column="10"/></operator><name><name pos:line="51" pos:column="10">pTerm<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">-&gt;<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="17">wtFlags<pos:position pos:line="51" pos:column="24"/></name></name> <operator pos:line="51" pos:column="25">&amp;<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="27">TERM_VIRTUAL<pos:position pos:line="51" pos:column="39"/></name><operator pos:line="51" pos:column="39">)<pos:position pos:line="51" pos:column="40"/></operator><operator pos:line="51" pos:column="40">==<pos:position pos:line="51" pos:column="42"/></operator><literal type="number" pos:line="51" pos:column="42">0<pos:position pos:line="51" pos:column="43"/></literal>
     <operator pos:line="52" pos:column="6">&amp;&amp;<pos:position pos:line="52" pos:column="16"/></operator> <operator pos:line="52" pos:column="9">!<pos:position pos:line="52" pos:column="10"/></operator><call><name pos:line="52" pos:column="10">ExprHasProperty<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">pExpr<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="33">EP_FromJoin<pos:position pos:line="52" pos:column="44"/></name></expr></argument>)<pos:position pos:line="52" pos:column="45"/></argument_list></call>
     <operator pos:line="53" pos:column="6">&amp;&amp;<pos:position pos:line="53" pos:column="16"/></operator> <call><name pos:line="53" pos:column="9">sqlite3ExprIsTableConstant<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><name pos:line="53" pos:column="36">pExpr<pos:position pos:line="53" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="43">pSrc<pos:position pos:line="53" pos:column="47"/></name><operator pos:line="53" pos:column="47">-&gt;<pos:position pos:line="53" pos:column="52"/></operator><name pos:line="53" pos:column="49">iCursor<pos:position pos:line="53" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr> )<pos:position pos:line="53" pos:column="59"/></condition><then><block pos:line="53" pos:column="59">{
      <expr_stmt><expr><name pos:line="54" pos:column="7">pPartial<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <call><name pos:line="54" pos:column="18">sqlite3ExprAnd<pos:position pos:line="54" pos:column="32"/></name><argument_list pos:line="54" pos:column="32">(<argument><expr><name><name pos:line="54" pos:column="33">pParse<pos:position pos:line="54" pos:column="39"/></name><operator pos:line="54" pos:column="39">-&gt;<pos:position pos:line="54" pos:column="44"/></operator><name pos:line="54" pos:column="41">db<pos:position pos:line="54" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="45">pPartial<pos:position pos:line="54" pos:column="53"/></name></expr></argument>,
                                <argument><expr><call><name pos:line="55" pos:column="33">sqlite3ExprDup<pos:position pos:line="55" pos:column="47"/></name><argument_list pos:line="55" pos:column="47">(<argument><expr><name><name pos:line="55" pos:column="48">pParse<pos:position pos:line="55" pos:column="54"/></name><operator pos:line="55" pos:column="54">-&gt;<pos:position pos:line="55" pos:column="59"/></operator><name pos:line="55" pos:column="56">db<pos:position pos:line="55" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="60">pExpr<pos:position pos:line="55" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="67">0<pos:position pos:line="55" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">( <expr><call><name pos:line="57" pos:column="9">termCanDriveIndex<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">pTerm<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="34">pSrc<pos:position pos:line="57" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="40">notReady<pos:position pos:line="57" pos:column="48"/></name></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr> )<pos:position pos:line="57" pos:column="51"/></condition><then><block pos:line="57" pos:column="51">{
      <decl_stmt><decl><type><name pos:line="58" pos:column="7">int<pos:position pos:line="58" pos:column="10"/></name></type> <name pos:line="58" pos:column="11">iCol<pos:position pos:line="58" pos:column="15"/></name> <init pos:line="58" pos:column="16">= <expr><name><name pos:line="58" pos:column="18">pTerm<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">-&gt;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="25">u<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">.<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="27">leftColumn<pos:position pos:line="58" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="58" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="59" pos:column="7">Bitmask<pos:position pos:line="59" pos:column="14"/></name></type> <name pos:line="59" pos:column="15">cMask<pos:position pos:line="59" pos:column="20"/></name> <init pos:line="59" pos:column="21">= <expr><ternary><condition><expr><name pos:line="59" pos:column="23">iCol<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">&gt;=<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="29">BMS<pos:position pos:line="59" pos:column="32"/></name></expr> ?<pos:position pos:line="59" pos:column="34"/></condition><then pos:line="59" pos:column="34"> <expr><call><name pos:line="59" pos:column="35">MASKBIT<pos:position pos:line="59" pos:column="42"/></name><argument_list pos:line="59" pos:column="42">(<argument><expr><name pos:line="59" pos:column="43">BMS<pos:position pos:line="59" pos:column="46"/></name><operator pos:line="59" pos:column="46">-<pos:position pos:line="59" pos:column="47"/></operator><literal type="number" pos:line="59" pos:column="47">1<pos:position pos:line="59" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr> <pos:position pos:line="59" pos:column="50"/></then><else pos:line="59" pos:column="50">: <expr><call><name pos:line="59" pos:column="52">MASKBIT<pos:position pos:line="59" pos:column="59"/></name><argument_list pos:line="59" pos:column="59">(<argument><expr><name pos:line="59" pos:column="60">iCol<pos:position pos:line="59" pos:column="64"/></name></expr></argument>)<pos:position pos:line="59" pos:column="65"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="59" pos:column="66"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">testcase<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">( <argument><expr><name pos:line="60" pos:column="17">iCol<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">==<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="23">BMS<pos:position pos:line="60" pos:column="26"/></name></expr></argument> )<pos:position pos:line="60" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">testcase<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">( <argument><expr><name pos:line="61" pos:column="17">iCol<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">==<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="23">BMS<pos:position pos:line="61" pos:column="26"/></name><operator pos:line="61" pos:column="26">-<pos:position pos:line="61" pos:column="27"/></operator><literal type="number" pos:line="61" pos:column="27">1<pos:position pos:line="61" pos:column="28"/></literal></expr></argument> )<pos:position pos:line="61" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="31"/></expr_stmt>
      <if pos:line="62" pos:column="7">if<condition pos:line="62" pos:column="9">( <expr><operator pos:line="62" pos:column="11">!<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="12">sentWarning<pos:position pos:line="62" pos:column="23"/></name></expr> )<pos:position pos:line="62" pos:column="25"/></condition><then><block pos:line="62" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">sqlite3_log<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">SQLITE_WARNING_AUTOINDEX<pos:position pos:line="63" pos:column="45"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="64" pos:column="13">"automatic index on %s(%s)"<pos:position pos:line="64" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="42">pTable<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">-&gt;<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="50">zName<pos:position pos:line="64" pos:column="55"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="65" pos:column="13">pTable<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">-&gt;<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="21">aCol<pos:position pos:line="65" pos:column="25"/></name><index pos:line="65" pos:column="25">[<expr><name pos:line="65" pos:column="26">iCol<pos:position pos:line="65" pos:column="30"/></name></expr>]<pos:position pos:line="65" pos:column="31"/></index></name><operator pos:line="65" pos:column="31">.<pos:position pos:line="65" pos:column="32"/></operator><name pos:line="65" pos:column="32">zName<pos:position pos:line="65" pos:column="37"/></name></expr></argument>)<pos:position pos:line="65" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="66" pos:column="9">sentWarning<pos:position pos:line="66" pos:column="20"/></name> <operator pos:line="66" pos:column="21">=<pos:position pos:line="66" pos:column="22"/></operator> <literal type="number" pos:line="66" pos:column="23">1<pos:position pos:line="66" pos:column="24"/></literal></expr>;<pos:position pos:line="66" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>
      <if pos:line="68" pos:column="7">if<condition pos:line="68" pos:column="9">( <expr><operator pos:line="68" pos:column="11">(<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="12">idxCols<pos:position pos:line="68" pos:column="19"/></name> <operator pos:line="68" pos:column="20">&amp;<pos:position pos:line="68" pos:column="25"/></operator> <name pos:line="68" pos:column="22">cMask<pos:position pos:line="68" pos:column="27"/></name><operator pos:line="68" pos:column="27">)<pos:position pos:line="68" pos:column="28"/></operator><operator pos:line="68" pos:column="28">==<pos:position pos:line="68" pos:column="30"/></operator><literal type="number" pos:line="68" pos:column="30">0<pos:position pos:line="68" pos:column="31"/></literal></expr> )<pos:position pos:line="68" pos:column="33"/></condition><then><block pos:line="68" pos:column="33">{
        <if pos:line="69" pos:column="9">if<condition pos:line="69" pos:column="11">( <expr><call><name pos:line="69" pos:column="13">whereLoopResize<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><name><name pos:line="69" pos:column="29">pParse<pos:position pos:line="69" pos:column="35"/></name><operator pos:line="69" pos:column="35">-&gt;<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="37">db<pos:position pos:line="69" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="41">pLoop<pos:position pos:line="69" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="48">nKeyCol<pos:position pos:line="69" pos:column="55"/></name><operator pos:line="69" pos:column="55">+<pos:position pos:line="69" pos:column="56"/></operator><literal type="number" pos:line="69" pos:column="56">1<pos:position pos:line="69" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="58"/></argument_list></call></expr> )<pos:position pos:line="69" pos:column="60"/></condition><then><block pos:line="69" pos:column="60">{
          <goto pos:line="70" pos:column="11">goto <name pos:line="70" pos:column="16">end_auto_index_create<pos:position pos:line="70" pos:column="37"/></name>;<pos:position pos:line="70" pos:column="38"/></goto>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">pLoop<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">-&gt;<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="16">aLTerm<pos:position pos:line="72" pos:column="22"/></name><index pos:line="72" pos:column="22">[<expr><name pos:line="72" pos:column="23">nKeyCol<pos:position pos:line="72" pos:column="30"/></name><operator pos:line="72" pos:column="30">++<pos:position pos:line="72" pos:column="32"/></operator></expr>]<pos:position pos:line="72" pos:column="33"/></index></name> <operator pos:line="72" pos:column="34">=<pos:position pos:line="72" pos:column="35"/></operator> <name pos:line="72" pos:column="36">pTerm<pos:position pos:line="72" pos:column="41"/></name></expr>;<pos:position pos:line="72" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="73" pos:column="9">idxCols<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">|=<pos:position pos:line="73" pos:column="19"/></operator> <name pos:line="73" pos:column="20">cMask<pos:position pos:line="73" pos:column="25"/></name></expr>;<pos:position pos:line="73" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="74" pos:column="8"/></block></then></if>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>
  }<pos:position pos:line="76" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="77" pos:column="3">assert<pos:position pos:line="77" pos:column="9"/></name><argument_list pos:line="77" pos:column="9">( <argument><expr><name pos:line="77" pos:column="11">nKeyCol<pos:position pos:line="77" pos:column="18"/></name><operator pos:line="77" pos:column="18">&gt;<pos:position pos:line="77" pos:column="22"/></operator><literal type="number" pos:line="77" pos:column="19">0<pos:position pos:line="77" pos:column="20"/></literal></expr></argument> )<pos:position pos:line="77" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="78" pos:column="3">pLoop<pos:position pos:line="78" pos:column="8"/></name><operator pos:line="78" pos:column="8">-&gt;<pos:position pos:line="78" pos:column="13"/></operator><name pos:line="78" pos:column="10">u<pos:position pos:line="78" pos:column="11"/></name><operator pos:line="78" pos:column="11">.<pos:position pos:line="78" pos:column="12"/></operator><name pos:line="78" pos:column="12">btree<pos:position pos:line="78" pos:column="17"/></name><operator pos:line="78" pos:column="17">.<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="18">nEq<pos:position pos:line="78" pos:column="21"/></name></name> <operator pos:line="78" pos:column="22">=<pos:position pos:line="78" pos:column="23"/></operator> <name><name pos:line="78" pos:column="24">pLoop<pos:position pos:line="78" pos:column="29"/></name><operator pos:line="78" pos:column="29">-&gt;<pos:position pos:line="78" pos:column="34"/></operator><name pos:line="78" pos:column="31">nLTerm<pos:position pos:line="78" pos:column="37"/></name></name> <operator pos:line="78" pos:column="38">=<pos:position pos:line="78" pos:column="39"/></operator> <name pos:line="78" pos:column="40">nKeyCol<pos:position pos:line="78" pos:column="47"/></name></expr>;<pos:position pos:line="78" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="79" pos:column="3">pLoop<pos:position pos:line="79" pos:column="8"/></name><operator pos:line="79" pos:column="8">-&gt;<pos:position pos:line="79" pos:column="13"/></operator><name pos:line="79" pos:column="10">wsFlags<pos:position pos:line="79" pos:column="17"/></name></name> <operator pos:line="79" pos:column="18">=<pos:position pos:line="79" pos:column="19"/></operator> <name pos:line="79" pos:column="20">WHERE_COLUMN_EQ<pos:position pos:line="79" pos:column="35"/></name> <operator pos:line="79" pos:column="36">|<pos:position pos:line="79" pos:column="37"/></operator> <name pos:line="79" pos:column="38">WHERE_IDX_ONLY<pos:position pos:line="79" pos:column="52"/></name> <operator pos:line="79" pos:column="53">|<pos:position pos:line="79" pos:column="54"/></operator> <name pos:line="79" pos:column="55">WHERE_INDEXED<pos:position pos:line="79" pos:column="68"/></name>
                     <operator pos:line="80" pos:column="22">|<pos:position pos:line="80" pos:column="23"/></operator> <name pos:line="80" pos:column="24">WHERE_AUTO_INDEX<pos:position pos:line="80" pos:column="40"/></name></expr>;<pos:position pos:line="80" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="82" pos:column="3">/* Count the number of additional columns needed to create a
  ** covering index.  A "covering index" is an index that contains all
  ** columns that are needed by the query.  With a covering index, the
  ** original table never needs to be accessed.  Automatic indices must
  ** be a covering index because the index will not be updated if the
  ** original table changes and the index and table cannot both be used
  ** if they go out of sync.
  */</comment>
  <expr_stmt><expr><name pos:line="90" pos:column="3">extraCols<pos:position pos:line="90" pos:column="12"/></name> <operator pos:line="90" pos:column="13">=<pos:position pos:line="90" pos:column="14"/></operator> <name><name pos:line="90" pos:column="15">pSrc<pos:position pos:line="90" pos:column="19"/></name><operator pos:line="90" pos:column="19">-&gt;<pos:position pos:line="90" pos:column="24"/></operator><name pos:line="90" pos:column="21">colUsed<pos:position pos:line="90" pos:column="28"/></name></name> <operator pos:line="90" pos:column="29">&amp;<pos:position pos:line="90" pos:column="34"/></operator> <operator pos:line="90" pos:column="31">(<pos:position pos:line="90" pos:column="32"/></operator><operator pos:line="90" pos:column="32">~<pos:position pos:line="90" pos:column="33"/></operator><name pos:line="90" pos:column="33">idxCols<pos:position pos:line="90" pos:column="40"/></name> <operator pos:line="90" pos:column="41">|<pos:position pos:line="90" pos:column="42"/></operator> <call><name pos:line="90" pos:column="43">MASKBIT<pos:position pos:line="90" pos:column="50"/></name><argument_list pos:line="90" pos:column="50">(<argument><expr><name pos:line="90" pos:column="51">BMS<pos:position pos:line="90" pos:column="54"/></name><operator pos:line="90" pos:column="54">-<pos:position pos:line="90" pos:column="55"/></operator><literal type="number" pos:line="90" pos:column="55">1<pos:position pos:line="90" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="57"/></argument_list></call><operator pos:line="90" pos:column="57">)<pos:position pos:line="90" pos:column="58"/></operator></expr>;<pos:position pos:line="90" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name pos:line="91" pos:column="3">mxBitCol<pos:position pos:line="91" pos:column="11"/></name> <operator pos:line="91" pos:column="12">=<pos:position pos:line="91" pos:column="13"/></operator> <call><name pos:line="91" pos:column="14">MIN<pos:position pos:line="91" pos:column="17"/></name><argument_list pos:line="91" pos:column="17">(<argument><expr><name pos:line="91" pos:column="18">BMS<pos:position pos:line="91" pos:column="21"/></name><operator pos:line="91" pos:column="21">-<pos:position pos:line="91" pos:column="22"/></operator><literal type="number" pos:line="91" pos:column="22">1<pos:position pos:line="91" pos:column="23"/></literal></expr></argument>,<argument><expr><name><name pos:line="91" pos:column="24">pTable<pos:position pos:line="91" pos:column="30"/></name><operator pos:line="91" pos:column="30">-&gt;<pos:position pos:line="91" pos:column="35"/></operator><name pos:line="91" pos:column="32">nCol<pos:position pos:line="91" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="92" pos:column="3">testcase<pos:position pos:line="92" pos:column="11"/></name><argument_list pos:line="92" pos:column="11">( <argument><expr><name><name pos:line="92" pos:column="13">pTable<pos:position pos:line="92" pos:column="19"/></name><operator pos:line="92" pos:column="19">-&gt;<pos:position pos:line="92" pos:column="24"/></operator><name pos:line="92" pos:column="21">nCol<pos:position pos:line="92" pos:column="25"/></name></name><operator pos:line="92" pos:column="25">==<pos:position pos:line="92" pos:column="27"/></operator><name pos:line="92" pos:column="27">BMS<pos:position pos:line="92" pos:column="30"/></name><operator pos:line="92" pos:column="30">-<pos:position pos:line="92" pos:column="31"/></operator><literal type="number" pos:line="92" pos:column="31">1<pos:position pos:line="92" pos:column="32"/></literal></expr></argument> )<pos:position pos:line="92" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="93" pos:column="3">testcase<pos:position pos:line="93" pos:column="11"/></name><argument_list pos:line="93" pos:column="11">( <argument><expr><name><name pos:line="93" pos:column="13">pTable<pos:position pos:line="93" pos:column="19"/></name><operator pos:line="93" pos:column="19">-&gt;<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="21">nCol<pos:position pos:line="93" pos:column="25"/></name></name><operator pos:line="93" pos:column="25">==<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="27">BMS<pos:position pos:line="93" pos:column="30"/></name><operator pos:line="93" pos:column="30">-<pos:position pos:line="93" pos:column="31"/></operator><literal type="number" pos:line="93" pos:column="31">2<pos:position pos:line="93" pos:column="32"/></literal></expr></argument> )<pos:position pos:line="93" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="35"/></expr_stmt>
  <for pos:line="94" pos:column="3">for<control pos:line="94" pos:column="6">(<init><expr><name pos:line="94" pos:column="7">i<pos:position pos:line="94" pos:column="8"/></name><operator pos:line="94" pos:column="8">=<pos:position pos:line="94" pos:column="9"/></operator><literal type="number" pos:line="94" pos:column="9">0<pos:position pos:line="94" pos:column="10"/></literal></expr>;<pos:position pos:line="94" pos:column="11"/></init> <condition><expr><name pos:line="94" pos:column="12">i<pos:position pos:line="94" pos:column="13"/></name><operator pos:line="94" pos:column="13">&lt;<pos:position pos:line="94" pos:column="17"/></operator><name pos:line="94" pos:column="14">mxBitCol<pos:position pos:line="94" pos:column="22"/></name></expr>;<pos:position pos:line="94" pos:column="23"/></condition> <incr><expr><name pos:line="94" pos:column="24">i<pos:position pos:line="94" pos:column="25"/></name><operator pos:line="94" pos:column="25">++<pos:position pos:line="94" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="94" pos:column="28"/></control><block pos:line="94" pos:column="28">{
    <if pos:line="95" pos:column="5">if<condition pos:line="95" pos:column="7">( <expr><name pos:line="95" pos:column="9">extraCols<pos:position pos:line="95" pos:column="18"/></name> <operator pos:line="95" pos:column="19">&amp;<pos:position pos:line="95" pos:column="24"/></operator> <call><name pos:line="95" pos:column="21">MASKBIT<pos:position pos:line="95" pos:column="28"/></name><argument_list pos:line="95" pos:column="28">(<argument><expr><name pos:line="95" pos:column="29">i<pos:position pos:line="95" pos:column="30"/></name></expr></argument>)<pos:position pos:line="95" pos:column="31"/></argument_list></call></expr> )<pos:position pos:line="95" pos:column="33"/></condition><then pos:line="95" pos:column="33"> <block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="34">nKeyCol<pos:position pos:line="95" pos:column="41"/></name><operator pos:line="95" pos:column="41">++<pos:position pos:line="95" pos:column="43"/></operator></expr>;<pos:position pos:line="95" pos:column="44"/></expr_stmt></block></then></if>
  }<pos:position pos:line="96" pos:column="4"/></block></for>
  <if pos:line="97" pos:column="3">if<condition pos:line="97" pos:column="5">( <expr><name><name pos:line="97" pos:column="7">pSrc<pos:position pos:line="97" pos:column="11"/></name><operator pos:line="97" pos:column="11">-&gt;<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="13">colUsed<pos:position pos:line="97" pos:column="20"/></name></name> <operator pos:line="97" pos:column="21">&amp;<pos:position pos:line="97" pos:column="26"/></operator> <call><name pos:line="97" pos:column="23">MASKBIT<pos:position pos:line="97" pos:column="30"/></name><argument_list pos:line="97" pos:column="30">(<argument><expr><name pos:line="97" pos:column="31">BMS<pos:position pos:line="97" pos:column="34"/></name><operator pos:line="97" pos:column="34">-<pos:position pos:line="97" pos:column="35"/></operator><literal type="number" pos:line="97" pos:column="35">1<pos:position pos:line="97" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="37"/></argument_list></call></expr> )<pos:position pos:line="97" pos:column="39"/></condition><then><block pos:line="97" pos:column="39">{
    <expr_stmt><expr><name pos:line="98" pos:column="5">nKeyCol<pos:position pos:line="98" pos:column="12"/></name> <operator pos:line="98" pos:column="13">+=<pos:position pos:line="98" pos:column="15"/></operator> <name><name pos:line="98" pos:column="16">pTable<pos:position pos:line="98" pos:column="22"/></name><operator pos:line="98" pos:column="22">-&gt;<pos:position pos:line="98" pos:column="27"/></operator><name pos:line="98" pos:column="24">nCol<pos:position pos:line="98" pos:column="28"/></name></name> <operator pos:line="98" pos:column="29">-<pos:position pos:line="98" pos:column="30"/></operator> <name pos:line="98" pos:column="31">BMS<pos:position pos:line="98" pos:column="34"/></name> <operator pos:line="98" pos:column="35">+<pos:position pos:line="98" pos:column="36"/></operator> <literal type="number" pos:line="98" pos:column="37">1<pos:position pos:line="98" pos:column="38"/></literal></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="99" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="101" pos:column="3">/* Construct the Index object to describe this index */</comment>
  <expr_stmt><expr><name pos:line="102" pos:column="3">pIdx<pos:position pos:line="102" pos:column="7"/></name> <operator pos:line="102" pos:column="8">=<pos:position pos:line="102" pos:column="9"/></operator> <call><name pos:line="102" pos:column="10">sqlite3AllocateIndexObject<pos:position pos:line="102" pos:column="36"/></name><argument_list pos:line="102" pos:column="36">(<argument><expr><name><name pos:line="102" pos:column="37">pParse<pos:position pos:line="102" pos:column="43"/></name><operator pos:line="102" pos:column="43">-&gt;<pos:position pos:line="102" pos:column="48"/></operator><name pos:line="102" pos:column="45">db<pos:position pos:line="102" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="49">nKeyCol<pos:position pos:line="102" pos:column="56"/></name><operator pos:line="102" pos:column="56">+<pos:position pos:line="102" pos:column="57"/></operator><literal type="number" pos:line="102" pos:column="57">1<pos:position pos:line="102" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="60">0<pos:position pos:line="102" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="102" pos:column="63">&amp;<pos:position pos:line="102" pos:column="68"/></operator><name pos:line="102" pos:column="64">zNotUsed<pos:position pos:line="102" pos:column="72"/></name></expr></argument>)<pos:position pos:line="102" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="74"/></expr_stmt>
  <if pos:line="103" pos:column="3">if<condition pos:line="103" pos:column="5">( <expr><name pos:line="103" pos:column="7">pIdx<pos:position pos:line="103" pos:column="11"/></name><operator pos:line="103" pos:column="11">==<pos:position pos:line="103" pos:column="13"/></operator><literal type="number" pos:line="103" pos:column="13">0<pos:position pos:line="103" pos:column="14"/></literal></expr> )<pos:position pos:line="103" pos:column="16"/></condition><then pos:line="103" pos:column="16"> <block type="pseudo"><goto pos:line="103" pos:column="17">goto <name pos:line="103" pos:column="22">end_auto_index_create<pos:position pos:line="103" pos:column="43"/></name>;<pos:position pos:line="103" pos:column="44"/></goto></block></then></if>
  <expr_stmt><expr><name><name pos:line="104" pos:column="3">pLoop<pos:position pos:line="104" pos:column="8"/></name><operator pos:line="104" pos:column="8">-&gt;<pos:position pos:line="104" pos:column="13"/></operator><name pos:line="104" pos:column="10">u<pos:position pos:line="104" pos:column="11"/></name><operator pos:line="104" pos:column="11">.<pos:position pos:line="104" pos:column="12"/></operator><name pos:line="104" pos:column="12">btree<pos:position pos:line="104" pos:column="17"/></name><operator pos:line="104" pos:column="17">.<pos:position pos:line="104" pos:column="18"/></operator><name pos:line="104" pos:column="18">pIndex<pos:position pos:line="104" pos:column="24"/></name></name> <operator pos:line="104" pos:column="25">=<pos:position pos:line="104" pos:column="26"/></operator> <name pos:line="104" pos:column="27">pIdx<pos:position pos:line="104" pos:column="31"/></name></expr>;<pos:position pos:line="104" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="105" pos:column="3">pIdx<pos:position pos:line="105" pos:column="7"/></name><operator pos:line="105" pos:column="7">-&gt;<pos:position pos:line="105" pos:column="12"/></operator><name pos:line="105" pos:column="9">zName<pos:position pos:line="105" pos:column="14"/></name></name> <operator pos:line="105" pos:column="15">=<pos:position pos:line="105" pos:column="16"/></operator> <literal type="string" pos:line="105" pos:column="17">"auto-index"<pos:position pos:line="105" pos:column="29"/></literal></expr>;<pos:position pos:line="105" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="106" pos:column="3">pIdx<pos:position pos:line="106" pos:column="7"/></name><operator pos:line="106" pos:column="7">-&gt;<pos:position pos:line="106" pos:column="12"/></operator><name pos:line="106" pos:column="9">pTable<pos:position pos:line="106" pos:column="15"/></name></name> <operator pos:line="106" pos:column="16">=<pos:position pos:line="106" pos:column="17"/></operator> <name pos:line="106" pos:column="18">pTable<pos:position pos:line="106" pos:column="24"/></name></expr>;<pos:position pos:line="106" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="107" pos:column="3">n<pos:position pos:line="107" pos:column="4"/></name> <operator pos:line="107" pos:column="5">=<pos:position pos:line="107" pos:column="6"/></operator> <literal type="number" pos:line="107" pos:column="7">0<pos:position pos:line="107" pos:column="8"/></literal></expr>;<pos:position pos:line="107" pos:column="9"/></expr_stmt>
  <expr_stmt><expr><name pos:line="108" pos:column="3">idxCols<pos:position pos:line="108" pos:column="10"/></name> <operator pos:line="108" pos:column="11">=<pos:position pos:line="108" pos:column="12"/></operator> <literal type="number" pos:line="108" pos:column="13">0<pos:position pos:line="108" pos:column="14"/></literal></expr>;<pos:position pos:line="108" pos:column="15"/></expr_stmt>
  <for pos:line="109" pos:column="3">for<control pos:line="109" pos:column="6">(<init><expr><name pos:line="109" pos:column="7">pTerm<pos:position pos:line="109" pos:column="12"/></name><operator pos:line="109" pos:column="12">=<pos:position pos:line="109" pos:column="13"/></operator><name><name pos:line="109" pos:column="13">pWC<pos:position pos:line="109" pos:column="16"/></name><operator pos:line="109" pos:column="16">-&gt;<pos:position pos:line="109" pos:column="21"/></operator><name pos:line="109" pos:column="18">a<pos:position pos:line="109" pos:column="19"/></name></name></expr>;<pos:position pos:line="109" pos:column="20"/></init> <condition><expr><name pos:line="109" pos:column="21">pTerm<pos:position pos:line="109" pos:column="26"/></name><operator pos:line="109" pos:column="26">&lt;<pos:position pos:line="109" pos:column="30"/></operator><name pos:line="109" pos:column="27">pWCEnd<pos:position pos:line="109" pos:column="33"/></name></expr>;<pos:position pos:line="109" pos:column="34"/></condition> <incr><expr><name pos:line="109" pos:column="35">pTerm<pos:position pos:line="109" pos:column="40"/></name><operator pos:line="109" pos:column="40">++<pos:position pos:line="109" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="109" pos:column="43"/></control><block pos:line="109" pos:column="43">{
    <if pos:line="110" pos:column="5">if<condition pos:line="110" pos:column="7">( <expr><call><name pos:line="110" pos:column="9">termCanDriveIndex<pos:position pos:line="110" pos:column="26"/></name><argument_list pos:line="110" pos:column="26">(<argument><expr><name pos:line="110" pos:column="27">pTerm<pos:position pos:line="110" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="34">pSrc<pos:position pos:line="110" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="40">notReady<pos:position pos:line="110" pos:column="48"/></name></expr></argument>)<pos:position pos:line="110" pos:column="49"/></argument_list></call></expr> )<pos:position pos:line="110" pos:column="51"/></condition><then><block pos:line="110" pos:column="51">{
      <decl_stmt><decl><type><name pos:line="111" pos:column="7">int<pos:position pos:line="111" pos:column="10"/></name></type> <name pos:line="111" pos:column="11">iCol<pos:position pos:line="111" pos:column="15"/></name> <init pos:line="111" pos:column="16">= <expr><name><name pos:line="111" pos:column="18">pTerm<pos:position pos:line="111" pos:column="23"/></name><operator pos:line="111" pos:column="23">-&gt;<pos:position pos:line="111" pos:column="28"/></operator><name pos:line="111" pos:column="25">u<pos:position pos:line="111" pos:column="26"/></name><operator pos:line="111" pos:column="26">.<pos:position pos:line="111" pos:column="27"/></operator><name pos:line="111" pos:column="27">leftColumn<pos:position pos:line="111" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="111" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="112" pos:column="7">Bitmask<pos:position pos:line="112" pos:column="14"/></name></type> <name pos:line="112" pos:column="15">cMask<pos:position pos:line="112" pos:column="20"/></name> <init pos:line="112" pos:column="21">= <expr><ternary><condition><expr><name pos:line="112" pos:column="23">iCol<pos:position pos:line="112" pos:column="27"/></name><operator pos:line="112" pos:column="27">&gt;=<pos:position pos:line="112" pos:column="32"/></operator><name pos:line="112" pos:column="29">BMS<pos:position pos:line="112" pos:column="32"/></name></expr> ?<pos:position pos:line="112" pos:column="34"/></condition><then pos:line="112" pos:column="34"> <expr><call><name pos:line="112" pos:column="35">MASKBIT<pos:position pos:line="112" pos:column="42"/></name><argument_list pos:line="112" pos:column="42">(<argument><expr><name pos:line="112" pos:column="43">BMS<pos:position pos:line="112" pos:column="46"/></name><operator pos:line="112" pos:column="46">-<pos:position pos:line="112" pos:column="47"/></operator><literal type="number" pos:line="112" pos:column="47">1<pos:position pos:line="112" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="49"/></argument_list></call></expr> <pos:position pos:line="112" pos:column="50"/></then><else pos:line="112" pos:column="50">: <expr><call><name pos:line="112" pos:column="52">MASKBIT<pos:position pos:line="112" pos:column="59"/></name><argument_list pos:line="112" pos:column="59">(<argument><expr><name pos:line="112" pos:column="60">iCol<pos:position pos:line="112" pos:column="64"/></name></expr></argument>)<pos:position pos:line="112" pos:column="65"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="112" pos:column="66"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="113" pos:column="7">testcase<pos:position pos:line="113" pos:column="15"/></name><argument_list pos:line="113" pos:column="15">( <argument><expr><name pos:line="113" pos:column="17">iCol<pos:position pos:line="113" pos:column="21"/></name><operator pos:line="113" pos:column="21">==<pos:position pos:line="113" pos:column="23"/></operator><name pos:line="113" pos:column="23">BMS<pos:position pos:line="113" pos:column="26"/></name><operator pos:line="113" pos:column="26">-<pos:position pos:line="113" pos:column="27"/></operator><literal type="number" pos:line="113" pos:column="27">1<pos:position pos:line="113" pos:column="28"/></literal></expr></argument> )<pos:position pos:line="113" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="114" pos:column="7">testcase<pos:position pos:line="114" pos:column="15"/></name><argument_list pos:line="114" pos:column="15">( <argument><expr><name pos:line="114" pos:column="17">iCol<pos:position pos:line="114" pos:column="21"/></name><operator pos:line="114" pos:column="21">==<pos:position pos:line="114" pos:column="23"/></operator><name pos:line="114" pos:column="23">BMS<pos:position pos:line="114" pos:column="26"/></name></expr></argument> )<pos:position pos:line="114" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="29"/></expr_stmt>
      <if pos:line="115" pos:column="7">if<condition pos:line="115" pos:column="9">( <expr><operator pos:line="115" pos:column="11">(<pos:position pos:line="115" pos:column="12"/></operator><name pos:line="115" pos:column="12">idxCols<pos:position pos:line="115" pos:column="19"/></name> <operator pos:line="115" pos:column="20">&amp;<pos:position pos:line="115" pos:column="25"/></operator> <name pos:line="115" pos:column="22">cMask<pos:position pos:line="115" pos:column="27"/></name><operator pos:line="115" pos:column="27">)<pos:position pos:line="115" pos:column="28"/></operator><operator pos:line="115" pos:column="28">==<pos:position pos:line="115" pos:column="30"/></operator><literal type="number" pos:line="115" pos:column="30">0<pos:position pos:line="115" pos:column="31"/></literal></expr> )<pos:position pos:line="115" pos:column="33"/></condition><then><block pos:line="115" pos:column="33">{
        <decl_stmt><decl><type><name pos:line="116" pos:column="9">Expr<pos:position pos:line="116" pos:column="13"/></name> <modifier pos:line="116" pos:column="14">*<pos:position pos:line="116" pos:column="15"/></modifier></type><name pos:line="116" pos:column="15">pX<pos:position pos:line="116" pos:column="17"/></name> <init pos:line="116" pos:column="18">= <expr><name><name pos:line="116" pos:column="20">pTerm<pos:position pos:line="116" pos:column="25"/></name><operator pos:line="116" pos:column="25">-&gt;<pos:position pos:line="116" pos:column="30"/></operator><name pos:line="116" pos:column="27">pExpr<pos:position pos:line="116" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="116" pos:column="33"/></decl_stmt>
        <expr_stmt><expr><name pos:line="117" pos:column="9">idxCols<pos:position pos:line="117" pos:column="16"/></name> <operator pos:line="117" pos:column="17">|=<pos:position pos:line="117" pos:column="19"/></operator> <name pos:line="117" pos:column="20">cMask<pos:position pos:line="117" pos:column="25"/></name></expr>;<pos:position pos:line="117" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="118" pos:column="9">pIdx<pos:position pos:line="118" pos:column="13"/></name><operator pos:line="118" pos:column="13">-&gt;<pos:position pos:line="118" pos:column="18"/></operator><name pos:line="118" pos:column="15">aiColumn<pos:position pos:line="118" pos:column="23"/></name><index pos:line="118" pos:column="23">[<expr><name pos:line="118" pos:column="24">n<pos:position pos:line="118" pos:column="25"/></name></expr>]<pos:position pos:line="118" pos:column="26"/></index></name> <operator pos:line="118" pos:column="27">=<pos:position pos:line="118" pos:column="28"/></operator> <name><name pos:line="118" pos:column="29">pTerm<pos:position pos:line="118" pos:column="34"/></name><operator pos:line="118" pos:column="34">-&gt;<pos:position pos:line="118" pos:column="39"/></operator><name pos:line="118" pos:column="36">u<pos:position pos:line="118" pos:column="37"/></name><operator pos:line="118" pos:column="37">.<pos:position pos:line="118" pos:column="38"/></operator><name pos:line="118" pos:column="38">leftColumn<pos:position pos:line="118" pos:column="48"/></name></name></expr>;<pos:position pos:line="118" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="119" pos:column="9">pColl<pos:position pos:line="119" pos:column="14"/></name> <operator pos:line="119" pos:column="15">=<pos:position pos:line="119" pos:column="16"/></operator> <call><name pos:line="119" pos:column="17">sqlite3BinaryCompareCollSeq<pos:position pos:line="119" pos:column="44"/></name><argument_list pos:line="119" pos:column="44">(<argument><expr><name pos:line="119" pos:column="45">pParse<pos:position pos:line="119" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="53">pX<pos:position pos:line="119" pos:column="55"/></name><operator pos:line="119" pos:column="55">-&gt;<pos:position pos:line="119" pos:column="60"/></operator><name pos:line="119" pos:column="57">pLeft<pos:position pos:line="119" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="64">pX<pos:position pos:line="119" pos:column="66"/></name><operator pos:line="119" pos:column="66">-&gt;<pos:position pos:line="119" pos:column="71"/></operator><name pos:line="119" pos:column="68">pRight<pos:position pos:line="119" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="120" pos:column="9">pIdx<pos:position pos:line="120" pos:column="13"/></name><operator pos:line="120" pos:column="13">-&gt;<pos:position pos:line="120" pos:column="18"/></operator><name pos:line="120" pos:column="15">azColl<pos:position pos:line="120" pos:column="21"/></name><index pos:line="120" pos:column="21">[<expr><name pos:line="120" pos:column="22">n<pos:position pos:line="120" pos:column="23"/></name></expr>]<pos:position pos:line="120" pos:column="24"/></index></name> <operator pos:line="120" pos:column="25">=<pos:position pos:line="120" pos:column="26"/></operator> <ternary><condition><expr><name pos:line="120" pos:column="27">pColl<pos:position pos:line="120" pos:column="32"/></name></expr> ?<pos:position pos:line="120" pos:column="34"/></condition><then pos:line="120" pos:column="34"> <expr><name><name pos:line="120" pos:column="35">pColl<pos:position pos:line="120" pos:column="40"/></name><operator pos:line="120" pos:column="40">-&gt;<pos:position pos:line="120" pos:column="45"/></operator><name pos:line="120" pos:column="42">zName<pos:position pos:line="120" pos:column="47"/></name></name></expr> <pos:position pos:line="120" pos:column="48"/></then><else pos:line="120" pos:column="48">: <expr><name pos:line="120" pos:column="50">sqlite3StrBINARY<pos:position pos:line="120" pos:column="66"/></name></expr></else></ternary></expr>;<pos:position pos:line="120" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="121" pos:column="9">n<pos:position pos:line="121" pos:column="10"/></name><operator pos:line="121" pos:column="10">++<pos:position pos:line="121" pos:column="12"/></operator></expr>;<pos:position pos:line="121" pos:column="13"/></expr_stmt>
      }<pos:position pos:line="122" pos:column="8"/></block></then></if>
    }<pos:position pos:line="123" pos:column="6"/></block></then></if>
  }<pos:position pos:line="124" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="125" pos:column="3">assert<pos:position pos:line="125" pos:column="9"/></name><argument_list pos:line="125" pos:column="9">( <argument><expr><operator pos:line="125" pos:column="11">(<pos:position pos:line="125" pos:column="12"/></operator><name pos:line="125" pos:column="12">u32<pos:position pos:line="125" pos:column="15"/></name><operator pos:line="125" pos:column="15">)<pos:position pos:line="125" pos:column="16"/></operator><name pos:line="125" pos:column="16">n<pos:position pos:line="125" pos:column="17"/></name><operator pos:line="125" pos:column="17">==<pos:position pos:line="125" pos:column="19"/></operator><name><name pos:line="125" pos:column="19">pLoop<pos:position pos:line="125" pos:column="24"/></name><operator pos:line="125" pos:column="24">-&gt;<pos:position pos:line="125" pos:column="29"/></operator><name pos:line="125" pos:column="26">u<pos:position pos:line="125" pos:column="27"/></name><operator pos:line="125" pos:column="27">.<pos:position pos:line="125" pos:column="28"/></operator><name pos:line="125" pos:column="28">btree<pos:position pos:line="125" pos:column="33"/></name><operator pos:line="125" pos:column="33">.<pos:position pos:line="125" pos:column="34"/></operator><name pos:line="125" pos:column="34">nEq<pos:position pos:line="125" pos:column="37"/></name></name></expr></argument> )<pos:position pos:line="125" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="40"/></expr_stmt>

  <comment type="block" pos:line="127" pos:column="3">/* Add additional columns needed to make the automatic index into
  ** a covering index */</comment>
  <for pos:line="129" pos:column="3">for<control pos:line="129" pos:column="6">(<init><expr><name pos:line="129" pos:column="7">i<pos:position pos:line="129" pos:column="8"/></name><operator pos:line="129" pos:column="8">=<pos:position pos:line="129" pos:column="9"/></operator><literal type="number" pos:line="129" pos:column="9">0<pos:position pos:line="129" pos:column="10"/></literal></expr>;<pos:position pos:line="129" pos:column="11"/></init> <condition><expr><name pos:line="129" pos:column="12">i<pos:position pos:line="129" pos:column="13"/></name><operator pos:line="129" pos:column="13">&lt;<pos:position pos:line="129" pos:column="17"/></operator><name pos:line="129" pos:column="14">mxBitCol<pos:position pos:line="129" pos:column="22"/></name></expr>;<pos:position pos:line="129" pos:column="23"/></condition> <incr><expr><name pos:line="129" pos:column="24">i<pos:position pos:line="129" pos:column="25"/></name><operator pos:line="129" pos:column="25">++<pos:position pos:line="129" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="129" pos:column="28"/></control><block pos:line="129" pos:column="28">{
    <if pos:line="130" pos:column="5">if<condition pos:line="130" pos:column="7">( <expr><name pos:line="130" pos:column="9">extraCols<pos:position pos:line="130" pos:column="18"/></name> <operator pos:line="130" pos:column="19">&amp;<pos:position pos:line="130" pos:column="24"/></operator> <call><name pos:line="130" pos:column="21">MASKBIT<pos:position pos:line="130" pos:column="28"/></name><argument_list pos:line="130" pos:column="28">(<argument><expr><name pos:line="130" pos:column="29">i<pos:position pos:line="130" pos:column="30"/></name></expr></argument>)<pos:position pos:line="130" pos:column="31"/></argument_list></call></expr> )<pos:position pos:line="130" pos:column="33"/></condition><then><block pos:line="130" pos:column="33">{
      <expr_stmt><expr><name><name pos:line="131" pos:column="7">pIdx<pos:position pos:line="131" pos:column="11"/></name><operator pos:line="131" pos:column="11">-&gt;<pos:position pos:line="131" pos:column="16"/></operator><name pos:line="131" pos:column="13">aiColumn<pos:position pos:line="131" pos:column="21"/></name><index pos:line="131" pos:column="21">[<expr><name pos:line="131" pos:column="22">n<pos:position pos:line="131" pos:column="23"/></name></expr>]<pos:position pos:line="131" pos:column="24"/></index></name> <operator pos:line="131" pos:column="25">=<pos:position pos:line="131" pos:column="26"/></operator> <name pos:line="131" pos:column="27">i<pos:position pos:line="131" pos:column="28"/></name></expr>;<pos:position pos:line="131" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="132" pos:column="7">pIdx<pos:position pos:line="132" pos:column="11"/></name><operator pos:line="132" pos:column="11">-&gt;<pos:position pos:line="132" pos:column="16"/></operator><name pos:line="132" pos:column="13">azColl<pos:position pos:line="132" pos:column="19"/></name><index pos:line="132" pos:column="19">[<expr><name pos:line="132" pos:column="20">n<pos:position pos:line="132" pos:column="21"/></name></expr>]<pos:position pos:line="132" pos:column="22"/></index></name> <operator pos:line="132" pos:column="23">=<pos:position pos:line="132" pos:column="24"/></operator> <name pos:line="132" pos:column="25">sqlite3StrBINARY<pos:position pos:line="132" pos:column="41"/></name></expr>;<pos:position pos:line="132" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name pos:line="133" pos:column="7">n<pos:position pos:line="133" pos:column="8"/></name><operator pos:line="133" pos:column="8">++<pos:position pos:line="133" pos:column="10"/></operator></expr>;<pos:position pos:line="133" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if>
  }<pos:position pos:line="135" pos:column="4"/></block></for>
  <if pos:line="136" pos:column="3">if<condition pos:line="136" pos:column="5">( <expr><name><name pos:line="136" pos:column="7">pSrc<pos:position pos:line="136" pos:column="11"/></name><operator pos:line="136" pos:column="11">-&gt;<pos:position pos:line="136" pos:column="16"/></operator><name pos:line="136" pos:column="13">colUsed<pos:position pos:line="136" pos:column="20"/></name></name> <operator pos:line="136" pos:column="21">&amp;<pos:position pos:line="136" pos:column="26"/></operator> <call><name pos:line="136" pos:column="23">MASKBIT<pos:position pos:line="136" pos:column="30"/></name><argument_list pos:line="136" pos:column="30">(<argument><expr><name pos:line="136" pos:column="31">BMS<pos:position pos:line="136" pos:column="34"/></name><operator pos:line="136" pos:column="34">-<pos:position pos:line="136" pos:column="35"/></operator><literal type="number" pos:line="136" pos:column="35">1<pos:position pos:line="136" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="37"/></argument_list></call></expr> )<pos:position pos:line="136" pos:column="39"/></condition><then><block pos:line="136" pos:column="39">{
    <for pos:line="137" pos:column="5">for<control pos:line="137" pos:column="8">(<init><expr><name pos:line="137" pos:column="9">i<pos:position pos:line="137" pos:column="10"/></name><operator pos:line="137" pos:column="10">=<pos:position pos:line="137" pos:column="11"/></operator><name pos:line="137" pos:column="11">BMS<pos:position pos:line="137" pos:column="14"/></name><operator pos:line="137" pos:column="14">-<pos:position pos:line="137" pos:column="15"/></operator><literal type="number" pos:line="137" pos:column="15">1<pos:position pos:line="137" pos:column="16"/></literal></expr>;<pos:position pos:line="137" pos:column="17"/></init> <condition><expr><name pos:line="137" pos:column="18">i<pos:position pos:line="137" pos:column="19"/></name><operator pos:line="137" pos:column="19">&lt;<pos:position pos:line="137" pos:column="23"/></operator><name><name pos:line="137" pos:column="20">pTable<pos:position pos:line="137" pos:column="26"/></name><operator pos:line="137" pos:column="26">-&gt;<pos:position pos:line="137" pos:column="31"/></operator><name pos:line="137" pos:column="28">nCol<pos:position pos:line="137" pos:column="32"/></name></name></expr>;<pos:position pos:line="137" pos:column="33"/></condition> <incr><expr><name pos:line="137" pos:column="34">i<pos:position pos:line="137" pos:column="35"/></name><operator pos:line="137" pos:column="35">++<pos:position pos:line="137" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="137" pos:column="38"/></control><block pos:line="137" pos:column="38">{
      <expr_stmt><expr><name><name pos:line="138" pos:column="7">pIdx<pos:position pos:line="138" pos:column="11"/></name><operator pos:line="138" pos:column="11">-&gt;<pos:position pos:line="138" pos:column="16"/></operator><name pos:line="138" pos:column="13">aiColumn<pos:position pos:line="138" pos:column="21"/></name><index pos:line="138" pos:column="21">[<expr><name pos:line="138" pos:column="22">n<pos:position pos:line="138" pos:column="23"/></name></expr>]<pos:position pos:line="138" pos:column="24"/></index></name> <operator pos:line="138" pos:column="25">=<pos:position pos:line="138" pos:column="26"/></operator> <name pos:line="138" pos:column="27">i<pos:position pos:line="138" pos:column="28"/></name></expr>;<pos:position pos:line="138" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="139" pos:column="7">pIdx<pos:position pos:line="139" pos:column="11"/></name><operator pos:line="139" pos:column="11">-&gt;<pos:position pos:line="139" pos:column="16"/></operator><name pos:line="139" pos:column="13">azColl<pos:position pos:line="139" pos:column="19"/></name><index pos:line="139" pos:column="19">[<expr><name pos:line="139" pos:column="20">n<pos:position pos:line="139" pos:column="21"/></name></expr>]<pos:position pos:line="139" pos:column="22"/></index></name> <operator pos:line="139" pos:column="23">=<pos:position pos:line="139" pos:column="24"/></operator> <name pos:line="139" pos:column="25">sqlite3StrBINARY<pos:position pos:line="139" pos:column="41"/></name></expr>;<pos:position pos:line="139" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name pos:line="140" pos:column="7">n<pos:position pos:line="140" pos:column="8"/></name><operator pos:line="140" pos:column="8">++<pos:position pos:line="140" pos:column="10"/></operator></expr>;<pos:position pos:line="140" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="141" pos:column="6"/></block></for>
  }<pos:position pos:line="142" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="143" pos:column="3">assert<pos:position pos:line="143" pos:column="9"/></name><argument_list pos:line="143" pos:column="9">( <argument><expr><name pos:line="143" pos:column="11">n<pos:position pos:line="143" pos:column="12"/></name><operator pos:line="143" pos:column="12">==<pos:position pos:line="143" pos:column="14"/></operator><name pos:line="143" pos:column="14">nKeyCol<pos:position pos:line="143" pos:column="21"/></name></expr></argument> )<pos:position pos:line="143" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="144" pos:column="3">pIdx<pos:position pos:line="144" pos:column="7"/></name><operator pos:line="144" pos:column="7">-&gt;<pos:position pos:line="144" pos:column="12"/></operator><name pos:line="144" pos:column="9">aiColumn<pos:position pos:line="144" pos:column="17"/></name><index pos:line="144" pos:column="17">[<expr><name pos:line="144" pos:column="18">n<pos:position pos:line="144" pos:column="19"/></name></expr>]<pos:position pos:line="144" pos:column="20"/></index></name> <operator pos:line="144" pos:column="21">=<pos:position pos:line="144" pos:column="22"/></operator> <name pos:line="144" pos:column="23">XN_ROWID<pos:position pos:line="144" pos:column="31"/></name></expr>;<pos:position pos:line="144" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="145" pos:column="3">pIdx<pos:position pos:line="145" pos:column="7"/></name><operator pos:line="145" pos:column="7">-&gt;<pos:position pos:line="145" pos:column="12"/></operator><name pos:line="145" pos:column="9">azColl<pos:position pos:line="145" pos:column="15"/></name><index pos:line="145" pos:column="15">[<expr><name pos:line="145" pos:column="16">n<pos:position pos:line="145" pos:column="17"/></name></expr>]<pos:position pos:line="145" pos:column="18"/></index></name> <operator pos:line="145" pos:column="19">=<pos:position pos:line="145" pos:column="20"/></operator> <name pos:line="145" pos:column="21">sqlite3StrBINARY<pos:position pos:line="145" pos:column="37"/></name></expr>;<pos:position pos:line="145" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="147" pos:column="3">/* Create the automatic index */</comment>
  <expr_stmt><expr><call><name pos:line="148" pos:column="3">assert<pos:position pos:line="148" pos:column="9"/></name><argument_list pos:line="148" pos:column="9">( <argument><expr><name><name pos:line="148" pos:column="11">pLevel<pos:position pos:line="148" pos:column="17"/></name><operator pos:line="148" pos:column="17">-&gt;<pos:position pos:line="148" pos:column="22"/></operator><name pos:line="148" pos:column="19">iIdxCur<pos:position pos:line="148" pos:column="26"/></name></name><operator pos:line="148" pos:column="26">&gt;=<pos:position pos:line="148" pos:column="31"/></operator><literal type="number" pos:line="148" pos:column="28">0<pos:position pos:line="148" pos:column="29"/></literal></expr></argument> )<pos:position pos:line="148" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="149" pos:column="3">pLevel<pos:position pos:line="149" pos:column="9"/></name><operator pos:line="149" pos:column="9">-&gt;<pos:position pos:line="149" pos:column="14"/></operator><name pos:line="149" pos:column="11">iIdxCur<pos:position pos:line="149" pos:column="18"/></name></name> <operator pos:line="149" pos:column="19">=<pos:position pos:line="149" pos:column="20"/></operator> <name><name pos:line="149" pos:column="21">pParse<pos:position pos:line="149" pos:column="27"/></name><operator pos:line="149" pos:column="27">-&gt;<pos:position pos:line="149" pos:column="32"/></operator><name pos:line="149" pos:column="29">nTab<pos:position pos:line="149" pos:column="33"/></name></name><operator pos:line="149" pos:column="33">++<pos:position pos:line="149" pos:column="35"/></operator></expr>;<pos:position pos:line="149" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="150" pos:column="3">sqlite3VdbeAddOp2<pos:position pos:line="150" pos:column="20"/></name><argument_list pos:line="150" pos:column="20">(<argument><expr><name pos:line="150" pos:column="21">v<pos:position pos:line="150" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="24">OP_OpenAutoindex<pos:position pos:line="150" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="150" pos:column="42">pLevel<pos:position pos:line="150" pos:column="48"/></name><operator pos:line="150" pos:column="48">-&gt;<pos:position pos:line="150" pos:column="53"/></operator><name pos:line="150" pos:column="50">iIdxCur<pos:position pos:line="150" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="59">nKeyCol<pos:position pos:line="150" pos:column="66"/></name><operator pos:line="150" pos:column="66">+<pos:position pos:line="150" pos:column="67"/></operator><literal type="number" pos:line="150" pos:column="67">1<pos:position pos:line="150" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="151" pos:column="3">sqlite3VdbeSetP4KeyInfo<pos:position pos:line="151" pos:column="26"/></name><argument_list pos:line="151" pos:column="26">(<argument><expr><name pos:line="151" pos:column="27">pParse<pos:position pos:line="151" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="35">pIdx<pos:position pos:line="151" pos:column="39"/></name></expr></argument>)<pos:position pos:line="151" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="152" pos:column="3">VdbeComment<pos:position pos:line="152" pos:column="14"/></name><argument_list pos:line="152" pos:column="14">(<argument><expr><operator pos:line="152" pos:column="15">(<pos:position pos:line="152" pos:column="16"/></operator><name pos:line="152" pos:column="16">v<pos:position pos:line="152" pos:column="17"/></name><operator pos:line="152" pos:column="17">,<pos:position pos:line="152" pos:column="18"/></operator> <literal type="string" pos:line="152" pos:column="19">"for %s"<pos:position pos:line="152" pos:column="27"/></literal><operator pos:line="152" pos:column="27">,<pos:position pos:line="152" pos:column="28"/></operator> <name><name pos:line="152" pos:column="29">pTable<pos:position pos:line="152" pos:column="35"/></name><operator pos:line="152" pos:column="35">-&gt;<pos:position pos:line="152" pos:column="40"/></operator><name pos:line="152" pos:column="37">zName<pos:position pos:line="152" pos:column="42"/></name></name><operator pos:line="152" pos:column="42">)<pos:position pos:line="152" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="152" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="154" pos:column="3">/* Fill the automatic index with content */</comment>
  <expr_stmt><expr><call><name pos:line="155" pos:column="3">sqlite3ExprCachePush<pos:position pos:line="155" pos:column="23"/></name><argument_list pos:line="155" pos:column="23">(<argument><expr><name pos:line="155" pos:column="24">pParse<pos:position pos:line="155" pos:column="30"/></name></expr></argument>)<pos:position pos:line="155" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name pos:line="156" pos:column="3">pTabItem<pos:position pos:line="156" pos:column="11"/></name> <operator pos:line="156" pos:column="12">=<pos:position pos:line="156" pos:column="13"/></operator> <operator pos:line="156" pos:column="14">&amp;<pos:position pos:line="156" pos:column="19"/></operator><name><name pos:line="156" pos:column="15">pWC<pos:position pos:line="156" pos:column="18"/></name><operator pos:line="156" pos:column="18">-&gt;<pos:position pos:line="156" pos:column="23"/></operator><name pos:line="156" pos:column="20">pWInfo<pos:position pos:line="156" pos:column="26"/></name><operator pos:line="156" pos:column="26">-&gt;<pos:position pos:line="156" pos:column="31"/></operator><name pos:line="156" pos:column="28">pTabList<pos:position pos:line="156" pos:column="36"/></name><operator pos:line="156" pos:column="36">-&gt;<pos:position pos:line="156" pos:column="41"/></operator><name pos:line="156" pos:column="38">a<pos:position pos:line="156" pos:column="39"/></name><index pos:line="156" pos:column="39">[<expr><name><name pos:line="156" pos:column="40">pLevel<pos:position pos:line="156" pos:column="46"/></name><operator pos:line="156" pos:column="46">-&gt;<pos:position pos:line="156" pos:column="51"/></operator><name pos:line="156" pos:column="48">iFrom<pos:position pos:line="156" pos:column="53"/></name></name></expr>]<pos:position pos:line="156" pos:column="54"/></index></name></expr>;<pos:position pos:line="156" pos:column="55"/></expr_stmt>
  <if pos:line="157" pos:column="3">if<condition pos:line="157" pos:column="5">( <expr><name><name pos:line="157" pos:column="7">pTabItem<pos:position pos:line="157" pos:column="15"/></name><operator pos:line="157" pos:column="15">-&gt;<pos:position pos:line="157" pos:column="20"/></operator><name pos:line="157" pos:column="17">fg<pos:position pos:line="157" pos:column="19"/></name><operator pos:line="157" pos:column="19">.<pos:position pos:line="157" pos:column="20"/></operator><name pos:line="157" pos:column="20">viaCoroutine<pos:position pos:line="157" pos:column="32"/></name></name></expr> )<pos:position pos:line="157" pos:column="34"/></condition><then><block pos:line="157" pos:column="34">{
    <decl_stmt><decl><type><name pos:line="158" pos:column="5">int<pos:position pos:line="158" pos:column="8"/></name></type> <name pos:line="158" pos:column="9">regYield<pos:position pos:line="158" pos:column="17"/></name> <init pos:line="158" pos:column="18">= <expr><name><name pos:line="158" pos:column="20">pTabItem<pos:position pos:line="158" pos:column="28"/></name><operator pos:line="158" pos:column="28">-&gt;<pos:position pos:line="158" pos:column="33"/></operator><name pos:line="158" pos:column="30">regReturn<pos:position pos:line="158" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="158" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><name pos:line="159" pos:column="5">addrCounter<pos:position pos:line="159" pos:column="16"/></name> <operator pos:line="159" pos:column="17">=<pos:position pos:line="159" pos:column="18"/></operator> <call><name pos:line="159" pos:column="19">sqlite3VdbeAddOp2<pos:position pos:line="159" pos:column="36"/></name><argument_list pos:line="159" pos:column="36">(<argument><expr><name pos:line="159" pos:column="37">v<pos:position pos:line="159" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="40">OP_Integer<pos:position pos:line="159" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="159" pos:column="52">0<pos:position pos:line="159" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="159" pos:column="55">0<pos:position pos:line="159" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="160" pos:column="5">sqlite3VdbeAddOp3<pos:position pos:line="160" pos:column="22"/></name><argument_list pos:line="160" pos:column="22">(<argument><expr><name pos:line="160" pos:column="23">v<pos:position pos:line="160" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="26">OP_InitCoroutine<pos:position pos:line="160" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="44">regYield<pos:position pos:line="160" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="160" pos:column="54">0<pos:position pos:line="160" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="160" pos:column="57">pTabItem<pos:position pos:line="160" pos:column="65"/></name><operator pos:line="160" pos:column="65">-&gt;<pos:position pos:line="160" pos:column="70"/></operator><name pos:line="160" pos:column="67">addrFillSub<pos:position pos:line="160" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name pos:line="161" pos:column="5">addrTop<pos:position pos:line="161" pos:column="12"/></name> <operator pos:line="161" pos:column="13">=<pos:position pos:line="161" pos:column="14"/></operator>  <call><name pos:line="161" pos:column="16">sqlite3VdbeAddOp1<pos:position pos:line="161" pos:column="33"/></name><argument_list pos:line="161" pos:column="33">(<argument><expr><name pos:line="161" pos:column="34">v<pos:position pos:line="161" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="37">OP_Yield<pos:position pos:line="161" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="47">regYield<pos:position pos:line="161" pos:column="55"/></name></expr></argument>)<pos:position pos:line="161" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="162" pos:column="5">VdbeCoverage<pos:position pos:line="162" pos:column="17"/></name><argument_list pos:line="162" pos:column="17">(<argument><expr><name pos:line="162" pos:column="18">v<pos:position pos:line="162" pos:column="19"/></name></expr></argument>)<pos:position pos:line="162" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="163" pos:column="5">VdbeComment<pos:position pos:line="163" pos:column="16"/></name><argument_list pos:line="163" pos:column="16">(<argument><expr><operator pos:line="163" pos:column="17">(<pos:position pos:line="163" pos:column="18"/></operator><name pos:line="163" pos:column="18">v<pos:position pos:line="163" pos:column="19"/></name><operator pos:line="163" pos:column="19">,<pos:position pos:line="163" pos:column="20"/></operator> <literal type="string" pos:line="163" pos:column="21">"next row of \"%s\""<pos:position pos:line="163" pos:column="41"/></literal><operator pos:line="163" pos:column="41">,<pos:position pos:line="163" pos:column="42"/></operator> <name><name pos:line="163" pos:column="43">pTabItem<pos:position pos:line="163" pos:column="51"/></name><operator pos:line="163" pos:column="51">-&gt;<pos:position pos:line="163" pos:column="56"/></operator><name pos:line="163" pos:column="53">pTab<pos:position pos:line="163" pos:column="57"/></name><operator pos:line="163" pos:column="57">-&gt;<pos:position pos:line="163" pos:column="62"/></operator><name pos:line="163" pos:column="59">zName<pos:position pos:line="163" pos:column="64"/></name></name><operator pos:line="163" pos:column="64">)<pos:position pos:line="163" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="163" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="164" pos:column="4"/></block></then><else pos:line="164" pos:column="4">else<block pos:line="164" pos:column="8">{
    <expr_stmt><expr><name pos:line="165" pos:column="5">addrTop<pos:position pos:line="165" pos:column="12"/></name> <operator pos:line="165" pos:column="13">=<pos:position pos:line="165" pos:column="14"/></operator> <call><name pos:line="165" pos:column="15">sqlite3VdbeAddOp1<pos:position pos:line="165" pos:column="32"/></name><argument_list pos:line="165" pos:column="32">(<argument><expr><name pos:line="165" pos:column="33">v<pos:position pos:line="165" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="36">OP_Rewind<pos:position pos:line="165" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="47">pLevel<pos:position pos:line="165" pos:column="53"/></name><operator pos:line="165" pos:column="53">-&gt;<pos:position pos:line="165" pos:column="58"/></operator><name pos:line="165" pos:column="55">iTabCur<pos:position pos:line="165" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="165" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="64"/></expr_stmt> <expr_stmt><expr><call><name pos:line="165" pos:column="65">VdbeCoverage<pos:position pos:line="165" pos:column="77"/></name><argument_list pos:line="165" pos:column="77">(<argument><expr><name pos:line="165" pos:column="78">v<pos:position pos:line="165" pos:column="79"/></name></expr></argument>)<pos:position pos:line="165" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="81"/></expr_stmt>
  }<pos:position pos:line="166" pos:column="4"/></block></else></if>
  <if pos:line="167" pos:column="3">if<condition pos:line="167" pos:column="5">( <expr><name pos:line="167" pos:column="7">pPartial<pos:position pos:line="167" pos:column="15"/></name></expr> )<pos:position pos:line="167" pos:column="17"/></condition><then><block pos:line="167" pos:column="17">{
    <expr_stmt><expr><name pos:line="168" pos:column="5">iContinue<pos:position pos:line="168" pos:column="14"/></name> <operator pos:line="168" pos:column="15">=<pos:position pos:line="168" pos:column="16"/></operator> <call><name pos:line="168" pos:column="17">sqlite3VdbeMakeLabel<pos:position pos:line="168" pos:column="37"/></name><argument_list pos:line="168" pos:column="37">(<argument><expr><name pos:line="168" pos:column="38">v<pos:position pos:line="168" pos:column="39"/></name></expr></argument>)<pos:position pos:line="168" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="169" pos:column="5">sqlite3ExprIfFalse<pos:position pos:line="169" pos:column="23"/></name><argument_list pos:line="169" pos:column="23">(<argument><expr><name pos:line="169" pos:column="24">pParse<pos:position pos:line="169" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="32">pPartial<pos:position pos:line="169" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="42">iContinue<pos:position pos:line="169" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="53">SQLITE_JUMPIFNULL<pos:position pos:line="169" pos:column="70"/></name></expr></argument>)<pos:position pos:line="169" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="170" pos:column="5">pLoop<pos:position pos:line="170" pos:column="10"/></name><operator pos:line="170" pos:column="10">-&gt;<pos:position pos:line="170" pos:column="15"/></operator><name pos:line="170" pos:column="12">wsFlags<pos:position pos:line="170" pos:column="19"/></name></name> <operator pos:line="170" pos:column="20">|=<pos:position pos:line="170" pos:column="22"/></operator> <name pos:line="170" pos:column="23">WHERE_PARTIALIDX<pos:position pos:line="170" pos:column="39"/></name></expr>;<pos:position pos:line="170" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="171" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="172" pos:column="3">regRecord<pos:position pos:line="172" pos:column="12"/></name> <operator pos:line="172" pos:column="13">=<pos:position pos:line="172" pos:column="14"/></operator> <call><name pos:line="172" pos:column="15">sqlite3GetTempReg<pos:position pos:line="172" pos:column="32"/></name><argument_list pos:line="172" pos:column="32">(<argument><expr><name pos:line="172" pos:column="33">pParse<pos:position pos:line="172" pos:column="39"/></name></expr></argument>)<pos:position pos:line="172" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name pos:line="173" pos:column="3">regBase<pos:position pos:line="173" pos:column="10"/></name> <operator pos:line="173" pos:column="11">=<pos:position pos:line="173" pos:column="12"/></operator> <call><name pos:line="173" pos:column="13">sqlite3GenerateIndexKey<pos:position pos:line="173" pos:column="36"/></name><argument_list pos:line="173" pos:column="36">(
      <argument><expr><name pos:line="174" pos:column="7">pParse<pos:position pos:line="174" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="15">pIdx<pos:position pos:line="174" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="174" pos:column="21">pLevel<pos:position pos:line="174" pos:column="27"/></name><operator pos:line="174" pos:column="27">-&gt;<pos:position pos:line="174" pos:column="32"/></operator><name pos:line="174" pos:column="29">iTabCur<pos:position pos:line="174" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="38">regRecord<pos:position pos:line="174" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="174" pos:column="49">0<pos:position pos:line="174" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="174" pos:column="52">0<pos:position pos:line="174" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="174" pos:column="55">0<pos:position pos:line="174" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="174" pos:column="58">0<pos:position pos:line="174" pos:column="59"/></literal></expr></argument>
  )<pos:position pos:line="175" pos:column="4"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="5"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="176" pos:column="3">sqlite3VdbeAddOp2<pos:position pos:line="176" pos:column="20"/></name><argument_list pos:line="176" pos:column="20">(<argument><expr><name pos:line="176" pos:column="21">v<pos:position pos:line="176" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="24">OP_IdxInsert<pos:position pos:line="176" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="38">pLevel<pos:position pos:line="176" pos:column="44"/></name><operator pos:line="176" pos:column="44">-&gt;<pos:position pos:line="176" pos:column="49"/></operator><name pos:line="176" pos:column="46">iIdxCur<pos:position pos:line="176" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="55">regRecord<pos:position pos:line="176" pos:column="64"/></name></expr></argument>)<pos:position pos:line="176" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="177" pos:column="3">sqlite3VdbeChangeP5<pos:position pos:line="177" pos:column="22"/></name><argument_list pos:line="177" pos:column="22">(<argument><expr><name pos:line="177" pos:column="23">v<pos:position pos:line="177" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="26">OPFLAG_USESEEKRESULT<pos:position pos:line="177" pos:column="46"/></name></expr></argument>)<pos:position pos:line="177" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="48"/></expr_stmt>
  <if pos:line="178" pos:column="3">if<condition pos:line="178" pos:column="5">( <expr><name pos:line="178" pos:column="7">pPartial<pos:position pos:line="178" pos:column="15"/></name></expr> )<pos:position pos:line="178" pos:column="17"/></condition><then pos:line="178" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="178" pos:column="18">sqlite3VdbeResolveLabel<pos:position pos:line="178" pos:column="41"/></name><argument_list pos:line="178" pos:column="41">(<argument><expr><name pos:line="178" pos:column="42">v<pos:position pos:line="178" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="45">iContinue<pos:position pos:line="178" pos:column="54"/></name></expr></argument>)<pos:position pos:line="178" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="56"/></expr_stmt></block></then></if>
  <if pos:line="179" pos:column="3">if<condition pos:line="179" pos:column="5">( <expr><name><name pos:line="179" pos:column="7">pTabItem<pos:position pos:line="179" pos:column="15"/></name><operator pos:line="179" pos:column="15">-&gt;<pos:position pos:line="179" pos:column="20"/></operator><name pos:line="179" pos:column="17">fg<pos:position pos:line="179" pos:column="19"/></name><operator pos:line="179" pos:column="19">.<pos:position pos:line="179" pos:column="20"/></operator><name pos:line="179" pos:column="20">viaCoroutine<pos:position pos:line="179" pos:column="32"/></name></name></expr> )<pos:position pos:line="179" pos:column="34"/></condition><then><block pos:line="179" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="180" pos:column="5">sqlite3VdbeChangeP2<pos:position pos:line="180" pos:column="24"/></name><argument_list pos:line="180" pos:column="24">(<argument><expr><name pos:line="180" pos:column="25">v<pos:position pos:line="180" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="28">addrCounter<pos:position pos:line="180" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="41">regBase<pos:position pos:line="180" pos:column="48"/></name><operator pos:line="180" pos:column="48">+<pos:position pos:line="180" pos:column="49"/></operator><name pos:line="180" pos:column="49">n<pos:position pos:line="180" pos:column="50"/></name></expr></argument>)<pos:position pos:line="180" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="181" pos:column="5">testcase<pos:position pos:line="181" pos:column="13"/></name><argument_list pos:line="181" pos:column="13">( <argument><expr><name><name pos:line="181" pos:column="15">pParse<pos:position pos:line="181" pos:column="21"/></name><operator pos:line="181" pos:column="21">-&gt;<pos:position pos:line="181" pos:column="26"/></operator><name pos:line="181" pos:column="23">db<pos:position pos:line="181" pos:column="25"/></name><operator pos:line="181" pos:column="25">-&gt;<pos:position pos:line="181" pos:column="30"/></operator><name pos:line="181" pos:column="27">mallocFailed<pos:position pos:line="181" pos:column="39"/></name></name></expr></argument> )<pos:position pos:line="181" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="182" pos:column="5">translateColumnToCopy<pos:position pos:line="182" pos:column="26"/></name><argument_list pos:line="182" pos:column="26">(<argument><expr><name pos:line="182" pos:column="27">pParse<pos:position pos:line="182" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="35">addrTop<pos:position pos:line="182" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="182" pos:column="44">pLevel<pos:position pos:line="182" pos:column="50"/></name><operator pos:line="182" pos:column="50">-&gt;<pos:position pos:line="182" pos:column="55"/></operator><name pos:line="182" pos:column="52">iTabCur<pos:position pos:line="182" pos:column="59"/></name></name></expr></argument>,
                          <argument><expr><name><name pos:line="183" pos:column="27">pTabItem<pos:position pos:line="183" pos:column="35"/></name><operator pos:line="183" pos:column="35">-&gt;<pos:position pos:line="183" pos:column="40"/></operator><name pos:line="183" pos:column="37">regResult<pos:position pos:line="183" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="183" pos:column="48">1<pos:position pos:line="183" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="184" pos:column="5">sqlite3VdbeGoto<pos:position pos:line="184" pos:column="20"/></name><argument_list pos:line="184" pos:column="20">(<argument><expr><name pos:line="184" pos:column="21">v<pos:position pos:line="184" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="24">addrTop<pos:position pos:line="184" pos:column="31"/></name></expr></argument>)<pos:position pos:line="184" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="185" pos:column="5">pTabItem<pos:position pos:line="185" pos:column="13"/></name><operator pos:line="185" pos:column="13">-&gt;<pos:position pos:line="185" pos:column="18"/></operator><name pos:line="185" pos:column="15">fg<pos:position pos:line="185" pos:column="17"/></name><operator pos:line="185" pos:column="17">.<pos:position pos:line="185" pos:column="18"/></operator><name pos:line="185" pos:column="18">viaCoroutine<pos:position pos:line="185" pos:column="30"/></name></name> <operator pos:line="185" pos:column="31">=<pos:position pos:line="185" pos:column="32"/></operator> <literal type="number" pos:line="185" pos:column="33">0<pos:position pos:line="185" pos:column="34"/></literal></expr>;<pos:position pos:line="185" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="186" pos:column="4"/></block></then><else pos:line="186" pos:column="4">else<block pos:line="186" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="187" pos:column="5">sqlite3VdbeAddOp2<pos:position pos:line="187" pos:column="22"/></name><argument_list pos:line="187" pos:column="22">(<argument><expr><name pos:line="187" pos:column="23">v<pos:position pos:line="187" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="26">OP_Next<pos:position pos:line="187" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="187" pos:column="35">pLevel<pos:position pos:line="187" pos:column="41"/></name><operator pos:line="187" pos:column="41">-&gt;<pos:position pos:line="187" pos:column="46"/></operator><name pos:line="187" pos:column="43">iTabCur<pos:position pos:line="187" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="52">addrTop<pos:position pos:line="187" pos:column="59"/></name><operator pos:line="187" pos:column="59">+<pos:position pos:line="187" pos:column="60"/></operator><literal type="number" pos:line="187" pos:column="60">1<pos:position pos:line="187" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="63"/></expr_stmt> <expr_stmt><expr><call><name pos:line="187" pos:column="64">VdbeCoverage<pos:position pos:line="187" pos:column="76"/></name><argument_list pos:line="187" pos:column="76">(<argument><expr><name pos:line="187" pos:column="77">v<pos:position pos:line="187" pos:column="78"/></name></expr></argument>)<pos:position pos:line="187" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="80"/></expr_stmt>
  }<pos:position pos:line="188" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="189" pos:column="3">sqlite3VdbeChangeP5<pos:position pos:line="189" pos:column="22"/></name><argument_list pos:line="189" pos:column="22">(<argument><expr><name pos:line="189" pos:column="23">v<pos:position pos:line="189" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="26">SQLITE_STMTSTATUS_AUTOINDEX<pos:position pos:line="189" pos:column="53"/></name></expr></argument>)<pos:position pos:line="189" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="190" pos:column="3">sqlite3VdbeJumpHere<pos:position pos:line="190" pos:column="22"/></name><argument_list pos:line="190" pos:column="22">(<argument><expr><name pos:line="190" pos:column="23">v<pos:position pos:line="190" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="26">addrTop<pos:position pos:line="190" pos:column="33"/></name></expr></argument>)<pos:position pos:line="190" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="191" pos:column="3">sqlite3ReleaseTempReg<pos:position pos:line="191" pos:column="24"/></name><argument_list pos:line="191" pos:column="24">(<argument><expr><name pos:line="191" pos:column="25">pParse<pos:position pos:line="191" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="33">regRecord<pos:position pos:line="191" pos:column="42"/></name></expr></argument>)<pos:position pos:line="191" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="192" pos:column="3">sqlite3ExprCachePop<pos:position pos:line="192" pos:column="22"/></name><argument_list pos:line="192" pos:column="22">(<argument><expr><name pos:line="192" pos:column="23">pParse<pos:position pos:line="192" pos:column="29"/></name></expr></argument>)<pos:position pos:line="192" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="31"/></expr_stmt>
  
  <comment type="block" pos:line="194" pos:column="3">/* Jump here when skipping the initialization */</comment>
  <expr_stmt><expr><call><name pos:line="195" pos:column="3">sqlite3VdbeJumpHere<pos:position pos:line="195" pos:column="22"/></name><argument_list pos:line="195" pos:column="22">(<argument><expr><name pos:line="195" pos:column="23">v<pos:position pos:line="195" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="26">addrInit<pos:position pos:line="195" pos:column="34"/></name></expr></argument>)<pos:position pos:line="195" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="36"/></expr_stmt>

<label><name pos:line="197" pos:column="1">end_auto_index_create<pos:position pos:line="197" pos:column="22"/></name>:<pos:position pos:line="197" pos:column="23"/></label>
  <expr_stmt><expr><call><name pos:line="198" pos:column="3">sqlite3ExprDelete<pos:position pos:line="198" pos:column="20"/></name><argument_list pos:line="198" pos:column="20">(<argument><expr><name><name pos:line="198" pos:column="21">pParse<pos:position pos:line="198" pos:column="27"/></name><operator pos:line="198" pos:column="27">-&gt;<pos:position pos:line="198" pos:column="32"/></operator><name pos:line="198" pos:column="29">db<pos:position pos:line="198" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="33">pPartial<pos:position pos:line="198" pos:column="41"/></name></expr></argument>)<pos:position pos:line="198" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="43"/></expr_stmt>
}<pos:position pos:line="199" pos:column="2"/></block></function></unit>

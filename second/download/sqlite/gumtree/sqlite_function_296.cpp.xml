<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_296.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">testFunc<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(
  <parameter><decl><type><name pos:line="2" pos:column="3">sqlite3_context<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">context<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">argc<pos:position pos:line="3" pos:column="11"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="4" pos:column="3">sqlite3_value<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier><modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">argv<pos:position pos:line="4" pos:column="23"/></name></decl></parameter>
)<pos:position pos:line="5" pos:column="2"/></parameter_list><block pos:line="5" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">fts3Hash<pos:position pos:line="6" pos:column="11"/></name> <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier></type><name pos:line="6" pos:column="13">pHash<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">sqlite3_tokenizer_module<pos:position pos:line="7" pos:column="27"/></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">p<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">sqlite3_tokenizer<pos:position pos:line="8" pos:column="20"/></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">pTokenizer<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><literal type="number" pos:line="8" pos:column="35">0<pos:position pos:line="8" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">sqlite3_tokenizer_cursor<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">pCsr<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><literal type="number" pos:line="9" pos:column="36">0<pos:position pos:line="9" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">zErr<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="13" pos:column="3">const<pos:position pos:line="13" pos:column="8"/></specifier> <name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">zName<pos:position pos:line="13" pos:column="20"/></name></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">nName<pos:position pos:line="14" pos:column="12"/></name></decl>;<pos:position pos:line="14" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">zInput<pos:position pos:line="15" pos:column="21"/></name></decl>;<pos:position pos:line="15" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">nInput<pos:position pos:line="16" pos:column="13"/></name></decl>;<pos:position pos:line="16" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="18" pos:column="3">const<pos:position pos:line="18" pos:column="8"/></specifier> <name pos:line="18" pos:column="9">char<pos:position pos:line="18" pos:column="13"/></name> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">zArg<pos:position pos:line="18" pos:column="19"/></name> <init pos:line="18" pos:column="20">= <expr><literal type="number" pos:line="18" pos:column="22">0<pos:position pos:line="18" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="20" pos:column="3">const<pos:position pos:line="20" pos:column="8"/></specifier> <name pos:line="20" pos:column="9">char<pos:position pos:line="20" pos:column="13"/></name> <modifier pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></modifier></type><name pos:line="20" pos:column="15">zToken<pos:position pos:line="20" pos:column="21"/></name></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">int<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">nToken<pos:position pos:line="21" pos:column="13"/></name></decl>;<pos:position pos:line="21" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">int<pos:position pos:line="22" pos:column="6"/></name></type> <name pos:line="22" pos:column="7">iStart<pos:position pos:line="22" pos:column="13"/></name></decl>;<pos:position pos:line="22" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">int<pos:position pos:line="23" pos:column="6"/></name></type> <name pos:line="23" pos:column="7">iEnd<pos:position pos:line="23" pos:column="11"/></name></decl>;<pos:position pos:line="23" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">int<pos:position pos:line="24" pos:column="6"/></name></type> <name pos:line="24" pos:column="7">iPos<pos:position pos:line="24" pos:column="11"/></name></decl>;<pos:position pos:line="24" pos:column="12"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="26" pos:column="3">Tcl_Obj<pos:position pos:line="26" pos:column="10"/></name> <modifier pos:line="26" pos:column="11">*<pos:position pos:line="26" pos:column="12"/></modifier></type><name pos:line="26" pos:column="12">pRet<pos:position pos:line="26" pos:column="16"/></name></decl>;<pos:position pos:line="26" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">assert<pos:position pos:line="28" pos:column="9"/></name><argument_list pos:line="28" pos:column="9">( <argument><expr><name pos:line="28" pos:column="11">argc<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">==<pos:position pos:line="28" pos:column="17"/></operator><literal type="number" pos:line="28" pos:column="17">2<pos:position pos:line="28" pos:column="18"/></literal> <operator pos:line="28" pos:column="19">||<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">argc<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">==<pos:position pos:line="28" pos:column="28"/></operator><literal type="number" pos:line="28" pos:column="28">3<pos:position pos:line="28" pos:column="29"/></literal></expr></argument> )<pos:position pos:line="28" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name pos:line="30" pos:column="3">nName<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <call><name pos:line="30" pos:column="11">sqlite3_value_bytes<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name><name pos:line="30" pos:column="31">argv<pos:position pos:line="30" pos:column="35"/></name><index pos:line="30" pos:column="35">[<expr><literal type="number" pos:line="30" pos:column="36">0<pos:position pos:line="30" pos:column="37"/></literal></expr>]<pos:position pos:line="30" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name pos:line="31" pos:column="3">zName<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <operator pos:line="31" pos:column="11">(<pos:position pos:line="31" pos:column="12"/></operator><specifier pos:line="31" pos:column="12">const<pos:position pos:line="31" pos:column="17"/></specifier> <name pos:line="31" pos:column="18">char<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">*<pos:position pos:line="31" pos:column="24"/></operator><operator pos:line="31" pos:column="24">)<pos:position pos:line="31" pos:column="25"/></operator><call><name pos:line="31" pos:column="25">sqlite3_value_text<pos:position pos:line="31" pos:column="43"/></name><argument_list pos:line="31" pos:column="43">(<argument><expr><name><name pos:line="31" pos:column="44">argv<pos:position pos:line="31" pos:column="48"/></name><index pos:line="31" pos:column="48">[<expr><literal type="number" pos:line="31" pos:column="49">0<pos:position pos:line="31" pos:column="50"/></literal></expr>]<pos:position pos:line="31" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">nInput<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <call><name pos:line="32" pos:column="12">sqlite3_value_bytes<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name><name pos:line="32" pos:column="32">argv<pos:position pos:line="32" pos:column="36"/></name><index pos:line="32" pos:column="36">[<expr><name pos:line="32" pos:column="37">argc<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-<pos:position pos:line="32" pos:column="42"/></operator><literal type="number" pos:line="32" pos:column="42">1<pos:position pos:line="32" pos:column="43"/></literal></expr>]<pos:position pos:line="32" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name pos:line="33" pos:column="3">zInput<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><specifier pos:line="33" pos:column="13">const<pos:position pos:line="33" pos:column="18"/></specifier> <name pos:line="33" pos:column="19">char<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></operator><operator pos:line="33" pos:column="25">)<pos:position pos:line="33" pos:column="26"/></operator><call><name pos:line="33" pos:column="26">sqlite3_value_text<pos:position pos:line="33" pos:column="44"/></name><argument_list pos:line="33" pos:column="44">(<argument><expr><name><name pos:line="33" pos:column="45">argv<pos:position pos:line="33" pos:column="49"/></name><index pos:line="33" pos:column="49">[<expr><name pos:line="33" pos:column="50">argc<pos:position pos:line="33" pos:column="54"/></name><operator pos:line="33" pos:column="54">-<pos:position pos:line="33" pos:column="55"/></operator><literal type="number" pos:line="33" pos:column="55">1<pos:position pos:line="33" pos:column="56"/></literal></expr>]<pos:position pos:line="33" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="59"/></expr_stmt>

  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">( <expr><name pos:line="35" pos:column="7">argc<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">==<pos:position pos:line="35" pos:column="13"/></operator><literal type="number" pos:line="35" pos:column="13">3<pos:position pos:line="35" pos:column="14"/></literal></expr> )<pos:position pos:line="35" pos:column="16"/></condition><then><block pos:line="35" pos:column="16">{
    <expr_stmt><expr><name pos:line="36" pos:column="5">zArg<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><specifier pos:line="36" pos:column="13">const<pos:position pos:line="36" pos:column="18"/></specifier> <name pos:line="36" pos:column="19">char<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">*<pos:position pos:line="36" pos:column="25"/></operator><operator pos:line="36" pos:column="25">)<pos:position pos:line="36" pos:column="26"/></operator><call><name pos:line="36" pos:column="26">sqlite3_value_text<pos:position pos:line="36" pos:column="44"/></name><argument_list pos:line="36" pos:column="44">(<argument><expr><name><name pos:line="36" pos:column="45">argv<pos:position pos:line="36" pos:column="49"/></name><index pos:line="36" pos:column="49">[<expr><literal type="number" pos:line="36" pos:column="50">1<pos:position pos:line="36" pos:column="51"/></literal></expr>]<pos:position pos:line="36" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="39" pos:column="3">pHash<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">=<pos:position pos:line="39" pos:column="10"/></operator> <operator pos:line="39" pos:column="11">(<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">fts3Hash<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">*<pos:position pos:line="39" pos:column="22"/></operator><operator pos:line="39" pos:column="22">)<pos:position pos:line="39" pos:column="23"/></operator><call><name pos:line="39" pos:column="23">sqlite3_user_data<pos:position pos:line="39" pos:column="40"/></name><argument_list pos:line="39" pos:column="40">(<argument><expr><name pos:line="39" pos:column="41">context<pos:position pos:line="39" pos:column="48"/></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name pos:line="40" pos:column="3">p<pos:position pos:line="40" pos:column="4"/></name> <operator pos:line="40" pos:column="5">=<pos:position pos:line="40" pos:column="6"/></operator> <operator pos:line="40" pos:column="7">(<pos:position pos:line="40" pos:column="8"/></operator><name pos:line="40" pos:column="8">sqlite3_tokenizer_module<pos:position pos:line="40" pos:column="32"/></name> <operator pos:line="40" pos:column="33">*<pos:position pos:line="40" pos:column="34"/></operator><operator pos:line="40" pos:column="34">)<pos:position pos:line="40" pos:column="35"/></operator><call><name pos:line="40" pos:column="35">sqlite3Fts3HashFind<pos:position pos:line="40" pos:column="54"/></name><argument_list pos:line="40" pos:column="54">(<argument><expr><name pos:line="40" pos:column="55">pHash<pos:position pos:line="40" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="62">zName<pos:position pos:line="40" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="69">nName<pos:position pos:line="40" pos:column="74"/></name><operator pos:line="40" pos:column="74">+<pos:position pos:line="40" pos:column="75"/></operator><literal type="number" pos:line="40" pos:column="75">1<pos:position pos:line="40" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="78"/></expr_stmt>

  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">( <expr><operator pos:line="42" pos:column="7">!<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">p<pos:position pos:line="42" pos:column="9"/></name></expr> )<pos:position pos:line="42" pos:column="11"/></condition><then><block pos:line="42" pos:column="11">{
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">char<pos:position pos:line="43" pos:column="9"/></name> <modifier pos:line="43" pos:column="10">*<pos:position pos:line="43" pos:column="11"/></modifier></type><name pos:line="43" pos:column="11">zErr<pos:position pos:line="43" pos:column="15"/></name> <init pos:line="43" pos:column="16">= <expr><call><name pos:line="43" pos:column="18">sqlite3_mprintf<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><literal type="string" pos:line="43" pos:column="34">"unknown tokenizer: %s"<pos:position pos:line="43" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="59">zName<pos:position pos:line="43" pos:column="64"/></name></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="43" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">sqlite3_result_error<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">context<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="35">zErr<pos:position pos:line="44" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="41">-<pos:position pos:line="44" pos:column="42"/></operator><literal type="number" pos:line="44" pos:column="42">1<pos:position pos:line="44" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">sqlite3_free<pos:position pos:line="45" pos:column="17"/></name><argument_list pos:line="45" pos:column="17">(<argument><expr><name pos:line="45" pos:column="18">zErr<pos:position pos:line="45" pos:column="22"/></name></expr></argument>)<pos:position pos:line="45" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
    <return pos:line="46" pos:column="5">return;<pos:position pos:line="46" pos:column="12"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="49" pos:column="3">pRet<pos:position pos:line="49" pos:column="7"/></name> <operator pos:line="49" pos:column="8">=<pos:position pos:line="49" pos:column="9"/></operator> <call><name pos:line="49" pos:column="10">Tcl_NewObj<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">()<pos:position pos:line="49" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="50" pos:column="3">Tcl_IncrRefCount<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">pRet<pos:position pos:line="50" pos:column="24"/></name></expr></argument>)<pos:position pos:line="50" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>

  <if pos:line="52" pos:column="3">if<condition pos:line="52" pos:column="5">( <expr><name pos:line="52" pos:column="7">SQLITE_OK<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">!=<pos:position pos:line="52" pos:column="18"/></operator><call><name><name pos:line="52" pos:column="18">p<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">-&gt;<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="21">xCreate<pos:position pos:line="52" pos:column="28"/></name></name><argument_list pos:line="52" pos:column="28">(<argument><expr><ternary><condition><expr><name pos:line="52" pos:column="29">zArg<pos:position pos:line="52" pos:column="33"/></name></expr> ?<pos:position pos:line="52" pos:column="35"/></condition><then pos:line="52" pos:column="35"> <expr><literal type="number" pos:line="52" pos:column="36">1<pos:position pos:line="52" pos:column="37"/></literal></expr> <pos:position pos:line="52" pos:column="38"/></then><else pos:line="52" pos:column="38">: <expr><literal type="number" pos:line="52" pos:column="40">0<pos:position pos:line="52" pos:column="41"/></literal></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="52" pos:column="43">&amp;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="44">zArg<pos:position pos:line="52" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="50">&amp;<pos:position pos:line="52" pos:column="55"/></operator><name pos:line="52" pos:column="51">pTokenizer<pos:position pos:line="52" pos:column="61"/></name></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr> )<pos:position pos:line="52" pos:column="64"/></condition><then><block pos:line="52" pos:column="64">{
    <expr_stmt><expr><name pos:line="53" pos:column="5">zErr<pos:position pos:line="53" pos:column="9"/></name> <operator pos:line="53" pos:column="10">=<pos:position pos:line="53" pos:column="11"/></operator> <literal type="string" pos:line="53" pos:column="12">"error in xCreate()"<pos:position pos:line="53" pos:column="32"/></literal></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>
    <goto pos:line="54" pos:column="5">goto <name pos:line="54" pos:column="10">finish<pos:position pos:line="54" pos:column="16"/></name>;<pos:position pos:line="54" pos:column="17"/></goto>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="56" pos:column="3">pTokenizer<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">pModule<pos:position pos:line="56" pos:column="22"/></name></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <name pos:line="56" pos:column="25">p<pos:position pos:line="56" pos:column="26"/></name></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
  <if pos:line="57" pos:column="3">if<condition pos:line="57" pos:column="5">( <expr><name pos:line="57" pos:column="7">SQLITE_OK<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">!=<pos:position pos:line="57" pos:column="18"/></operator><call><name><name pos:line="57" pos:column="18">p<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">-&gt;<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="21">xOpen<pos:position pos:line="57" pos:column="26"/></name></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">pTokenizer<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="39">zInput<pos:position pos:line="57" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="47">nInput<pos:position pos:line="57" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="55">&amp;<pos:position pos:line="57" pos:column="60"/></operator><name pos:line="57" pos:column="56">pCsr<pos:position pos:line="57" pos:column="60"/></name></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call></expr> )<pos:position pos:line="57" pos:column="63"/></condition><then><block pos:line="57" pos:column="63">{
    <expr_stmt><expr><name pos:line="58" pos:column="5">zErr<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">=<pos:position pos:line="58" pos:column="11"/></operator> <literal type="string" pos:line="58" pos:column="12">"error in xOpen()"<pos:position pos:line="58" pos:column="30"/></literal></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt>
    <goto pos:line="59" pos:column="5">goto <name pos:line="59" pos:column="10">finish<pos:position pos:line="59" pos:column="16"/></name>;<pos:position pos:line="59" pos:column="17"/></goto>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="61" pos:column="3">pCsr<pos:position pos:line="61" pos:column="7"/></name><operator pos:line="61" pos:column="7">-&gt;<pos:position pos:line="61" pos:column="12"/></operator><name pos:line="61" pos:column="9">pTokenizer<pos:position pos:line="61" pos:column="19"/></name></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <name pos:line="61" pos:column="22">pTokenizer<pos:position pos:line="61" pos:column="32"/></name></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt>

  <while pos:line="63" pos:column="3">while<condition pos:line="63" pos:column="8">( <expr><name pos:line="63" pos:column="10">SQLITE_OK<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">==<pos:position pos:line="63" pos:column="21"/></operator><call><name><name pos:line="63" pos:column="21">p<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">-&gt;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="24">xNext<pos:position pos:line="63" pos:column="29"/></name></name><argument_list pos:line="63" pos:column="29">(<argument><expr><name pos:line="63" pos:column="30">pCsr<pos:position pos:line="63" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="36">&amp;<pos:position pos:line="63" pos:column="41"/></operator><name pos:line="63" pos:column="37">zToken<pos:position pos:line="63" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="45">&amp;<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="46">nToken<pos:position pos:line="63" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="54">&amp;<pos:position pos:line="63" pos:column="59"/></operator><name pos:line="63" pos:column="55">iStart<pos:position pos:line="63" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="63">&amp;<pos:position pos:line="63" pos:column="68"/></operator><name pos:line="63" pos:column="64">iEnd<pos:position pos:line="63" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="70">&amp;<pos:position pos:line="63" pos:column="75"/></operator><name pos:line="63" pos:column="71">iPos<pos:position pos:line="63" pos:column="75"/></name></expr></argument>)<pos:position pos:line="63" pos:column="76"/></argument_list></call></expr> )<pos:position pos:line="63" pos:column="78"/></condition><block pos:line="63" pos:column="78">{
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">Tcl_ListObjAppendElement<pos:position pos:line="64" pos:column="29"/></name><argument_list pos:line="64" pos:column="29">(<argument><expr><literal type="number" pos:line="64" pos:column="30">0<pos:position pos:line="64" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="33">pRet<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="39">Tcl_NewIntObj<pos:position pos:line="64" pos:column="52"/></name><argument_list pos:line="64" pos:column="52">(<argument><expr><name pos:line="64" pos:column="53">iPos<pos:position pos:line="64" pos:column="57"/></name></expr></argument>)<pos:position pos:line="64" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">Tcl_ListObjAppendElement<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><literal type="number" pos:line="65" pos:column="30">0<pos:position pos:line="65" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="33">pRet<pos:position pos:line="65" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="39">Tcl_NewStringObj<pos:position pos:line="65" pos:column="55"/></name><argument_list pos:line="65" pos:column="55">(<argument><expr><name pos:line="65" pos:column="56">zToken<pos:position pos:line="65" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="64">nToken<pos:position pos:line="65" pos:column="70"/></name></expr></argument>)<pos:position pos:line="65" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name pos:line="66" pos:column="5">zToken<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">=<pos:position pos:line="66" pos:column="13"/></operator> <operator pos:line="66" pos:column="14">&amp;<pos:position pos:line="66" pos:column="19"/></operator><name><name pos:line="66" pos:column="15">zInput<pos:position pos:line="66" pos:column="21"/></name><index pos:line="66" pos:column="21">[<expr><name pos:line="66" pos:column="22">iStart<pos:position pos:line="66" pos:column="28"/></name></expr>]<pos:position pos:line="66" pos:column="29"/></index></name></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="67" pos:column="5">nToken<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">=<pos:position pos:line="67" pos:column="13"/></operator> <name pos:line="67" pos:column="14">iEnd<pos:position pos:line="67" pos:column="18"/></name><operator pos:line="67" pos:column="18">-<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="19">iStart<pos:position pos:line="67" pos:column="25"/></name></expr>;<pos:position pos:line="67" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">Tcl_ListObjAppendElement<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><literal type="number" pos:line="68" pos:column="30">0<pos:position pos:line="68" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="33">pRet<pos:position pos:line="68" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="39">Tcl_NewStringObj<pos:position pos:line="68" pos:column="55"/></name><argument_list pos:line="68" pos:column="55">(<argument><expr><name pos:line="68" pos:column="56">zToken<pos:position pos:line="68" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="64">nToken<pos:position pos:line="68" pos:column="70"/></name></expr></argument>)<pos:position pos:line="68" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="73"/></expr_stmt>
  }<pos:position pos:line="69" pos:column="4"/></block></while>

  <if pos:line="71" pos:column="3">if<condition pos:line="71" pos:column="5">( <expr><name pos:line="71" pos:column="7">SQLITE_OK<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">!=<pos:position pos:line="71" pos:column="18"/></operator><call><name><name pos:line="71" pos:column="18">p<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">-&gt;<pos:position pos:line="71" pos:column="24"/></operator><name pos:line="71" pos:column="21">xClose<pos:position pos:line="71" pos:column="27"/></name></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name pos:line="71" pos:column="28">pCsr<pos:position pos:line="71" pos:column="32"/></name></expr></argument>)<pos:position pos:line="71" pos:column="33"/></argument_list></call></expr> )<pos:position pos:line="71" pos:column="35"/></condition><then><block pos:line="71" pos:column="35">{
    <expr_stmt><expr><name pos:line="72" pos:column="5">zErr<pos:position pos:line="72" pos:column="9"/></name> <operator pos:line="72" pos:column="10">=<pos:position pos:line="72" pos:column="11"/></operator> <literal type="string" pos:line="72" pos:column="12">"error in xClose()"<pos:position pos:line="72" pos:column="31"/></literal></expr>;<pos:position pos:line="72" pos:column="32"/></expr_stmt>
    <goto pos:line="73" pos:column="5">goto <name pos:line="73" pos:column="10">finish<pos:position pos:line="73" pos:column="16"/></name>;<pos:position pos:line="73" pos:column="17"/></goto>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>
  <if pos:line="75" pos:column="3">if<condition pos:line="75" pos:column="5">( <expr><name pos:line="75" pos:column="7">SQLITE_OK<pos:position pos:line="75" pos:column="16"/></name><operator pos:line="75" pos:column="16">!=<pos:position pos:line="75" pos:column="18"/></operator><call><name><name pos:line="75" pos:column="18">p<pos:position pos:line="75" pos:column="19"/></name><operator pos:line="75" pos:column="19">-&gt;<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="21">xDestroy<pos:position pos:line="75" pos:column="29"/></name></name><argument_list pos:line="75" pos:column="29">(<argument><expr><name pos:line="75" pos:column="30">pTokenizer<pos:position pos:line="75" pos:column="40"/></name></expr></argument>)<pos:position pos:line="75" pos:column="41"/></argument_list></call></expr> )<pos:position pos:line="75" pos:column="43"/></condition><then><block pos:line="75" pos:column="43">{
    <expr_stmt><expr><name pos:line="76" pos:column="5">zErr<pos:position pos:line="76" pos:column="9"/></name> <operator pos:line="76" pos:column="10">=<pos:position pos:line="76" pos:column="11"/></operator> <literal type="string" pos:line="76" pos:column="12">"error in xDestroy()"<pos:position pos:line="76" pos:column="33"/></literal></expr>;<pos:position pos:line="76" pos:column="34"/></expr_stmt>
    <goto pos:line="77" pos:column="5">goto <name pos:line="77" pos:column="10">finish<pos:position pos:line="77" pos:column="16"/></name>;<pos:position pos:line="77" pos:column="17"/></goto>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

<label><name pos:line="80" pos:column="1">finish<pos:position pos:line="80" pos:column="7"/></name>:<pos:position pos:line="80" pos:column="8"/></label>
  <if pos:line="81" pos:column="3">if<condition pos:line="81" pos:column="5">( <expr><name pos:line="81" pos:column="7">zErr<pos:position pos:line="81" pos:column="11"/></name></expr> )<pos:position pos:line="81" pos:column="13"/></condition><then><block pos:line="81" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">sqlite3_result_error<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><name pos:line="82" pos:column="26">context<pos:position pos:line="82" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="35">zErr<pos:position pos:line="82" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="41">-<pos:position pos:line="82" pos:column="42"/></operator><literal type="number" pos:line="82" pos:column="42">1<pos:position pos:line="82" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="83" pos:column="4"/></block></then><else pos:line="83" pos:column="4">else<block pos:line="83" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">sqlite3_result_text<pos:position pos:line="84" pos:column="24"/></name><argument_list pos:line="84" pos:column="24">(<argument><expr><name pos:line="84" pos:column="25">context<pos:position pos:line="84" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="84" pos:column="34">Tcl_GetString<pos:position pos:line="84" pos:column="47"/></name><argument_list pos:line="84" pos:column="47">(<argument><expr><name pos:line="84" pos:column="48">pRet<pos:position pos:line="84" pos:column="52"/></name></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="84" pos:column="55">-<pos:position pos:line="84" pos:column="56"/></operator><literal type="number" pos:line="84" pos:column="56">1<pos:position pos:line="84" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="59">SQLITE_TRANSIENT<pos:position pos:line="84" pos:column="75"/></name></expr></argument>)<pos:position pos:line="84" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="85" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">Tcl_DecrRefCount<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><name pos:line="86" pos:column="20">pRet<pos:position pos:line="86" pos:column="24"/></name></expr></argument>)<pos:position pos:line="86" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="26"/></expr_stmt>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

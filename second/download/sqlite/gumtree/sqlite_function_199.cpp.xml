<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_199.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">TriggerPrg<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">codeRowTrigger<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Parse<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pParse<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>,       <comment type="block" pos:line="2" pos:column="24">/* Current parse context */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">Trigger<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">pTrigger<pos:position pos:line="3" pos:column="20"/></name></decl></parameter>,   <comment type="block" pos:line="3" pos:column="24">/* Trigger to code */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">Table<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">pTab<pos:position pos:line="4" pos:column="14"/></name></decl></parameter>,         <comment type="block" pos:line="4" pos:column="24">/* The table pTrigger is attached to */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">orconf<pos:position pos:line="5" pos:column="13"/></name></decl></parameter>           <comment type="block" pos:line="5" pos:column="24">/* ON CONFLICT policy to code trigger program with */</comment>
)<pos:position pos:line="6" pos:column="2"/></parameter_list><block pos:line="6" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">Parse<pos:position pos:line="7" pos:column="8"/></name> <modifier pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></modifier></type><name pos:line="7" pos:column="10">pTop<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><call><name pos:line="7" pos:column="17">sqlite3ParseToplevel<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">pParse<pos:position pos:line="7" pos:column="44"/></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">sqlite3<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">db<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name><name pos:line="8" pos:column="17">pParse<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">db<pos:position pos:line="8" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>   <comment type="block" pos:line="8" pos:column="31">/* Database handle */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">TriggerPrg<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">pPrg<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>           <comment type="block" pos:line="9" pos:column="31">/* Value to return */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">Expr<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">pWhen<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>            <comment type="block" pos:line="10" pos:column="31">/* Duplicate of trigger WHEN expression */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">Vdbe<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">v<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>                    <comment type="block" pos:line="11" pos:column="31">/* Temporary VM */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">NameContext<pos:position pos:line="12" pos:column="14"/></name></type> <name pos:line="12" pos:column="15">sNC<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>            <comment type="block" pos:line="12" pos:column="31">/* Name context for sub-vdbe */</comment>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">SubProgram<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">pProgram<pos:position pos:line="13" pos:column="23"/></name> <init pos:line="13" pos:column="24">= <expr><literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>   <comment type="block" pos:line="13" pos:column="31">/* Sub-vdbe for trigger program */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">Parse<pos:position pos:line="14" pos:column="8"/></name> <modifier pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></modifier></type><name pos:line="14" pos:column="10">pSubParse<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>           <comment type="block" pos:line="14" pos:column="31">/* Parse context for sub-vdbe */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">iEndTrigger<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><literal type="number" pos:line="15" pos:column="21">0<pos:position pos:line="15" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>        <comment type="block" pos:line="15" pos:column="31">/* Label to jump to if WHEN is false */</comment>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">assert<pos:position pos:line="17" pos:column="9"/></name><argument_list pos:line="17" pos:column="9">( <argument><expr><name><name pos:line="17" pos:column="11">pTrigger<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">zName<pos:position pos:line="17" pos:column="26"/></name></name><operator pos:line="17" pos:column="26">==<pos:position pos:line="17" pos:column="28"/></operator><literal type="number" pos:line="17" pos:column="28">0<pos:position pos:line="17" pos:column="29"/></literal> <operator pos:line="17" pos:column="30">||<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="33">pTab<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">==<pos:position pos:line="17" pos:column="39"/></operator><call><name pos:line="17" pos:column="39">tableOfTrigger<pos:position pos:line="17" pos:column="53"/></name><argument_list pos:line="17" pos:column="53">(<argument><expr><name pos:line="17" pos:column="54">pTrigger<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr></argument> )<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">assert<pos:position pos:line="18" pos:column="9"/></name><argument_list pos:line="18" pos:column="9">( <argument><expr><name><name pos:line="18" pos:column="11">pTop<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">pVdbe<pos:position pos:line="18" pos:column="22"/></name></name></expr></argument> )<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* Allocate the TriggerPrg and SubProgram objects. To ensure that they
  ** are freed if an error occurs, link them into the Parse.pTriggerPrg 
  ** list of the top-level Parse object sooner rather than later.  */</comment>
  <expr_stmt><expr><name pos:line="23" pos:column="3">pPrg<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">sqlite3DbMallocZero<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">db<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="34">sizeof<argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">TriggerPrg<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">( <expr><operator pos:line="24" pos:column="7">!<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">pPrg<pos:position pos:line="24" pos:column="12"/></name></expr> )<pos:position pos:line="24" pos:column="14"/></condition><then pos:line="24" pos:column="14"> <block type="pseudo"><return pos:line="24" pos:column="15">return <expr><literal type="number" pos:line="24" pos:column="22">0<pos:position pos:line="24" pos:column="23"/></literal></expr>;<pos:position pos:line="24" pos:column="24"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">pPrg<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">pNext<pos:position pos:line="25" pos:column="14"/></name></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name><name pos:line="25" pos:column="17">pTop<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">pTriggerPrg<pos:position pos:line="25" pos:column="34"/></name></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">pTop<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">pTriggerPrg<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">pPrg<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">pPrg<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">pProgram<pos:position pos:line="27" pos:column="17"/></name></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">pProgram<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <call><name pos:line="27" pos:column="31">sqlite3DbMallocZero<pos:position pos:line="27" pos:column="50"/></name><argument_list pos:line="27" pos:column="50">(<argument><expr><name pos:line="27" pos:column="51">db<pos:position pos:line="27" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="55">sizeof<argument_list pos:line="27" pos:column="61">(<argument><expr><name pos:line="27" pos:column="62">SubProgram<pos:position pos:line="27" pos:column="72"/></name></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="75"/></expr_stmt>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">( <expr><operator pos:line="28" pos:column="7">!<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">pProgram<pos:position pos:line="28" pos:column="16"/></name></expr> )<pos:position pos:line="28" pos:column="18"/></condition><then pos:line="28" pos:column="18"> <block type="pseudo"><return pos:line="28" pos:column="19">return <expr><literal type="number" pos:line="28" pos:column="26">0<pos:position pos:line="28" pos:column="27"/></literal></expr>;<pos:position pos:line="28" pos:column="28"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">sqlite3VdbeLinkSubProgram<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name><name pos:line="29" pos:column="29">pTop<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-&gt;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="35">pVdbe<pos:position pos:line="29" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">pProgram<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">pPrg<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">pTrigger<pos:position pos:line="30" pos:column="17"/></name></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">pTrigger<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">pPrg<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">orconf<pos:position pos:line="31" pos:column="15"/></name></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">orconf<pos:position pos:line="31" pos:column="24"/></name></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">pPrg<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">aColmask<pos:position pos:line="32" pos:column="17"/></name><index pos:line="32" pos:column="17">[<expr><literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal></expr>]<pos:position pos:line="32" pos:column="20"/></index></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <literal type="number" pos:line="32" pos:column="23">0xffffffff<pos:position pos:line="32" pos:column="33"/></literal></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">pPrg<pos:position pos:line="33" pos:column="7"/></name><operator pos:line="33" pos:column="7">-&gt;<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="9">aColmask<pos:position pos:line="33" pos:column="17"/></name><index pos:line="33" pos:column="17">[<expr><literal type="number" pos:line="33" pos:column="18">1<pos:position pos:line="33" pos:column="19"/></literal></expr>]<pos:position pos:line="33" pos:column="20"/></index></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="23">0xffffffff<pos:position pos:line="33" pos:column="33"/></literal></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="35" pos:column="3">/* Allocate and populate a new Parse context to use for coding the 
  ** trigger sub-program.  */</comment>
  <expr_stmt><expr><name pos:line="37" pos:column="3">pSubParse<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <call><name pos:line="37" pos:column="15">sqlite3StackAllocZero<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">db<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="41">sizeof<argument_list pos:line="37" pos:column="47">(<argument><expr><name pos:line="37" pos:column="48">Parse<pos:position pos:line="37" pos:column="53"/></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt>
  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">( <expr><operator pos:line="38" pos:column="7">!<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">pSubParse<pos:position pos:line="38" pos:column="17"/></name></expr> )<pos:position pos:line="38" pos:column="19"/></condition><then pos:line="38" pos:column="19"> <block type="pseudo"><return pos:line="38" pos:column="20">return <expr><literal type="number" pos:line="38" pos:column="27">0<pos:position pos:line="38" pos:column="28"/></literal></expr>;<pos:position pos:line="38" pos:column="29"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">memset<pos:position pos:line="39" pos:column="9"/></name><argument_list pos:line="39" pos:column="9">(<argument><expr><operator pos:line="39" pos:column="10">&amp;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="11">sNC<pos:position pos:line="39" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="16">0<pos:position pos:line="39" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="19">sizeof<argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">sNC<pos:position pos:line="39" pos:column="29"/></name></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="40" pos:column="3">sNC<pos:position pos:line="40" pos:column="6"/></name><operator pos:line="40" pos:column="6">.<pos:position pos:line="40" pos:column="7"/></operator><name pos:line="40" pos:column="7">pParse<pos:position pos:line="40" pos:column="13"/></name></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <name pos:line="40" pos:column="16">pSubParse<pos:position pos:line="40" pos:column="25"/></name></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="41" pos:column="3">pSubParse<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">db<pos:position pos:line="41" pos:column="16"/></name></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">db<pos:position pos:line="41" pos:column="21"/></name></expr>;<pos:position pos:line="41" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="42" pos:column="3">pSubParse<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">pTriggerTab<pos:position pos:line="42" pos:column="25"/></name></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="28">pTab<pos:position pos:line="42" pos:column="32"/></name></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">pSubParse<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">pToplevel<pos:position pos:line="43" pos:column="23"/></name></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <name pos:line="43" pos:column="26">pTop<pos:position pos:line="43" pos:column="30"/></name></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">pSubParse<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">zAuthContext<pos:position pos:line="44" pos:column="26"/></name></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <name><name pos:line="44" pos:column="29">pTrigger<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">-&gt;<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="39">zName<pos:position pos:line="44" pos:column="44"/></name></name></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">pSubParse<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">-&gt;<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="14">eTriggerOp<pos:position pos:line="45" pos:column="24"/></name></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <name><name pos:line="45" pos:column="27">pTrigger<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">-&gt;<pos:position pos:line="45" pos:column="40"/></operator><name pos:line="45" pos:column="37">op<pos:position pos:line="45" pos:column="39"/></name></name></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="46" pos:column="3">pSubParse<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">nQueryLoop<pos:position pos:line="46" pos:column="24"/></name></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <name><name pos:line="46" pos:column="27">pParse<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">-&gt;<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="35">nQueryLoop<pos:position pos:line="46" pos:column="45"/></name></name></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><name pos:line="48" pos:column="3">v<pos:position pos:line="48" pos:column="4"/></name> <operator pos:line="48" pos:column="5">=<pos:position pos:line="48" pos:column="6"/></operator> <call><name pos:line="48" pos:column="7">sqlite3GetVdbe<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">pSubParse<pos:position pos:line="48" pos:column="31"/></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">( <expr><name pos:line="49" pos:column="7">v<pos:position pos:line="49" pos:column="8"/></name></expr> )<pos:position pos:line="49" pos:column="10"/></condition><then><block pos:line="49" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">VdbeComment<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><operator pos:line="50" pos:column="17">(<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">v<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">,<pos:position pos:line="50" pos:column="20"/></operator> <literal type="string" pos:line="50" pos:column="21">"Start: %s.%s (%s %s%s%s ON %s)"<pos:position pos:line="50" pos:column="53"/></literal><operator pos:line="50" pos:column="53">,<pos:position pos:line="50" pos:column="54"/></operator> 
      <name><name pos:line="51" pos:column="7">pTrigger<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">-&gt;<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="17">zName<pos:position pos:line="51" pos:column="22"/></name></name><operator pos:line="51" pos:column="22">,<pos:position pos:line="51" pos:column="23"/></operator> <call><name pos:line="51" pos:column="24">onErrorText<pos:position pos:line="51" pos:column="35"/></name><argument_list pos:line="51" pos:column="35">(<argument><expr><name pos:line="51" pos:column="36">orconf<pos:position pos:line="51" pos:column="42"/></name></expr></argument>)<pos:position pos:line="51" pos:column="43"/></argument_list></call><operator pos:line="51" pos:column="43">,<pos:position pos:line="51" pos:column="44"/></operator>
      <operator pos:line="52" pos:column="7">(<pos:position pos:line="52" pos:column="8"/></operator><ternary><condition><expr><name><name pos:line="52" pos:column="8">pTrigger<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">tr_tm<pos:position pos:line="52" pos:column="23"/></name></name><operator pos:line="52" pos:column="23">==<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="25">TRIGGER_BEFORE<pos:position pos:line="52" pos:column="39"/></name></expr> ?<pos:position pos:line="52" pos:column="41"/></condition><then pos:line="52" pos:column="41"> <expr><literal type="string" pos:line="52" pos:column="42">"BEFORE"<pos:position pos:line="52" pos:column="50"/></literal></expr> <pos:position pos:line="52" pos:column="51"/></then><else pos:line="52" pos:column="51">: <expr><literal type="string" pos:line="52" pos:column="53">"AFTER"<pos:position pos:line="52" pos:column="60"/></literal></expr></else></ternary><operator pos:line="52" pos:column="60">)<pos:position pos:line="52" pos:column="61"/></operator><operator pos:line="52" pos:column="61">,<pos:position pos:line="52" pos:column="62"/></operator>
        <operator pos:line="53" pos:column="9">(<pos:position pos:line="53" pos:column="10"/></operator><ternary><condition><expr><name><name pos:line="53" pos:column="10">pTrigger<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">-&gt;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="20">op<pos:position pos:line="53" pos:column="22"/></name></name><operator pos:line="53" pos:column="22">==<pos:position pos:line="53" pos:column="24"/></operator><name pos:line="53" pos:column="24">TK_UPDATE<pos:position pos:line="53" pos:column="33"/></name></expr> ?<pos:position pos:line="53" pos:column="35"/></condition><then pos:line="53" pos:column="35"> <expr><literal type="string" pos:line="53" pos:column="36">"UPDATE"<pos:position pos:line="53" pos:column="44"/></literal></expr> <pos:position pos:line="53" pos:column="45"/></then><else pos:line="53" pos:column="45">: <expr><literal type="string" pos:line="53" pos:column="47">""<pos:position pos:line="53" pos:column="49"/></literal></expr></else></ternary><operator pos:line="53" pos:column="49">)<pos:position pos:line="53" pos:column="50"/></operator><operator pos:line="53" pos:column="50">,<pos:position pos:line="53" pos:column="51"/></operator>
        <operator pos:line="54" pos:column="9">(<pos:position pos:line="54" pos:column="10"/></operator><ternary><condition><expr><name><name pos:line="54" pos:column="10">pTrigger<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">-&gt;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="20">op<pos:position pos:line="54" pos:column="22"/></name></name><operator pos:line="54" pos:column="22">==<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="24">TK_INSERT<pos:position pos:line="54" pos:column="33"/></name></expr> ?<pos:position pos:line="54" pos:column="35"/></condition><then pos:line="54" pos:column="35"> <expr><literal type="string" pos:line="54" pos:column="36">"INSERT"<pos:position pos:line="54" pos:column="44"/></literal></expr> <pos:position pos:line="54" pos:column="45"/></then><else pos:line="54" pos:column="45">: <expr><literal type="string" pos:line="54" pos:column="47">""<pos:position pos:line="54" pos:column="49"/></literal></expr></else></ternary><operator pos:line="54" pos:column="49">)<pos:position pos:line="54" pos:column="50"/></operator><operator pos:line="54" pos:column="50">,<pos:position pos:line="54" pos:column="51"/></operator>
        <operator pos:line="55" pos:column="9">(<pos:position pos:line="55" pos:column="10"/></operator><ternary><condition><expr><name><name pos:line="55" pos:column="10">pTrigger<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">op<pos:position pos:line="55" pos:column="22"/></name></name><operator pos:line="55" pos:column="22">==<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="24">TK_DELETE<pos:position pos:line="55" pos:column="33"/></name></expr> ?<pos:position pos:line="55" pos:column="35"/></condition><then pos:line="55" pos:column="35"> <expr><literal type="string" pos:line="55" pos:column="36">"DELETE"<pos:position pos:line="55" pos:column="44"/></literal></expr> <pos:position pos:line="55" pos:column="45"/></then><else pos:line="55" pos:column="45">: <expr><literal type="string" pos:line="55" pos:column="47">""<pos:position pos:line="55" pos:column="49"/></literal></expr></else></ternary><operator pos:line="55" pos:column="49">)<pos:position pos:line="55" pos:column="50"/></operator><operator pos:line="55" pos:column="50">,<pos:position pos:line="55" pos:column="51"/></operator>
      <name><name pos:line="56" pos:column="7">pTab<pos:position pos:line="56" pos:column="11"/></name><operator pos:line="56" pos:column="11">-&gt;<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="13">zName<pos:position pos:line="56" pos:column="18"/></name></name>
    <operator pos:line="57" pos:column="5">)<pos:position pos:line="57" pos:column="6"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="7"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="8"/></expr_stmt>
<cpp:ifndef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifndef<pos:position pos:line="58" pos:column="8"/></cpp:directive> <name pos:line="58" pos:column="9">SQLITE_OMIT_TRACE<pos:position pos:line="58" pos:column="26"/></name></cpp:ifndef>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">sqlite3VdbeChangeP4<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">v<pos:position pos:line="59" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="28">-<pos:position pos:line="59" pos:column="29"/></operator><literal type="number" pos:line="59" pos:column="29">1<pos:position pos:line="59" pos:column="30"/></literal></expr></argument>, 
      <argument><expr><call><name pos:line="60" pos:column="7">sqlite3MPrintf<pos:position pos:line="60" pos:column="21"/></name><argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">db<pos:position pos:line="60" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="26">"-- TRIGGER %s"<pos:position pos:line="60" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="43">pTrigger<pos:position pos:line="60" pos:column="51"/></name><operator pos:line="60" pos:column="51">-&gt;<pos:position pos:line="60" pos:column="56"/></operator><name pos:line="60" pos:column="53">zName<pos:position pos:line="60" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="60" pos:column="61">P4_DYNAMIC<pos:position pos:line="60" pos:column="71"/></name></expr></argument>
    )<pos:position pos:line="61" pos:column="6"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="7"/></expr_stmt>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="64" pos:column="5">/* If one was specified, code the WHEN clause. If it evaluates to false
    ** (or NULL) the sub-vdbe is immediately halted by jumping to the 
    ** OP_Halt inserted at the end of the program.  */</comment>
    <if pos:line="67" pos:column="5">if<condition pos:line="67" pos:column="7">( <expr><name><name pos:line="67" pos:column="9">pTrigger<pos:position pos:line="67" pos:column="17"/></name><operator pos:line="67" pos:column="17">-&gt;<pos:position pos:line="67" pos:column="22"/></operator><name pos:line="67" pos:column="19">pWhen<pos:position pos:line="67" pos:column="24"/></name></name></expr> )<pos:position pos:line="67" pos:column="26"/></condition><then><block pos:line="67" pos:column="26">{
      <expr_stmt><expr><name pos:line="68" pos:column="7">pWhen<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <call><name pos:line="68" pos:column="15">sqlite3ExprDup<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><name pos:line="68" pos:column="30">db<pos:position pos:line="68" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="34">pTrigger<pos:position pos:line="68" pos:column="42"/></name><operator pos:line="68" pos:column="42">-&gt;<pos:position pos:line="68" pos:column="47"/></operator><name pos:line="68" pos:column="44">pWhen<pos:position pos:line="68" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="51">0<pos:position pos:line="68" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="54"/></expr_stmt>
      <if pos:line="69" pos:column="7">if<condition pos:line="69" pos:column="9">( <expr><name pos:line="69" pos:column="11">SQLITE_OK<pos:position pos:line="69" pos:column="20"/></name><operator pos:line="69" pos:column="20">==<pos:position pos:line="69" pos:column="22"/></operator><call><name pos:line="69" pos:column="22">sqlite3ResolveExprNames<pos:position pos:line="69" pos:column="45"/></name><argument_list pos:line="69" pos:column="45">(<argument><expr><operator pos:line="69" pos:column="46">&amp;<pos:position pos:line="69" pos:column="51"/></operator><name pos:line="69" pos:column="47">sNC<pos:position pos:line="69" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="52">pWhen<pos:position pos:line="69" pos:column="57"/></name></expr></argument>)<pos:position pos:line="69" pos:column="58"/></argument_list></call> 
       <operator pos:line="70" pos:column="8">&amp;&amp;<pos:position pos:line="70" pos:column="18"/></operator> <name><name pos:line="70" pos:column="11">db<pos:position pos:line="70" pos:column="13"/></name><operator pos:line="70" pos:column="13">-&gt;<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="15">mallocFailed<pos:position pos:line="70" pos:column="27"/></name></name><operator pos:line="70" pos:column="27">==<pos:position pos:line="70" pos:column="29"/></operator><literal type="number" pos:line="70" pos:column="29">0<pos:position pos:line="70" pos:column="30"/></literal></expr> 
      )<pos:position pos:line="71" pos:column="8"/></condition><then><block pos:line="71" pos:column="8">{
        <expr_stmt><expr><name pos:line="72" pos:column="9">iEndTrigger<pos:position pos:line="72" pos:column="20"/></name> <operator pos:line="72" pos:column="21">=<pos:position pos:line="72" pos:column="22"/></operator> <call><name pos:line="72" pos:column="23">sqlite3VdbeMakeLabel<pos:position pos:line="72" pos:column="43"/></name><argument_list pos:line="72" pos:column="43">(<argument><expr><name pos:line="72" pos:column="44">v<pos:position pos:line="72" pos:column="45"/></name></expr></argument>)<pos:position pos:line="72" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">sqlite3ExprIfFalse<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><name pos:line="73" pos:column="28">pSubParse<pos:position pos:line="73" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="39">pWhen<pos:position pos:line="73" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="46">iEndTrigger<pos:position pos:line="73" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="59">SQLITE_JUMPIFNULL<pos:position pos:line="73" pos:column="76"/></name></expr></argument>)<pos:position pos:line="73" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="78"/></expr_stmt>
      }<pos:position pos:line="74" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">sqlite3ExprDelete<pos:position pos:line="75" pos:column="24"/></name><argument_list pos:line="75" pos:column="24">(<argument><expr><name pos:line="75" pos:column="25">db<pos:position pos:line="75" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="29">pWhen<pos:position pos:line="75" pos:column="34"/></name></expr></argument>)<pos:position pos:line="75" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="78" pos:column="5">/* Code the trigger program into the sub-vdbe. */</comment>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">codeTriggerProgram<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><name pos:line="79" pos:column="24">pSubParse<pos:position pos:line="79" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="35">pTrigger<pos:position pos:line="79" pos:column="43"/></name><operator pos:line="79" pos:column="43">-&gt;<pos:position pos:line="79" pos:column="48"/></operator><name pos:line="79" pos:column="45">step_list<pos:position pos:line="79" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="56">orconf<pos:position pos:line="79" pos:column="62"/></name></expr></argument>)<pos:position pos:line="79" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="64"/></expr_stmt>

    <comment type="block" pos:line="81" pos:column="5">/* Insert an OP_Halt at the end of the sub-program. */</comment>
    <if pos:line="82" pos:column="5">if<condition pos:line="82" pos:column="7">( <expr><name pos:line="82" pos:column="9">iEndTrigger<pos:position pos:line="82" pos:column="20"/></name></expr> )<pos:position pos:line="82" pos:column="22"/></condition><then><block pos:line="82" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">sqlite3VdbeResolveLabel<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">v<pos:position pos:line="83" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="34">iEndTrigger<pos:position pos:line="83" pos:column="45"/></name></expr></argument>)<pos:position pos:line="83" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">sqlite3VdbeAddOp0<pos:position pos:line="85" pos:column="22"/></name><argument_list pos:line="85" pos:column="22">(<argument><expr><name pos:line="85" pos:column="23">v<pos:position pos:line="85" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="26">OP_Halt<pos:position pos:line="85" pos:column="33"/></name></expr></argument>)<pos:position pos:line="85" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">VdbeComment<pos:position pos:line="86" pos:column="16"/></name><argument_list pos:line="86" pos:column="16">(<argument><expr><operator pos:line="86" pos:column="17">(<pos:position pos:line="86" pos:column="18"/></operator><name pos:line="86" pos:column="18">v<pos:position pos:line="86" pos:column="19"/></name><operator pos:line="86" pos:column="19">,<pos:position pos:line="86" pos:column="20"/></operator> <literal type="string" pos:line="86" pos:column="21">"End: %s.%s"<pos:position pos:line="86" pos:column="33"/></literal><operator pos:line="86" pos:column="33">,<pos:position pos:line="86" pos:column="34"/></operator> <name><name pos:line="86" pos:column="35">pTrigger<pos:position pos:line="86" pos:column="43"/></name><operator pos:line="86" pos:column="43">-&gt;<pos:position pos:line="86" pos:column="48"/></operator><name pos:line="86" pos:column="45">zName<pos:position pos:line="86" pos:column="50"/></name></name><operator pos:line="86" pos:column="50">,<pos:position pos:line="86" pos:column="51"/></operator> <call><name pos:line="86" pos:column="52">onErrorText<pos:position pos:line="86" pos:column="63"/></name><argument_list pos:line="86" pos:column="63">(<argument><expr><name pos:line="86" pos:column="64">orconf<pos:position pos:line="86" pos:column="70"/></name></expr></argument>)<pos:position pos:line="86" pos:column="71"/></argument_list></call><operator pos:line="86" pos:column="71">)<pos:position pos:line="86" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="86" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="74"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="88" pos:column="5">transferParseError<pos:position pos:line="88" pos:column="23"/></name><argument_list pos:line="88" pos:column="23">(<argument><expr><name pos:line="88" pos:column="24">pParse<pos:position pos:line="88" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="32">pSubParse<pos:position pos:line="88" pos:column="41"/></name></expr></argument>)<pos:position pos:line="88" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="43"/></expr_stmt>
    <if pos:line="89" pos:column="5">if<condition pos:line="89" pos:column="7">( <expr><name><name pos:line="89" pos:column="9">db<pos:position pos:line="89" pos:column="11"/></name><operator pos:line="89" pos:column="11">-&gt;<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="13">mallocFailed<pos:position pos:line="89" pos:column="25"/></name></name><operator pos:line="89" pos:column="25">==<pos:position pos:line="89" pos:column="27"/></operator><literal type="number" pos:line="89" pos:column="27">0<pos:position pos:line="89" pos:column="28"/></literal></expr> )<pos:position pos:line="89" pos:column="30"/></condition><then><block pos:line="89" pos:column="30">{
      <expr_stmt><expr><name><name pos:line="90" pos:column="7">pProgram<pos:position pos:line="90" pos:column="15"/></name><operator pos:line="90" pos:column="15">-&gt;<pos:position pos:line="90" pos:column="20"/></operator><name pos:line="90" pos:column="17">aOp<pos:position pos:line="90" pos:column="20"/></name></name> <operator pos:line="90" pos:column="21">=<pos:position pos:line="90" pos:column="22"/></operator> <call><name pos:line="90" pos:column="23">sqlite3VdbeTakeOpArray<pos:position pos:line="90" pos:column="45"/></name><argument_list pos:line="90" pos:column="45">(<argument><expr><name pos:line="90" pos:column="46">v<pos:position pos:line="90" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="49">&amp;<pos:position pos:line="90" pos:column="54"/></operator><name><name pos:line="90" pos:column="50">pProgram<pos:position pos:line="90" pos:column="58"/></name><operator pos:line="90" pos:column="58">-&gt;<pos:position pos:line="90" pos:column="63"/></operator><name pos:line="90" pos:column="60">nOp<pos:position pos:line="90" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="65">&amp;<pos:position pos:line="90" pos:column="70"/></operator><name><name pos:line="90" pos:column="66">pTop<pos:position pos:line="90" pos:column="70"/></name><operator pos:line="90" pos:column="70">-&gt;<pos:position pos:line="90" pos:column="75"/></operator><name pos:line="90" pos:column="72">nMaxArg<pos:position pos:line="90" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="92" pos:column="5">pProgram<pos:position pos:line="92" pos:column="13"/></name><operator pos:line="92" pos:column="13">-&gt;<pos:position pos:line="92" pos:column="18"/></operator><name pos:line="92" pos:column="15">nMem<pos:position pos:line="92" pos:column="19"/></name></name> <operator pos:line="92" pos:column="20">=<pos:position pos:line="92" pos:column="21"/></operator> <name><name pos:line="92" pos:column="22">pSubParse<pos:position pos:line="92" pos:column="31"/></name><operator pos:line="92" pos:column="31">-&gt;<pos:position pos:line="92" pos:column="36"/></operator><name pos:line="92" pos:column="33">nMem<pos:position pos:line="92" pos:column="37"/></name></name></expr>;<pos:position pos:line="92" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="93" pos:column="5">pProgram<pos:position pos:line="93" pos:column="13"/></name><operator pos:line="93" pos:column="13">-&gt;<pos:position pos:line="93" pos:column="18"/></operator><name pos:line="93" pos:column="15">nCsr<pos:position pos:line="93" pos:column="19"/></name></name> <operator pos:line="93" pos:column="20">=<pos:position pos:line="93" pos:column="21"/></operator> <name><name pos:line="93" pos:column="22">pSubParse<pos:position pos:line="93" pos:column="31"/></name><operator pos:line="93" pos:column="31">-&gt;<pos:position pos:line="93" pos:column="36"/></operator><name pos:line="93" pos:column="33">nTab<pos:position pos:line="93" pos:column="37"/></name></name></expr>;<pos:position pos:line="93" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="94" pos:column="5">pProgram<pos:position pos:line="94" pos:column="13"/></name><operator pos:line="94" pos:column="13">-&gt;<pos:position pos:line="94" pos:column="18"/></operator><name pos:line="94" pos:column="15">token<pos:position pos:line="94" pos:column="20"/></name></name> <operator pos:line="94" pos:column="21">=<pos:position pos:line="94" pos:column="22"/></operator> <operator pos:line="94" pos:column="23">(<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="24">void<pos:position pos:line="94" pos:column="28"/></name> <operator pos:line="94" pos:column="29">*<pos:position pos:line="94" pos:column="30"/></operator><operator pos:line="94" pos:column="30">)<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="31">pTrigger<pos:position pos:line="94" pos:column="39"/></name></expr>;<pos:position pos:line="94" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="95" pos:column="5">pPrg<pos:position pos:line="95" pos:column="9"/></name><operator pos:line="95" pos:column="9">-&gt;<pos:position pos:line="95" pos:column="14"/></operator><name pos:line="95" pos:column="11">aColmask<pos:position pos:line="95" pos:column="19"/></name><index pos:line="95" pos:column="19">[<expr><literal type="number" pos:line="95" pos:column="20">0<pos:position pos:line="95" pos:column="21"/></literal></expr>]<pos:position pos:line="95" pos:column="22"/></index></name> <operator pos:line="95" pos:column="23">=<pos:position pos:line="95" pos:column="24"/></operator> <name><name pos:line="95" pos:column="25">pSubParse<pos:position pos:line="95" pos:column="34"/></name><operator pos:line="95" pos:column="34">-&gt;<pos:position pos:line="95" pos:column="39"/></operator><name pos:line="95" pos:column="36">oldmask<pos:position pos:line="95" pos:column="43"/></name></name></expr>;<pos:position pos:line="95" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="96" pos:column="5">pPrg<pos:position pos:line="96" pos:column="9"/></name><operator pos:line="96" pos:column="9">-&gt;<pos:position pos:line="96" pos:column="14"/></operator><name pos:line="96" pos:column="11">aColmask<pos:position pos:line="96" pos:column="19"/></name><index pos:line="96" pos:column="19">[<expr><literal type="number" pos:line="96" pos:column="20">1<pos:position pos:line="96" pos:column="21"/></literal></expr>]<pos:position pos:line="96" pos:column="22"/></index></name> <operator pos:line="96" pos:column="23">=<pos:position pos:line="96" pos:column="24"/></operator> <name><name pos:line="96" pos:column="25">pSubParse<pos:position pos:line="96" pos:column="34"/></name><operator pos:line="96" pos:column="34">-&gt;<pos:position pos:line="96" pos:column="39"/></operator><name pos:line="96" pos:column="36">newmask<pos:position pos:line="96" pos:column="43"/></name></name></expr>;<pos:position pos:line="96" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">sqlite3VdbeDelete<pos:position pos:line="97" pos:column="22"/></name><argument_list pos:line="97" pos:column="22">(<argument><expr><name pos:line="97" pos:column="23">v<pos:position pos:line="97" pos:column="24"/></name></expr></argument>)<pos:position pos:line="97" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="98" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="100" pos:column="3">assert<pos:position pos:line="100" pos:column="9"/></name><argument_list pos:line="100" pos:column="9">( <argument><expr><operator pos:line="100" pos:column="11">!<pos:position pos:line="100" pos:column="12"/></operator><name><name pos:line="100" pos:column="12">pSubParse<pos:position pos:line="100" pos:column="21"/></name><operator pos:line="100" pos:column="21">-&gt;<pos:position pos:line="100" pos:column="26"/></operator><name pos:line="100" pos:column="23">pAinc<pos:position pos:line="100" pos:column="28"/></name></name>       <operator pos:line="100" pos:column="35">&amp;&amp;<pos:position pos:line="100" pos:column="45"/></operator> <operator pos:line="100" pos:column="38">!<pos:position pos:line="100" pos:column="39"/></operator><name><name pos:line="100" pos:column="39">pSubParse<pos:position pos:line="100" pos:column="48"/></name><operator pos:line="100" pos:column="48">-&gt;<pos:position pos:line="100" pos:column="53"/></operator><name pos:line="100" pos:column="50">pZombieTab<pos:position pos:line="100" pos:column="60"/></name></name></expr></argument> )<pos:position pos:line="100" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="101" pos:column="3">assert<pos:position pos:line="101" pos:column="9"/></name><argument_list pos:line="101" pos:column="9">( <argument><expr><operator pos:line="101" pos:column="11">!<pos:position pos:line="101" pos:column="12"/></operator><name><name pos:line="101" pos:column="12">pSubParse<pos:position pos:line="101" pos:column="21"/></name><operator pos:line="101" pos:column="21">-&gt;<pos:position pos:line="101" pos:column="26"/></operator><name pos:line="101" pos:column="23">pTriggerPrg<pos:position pos:line="101" pos:column="34"/></name></name> <operator pos:line="101" pos:column="35">&amp;&amp;<pos:position pos:line="101" pos:column="45"/></operator> <operator pos:line="101" pos:column="38">!<pos:position pos:line="101" pos:column="39"/></operator><name><name pos:line="101" pos:column="39">pSubParse<pos:position pos:line="101" pos:column="48"/></name><operator pos:line="101" pos:column="48">-&gt;<pos:position pos:line="101" pos:column="53"/></operator><name pos:line="101" pos:column="50">nMaxArg<pos:position pos:line="101" pos:column="57"/></name></name></expr></argument> )<pos:position pos:line="101" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="102" pos:column="3">sqlite3ParserReset<pos:position pos:line="102" pos:column="21"/></name><argument_list pos:line="102" pos:column="21">(<argument><expr><name pos:line="102" pos:column="22">pSubParse<pos:position pos:line="102" pos:column="31"/></name></expr></argument>)<pos:position pos:line="102" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="103" pos:column="3">sqlite3StackFree<pos:position pos:line="103" pos:column="19"/></name><argument_list pos:line="103" pos:column="19">(<argument><expr><name pos:line="103" pos:column="20">db<pos:position pos:line="103" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="24">pSubParse<pos:position pos:line="103" pos:column="33"/></name></expr></argument>)<pos:position pos:line="103" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="35"/></expr_stmt>

  <return pos:line="105" pos:column="3">return <expr><name pos:line="105" pos:column="10">pPrg<pos:position pos:line="105" pos:column="14"/></name></expr>;<pos:position pos:line="105" pos:column="15"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

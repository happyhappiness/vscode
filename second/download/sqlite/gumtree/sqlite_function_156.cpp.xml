<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_156.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">winLogErrorAtLine<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(
  <parameter><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">errcode<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>,                    <comment type="block" pos:line="2" pos:column="35">/* SQLite error code */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">DWORD<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">lastErrno<pos:position pos:line="3" pos:column="18"/></name></decl></parameter>,                <comment type="block" pos:line="3" pos:column="35">/* Win32 last error */</comment>
  <parameter><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">zFunc<pos:position pos:line="4" pos:column="20"/></name></decl></parameter>,              <comment type="block" pos:line="4" pos:column="35">/* Name of OS function that failed */</comment>
  <parameter><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">zPath<pos:position pos:line="5" pos:column="20"/></name></decl></parameter>,              <comment type="block" pos:line="5" pos:column="35">/* File path associated with error */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">iLine<pos:position pos:line="6" pos:column="12"/></name></decl></parameter>                       <comment type="block" pos:line="6" pos:column="35">/* Source line number where error occurred */</comment>
)<pos:position pos:line="7" pos:column="2"/></parameter_list><block pos:line="7" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">zMsg<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><literal type="number" pos:line="8" pos:column="13">500<pos:position pos:line="8" pos:column="16"/></literal></expr>]<pos:position pos:line="8" pos:column="17"/></index></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>                 <comment type="block" pos:line="8" pos:column="35">/* Human readable error text */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">i<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>                          <comment type="block" pos:line="9" pos:column="35">/* Loop counter */</comment>

  <expr_stmt><expr><name><name pos:line="11" pos:column="3">zMsg<pos:position pos:line="11" pos:column="7"/></name><index pos:line="11" pos:column="7">[<expr><literal type="number" pos:line="11" pos:column="8">0<pos:position pos:line="11" pos:column="9"/></literal></expr>]<pos:position pos:line="11" pos:column="10"/></index></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">winGetLastErrorMsg<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">lastErrno<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="33">sizeof<argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">zMsg<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="12" pos:column="47">zMsg<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">assert<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">( <argument><expr><name pos:line="13" pos:column="11">errcode<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">!=<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">SQLITE_OK<pos:position pos:line="13" pos:column="29"/></name></expr></argument> )<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">( <expr><name pos:line="14" pos:column="7">zPath<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">==<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr> )<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17"> <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="18">zPath<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="string" pos:line="14" pos:column="26">""<pos:position pos:line="14" pos:column="28"/></literal></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt></block></then></if>
  <for pos:line="15" pos:column="3">for<control pos:line="15" pos:column="6">(<init><expr><name pos:line="15" pos:column="7">i<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator><literal type="number" pos:line="15" pos:column="9">0<pos:position pos:line="15" pos:column="10"/></literal></expr>;<pos:position pos:line="15" pos:column="11"/></init> <condition><expr><name><name pos:line="15" pos:column="12">zMsg<pos:position pos:line="15" pos:column="16"/></name><index pos:line="15" pos:column="16">[<expr><name pos:line="15" pos:column="17">i<pos:position pos:line="15" pos:column="18"/></name></expr>]<pos:position pos:line="15" pos:column="19"/></index></name> <operator pos:line="15" pos:column="20">&amp;&amp;<pos:position pos:line="15" pos:column="30"/></operator> <name><name pos:line="15" pos:column="23">zMsg<pos:position pos:line="15" pos:column="27"/></name><index pos:line="15" pos:column="27">[<expr><name pos:line="15" pos:column="28">i<pos:position pos:line="15" pos:column="29"/></name></expr>]<pos:position pos:line="15" pos:column="30"/></index></name><operator pos:line="15" pos:column="30">!=<pos:position pos:line="15" pos:column="32"/></operator><literal type="char" pos:line="15" pos:column="32">'\r'<pos:position pos:line="15" pos:column="36"/></literal> <operator pos:line="15" pos:column="37">&amp;&amp;<pos:position pos:line="15" pos:column="47"/></operator> <name><name pos:line="15" pos:column="40">zMsg<pos:position pos:line="15" pos:column="44"/></name><index pos:line="15" pos:column="44">[<expr><name pos:line="15" pos:column="45">i<pos:position pos:line="15" pos:column="46"/></name></expr>]<pos:position pos:line="15" pos:column="47"/></index></name><operator pos:line="15" pos:column="47">!=<pos:position pos:line="15" pos:column="49"/></operator><literal type="char" pos:line="15" pos:column="49">'\n'<pos:position pos:line="15" pos:column="53"/></literal></expr>;<pos:position pos:line="15" pos:column="54"/></condition> <incr><expr><name pos:line="15" pos:column="55">i<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">++<pos:position pos:line="15" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="59"/></control><block pos:line="15" pos:column="59">{}<pos:position pos:line="15" pos:column="61"/></block></for>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">zMsg<pos:position pos:line="16" pos:column="7"/></name><index pos:line="16" pos:column="7">[<expr><name pos:line="16" pos:column="8">i<pos:position pos:line="16" pos:column="9"/></name></expr>]<pos:position pos:line="16" pos:column="10"/></index></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <literal type="number" pos:line="16" pos:column="13">0<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">sqlite3_log<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name pos:line="17" pos:column="15">errcode<pos:position pos:line="17" pos:column="22"/></name></expr></argument>,
      <argument><expr><literal type="string" pos:line="18" pos:column="7">"os_win.c:%d: (%lu) %s(%s) - %s"<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>,
      <argument><expr><name pos:line="19" pos:column="7">iLine<pos:position pos:line="19" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="14">lastErrno<pos:position pos:line="19" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="25">zFunc<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">zPath<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">zMsg<pos:position pos:line="19" pos:column="43"/></name></expr></argument>
  )<pos:position pos:line="20" pos:column="4"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="5"/></expr_stmt>

  <return pos:line="22" pos:column="3">return <expr><name pos:line="22" pos:column="10">errcode<pos:position pos:line="22" pos:column="17"/></name></expr>;<pos:position pos:line="22" pos:column="18"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

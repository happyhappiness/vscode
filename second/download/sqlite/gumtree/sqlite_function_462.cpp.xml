<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_462.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sqlite3VdbeList<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Vdbe<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">p<pos:position pos:line="2" pos:column="10"/></name></decl></parameter>                   <comment type="block" pos:line="2" pos:column="29">/* The VDBE */</comment>
)<pos:position pos:line="3" pos:column="2"/></parameter_list><block pos:line="3" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">nRow<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>                            <comment type="block" pos:line="4" pos:column="40">/* Stop when row count reaches this */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">nSub<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>                        <comment type="block" pos:line="5" pos:column="40">/* Number of sub-vdbes seen so far */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">SubProgram<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier><modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">apSub<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>              <comment type="block" pos:line="6" pos:column="40">/* Array of sub-vdbes */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">Mem<pos:position pos:line="7" pos:column="6"/></name> <modifier pos:line="7" pos:column="7">*<pos:position pos:line="7" pos:column="8"/></modifier></type><name pos:line="7" pos:column="8">pSub<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>                       <comment type="block" pos:line="7" pos:column="40">/* Memory cell hold array of subprogs */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">sqlite3<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">db<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name><name pos:line="8" pos:column="17">p<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">db<pos:position pos:line="8" pos:column="22"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>                 <comment type="block" pos:line="8" pos:column="40">/* The database connection */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">i<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>                               <comment type="block" pos:line="9" pos:column="40">/* Loop counter */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">rc<pos:position pos:line="10" pos:column="9"/></name> <init pos:line="10" pos:column="10">= <expr><name pos:line="10" pos:column="12">SQLITE_OK<pos:position pos:line="10" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>                  <comment type="block" pos:line="10" pos:column="40">/* Return code */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">Mem<pos:position pos:line="11" pos:column="6"/></name> <modifier pos:line="11" pos:column="7">*<pos:position pos:line="11" pos:column="8"/></modifier></type><name pos:line="11" pos:column="8">pMem<pos:position pos:line="11" pos:column="12"/></name> <init pos:line="11" pos:column="13">= <expr><operator pos:line="11" pos:column="15">&amp;<pos:position pos:line="11" pos:column="20"/></operator><name><name pos:line="11" pos:column="16">p<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">aMem<pos:position pos:line="11" pos:column="23"/></name><index pos:line="11" pos:column="23">[<expr><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>]<pos:position pos:line="11" pos:column="26"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>             <comment type="block" pos:line="11" pos:column="40">/* First Mem of result set */</comment>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">assert<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">( <argument><expr><name><name pos:line="13" pos:column="11">p<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">explain<pos:position pos:line="13" pos:column="21"/></name></name></expr></argument> )<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">assert<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">( <argument><expr><name><name pos:line="14" pos:column="11">p<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">magic<pos:position pos:line="14" pos:column="19"/></name></name><operator pos:line="14" pos:column="19">==<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">VDBE_MAGIC_RUN<pos:position pos:line="14" pos:column="35"/></name></expr></argument> )<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">assert<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">( <argument><expr><name><name pos:line="15" pos:column="11">p<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">rc<pos:position pos:line="15" pos:column="16"/></name></name><operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">SQLITE_OK<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">||<pos:position pos:line="15" pos:column="30"/></operator> <name><name pos:line="15" pos:column="31">p<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">rc<pos:position pos:line="15" pos:column="36"/></name></name><operator pos:line="15" pos:column="36">==<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">SQLITE_BUSY<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">||<pos:position pos:line="15" pos:column="52"/></operator> <name><name pos:line="15" pos:column="53">p<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">-&gt;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="56">rc<pos:position pos:line="15" pos:column="58"/></name></name><operator pos:line="15" pos:column="58">==<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="60">SQLITE_NOMEM<pos:position pos:line="15" pos:column="72"/></name></expr></argument> )<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* Even though this opcode does not use dynamic strings for
  ** the result, result columns may become dynamic if the user calls
  ** sqlite3_column_text16(), causing a translation to UTF-16 encoding.
  */</comment>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">releaseMemArray<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">pMem<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="25">8<pos:position pos:line="21" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">p<pos:position pos:line="22" pos:column="4"/></name><operator pos:line="22" pos:column="4">-&gt;<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="6">pResultSet<pos:position pos:line="22" pos:column="16"/></name></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <literal type="number" pos:line="22" pos:column="19">0<pos:position pos:line="22" pos:column="20"/></literal></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>

  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">( <expr><name><name pos:line="24" pos:column="7">p<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">rc<pos:position pos:line="24" pos:column="12"/></name></name><operator pos:line="24" pos:column="12">==<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">SQLITE_NOMEM_BKPT<pos:position pos:line="24" pos:column="31"/></name></expr> )<pos:position pos:line="24" pos:column="33"/></condition><then><block pos:line="24" pos:column="33">{
    <comment type="block" pos:line="25" pos:column="5">/* This happens if a malloc() inside a call to sqlite3_column_text() or
    ** sqlite3_column_text16() failed.  */</comment>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">sqlite3OomFault<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">db<pos:position pos:line="27" pos:column="23"/></name></expr></argument>)<pos:position pos:line="27" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">SQLITE_ERROR<pos:position pos:line="28" pos:column="24"/></name></expr>;<pos:position pos:line="28" pos:column="25"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* When the number of output rows reaches nRow, that means the
  ** listing has finished and sqlite3_step() should return SQLITE_DONE.
  ** nRow is the sum of the number of rows in the main program, plus
  ** the sum of the number of rows in all trigger subprograms encountered
  ** so far.  The nRow value will increase as new trigger subprograms are
  ** encountered, but p-&gt;pc will eventually catch up to nRow.
  */</comment>
  <expr_stmt><expr><name pos:line="38" pos:column="3">nRow<pos:position pos:line="38" pos:column="7"/></name> <operator pos:line="38" pos:column="8">=<pos:position pos:line="38" pos:column="9"/></operator> <name><name pos:line="38" pos:column="10">p<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">nOp<pos:position pos:line="38" pos:column="16"/></name></name></expr>;<pos:position pos:line="38" pos:column="17"/></expr_stmt>
  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">( <expr><name><name pos:line="39" pos:column="7">p<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">-&gt;<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="10">explain<pos:position pos:line="39" pos:column="17"/></name></name><operator pos:line="39" pos:column="17">==<pos:position pos:line="39" pos:column="19"/></operator><literal type="number" pos:line="39" pos:column="19">1<pos:position pos:line="39" pos:column="20"/></literal></expr> )<pos:position pos:line="39" pos:column="22"/></condition><then><block pos:line="39" pos:column="22">{
    <comment type="block" pos:line="40" pos:column="5">/* The first 8 memory cells are used for the result set.  So we will
    ** commandeer the 9th cell to use as storage for an array of pointers
    ** to trigger subprograms.  The VDBE is guaranteed to have at least 9
    ** cells.  */</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">assert<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">( <argument><expr><name><name pos:line="44" pos:column="13">p<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">nMem<pos:position pos:line="44" pos:column="20"/></name></name><operator pos:line="44" pos:column="20">&gt;<pos:position pos:line="44" pos:column="24"/></operator><literal type="number" pos:line="44" pos:column="21">9<pos:position pos:line="44" pos:column="22"/></literal></expr></argument> )<pos:position pos:line="44" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">pSub<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <operator pos:line="45" pos:column="12">&amp;<pos:position pos:line="45" pos:column="17"/></operator><name><name pos:line="45" pos:column="13">p<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">-&gt;<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="16">aMem<pos:position pos:line="45" pos:column="20"/></name><index pos:line="45" pos:column="20">[<expr><literal type="number" pos:line="45" pos:column="21">9<pos:position pos:line="45" pos:column="22"/></literal></expr>]<pos:position pos:line="45" pos:column="23"/></index></name></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
    <if pos:line="46" pos:column="5">if<condition pos:line="46" pos:column="7">( <expr><name><name pos:line="46" pos:column="9">pSub<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">flags<pos:position pos:line="46" pos:column="20"/></name></name><operator pos:line="46" pos:column="20">&amp;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="21">MEM_Blob<pos:position pos:line="46" pos:column="29"/></name></expr> )<pos:position pos:line="46" pos:column="31"/></condition><then><block pos:line="46" pos:column="31">{
      <comment type="block" pos:line="47" pos:column="7">/* On the first call to sqlite3_step(), pSub will hold a NULL.  It is
      ** initialized to a BLOB by the P4_SUBPROGRAM processing logic below */</comment>
      <expr_stmt><expr><name pos:line="49" pos:column="7">nSub<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <name><name pos:line="49" pos:column="14">pSub<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">-&gt;<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="20">n<pos:position pos:line="49" pos:column="21"/></name></name><operator pos:line="49" pos:column="21">/<pos:position pos:line="49" pos:column="22"/></operator><sizeof pos:line="49" pos:column="22">sizeof<argument_list pos:line="49" pos:column="28">(<argument><expr><name pos:line="49" pos:column="29">Vdbe<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">*<pos:position pos:line="49" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="49" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name pos:line="50" pos:column="7">apSub<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <operator pos:line="50" pos:column="15">(<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="16">SubProgram<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">*<pos:position pos:line="50" pos:column="28"/></operator><operator pos:line="50" pos:column="28">*<pos:position pos:line="50" pos:column="29"/></operator><operator pos:line="50" pos:column="29">)<pos:position pos:line="50" pos:column="30"/></operator><name><name pos:line="50" pos:column="30">pSub<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">-&gt;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="36">z<pos:position pos:line="50" pos:column="37"/></name></name></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    <for pos:line="52" pos:column="5">for<control pos:line="52" pos:column="8">(<init><expr><name pos:line="52" pos:column="9">i<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator><literal type="number" pos:line="52" pos:column="11">0<pos:position pos:line="52" pos:column="12"/></literal></expr>;<pos:position pos:line="52" pos:column="13"/></init> <condition><expr><name pos:line="52" pos:column="14">i<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">&lt;<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="16">nSub<pos:position pos:line="52" pos:column="20"/></name></expr>;<pos:position pos:line="52" pos:column="21"/></condition> <incr><expr><name pos:line="52" pos:column="22">i<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">++<pos:position pos:line="52" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="52" pos:column="26"/></control><block pos:line="52" pos:column="26">{
      <expr_stmt><expr><name pos:line="53" pos:column="7">nRow<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">+=<pos:position pos:line="53" pos:column="14"/></operator> <name><name pos:line="53" pos:column="15">apSub<pos:position pos:line="53" pos:column="20"/></name><index pos:line="53" pos:column="20">[<expr><name pos:line="53" pos:column="21">i<pos:position pos:line="53" pos:column="22"/></name></expr>]<pos:position pos:line="53" pos:column="23"/></index></name><operator pos:line="53" pos:column="23">-&gt;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="25">nOp<pos:position pos:line="53" pos:column="28"/></name></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></for>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>

  <do pos:line="57" pos:column="3">do<block pos:line="57" pos:column="5">{
    <expr_stmt><expr><name pos:line="58" pos:column="5">i<pos:position pos:line="58" pos:column="6"/></name> <operator pos:line="58" pos:column="7">=<pos:position pos:line="58" pos:column="8"/></operator> <name><name pos:line="58" pos:column="9">p<pos:position pos:line="58" pos:column="10"/></name><operator pos:line="58" pos:column="10">-&gt;<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="12">pc<pos:position pos:line="58" pos:column="14"/></name></name><operator pos:line="58" pos:column="14">++<pos:position pos:line="58" pos:column="16"/></operator></expr>;<pos:position pos:line="58" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="59" pos:column="4"/></block>while<condition pos:line="59" pos:column="9">( <expr><name pos:line="59" pos:column="11">i<pos:position pos:line="59" pos:column="12"/></name><operator pos:line="59" pos:column="12">&lt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">nRow<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">&amp;&amp;<pos:position pos:line="59" pos:column="28"/></operator> <name><name pos:line="59" pos:column="21">p<pos:position pos:line="59" pos:column="22"/></name><operator pos:line="59" pos:column="22">-&gt;<pos:position pos:line="59" pos:column="27"/></operator><name pos:line="59" pos:column="24">explain<pos:position pos:line="59" pos:column="31"/></name></name><operator pos:line="59" pos:column="31">==<pos:position pos:line="59" pos:column="33"/></operator><literal type="number" pos:line="59" pos:column="33">2<pos:position pos:line="59" pos:column="34"/></literal> <operator pos:line="59" pos:column="35">&amp;&amp;<pos:position pos:line="59" pos:column="45"/></operator> <name><name pos:line="59" pos:column="38">p<pos:position pos:line="59" pos:column="39"/></name><operator pos:line="59" pos:column="39">-&gt;<pos:position pos:line="59" pos:column="44"/></operator><name pos:line="59" pos:column="41">aOp<pos:position pos:line="59" pos:column="44"/></name><index pos:line="59" pos:column="44">[<expr><name pos:line="59" pos:column="45">i<pos:position pos:line="59" pos:column="46"/></name></expr>]<pos:position pos:line="59" pos:column="47"/></index></name><operator pos:line="59" pos:column="47">.<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="48">opcode<pos:position pos:line="59" pos:column="54"/></name><operator pos:line="59" pos:column="54">!=<pos:position pos:line="59" pos:column="56"/></operator><name pos:line="59" pos:column="56">OP_Explain<pos:position pos:line="59" pos:column="66"/></name></expr> )<pos:position pos:line="59" pos:column="68"/></condition>;<pos:position pos:line="59" pos:column="69"/></do>
  <if pos:line="60" pos:column="3">if<condition pos:line="60" pos:column="5">( <expr><name pos:line="60" pos:column="7">i<pos:position pos:line="60" pos:column="8"/></name><operator pos:line="60" pos:column="8">&gt;=<pos:position pos:line="60" pos:column="13"/></operator><name pos:line="60" pos:column="10">nRow<pos:position pos:line="60" pos:column="14"/></name></expr> )<pos:position pos:line="60" pos:column="16"/></condition><then><block pos:line="60" pos:column="16">{
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">p<pos:position pos:line="61" pos:column="6"/></name><operator pos:line="61" pos:column="6">-&gt;<pos:position pos:line="61" pos:column="11"/></operator><name pos:line="61" pos:column="8">rc<pos:position pos:line="61" pos:column="10"/></name></name> <operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator> <name pos:line="61" pos:column="13">SQLITE_OK<pos:position pos:line="61" pos:column="22"/></name></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">rc<pos:position pos:line="62" pos:column="7"/></name> <operator pos:line="62" pos:column="8">=<pos:position pos:line="62" pos:column="9"/></operator> <name pos:line="62" pos:column="10">SQLITE_DONE<pos:position pos:line="62" pos:column="21"/></name></expr>;<pos:position pos:line="62" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></then><elseif pos:line="63" pos:column="4">else <if pos:line="63" pos:column="9">if<condition pos:line="63" pos:column="11">( <expr><name><name pos:line="63" pos:column="13">db<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">-&gt;<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="17">u1<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">.<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="20">isInterrupted<pos:position pos:line="63" pos:column="33"/></name></name></expr> )<pos:position pos:line="63" pos:column="35"/></condition><then><block pos:line="63" pos:column="35">{
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">p<pos:position pos:line="64" pos:column="6"/></name><operator pos:line="64" pos:column="6">-&gt;<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="8">rc<pos:position pos:line="64" pos:column="10"/></name></name> <operator pos:line="64" pos:column="11">=<pos:position pos:line="64" pos:column="12"/></operator> <name pos:line="64" pos:column="13">SQLITE_INTERRUPT<pos:position pos:line="64" pos:column="29"/></name></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="65" pos:column="5">rc<pos:position pos:line="65" pos:column="7"/></name> <operator pos:line="65" pos:column="8">=<pos:position pos:line="65" pos:column="9"/></operator> <name pos:line="65" pos:column="10">SQLITE_ERROR<pos:position pos:line="65" pos:column="22"/></name></expr>;<pos:position pos:line="65" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">sqlite3VdbeError<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><name pos:line="66" pos:column="22">p<pos:position pos:line="66" pos:column="23"/></name></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="25">sqlite3ErrStr<pos:position pos:line="66" pos:column="38"/></name><argument_list pos:line="66" pos:column="38">(<argument><expr><name><name pos:line="66" pos:column="39">p<pos:position pos:line="66" pos:column="40"/></name><operator pos:line="66" pos:column="40">-&gt;<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="42">rc<pos:position pos:line="66" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if></elseif><else pos:line="67" pos:column="4">else<block pos:line="67" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="68" pos:column="5">char<pos:position pos:line="68" pos:column="9"/></name> <modifier pos:line="68" pos:column="10">*<pos:position pos:line="68" pos:column="11"/></modifier></type><name pos:line="68" pos:column="11">zP4<pos:position pos:line="68" pos:column="14"/></name></decl>;<pos:position pos:line="68" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="69" pos:column="5">Op<pos:position pos:line="69" pos:column="7"/></name> <modifier pos:line="69" pos:column="8">*<pos:position pos:line="69" pos:column="9"/></modifier></type><name pos:line="69" pos:column="9">pOp<pos:position pos:line="69" pos:column="12"/></name></decl>;<pos:position pos:line="69" pos:column="13"/></decl_stmt>
    <if pos:line="70" pos:column="5">if<condition pos:line="70" pos:column="7">( <expr><name pos:line="70" pos:column="9">i<pos:position pos:line="70" pos:column="10"/></name><operator pos:line="70" pos:column="10">&lt;<pos:position pos:line="70" pos:column="14"/></operator><name><name pos:line="70" pos:column="11">p<pos:position pos:line="70" pos:column="12"/></name><operator pos:line="70" pos:column="12">-&gt;<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="14">nOp<pos:position pos:line="70" pos:column="17"/></name></name></expr> )<pos:position pos:line="70" pos:column="19"/></condition><then><block pos:line="70" pos:column="19">{
      <comment type="block" pos:line="71" pos:column="7">/* The output line number is small enough that we are still in the
      ** main program. */</comment>
      <expr_stmt><expr><name pos:line="73" pos:column="7">pOp<pos:position pos:line="73" pos:column="10"/></name> <operator pos:line="73" pos:column="11">=<pos:position pos:line="73" pos:column="12"/></operator> <operator pos:line="73" pos:column="13">&amp;<pos:position pos:line="73" pos:column="18"/></operator><name><name pos:line="73" pos:column="14">p<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">aOp<pos:position pos:line="73" pos:column="20"/></name><index pos:line="73" pos:column="20">[<expr><name pos:line="73" pos:column="21">i<pos:position pos:line="73" pos:column="22"/></name></expr>]<pos:position pos:line="73" pos:column="23"/></index></name></expr>;<pos:position pos:line="73" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then><else pos:line="74" pos:column="6">else<block pos:line="74" pos:column="10">{
      <comment type="block" pos:line="75" pos:column="7">/* We are currently listing subprograms.  Figure out which one and
      ** pick up the appropriate opcode. */</comment>
      <decl_stmt><decl><type><name pos:line="77" pos:column="7">int<pos:position pos:line="77" pos:column="10"/></name></type> <name pos:line="77" pos:column="11">j<pos:position pos:line="77" pos:column="12"/></name></decl>;<pos:position pos:line="77" pos:column="13"/></decl_stmt>
      <expr_stmt><expr><name pos:line="78" pos:column="7">i<pos:position pos:line="78" pos:column="8"/></name> <operator pos:line="78" pos:column="9">-=<pos:position pos:line="78" pos:column="11"/></operator> <name><name pos:line="78" pos:column="12">p<pos:position pos:line="78" pos:column="13"/></name><operator pos:line="78" pos:column="13">-&gt;<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="15">nOp<pos:position pos:line="78" pos:column="18"/></name></name></expr>;<pos:position pos:line="78" pos:column="19"/></expr_stmt>
      <for pos:line="79" pos:column="7">for<control pos:line="79" pos:column="10">(<init><expr><name pos:line="79" pos:column="11">j<pos:position pos:line="79" pos:column="12"/></name><operator pos:line="79" pos:column="12">=<pos:position pos:line="79" pos:column="13"/></operator><literal type="number" pos:line="79" pos:column="13">0<pos:position pos:line="79" pos:column="14"/></literal></expr>;<pos:position pos:line="79" pos:column="15"/></init> <condition><expr><name pos:line="79" pos:column="16">i<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">&gt;=<pos:position pos:line="79" pos:column="22"/></operator><name><name pos:line="79" pos:column="19">apSub<pos:position pos:line="79" pos:column="24"/></name><index pos:line="79" pos:column="24">[<expr><name pos:line="79" pos:column="25">j<pos:position pos:line="79" pos:column="26"/></name></expr>]<pos:position pos:line="79" pos:column="27"/></index></name><operator pos:line="79" pos:column="27">-&gt;<pos:position pos:line="79" pos:column="32"/></operator><name pos:line="79" pos:column="29">nOp<pos:position pos:line="79" pos:column="32"/></name></expr>;<pos:position pos:line="79" pos:column="33"/></condition> <incr><expr><name pos:line="79" pos:column="34">j<pos:position pos:line="79" pos:column="35"/></name><operator pos:line="79" pos:column="35">++<pos:position pos:line="79" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="79" pos:column="38"/></control><block pos:line="79" pos:column="38">{
        <expr_stmt><expr><name pos:line="80" pos:column="9">i<pos:position pos:line="80" pos:column="10"/></name> <operator pos:line="80" pos:column="11">-=<pos:position pos:line="80" pos:column="13"/></operator> <name><name pos:line="80" pos:column="14">apSub<pos:position pos:line="80" pos:column="19"/></name><index pos:line="80" pos:column="19">[<expr><name pos:line="80" pos:column="20">j<pos:position pos:line="80" pos:column="21"/></name></expr>]<pos:position pos:line="80" pos:column="22"/></index></name><operator pos:line="80" pos:column="22">-&gt;<pos:position pos:line="80" pos:column="27"/></operator><name pos:line="80" pos:column="24">nOp<pos:position pos:line="80" pos:column="27"/></name></expr>;<pos:position pos:line="80" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="81" pos:column="8"/></block></for>
      <expr_stmt><expr><name pos:line="82" pos:column="7">pOp<pos:position pos:line="82" pos:column="10"/></name> <operator pos:line="82" pos:column="11">=<pos:position pos:line="82" pos:column="12"/></operator> <operator pos:line="82" pos:column="13">&amp;<pos:position pos:line="82" pos:column="18"/></operator><name><name pos:line="82" pos:column="14">apSub<pos:position pos:line="82" pos:column="19"/></name><index pos:line="82" pos:column="19">[<expr><name pos:line="82" pos:column="20">j<pos:position pos:line="82" pos:column="21"/></name></expr>]<pos:position pos:line="82" pos:column="22"/></index></name><operator pos:line="82" pos:column="22">-&gt;<pos:position pos:line="82" pos:column="27"/></operator><name><name pos:line="82" pos:column="24">aOp<pos:position pos:line="82" pos:column="27"/></name><index pos:line="82" pos:column="27">[<expr><name pos:line="82" pos:column="28">i<pos:position pos:line="82" pos:column="29"/></name></expr>]<pos:position pos:line="82" pos:column="30"/></index></name></expr>;<pos:position pos:line="82" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></else></if>
    <if pos:line="84" pos:column="5">if<condition pos:line="84" pos:column="7">( <expr><name><name pos:line="84" pos:column="9">p<pos:position pos:line="84" pos:column="10"/></name><operator pos:line="84" pos:column="10">-&gt;<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="12">explain<pos:position pos:line="84" pos:column="19"/></name></name><operator pos:line="84" pos:column="19">==<pos:position pos:line="84" pos:column="21"/></operator><literal type="number" pos:line="84" pos:column="21">1<pos:position pos:line="84" pos:column="22"/></literal></expr> )<pos:position pos:line="84" pos:column="24"/></condition><then><block pos:line="84" pos:column="24">{
      <expr_stmt><expr><name><name pos:line="85" pos:column="7">pMem<pos:position pos:line="85" pos:column="11"/></name><operator pos:line="85" pos:column="11">-&gt;<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="13">flags<pos:position pos:line="85" pos:column="18"/></name></name> <operator pos:line="85" pos:column="19">=<pos:position pos:line="85" pos:column="20"/></operator> <name pos:line="85" pos:column="21">MEM_Int<pos:position pos:line="85" pos:column="28"/></name></expr>;<pos:position pos:line="85" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="86" pos:column="7">pMem<pos:position pos:line="86" pos:column="11"/></name><operator pos:line="86" pos:column="11">-&gt;<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="13">u<pos:position pos:line="86" pos:column="14"/></name><operator pos:line="86" pos:column="14">.<pos:position pos:line="86" pos:column="15"/></operator><name pos:line="86" pos:column="15">i<pos:position pos:line="86" pos:column="16"/></name></name> <operator pos:line="86" pos:column="17">=<pos:position pos:line="86" pos:column="18"/></operator> <name pos:line="86" pos:column="19">i<pos:position pos:line="86" pos:column="20"/></name></expr>;<pos:position pos:line="86" pos:column="21"/></expr_stmt>                                <comment type="block" pos:line="86" pos:column="53">/* Program counter */</comment>
      <expr_stmt><expr><name pos:line="87" pos:column="7">pMem<pos:position pos:line="87" pos:column="11"/></name><operator pos:line="87" pos:column="11">++<pos:position pos:line="87" pos:column="13"/></operator></expr>;<pos:position pos:line="87" pos:column="14"/></expr_stmt>
  
      <expr_stmt><expr><name><name pos:line="89" pos:column="7">pMem<pos:position pos:line="89" pos:column="11"/></name><operator pos:line="89" pos:column="11">-&gt;<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="13">flags<pos:position pos:line="89" pos:column="18"/></name></name> <operator pos:line="89" pos:column="19">=<pos:position pos:line="89" pos:column="20"/></operator> <name pos:line="89" pos:column="21">MEM_Static<pos:position pos:line="89" pos:column="31"/></name><operator pos:line="89" pos:column="31">|<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="32">MEM_Str<pos:position pos:line="89" pos:column="39"/></name><operator pos:line="89" pos:column="39">|<pos:position pos:line="89" pos:column="40"/></operator><name pos:line="89" pos:column="40">MEM_Term<pos:position pos:line="89" pos:column="48"/></name></expr>;<pos:position pos:line="89" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="90" pos:column="7">pMem<pos:position pos:line="90" pos:column="11"/></name><operator pos:line="90" pos:column="11">-&gt;<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="13">z<pos:position pos:line="90" pos:column="14"/></name></name> <operator pos:line="90" pos:column="15">=<pos:position pos:line="90" pos:column="16"/></operator> <operator pos:line="90" pos:column="17">(<pos:position pos:line="90" pos:column="18"/></operator><name pos:line="90" pos:column="18">char<pos:position pos:line="90" pos:column="22"/></name><operator pos:line="90" pos:column="22">*<pos:position pos:line="90" pos:column="23"/></operator><operator pos:line="90" pos:column="23">)<pos:position pos:line="90" pos:column="24"/></operator><call><name pos:line="90" pos:column="24">sqlite3OpcodeName<pos:position pos:line="90" pos:column="41"/></name><argument_list pos:line="90" pos:column="41">(<argument><expr><name><name pos:line="90" pos:column="42">pOp<pos:position pos:line="90" pos:column="45"/></name><operator pos:line="90" pos:column="45">-&gt;<pos:position pos:line="90" pos:column="50"/></operator><name pos:line="90" pos:column="47">opcode<pos:position pos:line="90" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="55"/></expr_stmt> <comment type="block" pos:line="90" pos:column="56">/* Opcode */</comment>
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">assert<pos:position pos:line="91" pos:column="13"/></name><argument_list pos:line="91" pos:column="13">( <argument><expr><name><name pos:line="91" pos:column="15">pMem<pos:position pos:line="91" pos:column="19"/></name><operator pos:line="91" pos:column="19">-&gt;<pos:position pos:line="91" pos:column="24"/></operator><name pos:line="91" pos:column="21">z<pos:position pos:line="91" pos:column="22"/></name></name><operator pos:line="91" pos:column="22">!=<pos:position pos:line="91" pos:column="24"/></operator><literal type="number" pos:line="91" pos:column="24">0<pos:position pos:line="91" pos:column="25"/></literal></expr></argument> )<pos:position pos:line="91" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="92" pos:column="7">pMem<pos:position pos:line="92" pos:column="11"/></name><operator pos:line="92" pos:column="11">-&gt;<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="13">n<pos:position pos:line="92" pos:column="14"/></name></name> <operator pos:line="92" pos:column="15">=<pos:position pos:line="92" pos:column="16"/></operator> <call><name pos:line="92" pos:column="17">sqlite3Strlen30<pos:position pos:line="92" pos:column="32"/></name><argument_list pos:line="92" pos:column="32">(<argument><expr><name><name pos:line="92" pos:column="33">pMem<pos:position pos:line="92" pos:column="37"/></name><operator pos:line="92" pos:column="37">-&gt;<pos:position pos:line="92" pos:column="42"/></operator><name pos:line="92" pos:column="39">z<pos:position pos:line="92" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="93" pos:column="7">pMem<pos:position pos:line="93" pos:column="11"/></name><operator pos:line="93" pos:column="11">-&gt;<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="13">enc<pos:position pos:line="93" pos:column="16"/></name></name> <operator pos:line="93" pos:column="17">=<pos:position pos:line="93" pos:column="18"/></operator> <name pos:line="93" pos:column="19">SQLITE_UTF8<pos:position pos:line="93" pos:column="30"/></name></expr>;<pos:position pos:line="93" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="94" pos:column="7">pMem<pos:position pos:line="94" pos:column="11"/></name><operator pos:line="94" pos:column="11">++<pos:position pos:line="94" pos:column="13"/></operator></expr>;<pos:position pos:line="94" pos:column="14"/></expr_stmt>

      <comment type="block" pos:line="96" pos:column="7">/* When an OP_Program opcode is encounter (the only opcode that has
      ** a P4_SUBPROGRAM argument), expand the size of the array of subprograms
      ** kept in p-&gt;aMem[9].z to hold the new program - assuming this subprogram
      ** has not already been seen.
      */</comment>
      <if pos:line="101" pos:column="7">if<condition pos:line="101" pos:column="9">( <expr><name><name pos:line="101" pos:column="11">pOp<pos:position pos:line="101" pos:column="14"/></name><operator pos:line="101" pos:column="14">-&gt;<pos:position pos:line="101" pos:column="19"/></operator><name pos:line="101" pos:column="16">p4type<pos:position pos:line="101" pos:column="22"/></name></name><operator pos:line="101" pos:column="22">==<pos:position pos:line="101" pos:column="24"/></operator><name pos:line="101" pos:column="24">P4_SUBPROGRAM<pos:position pos:line="101" pos:column="37"/></name></expr> )<pos:position pos:line="101" pos:column="39"/></condition><then><block pos:line="101" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="102" pos:column="9">int<pos:position pos:line="102" pos:column="12"/></name></type> <name pos:line="102" pos:column="13">nByte<pos:position pos:line="102" pos:column="18"/></name> <init pos:line="102" pos:column="19">= <expr><operator pos:line="102" pos:column="21">(<pos:position pos:line="102" pos:column="22"/></operator><name pos:line="102" pos:column="22">nSub<pos:position pos:line="102" pos:column="26"/></name><operator pos:line="102" pos:column="26">+<pos:position pos:line="102" pos:column="27"/></operator><literal type="number" pos:line="102" pos:column="27">1<pos:position pos:line="102" pos:column="28"/></literal><operator pos:line="102" pos:column="28">)<pos:position pos:line="102" pos:column="29"/></operator><operator pos:line="102" pos:column="29">*<pos:position pos:line="102" pos:column="30"/></operator><sizeof pos:line="102" pos:column="30">sizeof<argument_list pos:line="102" pos:column="36">(<argument><expr><name pos:line="102" pos:column="37">SubProgram<pos:position pos:line="102" pos:column="47"/></name><operator pos:line="102" pos:column="47">*<pos:position pos:line="102" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="102" pos:column="49"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="102" pos:column="50"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="103" pos:column="9">int<pos:position pos:line="103" pos:column="12"/></name></type> <name pos:line="103" pos:column="13">j<pos:position pos:line="103" pos:column="14"/></name></decl>;<pos:position pos:line="103" pos:column="15"/></decl_stmt>
        <for pos:line="104" pos:column="9">for<control pos:line="104" pos:column="12">(<init><expr><name pos:line="104" pos:column="13">j<pos:position pos:line="104" pos:column="14"/></name><operator pos:line="104" pos:column="14">=<pos:position pos:line="104" pos:column="15"/></operator><literal type="number" pos:line="104" pos:column="15">0<pos:position pos:line="104" pos:column="16"/></literal></expr>;<pos:position pos:line="104" pos:column="17"/></init> <condition><expr><name pos:line="104" pos:column="18">j<pos:position pos:line="104" pos:column="19"/></name><operator pos:line="104" pos:column="19">&lt;<pos:position pos:line="104" pos:column="23"/></operator><name pos:line="104" pos:column="20">nSub<pos:position pos:line="104" pos:column="24"/></name></expr>;<pos:position pos:line="104" pos:column="25"/></condition> <incr><expr><name pos:line="104" pos:column="26">j<pos:position pos:line="104" pos:column="27"/></name><operator pos:line="104" pos:column="27">++<pos:position pos:line="104" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="104" pos:column="30"/></control><block pos:line="104" pos:column="30">{
          <if pos:line="105" pos:column="11">if<condition pos:line="105" pos:column="13">( <expr><name><name pos:line="105" pos:column="15">apSub<pos:position pos:line="105" pos:column="20"/></name><index pos:line="105" pos:column="20">[<expr><name pos:line="105" pos:column="21">j<pos:position pos:line="105" pos:column="22"/></name></expr>]<pos:position pos:line="105" pos:column="23"/></index></name><operator pos:line="105" pos:column="23">==<pos:position pos:line="105" pos:column="25"/></operator><name><name pos:line="105" pos:column="25">pOp<pos:position pos:line="105" pos:column="28"/></name><operator pos:line="105" pos:column="28">-&gt;<pos:position pos:line="105" pos:column="33"/></operator><name pos:line="105" pos:column="30">p4<pos:position pos:line="105" pos:column="32"/></name><operator pos:line="105" pos:column="32">.<pos:position pos:line="105" pos:column="33"/></operator><name pos:line="105" pos:column="33">pProgram<pos:position pos:line="105" pos:column="41"/></name></name></expr> )<pos:position pos:line="105" pos:column="43"/></condition><then pos:line="105" pos:column="43"> <block type="pseudo"><break pos:line="105" pos:column="44">break;<pos:position pos:line="105" pos:column="50"/></break></block></then></if>
        }<pos:position pos:line="106" pos:column="10"/></block></for>
        <if pos:line="107" pos:column="9">if<condition pos:line="107" pos:column="11">( <expr><name pos:line="107" pos:column="13">j<pos:position pos:line="107" pos:column="14"/></name><operator pos:line="107" pos:column="14">==<pos:position pos:line="107" pos:column="16"/></operator><name pos:line="107" pos:column="16">nSub<pos:position pos:line="107" pos:column="20"/></name> <operator pos:line="107" pos:column="21">&amp;&amp;<pos:position pos:line="107" pos:column="31"/></operator> <name pos:line="107" pos:column="24">SQLITE_OK<pos:position pos:line="107" pos:column="33"/></name><operator pos:line="107" pos:column="33">==<pos:position pos:line="107" pos:column="35"/></operator><call><name pos:line="107" pos:column="35">sqlite3VdbeMemGrow<pos:position pos:line="107" pos:column="53"/></name><argument_list pos:line="107" pos:column="53">(<argument><expr><name pos:line="107" pos:column="54">pSub<pos:position pos:line="107" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="60">nByte<pos:position pos:line="107" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="67">nSub<pos:position pos:line="107" pos:column="71"/></name><operator pos:line="107" pos:column="71">!=<pos:position pos:line="107" pos:column="73"/></operator><literal type="number" pos:line="107" pos:column="73">0<pos:position pos:line="107" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="75"/></argument_list></call></expr> )<pos:position pos:line="107" pos:column="77"/></condition><then><block pos:line="107" pos:column="77">{
          <expr_stmt><expr><name pos:line="108" pos:column="11">apSub<pos:position pos:line="108" pos:column="16"/></name> <operator pos:line="108" pos:column="17">=<pos:position pos:line="108" pos:column="18"/></operator> <operator pos:line="108" pos:column="19">(<pos:position pos:line="108" pos:column="20"/></operator><name pos:line="108" pos:column="20">SubProgram<pos:position pos:line="108" pos:column="30"/></name> <operator pos:line="108" pos:column="31">*<pos:position pos:line="108" pos:column="32"/></operator><operator pos:line="108" pos:column="32">*<pos:position pos:line="108" pos:column="33"/></operator><operator pos:line="108" pos:column="33">)<pos:position pos:line="108" pos:column="34"/></operator><name><name pos:line="108" pos:column="34">pSub<pos:position pos:line="108" pos:column="38"/></name><operator pos:line="108" pos:column="38">-&gt;<pos:position pos:line="108" pos:column="43"/></operator><name pos:line="108" pos:column="40">z<pos:position pos:line="108" pos:column="41"/></name></name></expr>;<pos:position pos:line="108" pos:column="42"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="109" pos:column="11">apSub<pos:position pos:line="109" pos:column="16"/></name><index pos:line="109" pos:column="16">[<expr><name pos:line="109" pos:column="17">nSub<pos:position pos:line="109" pos:column="21"/></name><operator pos:line="109" pos:column="21">++<pos:position pos:line="109" pos:column="23"/></operator></expr>]<pos:position pos:line="109" pos:column="24"/></index></name> <operator pos:line="109" pos:column="25">=<pos:position pos:line="109" pos:column="26"/></operator> <name><name pos:line="109" pos:column="27">pOp<pos:position pos:line="109" pos:column="30"/></name><operator pos:line="109" pos:column="30">-&gt;<pos:position pos:line="109" pos:column="35"/></operator><name pos:line="109" pos:column="32">p4<pos:position pos:line="109" pos:column="34"/></name><operator pos:line="109" pos:column="34">.<pos:position pos:line="109" pos:column="35"/></operator><name pos:line="109" pos:column="35">pProgram<pos:position pos:line="109" pos:column="43"/></name></name></expr>;<pos:position pos:line="109" pos:column="44"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="110" pos:column="11">pSub<pos:position pos:line="110" pos:column="15"/></name><operator pos:line="110" pos:column="15">-&gt;<pos:position pos:line="110" pos:column="20"/></operator><name pos:line="110" pos:column="17">flags<pos:position pos:line="110" pos:column="22"/></name></name> <operator pos:line="110" pos:column="23">|=<pos:position pos:line="110" pos:column="25"/></operator> <name pos:line="110" pos:column="26">MEM_Blob<pos:position pos:line="110" pos:column="34"/></name></expr>;<pos:position pos:line="110" pos:column="35"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="111" pos:column="11">pSub<pos:position pos:line="111" pos:column="15"/></name><operator pos:line="111" pos:column="15">-&gt;<pos:position pos:line="111" pos:column="20"/></operator><name pos:line="111" pos:column="17">n<pos:position pos:line="111" pos:column="18"/></name></name> <operator pos:line="111" pos:column="19">=<pos:position pos:line="111" pos:column="20"/></operator> <name pos:line="111" pos:column="21">nSub<pos:position pos:line="111" pos:column="25"/></name><operator pos:line="111" pos:column="25">*<pos:position pos:line="111" pos:column="26"/></operator><sizeof pos:line="111" pos:column="26">sizeof<argument_list pos:line="111" pos:column="32">(<argument><expr><name pos:line="111" pos:column="33">SubProgram<pos:position pos:line="111" pos:column="43"/></name><operator pos:line="111" pos:column="43">*<pos:position pos:line="111" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="111" pos:column="45"/></argument_list></sizeof></expr>;<pos:position pos:line="111" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="112" pos:column="10"/></block></then></if>
      }<pos:position pos:line="113" pos:column="8"/></block></then></if>
    }<pos:position pos:line="114" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="116" pos:column="5">pMem<pos:position pos:line="116" pos:column="9"/></name><operator pos:line="116" pos:column="9">-&gt;<pos:position pos:line="116" pos:column="14"/></operator><name pos:line="116" pos:column="11">flags<pos:position pos:line="116" pos:column="16"/></name></name> <operator pos:line="116" pos:column="17">=<pos:position pos:line="116" pos:column="18"/></operator> <name pos:line="116" pos:column="19">MEM_Int<pos:position pos:line="116" pos:column="26"/></name></expr>;<pos:position pos:line="116" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="117" pos:column="5">pMem<pos:position pos:line="117" pos:column="9"/></name><operator pos:line="117" pos:column="9">-&gt;<pos:position pos:line="117" pos:column="14"/></operator><name pos:line="117" pos:column="11">u<pos:position pos:line="117" pos:column="12"/></name><operator pos:line="117" pos:column="12">.<pos:position pos:line="117" pos:column="13"/></operator><name pos:line="117" pos:column="13">i<pos:position pos:line="117" pos:column="14"/></name></name> <operator pos:line="117" pos:column="15">=<pos:position pos:line="117" pos:column="16"/></operator> <name><name pos:line="117" pos:column="17">pOp<pos:position pos:line="117" pos:column="20"/></name><operator pos:line="117" pos:column="20">-&gt;<pos:position pos:line="117" pos:column="25"/></operator><name pos:line="117" pos:column="22">p1<pos:position pos:line="117" pos:column="24"/></name></name></expr>;<pos:position pos:line="117" pos:column="25"/></expr_stmt>                          <comment type="block" pos:line="117" pos:column="51">/* P1 */</comment>
    <expr_stmt><expr><name pos:line="118" pos:column="5">pMem<pos:position pos:line="118" pos:column="9"/></name><operator pos:line="118" pos:column="9">++<pos:position pos:line="118" pos:column="11"/></operator></expr>;<pos:position pos:line="118" pos:column="12"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="120" pos:column="5">pMem<pos:position pos:line="120" pos:column="9"/></name><operator pos:line="120" pos:column="9">-&gt;<pos:position pos:line="120" pos:column="14"/></operator><name pos:line="120" pos:column="11">flags<pos:position pos:line="120" pos:column="16"/></name></name> <operator pos:line="120" pos:column="17">=<pos:position pos:line="120" pos:column="18"/></operator> <name pos:line="120" pos:column="19">MEM_Int<pos:position pos:line="120" pos:column="26"/></name></expr>;<pos:position pos:line="120" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="121" pos:column="5">pMem<pos:position pos:line="121" pos:column="9"/></name><operator pos:line="121" pos:column="9">-&gt;<pos:position pos:line="121" pos:column="14"/></operator><name pos:line="121" pos:column="11">u<pos:position pos:line="121" pos:column="12"/></name><operator pos:line="121" pos:column="12">.<pos:position pos:line="121" pos:column="13"/></operator><name pos:line="121" pos:column="13">i<pos:position pos:line="121" pos:column="14"/></name></name> <operator pos:line="121" pos:column="15">=<pos:position pos:line="121" pos:column="16"/></operator> <name><name pos:line="121" pos:column="17">pOp<pos:position pos:line="121" pos:column="20"/></name><operator pos:line="121" pos:column="20">-&gt;<pos:position pos:line="121" pos:column="25"/></operator><name pos:line="121" pos:column="22">p2<pos:position pos:line="121" pos:column="24"/></name></name></expr>;<pos:position pos:line="121" pos:column="25"/></expr_stmt>                          <comment type="block" pos:line="121" pos:column="51">/* P2 */</comment>
    <expr_stmt><expr><name pos:line="122" pos:column="5">pMem<pos:position pos:line="122" pos:column="9"/></name><operator pos:line="122" pos:column="9">++<pos:position pos:line="122" pos:column="11"/></operator></expr>;<pos:position pos:line="122" pos:column="12"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="124" pos:column="5">pMem<pos:position pos:line="124" pos:column="9"/></name><operator pos:line="124" pos:column="9">-&gt;<pos:position pos:line="124" pos:column="14"/></operator><name pos:line="124" pos:column="11">flags<pos:position pos:line="124" pos:column="16"/></name></name> <operator pos:line="124" pos:column="17">=<pos:position pos:line="124" pos:column="18"/></operator> <name pos:line="124" pos:column="19">MEM_Int<pos:position pos:line="124" pos:column="26"/></name></expr>;<pos:position pos:line="124" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="125" pos:column="5">pMem<pos:position pos:line="125" pos:column="9"/></name><operator pos:line="125" pos:column="9">-&gt;<pos:position pos:line="125" pos:column="14"/></operator><name pos:line="125" pos:column="11">u<pos:position pos:line="125" pos:column="12"/></name><operator pos:line="125" pos:column="12">.<pos:position pos:line="125" pos:column="13"/></operator><name pos:line="125" pos:column="13">i<pos:position pos:line="125" pos:column="14"/></name></name> <operator pos:line="125" pos:column="15">=<pos:position pos:line="125" pos:column="16"/></operator> <name><name pos:line="125" pos:column="17">pOp<pos:position pos:line="125" pos:column="20"/></name><operator pos:line="125" pos:column="20">-&gt;<pos:position pos:line="125" pos:column="25"/></operator><name pos:line="125" pos:column="22">p3<pos:position pos:line="125" pos:column="24"/></name></name></expr>;<pos:position pos:line="125" pos:column="25"/></expr_stmt>                          <comment type="block" pos:line="125" pos:column="51">/* P3 */</comment>
    <expr_stmt><expr><name pos:line="126" pos:column="5">pMem<pos:position pos:line="126" pos:column="9"/></name><operator pos:line="126" pos:column="9">++<pos:position pos:line="126" pos:column="11"/></operator></expr>;<pos:position pos:line="126" pos:column="12"/></expr_stmt>

    <if pos:line="128" pos:column="5">if<condition pos:line="128" pos:column="7">( <expr><call><name pos:line="128" pos:column="9">sqlite3VdbeMemClearAndResize<pos:position pos:line="128" pos:column="37"/></name><argument_list pos:line="128" pos:column="37">(<argument><expr><name pos:line="128" pos:column="38">pMem<pos:position pos:line="128" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="128" pos:column="44">100<pos:position pos:line="128" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="48"/></argument_list></call></expr> )<pos:position pos:line="128" pos:column="50"/></condition><then><block pos:line="128" pos:column="50">{ <comment type="block" pos:line="128" pos:column="52">/* P4 */</comment>
      <expr_stmt><expr><call><name pos:line="129" pos:column="7">assert<pos:position pos:line="129" pos:column="13"/></name><argument_list pos:line="129" pos:column="13">( <argument><expr><name><name pos:line="129" pos:column="15">p<pos:position pos:line="129" pos:column="16"/></name><operator pos:line="129" pos:column="16">-&gt;<pos:position pos:line="129" pos:column="21"/></operator><name pos:line="129" pos:column="18">db<pos:position pos:line="129" pos:column="20"/></name><operator pos:line="129" pos:column="20">-&gt;<pos:position pos:line="129" pos:column="25"/></operator><name pos:line="129" pos:column="22">mallocFailed<pos:position pos:line="129" pos:column="34"/></name></name></expr></argument> )<pos:position pos:line="129" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="37"/></expr_stmt>
      <return pos:line="130" pos:column="7">return <expr><name pos:line="130" pos:column="14">SQLITE_ERROR<pos:position pos:line="130" pos:column="26"/></name></expr>;<pos:position pos:line="130" pos:column="27"/></return>
    }<pos:position pos:line="131" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="132" pos:column="5">pMem<pos:position pos:line="132" pos:column="9"/></name><operator pos:line="132" pos:column="9">-&gt;<pos:position pos:line="132" pos:column="14"/></operator><name pos:line="132" pos:column="11">flags<pos:position pos:line="132" pos:column="16"/></name></name> <operator pos:line="132" pos:column="17">=<pos:position pos:line="132" pos:column="18"/></operator> <name pos:line="132" pos:column="19">MEM_Str<pos:position pos:line="132" pos:column="26"/></name><operator pos:line="132" pos:column="26">|<pos:position pos:line="132" pos:column="27"/></operator><name pos:line="132" pos:column="27">MEM_Term<pos:position pos:line="132" pos:column="35"/></name></expr>;<pos:position pos:line="132" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="133" pos:column="5">zP4<pos:position pos:line="133" pos:column="8"/></name> <operator pos:line="133" pos:column="9">=<pos:position pos:line="133" pos:column="10"/></operator> <call><name pos:line="133" pos:column="11">displayP4<pos:position pos:line="133" pos:column="20"/></name><argument_list pos:line="133" pos:column="20">(<argument><expr><name pos:line="133" pos:column="21">pOp<pos:position pos:line="133" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="26">pMem<pos:position pos:line="133" pos:column="30"/></name><operator pos:line="133" pos:column="30">-&gt;<pos:position pos:line="133" pos:column="35"/></operator><name pos:line="133" pos:column="32">z<pos:position pos:line="133" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="35">pMem<pos:position pos:line="133" pos:column="39"/></name><operator pos:line="133" pos:column="39">-&gt;<pos:position pos:line="133" pos:column="44"/></operator><name pos:line="133" pos:column="41">szMalloc<pos:position pos:line="133" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="51"/></expr_stmt>
    <if pos:line="134" pos:column="5">if<condition pos:line="134" pos:column="7">( <expr><name pos:line="134" pos:column="9">zP4<pos:position pos:line="134" pos:column="12"/></name><operator pos:line="134" pos:column="12">!=<pos:position pos:line="134" pos:column="14"/></operator><name><name pos:line="134" pos:column="14">pMem<pos:position pos:line="134" pos:column="18"/></name><operator pos:line="134" pos:column="18">-&gt;<pos:position pos:line="134" pos:column="23"/></operator><name pos:line="134" pos:column="20">z<pos:position pos:line="134" pos:column="21"/></name></name></expr> )<pos:position pos:line="134" pos:column="23"/></condition><then><block pos:line="134" pos:column="23">{
      <expr_stmt><expr><name><name pos:line="135" pos:column="7">pMem<pos:position pos:line="135" pos:column="11"/></name><operator pos:line="135" pos:column="11">-&gt;<pos:position pos:line="135" pos:column="16"/></operator><name pos:line="135" pos:column="13">n<pos:position pos:line="135" pos:column="14"/></name></name> <operator pos:line="135" pos:column="15">=<pos:position pos:line="135" pos:column="16"/></operator> <literal type="number" pos:line="135" pos:column="17">0<pos:position pos:line="135" pos:column="18"/></literal></expr>;<pos:position pos:line="135" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="136" pos:column="7">sqlite3VdbeMemSetStr<pos:position pos:line="136" pos:column="27"/></name><argument_list pos:line="136" pos:column="27">(<argument><expr><name pos:line="136" pos:column="28">pMem<pos:position pos:line="136" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="34">zP4<pos:position pos:line="136" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="136" pos:column="39">-<pos:position pos:line="136" pos:column="40"/></operator><literal type="number" pos:line="136" pos:column="40">1<pos:position pos:line="136" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="136" pos:column="43">SQLITE_UTF8<pos:position pos:line="136" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="136" pos:column="56">0<pos:position pos:line="136" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></then><else pos:line="137" pos:column="6">else<block pos:line="137" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="138" pos:column="7">assert<pos:position pos:line="138" pos:column="13"/></name><argument_list pos:line="138" pos:column="13">( <argument><expr><name><name pos:line="138" pos:column="15">pMem<pos:position pos:line="138" pos:column="19"/></name><operator pos:line="138" pos:column="19">-&gt;<pos:position pos:line="138" pos:column="24"/></operator><name pos:line="138" pos:column="21">z<pos:position pos:line="138" pos:column="22"/></name></name><operator pos:line="138" pos:column="22">!=<pos:position pos:line="138" pos:column="24"/></operator><literal type="number" pos:line="138" pos:column="24">0<pos:position pos:line="138" pos:column="25"/></literal></expr></argument> )<pos:position pos:line="138" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="139" pos:column="7">pMem<pos:position pos:line="139" pos:column="11"/></name><operator pos:line="139" pos:column="11">-&gt;<pos:position pos:line="139" pos:column="16"/></operator><name pos:line="139" pos:column="13">n<pos:position pos:line="139" pos:column="14"/></name></name> <operator pos:line="139" pos:column="15">=<pos:position pos:line="139" pos:column="16"/></operator> <call><name pos:line="139" pos:column="17">sqlite3Strlen30<pos:position pos:line="139" pos:column="32"/></name><argument_list pos:line="139" pos:column="32">(<argument><expr><name><name pos:line="139" pos:column="33">pMem<pos:position pos:line="139" pos:column="37"/></name><operator pos:line="139" pos:column="37">-&gt;<pos:position pos:line="139" pos:column="42"/></operator><name pos:line="139" pos:column="39">z<pos:position pos:line="139" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="139" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="140" pos:column="7">pMem<pos:position pos:line="140" pos:column="11"/></name><operator pos:line="140" pos:column="11">-&gt;<pos:position pos:line="140" pos:column="16"/></operator><name pos:line="140" pos:column="13">enc<pos:position pos:line="140" pos:column="16"/></name></name> <operator pos:line="140" pos:column="17">=<pos:position pos:line="140" pos:column="18"/></operator> <name pos:line="140" pos:column="19">SQLITE_UTF8<pos:position pos:line="140" pos:column="30"/></name></expr>;<pos:position pos:line="140" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="141" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="142" pos:column="5">pMem<pos:position pos:line="142" pos:column="9"/></name><operator pos:line="142" pos:column="9">++<pos:position pos:line="142" pos:column="11"/></operator></expr>;<pos:position pos:line="142" pos:column="12"/></expr_stmt>

    <if pos:line="144" pos:column="5">if<condition pos:line="144" pos:column="7">( <expr><name><name pos:line="144" pos:column="9">p<pos:position pos:line="144" pos:column="10"/></name><operator pos:line="144" pos:column="10">-&gt;<pos:position pos:line="144" pos:column="15"/></operator><name pos:line="144" pos:column="12">explain<pos:position pos:line="144" pos:column="19"/></name></name><operator pos:line="144" pos:column="19">==<pos:position pos:line="144" pos:column="21"/></operator><literal type="number" pos:line="144" pos:column="21">1<pos:position pos:line="144" pos:column="22"/></literal></expr> )<pos:position pos:line="144" pos:column="24"/></condition><then><block pos:line="144" pos:column="24">{
      <if pos:line="145" pos:column="7">if<condition pos:line="145" pos:column="9">( <expr><call><name pos:line="145" pos:column="11">sqlite3VdbeMemClearAndResize<pos:position pos:line="145" pos:column="39"/></name><argument_list pos:line="145" pos:column="39">(<argument><expr><name pos:line="145" pos:column="40">pMem<pos:position pos:line="145" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="46">4<pos:position pos:line="145" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="48"/></argument_list></call></expr> )<pos:position pos:line="145" pos:column="50"/></condition><then><block pos:line="145" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="146" pos:column="9">assert<pos:position pos:line="146" pos:column="15"/></name><argument_list pos:line="146" pos:column="15">( <argument><expr><name><name pos:line="146" pos:column="17">p<pos:position pos:line="146" pos:column="18"/></name><operator pos:line="146" pos:column="18">-&gt;<pos:position pos:line="146" pos:column="23"/></operator><name pos:line="146" pos:column="20">db<pos:position pos:line="146" pos:column="22"/></name><operator pos:line="146" pos:column="22">-&gt;<pos:position pos:line="146" pos:column="27"/></operator><name pos:line="146" pos:column="24">mallocFailed<pos:position pos:line="146" pos:column="36"/></name></name></expr></argument> )<pos:position pos:line="146" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="39"/></expr_stmt>
        <return pos:line="147" pos:column="9">return <expr><name pos:line="147" pos:column="16">SQLITE_ERROR<pos:position pos:line="147" pos:column="28"/></name></expr>;<pos:position pos:line="147" pos:column="29"/></return>
      }<pos:position pos:line="148" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="149" pos:column="7">pMem<pos:position pos:line="149" pos:column="11"/></name><operator pos:line="149" pos:column="11">-&gt;<pos:position pos:line="149" pos:column="16"/></operator><name pos:line="149" pos:column="13">flags<pos:position pos:line="149" pos:column="18"/></name></name> <operator pos:line="149" pos:column="19">=<pos:position pos:line="149" pos:column="20"/></operator> <name pos:line="149" pos:column="21">MEM_Str<pos:position pos:line="149" pos:column="28"/></name><operator pos:line="149" pos:column="28">|<pos:position pos:line="149" pos:column="29"/></operator><name pos:line="149" pos:column="29">MEM_Term<pos:position pos:line="149" pos:column="37"/></name></expr>;<pos:position pos:line="149" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="150" pos:column="7">pMem<pos:position pos:line="150" pos:column="11"/></name><operator pos:line="150" pos:column="11">-&gt;<pos:position pos:line="150" pos:column="16"/></operator><name pos:line="150" pos:column="13">n<pos:position pos:line="150" pos:column="14"/></name></name> <operator pos:line="150" pos:column="15">=<pos:position pos:line="150" pos:column="16"/></operator> <literal type="number" pos:line="150" pos:column="17">2<pos:position pos:line="150" pos:column="18"/></literal></expr>;<pos:position pos:line="150" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="151" pos:column="7">sqlite3_snprintf<pos:position pos:line="151" pos:column="23"/></name><argument_list pos:line="151" pos:column="23">(<argument><expr><literal type="number" pos:line="151" pos:column="24">3<pos:position pos:line="151" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="27">pMem<pos:position pos:line="151" pos:column="31"/></name><operator pos:line="151" pos:column="31">-&gt;<pos:position pos:line="151" pos:column="36"/></operator><name pos:line="151" pos:column="33">z<pos:position pos:line="151" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="36">"%.2x"<pos:position pos:line="151" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="44">pOp<pos:position pos:line="151" pos:column="47"/></name><operator pos:line="151" pos:column="47">-&gt;<pos:position pos:line="151" pos:column="52"/></operator><name pos:line="151" pos:column="49">p5<pos:position pos:line="151" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="53"/></expr_stmt>   <comment type="block" pos:line="151" pos:column="56">/* P5 */</comment>
      <expr_stmt><expr><name><name pos:line="152" pos:column="7">pMem<pos:position pos:line="152" pos:column="11"/></name><operator pos:line="152" pos:column="11">-&gt;<pos:position pos:line="152" pos:column="16"/></operator><name pos:line="152" pos:column="13">enc<pos:position pos:line="152" pos:column="16"/></name></name> <operator pos:line="152" pos:column="17">=<pos:position pos:line="152" pos:column="18"/></operator> <name pos:line="152" pos:column="19">SQLITE_UTF8<pos:position pos:line="152" pos:column="30"/></name></expr>;<pos:position pos:line="152" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="153" pos:column="7">pMem<pos:position pos:line="153" pos:column="11"/></name><operator pos:line="153" pos:column="11">++<pos:position pos:line="153" pos:column="13"/></operator></expr>;<pos:position pos:line="153" pos:column="14"/></expr_stmt>
  
<cpp:ifdef pos:line="155" pos:column="1">#<cpp:directive pos:line="155" pos:column="2">ifdef<pos:position pos:line="155" pos:column="7"/></cpp:directive> <name pos:line="155" pos:column="8">SQLITE_ENABLE_EXPLAIN_COMMENTS<pos:position pos:line="155" pos:column="38"/></name></cpp:ifdef>
      <if pos:line="156" pos:column="7">if<condition pos:line="156" pos:column="9">( <expr><call><name pos:line="156" pos:column="11">sqlite3VdbeMemClearAndResize<pos:position pos:line="156" pos:column="39"/></name><argument_list pos:line="156" pos:column="39">(<argument><expr><name pos:line="156" pos:column="40">pMem<pos:position pos:line="156" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="156" pos:column="46">500<pos:position pos:line="156" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="50"/></argument_list></call></expr> )<pos:position pos:line="156" pos:column="52"/></condition><then><block pos:line="156" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="157" pos:column="9">assert<pos:position pos:line="157" pos:column="15"/></name><argument_list pos:line="157" pos:column="15">( <argument><expr><name><name pos:line="157" pos:column="17">p<pos:position pos:line="157" pos:column="18"/></name><operator pos:line="157" pos:column="18">-&gt;<pos:position pos:line="157" pos:column="23"/></operator><name pos:line="157" pos:column="20">db<pos:position pos:line="157" pos:column="22"/></name><operator pos:line="157" pos:column="22">-&gt;<pos:position pos:line="157" pos:column="27"/></operator><name pos:line="157" pos:column="24">mallocFailed<pos:position pos:line="157" pos:column="36"/></name></name></expr></argument> )<pos:position pos:line="157" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="39"/></expr_stmt>
        <return pos:line="158" pos:column="9">return <expr><name pos:line="158" pos:column="16">SQLITE_ERROR<pos:position pos:line="158" pos:column="28"/></name></expr>;<pos:position pos:line="158" pos:column="29"/></return>
      }<pos:position pos:line="159" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="160" pos:column="7">pMem<pos:position pos:line="160" pos:column="11"/></name><operator pos:line="160" pos:column="11">-&gt;<pos:position pos:line="160" pos:column="16"/></operator><name pos:line="160" pos:column="13">flags<pos:position pos:line="160" pos:column="18"/></name></name> <operator pos:line="160" pos:column="19">=<pos:position pos:line="160" pos:column="20"/></operator> <name pos:line="160" pos:column="21">MEM_Str<pos:position pos:line="160" pos:column="28"/></name><operator pos:line="160" pos:column="28">|<pos:position pos:line="160" pos:column="29"/></operator><name pos:line="160" pos:column="29">MEM_Term<pos:position pos:line="160" pos:column="37"/></name></expr>;<pos:position pos:line="160" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="161" pos:column="7">pMem<pos:position pos:line="161" pos:column="11"/></name><operator pos:line="161" pos:column="11">-&gt;<pos:position pos:line="161" pos:column="16"/></operator><name pos:line="161" pos:column="13">n<pos:position pos:line="161" pos:column="14"/></name></name> <operator pos:line="161" pos:column="15">=<pos:position pos:line="161" pos:column="16"/></operator> <call><name pos:line="161" pos:column="17">displayComment<pos:position pos:line="161" pos:column="31"/></name><argument_list pos:line="161" pos:column="31">(<argument><expr><name pos:line="161" pos:column="32">pOp<pos:position pos:line="161" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="37">zP4<pos:position pos:line="161" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="42">pMem<pos:position pos:line="161" pos:column="46"/></name><operator pos:line="161" pos:column="46">-&gt;<pos:position pos:line="161" pos:column="51"/></operator><name pos:line="161" pos:column="48">z<pos:position pos:line="161" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="161" pos:column="51">500<pos:position pos:line="161" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="162" pos:column="7">pMem<pos:position pos:line="162" pos:column="11"/></name><operator pos:line="162" pos:column="11">-&gt;<pos:position pos:line="162" pos:column="16"/></operator><name pos:line="162" pos:column="13">enc<pos:position pos:line="162" pos:column="16"/></name></name> <operator pos:line="162" pos:column="17">=<pos:position pos:line="162" pos:column="18"/></operator> <name pos:line="162" pos:column="19">SQLITE_UTF8<pos:position pos:line="162" pos:column="30"/></name></expr>;<pos:position pos:line="162" pos:column="31"/></expr_stmt>
<cpp:else pos:line="163" pos:column="1">#<cpp:directive pos:line="163" pos:column="2">else<pos:position pos:line="163" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><name><name pos:line="164" pos:column="7">pMem<pos:position pos:line="164" pos:column="11"/></name><operator pos:line="164" pos:column="11">-&gt;<pos:position pos:line="164" pos:column="16"/></operator><name pos:line="164" pos:column="13">flags<pos:position pos:line="164" pos:column="18"/></name></name> <operator pos:line="164" pos:column="19">=<pos:position pos:line="164" pos:column="20"/></operator> <name pos:line="164" pos:column="21">MEM_Null<pos:position pos:line="164" pos:column="29"/></name></expr>;<pos:position pos:line="164" pos:column="30"/></expr_stmt>                       <comment type="block" pos:line="164" pos:column="53">/* Comment */</comment>
<cpp:endif pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">endif<pos:position pos:line="165" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="166" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="168" pos:column="5">p<pos:position pos:line="168" pos:column="6"/></name><operator pos:line="168" pos:column="6">-&gt;<pos:position pos:line="168" pos:column="11"/></operator><name pos:line="168" pos:column="8">nResColumn<pos:position pos:line="168" pos:column="18"/></name></name> <operator pos:line="168" pos:column="19">=<pos:position pos:line="168" pos:column="20"/></operator> <literal type="number" pos:line="168" pos:column="21">8<pos:position pos:line="168" pos:column="22"/></literal> <operator pos:line="168" pos:column="23">-<pos:position pos:line="168" pos:column="24"/></operator> <literal type="number" pos:line="168" pos:column="25">4<pos:position pos:line="168" pos:column="26"/></literal><operator pos:line="168" pos:column="26">*<pos:position pos:line="168" pos:column="27"/></operator><operator pos:line="168" pos:column="27">(<pos:position pos:line="168" pos:column="28"/></operator><name><name pos:line="168" pos:column="28">p<pos:position pos:line="168" pos:column="29"/></name><operator pos:line="168" pos:column="29">-&gt;<pos:position pos:line="168" pos:column="34"/></operator><name pos:line="168" pos:column="31">explain<pos:position pos:line="168" pos:column="38"/></name></name><operator pos:line="168" pos:column="38">-<pos:position pos:line="168" pos:column="39"/></operator><literal type="number" pos:line="168" pos:column="39">1<pos:position pos:line="168" pos:column="40"/></literal><operator pos:line="168" pos:column="40">)<pos:position pos:line="168" pos:column="41"/></operator></expr>;<pos:position pos:line="168" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="169" pos:column="5">p<pos:position pos:line="169" pos:column="6"/></name><operator pos:line="169" pos:column="6">-&gt;<pos:position pos:line="169" pos:column="11"/></operator><name pos:line="169" pos:column="8">pResultSet<pos:position pos:line="169" pos:column="18"/></name></name> <operator pos:line="169" pos:column="19">=<pos:position pos:line="169" pos:column="20"/></operator> <operator pos:line="169" pos:column="21">&amp;<pos:position pos:line="169" pos:column="26"/></operator><name><name pos:line="169" pos:column="22">p<pos:position pos:line="169" pos:column="23"/></name><operator pos:line="169" pos:column="23">-&gt;<pos:position pos:line="169" pos:column="28"/></operator><name pos:line="169" pos:column="25">aMem<pos:position pos:line="169" pos:column="29"/></name><index pos:line="169" pos:column="29">[<expr><literal type="number" pos:line="169" pos:column="30">1<pos:position pos:line="169" pos:column="31"/></literal></expr>]<pos:position pos:line="169" pos:column="32"/></index></name></expr>;<pos:position pos:line="169" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="170" pos:column="5">p<pos:position pos:line="170" pos:column="6"/></name><operator pos:line="170" pos:column="6">-&gt;<pos:position pos:line="170" pos:column="11"/></operator><name pos:line="170" pos:column="8">rc<pos:position pos:line="170" pos:column="10"/></name></name> <operator pos:line="170" pos:column="11">=<pos:position pos:line="170" pos:column="12"/></operator> <name pos:line="170" pos:column="13">SQLITE_OK<pos:position pos:line="170" pos:column="22"/></name></expr>;<pos:position pos:line="170" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="171" pos:column="5">rc<pos:position pos:line="171" pos:column="7"/></name> <operator pos:line="171" pos:column="8">=<pos:position pos:line="171" pos:column="9"/></operator> <name pos:line="171" pos:column="10">SQLITE_ROW<pos:position pos:line="171" pos:column="20"/></name></expr>;<pos:position pos:line="171" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="172" pos:column="4"/></block></else></if>
  <return pos:line="173" pos:column="3">return <expr><name pos:line="173" pos:column="10">rc<pos:position pos:line="173" pos:column="12"/></name></expr>;<pos:position pos:line="173" pos:column="13"/></return>
}<pos:position pos:line="174" pos:column="2"/></block></function></unit>

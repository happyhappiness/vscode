<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_353.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">sqlite3CreateIndex<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Parse<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pParse<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>,     <comment type="block" pos:line="2" pos:column="22">/* All information about this parse */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">Token<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">pName1<pos:position pos:line="3" pos:column="16"/></name></decl></parameter>,     <comment type="block" pos:line="3" pos:column="22">/* First part of index name. May be NULL */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">Token<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">pName2<pos:position pos:line="4" pos:column="16"/></name></decl></parameter>,     <comment type="block" pos:line="4" pos:column="22">/* Second part of index name. May be NULL */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">SrcList<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">pTblName<pos:position pos:line="5" pos:column="20"/></name></decl></parameter>, <comment type="block" pos:line="5" pos:column="22">/* Table to index. Use pParse-&gt;pNewTable if 0 */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">ExprList<pos:position pos:line="6" pos:column="11"/></name> <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier></type><name pos:line="6" pos:column="13">pList<pos:position pos:line="6" pos:column="18"/></name></decl></parameter>,   <comment type="block" pos:line="6" pos:column="22">/* A list of columns to be indexed */</comment>
  <parameter><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">onError<pos:position pos:line="7" pos:column="14"/></name></decl></parameter>,       <comment type="block" pos:line="7" pos:column="22">/* OE_Abort, OE_Ignore, OE_Replace, or OE_None */</comment>
  <parameter><decl><type><name pos:line="8" pos:column="3">Token<pos:position pos:line="8" pos:column="8"/></name> <modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">pStart<pos:position pos:line="8" pos:column="16"/></name></decl></parameter>,     <comment type="block" pos:line="8" pos:column="22">/* The CREATE token that begins this statement */</comment>
  <parameter><decl><type><name pos:line="9" pos:column="3">Token<pos:position pos:line="9" pos:column="8"/></name> <modifier pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></modifier></type><name pos:line="9" pos:column="10">pEnd<pos:position pos:line="9" pos:column="14"/></name></decl></parameter>,       <comment type="block" pos:line="9" pos:column="22">/* The ")" that closes the CREATE INDEX statement */</comment>
  <parameter><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">sortOrder<pos:position pos:line="10" pos:column="16"/></name></decl></parameter>,     <comment type="block" pos:line="10" pos:column="22">/* Sort order of primary key when pList==NULL */</comment>
  <parameter><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">ifNotExist<pos:position pos:line="11" pos:column="17"/></name></decl></parameter>     <comment type="block" pos:line="11" pos:column="22">/* Omit error if index already exists */</comment>
)<pos:position pos:line="12" pos:column="2"/></parameter_list><block pos:line="12" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">Table<pos:position pos:line="13" pos:column="8"/></name> <modifier pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></modifier></type><name pos:line="13" pos:column="10">pTab<pos:position pos:line="13" pos:column="14"/></name> <init pos:line="13" pos:column="15">= <expr><literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>     <comment type="block" pos:line="13" pos:column="24">/* Table to be indexed */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">Index<pos:position pos:line="14" pos:column="8"/></name> <modifier pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></modifier></type><name pos:line="14" pos:column="10">pIndex<pos:position pos:line="14" pos:column="16"/></name> <init pos:line="14" pos:column="17">= <expr><literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>   <comment type="block" pos:line="14" pos:column="24">/* The index to be created */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">zName<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>     <comment type="block" pos:line="15" pos:column="24">/* Name of the index */</comment>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">nName<pos:position pos:line="16" pos:column="12"/></name></decl>;<pos:position pos:line="16" pos:column="13"/></decl_stmt>           <comment type="block" pos:line="16" pos:column="24">/* Number of characters in zName */</comment>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">int<pos:position pos:line="17" pos:column="6"/></name></type> <name pos:line="17" pos:column="7">i<pos:position pos:line="17" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="10">j<pos:position pos:line="17" pos:column="11"/></name></decl>;<pos:position pos:line="17" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">Token<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">nullId<pos:position pos:line="18" pos:column="15"/></name></decl>;<pos:position pos:line="18" pos:column="16"/></decl_stmt>        <comment type="block" pos:line="18" pos:column="24">/* Fake token for an empty ID list */</comment>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">DbFixer<pos:position pos:line="19" pos:column="10"/></name></type> <name pos:line="19" pos:column="11">sFix<pos:position pos:line="19" pos:column="15"/></name></decl>;<pos:position pos:line="19" pos:column="16"/></decl_stmt>        <comment type="block" pos:line="19" pos:column="24">/* For assigning database names to pTable */</comment>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">int<pos:position pos:line="20" pos:column="6"/></name></type> <name pos:line="20" pos:column="7">sortOrderMask<pos:position pos:line="20" pos:column="20"/></name></decl>;<pos:position pos:line="20" pos:column="21"/></decl_stmt>   <comment type="block" pos:line="20" pos:column="24">/* 1 to honor DESC in index.  0 to ignore. */</comment>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">sqlite3<pos:position pos:line="21" pos:column="10"/></name> <modifier pos:line="21" pos:column="11">*<pos:position pos:line="21" pos:column="12"/></modifier></type><name pos:line="21" pos:column="12">db<pos:position pos:line="21" pos:column="14"/></name> <init pos:line="21" pos:column="15">= <expr><name><name pos:line="21" pos:column="17">pParse<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">-&gt;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="25">db<pos:position pos:line="21" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="21" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">Db<pos:position pos:line="22" pos:column="5"/></name> <modifier pos:line="22" pos:column="6">*<pos:position pos:line="22" pos:column="7"/></modifier></type><name pos:line="22" pos:column="7">pDb<pos:position pos:line="22" pos:column="10"/></name></decl>;<pos:position pos:line="22" pos:column="11"/></decl_stmt>             <comment type="block" pos:line="22" pos:column="24">/* The specific table containing the indexed database */</comment>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">int<pos:position pos:line="23" pos:column="6"/></name></type> <name pos:line="23" pos:column="7">iDb<pos:position pos:line="23" pos:column="10"/></name></decl>;<pos:position pos:line="23" pos:column="11"/></decl_stmt>             <comment type="block" pos:line="23" pos:column="24">/* Index of the database that is being written */</comment>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">Token<pos:position pos:line="24" pos:column="8"/></name> <modifier pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></modifier></type><name pos:line="24" pos:column="10">pName<pos:position pos:line="24" pos:column="15"/></name> <init pos:line="24" pos:column="16">= <expr><literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="20"/></decl_stmt>    <comment type="block" pos:line="24" pos:column="24">/* Unqualified name of the index to create */</comment>
  <decl_stmt><decl><type><name><name pos:line="25" pos:column="3">struct<pos:position pos:line="25" pos:column="9"/></name> <name pos:line="25" pos:column="10">ExprList_item<pos:position pos:line="25" pos:column="23"/></name></name> <modifier pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></modifier></type><name pos:line="25" pos:column="25">pListItem<pos:position pos:line="25" pos:column="34"/></name></decl>;<pos:position pos:line="25" pos:column="35"/></decl_stmt> <comment type="block" pos:line="25" pos:column="36">/* For looping over pList */</comment>
  <decl_stmt><decl><type><name pos:line="26" pos:column="3">int<pos:position pos:line="26" pos:column="6"/></name></type> <name pos:line="26" pos:column="7">nCol<pos:position pos:line="26" pos:column="11"/></name></decl>;<pos:position pos:line="26" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="27" pos:column="3">int<pos:position pos:line="27" pos:column="6"/></name></type> <name pos:line="27" pos:column="7">nExtra<pos:position pos:line="27" pos:column="13"/></name> <init pos:line="27" pos:column="14">= <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="28" pos:column="3">char<pos:position pos:line="28" pos:column="7"/></name> <modifier pos:line="28" pos:column="8">*<pos:position pos:line="28" pos:column="9"/></modifier></type><name pos:line="28" pos:column="9">zExtra<pos:position pos:line="28" pos:column="15"/></name></decl>;<pos:position pos:line="28" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">assert<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">( <argument><expr><name pos:line="30" pos:column="11">pStart<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">==<pos:position pos:line="30" pos:column="19"/></operator><literal type="number" pos:line="30" pos:column="19">0<pos:position pos:line="30" pos:column="20"/></literal> <operator pos:line="30" pos:column="21">||<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">pEnd<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">!=<pos:position pos:line="30" pos:column="30"/></operator><literal type="number" pos:line="30" pos:column="30">0<pos:position pos:line="30" pos:column="31"/></literal></expr></argument> )<pos:position pos:line="30" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt> <comment type="block" pos:line="30" pos:column="35">/* pEnd must be non-NULL if pStart is */</comment>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">assert<pos:position pos:line="31" pos:column="9"/></name><argument_list pos:line="31" pos:column="9">( <argument><expr><name><name pos:line="31" pos:column="11">pParse<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">nErr<pos:position pos:line="31" pos:column="23"/></name></name><operator pos:line="31" pos:column="23">==<pos:position pos:line="31" pos:column="25"/></operator><literal type="number" pos:line="31" pos:column="25">0<pos:position pos:line="31" pos:column="26"/></literal></expr></argument> )<pos:position pos:line="31" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>      <comment type="block" pos:line="31" pos:column="35">/* Never called with prior errors */</comment>
  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">( <expr><name><name pos:line="32" pos:column="7">db<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">mallocFailed<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">||<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">IN_DECLARE_VTAB<pos:position pos:line="32" pos:column="42"/></name></expr> )<pos:position pos:line="32" pos:column="44"/></condition><then><block pos:line="32" pos:column="44">{
    <goto pos:line="33" pos:column="5">goto <name pos:line="33" pos:column="10">exit_create_index<pos:position pos:line="33" pos:column="27"/></name>;<pos:position pos:line="33" pos:column="28"/></goto>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">( <expr><name pos:line="35" pos:column="7">SQLITE_OK<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">!=<pos:position pos:line="35" pos:column="18"/></operator><call><name pos:line="35" pos:column="18">sqlite3ReadSchema<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">pParse<pos:position pos:line="35" pos:column="42"/></name></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr> )<pos:position pos:line="35" pos:column="45"/></condition><then><block pos:line="35" pos:column="45">{
    <goto pos:line="36" pos:column="5">goto <name pos:line="36" pos:column="10">exit_create_index<pos:position pos:line="36" pos:column="27"/></name>;<pos:position pos:line="36" pos:column="28"/></goto>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="39" pos:column="3">/*
  ** Find the table that is to be indexed.  Return early if not found.
  */</comment>
  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">( <expr><name pos:line="42" pos:column="7">pTblName<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">!=<pos:position pos:line="42" pos:column="17"/></operator><literal type="number" pos:line="42" pos:column="17">0<pos:position pos:line="42" pos:column="18"/></literal></expr> )<pos:position pos:line="42" pos:column="20"/></condition><then><block pos:line="42" pos:column="20">{

    <comment type="block" pos:line="44" pos:column="5">/* Use the two-part index name to determine the database 
    ** to search for the table. 'Fix' the table name to this db
    ** before looking up the table.
    */</comment>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">assert<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">( <argument><expr><name pos:line="48" pos:column="13">pName1<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">&amp;&amp;<pos:position pos:line="48" pos:column="30"/></operator> <name pos:line="48" pos:column="23">pName2<pos:position pos:line="48" pos:column="29"/></name></expr></argument> )<pos:position pos:line="48" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">iDb<pos:position pos:line="49" pos:column="8"/></name> <operator pos:line="49" pos:column="9">=<pos:position pos:line="49" pos:column="10"/></operator> <call><name pos:line="49" pos:column="11">sqlite3TwoPartName<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">pParse<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="38">pName1<pos:position pos:line="49" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="46">pName2<pos:position pos:line="49" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="54">&amp;<pos:position pos:line="49" pos:column="59"/></operator><name pos:line="49" pos:column="55">pName<pos:position pos:line="49" pos:column="60"/></name></expr></argument>)<pos:position pos:line="49" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="62"/></expr_stmt>
    <if pos:line="50" pos:column="5">if<condition pos:line="50" pos:column="7">( <expr><name pos:line="50" pos:column="9">iDb<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">&lt;<pos:position pos:line="50" pos:column="16"/></operator><literal type="number" pos:line="50" pos:column="13">0<pos:position pos:line="50" pos:column="14"/></literal></expr> )<pos:position pos:line="50" pos:column="16"/></condition><then pos:line="50" pos:column="16"> <block type="pseudo"><goto pos:line="50" pos:column="17">goto <name pos:line="50" pos:column="22">exit_create_index<pos:position pos:line="50" pos:column="39"/></name>;<pos:position pos:line="50" pos:column="40"/></goto></block></then></if>

<cpp:ifndef pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">ifndef<pos:position pos:line="52" pos:column="8"/></cpp:directive> <name pos:line="52" pos:column="9">SQLITE_OMIT_TEMPDB<pos:position pos:line="52" pos:column="27"/></name></cpp:ifndef>
    <comment type="block" pos:line="53" pos:column="5">/* If the index name was unqualified, check if the the table
    ** is a temp table. If so, set the database to 1. Do not do this
    ** if initialising a database schema.
    */</comment>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">( <expr><operator pos:line="57" pos:column="9">!<pos:position pos:line="57" pos:column="10"/></operator><name><name pos:line="57" pos:column="10">db<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">init<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">.<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">busy<pos:position pos:line="57" pos:column="23"/></name></name></expr> )<pos:position pos:line="57" pos:column="25"/></condition><then><block pos:line="57" pos:column="25">{
      <expr_stmt><expr><name pos:line="58" pos:column="7">pTab<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <call><name pos:line="58" pos:column="14">sqlite3SrcListLookup<pos:position pos:line="58" pos:column="34"/></name><argument_list pos:line="58" pos:column="34">(<argument><expr><name pos:line="58" pos:column="35">pParse<pos:position pos:line="58" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="43">pTblName<pos:position pos:line="58" pos:column="51"/></name></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="53"/></expr_stmt>
      <if pos:line="59" pos:column="7">if<condition pos:line="59" pos:column="9">( <expr><name><name pos:line="59" pos:column="11">pName2<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">n<pos:position pos:line="59" pos:column="20"/></name></name><operator pos:line="59" pos:column="20">==<pos:position pos:line="59" pos:column="22"/></operator><literal type="number" pos:line="59" pos:column="22">0<pos:position pos:line="59" pos:column="23"/></literal> <operator pos:line="59" pos:column="24">&amp;&amp;<pos:position pos:line="59" pos:column="34"/></operator> <name pos:line="59" pos:column="27">pTab<pos:position pos:line="59" pos:column="31"/></name> <operator pos:line="59" pos:column="32">&amp;&amp;<pos:position pos:line="59" pos:column="42"/></operator> <name><name pos:line="59" pos:column="35">pTab<pos:position pos:line="59" pos:column="39"/></name><operator pos:line="59" pos:column="39">-&gt;<pos:position pos:line="59" pos:column="44"/></operator><name pos:line="59" pos:column="41">pSchema<pos:position pos:line="59" pos:column="48"/></name></name><operator pos:line="59" pos:column="48">==<pos:position pos:line="59" pos:column="50"/></operator><name><name pos:line="59" pos:column="50">db<pos:position pos:line="59" pos:column="52"/></name><operator pos:line="59" pos:column="52">-&gt;<pos:position pos:line="59" pos:column="57"/></operator><name pos:line="59" pos:column="54">aDb<pos:position pos:line="59" pos:column="57"/></name><index pos:line="59" pos:column="57">[<expr><literal type="number" pos:line="59" pos:column="58">1<pos:position pos:line="59" pos:column="59"/></literal></expr>]<pos:position pos:line="59" pos:column="60"/></index></name><operator pos:line="59" pos:column="60">.<pos:position pos:line="59" pos:column="61"/></operator><name pos:line="59" pos:column="61">pSchema<pos:position pos:line="59" pos:column="68"/></name></expr> )<pos:position pos:line="59" pos:column="70"/></condition><then><block pos:line="59" pos:column="70">{
        <expr_stmt><expr><name pos:line="60" pos:column="9">iDb<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <literal type="number" pos:line="60" pos:column="15">1<pos:position pos:line="60" pos:column="16"/></literal></expr>;<pos:position pos:line="60" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="61" pos:column="8"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">( <expr><call><name pos:line="65" pos:column="9">sqlite3FixInit<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><operator pos:line="65" pos:column="24">&amp;<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="25">sFix<pos:position pos:line="65" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="31">pParse<pos:position pos:line="65" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="39">iDb<pos:position pos:line="65" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="44">"index"<pos:position pos:line="65" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="53">pName<pos:position pos:line="65" pos:column="58"/></name></expr></argument>)<pos:position pos:line="65" pos:column="59"/></argument_list></call> <operator pos:line="65" pos:column="60">&amp;&amp;<pos:position pos:line="65" pos:column="70"/></operator>
        <call><name pos:line="66" pos:column="9">sqlite3FixSrcList<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><operator pos:line="66" pos:column="27">&amp;<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="28">sFix<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="34">pTblName<pos:position pos:line="66" pos:column="42"/></name></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>
    )<pos:position pos:line="67" pos:column="6"/></condition><then><block pos:line="67" pos:column="6">{
      <comment type="block" pos:line="68" pos:column="7">/* Because the parser constructs pTblName from a single identifier,
      ** sqlite3FixSrcList can never fail. */</comment>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">assert<pos:position pos:line="70" pos:column="13"/></name><argument_list pos:line="70" pos:column="13">(<argument><expr><literal type="number" pos:line="70" pos:column="14">0<pos:position pos:line="70" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="72" pos:column="5">pTab<pos:position pos:line="72" pos:column="9"/></name> <operator pos:line="72" pos:column="10">=<pos:position pos:line="72" pos:column="11"/></operator> <call><name pos:line="72" pos:column="12">sqlite3LocateTable<pos:position pos:line="72" pos:column="30"/></name><argument_list pos:line="72" pos:column="30">(<argument><expr><name pos:line="72" pos:column="31">pParse<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="39">0<pos:position pos:line="72" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="42">pTblName<pos:position pos:line="72" pos:column="50"/></name><operator pos:line="72" pos:column="50">-&gt;<pos:position pos:line="72" pos:column="55"/></operator><name pos:line="72" pos:column="52">a<pos:position pos:line="72" pos:column="53"/></name><index pos:line="72" pos:column="53">[<expr><literal type="number" pos:line="72" pos:column="54">0<pos:position pos:line="72" pos:column="55"/></literal></expr>]<pos:position pos:line="72" pos:column="56"/></index></name><operator pos:line="72" pos:column="56">.<pos:position pos:line="72" pos:column="57"/></operator><name pos:line="72" pos:column="57">zName<pos:position pos:line="72" pos:column="62"/></name></expr></argument>, 
        <argument><expr><name><name pos:line="73" pos:column="9">pTblName<pos:position pos:line="73" pos:column="17"/></name><operator pos:line="73" pos:column="17">-&gt;<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="19">a<pos:position pos:line="73" pos:column="20"/></name><index pos:line="73" pos:column="20">[<expr><literal type="number" pos:line="73" pos:column="21">0<pos:position pos:line="73" pos:column="22"/></literal></expr>]<pos:position pos:line="73" pos:column="23"/></index></name><operator pos:line="73" pos:column="23">.<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="24">zDatabase<pos:position pos:line="73" pos:column="33"/></name></expr></argument>)<pos:position pos:line="73" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="35"/></expr_stmt>
    <if pos:line="74" pos:column="5">if<condition pos:line="74" pos:column="7">( <expr><operator pos:line="74" pos:column="9">!<pos:position pos:line="74" pos:column="10"/></operator><name pos:line="74" pos:column="10">pTab<pos:position pos:line="74" pos:column="14"/></name> <operator pos:line="74" pos:column="15">||<pos:position pos:line="74" pos:column="17"/></operator> <name><name pos:line="74" pos:column="18">db<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">-&gt;<pos:position pos:line="74" pos:column="25"/></operator><name pos:line="74" pos:column="22">mallocFailed<pos:position pos:line="74" pos:column="34"/></name></name></expr> )<pos:position pos:line="74" pos:column="36"/></condition><then pos:line="74" pos:column="36"> <block type="pseudo"><goto pos:line="74" pos:column="37">goto <name pos:line="74" pos:column="42">exit_create_index<pos:position pos:line="74" pos:column="59"/></name>;<pos:position pos:line="74" pos:column="60"/></goto></block></then></if>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">assert<pos:position pos:line="75" pos:column="11"/></name><argument_list pos:line="75" pos:column="11">( <argument><expr><name><name pos:line="75" pos:column="13">db<pos:position pos:line="75" pos:column="15"/></name><operator pos:line="75" pos:column="15">-&gt;<pos:position pos:line="75" pos:column="20"/></operator><name pos:line="75" pos:column="17">aDb<pos:position pos:line="75" pos:column="20"/></name><index pos:line="75" pos:column="20">[<expr><name pos:line="75" pos:column="21">iDb<pos:position pos:line="75" pos:column="24"/></name></expr>]<pos:position pos:line="75" pos:column="25"/></index></name><operator pos:line="75" pos:column="25">.<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="26">pSchema<pos:position pos:line="75" pos:column="33"/></name><operator pos:line="75" pos:column="33">==<pos:position pos:line="75" pos:column="35"/></operator><name><name pos:line="75" pos:column="35">pTab<pos:position pos:line="75" pos:column="39"/></name><operator pos:line="75" pos:column="39">-&gt;<pos:position pos:line="75" pos:column="44"/></operator><name pos:line="75" pos:column="41">pSchema<pos:position pos:line="75" pos:column="48"/></name></name></expr></argument> )<pos:position pos:line="75" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="76" pos:column="4"/></block></then><else pos:line="76" pos:column="4">else<block pos:line="76" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">assert<pos:position pos:line="77" pos:column="11"/></name><argument_list pos:line="77" pos:column="11">( <argument><expr><name pos:line="77" pos:column="13">pName<pos:position pos:line="77" pos:column="18"/></name><operator pos:line="77" pos:column="18">==<pos:position pos:line="77" pos:column="20"/></operator><literal type="number" pos:line="77" pos:column="20">0<pos:position pos:line="77" pos:column="21"/></literal></expr></argument> )<pos:position pos:line="77" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="78" pos:column="5">pTab<pos:position pos:line="78" pos:column="9"/></name> <operator pos:line="78" pos:column="10">=<pos:position pos:line="78" pos:column="11"/></operator> <name><name pos:line="78" pos:column="12">pParse<pos:position pos:line="78" pos:column="18"/></name><operator pos:line="78" pos:column="18">-&gt;<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="20">pNewTable<pos:position pos:line="78" pos:column="29"/></name></name></expr>;<pos:position pos:line="78" pos:column="30"/></expr_stmt>
    <if pos:line="79" pos:column="5">if<condition pos:line="79" pos:column="7">( <expr><operator pos:line="79" pos:column="9">!<pos:position pos:line="79" pos:column="10"/></operator><name pos:line="79" pos:column="10">pTab<pos:position pos:line="79" pos:column="14"/></name></expr> )<pos:position pos:line="79" pos:column="16"/></condition><then pos:line="79" pos:column="16"> <block type="pseudo"><goto pos:line="79" pos:column="17">goto <name pos:line="79" pos:column="22">exit_create_index<pos:position pos:line="79" pos:column="39"/></name>;<pos:position pos:line="79" pos:column="40"/></goto></block></then></if>
    <expr_stmt><expr><name pos:line="80" pos:column="5">iDb<pos:position pos:line="80" pos:column="8"/></name> <operator pos:line="80" pos:column="9">=<pos:position pos:line="80" pos:column="10"/></operator> <call><name pos:line="80" pos:column="11">sqlite3SchemaToIndex<pos:position pos:line="80" pos:column="31"/></name><argument_list pos:line="80" pos:column="31">(<argument><expr><name pos:line="80" pos:column="32">db<pos:position pos:line="80" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="36">pTab<pos:position pos:line="80" pos:column="40"/></name><operator pos:line="80" pos:column="40">-&gt;<pos:position pos:line="80" pos:column="45"/></operator><name pos:line="80" pos:column="42">pSchema<pos:position pos:line="80" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="81" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name pos:line="82" pos:column="3">pDb<pos:position pos:line="82" pos:column="6"/></name> <operator pos:line="82" pos:column="7">=<pos:position pos:line="82" pos:column="8"/></operator> <operator pos:line="82" pos:column="9">&amp;<pos:position pos:line="82" pos:column="14"/></operator><name><name pos:line="82" pos:column="10">db<pos:position pos:line="82" pos:column="12"/></name><operator pos:line="82" pos:column="12">-&gt;<pos:position pos:line="82" pos:column="17"/></operator><name pos:line="82" pos:column="14">aDb<pos:position pos:line="82" pos:column="17"/></name><index pos:line="82" pos:column="17">[<expr><name pos:line="82" pos:column="18">iDb<pos:position pos:line="82" pos:column="21"/></name></expr>]<pos:position pos:line="82" pos:column="22"/></index></name></expr>;<pos:position pos:line="82" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="84" pos:column="3">assert<pos:position pos:line="84" pos:column="9"/></name><argument_list pos:line="84" pos:column="9">( <argument><expr><name pos:line="84" pos:column="11">pTab<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">!=<pos:position pos:line="84" pos:column="17"/></operator><literal type="number" pos:line="84" pos:column="17">0<pos:position pos:line="84" pos:column="18"/></literal></expr></argument> )<pos:position pos:line="84" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">assert<pos:position pos:line="85" pos:column="9"/></name><argument_list pos:line="85" pos:column="9">( <argument><expr><name><name pos:line="85" pos:column="11">pParse<pos:position pos:line="85" pos:column="17"/></name><operator pos:line="85" pos:column="17">-&gt;<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="19">nErr<pos:position pos:line="85" pos:column="23"/></name></name><operator pos:line="85" pos:column="23">==<pos:position pos:line="85" pos:column="25"/></operator><literal type="number" pos:line="85" pos:column="25">0<pos:position pos:line="85" pos:column="26"/></literal></expr></argument> )<pos:position pos:line="85" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="29"/></expr_stmt>
  <if pos:line="86" pos:column="3">if<condition pos:line="86" pos:column="5">( <expr><call><name pos:line="86" pos:column="7">sqlite3StrNICmp<pos:position pos:line="86" pos:column="22"/></name><argument_list pos:line="86" pos:column="22">(<argument><expr><name><name pos:line="86" pos:column="23">pTab<pos:position pos:line="86" pos:column="27"/></name><operator pos:line="86" pos:column="27">-&gt;<pos:position pos:line="86" pos:column="32"/></operator><name pos:line="86" pos:column="29">zName<pos:position pos:line="86" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="36">"sqlite_"<pos:position pos:line="86" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="47">7<pos:position pos:line="86" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="49"/></argument_list></call><operator pos:line="86" pos:column="49">==<pos:position pos:line="86" pos:column="51"/></operator><literal type="number" pos:line="86" pos:column="51">0<pos:position pos:line="86" pos:column="52"/></literal> 
       <operator pos:line="87" pos:column="8">&amp;&amp;<pos:position pos:line="87" pos:column="18"/></operator> <call><name pos:line="87" pos:column="11">memcmp<pos:position pos:line="87" pos:column="17"/></name><argument_list pos:line="87" pos:column="17">(<argument><expr><operator pos:line="87" pos:column="18">&amp;<pos:position pos:line="87" pos:column="23"/></operator><name><name pos:line="87" pos:column="19">pTab<pos:position pos:line="87" pos:column="23"/></name><operator pos:line="87" pos:column="23">-&gt;<pos:position pos:line="87" pos:column="28"/></operator><name pos:line="87" pos:column="25">zName<pos:position pos:line="87" pos:column="30"/></name><index pos:line="87" pos:column="30">[<expr><literal type="number" pos:line="87" pos:column="31">7<pos:position pos:line="87" pos:column="32"/></literal></expr>]<pos:position pos:line="87" pos:column="33"/></index></name></expr></argument>,<argument><expr><literal type="string" pos:line="87" pos:column="34">"altertab_"<pos:position pos:line="87" pos:column="45"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="87" pos:column="46">9<pos:position pos:line="87" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call><operator pos:line="87" pos:column="48">!=<pos:position pos:line="87" pos:column="50"/></operator><literal type="number" pos:line="87" pos:column="50">0<pos:position pos:line="87" pos:column="51"/></literal></expr> )<pos:position pos:line="87" pos:column="53"/></condition><then><block pos:line="87" pos:column="53">{
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">sqlite3ErrorMsg<pos:position pos:line="88" pos:column="20"/></name><argument_list pos:line="88" pos:column="20">(<argument><expr><name pos:line="88" pos:column="21">pParse<pos:position pos:line="88" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="29">"table %s may not be indexed"<pos:position pos:line="88" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="60">pTab<pos:position pos:line="88" pos:column="64"/></name><operator pos:line="88" pos:column="64">-&gt;<pos:position pos:line="88" pos:column="69"/></operator><name pos:line="88" pos:column="66">zName<pos:position pos:line="88" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="73"/></expr_stmt>
    <goto pos:line="89" pos:column="5">goto <name pos:line="89" pos:column="10">exit_create_index<pos:position pos:line="89" pos:column="27"/></name>;<pos:position pos:line="89" pos:column="28"/></goto>
  }<pos:position pos:line="90" pos:column="4"/></block></then></if>
<cpp:ifndef pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">ifndef<pos:position pos:line="91" pos:column="8"/></cpp:directive> <name pos:line="91" pos:column="9">SQLITE_OMIT_VIEW<pos:position pos:line="91" pos:column="25"/></name></cpp:ifndef>
  <if pos:line="92" pos:column="3">if<condition pos:line="92" pos:column="5">( <expr><name><name pos:line="92" pos:column="7">pTab<pos:position pos:line="92" pos:column="11"/></name><operator pos:line="92" pos:column="11">-&gt;<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="13">pSelect<pos:position pos:line="92" pos:column="20"/></name></name></expr> )<pos:position pos:line="92" pos:column="22"/></condition><then><block pos:line="92" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">sqlite3ErrorMsg<pos:position pos:line="93" pos:column="20"/></name><argument_list pos:line="93" pos:column="20">(<argument><expr><name pos:line="93" pos:column="21">pParse<pos:position pos:line="93" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="29">"views may not be indexed"<pos:position pos:line="93" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="57"/></expr_stmt>
    <goto pos:line="94" pos:column="5">goto <name pos:line="94" pos:column="10">exit_create_index<pos:position pos:line="94" pos:column="27"/></name>;<pos:position pos:line="94" pos:column="28"/></goto>
  }<pos:position pos:line="95" pos:column="4"/></block></then></if>
<cpp:endif pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">endif<pos:position pos:line="96" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">ifndef<pos:position pos:line="97" pos:column="8"/></cpp:directive> <name pos:line="97" pos:column="9">SQLITE_OMIT_VIRTUALTABLE<pos:position pos:line="97" pos:column="33"/></name></cpp:ifndef>
  <if pos:line="98" pos:column="3">if<condition pos:line="98" pos:column="5">( <expr><call><name pos:line="98" pos:column="7">IsVirtual<pos:position pos:line="98" pos:column="16"/></name><argument_list pos:line="98" pos:column="16">(<argument><expr><name pos:line="98" pos:column="17">pTab<pos:position pos:line="98" pos:column="21"/></name></expr></argument>)<pos:position pos:line="98" pos:column="22"/></argument_list></call></expr> )<pos:position pos:line="98" pos:column="24"/></condition><then><block pos:line="98" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">sqlite3ErrorMsg<pos:position pos:line="99" pos:column="20"/></name><argument_list pos:line="99" pos:column="20">(<argument><expr><name pos:line="99" pos:column="21">pParse<pos:position pos:line="99" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="29">"virtual tables may not be indexed"<pos:position pos:line="99" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="66"/></expr_stmt>
    <goto pos:line="100" pos:column="5">goto <name pos:line="100" pos:column="10">exit_create_index<pos:position pos:line="100" pos:column="27"/></name>;<pos:position pos:line="100" pos:column="28"/></goto>
  }<pos:position pos:line="101" pos:column="4"/></block></then></if>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif<pos:position pos:line="102" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="104" pos:column="3">/*
  ** Find the name of the index.  Make sure there is not already another
  ** index or table with the same name.  
  **
  ** Exception:  If we are reading the names of permanent indices from the
  ** sqlite_master table (because some other process changed the schema) and
  ** one of the index names collides with the name of a temporary table or
  ** index, then we will continue to process this index.
  **
  ** If pName==0 it means that we are
  ** dealing with a primary key or UNIQUE constraint.  We have to invent our
  ** own name.
  */</comment>
  <if pos:line="117" pos:column="3">if<condition pos:line="117" pos:column="5">( <expr><name pos:line="117" pos:column="7">pName<pos:position pos:line="117" pos:column="12"/></name></expr> )<pos:position pos:line="117" pos:column="14"/></condition><then><block pos:line="117" pos:column="14">{
    <expr_stmt><expr><name pos:line="118" pos:column="5">zName<pos:position pos:line="118" pos:column="10"/></name> <operator pos:line="118" pos:column="11">=<pos:position pos:line="118" pos:column="12"/></operator> <call><name pos:line="118" pos:column="13">sqlite3NameFromToken<pos:position pos:line="118" pos:column="33"/></name><argument_list pos:line="118" pos:column="33">(<argument><expr><name pos:line="118" pos:column="34">db<pos:position pos:line="118" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="38">pName<pos:position pos:line="118" pos:column="43"/></name></expr></argument>)<pos:position pos:line="118" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="45"/></expr_stmt>
    <if pos:line="119" pos:column="5">if<condition pos:line="119" pos:column="7">( <expr><name pos:line="119" pos:column="9">zName<pos:position pos:line="119" pos:column="14"/></name><operator pos:line="119" pos:column="14">==<pos:position pos:line="119" pos:column="16"/></operator><literal type="number" pos:line="119" pos:column="16">0<pos:position pos:line="119" pos:column="17"/></literal></expr> )<pos:position pos:line="119" pos:column="19"/></condition><then pos:line="119" pos:column="19"> <block type="pseudo"><goto pos:line="119" pos:column="20">goto <name pos:line="119" pos:column="25">exit_create_index<pos:position pos:line="119" pos:column="42"/></name>;<pos:position pos:line="119" pos:column="43"/></goto></block></then></if>
    <if pos:line="120" pos:column="5">if<condition pos:line="120" pos:column="7">( <expr><name pos:line="120" pos:column="9">SQLITE_OK<pos:position pos:line="120" pos:column="18"/></name><operator pos:line="120" pos:column="18">!=<pos:position pos:line="120" pos:column="20"/></operator><call><name pos:line="120" pos:column="20">sqlite3CheckObjectName<pos:position pos:line="120" pos:column="42"/></name><argument_list pos:line="120" pos:column="42">(<argument><expr><name pos:line="120" pos:column="43">pParse<pos:position pos:line="120" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="51">zName<pos:position pos:line="120" pos:column="56"/></name></expr></argument>)<pos:position pos:line="120" pos:column="57"/></argument_list></call></expr> )<pos:position pos:line="120" pos:column="59"/></condition><then><block pos:line="120" pos:column="59">{
      <goto pos:line="121" pos:column="7">goto <name pos:line="121" pos:column="12">exit_create_index<pos:position pos:line="121" pos:column="29"/></name>;<pos:position pos:line="121" pos:column="30"/></goto>
    }<pos:position pos:line="122" pos:column="6"/></block></then></if>
    <if pos:line="123" pos:column="5">if<condition pos:line="123" pos:column="7">( <expr><operator pos:line="123" pos:column="9">!<pos:position pos:line="123" pos:column="10"/></operator><name><name pos:line="123" pos:column="10">db<pos:position pos:line="123" pos:column="12"/></name><operator pos:line="123" pos:column="12">-&gt;<pos:position pos:line="123" pos:column="17"/></operator><name pos:line="123" pos:column="14">init<pos:position pos:line="123" pos:column="18"/></name><operator pos:line="123" pos:column="18">.<pos:position pos:line="123" pos:column="19"/></operator><name pos:line="123" pos:column="19">busy<pos:position pos:line="123" pos:column="23"/></name></name></expr> )<pos:position pos:line="123" pos:column="25"/></condition><then><block pos:line="123" pos:column="25">{
      <if pos:line="124" pos:column="7">if<condition pos:line="124" pos:column="9">( <expr><call><name pos:line="124" pos:column="11">sqlite3FindTable<pos:position pos:line="124" pos:column="27"/></name><argument_list pos:line="124" pos:column="27">(<argument><expr><name pos:line="124" pos:column="28">db<pos:position pos:line="124" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="32">zName<pos:position pos:line="124" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="39">0<pos:position pos:line="124" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="41"/></argument_list></call><operator pos:line="124" pos:column="41">!=<pos:position pos:line="124" pos:column="43"/></operator><literal type="number" pos:line="124" pos:column="43">0<pos:position pos:line="124" pos:column="44"/></literal></expr> )<pos:position pos:line="124" pos:column="46"/></condition><then><block pos:line="124" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="125" pos:column="9">sqlite3ErrorMsg<pos:position pos:line="125" pos:column="24"/></name><argument_list pos:line="125" pos:column="24">(<argument><expr><name pos:line="125" pos:column="25">pParse<pos:position pos:line="125" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="33">"there is already a table named %s"<pos:position pos:line="125" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="70">zName<pos:position pos:line="125" pos:column="75"/></name></expr></argument>)<pos:position pos:line="125" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="77"/></expr_stmt>
        <goto pos:line="126" pos:column="9">goto <name pos:line="126" pos:column="14">exit_create_index<pos:position pos:line="126" pos:column="31"/></name>;<pos:position pos:line="126" pos:column="32"/></goto>
      }<pos:position pos:line="127" pos:column="8"/></block></then></if>
    }<pos:position pos:line="128" pos:column="6"/></block></then></if>
    <if pos:line="129" pos:column="5">if<condition pos:line="129" pos:column="7">( <expr><call><name pos:line="129" pos:column="9">sqlite3FindIndex<pos:position pos:line="129" pos:column="25"/></name><argument_list pos:line="129" pos:column="25">(<argument><expr><name pos:line="129" pos:column="26">db<pos:position pos:line="129" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="30">zName<pos:position pos:line="129" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="37">pDb<pos:position pos:line="129" pos:column="40"/></name><operator pos:line="129" pos:column="40">-&gt;<pos:position pos:line="129" pos:column="45"/></operator><name pos:line="129" pos:column="42">zName<pos:position pos:line="129" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="48"/></argument_list></call><operator pos:line="129" pos:column="48">!=<pos:position pos:line="129" pos:column="50"/></operator><literal type="number" pos:line="129" pos:column="50">0<pos:position pos:line="129" pos:column="51"/></literal></expr> )<pos:position pos:line="129" pos:column="53"/></condition><then><block pos:line="129" pos:column="53">{
      <if pos:line="130" pos:column="7">if<condition pos:line="130" pos:column="9">( <expr><operator pos:line="130" pos:column="11">!<pos:position pos:line="130" pos:column="12"/></operator><name pos:line="130" pos:column="12">ifNotExist<pos:position pos:line="130" pos:column="22"/></name></expr> )<pos:position pos:line="130" pos:column="24"/></condition><then><block pos:line="130" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="131" pos:column="9">sqlite3ErrorMsg<pos:position pos:line="131" pos:column="24"/></name><argument_list pos:line="131" pos:column="24">(<argument><expr><name pos:line="131" pos:column="25">pParse<pos:position pos:line="131" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="33">"index %s already exists"<pos:position pos:line="131" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="60">zName<pos:position pos:line="131" pos:column="65"/></name></expr></argument>)<pos:position pos:line="131" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="67"/></expr_stmt>
      }<pos:position pos:line="132" pos:column="8"/></block></then></if>
      <goto pos:line="133" pos:column="7">goto <name pos:line="133" pos:column="12">exit_create_index<pos:position pos:line="133" pos:column="29"/></name>;<pos:position pos:line="133" pos:column="30"/></goto>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if>
  }<pos:position pos:line="135" pos:column="4"/></block></then><else pos:line="135" pos:column="4">else<block pos:line="135" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="136" pos:column="5">int<pos:position pos:line="136" pos:column="8"/></name></type> <name pos:line="136" pos:column="9">n<pos:position pos:line="136" pos:column="10"/></name></decl>;<pos:position pos:line="136" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="137" pos:column="5">Index<pos:position pos:line="137" pos:column="10"/></name> <modifier pos:line="137" pos:column="11">*<pos:position pos:line="137" pos:column="12"/></modifier></type><name pos:line="137" pos:column="12">pLoop<pos:position pos:line="137" pos:column="17"/></name></decl>;<pos:position pos:line="137" pos:column="18"/></decl_stmt>
    <for pos:line="138" pos:column="5">for<control pos:line="138" pos:column="8">(<init><expr><name pos:line="138" pos:column="9">pLoop<pos:position pos:line="138" pos:column="14"/></name><operator pos:line="138" pos:column="14">=<pos:position pos:line="138" pos:column="15"/></operator><name><name pos:line="138" pos:column="15">pTab<pos:position pos:line="138" pos:column="19"/></name><operator pos:line="138" pos:column="19">-&gt;<pos:position pos:line="138" pos:column="24"/></operator><name pos:line="138" pos:column="21">pIndex<pos:position pos:line="138" pos:column="27"/></name></name></expr><operator pos:line="138" pos:column="27">,<pos:position pos:line="138" pos:column="28"/></operator> <expr><name pos:line="138" pos:column="29">n<pos:position pos:line="138" pos:column="30"/></name><operator pos:line="138" pos:column="30">=<pos:position pos:line="138" pos:column="31"/></operator><literal type="number" pos:line="138" pos:column="31">1<pos:position pos:line="138" pos:column="32"/></literal></expr>;<pos:position pos:line="138" pos:column="33"/></init> <condition><expr><name pos:line="138" pos:column="34">pLoop<pos:position pos:line="138" pos:column="39"/></name></expr>;<pos:position pos:line="138" pos:column="40"/></condition> <incr><expr><name pos:line="138" pos:column="41">pLoop<pos:position pos:line="138" pos:column="46"/></name><operator pos:line="138" pos:column="46">=<pos:position pos:line="138" pos:column="47"/></operator><name><name pos:line="138" pos:column="47">pLoop<pos:position pos:line="138" pos:column="52"/></name><operator pos:line="138" pos:column="52">-&gt;<pos:position pos:line="138" pos:column="57"/></operator><name pos:line="138" pos:column="54">pNext<pos:position pos:line="138" pos:column="59"/></name></name></expr><operator pos:line="138" pos:column="59">,<pos:position pos:line="138" pos:column="60"/></operator> <expr><name pos:line="138" pos:column="61">n<pos:position pos:line="138" pos:column="62"/></name><operator pos:line="138" pos:column="62">++<pos:position pos:line="138" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="138" pos:column="65"/></control><block pos:line="138" pos:column="65">{}<pos:position pos:line="138" pos:column="67"/></block></for>
    <expr_stmt><expr><name pos:line="139" pos:column="5">zName<pos:position pos:line="139" pos:column="10"/></name> <operator pos:line="139" pos:column="11">=<pos:position pos:line="139" pos:column="12"/></operator> <call><name pos:line="139" pos:column="13">sqlite3MPrintf<pos:position pos:line="139" pos:column="27"/></name><argument_list pos:line="139" pos:column="27">(<argument><expr><name pos:line="139" pos:column="28">db<pos:position pos:line="139" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="32">"sqlite_autoindex_%s_%d"<pos:position pos:line="139" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="139" pos:column="58">pTab<pos:position pos:line="139" pos:column="62"/></name><operator pos:line="139" pos:column="62">-&gt;<pos:position pos:line="139" pos:column="67"/></operator><name pos:line="139" pos:column="64">zName<pos:position pos:line="139" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="71">n<pos:position pos:line="139" pos:column="72"/></name></expr></argument>)<pos:position pos:line="139" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="74"/></expr_stmt>
    <if pos:line="140" pos:column="5">if<condition pos:line="140" pos:column="7">( <expr><name pos:line="140" pos:column="9">zName<pos:position pos:line="140" pos:column="14"/></name><operator pos:line="140" pos:column="14">==<pos:position pos:line="140" pos:column="16"/></operator><literal type="number" pos:line="140" pos:column="16">0<pos:position pos:line="140" pos:column="17"/></literal></expr> )<pos:position pos:line="140" pos:column="19"/></condition><then><block pos:line="140" pos:column="19">{
      <goto pos:line="141" pos:column="7">goto <name pos:line="141" pos:column="12">exit_create_index<pos:position pos:line="141" pos:column="29"/></name>;<pos:position pos:line="141" pos:column="30"/></goto>
    }<pos:position pos:line="142" pos:column="6"/></block></then></if>
  }<pos:position pos:line="143" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="145" pos:column="3">/* Check for authorization to create an index.
  */</comment>
<cpp:ifndef pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">ifndef<pos:position pos:line="147" pos:column="8"/></cpp:directive> <name pos:line="147" pos:column="9">SQLITE_OMIT_AUTHORIZATION<pos:position pos:line="147" pos:column="34"/></name></cpp:ifndef>
  <block pos:line="148" pos:column="3">{
    <decl_stmt><decl><type><specifier pos:line="149" pos:column="5">const<pos:position pos:line="149" pos:column="10"/></specifier> <name pos:line="149" pos:column="11">char<pos:position pos:line="149" pos:column="15"/></name> <modifier pos:line="149" pos:column="16">*<pos:position pos:line="149" pos:column="17"/></modifier></type><name pos:line="149" pos:column="17">zDb<pos:position pos:line="149" pos:column="20"/></name> <init pos:line="149" pos:column="21">= <expr><name><name pos:line="149" pos:column="23">pDb<pos:position pos:line="149" pos:column="26"/></name><operator pos:line="149" pos:column="26">-&gt;<pos:position pos:line="149" pos:column="31"/></operator><name pos:line="149" pos:column="28">zName<pos:position pos:line="149" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="149" pos:column="34"/></decl_stmt>
    <if pos:line="150" pos:column="5">if<condition pos:line="150" pos:column="7">( <expr><call><name pos:line="150" pos:column="9">sqlite3AuthCheck<pos:position pos:line="150" pos:column="25"/></name><argument_list pos:line="150" pos:column="25">(<argument><expr><name pos:line="150" pos:column="26">pParse<pos:position pos:line="150" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="34">SQLITE_INSERT<pos:position pos:line="150" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="150" pos:column="49">SCHEMA_TABLE<pos:position pos:line="150" pos:column="61"/></name><argument_list pos:line="150" pos:column="61">(<argument><expr><name pos:line="150" pos:column="62">iDb<pos:position pos:line="150" pos:column="65"/></name></expr></argument>)<pos:position pos:line="150" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="150" pos:column="68">0<pos:position pos:line="150" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="150" pos:column="71">zDb<pos:position pos:line="150" pos:column="74"/></name></expr></argument>)<pos:position pos:line="150" pos:column="75"/></argument_list></call></expr> )<pos:position pos:line="150" pos:column="77"/></condition><then><block pos:line="150" pos:column="77">{
      <goto pos:line="151" pos:column="7">goto <name pos:line="151" pos:column="12">exit_create_index<pos:position pos:line="151" pos:column="29"/></name>;<pos:position pos:line="151" pos:column="30"/></goto>
    }<pos:position pos:line="152" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="153" pos:column="5">i<pos:position pos:line="153" pos:column="6"/></name> <operator pos:line="153" pos:column="7">=<pos:position pos:line="153" pos:column="8"/></operator> <name pos:line="153" pos:column="9">SQLITE_CREATE_INDEX<pos:position pos:line="153" pos:column="28"/></name></expr>;<pos:position pos:line="153" pos:column="29"/></expr_stmt>
    <if pos:line="154" pos:column="5">if<condition pos:line="154" pos:column="7">( <expr><operator pos:line="154" pos:column="9">!<pos:position pos:line="154" pos:column="10"/></operator><name pos:line="154" pos:column="10">OMIT_TEMPDB<pos:position pos:line="154" pos:column="21"/></name> <operator pos:line="154" pos:column="22">&amp;&amp;<pos:position pos:line="154" pos:column="32"/></operator> <name pos:line="154" pos:column="25">iDb<pos:position pos:line="154" pos:column="28"/></name><operator pos:line="154" pos:column="28">==<pos:position pos:line="154" pos:column="30"/></operator><literal type="number" pos:line="154" pos:column="30">1<pos:position pos:line="154" pos:column="31"/></literal></expr> )<pos:position pos:line="154" pos:column="33"/></condition><then pos:line="154" pos:column="33"> <block type="pseudo"><expr_stmt><expr><name pos:line="154" pos:column="34">i<pos:position pos:line="154" pos:column="35"/></name> <operator pos:line="154" pos:column="36">=<pos:position pos:line="154" pos:column="37"/></operator> <name pos:line="154" pos:column="38">SQLITE_CREATE_TEMP_INDEX<pos:position pos:line="154" pos:column="62"/></name></expr>;<pos:position pos:line="154" pos:column="63"/></expr_stmt></block></then></if>
    <if pos:line="155" pos:column="5">if<condition pos:line="155" pos:column="7">( <expr><call><name pos:line="155" pos:column="9">sqlite3AuthCheck<pos:position pos:line="155" pos:column="25"/></name><argument_list pos:line="155" pos:column="25">(<argument><expr><name pos:line="155" pos:column="26">pParse<pos:position pos:line="155" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="34">i<pos:position pos:line="155" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="37">zName<pos:position pos:line="155" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="155" pos:column="44">pTab<pos:position pos:line="155" pos:column="48"/></name><operator pos:line="155" pos:column="48">-&gt;<pos:position pos:line="155" pos:column="53"/></operator><name pos:line="155" pos:column="50">zName<pos:position pos:line="155" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="57">zDb<pos:position pos:line="155" pos:column="60"/></name></expr></argument>)<pos:position pos:line="155" pos:column="61"/></argument_list></call></expr> )<pos:position pos:line="155" pos:column="63"/></condition><then><block pos:line="155" pos:column="63">{
      <goto pos:line="156" pos:column="7">goto <name pos:line="156" pos:column="12">exit_create_index<pos:position pos:line="156" pos:column="29"/></name>;<pos:position pos:line="156" pos:column="30"/></goto>
    }<pos:position pos:line="157" pos:column="6"/></block></then></if>
  }<pos:position pos:line="158" pos:column="4"/></block>
<cpp:endif pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">endif<pos:position pos:line="159" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="161" pos:column="3">/* If pList==0, it means this routine was called to make a primary
  ** key out of the last column added to the table under construction.
  ** So create a fake list to simulate this.
  */</comment>
  <if pos:line="165" pos:column="3">if<condition pos:line="165" pos:column="5">( <expr><name pos:line="165" pos:column="7">pList<pos:position pos:line="165" pos:column="12"/></name><operator pos:line="165" pos:column="12">==<pos:position pos:line="165" pos:column="14"/></operator><literal type="number" pos:line="165" pos:column="14">0<pos:position pos:line="165" pos:column="15"/></literal></expr> )<pos:position pos:line="165" pos:column="17"/></condition><then><block pos:line="165" pos:column="17">{
    <expr_stmt><expr><name><name pos:line="166" pos:column="5">nullId<pos:position pos:line="166" pos:column="11"/></name><operator pos:line="166" pos:column="11">.<pos:position pos:line="166" pos:column="12"/></operator><name pos:line="166" pos:column="12">z<pos:position pos:line="166" pos:column="13"/></name></name> <operator pos:line="166" pos:column="14">=<pos:position pos:line="166" pos:column="15"/></operator> <name><name pos:line="166" pos:column="16">pTab<pos:position pos:line="166" pos:column="20"/></name><operator pos:line="166" pos:column="20">-&gt;<pos:position pos:line="166" pos:column="25"/></operator><name pos:line="166" pos:column="22">aCol<pos:position pos:line="166" pos:column="26"/></name><index pos:line="166" pos:column="26">[<expr><name><name pos:line="166" pos:column="27">pTab<pos:position pos:line="166" pos:column="31"/></name><operator pos:line="166" pos:column="31">-&gt;<pos:position pos:line="166" pos:column="36"/></operator><name pos:line="166" pos:column="33">nCol<pos:position pos:line="166" pos:column="37"/></name></name><operator pos:line="166" pos:column="37">-<pos:position pos:line="166" pos:column="38"/></operator><literal type="number" pos:line="166" pos:column="38">1<pos:position pos:line="166" pos:column="39"/></literal></expr>]<pos:position pos:line="166" pos:column="40"/></index></name><operator pos:line="166" pos:column="40">.<pos:position pos:line="166" pos:column="41"/></operator><name pos:line="166" pos:column="41">zName<pos:position pos:line="166" pos:column="46"/></name></expr>;<pos:position pos:line="166" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="167" pos:column="5">nullId<pos:position pos:line="167" pos:column="11"/></name><operator pos:line="167" pos:column="11">.<pos:position pos:line="167" pos:column="12"/></operator><name pos:line="167" pos:column="12">n<pos:position pos:line="167" pos:column="13"/></name></name> <operator pos:line="167" pos:column="14">=<pos:position pos:line="167" pos:column="15"/></operator> <call><name pos:line="167" pos:column="16">sqlite3Strlen30<pos:position pos:line="167" pos:column="31"/></name><argument_list pos:line="167" pos:column="31">(<argument><expr><operator pos:line="167" pos:column="32">(<pos:position pos:line="167" pos:column="33"/></operator><name pos:line="167" pos:column="33">char<pos:position pos:line="167" pos:column="37"/></name><operator pos:line="167" pos:column="37">*<pos:position pos:line="167" pos:column="38"/></operator><operator pos:line="167" pos:column="38">)<pos:position pos:line="167" pos:column="39"/></operator><name><name pos:line="167" pos:column="39">nullId<pos:position pos:line="167" pos:column="45"/></name><operator pos:line="167" pos:column="45">.<pos:position pos:line="167" pos:column="46"/></operator><name pos:line="167" pos:column="46">z<pos:position pos:line="167" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="167" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="168" pos:column="5">pList<pos:position pos:line="168" pos:column="10"/></name> <operator pos:line="168" pos:column="11">=<pos:position pos:line="168" pos:column="12"/></operator> <call><name pos:line="168" pos:column="13">sqlite3ExprListAppend<pos:position pos:line="168" pos:column="34"/></name><argument_list pos:line="168" pos:column="34">(<argument><expr><name pos:line="168" pos:column="35">pParse<pos:position pos:line="168" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="43">0<pos:position pos:line="168" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="46">0<pos:position pos:line="168" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="49"/></expr_stmt>
    <if pos:line="169" pos:column="5">if<condition pos:line="169" pos:column="7">( <expr><name pos:line="169" pos:column="9">pList<pos:position pos:line="169" pos:column="14"/></name><operator pos:line="169" pos:column="14">==<pos:position pos:line="169" pos:column="16"/></operator><literal type="number" pos:line="169" pos:column="16">0<pos:position pos:line="169" pos:column="17"/></literal></expr> )<pos:position pos:line="169" pos:column="19"/></condition><then pos:line="169" pos:column="19"> <block type="pseudo"><goto pos:line="169" pos:column="20">goto <name pos:line="169" pos:column="25">exit_create_index<pos:position pos:line="169" pos:column="42"/></name>;<pos:position pos:line="169" pos:column="43"/></goto></block></then></if>
    <expr_stmt><expr><call><name pos:line="170" pos:column="5">sqlite3ExprListSetName<pos:position pos:line="170" pos:column="27"/></name><argument_list pos:line="170" pos:column="27">(<argument><expr><name pos:line="170" pos:column="28">pParse<pos:position pos:line="170" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="36">pList<pos:position pos:line="170" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="170" pos:column="43">&amp;<pos:position pos:line="170" pos:column="48"/></operator><name pos:line="170" pos:column="44">nullId<pos:position pos:line="170" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="170" pos:column="52">0<pos:position pos:line="170" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="171" pos:column="5">pList<pos:position pos:line="171" pos:column="10"/></name><operator pos:line="171" pos:column="10">-&gt;<pos:position pos:line="171" pos:column="15"/></operator><name pos:line="171" pos:column="12">a<pos:position pos:line="171" pos:column="13"/></name><index pos:line="171" pos:column="13">[<expr><literal type="number" pos:line="171" pos:column="14">0<pos:position pos:line="171" pos:column="15"/></literal></expr>]<pos:position pos:line="171" pos:column="16"/></index></name><operator pos:line="171" pos:column="16">.<pos:position pos:line="171" pos:column="17"/></operator><name pos:line="171" pos:column="17">sortOrder<pos:position pos:line="171" pos:column="26"/></name> <operator pos:line="171" pos:column="27">=<pos:position pos:line="171" pos:column="28"/></operator> <operator pos:line="171" pos:column="29">(<pos:position pos:line="171" pos:column="30"/></operator><name pos:line="171" pos:column="30">u8<pos:position pos:line="171" pos:column="32"/></name><operator pos:line="171" pos:column="32">)<pos:position pos:line="171" pos:column="33"/></operator><name pos:line="171" pos:column="33">sortOrder<pos:position pos:line="171" pos:column="42"/></name></expr>;<pos:position pos:line="171" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="172" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="174" pos:column="3">/* Figure out how many bytes of space are required to store explicitly
  ** specified collation sequence names.
  */</comment>
  <for pos:line="177" pos:column="3">for<control pos:line="177" pos:column="6">(<init><expr><name pos:line="177" pos:column="7">i<pos:position pos:line="177" pos:column="8"/></name><operator pos:line="177" pos:column="8">=<pos:position pos:line="177" pos:column="9"/></operator><literal type="number" pos:line="177" pos:column="9">0<pos:position pos:line="177" pos:column="10"/></literal></expr>;<pos:position pos:line="177" pos:column="11"/></init> <condition><expr><name pos:line="177" pos:column="12">i<pos:position pos:line="177" pos:column="13"/></name><operator pos:line="177" pos:column="13">&lt;<pos:position pos:line="177" pos:column="17"/></operator><name><name pos:line="177" pos:column="14">pList<pos:position pos:line="177" pos:column="19"/></name><operator pos:line="177" pos:column="19">-&gt;<pos:position pos:line="177" pos:column="24"/></operator><name pos:line="177" pos:column="21">nExpr<pos:position pos:line="177" pos:column="26"/></name></name></expr>;<pos:position pos:line="177" pos:column="27"/></condition> <incr><expr><name pos:line="177" pos:column="28">i<pos:position pos:line="177" pos:column="29"/></name><operator pos:line="177" pos:column="29">++<pos:position pos:line="177" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="177" pos:column="32"/></control><block pos:line="177" pos:column="32">{
    <decl_stmt><decl><type><name pos:line="178" pos:column="5">Expr<pos:position pos:line="178" pos:column="9"/></name> <modifier pos:line="178" pos:column="10">*<pos:position pos:line="178" pos:column="11"/></modifier></type><name pos:line="178" pos:column="11">pExpr<pos:position pos:line="178" pos:column="16"/></name> <init pos:line="178" pos:column="17">= <expr><name><name pos:line="178" pos:column="19">pList<pos:position pos:line="178" pos:column="24"/></name><operator pos:line="178" pos:column="24">-&gt;<pos:position pos:line="178" pos:column="29"/></operator><name pos:line="178" pos:column="26">a<pos:position pos:line="178" pos:column="27"/></name><index pos:line="178" pos:column="27">[<expr><name pos:line="178" pos:column="28">i<pos:position pos:line="178" pos:column="29"/></name></expr>]<pos:position pos:line="178" pos:column="30"/></index></name><operator pos:line="178" pos:column="30">.<pos:position pos:line="178" pos:column="31"/></operator><name pos:line="178" pos:column="31">pExpr<pos:position pos:line="178" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="178" pos:column="37"/></decl_stmt>
    <if pos:line="179" pos:column="5">if<condition pos:line="179" pos:column="7">( <expr><name pos:line="179" pos:column="9">pExpr<pos:position pos:line="179" pos:column="14"/></name></expr> )<pos:position pos:line="179" pos:column="16"/></condition><then><block pos:line="179" pos:column="16">{
      <decl_stmt><decl><type><name pos:line="180" pos:column="7">CollSeq<pos:position pos:line="180" pos:column="14"/></name> <modifier pos:line="180" pos:column="15">*<pos:position pos:line="180" pos:column="16"/></modifier></type><name pos:line="180" pos:column="16">pColl<pos:position pos:line="180" pos:column="21"/></name> <init pos:line="180" pos:column="22">= <expr><name><name pos:line="180" pos:column="24">pExpr<pos:position pos:line="180" pos:column="29"/></name><operator pos:line="180" pos:column="29">-&gt;<pos:position pos:line="180" pos:column="34"/></operator><name pos:line="180" pos:column="31">pColl<pos:position pos:line="180" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="180" pos:column="37"/></decl_stmt>
      <comment type="block" pos:line="181" pos:column="7">/* Either pColl!=0 or there was an OOM failure.  But if an OOM
      ** failure we have quit before reaching this point. */</comment>
      <if pos:line="183" pos:column="7">if<condition pos:line="183" pos:column="9">( <expr><call><name pos:line="183" pos:column="11">ALWAYS<pos:position pos:line="183" pos:column="17"/></name><argument_list pos:line="183" pos:column="17">(<argument><expr><name pos:line="183" pos:column="18">pColl<pos:position pos:line="183" pos:column="23"/></name></expr></argument>)<pos:position pos:line="183" pos:column="24"/></argument_list></call></expr> )<pos:position pos:line="183" pos:column="26"/></condition><then><block pos:line="183" pos:column="26">{
        <expr_stmt><expr><name pos:line="184" pos:column="9">nExtra<pos:position pos:line="184" pos:column="15"/></name> <operator pos:line="184" pos:column="16">+=<pos:position pos:line="184" pos:column="18"/></operator> <operator pos:line="184" pos:column="19">(<pos:position pos:line="184" pos:column="20"/></operator><literal type="number" pos:line="184" pos:column="20">1<pos:position pos:line="184" pos:column="21"/></literal> <operator pos:line="184" pos:column="22">+<pos:position pos:line="184" pos:column="23"/></operator> <call><name pos:line="184" pos:column="24">sqlite3Strlen30<pos:position pos:line="184" pos:column="39"/></name><argument_list pos:line="184" pos:column="39">(<argument><expr><name><name pos:line="184" pos:column="40">pColl<pos:position pos:line="184" pos:column="45"/></name><operator pos:line="184" pos:column="45">-&gt;<pos:position pos:line="184" pos:column="50"/></operator><name pos:line="184" pos:column="47">zName<pos:position pos:line="184" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="184" pos:column="53"/></argument_list></call><operator pos:line="184" pos:column="53">)<pos:position pos:line="184" pos:column="54"/></operator></expr>;<pos:position pos:line="184" pos:column="55"/></expr_stmt>
      }<pos:position pos:line="185" pos:column="8"/></block></then></if>
    }<pos:position pos:line="186" pos:column="6"/></block></then></if>
  }<pos:position pos:line="187" pos:column="4"/></block></for>

  <comment type="block" pos:line="189" pos:column="3">/* 
  ** Allocate the index structure. 
  */</comment>
  <expr_stmt><expr><name pos:line="192" pos:column="3">nName<pos:position pos:line="192" pos:column="8"/></name> <operator pos:line="192" pos:column="9">=<pos:position pos:line="192" pos:column="10"/></operator> <call><name pos:line="192" pos:column="11">sqlite3Strlen30<pos:position pos:line="192" pos:column="26"/></name><argument_list pos:line="192" pos:column="26">(<argument><expr><name pos:line="192" pos:column="27">zName<pos:position pos:line="192" pos:column="32"/></name></expr></argument>)<pos:position pos:line="192" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="193" pos:column="3">nCol<pos:position pos:line="193" pos:column="7"/></name> <operator pos:line="193" pos:column="8">=<pos:position pos:line="193" pos:column="9"/></operator> <name><name pos:line="193" pos:column="10">pList<pos:position pos:line="193" pos:column="15"/></name><operator pos:line="193" pos:column="15">-&gt;<pos:position pos:line="193" pos:column="20"/></operator><name pos:line="193" pos:column="17">nExpr<pos:position pos:line="193" pos:column="22"/></name></name></expr>;<pos:position pos:line="193" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="194" pos:column="3">pIndex<pos:position pos:line="194" pos:column="9"/></name> <operator pos:line="194" pos:column="10">=<pos:position pos:line="194" pos:column="11"/></operator> <call><name pos:line="194" pos:column="12">sqlite3DbMallocZero<pos:position pos:line="194" pos:column="31"/></name><argument_list pos:line="194" pos:column="31">(<argument><expr><name pos:line="194" pos:column="32">db<pos:position pos:line="194" pos:column="34"/></name></expr></argument>, 
      <argument><expr><sizeof pos:line="195" pos:column="7">sizeof<argument_list pos:line="195" pos:column="13">(<argument><expr><name pos:line="195" pos:column="14">Index<pos:position pos:line="195" pos:column="19"/></name></expr></argument>)<pos:position pos:line="195" pos:column="20"/></argument_list></sizeof> <operator pos:line="195" pos:column="21">+<pos:position pos:line="195" pos:column="22"/></operator>              <comment type="block" pos:line="195" pos:column="36">/* Index structure  */</comment>
      <sizeof pos:line="196" pos:column="7">sizeof<argument_list pos:line="196" pos:column="13">(<argument><expr><name pos:line="196" pos:column="14">int<pos:position pos:line="196" pos:column="17"/></name></expr></argument>)<pos:position pos:line="196" pos:column="18"/></argument_list></sizeof><operator pos:line="196" pos:column="18">*<pos:position pos:line="196" pos:column="19"/></operator><name pos:line="196" pos:column="19">nCol<pos:position pos:line="196" pos:column="23"/></name> <operator pos:line="196" pos:column="24">+<pos:position pos:line="196" pos:column="25"/></operator>           <comment type="block" pos:line="196" pos:column="36">/* Index.aiColumn   */</comment>
      <sizeof pos:line="197" pos:column="7">sizeof<argument_list pos:line="197" pos:column="13">(<argument><expr><name pos:line="197" pos:column="14">int<pos:position pos:line="197" pos:column="17"/></name></expr></argument>)<pos:position pos:line="197" pos:column="18"/></argument_list></sizeof><operator pos:line="197" pos:column="18">*<pos:position pos:line="197" pos:column="19"/></operator><operator pos:line="197" pos:column="19">(<pos:position pos:line="197" pos:column="20"/></operator><name pos:line="197" pos:column="20">nCol<pos:position pos:line="197" pos:column="24"/></name><operator pos:line="197" pos:column="24">+<pos:position pos:line="197" pos:column="25"/></operator><literal type="number" pos:line="197" pos:column="25">1<pos:position pos:line="197" pos:column="26"/></literal><operator pos:line="197" pos:column="26">)<pos:position pos:line="197" pos:column="27"/></operator> <operator pos:line="197" pos:column="28">+<pos:position pos:line="197" pos:column="29"/></operator>       <comment type="block" pos:line="197" pos:column="36">/* Index.aiRowEst   */</comment>
      <sizeof pos:line="198" pos:column="7">sizeof<argument_list pos:line="198" pos:column="13">(<argument><expr><name pos:line="198" pos:column="14">char<pos:position pos:line="198" pos:column="18"/></name> <operator pos:line="198" pos:column="19">*<pos:position pos:line="198" pos:column="20"/></operator></expr></argument>)<pos:position pos:line="198" pos:column="21"/></argument_list></sizeof><operator pos:line="198" pos:column="21">*<pos:position pos:line="198" pos:column="22"/></operator><name pos:line="198" pos:column="22">nCol<pos:position pos:line="198" pos:column="26"/></name> <operator pos:line="198" pos:column="27">+<pos:position pos:line="198" pos:column="28"/></operator>        <comment type="block" pos:line="198" pos:column="36">/* Index.azColl     */</comment>
      <sizeof pos:line="199" pos:column="7">sizeof<argument_list pos:line="199" pos:column="13">(<argument><expr><name pos:line="199" pos:column="14">u8<pos:position pos:line="199" pos:column="16"/></name></expr></argument>)<pos:position pos:line="199" pos:column="17"/></argument_list></sizeof><operator pos:line="199" pos:column="17">*<pos:position pos:line="199" pos:column="18"/></operator><name pos:line="199" pos:column="18">nCol<pos:position pos:line="199" pos:column="22"/></name> <operator pos:line="199" pos:column="23">+<pos:position pos:line="199" pos:column="24"/></operator>            <comment type="block" pos:line="199" pos:column="36">/* Index.aSortOrder */</comment>
      <name pos:line="200" pos:column="7">nName<pos:position pos:line="200" pos:column="12"/></name> <operator pos:line="200" pos:column="13">+<pos:position pos:line="200" pos:column="14"/></operator> <literal type="number" pos:line="200" pos:column="15">1<pos:position pos:line="200" pos:column="16"/></literal> <operator pos:line="200" pos:column="17">+<pos:position pos:line="200" pos:column="18"/></operator>                  <comment type="block" pos:line="200" pos:column="36">/* Index.zName      */</comment>
      <name pos:line="201" pos:column="7">nExtra<pos:position pos:line="201" pos:column="13"/></name></expr></argument>                       <comment type="block" pos:line="201" pos:column="36">/* Collation sequence names */</comment>
  )<pos:position pos:line="202" pos:column="4"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="5"/></expr_stmt>
  <if pos:line="203" pos:column="3">if<condition pos:line="203" pos:column="5">( <expr><name><name pos:line="203" pos:column="7">db<pos:position pos:line="203" pos:column="9"/></name><operator pos:line="203" pos:column="9">-&gt;<pos:position pos:line="203" pos:column="14"/></operator><name pos:line="203" pos:column="11">mallocFailed<pos:position pos:line="203" pos:column="23"/></name></name></expr> )<pos:position pos:line="203" pos:column="25"/></condition><then><block pos:line="203" pos:column="25">{
    <goto pos:line="204" pos:column="5">goto <name pos:line="204" pos:column="10">exit_create_index<pos:position pos:line="204" pos:column="27"/></name>;<pos:position pos:line="204" pos:column="28"/></goto>
  }<pos:position pos:line="205" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="206" pos:column="3">pIndex<pos:position pos:line="206" pos:column="9"/></name><operator pos:line="206" pos:column="9">-&gt;<pos:position pos:line="206" pos:column="14"/></operator><name pos:line="206" pos:column="11">azColl<pos:position pos:line="206" pos:column="17"/></name></name> <operator pos:line="206" pos:column="18">=<pos:position pos:line="206" pos:column="19"/></operator> <operator pos:line="206" pos:column="20">(<pos:position pos:line="206" pos:column="21"/></operator><name pos:line="206" pos:column="21">char<pos:position pos:line="206" pos:column="25"/></name><operator pos:line="206" pos:column="25">*<pos:position pos:line="206" pos:column="26"/></operator><operator pos:line="206" pos:column="26">*<pos:position pos:line="206" pos:column="27"/></operator><operator pos:line="206" pos:column="27">)<pos:position pos:line="206" pos:column="28"/></operator><operator pos:line="206" pos:column="28">(<pos:position pos:line="206" pos:column="29"/></operator><operator pos:line="206" pos:column="29">&amp;<pos:position pos:line="206" pos:column="34"/></operator><name><name pos:line="206" pos:column="30">pIndex<pos:position pos:line="206" pos:column="36"/></name><index pos:line="206" pos:column="36">[<expr><literal type="number" pos:line="206" pos:column="37">1<pos:position pos:line="206" pos:column="38"/></literal></expr>]<pos:position pos:line="206" pos:column="39"/></index></name><operator pos:line="206" pos:column="39">)<pos:position pos:line="206" pos:column="40"/></operator></expr>;<pos:position pos:line="206" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="207" pos:column="3">pIndex<pos:position pos:line="207" pos:column="9"/></name><operator pos:line="207" pos:column="9">-&gt;<pos:position pos:line="207" pos:column="14"/></operator><name pos:line="207" pos:column="11">aiColumn<pos:position pos:line="207" pos:column="19"/></name></name> <operator pos:line="207" pos:column="20">=<pos:position pos:line="207" pos:column="21"/></operator> <operator pos:line="207" pos:column="22">(<pos:position pos:line="207" pos:column="23"/></operator><name pos:line="207" pos:column="23">int<pos:position pos:line="207" pos:column="26"/></name> <operator pos:line="207" pos:column="27">*<pos:position pos:line="207" pos:column="28"/></operator><operator pos:line="207" pos:column="28">)<pos:position pos:line="207" pos:column="29"/></operator><operator pos:line="207" pos:column="29">(<pos:position pos:line="207" pos:column="30"/></operator><operator pos:line="207" pos:column="30">&amp;<pos:position pos:line="207" pos:column="35"/></operator><name><name pos:line="207" pos:column="31">pIndex<pos:position pos:line="207" pos:column="37"/></name><operator pos:line="207" pos:column="37">-&gt;<pos:position pos:line="207" pos:column="42"/></operator><name pos:line="207" pos:column="39">azColl<pos:position pos:line="207" pos:column="45"/></name><index pos:line="207" pos:column="45">[<expr><name pos:line="207" pos:column="46">nCol<pos:position pos:line="207" pos:column="50"/></name></expr>]<pos:position pos:line="207" pos:column="51"/></index></name><operator pos:line="207" pos:column="51">)<pos:position pos:line="207" pos:column="52"/></operator></expr>;<pos:position pos:line="207" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="208" pos:column="3">pIndex<pos:position pos:line="208" pos:column="9"/></name><operator pos:line="208" pos:column="9">-&gt;<pos:position pos:line="208" pos:column="14"/></operator><name pos:line="208" pos:column="11">aiRowEst<pos:position pos:line="208" pos:column="19"/></name></name> <operator pos:line="208" pos:column="20">=<pos:position pos:line="208" pos:column="21"/></operator> <operator pos:line="208" pos:column="22">(<pos:position pos:line="208" pos:column="23"/></operator><name pos:line="208" pos:column="23">unsigned<pos:position pos:line="208" pos:column="31"/></name> <operator pos:line="208" pos:column="32">*<pos:position pos:line="208" pos:column="33"/></operator><operator pos:line="208" pos:column="33">)<pos:position pos:line="208" pos:column="34"/></operator><operator pos:line="208" pos:column="34">(<pos:position pos:line="208" pos:column="35"/></operator><operator pos:line="208" pos:column="35">&amp;<pos:position pos:line="208" pos:column="40"/></operator><name><name pos:line="208" pos:column="36">pIndex<pos:position pos:line="208" pos:column="42"/></name><operator pos:line="208" pos:column="42">-&gt;<pos:position pos:line="208" pos:column="47"/></operator><name pos:line="208" pos:column="44">aiColumn<pos:position pos:line="208" pos:column="52"/></name><index pos:line="208" pos:column="52">[<expr><name pos:line="208" pos:column="53">nCol<pos:position pos:line="208" pos:column="57"/></name></expr>]<pos:position pos:line="208" pos:column="58"/></index></name><operator pos:line="208" pos:column="58">)<pos:position pos:line="208" pos:column="59"/></operator></expr>;<pos:position pos:line="208" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="209" pos:column="3">pIndex<pos:position pos:line="209" pos:column="9"/></name><operator pos:line="209" pos:column="9">-&gt;<pos:position pos:line="209" pos:column="14"/></operator><name pos:line="209" pos:column="11">aSortOrder<pos:position pos:line="209" pos:column="21"/></name></name> <operator pos:line="209" pos:column="22">=<pos:position pos:line="209" pos:column="23"/></operator> <operator pos:line="209" pos:column="24">(<pos:position pos:line="209" pos:column="25"/></operator><name pos:line="209" pos:column="25">u8<pos:position pos:line="209" pos:column="27"/></name> <operator pos:line="209" pos:column="28">*<pos:position pos:line="209" pos:column="29"/></operator><operator pos:line="209" pos:column="29">)<pos:position pos:line="209" pos:column="30"/></operator><operator pos:line="209" pos:column="30">(<pos:position pos:line="209" pos:column="31"/></operator><operator pos:line="209" pos:column="31">&amp;<pos:position pos:line="209" pos:column="36"/></operator><name><name pos:line="209" pos:column="32">pIndex<pos:position pos:line="209" pos:column="38"/></name><operator pos:line="209" pos:column="38">-&gt;<pos:position pos:line="209" pos:column="43"/></operator><name pos:line="209" pos:column="40">aiRowEst<pos:position pos:line="209" pos:column="48"/></name><index pos:line="209" pos:column="48">[<expr><name pos:line="209" pos:column="49">nCol<pos:position pos:line="209" pos:column="53"/></name><operator pos:line="209" pos:column="53">+<pos:position pos:line="209" pos:column="54"/></operator><literal type="number" pos:line="209" pos:column="54">1<pos:position pos:line="209" pos:column="55"/></literal></expr>]<pos:position pos:line="209" pos:column="56"/></index></name><operator pos:line="209" pos:column="56">)<pos:position pos:line="209" pos:column="57"/></operator></expr>;<pos:position pos:line="209" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="210" pos:column="3">pIndex<pos:position pos:line="210" pos:column="9"/></name><operator pos:line="210" pos:column="9">-&gt;<pos:position pos:line="210" pos:column="14"/></operator><name pos:line="210" pos:column="11">zName<pos:position pos:line="210" pos:column="16"/></name></name> <operator pos:line="210" pos:column="17">=<pos:position pos:line="210" pos:column="18"/></operator> <operator pos:line="210" pos:column="19">(<pos:position pos:line="210" pos:column="20"/></operator><name pos:line="210" pos:column="20">char<pos:position pos:line="210" pos:column="24"/></name> <operator pos:line="210" pos:column="25">*<pos:position pos:line="210" pos:column="26"/></operator><operator pos:line="210" pos:column="26">)<pos:position pos:line="210" pos:column="27"/></operator><operator pos:line="210" pos:column="27">(<pos:position pos:line="210" pos:column="28"/></operator><operator pos:line="210" pos:column="28">&amp;<pos:position pos:line="210" pos:column="33"/></operator><name><name pos:line="210" pos:column="29">pIndex<pos:position pos:line="210" pos:column="35"/></name><operator pos:line="210" pos:column="35">-&gt;<pos:position pos:line="210" pos:column="40"/></operator><name pos:line="210" pos:column="37">aSortOrder<pos:position pos:line="210" pos:column="47"/></name><index pos:line="210" pos:column="47">[<expr><name pos:line="210" pos:column="48">nCol<pos:position pos:line="210" pos:column="52"/></name></expr>]<pos:position pos:line="210" pos:column="53"/></index></name><operator pos:line="210" pos:column="53">)<pos:position pos:line="210" pos:column="54"/></operator></expr>;<pos:position pos:line="210" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><name pos:line="211" pos:column="3">zExtra<pos:position pos:line="211" pos:column="9"/></name> <operator pos:line="211" pos:column="10">=<pos:position pos:line="211" pos:column="11"/></operator> <operator pos:line="211" pos:column="12">(<pos:position pos:line="211" pos:column="13"/></operator><name pos:line="211" pos:column="13">char<pos:position pos:line="211" pos:column="17"/></name> <operator pos:line="211" pos:column="18">*<pos:position pos:line="211" pos:column="19"/></operator><operator pos:line="211" pos:column="19">)<pos:position pos:line="211" pos:column="20"/></operator><operator pos:line="211" pos:column="20">(<pos:position pos:line="211" pos:column="21"/></operator><operator pos:line="211" pos:column="21">&amp;<pos:position pos:line="211" pos:column="26"/></operator><name><name pos:line="211" pos:column="22">pIndex<pos:position pos:line="211" pos:column="28"/></name><operator pos:line="211" pos:column="28">-&gt;<pos:position pos:line="211" pos:column="33"/></operator><name pos:line="211" pos:column="30">zName<pos:position pos:line="211" pos:column="35"/></name><index pos:line="211" pos:column="35">[<expr><name pos:line="211" pos:column="36">nName<pos:position pos:line="211" pos:column="41"/></name><operator pos:line="211" pos:column="41">+<pos:position pos:line="211" pos:column="42"/></operator><literal type="number" pos:line="211" pos:column="42">1<pos:position pos:line="211" pos:column="43"/></literal></expr>]<pos:position pos:line="211" pos:column="44"/></index></name><operator pos:line="211" pos:column="44">)<pos:position pos:line="211" pos:column="45"/></operator></expr>;<pos:position pos:line="211" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="212" pos:column="3">memcpy<pos:position pos:line="212" pos:column="9"/></name><argument_list pos:line="212" pos:column="9">(<argument><expr><name><name pos:line="212" pos:column="10">pIndex<pos:position pos:line="212" pos:column="16"/></name><operator pos:line="212" pos:column="16">-&gt;<pos:position pos:line="212" pos:column="21"/></operator><name pos:line="212" pos:column="18">zName<pos:position pos:line="212" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="25">zName<pos:position pos:line="212" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="32">nName<pos:position pos:line="212" pos:column="37"/></name><operator pos:line="212" pos:column="37">+<pos:position pos:line="212" pos:column="38"/></operator><literal type="number" pos:line="212" pos:column="38">1<pos:position pos:line="212" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="213" pos:column="3">pIndex<pos:position pos:line="213" pos:column="9"/></name><operator pos:line="213" pos:column="9">-&gt;<pos:position pos:line="213" pos:column="14"/></operator><name pos:line="213" pos:column="11">pTable<pos:position pos:line="213" pos:column="17"/></name></name> <operator pos:line="213" pos:column="18">=<pos:position pos:line="213" pos:column="19"/></operator> <name pos:line="213" pos:column="20">pTab<pos:position pos:line="213" pos:column="24"/></name></expr>;<pos:position pos:line="213" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="214" pos:column="3">pIndex<pos:position pos:line="214" pos:column="9"/></name><operator pos:line="214" pos:column="9">-&gt;<pos:position pos:line="214" pos:column="14"/></operator><name pos:line="214" pos:column="11">nColumn<pos:position pos:line="214" pos:column="18"/></name></name> <operator pos:line="214" pos:column="19">=<pos:position pos:line="214" pos:column="20"/></operator> <name><name pos:line="214" pos:column="21">pList<pos:position pos:line="214" pos:column="26"/></name><operator pos:line="214" pos:column="26">-&gt;<pos:position pos:line="214" pos:column="31"/></operator><name pos:line="214" pos:column="28">nExpr<pos:position pos:line="214" pos:column="33"/></name></name></expr>;<pos:position pos:line="214" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="215" pos:column="3">pIndex<pos:position pos:line="215" pos:column="9"/></name><operator pos:line="215" pos:column="9">-&gt;<pos:position pos:line="215" pos:column="14"/></operator><name pos:line="215" pos:column="11">onError<pos:position pos:line="215" pos:column="18"/></name></name> <operator pos:line="215" pos:column="19">=<pos:position pos:line="215" pos:column="20"/></operator> <operator pos:line="215" pos:column="21">(<pos:position pos:line="215" pos:column="22"/></operator><name pos:line="215" pos:column="22">u8<pos:position pos:line="215" pos:column="24"/></name><operator pos:line="215" pos:column="24">)<pos:position pos:line="215" pos:column="25"/></operator><name pos:line="215" pos:column="25">onError<pos:position pos:line="215" pos:column="32"/></name></expr>;<pos:position pos:line="215" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="216" pos:column="3">pIndex<pos:position pos:line="216" pos:column="9"/></name><operator pos:line="216" pos:column="9">-&gt;<pos:position pos:line="216" pos:column="14"/></operator><name pos:line="216" pos:column="11">autoIndex<pos:position pos:line="216" pos:column="20"/></name></name> <operator pos:line="216" pos:column="21">=<pos:position pos:line="216" pos:column="22"/></operator> <call pos:line="216" pos:column="23">(<name pos:line="216" pos:column="24">u8<pos:position pos:line="216" pos:column="26"/></name>)<argument_list pos:line="216" pos:column="27">(<argument><expr><name pos:line="216" pos:column="28">pName<pos:position pos:line="216" pos:column="33"/></name><operator pos:line="216" pos:column="33">==<pos:position pos:line="216" pos:column="35"/></operator><literal type="number" pos:line="216" pos:column="35">0<pos:position pos:line="216" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="217" pos:column="3">pIndex<pos:position pos:line="217" pos:column="9"/></name><operator pos:line="217" pos:column="9">-&gt;<pos:position pos:line="217" pos:column="14"/></operator><name pos:line="217" pos:column="11">pSchema<pos:position pos:line="217" pos:column="18"/></name></name> <operator pos:line="217" pos:column="19">=<pos:position pos:line="217" pos:column="20"/></operator> <name><name pos:line="217" pos:column="21">db<pos:position pos:line="217" pos:column="23"/></name><operator pos:line="217" pos:column="23">-&gt;<pos:position pos:line="217" pos:column="28"/></operator><name pos:line="217" pos:column="25">aDb<pos:position pos:line="217" pos:column="28"/></name><index pos:line="217" pos:column="28">[<expr><name pos:line="217" pos:column="29">iDb<pos:position pos:line="217" pos:column="32"/></name></expr>]<pos:position pos:line="217" pos:column="33"/></index></name><operator pos:line="217" pos:column="33">.<pos:position pos:line="217" pos:column="34"/></operator><name pos:line="217" pos:column="34">pSchema<pos:position pos:line="217" pos:column="41"/></name></expr>;<pos:position pos:line="217" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="219" pos:column="3">/* Check to see if we should honor DESC requests on index columns
  */</comment>
  <if pos:line="221" pos:column="3">if<condition pos:line="221" pos:column="5">( <expr><name><name pos:line="221" pos:column="7">pDb<pos:position pos:line="221" pos:column="10"/></name><operator pos:line="221" pos:column="10">-&gt;<pos:position pos:line="221" pos:column="15"/></operator><name pos:line="221" pos:column="12">pSchema<pos:position pos:line="221" pos:column="19"/></name><operator pos:line="221" pos:column="19">-&gt;<pos:position pos:line="221" pos:column="24"/></operator><name pos:line="221" pos:column="21">file_format<pos:position pos:line="221" pos:column="32"/></name></name><operator pos:line="221" pos:column="32">&gt;=<pos:position pos:line="221" pos:column="37"/></operator><literal type="number" pos:line="221" pos:column="34">4<pos:position pos:line="221" pos:column="35"/></literal></expr> )<pos:position pos:line="221" pos:column="37"/></condition><then><block pos:line="221" pos:column="37">{
    <expr_stmt><expr><name pos:line="222" pos:column="5">sortOrderMask<pos:position pos:line="222" pos:column="18"/></name> <operator pos:line="222" pos:column="19">=<pos:position pos:line="222" pos:column="20"/></operator> <operator pos:line="222" pos:column="21">-<pos:position pos:line="222" pos:column="22"/></operator><literal type="number" pos:line="222" pos:column="22">1<pos:position pos:line="222" pos:column="23"/></literal></expr>;<pos:position pos:line="222" pos:column="24"/></expr_stmt>   <comment type="block" pos:line="222" pos:column="27">/* Honor DESC */</comment>
  }<pos:position pos:line="223" pos:column="4"/></block></then><else pos:line="223" pos:column="4">else<block pos:line="223" pos:column="8">{
    <expr_stmt><expr><name pos:line="224" pos:column="5">sortOrderMask<pos:position pos:line="224" pos:column="18"/></name> <operator pos:line="224" pos:column="19">=<pos:position pos:line="224" pos:column="20"/></operator> <literal type="number" pos:line="224" pos:column="21">0<pos:position pos:line="224" pos:column="22"/></literal></expr>;<pos:position pos:line="224" pos:column="23"/></expr_stmt>    <comment type="block" pos:line="224" pos:column="27">/* Ignore DESC */</comment>
  }<pos:position pos:line="225" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="227" pos:column="3">/* Scan the names of the columns of the table to be indexed and
  ** load the column indices into the Index structure.  Report an error
  ** if any column is not found.
  **
  ** TODO:  Add a test to make sure that the same column is not named
  ** more than once within the same index.  Only the first instance of
  ** the column will ever be used by the optimizer.  Note that using the
  ** same column more than once cannot be an error because that would 
  ** break backwards compatibility - it needs to be a warning.
  */</comment>
  <for pos:line="237" pos:column="3">for<control pos:line="237" pos:column="6">(<init><expr><name pos:line="237" pos:column="7">i<pos:position pos:line="237" pos:column="8"/></name><operator pos:line="237" pos:column="8">=<pos:position pos:line="237" pos:column="9"/></operator><literal type="number" pos:line="237" pos:column="9">0<pos:position pos:line="237" pos:column="10"/></literal></expr><operator pos:line="237" pos:column="10">,<pos:position pos:line="237" pos:column="11"/></operator> <expr><name pos:line="237" pos:column="12">pListItem<pos:position pos:line="237" pos:column="21"/></name><operator pos:line="237" pos:column="21">=<pos:position pos:line="237" pos:column="22"/></operator><name><name pos:line="237" pos:column="22">pList<pos:position pos:line="237" pos:column="27"/></name><operator pos:line="237" pos:column="27">-&gt;<pos:position pos:line="237" pos:column="32"/></operator><name pos:line="237" pos:column="29">a<pos:position pos:line="237" pos:column="30"/></name></name></expr>;<pos:position pos:line="237" pos:column="31"/></init> <condition><expr><name pos:line="237" pos:column="32">i<pos:position pos:line="237" pos:column="33"/></name><operator pos:line="237" pos:column="33">&lt;<pos:position pos:line="237" pos:column="37"/></operator><name><name pos:line="237" pos:column="34">pList<pos:position pos:line="237" pos:column="39"/></name><operator pos:line="237" pos:column="39">-&gt;<pos:position pos:line="237" pos:column="44"/></operator><name pos:line="237" pos:column="41">nExpr<pos:position pos:line="237" pos:column="46"/></name></name></expr>;<pos:position pos:line="237" pos:column="47"/></condition> <incr><expr><name pos:line="237" pos:column="48">i<pos:position pos:line="237" pos:column="49"/></name><operator pos:line="237" pos:column="49">++<pos:position pos:line="237" pos:column="51"/></operator></expr><operator pos:line="237" pos:column="51">,<pos:position pos:line="237" pos:column="52"/></operator> <expr><name pos:line="237" pos:column="53">pListItem<pos:position pos:line="237" pos:column="62"/></name><operator pos:line="237" pos:column="62">++<pos:position pos:line="237" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="237" pos:column="65"/></control><block pos:line="237" pos:column="65">{
    <decl_stmt><decl><type><specifier pos:line="238" pos:column="5">const<pos:position pos:line="238" pos:column="10"/></specifier> <name pos:line="238" pos:column="11">char<pos:position pos:line="238" pos:column="15"/></name> <modifier pos:line="238" pos:column="16">*<pos:position pos:line="238" pos:column="17"/></modifier></type><name pos:line="238" pos:column="17">zColName<pos:position pos:line="238" pos:column="25"/></name> <init pos:line="238" pos:column="26">= <expr><name><name pos:line="238" pos:column="28">pListItem<pos:position pos:line="238" pos:column="37"/></name><operator pos:line="238" pos:column="37">-&gt;<pos:position pos:line="238" pos:column="42"/></operator><name pos:line="238" pos:column="39">zName<pos:position pos:line="238" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="238" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="239" pos:column="5">Column<pos:position pos:line="239" pos:column="11"/></name> <modifier pos:line="239" pos:column="12">*<pos:position pos:line="239" pos:column="13"/></modifier></type><name pos:line="239" pos:column="13">pTabCol<pos:position pos:line="239" pos:column="20"/></name></decl>;<pos:position pos:line="239" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="240" pos:column="5">int<pos:position pos:line="240" pos:column="8"/></name></type> <name pos:line="240" pos:column="9">requestedSortOrder<pos:position pos:line="240" pos:column="27"/></name></decl>;<pos:position pos:line="240" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="241" pos:column="5">char<pos:position pos:line="241" pos:column="9"/></name> <modifier pos:line="241" pos:column="10">*<pos:position pos:line="241" pos:column="11"/></modifier></type><name pos:line="241" pos:column="11">zColl<pos:position pos:line="241" pos:column="16"/></name></decl>;<pos:position pos:line="241" pos:column="17"/></decl_stmt>                   <comment type="block" pos:line="241" pos:column="36">/* Collation sequence name */</comment>

    <for pos:line="243" pos:column="5">for<control pos:line="243" pos:column="8">(<init><expr><name pos:line="243" pos:column="9">j<pos:position pos:line="243" pos:column="10"/></name><operator pos:line="243" pos:column="10">=<pos:position pos:line="243" pos:column="11"/></operator><literal type="number" pos:line="243" pos:column="11">0<pos:position pos:line="243" pos:column="12"/></literal></expr><operator pos:line="243" pos:column="12">,<pos:position pos:line="243" pos:column="13"/></operator> <expr><name pos:line="243" pos:column="14">pTabCol<pos:position pos:line="243" pos:column="21"/></name><operator pos:line="243" pos:column="21">=<pos:position pos:line="243" pos:column="22"/></operator><name><name pos:line="243" pos:column="22">pTab<pos:position pos:line="243" pos:column="26"/></name><operator pos:line="243" pos:column="26">-&gt;<pos:position pos:line="243" pos:column="31"/></operator><name pos:line="243" pos:column="28">aCol<pos:position pos:line="243" pos:column="32"/></name></name></expr>;<pos:position pos:line="243" pos:column="33"/></init> <condition><expr><name pos:line="243" pos:column="34">j<pos:position pos:line="243" pos:column="35"/></name><operator pos:line="243" pos:column="35">&lt;<pos:position pos:line="243" pos:column="39"/></operator><name><name pos:line="243" pos:column="36">pTab<pos:position pos:line="243" pos:column="40"/></name><operator pos:line="243" pos:column="40">-&gt;<pos:position pos:line="243" pos:column="45"/></operator><name pos:line="243" pos:column="42">nCol<pos:position pos:line="243" pos:column="46"/></name></name></expr>;<pos:position pos:line="243" pos:column="47"/></condition> <incr><expr><name pos:line="243" pos:column="48">j<pos:position pos:line="243" pos:column="49"/></name><operator pos:line="243" pos:column="49">++<pos:position pos:line="243" pos:column="51"/></operator></expr><operator pos:line="243" pos:column="51">,<pos:position pos:line="243" pos:column="52"/></operator> <expr><name pos:line="243" pos:column="53">pTabCol<pos:position pos:line="243" pos:column="60"/></name><operator pos:line="243" pos:column="60">++<pos:position pos:line="243" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="243" pos:column="63"/></control><block pos:line="243" pos:column="63">{
      <if pos:line="244" pos:column="7">if<condition pos:line="244" pos:column="9">( <expr><call><name pos:line="244" pos:column="11">sqlite3StrICmp<pos:position pos:line="244" pos:column="25"/></name><argument_list pos:line="244" pos:column="25">(<argument><expr><name pos:line="244" pos:column="26">zColName<pos:position pos:line="244" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="244" pos:column="36">pTabCol<pos:position pos:line="244" pos:column="43"/></name><operator pos:line="244" pos:column="43">-&gt;<pos:position pos:line="244" pos:column="48"/></operator><name pos:line="244" pos:column="45">zName<pos:position pos:line="244" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="244" pos:column="51"/></argument_list></call><operator pos:line="244" pos:column="51">==<pos:position pos:line="244" pos:column="53"/></operator><literal type="number" pos:line="244" pos:column="53">0<pos:position pos:line="244" pos:column="54"/></literal></expr> )<pos:position pos:line="244" pos:column="56"/></condition><then pos:line="244" pos:column="56"> <block type="pseudo"><break pos:line="244" pos:column="57">break;<pos:position pos:line="244" pos:column="63"/></break></block></then></if>
    }<pos:position pos:line="245" pos:column="6"/></block></for>
    <if pos:line="246" pos:column="5">if<condition pos:line="246" pos:column="7">( <expr><name pos:line="246" pos:column="9">j<pos:position pos:line="246" pos:column="10"/></name><operator pos:line="246" pos:column="10">&gt;=<pos:position pos:line="246" pos:column="15"/></operator><name><name pos:line="246" pos:column="12">pTab<pos:position pos:line="246" pos:column="16"/></name><operator pos:line="246" pos:column="16">-&gt;<pos:position pos:line="246" pos:column="21"/></operator><name pos:line="246" pos:column="18">nCol<pos:position pos:line="246" pos:column="22"/></name></name></expr> )<pos:position pos:line="246" pos:column="24"/></condition><then><block pos:line="246" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="247" pos:column="7">sqlite3ErrorMsg<pos:position pos:line="247" pos:column="22"/></name><argument_list pos:line="247" pos:column="22">(<argument><expr><name pos:line="247" pos:column="23">pParse<pos:position pos:line="247" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="247" pos:column="31">"table %s has no column named %s"<pos:position pos:line="247" pos:column="64"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="248" pos:column="9">pTab<pos:position pos:line="248" pos:column="13"/></name><operator pos:line="248" pos:column="13">-&gt;<pos:position pos:line="248" pos:column="18"/></operator><name pos:line="248" pos:column="15">zName<pos:position pos:line="248" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="22">zColName<pos:position pos:line="248" pos:column="30"/></name></expr></argument>)<pos:position pos:line="248" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="32"/></expr_stmt>
      <goto pos:line="249" pos:column="7">goto <name pos:line="249" pos:column="12">exit_create_index<pos:position pos:line="249" pos:column="29"/></name>;<pos:position pos:line="249" pos:column="30"/></goto>
    }<pos:position pos:line="250" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="251" pos:column="5">pIndex<pos:position pos:line="251" pos:column="11"/></name><operator pos:line="251" pos:column="11">-&gt;<pos:position pos:line="251" pos:column="16"/></operator><name pos:line="251" pos:column="13">aiColumn<pos:position pos:line="251" pos:column="21"/></name><index pos:line="251" pos:column="21">[<expr><name pos:line="251" pos:column="22">i<pos:position pos:line="251" pos:column="23"/></name></expr>]<pos:position pos:line="251" pos:column="24"/></index></name> <operator pos:line="251" pos:column="25">=<pos:position pos:line="251" pos:column="26"/></operator> <name pos:line="251" pos:column="27">j<pos:position pos:line="251" pos:column="28"/></name></expr>;<pos:position pos:line="251" pos:column="29"/></expr_stmt>
    <comment type="block" pos:line="252" pos:column="5">/* Justification of the ALWAYS(pListItem-&gt;pExpr-&gt;pColl):  Because of
    ** the way the "idxlist" non-terminal is constructed by the parser,
    ** if pListItem-&gt;pExpr is not null then either pListItem-&gt;pExpr-&gt;pColl
    ** must exist or else there must have been an OOM error.  But if there
    ** was an OOM error, we would never reach this point. */</comment>
    <if pos:line="257" pos:column="5">if<condition pos:line="257" pos:column="7">( <expr><name><name pos:line="257" pos:column="9">pListItem<pos:position pos:line="257" pos:column="18"/></name><operator pos:line="257" pos:column="18">-&gt;<pos:position pos:line="257" pos:column="23"/></operator><name pos:line="257" pos:column="20">pExpr<pos:position pos:line="257" pos:column="25"/></name></name> <operator pos:line="257" pos:column="26">&amp;&amp;<pos:position pos:line="257" pos:column="36"/></operator> <call><name pos:line="257" pos:column="29">ALWAYS<pos:position pos:line="257" pos:column="35"/></name><argument_list pos:line="257" pos:column="35">(<argument><expr><name><name pos:line="257" pos:column="36">pListItem<pos:position pos:line="257" pos:column="45"/></name><operator pos:line="257" pos:column="45">-&gt;<pos:position pos:line="257" pos:column="50"/></operator><name pos:line="257" pos:column="47">pExpr<pos:position pos:line="257" pos:column="52"/></name><operator pos:line="257" pos:column="52">-&gt;<pos:position pos:line="257" pos:column="57"/></operator><name pos:line="257" pos:column="54">pColl<pos:position pos:line="257" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="257" pos:column="60"/></argument_list></call></expr> )<pos:position pos:line="257" pos:column="62"/></condition><then><block pos:line="257" pos:column="62">{
      <decl_stmt><decl><type><name pos:line="258" pos:column="7">int<pos:position pos:line="258" pos:column="10"/></name></type> <name pos:line="258" pos:column="11">nColl<pos:position pos:line="258" pos:column="16"/></name></decl>;<pos:position pos:line="258" pos:column="17"/></decl_stmt>
      <expr_stmt><expr><name pos:line="259" pos:column="7">zColl<pos:position pos:line="259" pos:column="12"/></name> <operator pos:line="259" pos:column="13">=<pos:position pos:line="259" pos:column="14"/></operator> <name><name pos:line="259" pos:column="15">pListItem<pos:position pos:line="259" pos:column="24"/></name><operator pos:line="259" pos:column="24">-&gt;<pos:position pos:line="259" pos:column="29"/></operator><name pos:line="259" pos:column="26">pExpr<pos:position pos:line="259" pos:column="31"/></name><operator pos:line="259" pos:column="31">-&gt;<pos:position pos:line="259" pos:column="36"/></operator><name pos:line="259" pos:column="33">pColl<pos:position pos:line="259" pos:column="38"/></name><operator pos:line="259" pos:column="38">-&gt;<pos:position pos:line="259" pos:column="43"/></operator><name pos:line="259" pos:column="40">zName<pos:position pos:line="259" pos:column="45"/></name></name></expr>;<pos:position pos:line="259" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name pos:line="260" pos:column="7">nColl<pos:position pos:line="260" pos:column="12"/></name> <operator pos:line="260" pos:column="13">=<pos:position pos:line="260" pos:column="14"/></operator> <call><name pos:line="260" pos:column="15">sqlite3Strlen30<pos:position pos:line="260" pos:column="30"/></name><argument_list pos:line="260" pos:column="30">(<argument><expr><name pos:line="260" pos:column="31">zColl<pos:position pos:line="260" pos:column="36"/></name></expr></argument>)<pos:position pos:line="260" pos:column="37"/></argument_list></call> <operator pos:line="260" pos:column="38">+<pos:position pos:line="260" pos:column="39"/></operator> <literal type="number" pos:line="260" pos:column="40">1<pos:position pos:line="260" pos:column="41"/></literal></expr>;<pos:position pos:line="260" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="261" pos:column="7">assert<pos:position pos:line="261" pos:column="13"/></name><argument_list pos:line="261" pos:column="13">( <argument><expr><name pos:line="261" pos:column="15">nExtra<pos:position pos:line="261" pos:column="21"/></name><operator pos:line="261" pos:column="21">&gt;=<pos:position pos:line="261" pos:column="26"/></operator><name pos:line="261" pos:column="23">nColl<pos:position pos:line="261" pos:column="28"/></name></expr></argument> )<pos:position pos:line="261" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="262" pos:column="7">memcpy<pos:position pos:line="262" pos:column="13"/></name><argument_list pos:line="262" pos:column="13">(<argument><expr><name pos:line="262" pos:column="14">zExtra<pos:position pos:line="262" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="22">zColl<pos:position pos:line="262" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="29">nColl<pos:position pos:line="262" pos:column="34"/></name></expr></argument>)<pos:position pos:line="262" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name pos:line="263" pos:column="7">zColl<pos:position pos:line="263" pos:column="12"/></name> <operator pos:line="263" pos:column="13">=<pos:position pos:line="263" pos:column="14"/></operator> <name pos:line="263" pos:column="15">zExtra<pos:position pos:line="263" pos:column="21"/></name></expr>;<pos:position pos:line="263" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="264" pos:column="7">zExtra<pos:position pos:line="264" pos:column="13"/></name> <operator pos:line="264" pos:column="14">+=<pos:position pos:line="264" pos:column="16"/></operator> <name pos:line="264" pos:column="17">nColl<pos:position pos:line="264" pos:column="22"/></name></expr>;<pos:position pos:line="264" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="265" pos:column="7">nExtra<pos:position pos:line="265" pos:column="13"/></name> <operator pos:line="265" pos:column="14">-=<pos:position pos:line="265" pos:column="16"/></operator> <name pos:line="265" pos:column="17">nColl<pos:position pos:line="265" pos:column="22"/></name></expr>;<pos:position pos:line="265" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="266" pos:column="6"/></block></then><else pos:line="266" pos:column="6">else<block pos:line="266" pos:column="10">{
      <expr_stmt><expr><name pos:line="267" pos:column="7">zColl<pos:position pos:line="267" pos:column="12"/></name> <operator pos:line="267" pos:column="13">=<pos:position pos:line="267" pos:column="14"/></operator> <name><name pos:line="267" pos:column="15">pTab<pos:position pos:line="267" pos:column="19"/></name><operator pos:line="267" pos:column="19">-&gt;<pos:position pos:line="267" pos:column="24"/></operator><name pos:line="267" pos:column="21">aCol<pos:position pos:line="267" pos:column="25"/></name><index pos:line="267" pos:column="25">[<expr><name pos:line="267" pos:column="26">j<pos:position pos:line="267" pos:column="27"/></name></expr>]<pos:position pos:line="267" pos:column="28"/></index></name><operator pos:line="267" pos:column="28">.<pos:position pos:line="267" pos:column="29"/></operator><name pos:line="267" pos:column="29">zColl<pos:position pos:line="267" pos:column="34"/></name></expr>;<pos:position pos:line="267" pos:column="35"/></expr_stmt>
      <if pos:line="268" pos:column="7">if<condition pos:line="268" pos:column="9">( <expr><operator pos:line="268" pos:column="11">!<pos:position pos:line="268" pos:column="12"/></operator><name pos:line="268" pos:column="12">zColl<pos:position pos:line="268" pos:column="17"/></name></expr> )<pos:position pos:line="268" pos:column="19"/></condition><then><block pos:line="268" pos:column="19">{
        <expr_stmt><expr><name pos:line="269" pos:column="9">zColl<pos:position pos:line="269" pos:column="14"/></name> <operator pos:line="269" pos:column="15">=<pos:position pos:line="269" pos:column="16"/></operator> <name><name pos:line="269" pos:column="17">db<pos:position pos:line="269" pos:column="19"/></name><operator pos:line="269" pos:column="19">-&gt;<pos:position pos:line="269" pos:column="24"/></operator><name pos:line="269" pos:column="21">pDfltColl<pos:position pos:line="269" pos:column="30"/></name><operator pos:line="269" pos:column="30">-&gt;<pos:position pos:line="269" pos:column="35"/></operator><name pos:line="269" pos:column="32">zName<pos:position pos:line="269" pos:column="37"/></name></name></expr>;<pos:position pos:line="269" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="270" pos:column="8"/></block></then></if>
    }<pos:position pos:line="271" pos:column="6"/></block></else></if>
    <if pos:line="272" pos:column="5">if<condition pos:line="272" pos:column="7">( <expr><operator pos:line="272" pos:column="9">!<pos:position pos:line="272" pos:column="10"/></operator><name><name pos:line="272" pos:column="10">db<pos:position pos:line="272" pos:column="12"/></name><operator pos:line="272" pos:column="12">-&gt;<pos:position pos:line="272" pos:column="17"/></operator><name pos:line="272" pos:column="14">init<pos:position pos:line="272" pos:column="18"/></name><operator pos:line="272" pos:column="18">.<pos:position pos:line="272" pos:column="19"/></operator><name pos:line="272" pos:column="19">busy<pos:position pos:line="272" pos:column="23"/></name></name> <operator pos:line="272" pos:column="24">&amp;&amp;<pos:position pos:line="272" pos:column="34"/></operator> <operator pos:line="272" pos:column="27">!<pos:position pos:line="272" pos:column="28"/></operator><call><name pos:line="272" pos:column="28">sqlite3LocateCollSeq<pos:position pos:line="272" pos:column="48"/></name><argument_list pos:line="272" pos:column="48">(<argument><expr><name pos:line="272" pos:column="49">pParse<pos:position pos:line="272" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="57">zColl<pos:position pos:line="272" pos:column="62"/></name></expr></argument>)<pos:position pos:line="272" pos:column="63"/></argument_list></call></expr> )<pos:position pos:line="272" pos:column="65"/></condition><then><block pos:line="272" pos:column="65">{
      <goto pos:line="273" pos:column="7">goto <name pos:line="273" pos:column="12">exit_create_index<pos:position pos:line="273" pos:column="29"/></name>;<pos:position pos:line="273" pos:column="30"/></goto>
    }<pos:position pos:line="274" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="275" pos:column="5">pIndex<pos:position pos:line="275" pos:column="11"/></name><operator pos:line="275" pos:column="11">-&gt;<pos:position pos:line="275" pos:column="16"/></operator><name pos:line="275" pos:column="13">azColl<pos:position pos:line="275" pos:column="19"/></name><index pos:line="275" pos:column="19">[<expr><name pos:line="275" pos:column="20">i<pos:position pos:line="275" pos:column="21"/></name></expr>]<pos:position pos:line="275" pos:column="22"/></index></name> <operator pos:line="275" pos:column="23">=<pos:position pos:line="275" pos:column="24"/></operator> <name pos:line="275" pos:column="25">zColl<pos:position pos:line="275" pos:column="30"/></name></expr>;<pos:position pos:line="275" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="276" pos:column="5">requestedSortOrder<pos:position pos:line="276" pos:column="23"/></name> <operator pos:line="276" pos:column="24">=<pos:position pos:line="276" pos:column="25"/></operator> <name><name pos:line="276" pos:column="26">pListItem<pos:position pos:line="276" pos:column="35"/></name><operator pos:line="276" pos:column="35">-&gt;<pos:position pos:line="276" pos:column="40"/></operator><name pos:line="276" pos:column="37">sortOrder<pos:position pos:line="276" pos:column="46"/></name></name> <operator pos:line="276" pos:column="47">&amp;<pos:position pos:line="276" pos:column="52"/></operator> <name pos:line="276" pos:column="49">sortOrderMask<pos:position pos:line="276" pos:column="62"/></name></expr>;<pos:position pos:line="276" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="277" pos:column="5">pIndex<pos:position pos:line="277" pos:column="11"/></name><operator pos:line="277" pos:column="11">-&gt;<pos:position pos:line="277" pos:column="16"/></operator><name pos:line="277" pos:column="13">aSortOrder<pos:position pos:line="277" pos:column="23"/></name><index pos:line="277" pos:column="23">[<expr><name pos:line="277" pos:column="24">i<pos:position pos:line="277" pos:column="25"/></name></expr>]<pos:position pos:line="277" pos:column="26"/></index></name> <operator pos:line="277" pos:column="27">=<pos:position pos:line="277" pos:column="28"/></operator> <operator pos:line="277" pos:column="29">(<pos:position pos:line="277" pos:column="30"/></operator><name pos:line="277" pos:column="30">u8<pos:position pos:line="277" pos:column="32"/></name><operator pos:line="277" pos:column="32">)<pos:position pos:line="277" pos:column="33"/></operator><name pos:line="277" pos:column="33">requestedSortOrder<pos:position pos:line="277" pos:column="51"/></name></expr>;<pos:position pos:line="277" pos:column="52"/></expr_stmt>
  }<pos:position pos:line="278" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="279" pos:column="3">sqlite3DefaultRowEst<pos:position pos:line="279" pos:column="23"/></name><argument_list pos:line="279" pos:column="23">(<argument><expr><name pos:line="279" pos:column="24">pIndex<pos:position pos:line="279" pos:column="30"/></name></expr></argument>)<pos:position pos:line="279" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="32"/></expr_stmt>

  <if pos:line="281" pos:column="3">if<condition pos:line="281" pos:column="5">( <expr><name pos:line="281" pos:column="7">pTab<pos:position pos:line="281" pos:column="11"/></name><operator pos:line="281" pos:column="11">==<pos:position pos:line="281" pos:column="13"/></operator><name><name pos:line="281" pos:column="13">pParse<pos:position pos:line="281" pos:column="19"/></name><operator pos:line="281" pos:column="19">-&gt;<pos:position pos:line="281" pos:column="24"/></operator><name pos:line="281" pos:column="21">pNewTable<pos:position pos:line="281" pos:column="30"/></name></name></expr> )<pos:position pos:line="281" pos:column="32"/></condition><then><block pos:line="281" pos:column="32">{
    <comment type="block" pos:line="282" pos:column="5">/* This routine has been called to create an automatic index as a
    ** result of a PRIMARY KEY or UNIQUE clause on a column definition, or
    ** a PRIMARY KEY or UNIQUE clause following the column definitions.
    ** i.e. one of:
    **
    ** CREATE TABLE t(x PRIMARY KEY, y);
    ** CREATE TABLE t(x, y, UNIQUE(x, y));
    **
    ** Either way, check to see if the table already has such an index. If
    ** so, don't bother creating this one. This only applies to
    ** automatically created indices. Users can do as they wish with
    ** explicit indices.
    **
    ** Two UNIQUE or PRIMARY KEY constraints are considered equivalent
    ** (and thus suppressing the second one) even if they have different
    ** sort orders.
    **
    ** If there are different collating sequences or if the columns of
    ** the constraint occur in different orders, then the constraints are
    ** considered distinct and both result in separate indices.
    */</comment>
    <decl_stmt><decl><type><name pos:line="303" pos:column="5">Index<pos:position pos:line="303" pos:column="10"/></name> <modifier pos:line="303" pos:column="11">*<pos:position pos:line="303" pos:column="12"/></modifier></type><name pos:line="303" pos:column="12">pIdx<pos:position pos:line="303" pos:column="16"/></name></decl>;<pos:position pos:line="303" pos:column="17"/></decl_stmt>
    <for pos:line="304" pos:column="5">for<control pos:line="304" pos:column="8">(<init><expr><name pos:line="304" pos:column="9">pIdx<pos:position pos:line="304" pos:column="13"/></name><operator pos:line="304" pos:column="13">=<pos:position pos:line="304" pos:column="14"/></operator><name><name pos:line="304" pos:column="14">pTab<pos:position pos:line="304" pos:column="18"/></name><operator pos:line="304" pos:column="18">-&gt;<pos:position pos:line="304" pos:column="23"/></operator><name pos:line="304" pos:column="20">pIndex<pos:position pos:line="304" pos:column="26"/></name></name></expr>;<pos:position pos:line="304" pos:column="27"/></init> <condition><expr><name pos:line="304" pos:column="28">pIdx<pos:position pos:line="304" pos:column="32"/></name></expr>;<pos:position pos:line="304" pos:column="33"/></condition> <incr><expr><name pos:line="304" pos:column="34">pIdx<pos:position pos:line="304" pos:column="38"/></name><operator pos:line="304" pos:column="38">=<pos:position pos:line="304" pos:column="39"/></operator><name><name pos:line="304" pos:column="39">pIdx<pos:position pos:line="304" pos:column="43"/></name><operator pos:line="304" pos:column="43">-&gt;<pos:position pos:line="304" pos:column="48"/></operator><name pos:line="304" pos:column="45">pNext<pos:position pos:line="304" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="304" pos:column="51"/></control><block pos:line="304" pos:column="51">{
      <decl_stmt><decl><type><name pos:line="305" pos:column="7">int<pos:position pos:line="305" pos:column="10"/></name></type> <name pos:line="305" pos:column="11">k<pos:position pos:line="305" pos:column="12"/></name></decl>;<pos:position pos:line="305" pos:column="13"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="306" pos:column="7">assert<pos:position pos:line="306" pos:column="13"/></name><argument_list pos:line="306" pos:column="13">( <argument><expr><name><name pos:line="306" pos:column="15">pIdx<pos:position pos:line="306" pos:column="19"/></name><operator pos:line="306" pos:column="19">-&gt;<pos:position pos:line="306" pos:column="24"/></operator><name pos:line="306" pos:column="21">onError<pos:position pos:line="306" pos:column="28"/></name></name><operator pos:line="306" pos:column="28">!=<pos:position pos:line="306" pos:column="30"/></operator><name pos:line="306" pos:column="30">OE_None<pos:position pos:line="306" pos:column="37"/></name></expr></argument> )<pos:position pos:line="306" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="307" pos:column="7">assert<pos:position pos:line="307" pos:column="13"/></name><argument_list pos:line="307" pos:column="13">( <argument><expr><name><name pos:line="307" pos:column="15">pIdx<pos:position pos:line="307" pos:column="19"/></name><operator pos:line="307" pos:column="19">-&gt;<pos:position pos:line="307" pos:column="24"/></operator><name pos:line="307" pos:column="21">autoIndex<pos:position pos:line="307" pos:column="30"/></name></name></expr></argument> )<pos:position pos:line="307" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="308" pos:column="7">assert<pos:position pos:line="308" pos:column="13"/></name><argument_list pos:line="308" pos:column="13">( <argument><expr><name><name pos:line="308" pos:column="15">pIndex<pos:position pos:line="308" pos:column="21"/></name><operator pos:line="308" pos:column="21">-&gt;<pos:position pos:line="308" pos:column="26"/></operator><name pos:line="308" pos:column="23">onError<pos:position pos:line="308" pos:column="30"/></name></name><operator pos:line="308" pos:column="30">!=<pos:position pos:line="308" pos:column="32"/></operator><name pos:line="308" pos:column="32">OE_None<pos:position pos:line="308" pos:column="39"/></name></expr></argument> )<pos:position pos:line="308" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="42"/></expr_stmt>

      <if pos:line="310" pos:column="7">if<condition pos:line="310" pos:column="9">( <expr><name><name pos:line="310" pos:column="11">pIdx<pos:position pos:line="310" pos:column="15"/></name><operator pos:line="310" pos:column="15">-&gt;<pos:position pos:line="310" pos:column="20"/></operator><name pos:line="310" pos:column="17">nColumn<pos:position pos:line="310" pos:column="24"/></name></name><operator pos:line="310" pos:column="24">!=<pos:position pos:line="310" pos:column="26"/></operator><name><name pos:line="310" pos:column="26">pIndex<pos:position pos:line="310" pos:column="32"/></name><operator pos:line="310" pos:column="32">-&gt;<pos:position pos:line="310" pos:column="37"/></operator><name pos:line="310" pos:column="34">nColumn<pos:position pos:line="310" pos:column="41"/></name></name></expr> )<pos:position pos:line="310" pos:column="43"/></condition><then pos:line="310" pos:column="43"> <block type="pseudo"><continue pos:line="310" pos:column="44">continue;<pos:position pos:line="310" pos:column="53"/></continue></block></then></if>
      <for pos:line="311" pos:column="7">for<control pos:line="311" pos:column="10">(<init><expr><name pos:line="311" pos:column="11">k<pos:position pos:line="311" pos:column="12"/></name><operator pos:line="311" pos:column="12">=<pos:position pos:line="311" pos:column="13"/></operator><literal type="number" pos:line="311" pos:column="13">0<pos:position pos:line="311" pos:column="14"/></literal></expr>;<pos:position pos:line="311" pos:column="15"/></init> <condition><expr><name pos:line="311" pos:column="16">k<pos:position pos:line="311" pos:column="17"/></name><operator pos:line="311" pos:column="17">&lt;<pos:position pos:line="311" pos:column="21"/></operator><name><name pos:line="311" pos:column="18">pIdx<pos:position pos:line="311" pos:column="22"/></name><operator pos:line="311" pos:column="22">-&gt;<pos:position pos:line="311" pos:column="27"/></operator><name pos:line="311" pos:column="24">nColumn<pos:position pos:line="311" pos:column="31"/></name></name></expr>;<pos:position pos:line="311" pos:column="32"/></condition> <incr><expr><name pos:line="311" pos:column="33">k<pos:position pos:line="311" pos:column="34"/></name><operator pos:line="311" pos:column="34">++<pos:position pos:line="311" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="311" pos:column="37"/></control><block pos:line="311" pos:column="37">{
        <decl_stmt><decl><type><specifier pos:line="312" pos:column="9">const<pos:position pos:line="312" pos:column="14"/></specifier> <name pos:line="312" pos:column="15">char<pos:position pos:line="312" pos:column="19"/></name> <modifier pos:line="312" pos:column="20">*<pos:position pos:line="312" pos:column="21"/></modifier></type><name pos:line="312" pos:column="21">z1<pos:position pos:line="312" pos:column="23"/></name></decl>;<pos:position pos:line="312" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="313" pos:column="9">const<pos:position pos:line="313" pos:column="14"/></specifier> <name pos:line="313" pos:column="15">char<pos:position pos:line="313" pos:column="19"/></name> <modifier pos:line="313" pos:column="20">*<pos:position pos:line="313" pos:column="21"/></modifier></type><name pos:line="313" pos:column="21">z2<pos:position pos:line="313" pos:column="23"/></name></decl>;<pos:position pos:line="313" pos:column="24"/></decl_stmt>
        <if pos:line="314" pos:column="9">if<condition pos:line="314" pos:column="11">( <expr><name><name pos:line="314" pos:column="13">pIdx<pos:position pos:line="314" pos:column="17"/></name><operator pos:line="314" pos:column="17">-&gt;<pos:position pos:line="314" pos:column="22"/></operator><name pos:line="314" pos:column="19">aiColumn<pos:position pos:line="314" pos:column="27"/></name><index pos:line="314" pos:column="27">[<expr><name pos:line="314" pos:column="28">k<pos:position pos:line="314" pos:column="29"/></name></expr>]<pos:position pos:line="314" pos:column="30"/></index></name><operator pos:line="314" pos:column="30">!=<pos:position pos:line="314" pos:column="32"/></operator><name><name pos:line="314" pos:column="32">pIndex<pos:position pos:line="314" pos:column="38"/></name><operator pos:line="314" pos:column="38">-&gt;<pos:position pos:line="314" pos:column="43"/></operator><name pos:line="314" pos:column="40">aiColumn<pos:position pos:line="314" pos:column="48"/></name><index pos:line="314" pos:column="48">[<expr><name pos:line="314" pos:column="49">k<pos:position pos:line="314" pos:column="50"/></name></expr>]<pos:position pos:line="314" pos:column="51"/></index></name></expr> )<pos:position pos:line="314" pos:column="53"/></condition><then pos:line="314" pos:column="53"> <block type="pseudo"><break pos:line="314" pos:column="54">break;<pos:position pos:line="314" pos:column="60"/></break></block></then></if>
        <expr_stmt><expr><name pos:line="315" pos:column="9">z1<pos:position pos:line="315" pos:column="11"/></name> <operator pos:line="315" pos:column="12">=<pos:position pos:line="315" pos:column="13"/></operator> <name><name pos:line="315" pos:column="14">pIdx<pos:position pos:line="315" pos:column="18"/></name><operator pos:line="315" pos:column="18">-&gt;<pos:position pos:line="315" pos:column="23"/></operator><name pos:line="315" pos:column="20">azColl<pos:position pos:line="315" pos:column="26"/></name><index pos:line="315" pos:column="26">[<expr><name pos:line="315" pos:column="27">k<pos:position pos:line="315" pos:column="28"/></name></expr>]<pos:position pos:line="315" pos:column="29"/></index></name></expr>;<pos:position pos:line="315" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="316" pos:column="9">z2<pos:position pos:line="316" pos:column="11"/></name> <operator pos:line="316" pos:column="12">=<pos:position pos:line="316" pos:column="13"/></operator> <name><name pos:line="316" pos:column="14">pIndex<pos:position pos:line="316" pos:column="20"/></name><operator pos:line="316" pos:column="20">-&gt;<pos:position pos:line="316" pos:column="25"/></operator><name pos:line="316" pos:column="22">azColl<pos:position pos:line="316" pos:column="28"/></name><index pos:line="316" pos:column="28">[<expr><name pos:line="316" pos:column="29">k<pos:position pos:line="316" pos:column="30"/></name></expr>]<pos:position pos:line="316" pos:column="31"/></index></name></expr>;<pos:position pos:line="316" pos:column="32"/></expr_stmt>
        <if pos:line="317" pos:column="9">if<condition pos:line="317" pos:column="11">( <expr><name pos:line="317" pos:column="13">z1<pos:position pos:line="317" pos:column="15"/></name><operator pos:line="317" pos:column="15">!=<pos:position pos:line="317" pos:column="17"/></operator><name pos:line="317" pos:column="17">z2<pos:position pos:line="317" pos:column="19"/></name> <operator pos:line="317" pos:column="20">&amp;&amp;<pos:position pos:line="317" pos:column="30"/></operator> <call><name pos:line="317" pos:column="23">sqlite3StrICmp<pos:position pos:line="317" pos:column="37"/></name><argument_list pos:line="317" pos:column="37">(<argument><expr><name pos:line="317" pos:column="38">z1<pos:position pos:line="317" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="317" pos:column="42">z2<pos:position pos:line="317" pos:column="44"/></name></expr></argument>)<pos:position pos:line="317" pos:column="45"/></argument_list></call></expr> )<pos:position pos:line="317" pos:column="47"/></condition><then pos:line="317" pos:column="47"> <block type="pseudo"><break pos:line="317" pos:column="48">break;<pos:position pos:line="317" pos:column="54"/></break></block></then></if>
      }<pos:position pos:line="318" pos:column="8"/></block></for>
      <if pos:line="319" pos:column="7">if<condition pos:line="319" pos:column="9">( <expr><name pos:line="319" pos:column="11">k<pos:position pos:line="319" pos:column="12"/></name><operator pos:line="319" pos:column="12">==<pos:position pos:line="319" pos:column="14"/></operator><name><name pos:line="319" pos:column="14">pIdx<pos:position pos:line="319" pos:column="18"/></name><operator pos:line="319" pos:column="18">-&gt;<pos:position pos:line="319" pos:column="23"/></operator><name pos:line="319" pos:column="20">nColumn<pos:position pos:line="319" pos:column="27"/></name></name></expr> )<pos:position pos:line="319" pos:column="29"/></condition><then><block pos:line="319" pos:column="29">{
        <if pos:line="320" pos:column="9">if<condition pos:line="320" pos:column="11">( <expr><name><name pos:line="320" pos:column="13">pIdx<pos:position pos:line="320" pos:column="17"/></name><operator pos:line="320" pos:column="17">-&gt;<pos:position pos:line="320" pos:column="22"/></operator><name pos:line="320" pos:column="19">onError<pos:position pos:line="320" pos:column="26"/></name></name><operator pos:line="320" pos:column="26">!=<pos:position pos:line="320" pos:column="28"/></operator><name><name pos:line="320" pos:column="28">pIndex<pos:position pos:line="320" pos:column="34"/></name><operator pos:line="320" pos:column="34">-&gt;<pos:position pos:line="320" pos:column="39"/></operator><name pos:line="320" pos:column="36">onError<pos:position pos:line="320" pos:column="43"/></name></name></expr> )<pos:position pos:line="320" pos:column="45"/></condition><then><block pos:line="320" pos:column="45">{
          <comment type="block" pos:line="321" pos:column="11">/* This constraint creates the same index as a previous
          ** constraint specified somewhere in the CREATE TABLE statement.
          ** However the ON CONFLICT clauses are different. If both this 
          ** constraint and the previous equivalent constraint have explicit
          ** ON CONFLICT clauses this is an error. Otherwise, use the
          ** explicitly specified behaviour for the index.
          */</comment>
          <if pos:line="328" pos:column="11">if<condition pos:line="328" pos:column="13">( <expr><operator pos:line="328" pos:column="15">!<pos:position pos:line="328" pos:column="16"/></operator><operator pos:line="328" pos:column="16">(<pos:position pos:line="328" pos:column="17"/></operator><name><name pos:line="328" pos:column="17">pIdx<pos:position pos:line="328" pos:column="21"/></name><operator pos:line="328" pos:column="21">-&gt;<pos:position pos:line="328" pos:column="26"/></operator><name pos:line="328" pos:column="23">onError<pos:position pos:line="328" pos:column="30"/></name></name><operator pos:line="328" pos:column="30">==<pos:position pos:line="328" pos:column="32"/></operator><name pos:line="328" pos:column="32">OE_Default<pos:position pos:line="328" pos:column="42"/></name> <operator pos:line="328" pos:column="43">||<pos:position pos:line="328" pos:column="45"/></operator> <name><name pos:line="328" pos:column="46">pIndex<pos:position pos:line="328" pos:column="52"/></name><operator pos:line="328" pos:column="52">-&gt;<pos:position pos:line="328" pos:column="57"/></operator><name pos:line="328" pos:column="54">onError<pos:position pos:line="328" pos:column="61"/></name></name><operator pos:line="328" pos:column="61">==<pos:position pos:line="328" pos:column="63"/></operator><name pos:line="328" pos:column="63">OE_Default<pos:position pos:line="328" pos:column="73"/></name><operator pos:line="328" pos:column="73">)<pos:position pos:line="328" pos:column="74"/></operator></expr> )<pos:position pos:line="328" pos:column="76"/></condition><then><block pos:line="328" pos:column="76">{
            <expr_stmt><expr><call><name pos:line="329" pos:column="13">sqlite3ErrorMsg<pos:position pos:line="329" pos:column="28"/></name><argument_list pos:line="329" pos:column="28">(<argument><expr><name pos:line="329" pos:column="29">pParse<pos:position pos:line="329" pos:column="35"/></name></expr></argument>, 
                <argument><expr><literal type="string" pos:line="330" pos:column="17">"conflicting ON CONFLICT clauses specified"<pos:position pos:line="330" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="330" pos:column="62">0<pos:position pos:line="330" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="330" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="65"/></expr_stmt>
          }<pos:position pos:line="331" pos:column="12"/></block></then></if>
          <if pos:line="332" pos:column="11">if<condition pos:line="332" pos:column="13">( <expr><name><name pos:line="332" pos:column="15">pIdx<pos:position pos:line="332" pos:column="19"/></name><operator pos:line="332" pos:column="19">-&gt;<pos:position pos:line="332" pos:column="24"/></operator><name pos:line="332" pos:column="21">onError<pos:position pos:line="332" pos:column="28"/></name></name><operator pos:line="332" pos:column="28">==<pos:position pos:line="332" pos:column="30"/></operator><name pos:line="332" pos:column="30">OE_Default<pos:position pos:line="332" pos:column="40"/></name></expr> )<pos:position pos:line="332" pos:column="42"/></condition><then><block pos:line="332" pos:column="42">{
            <expr_stmt><expr><name><name pos:line="333" pos:column="13">pIdx<pos:position pos:line="333" pos:column="17"/></name><operator pos:line="333" pos:column="17">-&gt;<pos:position pos:line="333" pos:column="22"/></operator><name pos:line="333" pos:column="19">onError<pos:position pos:line="333" pos:column="26"/></name></name> <operator pos:line="333" pos:column="27">=<pos:position pos:line="333" pos:column="28"/></operator> <name><name pos:line="333" pos:column="29">pIndex<pos:position pos:line="333" pos:column="35"/></name><operator pos:line="333" pos:column="35">-&gt;<pos:position pos:line="333" pos:column="40"/></operator><name pos:line="333" pos:column="37">onError<pos:position pos:line="333" pos:column="44"/></name></name></expr>;<pos:position pos:line="333" pos:column="45"/></expr_stmt>
          }<pos:position pos:line="334" pos:column="12"/></block></then></if>
        }<pos:position pos:line="335" pos:column="10"/></block></then></if>
        <goto pos:line="336" pos:column="9">goto <name pos:line="336" pos:column="14">exit_create_index<pos:position pos:line="336" pos:column="31"/></name>;<pos:position pos:line="336" pos:column="32"/></goto>
      }<pos:position pos:line="337" pos:column="8"/></block></then></if>
    }<pos:position pos:line="338" pos:column="6"/></block></for>
  }<pos:position pos:line="339" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="341" pos:column="3">/* Link the new Index structure to its table and to the other
  ** in-memory database structures. 
  */</comment>
  <if pos:line="344" pos:column="3">if<condition pos:line="344" pos:column="5">( <expr><name><name pos:line="344" pos:column="7">db<pos:position pos:line="344" pos:column="9"/></name><operator pos:line="344" pos:column="9">-&gt;<pos:position pos:line="344" pos:column="14"/></operator><name pos:line="344" pos:column="11">init<pos:position pos:line="344" pos:column="15"/></name><operator pos:line="344" pos:column="15">.<pos:position pos:line="344" pos:column="16"/></operator><name pos:line="344" pos:column="16">busy<pos:position pos:line="344" pos:column="20"/></name></name></expr> )<pos:position pos:line="344" pos:column="22"/></condition><then><block pos:line="344" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="345" pos:column="5">Index<pos:position pos:line="345" pos:column="10"/></name> <modifier pos:line="345" pos:column="11">*<pos:position pos:line="345" pos:column="12"/></modifier></type><name pos:line="345" pos:column="12">p<pos:position pos:line="345" pos:column="13"/></name></decl>;<pos:position pos:line="345" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><name pos:line="346" pos:column="5">p<pos:position pos:line="346" pos:column="6"/></name> <operator pos:line="346" pos:column="7">=<pos:position pos:line="346" pos:column="8"/></operator> <call><name pos:line="346" pos:column="9">sqlite3HashInsert<pos:position pos:line="346" pos:column="26"/></name><argument_list pos:line="346" pos:column="26">(<argument><expr><operator pos:line="346" pos:column="27">&amp;<pos:position pos:line="346" pos:column="32"/></operator><name><name pos:line="346" pos:column="28">pIndex<pos:position pos:line="346" pos:column="34"/></name><operator pos:line="346" pos:column="34">-&gt;<pos:position pos:line="346" pos:column="39"/></operator><name pos:line="346" pos:column="36">pSchema<pos:position pos:line="346" pos:column="43"/></name><operator pos:line="346" pos:column="43">-&gt;<pos:position pos:line="346" pos:column="48"/></operator><name pos:line="346" pos:column="45">idxHash<pos:position pos:line="346" pos:column="52"/></name></name></expr></argument>, 
                          <argument><expr><name><name pos:line="347" pos:column="27">pIndex<pos:position pos:line="347" pos:column="33"/></name><operator pos:line="347" pos:column="33">-&gt;<pos:position pos:line="347" pos:column="38"/></operator><name pos:line="347" pos:column="35">zName<pos:position pos:line="347" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="347" pos:column="42">sqlite3Strlen30<pos:position pos:line="347" pos:column="57"/></name><argument_list pos:line="347" pos:column="57">(<argument><expr><name><name pos:line="347" pos:column="58">pIndex<pos:position pos:line="347" pos:column="64"/></name><operator pos:line="347" pos:column="64">-&gt;<pos:position pos:line="347" pos:column="69"/></operator><name pos:line="347" pos:column="66">zName<pos:position pos:line="347" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="347" pos:column="72"/></argument_list></call></expr></argument>,
                          <argument><expr><name pos:line="348" pos:column="27">pIndex<pos:position pos:line="348" pos:column="33"/></name></expr></argument>)<pos:position pos:line="348" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="35"/></expr_stmt>
    <if pos:line="349" pos:column="5">if<condition pos:line="349" pos:column="7">( <expr><name pos:line="349" pos:column="9">p<pos:position pos:line="349" pos:column="10"/></name></expr> )<pos:position pos:line="349" pos:column="12"/></condition><then><block pos:line="349" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="350" pos:column="7">assert<pos:position pos:line="350" pos:column="13"/></name><argument_list pos:line="350" pos:column="13">( <argument><expr><name pos:line="350" pos:column="15">p<pos:position pos:line="350" pos:column="16"/></name><operator pos:line="350" pos:column="16">==<pos:position pos:line="350" pos:column="18"/></operator><name pos:line="350" pos:column="18">pIndex<pos:position pos:line="350" pos:column="24"/></name></expr></argument> )<pos:position pos:line="350" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="27"/></expr_stmt>  <comment type="block" pos:line="350" pos:column="29">/* Malloc must have failed */</comment>
      <expr_stmt><expr><name><name pos:line="351" pos:column="7">db<pos:position pos:line="351" pos:column="9"/></name><operator pos:line="351" pos:column="9">-&gt;<pos:position pos:line="351" pos:column="14"/></operator><name pos:line="351" pos:column="11">mallocFailed<pos:position pos:line="351" pos:column="23"/></name></name> <operator pos:line="351" pos:column="24">=<pos:position pos:line="351" pos:column="25"/></operator> <literal type="number" pos:line="351" pos:column="26">1<pos:position pos:line="351" pos:column="27"/></literal></expr>;<pos:position pos:line="351" pos:column="28"/></expr_stmt>
      <goto pos:line="352" pos:column="7">goto <name pos:line="352" pos:column="12">exit_create_index<pos:position pos:line="352" pos:column="29"/></name>;<pos:position pos:line="352" pos:column="30"/></goto>
    }<pos:position pos:line="353" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="354" pos:column="5">db<pos:position pos:line="354" pos:column="7"/></name><operator pos:line="354" pos:column="7">-&gt;<pos:position pos:line="354" pos:column="12"/></operator><name pos:line="354" pos:column="9">flags<pos:position pos:line="354" pos:column="14"/></name></name> <operator pos:line="354" pos:column="15">|=<pos:position pos:line="354" pos:column="17"/></operator> <name pos:line="354" pos:column="18">SQLITE_InternChanges<pos:position pos:line="354" pos:column="38"/></name></expr>;<pos:position pos:line="354" pos:column="39"/></expr_stmt>
    <if pos:line="355" pos:column="5">if<condition pos:line="355" pos:column="7">( <expr><name pos:line="355" pos:column="9">pTblName<pos:position pos:line="355" pos:column="17"/></name><operator pos:line="355" pos:column="17">!=<pos:position pos:line="355" pos:column="19"/></operator><literal type="number" pos:line="355" pos:column="19">0<pos:position pos:line="355" pos:column="20"/></literal></expr> )<pos:position pos:line="355" pos:column="22"/></condition><then><block pos:line="355" pos:column="22">{
      <expr_stmt><expr><name><name pos:line="356" pos:column="7">pIndex<pos:position pos:line="356" pos:column="13"/></name><operator pos:line="356" pos:column="13">-&gt;<pos:position pos:line="356" pos:column="18"/></operator><name pos:line="356" pos:column="15">tnum<pos:position pos:line="356" pos:column="19"/></name></name> <operator pos:line="356" pos:column="20">=<pos:position pos:line="356" pos:column="21"/></operator> <name><name pos:line="356" pos:column="22">db<pos:position pos:line="356" pos:column="24"/></name><operator pos:line="356" pos:column="24">-&gt;<pos:position pos:line="356" pos:column="29"/></operator><name pos:line="356" pos:column="26">init<pos:position pos:line="356" pos:column="30"/></name><operator pos:line="356" pos:column="30">.<pos:position pos:line="356" pos:column="31"/></operator><name pos:line="356" pos:column="31">newTnum<pos:position pos:line="356" pos:column="38"/></name></name></expr>;<pos:position pos:line="356" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="357" pos:column="6"/></block></then></if>
  }<pos:position pos:line="358" pos:column="4"/></block></then>

  <comment type="block" pos:line="360" pos:column="3">/* If the db-&gt;init.busy is 0 then create the index on disk.  This
  ** involves writing the index into the master table and filling in the
  ** index with the current table contents.
  **
  ** The db-&gt;init.busy is 0 when the user first enters a CREATE INDEX 
  ** command.  db-&gt;init.busy is 1 when a database is opened and 
  ** CREATE INDEX statements are read out of the master table.  In
  ** the latter case the index already exists on disk, which is why
  ** we don't want to recreate it.
  **
  ** If pTblName==0 it means this index is generated as a primary key
  ** or UNIQUE constraint of a CREATE TABLE statement.  Since the table
  ** has just been created, it contains no data and the index initialization
  ** step can be skipped.
  */</comment>
  <else pos:line="375" pos:column="3">else<block pos:line="375" pos:column="7">{ <comment type="block" pos:line="375" pos:column="9">/* if( db-&gt;init.busy==0 ) */</comment>
    <decl_stmt><decl><type><name pos:line="376" pos:column="5">Vdbe<pos:position pos:line="376" pos:column="9"/></name> <modifier pos:line="376" pos:column="10">*<pos:position pos:line="376" pos:column="11"/></modifier></type><name pos:line="376" pos:column="11">v<pos:position pos:line="376" pos:column="12"/></name></decl>;<pos:position pos:line="376" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="377" pos:column="5">char<pos:position pos:line="377" pos:column="9"/></name> <modifier pos:line="377" pos:column="10">*<pos:position pos:line="377" pos:column="11"/></modifier></type><name pos:line="377" pos:column="11">zStmt<pos:position pos:line="377" pos:column="16"/></name></decl>;<pos:position pos:line="377" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="378" pos:column="5">int<pos:position pos:line="378" pos:column="8"/></name></type> <name pos:line="378" pos:column="9">iMem<pos:position pos:line="378" pos:column="13"/></name> <init pos:line="378" pos:column="14">= <expr><operator pos:line="378" pos:column="16">++<pos:position pos:line="378" pos:column="18"/></operator><name><name pos:line="378" pos:column="18">pParse<pos:position pos:line="378" pos:column="24"/></name><operator pos:line="378" pos:column="24">-&gt;<pos:position pos:line="378" pos:column="29"/></operator><name pos:line="378" pos:column="26">nMem<pos:position pos:line="378" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="378" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><name pos:line="380" pos:column="5">v<pos:position pos:line="380" pos:column="6"/></name> <operator pos:line="380" pos:column="7">=<pos:position pos:line="380" pos:column="8"/></operator> <call><name pos:line="380" pos:column="9">sqlite3GetVdbe<pos:position pos:line="380" pos:column="23"/></name><argument_list pos:line="380" pos:column="23">(<argument><expr><name pos:line="380" pos:column="24">pParse<pos:position pos:line="380" pos:column="30"/></name></expr></argument>)<pos:position pos:line="380" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="32"/></expr_stmt>
    <if pos:line="381" pos:column="5">if<condition pos:line="381" pos:column="7">( <expr><name pos:line="381" pos:column="9">v<pos:position pos:line="381" pos:column="10"/></name><operator pos:line="381" pos:column="10">==<pos:position pos:line="381" pos:column="12"/></operator><literal type="number" pos:line="381" pos:column="12">0<pos:position pos:line="381" pos:column="13"/></literal></expr> )<pos:position pos:line="381" pos:column="15"/></condition><then pos:line="381" pos:column="15"> <block type="pseudo"><goto pos:line="381" pos:column="16">goto <name pos:line="381" pos:column="21">exit_create_index<pos:position pos:line="381" pos:column="38"/></name>;<pos:position pos:line="381" pos:column="39"/></goto></block></then></if>


    <comment type="block" pos:line="384" pos:column="5">/* Create the rootpage for the index
    */</comment>
    <expr_stmt><expr><call><name pos:line="386" pos:column="5">sqlite3BeginWriteOperation<pos:position pos:line="386" pos:column="31"/></name><argument_list pos:line="386" pos:column="31">(<argument><expr><name pos:line="386" pos:column="32">pParse<pos:position pos:line="386" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="386" pos:column="40">1<pos:position pos:line="386" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="386" pos:column="43">iDb<pos:position pos:line="386" pos:column="46"/></name></expr></argument>)<pos:position pos:line="386" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="386" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="387" pos:column="5">sqlite3VdbeAddOp2<pos:position pos:line="387" pos:column="22"/></name><argument_list pos:line="387" pos:column="22">(<argument><expr><name pos:line="387" pos:column="23">v<pos:position pos:line="387" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="26">OP_CreateIndex<pos:position pos:line="387" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="42">iDb<pos:position pos:line="387" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="47">iMem<pos:position pos:line="387" pos:column="51"/></name></expr></argument>)<pos:position pos:line="387" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="387" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="389" pos:column="5">/* Gather the complete text of the CREATE INDEX statement into
    ** the zStmt variable
    */</comment>
    <if pos:line="392" pos:column="5">if<condition pos:line="392" pos:column="7">( <expr><name pos:line="392" pos:column="9">pStart<pos:position pos:line="392" pos:column="15"/></name></expr> )<pos:position pos:line="392" pos:column="17"/></condition><then><block pos:line="392" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="393" pos:column="7">assert<pos:position pos:line="393" pos:column="13"/></name><argument_list pos:line="393" pos:column="13">( <argument><expr><name pos:line="393" pos:column="15">pEnd<pos:position pos:line="393" pos:column="19"/></name><operator pos:line="393" pos:column="19">!=<pos:position pos:line="393" pos:column="21"/></operator><literal type="number" pos:line="393" pos:column="21">0<pos:position pos:line="393" pos:column="22"/></literal></expr></argument> )<pos:position pos:line="393" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="25"/></expr_stmt>
      <comment type="block" pos:line="394" pos:column="7">/* A named index with an explicit CREATE INDEX statement */</comment>
      <expr_stmt><expr><name pos:line="395" pos:column="7">zStmt<pos:position pos:line="395" pos:column="12"/></name> <operator pos:line="395" pos:column="13">=<pos:position pos:line="395" pos:column="14"/></operator> <call><name pos:line="395" pos:column="15">sqlite3MPrintf<pos:position pos:line="395" pos:column="29"/></name><argument_list pos:line="395" pos:column="29">(<argument><expr><name pos:line="395" pos:column="30">db<pos:position pos:line="395" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="395" pos:column="34">"CREATE%s INDEX %.*s"<pos:position pos:line="395" pos:column="55"/></literal></expr></argument>,
        <argument><expr><ternary><condition><expr><name pos:line="396" pos:column="9">onError<pos:position pos:line="396" pos:column="16"/></name><operator pos:line="396" pos:column="16">==<pos:position pos:line="396" pos:column="18"/></operator><name pos:line="396" pos:column="18">OE_None<pos:position pos:line="396" pos:column="25"/></name></expr> ?<pos:position pos:line="396" pos:column="27"/></condition><then pos:line="396" pos:column="27"> <expr><literal type="string" pos:line="396" pos:column="28">""<pos:position pos:line="396" pos:column="30"/></literal></expr> <pos:position pos:line="396" pos:column="31"/></then><else pos:line="396" pos:column="31">: <expr><literal type="string" pos:line="396" pos:column="33">" UNIQUE"<pos:position pos:line="396" pos:column="42"/></literal></expr></else></ternary></expr></argument>,
        <argument><expr><name><name pos:line="397" pos:column="9">pEnd<pos:position pos:line="397" pos:column="13"/></name><operator pos:line="397" pos:column="13">-&gt;<pos:position pos:line="397" pos:column="18"/></operator><name pos:line="397" pos:column="15">z<pos:position pos:line="397" pos:column="16"/></name></name> <operator pos:line="397" pos:column="17">-<pos:position pos:line="397" pos:column="18"/></operator> <name><name pos:line="397" pos:column="19">pName<pos:position pos:line="397" pos:column="24"/></name><operator pos:line="397" pos:column="24">-&gt;<pos:position pos:line="397" pos:column="29"/></operator><name pos:line="397" pos:column="26">z<pos:position pos:line="397" pos:column="27"/></name></name> <operator pos:line="397" pos:column="28">+<pos:position pos:line="397" pos:column="29"/></operator> <literal type="number" pos:line="397" pos:column="30">1<pos:position pos:line="397" pos:column="31"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="398" pos:column="9">pName<pos:position pos:line="398" pos:column="14"/></name><operator pos:line="398" pos:column="14">-&gt;<pos:position pos:line="398" pos:column="19"/></operator><name pos:line="398" pos:column="16">z<pos:position pos:line="398" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="398" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="399" pos:column="6"/></block></then><else pos:line="399" pos:column="6">else<block pos:line="399" pos:column="10">{
      <comment type="block" pos:line="400" pos:column="7">/* An automatic index created by a PRIMARY KEY or UNIQUE constraint */</comment>
      <comment type="block" pos:line="401" pos:column="7">/* zStmt = sqlite3MPrintf(""); */</comment>
      <expr_stmt><expr><name pos:line="402" pos:column="7">zStmt<pos:position pos:line="402" pos:column="12"/></name> <operator pos:line="402" pos:column="13">=<pos:position pos:line="402" pos:column="14"/></operator> <literal type="number" pos:line="402" pos:column="15">0<pos:position pos:line="402" pos:column="16"/></literal></expr>;<pos:position pos:line="402" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="403" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="405" pos:column="5">/* Add an entry in sqlite_master for this index
    */</comment>
    <expr_stmt><expr><call><name pos:line="407" pos:column="5">sqlite3NestedParse<pos:position pos:line="407" pos:column="23"/></name><argument_list pos:line="407" pos:column="23">(<argument><expr><name pos:line="407" pos:column="24">pParse<pos:position pos:line="407" pos:column="30"/></name></expr></argument>, 
        <argument><expr><literal type="string" pos:line="408" pos:column="9">"INSERT INTO %Q.%s VALUES('index',%Q,%Q,#%d,%Q);"<pos:position pos:line="408" pos:column="58"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="409" pos:column="9">db<pos:position pos:line="409" pos:column="11"/></name><operator pos:line="409" pos:column="11">-&gt;<pos:position pos:line="409" pos:column="16"/></operator><name pos:line="409" pos:column="13">aDb<pos:position pos:line="409" pos:column="16"/></name><index pos:line="409" pos:column="16">[<expr><name pos:line="409" pos:column="17">iDb<pos:position pos:line="409" pos:column="20"/></name></expr>]<pos:position pos:line="409" pos:column="21"/></index></name><operator pos:line="409" pos:column="21">.<pos:position pos:line="409" pos:column="22"/></operator><name pos:line="409" pos:column="22">zName<pos:position pos:line="409" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="409" pos:column="29">SCHEMA_TABLE<pos:position pos:line="409" pos:column="41"/></name><argument_list pos:line="409" pos:column="41">(<argument><expr><name pos:line="409" pos:column="42">iDb<pos:position pos:line="409" pos:column="45"/></name></expr></argument>)<pos:position pos:line="409" pos:column="46"/></argument_list></call></expr></argument>,
        <argument><expr><name><name pos:line="410" pos:column="9">pIndex<pos:position pos:line="410" pos:column="15"/></name><operator pos:line="410" pos:column="15">-&gt;<pos:position pos:line="410" pos:column="20"/></operator><name pos:line="410" pos:column="17">zName<pos:position pos:line="410" pos:column="22"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="411" pos:column="9">pTab<pos:position pos:line="411" pos:column="13"/></name><operator pos:line="411" pos:column="13">-&gt;<pos:position pos:line="411" pos:column="18"/></operator><name pos:line="411" pos:column="15">zName<pos:position pos:line="411" pos:column="20"/></name></name></expr></argument>,
        <argument><expr><name pos:line="412" pos:column="9">iMem<pos:position pos:line="412" pos:column="13"/></name></expr></argument>,
        <argument><expr><name pos:line="413" pos:column="9">zStmt<pos:position pos:line="413" pos:column="14"/></name></expr></argument>
    )<pos:position pos:line="414" pos:column="6"/></argument_list></call></expr>;<pos:position pos:line="414" pos:column="7"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="415" pos:column="5">sqlite3DbFree<pos:position pos:line="415" pos:column="18"/></name><argument_list pos:line="415" pos:column="18">(<argument><expr><name pos:line="415" pos:column="19">db<pos:position pos:line="415" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="415" pos:column="23">zStmt<pos:position pos:line="415" pos:column="28"/></name></expr></argument>)<pos:position pos:line="415" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="415" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="417" pos:column="5">/* Fill the index with data and reparse the schema. Code an OP_Expire
    ** to invalidate all pre-compiled statements.
    */</comment>
    <if pos:line="420" pos:column="5">if<condition pos:line="420" pos:column="7">( <expr><name pos:line="420" pos:column="9">pTblName<pos:position pos:line="420" pos:column="17"/></name></expr> )<pos:position pos:line="420" pos:column="19"/></condition><then><block pos:line="420" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="421" pos:column="7">sqlite3RefillIndex<pos:position pos:line="421" pos:column="25"/></name><argument_list pos:line="421" pos:column="25">(<argument><expr><name pos:line="421" pos:column="26">pParse<pos:position pos:line="421" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="421" pos:column="34">pIndex<pos:position pos:line="421" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="421" pos:column="42">iMem<pos:position pos:line="421" pos:column="46"/></name></expr></argument>)<pos:position pos:line="421" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="422" pos:column="7">sqlite3ChangeCookie<pos:position pos:line="422" pos:column="26"/></name><argument_list pos:line="422" pos:column="26">(<argument><expr><name pos:line="422" pos:column="27">pParse<pos:position pos:line="422" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="422" pos:column="35">iDb<pos:position pos:line="422" pos:column="38"/></name></expr></argument>)<pos:position pos:line="422" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="423" pos:column="7">sqlite3VdbeAddOp4<pos:position pos:line="423" pos:column="24"/></name><argument_list pos:line="423" pos:column="24">(<argument><expr><name pos:line="423" pos:column="25">v<pos:position pos:line="423" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="423" pos:column="28">OP_ParseSchema<pos:position pos:line="423" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="423" pos:column="44">iDb<pos:position pos:line="423" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="423" pos:column="49">0<pos:position pos:line="423" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="423" pos:column="52">0<pos:position pos:line="423" pos:column="53"/></literal></expr></argument>,
         <argument><expr><call><name pos:line="424" pos:column="10">sqlite3MPrintf<pos:position pos:line="424" pos:column="24"/></name><argument_list pos:line="424" pos:column="24">(<argument><expr><name pos:line="424" pos:column="25">db<pos:position pos:line="424" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="424" pos:column="29">"name='%q'"<pos:position pos:line="424" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="424" pos:column="42">pIndex<pos:position pos:line="424" pos:column="48"/></name><operator pos:line="424" pos:column="48">-&gt;<pos:position pos:line="424" pos:column="53"/></operator><name pos:line="424" pos:column="50">zName<pos:position pos:line="424" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="424" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="424" pos:column="58">P4_DYNAMIC<pos:position pos:line="424" pos:column="68"/></name></expr></argument>)<pos:position pos:line="424" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="425" pos:column="7">sqlite3VdbeAddOp1<pos:position pos:line="425" pos:column="24"/></name><argument_list pos:line="425" pos:column="24">(<argument><expr><name pos:line="425" pos:column="25">v<pos:position pos:line="425" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="425" pos:column="28">OP_Expire<pos:position pos:line="425" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="425" pos:column="39">0<pos:position pos:line="425" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="425" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="426" pos:column="6"/></block></then></if>
  }<pos:position pos:line="427" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="429" pos:column="3">/* When adding an index to the list of indices for a table, make
  ** sure all indices labeled OE_Replace come after all those labeled
  ** OE_Ignore.  This is necessary for the correct constraint check
  ** processing (in sqlite3GenerateConstraintChecks()) as part of
  ** UPDATE and INSERT statements.  
  */</comment>
  <if pos:line="435" pos:column="3">if<condition pos:line="435" pos:column="5">( <expr><name><name pos:line="435" pos:column="7">db<pos:position pos:line="435" pos:column="9"/></name><operator pos:line="435" pos:column="9">-&gt;<pos:position pos:line="435" pos:column="14"/></operator><name pos:line="435" pos:column="11">init<pos:position pos:line="435" pos:column="15"/></name><operator pos:line="435" pos:column="15">.<pos:position pos:line="435" pos:column="16"/></operator><name pos:line="435" pos:column="16">busy<pos:position pos:line="435" pos:column="20"/></name></name> <operator pos:line="435" pos:column="21">||<pos:position pos:line="435" pos:column="23"/></operator> <name pos:line="435" pos:column="24">pTblName<pos:position pos:line="435" pos:column="32"/></name><operator pos:line="435" pos:column="32">==<pos:position pos:line="435" pos:column="34"/></operator><literal type="number" pos:line="435" pos:column="34">0<pos:position pos:line="435" pos:column="35"/></literal></expr> )<pos:position pos:line="435" pos:column="37"/></condition><then><block pos:line="435" pos:column="37">{
    <if pos:line="436" pos:column="5">if<condition pos:line="436" pos:column="7">( <expr><name pos:line="436" pos:column="9">onError<pos:position pos:line="436" pos:column="16"/></name><operator pos:line="436" pos:column="16">!=<pos:position pos:line="436" pos:column="18"/></operator><name pos:line="436" pos:column="18">OE_Replace<pos:position pos:line="436" pos:column="28"/></name> <operator pos:line="436" pos:column="29">||<pos:position pos:line="436" pos:column="31"/></operator> <name><name pos:line="436" pos:column="32">pTab<pos:position pos:line="436" pos:column="36"/></name><operator pos:line="436" pos:column="36">-&gt;<pos:position pos:line="436" pos:column="41"/></operator><name pos:line="436" pos:column="38">pIndex<pos:position pos:line="436" pos:column="44"/></name></name><operator pos:line="436" pos:column="44">==<pos:position pos:line="436" pos:column="46"/></operator><literal type="number" pos:line="436" pos:column="46">0<pos:position pos:line="436" pos:column="47"/></literal>
         <operator pos:line="437" pos:column="10">||<pos:position pos:line="437" pos:column="12"/></operator> <name><name pos:line="437" pos:column="13">pTab<pos:position pos:line="437" pos:column="17"/></name><operator pos:line="437" pos:column="17">-&gt;<pos:position pos:line="437" pos:column="22"/></operator><name pos:line="437" pos:column="19">pIndex<pos:position pos:line="437" pos:column="25"/></name><operator pos:line="437" pos:column="25">-&gt;<pos:position pos:line="437" pos:column="30"/></operator><name pos:line="437" pos:column="27">onError<pos:position pos:line="437" pos:column="34"/></name></name><operator pos:line="437" pos:column="34">==<pos:position pos:line="437" pos:column="36"/></operator><name pos:line="437" pos:column="36">OE_Replace<pos:position pos:line="437" pos:column="46"/></name></expr>)<pos:position pos:line="437" pos:column="47"/></condition><then><block pos:line="437" pos:column="47">{
      <expr_stmt><expr><name><name pos:line="438" pos:column="7">pIndex<pos:position pos:line="438" pos:column="13"/></name><operator pos:line="438" pos:column="13">-&gt;<pos:position pos:line="438" pos:column="18"/></operator><name pos:line="438" pos:column="15">pNext<pos:position pos:line="438" pos:column="20"/></name></name> <operator pos:line="438" pos:column="21">=<pos:position pos:line="438" pos:column="22"/></operator> <name><name pos:line="438" pos:column="23">pTab<pos:position pos:line="438" pos:column="27"/></name><operator pos:line="438" pos:column="27">-&gt;<pos:position pos:line="438" pos:column="32"/></operator><name pos:line="438" pos:column="29">pIndex<pos:position pos:line="438" pos:column="35"/></name></name></expr>;<pos:position pos:line="438" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="439" pos:column="7">pTab<pos:position pos:line="439" pos:column="11"/></name><operator pos:line="439" pos:column="11">-&gt;<pos:position pos:line="439" pos:column="16"/></operator><name pos:line="439" pos:column="13">pIndex<pos:position pos:line="439" pos:column="19"/></name></name> <operator pos:line="439" pos:column="20">=<pos:position pos:line="439" pos:column="21"/></operator> <name pos:line="439" pos:column="22">pIndex<pos:position pos:line="439" pos:column="28"/></name></expr>;<pos:position pos:line="439" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="440" pos:column="6"/></block></then><else pos:line="440" pos:column="6">else<block pos:line="440" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="441" pos:column="7">Index<pos:position pos:line="441" pos:column="12"/></name> <modifier pos:line="441" pos:column="13">*<pos:position pos:line="441" pos:column="14"/></modifier></type><name pos:line="441" pos:column="14">pOther<pos:position pos:line="441" pos:column="20"/></name> <init pos:line="441" pos:column="21">= <expr><name><name pos:line="441" pos:column="23">pTab<pos:position pos:line="441" pos:column="27"/></name><operator pos:line="441" pos:column="27">-&gt;<pos:position pos:line="441" pos:column="32"/></operator><name pos:line="441" pos:column="29">pIndex<pos:position pos:line="441" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="441" pos:column="36"/></decl_stmt>
      <while pos:line="442" pos:column="7">while<condition pos:line="442" pos:column="12">( <expr><name><name pos:line="442" pos:column="14">pOther<pos:position pos:line="442" pos:column="20"/></name><operator pos:line="442" pos:column="20">-&gt;<pos:position pos:line="442" pos:column="25"/></operator><name pos:line="442" pos:column="22">pNext<pos:position pos:line="442" pos:column="27"/></name></name> <operator pos:line="442" pos:column="28">&amp;&amp;<pos:position pos:line="442" pos:column="38"/></operator> <name><name pos:line="442" pos:column="31">pOther<pos:position pos:line="442" pos:column="37"/></name><operator pos:line="442" pos:column="37">-&gt;<pos:position pos:line="442" pos:column="42"/></operator><name pos:line="442" pos:column="39">pNext<pos:position pos:line="442" pos:column="44"/></name><operator pos:line="442" pos:column="44">-&gt;<pos:position pos:line="442" pos:column="49"/></operator><name pos:line="442" pos:column="46">onError<pos:position pos:line="442" pos:column="53"/></name></name><operator pos:line="442" pos:column="53">!=<pos:position pos:line="442" pos:column="55"/></operator><name pos:line="442" pos:column="55">OE_Replace<pos:position pos:line="442" pos:column="65"/></name></expr> )<pos:position pos:line="442" pos:column="67"/></condition><block pos:line="442" pos:column="67">{
        <expr_stmt><expr><name pos:line="443" pos:column="9">pOther<pos:position pos:line="443" pos:column="15"/></name> <operator pos:line="443" pos:column="16">=<pos:position pos:line="443" pos:column="17"/></operator> <name><name pos:line="443" pos:column="18">pOther<pos:position pos:line="443" pos:column="24"/></name><operator pos:line="443" pos:column="24">-&gt;<pos:position pos:line="443" pos:column="29"/></operator><name pos:line="443" pos:column="26">pNext<pos:position pos:line="443" pos:column="31"/></name></name></expr>;<pos:position pos:line="443" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="444" pos:column="8"/></block></while>
      <expr_stmt><expr><name><name pos:line="445" pos:column="7">pIndex<pos:position pos:line="445" pos:column="13"/></name><operator pos:line="445" pos:column="13">-&gt;<pos:position pos:line="445" pos:column="18"/></operator><name pos:line="445" pos:column="15">pNext<pos:position pos:line="445" pos:column="20"/></name></name> <operator pos:line="445" pos:column="21">=<pos:position pos:line="445" pos:column="22"/></operator> <name><name pos:line="445" pos:column="23">pOther<pos:position pos:line="445" pos:column="29"/></name><operator pos:line="445" pos:column="29">-&gt;<pos:position pos:line="445" pos:column="34"/></operator><name pos:line="445" pos:column="31">pNext<pos:position pos:line="445" pos:column="36"/></name></name></expr>;<pos:position pos:line="445" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="446" pos:column="7">pOther<pos:position pos:line="446" pos:column="13"/></name><operator pos:line="446" pos:column="13">-&gt;<pos:position pos:line="446" pos:column="18"/></operator><name pos:line="446" pos:column="15">pNext<pos:position pos:line="446" pos:column="20"/></name></name> <operator pos:line="446" pos:column="21">=<pos:position pos:line="446" pos:column="22"/></operator> <name pos:line="446" pos:column="23">pIndex<pos:position pos:line="446" pos:column="29"/></name></expr>;<pos:position pos:line="446" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="447" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="448" pos:column="5">pIndex<pos:position pos:line="448" pos:column="11"/></name> <operator pos:line="448" pos:column="12">=<pos:position pos:line="448" pos:column="13"/></operator> <literal type="number" pos:line="448" pos:column="14">0<pos:position pos:line="448" pos:column="15"/></literal></expr>;<pos:position pos:line="448" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="449" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="451" pos:column="3">/* Clean up before exiting */</comment>
<label><name pos:line="452" pos:column="1">exit_create_index<pos:position pos:line="452" pos:column="18"/></name>:<pos:position pos:line="452" pos:column="19"/></label>
  <if pos:line="453" pos:column="3">if<condition pos:line="453" pos:column="5">( <expr><name pos:line="453" pos:column="7">pIndex<pos:position pos:line="453" pos:column="13"/></name></expr> )<pos:position pos:line="453" pos:column="15"/></condition><then><block pos:line="453" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="454" pos:column="5">sqlite3_free<pos:position pos:line="454" pos:column="17"/></name><argument_list pos:line="454" pos:column="17">(<argument><expr><name><name pos:line="454" pos:column="18">pIndex<pos:position pos:line="454" pos:column="24"/></name><operator pos:line="454" pos:column="24">-&gt;<pos:position pos:line="454" pos:column="29"/></operator><name pos:line="454" pos:column="26">zColAff<pos:position pos:line="454" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="454" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="454" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="455" pos:column="5">sqlite3DbFree<pos:position pos:line="455" pos:column="18"/></name><argument_list pos:line="455" pos:column="18">(<argument><expr><name pos:line="455" pos:column="19">db<pos:position pos:line="455" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="455" pos:column="23">pIndex<pos:position pos:line="455" pos:column="29"/></name></expr></argument>)<pos:position pos:line="455" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="455" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="456" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="457" pos:column="3">sqlite3ExprListDelete<pos:position pos:line="457" pos:column="24"/></name><argument_list pos:line="457" pos:column="24">(<argument><expr><name pos:line="457" pos:column="25">db<pos:position pos:line="457" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="457" pos:column="29">pList<pos:position pos:line="457" pos:column="34"/></name></expr></argument>)<pos:position pos:line="457" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="457" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="458" pos:column="3">sqlite3SrcListDelete<pos:position pos:line="458" pos:column="23"/></name><argument_list pos:line="458" pos:column="23">(<argument><expr><name pos:line="458" pos:column="24">db<pos:position pos:line="458" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="458" pos:column="28">pTblName<pos:position pos:line="458" pos:column="36"/></name></expr></argument>)<pos:position pos:line="458" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="458" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="459" pos:column="3">sqlite3DbFree<pos:position pos:line="459" pos:column="16"/></name><argument_list pos:line="459" pos:column="16">(<argument><expr><name pos:line="459" pos:column="17">db<pos:position pos:line="459" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="459" pos:column="21">zName<pos:position pos:line="459" pos:column="26"/></name></expr></argument>)<pos:position pos:line="459" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="459" pos:column="28"/></expr_stmt>
  <return pos:line="460" pos:column="3">return;<pos:position pos:line="460" pos:column="10"/></return>
}<pos:position pos:line="461" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_181.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">resolveExprStep<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">Walker<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">pWalker<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">Expr<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">pExpr<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list><block pos:line="1" pos:column="57">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">NameContext<pos:position pos:line="2" pos:column="14"/></name> <modifier pos:line="2" pos:column="15">*<pos:position pos:line="2" pos:column="16"/></modifier></type><name pos:line="2" pos:column="16">pNC<pos:position pos:line="2" pos:column="19"/></name></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">Parse<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">pParse<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">pNC<pos:position pos:line="5" pos:column="6"/></name> <operator pos:line="5" pos:column="7">=<pos:position pos:line="5" pos:column="8"/></operator> <name><name pos:line="5" pos:column="9">pWalker<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">u<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">pNC<pos:position pos:line="5" pos:column="23"/></name></name></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">( <argument><expr><name pos:line="6" pos:column="11">pNC<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">!=<pos:position pos:line="6" pos:column="16"/></operator><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></argument> )<pos:position pos:line="6" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">pParse<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <name><name pos:line="7" pos:column="12">pNC<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">pParse<pos:position pos:line="7" pos:column="23"/></name></name></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">( <argument><expr><name pos:line="8" pos:column="11">pParse<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator><name><name pos:line="8" pos:column="19">pWalker<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">pParse<pos:position pos:line="8" pos:column="34"/></name></name></expr></argument> )<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>

<cpp:ifndef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifndef<pos:position pos:line="10" pos:column="8"/></cpp:directive> <name pos:line="10" pos:column="9">NDEBUG<pos:position pos:line="10" pos:column="15"/></name></cpp:ifndef>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">( <expr><name><name pos:line="11" pos:column="7">pNC<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">pSrcList<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">&amp;&amp;<pos:position pos:line="11" pos:column="31"/></operator> <name><name pos:line="11" pos:column="24">pNC<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">pSrcList<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">nAlloc<pos:position pos:line="11" pos:column="45"/></name></name><operator pos:line="11" pos:column="45">&gt;<pos:position pos:line="11" pos:column="49"/></operator><literal type="number" pos:line="11" pos:column="46">0<pos:position pos:line="11" pos:column="47"/></literal></expr> )<pos:position pos:line="11" pos:column="49"/></condition><then><block pos:line="11" pos:column="49">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">SrcList<pos:position pos:line="12" pos:column="12"/></name> <modifier pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></modifier></type><name pos:line="12" pos:column="14">pSrcList<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><name><name pos:line="12" pos:column="25">pNC<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">pSrcList<pos:position pos:line="12" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">i<pos:position pos:line="13" pos:column="10"/></name></decl>;<pos:position pos:line="13" pos:column="11"/></decl_stmt>
    <for pos:line="14" pos:column="5">for<control pos:line="14" pos:column="8">(<init><expr><name pos:line="14" pos:column="9">i<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator><literal type="number" pos:line="14" pos:column="11">0<pos:position pos:line="14" pos:column="12"/></literal></expr>;<pos:position pos:line="14" pos:column="13"/></init> <condition><expr><name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">&lt;<pos:position pos:line="14" pos:column="19"/></operator><name><name pos:line="14" pos:column="16">pNC<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">pSrcList<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">nSrc<pos:position pos:line="14" pos:column="35"/></name></name></expr>;<pos:position pos:line="14" pos:column="36"/></condition> <incr><expr><name pos:line="14" pos:column="37">i<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">++<pos:position pos:line="14" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="41"/></control><block pos:line="14" pos:column="41">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">assert<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">( <argument><expr><name><name pos:line="15" pos:column="15">pSrcList<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">a<pos:position pos:line="15" pos:column="26"/></name><index pos:line="15" pos:column="26">[<expr><name pos:line="15" pos:column="27">i<pos:position pos:line="15" pos:column="28"/></name></expr>]<pos:position pos:line="15" pos:column="29"/></index></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">iCursor<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">&gt;=<pos:position pos:line="15" pos:column="42"/></operator><literal type="number" pos:line="15" pos:column="39">0<pos:position pos:line="15" pos:column="40"/></literal> <operator pos:line="15" pos:column="41">&amp;&amp;<pos:position pos:line="15" pos:column="51"/></operator> <name><name pos:line="15" pos:column="44">pSrcList<pos:position pos:line="15" pos:column="52"/></name><operator pos:line="15" pos:column="52">-&gt;<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="54">a<pos:position pos:line="15" pos:column="55"/></name><index pos:line="15" pos:column="55">[<expr><name pos:line="15" pos:column="56">i<pos:position pos:line="15" pos:column="57"/></name></expr>]<pos:position pos:line="15" pos:column="58"/></index></name><operator pos:line="15" pos:column="58">.<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="59">iCursor<pos:position pos:line="15" pos:column="66"/></name><operator pos:line="15" pos:column="66">&lt;<pos:position pos:line="15" pos:column="70"/></operator><name><name pos:line="15" pos:column="67">pParse<pos:position pos:line="15" pos:column="73"/></name><operator pos:line="15" pos:column="73">-&gt;<pos:position pos:line="15" pos:column="78"/></operator><name pos:line="15" pos:column="75">nTab<pos:position pos:line="15" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></for>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
  <switch pos:line="19" pos:column="3">switch<condition pos:line="19" pos:column="9">( <expr><name><name pos:line="19" pos:column="11">pExpr<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">op<pos:position pos:line="19" pos:column="20"/></name></name></expr> )<pos:position pos:line="19" pos:column="22"/></condition><block pos:line="19" pos:column="22">{

<cpp:if pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">if<pos:position pos:line="21" pos:column="4"/></cpp:directive> <expr><call><name pos:line="21" pos:column="5">defined<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">SQLITE_ENABLE_UPDATE_DELETE_LIMIT<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call> <operator pos:line="21" pos:column="48">&amp;&amp;<pos:position pos:line="21" pos:column="58"/></operator> <operator pos:line="21" pos:column="51">!<pos:position pos:line="21" pos:column="52"/></operator><call><name pos:line="21" pos:column="52">defined<pos:position pos:line="21" pos:column="59"/></name><argument_list pos:line="21" pos:column="59">(<argument><expr><name pos:line="21" pos:column="60">SQLITE_OMIT_SUBQUERY<pos:position pos:line="21" pos:column="80"/></name></expr></argument>)<pos:position pos:line="21" pos:column="81"/></argument_list></call></expr></cpp:if>
    <comment type="block" pos:line="22" pos:column="5">/* The special operator TK_ROW means use the rowid for the first
    ** column in the FROM clause.  This is used by the LIMIT and ORDER BY
    ** clause processing on UPDATE and DELETE statements.
    */</comment>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">TK_ROW<pos:position pos:line="26" pos:column="16"/></name></expr>:<pos:position pos:line="26" pos:column="17"/></case> <block pos:line="26" pos:column="18">{
      <decl_stmt><decl><type><name pos:line="27" pos:column="7">SrcList<pos:position pos:line="27" pos:column="14"/></name> <modifier pos:line="27" pos:column="15">*<pos:position pos:line="27" pos:column="16"/></modifier></type><name pos:line="27" pos:column="16">pSrcList<pos:position pos:line="27" pos:column="24"/></name> <init pos:line="27" pos:column="25">= <expr><name><name pos:line="27" pos:column="27">pNC<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">pSrcList<pos:position pos:line="27" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="27" pos:column="41"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="28" pos:column="7">struct<pos:position pos:line="28" pos:column="13"/></name> <name pos:line="28" pos:column="14">SrcList_item<pos:position pos:line="28" pos:column="26"/></name></name> <modifier pos:line="28" pos:column="27">*<pos:position pos:line="28" pos:column="28"/></modifier></type><name pos:line="28" pos:column="28">pItem<pos:position pos:line="28" pos:column="33"/></name></decl>;<pos:position pos:line="28" pos:column="34"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">assert<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">( <argument><expr><name pos:line="29" pos:column="15">pSrcList<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">&amp;&amp;<pos:position pos:line="29" pos:column="34"/></operator> <name><name pos:line="29" pos:column="27">pSrcList<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">-&gt;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="37">nSrc<pos:position pos:line="29" pos:column="41"/></name></name><operator pos:line="29" pos:column="41">==<pos:position pos:line="29" pos:column="43"/></operator><literal type="number" pos:line="29" pos:column="43">1<pos:position pos:line="29" pos:column="44"/></literal></expr></argument> )<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="30" pos:column="7">pItem<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <name><name pos:line="30" pos:column="15">pSrcList<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">-&gt;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="25">a<pos:position pos:line="30" pos:column="26"/></name></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt> 
      <expr_stmt><expr><name><name pos:line="31" pos:column="7">pExpr<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">op<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">TK_COLUMN<pos:position pos:line="31" pos:column="28"/></name></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">pExpr<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">pTab<pos:position pos:line="32" pos:column="18"/></name></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <name><name pos:line="32" pos:column="21">pItem<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">pTab<pos:position pos:line="32" pos:column="32"/></name></name></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">pExpr<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">iTable<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name><name pos:line="33" pos:column="23">pItem<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">-&gt;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="30">iCursor<pos:position pos:line="33" pos:column="37"/></name></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="34" pos:column="7">pExpr<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">iColumn<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <operator pos:line="34" pos:column="24">-<pos:position pos:line="34" pos:column="25"/></operator><literal type="number" pos:line="34" pos:column="25">1<pos:position pos:line="34" pos:column="26"/></literal></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="35" pos:column="7">pExpr<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">affinity<pos:position pos:line="35" pos:column="22"/></name></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="25">SQLITE_AFF_INTEGER<pos:position pos:line="35" pos:column="43"/></name></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
      <break pos:line="36" pos:column="7">break;<pos:position pos:line="36" pos:column="13"/></break>
    }<pos:position pos:line="37" pos:column="6"/></block>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="38" pos:column="8">/* defined(SQLITE_ENABLE_UPDATE_DELETE_LIMIT)
          &amp;&amp; !defined(SQLITE_OMIT_SUBQUERY) */</comment>

    <comment type="block" pos:line="41" pos:column="5">/* A column name:                    ID
    ** Or table name and column name:    ID.ID
    ** Or a database, table and column:  ID.ID.ID
    **
    ** The TK_ID and TK_OUT cases are combined so that there will only
    ** be one call to lookupName().  Then the compiler will in-line 
    ** lookupName() for a size reduction and performance increase.
    */</comment>
    <case pos:line="49" pos:column="5">case <expr><name pos:line="49" pos:column="10">TK_ID<pos:position pos:line="49" pos:column="15"/></name></expr>:<pos:position pos:line="49" pos:column="16"/></case>
    <case pos:line="50" pos:column="5">case <expr><name pos:line="50" pos:column="10">TK_DOT<pos:position pos:line="50" pos:column="16"/></name></expr>:<pos:position pos:line="50" pos:column="17"/></case> <block pos:line="50" pos:column="18">{
      <decl_stmt><decl><type><specifier pos:line="51" pos:column="7">const<pos:position pos:line="51" pos:column="12"/></specifier> <name pos:line="51" pos:column="13">char<pos:position pos:line="51" pos:column="17"/></name> <modifier pos:line="51" pos:column="18">*<pos:position pos:line="51" pos:column="19"/></modifier></type><name pos:line="51" pos:column="19">zColumn<pos:position pos:line="51" pos:column="26"/></name></decl>;<pos:position pos:line="51" pos:column="27"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="52" pos:column="7">const<pos:position pos:line="52" pos:column="12"/></specifier> <name pos:line="52" pos:column="13">char<pos:position pos:line="52" pos:column="17"/></name> <modifier pos:line="52" pos:column="18">*<pos:position pos:line="52" pos:column="19"/></modifier></type><name pos:line="52" pos:column="19">zTable<pos:position pos:line="52" pos:column="25"/></name></decl>;<pos:position pos:line="52" pos:column="26"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="53" pos:column="7">const<pos:position pos:line="53" pos:column="12"/></specifier> <name pos:line="53" pos:column="13">char<pos:position pos:line="53" pos:column="17"/></name> <modifier pos:line="53" pos:column="18">*<pos:position pos:line="53" pos:column="19"/></modifier></type><name pos:line="53" pos:column="19">zDb<pos:position pos:line="53" pos:column="22"/></name></decl>;<pos:position pos:line="53" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="54" pos:column="7">Expr<pos:position pos:line="54" pos:column="11"/></name> <modifier pos:line="54" pos:column="12">*<pos:position pos:line="54" pos:column="13"/></modifier></type><name pos:line="54" pos:column="13">pRight<pos:position pos:line="54" pos:column="19"/></name></decl>;<pos:position pos:line="54" pos:column="20"/></decl_stmt>

      <if pos:line="56" pos:column="7">if<condition pos:line="56" pos:column="9">( <expr><name><name pos:line="56" pos:column="11">pExpr<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">op<pos:position pos:line="56" pos:column="20"/></name></name><operator pos:line="56" pos:column="20">==<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">TK_ID<pos:position pos:line="56" pos:column="27"/></name></expr> )<pos:position pos:line="56" pos:column="29"/></condition><then><block pos:line="56" pos:column="29">{
        <expr_stmt><expr><name pos:line="57" pos:column="9">zDb<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <literal type="number" pos:line="57" pos:column="15">0<pos:position pos:line="57" pos:column="16"/></literal></expr>;<pos:position pos:line="57" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">zTable<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <literal type="number" pos:line="58" pos:column="18">0<pos:position pos:line="58" pos:column="19"/></literal></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="59" pos:column="9">zColumn<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <name><name pos:line="59" pos:column="19">pExpr<pos:position pos:line="59" pos:column="24"/></name><operator pos:line="59" pos:column="24">-&gt;<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="26">u<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">.<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="28">zToken<pos:position pos:line="59" pos:column="34"/></name></name></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="60" pos:column="8"/></block></then><else pos:line="60" pos:column="8">else<block pos:line="60" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">notValid<pos:position pos:line="61" pos:column="17"/></name><argument_list pos:line="61" pos:column="17">(<argument><expr><name pos:line="61" pos:column="18">pParse<pos:position pos:line="61" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="26">pNC<pos:position pos:line="61" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="31">"the \".\" operator"<pos:position pos:line="61" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="53">NC_IdxExpr<pos:position pos:line="61" pos:column="63"/></name></expr></argument>)<pos:position pos:line="61" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name pos:line="62" pos:column="9">pRight<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <name><name pos:line="62" pos:column="18">pExpr<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">-&gt;<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="25">pRight<pos:position pos:line="62" pos:column="31"/></name></name></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>
        <if pos:line="63" pos:column="9">if<condition pos:line="63" pos:column="11">( <expr><name><name pos:line="63" pos:column="13">pRight<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">-&gt;<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="21">op<pos:position pos:line="63" pos:column="23"/></name></name><operator pos:line="63" pos:column="23">==<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="25">TK_ID<pos:position pos:line="63" pos:column="30"/></name></expr> )<pos:position pos:line="63" pos:column="32"/></condition><then><block pos:line="63" pos:column="32">{
          <expr_stmt><expr><name pos:line="64" pos:column="11">zDb<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <literal type="number" pos:line="64" pos:column="17">0<pos:position pos:line="64" pos:column="18"/></literal></expr>;<pos:position pos:line="64" pos:column="19"/></expr_stmt>
          <expr_stmt><expr><name pos:line="65" pos:column="11">zTable<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">=<pos:position pos:line="65" pos:column="19"/></operator> <name><name pos:line="65" pos:column="20">pExpr<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">-&gt;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="27">pLeft<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">-&gt;<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="34">u<pos:position pos:line="65" pos:column="35"/></name><operator pos:line="65" pos:column="35">.<pos:position pos:line="65" pos:column="36"/></operator><name pos:line="65" pos:column="36">zToken<pos:position pos:line="65" pos:column="42"/></name></name></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt>
          <expr_stmt><expr><name pos:line="66" pos:column="11">zColumn<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">=<pos:position pos:line="66" pos:column="20"/></operator> <name><name pos:line="66" pos:column="21">pRight<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">-&gt;<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="29">u<pos:position pos:line="66" pos:column="30"/></name><operator pos:line="66" pos:column="30">.<pos:position pos:line="66" pos:column="31"/></operator><name pos:line="66" pos:column="31">zToken<pos:position pos:line="66" pos:column="37"/></name></name></expr>;<pos:position pos:line="66" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block></then><else pos:line="67" pos:column="10">else<block pos:line="67" pos:column="14">{
          <expr_stmt><expr><call><name pos:line="68" pos:column="11">assert<pos:position pos:line="68" pos:column="17"/></name><argument_list pos:line="68" pos:column="17">( <argument><expr><name><name pos:line="68" pos:column="19">pRight<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">-&gt;<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="27">op<pos:position pos:line="68" pos:column="29"/></name></name><operator pos:line="68" pos:column="29">==<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="31">TK_DOT<pos:position pos:line="68" pos:column="37"/></name></expr></argument> )<pos:position pos:line="68" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="40"/></expr_stmt>
          <expr_stmt><expr><name pos:line="69" pos:column="11">zDb<pos:position pos:line="69" pos:column="14"/></name> <operator pos:line="69" pos:column="15">=<pos:position pos:line="69" pos:column="16"/></operator> <name><name pos:line="69" pos:column="17">pExpr<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">-&gt;<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="24">pLeft<pos:position pos:line="69" pos:column="29"/></name><operator pos:line="69" pos:column="29">-&gt;<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="31">u<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">.<pos:position pos:line="69" pos:column="33"/></operator><name pos:line="69" pos:column="33">zToken<pos:position pos:line="69" pos:column="39"/></name></name></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
          <expr_stmt><expr><name pos:line="70" pos:column="11">zTable<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">=<pos:position pos:line="70" pos:column="19"/></operator> <name><name pos:line="70" pos:column="20">pRight<pos:position pos:line="70" pos:column="26"/></name><operator pos:line="70" pos:column="26">-&gt;<pos:position pos:line="70" pos:column="31"/></operator><name pos:line="70" pos:column="28">pLeft<pos:position pos:line="70" pos:column="33"/></name><operator pos:line="70" pos:column="33">-&gt;<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="35">u<pos:position pos:line="70" pos:column="36"/></name><operator pos:line="70" pos:column="36">.<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="37">zToken<pos:position pos:line="70" pos:column="43"/></name></name></expr>;<pos:position pos:line="70" pos:column="44"/></expr_stmt>
          <expr_stmt><expr><name pos:line="71" pos:column="11">zColumn<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator> <name><name pos:line="71" pos:column="21">pRight<pos:position pos:line="71" pos:column="27"/></name><operator pos:line="71" pos:column="27">-&gt;<pos:position pos:line="71" pos:column="32"/></operator><name pos:line="71" pos:column="29">pRight<pos:position pos:line="71" pos:column="35"/></name><operator pos:line="71" pos:column="35">-&gt;<pos:position pos:line="71" pos:column="40"/></operator><name pos:line="71" pos:column="37">u<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">.<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="39">zToken<pos:position pos:line="71" pos:column="45"/></name></name></expr>;<pos:position pos:line="71" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></else></if>
      }<pos:position pos:line="73" pos:column="8"/></block></else></if>
      <return pos:line="74" pos:column="7">return <expr><call><name pos:line="74" pos:column="14">lookupName<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><name pos:line="74" pos:column="25">pParse<pos:position pos:line="74" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="33">zDb<pos:position pos:line="74" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="38">zTable<pos:position pos:line="74" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="46">zColumn<pos:position pos:line="74" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="55">pNC<pos:position pos:line="74" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="60">pExpr<pos:position pos:line="74" pos:column="65"/></name></expr></argument>)<pos:position pos:line="74" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="67"/></return>
    }<pos:position pos:line="75" pos:column="6"/></block>

    <comment type="block" pos:line="77" pos:column="5">/* Resolve function names
    */</comment>
    <case pos:line="79" pos:column="5">case <expr><name pos:line="79" pos:column="10">TK_FUNCTION<pos:position pos:line="79" pos:column="21"/></name></expr>:<pos:position pos:line="79" pos:column="22"/></case> <block pos:line="79" pos:column="23">{
      <decl_stmt><decl><type><name pos:line="80" pos:column="7">ExprList<pos:position pos:line="80" pos:column="15"/></name> <modifier pos:line="80" pos:column="16">*<pos:position pos:line="80" pos:column="17"/></modifier></type><name pos:line="80" pos:column="17">pList<pos:position pos:line="80" pos:column="22"/></name> <init pos:line="80" pos:column="23">= <expr><name><name pos:line="80" pos:column="25">pExpr<pos:position pos:line="80" pos:column="30"/></name><operator pos:line="80" pos:column="30">-&gt;<pos:position pos:line="80" pos:column="35"/></operator><name pos:line="80" pos:column="32">x<pos:position pos:line="80" pos:column="33"/></name><operator pos:line="80" pos:column="33">.<pos:position pos:line="80" pos:column="34"/></operator><name pos:line="80" pos:column="34">pList<pos:position pos:line="80" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="80" pos:column="40"/></decl_stmt>    <comment type="block" pos:line="80" pos:column="44">/* The argument list */</comment>
      <decl_stmt><decl><type><name pos:line="81" pos:column="7">int<pos:position pos:line="81" pos:column="10"/></name></type> <name pos:line="81" pos:column="11">n<pos:position pos:line="81" pos:column="12"/></name> <init pos:line="81" pos:column="13">= <expr><ternary><condition><expr><name pos:line="81" pos:column="15">pList<pos:position pos:line="81" pos:column="20"/></name></expr> ?<pos:position pos:line="81" pos:column="22"/></condition><then pos:line="81" pos:column="22"> <expr><name><name pos:line="81" pos:column="23">pList<pos:position pos:line="81" pos:column="28"/></name><operator pos:line="81" pos:column="28">-&gt;<pos:position pos:line="81" pos:column="33"/></operator><name pos:line="81" pos:column="30">nExpr<pos:position pos:line="81" pos:column="35"/></name></name></expr> <pos:position pos:line="81" pos:column="36"/></then><else pos:line="81" pos:column="36">: <expr><literal type="number" pos:line="81" pos:column="38">0<pos:position pos:line="81" pos:column="39"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="81" pos:column="40"/></decl_stmt>    <comment type="block" pos:line="81" pos:column="44">/* Number of arguments */</comment>
      <decl_stmt><decl><type><name pos:line="82" pos:column="7">int<pos:position pos:line="82" pos:column="10"/></name></type> <name pos:line="82" pos:column="11">no_such_func<pos:position pos:line="82" pos:column="23"/></name> <init pos:line="82" pos:column="24">= <expr><literal type="number" pos:line="82" pos:column="26">0<pos:position pos:line="82" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="82" pos:column="28"/></decl_stmt>       <comment type="block" pos:line="82" pos:column="35">/* True if no such function exists */</comment>
      <decl_stmt><decl><type><name pos:line="83" pos:column="7">int<pos:position pos:line="83" pos:column="10"/></name></type> <name pos:line="83" pos:column="11">wrong_num_args<pos:position pos:line="83" pos:column="25"/></name> <init pos:line="83" pos:column="26">= <expr><literal type="number" pos:line="83" pos:column="28">0<pos:position pos:line="83" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="83" pos:column="30"/></decl_stmt>     <comment type="block" pos:line="83" pos:column="35">/* True if wrong number of arguments */</comment>
      <decl_stmt><decl><type><name pos:line="84" pos:column="7">int<pos:position pos:line="84" pos:column="10"/></name></type> <name pos:line="84" pos:column="11">is_agg<pos:position pos:line="84" pos:column="17"/></name> <init pos:line="84" pos:column="18">= <expr><literal type="number" pos:line="84" pos:column="20">0<pos:position pos:line="84" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="84" pos:column="22"/></decl_stmt>             <comment type="block" pos:line="84" pos:column="35">/* True if is an aggregate function */</comment>
      <decl_stmt><decl><type><name pos:line="85" pos:column="7">int<pos:position pos:line="85" pos:column="10"/></name></type> <name pos:line="85" pos:column="11">nId<pos:position pos:line="85" pos:column="14"/></name></decl>;<pos:position pos:line="85" pos:column="15"/></decl_stmt>                    <comment type="block" pos:line="85" pos:column="35">/* Number of characters in function name */</comment>
      <decl_stmt><decl><type><specifier pos:line="86" pos:column="7">const<pos:position pos:line="86" pos:column="12"/></specifier> <name pos:line="86" pos:column="13">char<pos:position pos:line="86" pos:column="17"/></name> <modifier pos:line="86" pos:column="18">*<pos:position pos:line="86" pos:column="19"/></modifier></type><name pos:line="86" pos:column="19">zId<pos:position pos:line="86" pos:column="22"/></name></decl>;<pos:position pos:line="86" pos:column="23"/></decl_stmt>            <comment type="block" pos:line="86" pos:column="35">/* The function name. */</comment>
      <decl_stmt><decl><type><name pos:line="87" pos:column="7">FuncDef<pos:position pos:line="87" pos:column="14"/></name> <modifier pos:line="87" pos:column="15">*<pos:position pos:line="87" pos:column="16"/></modifier></type><name pos:line="87" pos:column="16">pDef<pos:position pos:line="87" pos:column="20"/></name></decl>;<pos:position pos:line="87" pos:column="21"/></decl_stmt>              <comment type="block" pos:line="87" pos:column="35">/* Information about the function */</comment>
      <decl_stmt><decl><type><name pos:line="88" pos:column="7">u8<pos:position pos:line="88" pos:column="9"/></name></type> <name pos:line="88" pos:column="10">enc<pos:position pos:line="88" pos:column="13"/></name> <init pos:line="88" pos:column="14">= <expr><call><name pos:line="88" pos:column="16">ENC<pos:position pos:line="88" pos:column="19"/></name><argument_list pos:line="88" pos:column="19">(<argument><expr><name><name pos:line="88" pos:column="20">pParse<pos:position pos:line="88" pos:column="26"/></name><operator pos:line="88" pos:column="26">-&gt;<pos:position pos:line="88" pos:column="31"/></operator><name pos:line="88" pos:column="28">db<pos:position pos:line="88" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="88" pos:column="32"/></decl_stmt>   <comment type="block" pos:line="88" pos:column="35">/* The database encoding */</comment>

      <expr_stmt><expr><call><name pos:line="90" pos:column="7">assert<pos:position pos:line="90" pos:column="13"/></name><argument_list pos:line="90" pos:column="13">( <argument><expr><operator pos:line="90" pos:column="15">!<pos:position pos:line="90" pos:column="16"/></operator><call><name pos:line="90" pos:column="16">ExprHasProperty<pos:position pos:line="90" pos:column="31"/></name><argument_list pos:line="90" pos:column="31">(<argument><expr><name pos:line="90" pos:column="32">pExpr<pos:position pos:line="90" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="39">EP_xIsSelect<pos:position pos:line="90" pos:column="51"/></name></expr></argument>)<pos:position pos:line="90" pos:column="52"/></argument_list></call></expr></argument> )<pos:position pos:line="90" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="91" pos:column="7">zId<pos:position pos:line="91" pos:column="10"/></name> <operator pos:line="91" pos:column="11">=<pos:position pos:line="91" pos:column="12"/></operator> <name><name pos:line="91" pos:column="13">pExpr<pos:position pos:line="91" pos:column="18"/></name><operator pos:line="91" pos:column="18">-&gt;<pos:position pos:line="91" pos:column="23"/></operator><name pos:line="91" pos:column="20">u<pos:position pos:line="91" pos:column="21"/></name><operator pos:line="91" pos:column="21">.<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="22">zToken<pos:position pos:line="91" pos:column="28"/></name></name></expr>;<pos:position pos:line="91" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="92" pos:column="7">nId<pos:position pos:line="92" pos:column="10"/></name> <operator pos:line="92" pos:column="11">=<pos:position pos:line="92" pos:column="12"/></operator> <call><name pos:line="92" pos:column="13">sqlite3Strlen30<pos:position pos:line="92" pos:column="28"/></name><argument_list pos:line="92" pos:column="28">(<argument><expr><name pos:line="92" pos:column="29">zId<pos:position pos:line="92" pos:column="32"/></name></expr></argument>)<pos:position pos:line="92" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name pos:line="93" pos:column="7">pDef<pos:position pos:line="93" pos:column="11"/></name> <operator pos:line="93" pos:column="12">=<pos:position pos:line="93" pos:column="13"/></operator> <call><name pos:line="93" pos:column="14">sqlite3FindFunction<pos:position pos:line="93" pos:column="33"/></name><argument_list pos:line="93" pos:column="33">(<argument><expr><name><name pos:line="93" pos:column="34">pParse<pos:position pos:line="93" pos:column="40"/></name><operator pos:line="93" pos:column="40">-&gt;<pos:position pos:line="93" pos:column="45"/></operator><name pos:line="93" pos:column="42">db<pos:position pos:line="93" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="46">zId<pos:position pos:line="93" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="51">n<pos:position pos:line="93" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="54">enc<pos:position pos:line="93" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="59">0<pos:position pos:line="93" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="62"/></expr_stmt>
      <if pos:line="94" pos:column="7">if<condition pos:line="94" pos:column="9">( <expr><name pos:line="94" pos:column="11">pDef<pos:position pos:line="94" pos:column="15"/></name><operator pos:line="94" pos:column="15">==<pos:position pos:line="94" pos:column="17"/></operator><literal type="number" pos:line="94" pos:column="17">0<pos:position pos:line="94" pos:column="18"/></literal></expr> )<pos:position pos:line="94" pos:column="20"/></condition><then><block pos:line="94" pos:column="20">{
        <expr_stmt><expr><name pos:line="95" pos:column="9">pDef<pos:position pos:line="95" pos:column="13"/></name> <operator pos:line="95" pos:column="14">=<pos:position pos:line="95" pos:column="15"/></operator> <call><name pos:line="95" pos:column="16">sqlite3FindFunction<pos:position pos:line="95" pos:column="35"/></name><argument_list pos:line="95" pos:column="35">(<argument><expr><name><name pos:line="95" pos:column="36">pParse<pos:position pos:line="95" pos:column="42"/></name><operator pos:line="95" pos:column="42">-&gt;<pos:position pos:line="95" pos:column="47"/></operator><name pos:line="95" pos:column="44">db<pos:position pos:line="95" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="48">zId<pos:position pos:line="95" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="53">-<pos:position pos:line="95" pos:column="54"/></operator><literal type="number" pos:line="95" pos:column="54">2<pos:position pos:line="95" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="57">enc<pos:position pos:line="95" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="62">0<pos:position pos:line="95" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="65"/></expr_stmt>
        <if pos:line="96" pos:column="9">if<condition pos:line="96" pos:column="11">( <expr><name pos:line="96" pos:column="13">pDef<pos:position pos:line="96" pos:column="17"/></name><operator pos:line="96" pos:column="17">==<pos:position pos:line="96" pos:column="19"/></operator><literal type="number" pos:line="96" pos:column="19">0<pos:position pos:line="96" pos:column="20"/></literal></expr> )<pos:position pos:line="96" pos:column="22"/></condition><then><block pos:line="96" pos:column="22">{
          <expr_stmt><expr><name pos:line="97" pos:column="11">no_such_func<pos:position pos:line="97" pos:column="23"/></name> <operator pos:line="97" pos:column="24">=<pos:position pos:line="97" pos:column="25"/></operator> <literal type="number" pos:line="97" pos:column="26">1<pos:position pos:line="97" pos:column="27"/></literal></expr>;<pos:position pos:line="97" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="98" pos:column="10"/></block></then><else pos:line="98" pos:column="10">else<block pos:line="98" pos:column="14">{
          <expr_stmt><expr><name pos:line="99" pos:column="11">wrong_num_args<pos:position pos:line="99" pos:column="25"/></name> <operator pos:line="99" pos:column="26">=<pos:position pos:line="99" pos:column="27"/></operator> <literal type="number" pos:line="99" pos:column="28">1<pos:position pos:line="99" pos:column="29"/></literal></expr>;<pos:position pos:line="99" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="100" pos:column="10"/></block></else></if>
      }<pos:position pos:line="101" pos:column="8"/></block></then><else pos:line="101" pos:column="8">else<block pos:line="101" pos:column="12">{
        <expr_stmt><expr><name pos:line="102" pos:column="9">is_agg<pos:position pos:line="102" pos:column="15"/></name> <operator pos:line="102" pos:column="16">=<pos:position pos:line="102" pos:column="17"/></operator> <name><name pos:line="102" pos:column="18">pDef<pos:position pos:line="102" pos:column="22"/></name><operator pos:line="102" pos:column="22">-&gt;<pos:position pos:line="102" pos:column="27"/></operator><name pos:line="102" pos:column="24">xFinalize<pos:position pos:line="102" pos:column="33"/></name></name><operator pos:line="102" pos:column="33">!=<pos:position pos:line="102" pos:column="35"/></operator><literal type="number" pos:line="102" pos:column="35">0<pos:position pos:line="102" pos:column="36"/></literal></expr>;<pos:position pos:line="102" pos:column="37"/></expr_stmt>
        <if pos:line="103" pos:column="9">if<condition pos:line="103" pos:column="11">( <expr><name><name pos:line="103" pos:column="13">pDef<pos:position pos:line="103" pos:column="17"/></name><operator pos:line="103" pos:column="17">-&gt;<pos:position pos:line="103" pos:column="22"/></operator><name pos:line="103" pos:column="19">funcFlags<pos:position pos:line="103" pos:column="28"/></name></name> <operator pos:line="103" pos:column="29">&amp;<pos:position pos:line="103" pos:column="34"/></operator> <name pos:line="103" pos:column="31">SQLITE_FUNC_UNLIKELY<pos:position pos:line="103" pos:column="51"/></name></expr> )<pos:position pos:line="103" pos:column="53"/></condition><then><block pos:line="103" pos:column="53">{
          <expr_stmt><expr><call><name pos:line="104" pos:column="11">ExprSetProperty<pos:position pos:line="104" pos:column="26"/></name><argument_list pos:line="104" pos:column="26">(<argument><expr><name pos:line="104" pos:column="27">pExpr<pos:position pos:line="104" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="34">EP_Unlikely<pos:position pos:line="104" pos:column="45"/></name><operator pos:line="104" pos:column="45">|<pos:position pos:line="104" pos:column="46"/></operator><name pos:line="104" pos:column="46">EP_Skip<pos:position pos:line="104" pos:column="53"/></name></expr></argument>)<pos:position pos:line="104" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="55"/></expr_stmt>
          <if pos:line="105" pos:column="11">if<condition pos:line="105" pos:column="13">( <expr><name pos:line="105" pos:column="15">n<pos:position pos:line="105" pos:column="16"/></name><operator pos:line="105" pos:column="16">==<pos:position pos:line="105" pos:column="18"/></operator><literal type="number" pos:line="105" pos:column="18">2<pos:position pos:line="105" pos:column="19"/></literal></expr> )<pos:position pos:line="105" pos:column="21"/></condition><then><block pos:line="105" pos:column="21">{
            <expr_stmt><expr><name><name pos:line="106" pos:column="13">pExpr<pos:position pos:line="106" pos:column="18"/></name><operator pos:line="106" pos:column="18">-&gt;<pos:position pos:line="106" pos:column="23"/></operator><name pos:line="106" pos:column="20">iTable<pos:position pos:line="106" pos:column="26"/></name></name> <operator pos:line="106" pos:column="27">=<pos:position pos:line="106" pos:column="28"/></operator> <call><name pos:line="106" pos:column="29">exprProbability<pos:position pos:line="106" pos:column="44"/></name><argument_list pos:line="106" pos:column="44">(<argument><expr><name><name pos:line="106" pos:column="45">pList<pos:position pos:line="106" pos:column="50"/></name><operator pos:line="106" pos:column="50">-&gt;<pos:position pos:line="106" pos:column="55"/></operator><name pos:line="106" pos:column="52">a<pos:position pos:line="106" pos:column="53"/></name><index pos:line="106" pos:column="53">[<expr><literal type="number" pos:line="106" pos:column="54">1<pos:position pos:line="106" pos:column="55"/></literal></expr>]<pos:position pos:line="106" pos:column="56"/></index></name><operator pos:line="106" pos:column="56">.<pos:position pos:line="106" pos:column="57"/></operator><name pos:line="106" pos:column="57">pExpr<pos:position pos:line="106" pos:column="62"/></name></expr></argument>)<pos:position pos:line="106" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="64"/></expr_stmt>
            <if pos:line="107" pos:column="13">if<condition pos:line="107" pos:column="15">( <expr><name><name pos:line="107" pos:column="17">pExpr<pos:position pos:line="107" pos:column="22"/></name><operator pos:line="107" pos:column="22">-&gt;<pos:position pos:line="107" pos:column="27"/></operator><name pos:line="107" pos:column="24">iTable<pos:position pos:line="107" pos:column="30"/></name></name><operator pos:line="107" pos:column="30">&lt;<pos:position pos:line="107" pos:column="34"/></operator><literal type="number" pos:line="107" pos:column="31">0<pos:position pos:line="107" pos:column="32"/></literal></expr> )<pos:position pos:line="107" pos:column="34"/></condition><then><block pos:line="107" pos:column="34">{
              <expr_stmt><expr><call><name pos:line="108" pos:column="15">sqlite3ErrorMsg<pos:position pos:line="108" pos:column="30"/></name><argument_list pos:line="108" pos:column="30">(<argument><expr><name pos:line="108" pos:column="31">pParse<pos:position pos:line="108" pos:column="37"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="109" pos:column="17">"second argument to likelihood() must be a "<pos:position pos:line="109" pos:column="61"/></literal>
                <literal type="string" pos:line="110" pos:column="17">"constant between 0.0 and 1.0"<pos:position pos:line="110" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="49"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="111" pos:column="15">pNC<pos:position pos:line="111" pos:column="18"/></name><operator pos:line="111" pos:column="18">-&gt;<pos:position pos:line="111" pos:column="23"/></operator><name pos:line="111" pos:column="20">nErr<pos:position pos:line="111" pos:column="24"/></name></name><operator pos:line="111" pos:column="24">++<pos:position pos:line="111" pos:column="26"/></operator></expr>;<pos:position pos:line="111" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="112" pos:column="14"/></block></then></if>
          }<pos:position pos:line="113" pos:column="12"/></block></then><else pos:line="113" pos:column="12">else<block pos:line="113" pos:column="16">{
            <comment type="block" pos:line="114" pos:column="13">/* EVIDENCE-OF: R-61304-29449 The unlikely(X) function is
            ** equivalent to likelihood(X, 0.0625).
            ** EVIDENCE-OF: R-01283-11636 The unlikely(X) function is
            ** short-hand for likelihood(X,0.0625).
            ** EVIDENCE-OF: R-36850-34127 The likely(X) function is short-hand
            ** for likelihood(X,0.9375).
            ** EVIDENCE-OF: R-53436-40973 The likely(X) function is equivalent
            ** to likelihood(X,0.9375). */</comment>
            <comment type="block" pos:line="122" pos:column="13">/* TUNING: unlikely() probability is 0.0625.  likely() is 0.9375 */</comment>
            <expr_stmt><expr><name><name pos:line="123" pos:column="13">pExpr<pos:position pos:line="123" pos:column="18"/></name><operator pos:line="123" pos:column="18">-&gt;<pos:position pos:line="123" pos:column="23"/></operator><name pos:line="123" pos:column="20">iTable<pos:position pos:line="123" pos:column="26"/></name></name> <operator pos:line="123" pos:column="27">=<pos:position pos:line="123" pos:column="28"/></operator> <ternary><condition><expr><name><name pos:line="123" pos:column="29">pDef<pos:position pos:line="123" pos:column="33"/></name><operator pos:line="123" pos:column="33">-&gt;<pos:position pos:line="123" pos:column="38"/></operator><name pos:line="123" pos:column="35">zName<pos:position pos:line="123" pos:column="40"/></name><index pos:line="123" pos:column="40">[<expr><literal type="number" pos:line="123" pos:column="41">0<pos:position pos:line="123" pos:column="42"/></literal></expr>]<pos:position pos:line="123" pos:column="43"/></index></name><operator pos:line="123" pos:column="43">==<pos:position pos:line="123" pos:column="45"/></operator><literal type="char" pos:line="123" pos:column="45">'u'<pos:position pos:line="123" pos:column="48"/></literal></expr> ?<pos:position pos:line="123" pos:column="50"/></condition><then pos:line="123" pos:column="50"> <expr><literal type="number" pos:line="123" pos:column="51">8388608<pos:position pos:line="123" pos:column="58"/></literal></expr> <pos:position pos:line="123" pos:column="59"/></then><else pos:line="123" pos:column="59">: <expr><literal type="number" pos:line="123" pos:column="61">125829120<pos:position pos:line="123" pos:column="70"/></literal></expr></else></ternary></expr>;<pos:position pos:line="123" pos:column="71"/></expr_stmt>
          }<pos:position pos:line="124" pos:column="12"/></block></else></if>             
        }<pos:position pos:line="125" pos:column="10"/></block></then></if>
<cpp:ifndef pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">ifndef<pos:position pos:line="126" pos:column="8"/></cpp:directive> <name pos:line="126" pos:column="9">SQLITE_OMIT_AUTHORIZATION<pos:position pos:line="126" pos:column="34"/></name></cpp:ifndef>
        <block pos:line="127" pos:column="9">{
          <decl_stmt><decl><type><name pos:line="128" pos:column="11">int<pos:position pos:line="128" pos:column="14"/></name></type> <name pos:line="128" pos:column="15">auth<pos:position pos:line="128" pos:column="19"/></name> <init pos:line="128" pos:column="20">= <expr><call><name pos:line="128" pos:column="22">sqlite3AuthCheck<pos:position pos:line="128" pos:column="38"/></name><argument_list pos:line="128" pos:column="38">(<argument><expr><name pos:line="128" pos:column="39">pParse<pos:position pos:line="128" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="47">SQLITE_FUNCTION<pos:position pos:line="128" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="128" pos:column="64">0<pos:position pos:line="128" pos:column="65"/></literal></expr></argument>,<argument><expr><name><name pos:line="128" pos:column="66">pDef<pos:position pos:line="128" pos:column="70"/></name><operator pos:line="128" pos:column="70">-&gt;<pos:position pos:line="128" pos:column="75"/></operator><name pos:line="128" pos:column="72">zName<pos:position pos:line="128" pos:column="77"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="128" pos:column="78">0<pos:position pos:line="128" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="128" pos:column="81"/></decl_stmt>
          <if pos:line="129" pos:column="11">if<condition pos:line="129" pos:column="13">( <expr><name pos:line="129" pos:column="15">auth<pos:position pos:line="129" pos:column="19"/></name><operator pos:line="129" pos:column="19">!=<pos:position pos:line="129" pos:column="21"/></operator><name pos:line="129" pos:column="21">SQLITE_OK<pos:position pos:line="129" pos:column="30"/></name></expr> )<pos:position pos:line="129" pos:column="32"/></condition><then><block pos:line="129" pos:column="32">{
            <if pos:line="130" pos:column="13">if<condition pos:line="130" pos:column="15">( <expr><name pos:line="130" pos:column="17">auth<pos:position pos:line="130" pos:column="21"/></name><operator pos:line="130" pos:column="21">==<pos:position pos:line="130" pos:column="23"/></operator><name pos:line="130" pos:column="23">SQLITE_DENY<pos:position pos:line="130" pos:column="34"/></name></expr> )<pos:position pos:line="130" pos:column="36"/></condition><then><block pos:line="130" pos:column="36">{
              <expr_stmt><expr><call><name pos:line="131" pos:column="15">sqlite3ErrorMsg<pos:position pos:line="131" pos:column="30"/></name><argument_list pos:line="131" pos:column="30">(<argument><expr><name pos:line="131" pos:column="31">pParse<pos:position pos:line="131" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="39">"not authorized to use function: %s"<pos:position pos:line="131" pos:column="75"/></literal></expr></argument>,
                                      <argument><expr><name><name pos:line="132" pos:column="39">pDef<pos:position pos:line="132" pos:column="43"/></name><operator pos:line="132" pos:column="43">-&gt;<pos:position pos:line="132" pos:column="48"/></operator><name pos:line="132" pos:column="45">zName<pos:position pos:line="132" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="52"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="133" pos:column="15">pNC<pos:position pos:line="133" pos:column="18"/></name><operator pos:line="133" pos:column="18">-&gt;<pos:position pos:line="133" pos:column="23"/></operator><name pos:line="133" pos:column="20">nErr<pos:position pos:line="133" pos:column="24"/></name></name><operator pos:line="133" pos:column="24">++<pos:position pos:line="133" pos:column="26"/></operator></expr>;<pos:position pos:line="133" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="134" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="135" pos:column="13">pExpr<pos:position pos:line="135" pos:column="18"/></name><operator pos:line="135" pos:column="18">-&gt;<pos:position pos:line="135" pos:column="23"/></operator><name pos:line="135" pos:column="20">op<pos:position pos:line="135" pos:column="22"/></name></name> <operator pos:line="135" pos:column="23">=<pos:position pos:line="135" pos:column="24"/></operator> <name pos:line="135" pos:column="25">TK_NULL<pos:position pos:line="135" pos:column="32"/></name></expr>;<pos:position pos:line="135" pos:column="33"/></expr_stmt>
            <return pos:line="136" pos:column="13">return <expr><name pos:line="136" pos:column="20">WRC_Prune<pos:position pos:line="136" pos:column="29"/></name></expr>;<pos:position pos:line="136" pos:column="30"/></return>
          }<pos:position pos:line="137" pos:column="12"/></block></then></if>
        }<pos:position pos:line="138" pos:column="10"/></block>
<cpp:endif pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">endif<pos:position pos:line="139" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="140" pos:column="9">if<condition pos:line="140" pos:column="11">( <expr><name><name pos:line="140" pos:column="13">pDef<pos:position pos:line="140" pos:column="17"/></name><operator pos:line="140" pos:column="17">-&gt;<pos:position pos:line="140" pos:column="22"/></operator><name pos:line="140" pos:column="19">funcFlags<pos:position pos:line="140" pos:column="28"/></name></name> <operator pos:line="140" pos:column="29">&amp;<pos:position pos:line="140" pos:column="34"/></operator> <operator pos:line="140" pos:column="31">(<pos:position pos:line="140" pos:column="32"/></operator><name pos:line="140" pos:column="32">SQLITE_FUNC_CONSTANT<pos:position pos:line="140" pos:column="52"/></name><operator pos:line="140" pos:column="52">|<pos:position pos:line="140" pos:column="53"/></operator><name pos:line="140" pos:column="53">SQLITE_FUNC_SLOCHNG<pos:position pos:line="140" pos:column="72"/></name><operator pos:line="140" pos:column="72">)<pos:position pos:line="140" pos:column="73"/></operator></expr> )<pos:position pos:line="140" pos:column="75"/></condition><then><block pos:line="140" pos:column="75">{
          <comment type="block" pos:line="141" pos:column="11">/* For the purposes of the EP_ConstFunc flag, date and time
          ** functions and other functions that change slowly are considered
          ** constant because they are constant for the duration of one query */</comment>
          <expr_stmt><expr><call><name pos:line="144" pos:column="11">ExprSetProperty<pos:position pos:line="144" pos:column="26"/></name><argument_list pos:line="144" pos:column="26">(<argument><expr><name pos:line="144" pos:column="27">pExpr<pos:position pos:line="144" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="144" pos:column="33">EP_ConstFunc<pos:position pos:line="144" pos:column="45"/></name></expr></argument>)<pos:position pos:line="144" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="145" pos:column="10"/></block></then></if>
        <if pos:line="146" pos:column="9">if<condition pos:line="146" pos:column="11">( <expr><operator pos:line="146" pos:column="13">(<pos:position pos:line="146" pos:column="14"/></operator><name><name pos:line="146" pos:column="14">pDef<pos:position pos:line="146" pos:column="18"/></name><operator pos:line="146" pos:column="18">-&gt;<pos:position pos:line="146" pos:column="23"/></operator><name pos:line="146" pos:column="20">funcFlags<pos:position pos:line="146" pos:column="29"/></name></name> <operator pos:line="146" pos:column="30">&amp;<pos:position pos:line="146" pos:column="35"/></operator> <name pos:line="146" pos:column="32">SQLITE_FUNC_CONSTANT<pos:position pos:line="146" pos:column="52"/></name><operator pos:line="146" pos:column="52">)<pos:position pos:line="146" pos:column="53"/></operator><operator pos:line="146" pos:column="53">==<pos:position pos:line="146" pos:column="55"/></operator><literal type="number" pos:line="146" pos:column="55">0<pos:position pos:line="146" pos:column="56"/></literal></expr> )<pos:position pos:line="146" pos:column="58"/></condition><then><block pos:line="146" pos:column="58">{
          <comment type="block" pos:line="147" pos:column="11">/* Date/time functions that use 'now', and other functions like
          ** sqlite_version() that might change over time cannot be used
          ** in an index. */</comment>
          <expr_stmt><expr><call><name pos:line="150" pos:column="11">notValid<pos:position pos:line="150" pos:column="19"/></name><argument_list pos:line="150" pos:column="19">(<argument><expr><name pos:line="150" pos:column="20">pParse<pos:position pos:line="150" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="28">pNC<pos:position pos:line="150" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="33">"non-deterministic functions"<pos:position pos:line="150" pos:column="62"/></literal></expr></argument>,
                   <argument><expr><name pos:line="151" pos:column="20">NC_IdxExpr<pos:position pos:line="151" pos:column="30"/></name><operator pos:line="151" pos:column="30">|<pos:position pos:line="151" pos:column="31"/></operator><name pos:line="151" pos:column="31">NC_PartIdx<pos:position pos:line="151" pos:column="41"/></name></expr></argument>)<pos:position pos:line="151" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="152" pos:column="10"/></block></then></if>
      }<pos:position pos:line="153" pos:column="8"/></block></else></if>
      <if pos:line="154" pos:column="7">if<condition pos:line="154" pos:column="9">( <expr><name pos:line="154" pos:column="11">is_agg<pos:position pos:line="154" pos:column="17"/></name> <operator pos:line="154" pos:column="18">&amp;&amp;<pos:position pos:line="154" pos:column="28"/></operator> <operator pos:line="154" pos:column="21">(<pos:position pos:line="154" pos:column="22"/></operator><name><name pos:line="154" pos:column="22">pNC<pos:position pos:line="154" pos:column="25"/></name><operator pos:line="154" pos:column="25">-&gt;<pos:position pos:line="154" pos:column="30"/></operator><name pos:line="154" pos:column="27">ncFlags<pos:position pos:line="154" pos:column="34"/></name></name> <operator pos:line="154" pos:column="35">&amp;<pos:position pos:line="154" pos:column="40"/></operator> <name pos:line="154" pos:column="37">NC_AllowAgg<pos:position pos:line="154" pos:column="48"/></name><operator pos:line="154" pos:column="48">)<pos:position pos:line="154" pos:column="49"/></operator><operator pos:line="154" pos:column="49">==<pos:position pos:line="154" pos:column="51"/></operator><literal type="number" pos:line="154" pos:column="51">0<pos:position pos:line="154" pos:column="52"/></literal></expr> )<pos:position pos:line="154" pos:column="54"/></condition><then><block pos:line="154" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="155" pos:column="9">sqlite3ErrorMsg<pos:position pos:line="155" pos:column="24"/></name><argument_list pos:line="155" pos:column="24">(<argument><expr><name pos:line="155" pos:column="25">pParse<pos:position pos:line="155" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="33">"misuse of aggregate function %.*s()"<pos:position pos:line="155" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="155" pos:column="72">nId<pos:position pos:line="155" pos:column="75"/></name></expr></argument>,<argument><expr><name pos:line="155" pos:column="76">zId<pos:position pos:line="155" pos:column="79"/></name></expr></argument>)<pos:position pos:line="155" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="156" pos:column="9">pNC<pos:position pos:line="156" pos:column="12"/></name><operator pos:line="156" pos:column="12">-&gt;<pos:position pos:line="156" pos:column="17"/></operator><name pos:line="156" pos:column="14">nErr<pos:position pos:line="156" pos:column="18"/></name></name><operator pos:line="156" pos:column="18">++<pos:position pos:line="156" pos:column="20"/></operator></expr>;<pos:position pos:line="156" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="157" pos:column="9">is_agg<pos:position pos:line="157" pos:column="15"/></name> <operator pos:line="157" pos:column="16">=<pos:position pos:line="157" pos:column="17"/></operator> <literal type="number" pos:line="157" pos:column="18">0<pos:position pos:line="157" pos:column="19"/></literal></expr>;<pos:position pos:line="157" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="158" pos:column="8"/></block></then><elseif pos:line="158" pos:column="8">else <if pos:line="158" pos:column="13">if<condition pos:line="158" pos:column="15">( <expr><name pos:line="158" pos:column="17">no_such_func<pos:position pos:line="158" pos:column="29"/></name> <operator pos:line="158" pos:column="30">&amp;&amp;<pos:position pos:line="158" pos:column="40"/></operator> <name><name pos:line="158" pos:column="33">pParse<pos:position pos:line="158" pos:column="39"/></name><operator pos:line="158" pos:column="39">-&gt;<pos:position pos:line="158" pos:column="44"/></operator><name pos:line="158" pos:column="41">db<pos:position pos:line="158" pos:column="43"/></name><operator pos:line="158" pos:column="43">-&gt;<pos:position pos:line="158" pos:column="48"/></operator><name pos:line="158" pos:column="45">init<pos:position pos:line="158" pos:column="49"/></name><operator pos:line="158" pos:column="49">.<pos:position pos:line="158" pos:column="50"/></operator><name pos:line="158" pos:column="50">busy<pos:position pos:line="158" pos:column="54"/></name></name><operator pos:line="158" pos:column="54">==<pos:position pos:line="158" pos:column="56"/></operator><literal type="number" pos:line="158" pos:column="56">0<pos:position pos:line="158" pos:column="57"/></literal>
<cpp:ifdef pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">ifdef<pos:position pos:line="159" pos:column="7"/></cpp:directive> <name pos:line="159" pos:column="8">SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION<pos:position pos:line="159" pos:column="42"/></name></cpp:ifdef>
                <operator pos:line="160" pos:column="17">&amp;&amp;<pos:position pos:line="160" pos:column="27"/></operator> <name><name pos:line="160" pos:column="20">pParse<pos:position pos:line="160" pos:column="26"/></name><operator pos:line="160" pos:column="26">-&gt;<pos:position pos:line="160" pos:column="31"/></operator><name pos:line="160" pos:column="28">explain<pos:position pos:line="160" pos:column="35"/></name></name><operator pos:line="160" pos:column="35">==<pos:position pos:line="160" pos:column="37"/></operator><literal type="number" pos:line="160" pos:column="37">0<pos:position pos:line="160" pos:column="38"/></literal></expr>
<cpp:endif pos:line="161" pos:column="1">#<cpp:directive pos:line="161" pos:column="2">endif<pos:position pos:line="161" pos:column="7"/></cpp:directive></cpp:endif>
      )<pos:position pos:line="162" pos:column="8"/></condition><then><block pos:line="162" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="163" pos:column="9">sqlite3ErrorMsg<pos:position pos:line="163" pos:column="24"/></name><argument_list pos:line="163" pos:column="24">(<argument><expr><name pos:line="163" pos:column="25">pParse<pos:position pos:line="163" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="33">"no such function: %.*s"<pos:position pos:line="163" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="59">nId<pos:position pos:line="163" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="64">zId<pos:position pos:line="163" pos:column="67"/></name></expr></argument>)<pos:position pos:line="163" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="164" pos:column="9">pNC<pos:position pos:line="164" pos:column="12"/></name><operator pos:line="164" pos:column="12">-&gt;<pos:position pos:line="164" pos:column="17"/></operator><name pos:line="164" pos:column="14">nErr<pos:position pos:line="164" pos:column="18"/></name></name><operator pos:line="164" pos:column="18">++<pos:position pos:line="164" pos:column="20"/></operator></expr>;<pos:position pos:line="164" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="165" pos:column="8"/></block></then></if></elseif><elseif pos:line="165" pos:column="8">else <if pos:line="165" pos:column="13">if<condition pos:line="165" pos:column="15">( <expr><name pos:line="165" pos:column="17">wrong_num_args<pos:position pos:line="165" pos:column="31"/></name></expr> )<pos:position pos:line="165" pos:column="33"/></condition><then><block pos:line="165" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="166" pos:column="9">sqlite3ErrorMsg<pos:position pos:line="166" pos:column="24"/></name><argument_list pos:line="166" pos:column="24">(<argument><expr><name pos:line="166" pos:column="25">pParse<pos:position pos:line="166" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="166" pos:column="32">"wrong number of arguments to function %.*s()"<pos:position pos:line="166" pos:column="78"/></literal></expr></argument>,
             <argument><expr><name pos:line="167" pos:column="14">nId<pos:position pos:line="167" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="19">zId<pos:position pos:line="167" pos:column="22"/></name></expr></argument>)<pos:position pos:line="167" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="168" pos:column="9">pNC<pos:position pos:line="168" pos:column="12"/></name><operator pos:line="168" pos:column="12">-&gt;<pos:position pos:line="168" pos:column="17"/></operator><name pos:line="168" pos:column="14">nErr<pos:position pos:line="168" pos:column="18"/></name></name><operator pos:line="168" pos:column="18">++<pos:position pos:line="168" pos:column="20"/></operator></expr>;<pos:position pos:line="168" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="169" pos:column="8"/></block></then></if></elseif></if>
      <if pos:line="170" pos:column="7">if<condition pos:line="170" pos:column="9">( <expr><name pos:line="170" pos:column="11">is_agg<pos:position pos:line="170" pos:column="17"/></name></expr> )<pos:position pos:line="170" pos:column="19"/></condition><then pos:line="170" pos:column="19"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="170" pos:column="20">pNC<pos:position pos:line="170" pos:column="23"/></name><operator pos:line="170" pos:column="23">-&gt;<pos:position pos:line="170" pos:column="28"/></operator><name pos:line="170" pos:column="25">ncFlags<pos:position pos:line="170" pos:column="32"/></name></name> <operator pos:line="170" pos:column="33">&amp;=<pos:position pos:line="170" pos:column="39"/></operator> <operator pos:line="170" pos:column="36">~<pos:position pos:line="170" pos:column="37"/></operator><name pos:line="170" pos:column="37">NC_AllowAgg<pos:position pos:line="170" pos:column="48"/></name></expr>;<pos:position pos:line="170" pos:column="49"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="171" pos:column="7">sqlite3WalkExprList<pos:position pos:line="171" pos:column="26"/></name><argument_list pos:line="171" pos:column="26">(<argument><expr><name pos:line="171" pos:column="27">pWalker<pos:position pos:line="171" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="36">pList<pos:position pos:line="171" pos:column="41"/></name></expr></argument>)<pos:position pos:line="171" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="43"/></expr_stmt>
      <if pos:line="172" pos:column="7">if<condition pos:line="172" pos:column="9">( <expr><name pos:line="172" pos:column="11">is_agg<pos:position pos:line="172" pos:column="17"/></name></expr> )<pos:position pos:line="172" pos:column="19"/></condition><then><block pos:line="172" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="173" pos:column="9">NameContext<pos:position pos:line="173" pos:column="20"/></name> <modifier pos:line="173" pos:column="21">*<pos:position pos:line="173" pos:column="22"/></modifier></type><name pos:line="173" pos:column="22">pNC2<pos:position pos:line="173" pos:column="26"/></name> <init pos:line="173" pos:column="27">= <expr><name pos:line="173" pos:column="29">pNC<pos:position pos:line="173" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="173" pos:column="33"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="174" pos:column="9">pExpr<pos:position pos:line="174" pos:column="14"/></name><operator pos:line="174" pos:column="14">-&gt;<pos:position pos:line="174" pos:column="19"/></operator><name pos:line="174" pos:column="16">op<pos:position pos:line="174" pos:column="18"/></name></name> <operator pos:line="174" pos:column="19">=<pos:position pos:line="174" pos:column="20"/></operator> <name pos:line="174" pos:column="21">TK_AGG_FUNCTION<pos:position pos:line="174" pos:column="36"/></name></expr>;<pos:position pos:line="174" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="175" pos:column="9">pExpr<pos:position pos:line="175" pos:column="14"/></name><operator pos:line="175" pos:column="14">-&gt;<pos:position pos:line="175" pos:column="19"/></operator><name pos:line="175" pos:column="16">op2<pos:position pos:line="175" pos:column="19"/></name></name> <operator pos:line="175" pos:column="20">=<pos:position pos:line="175" pos:column="21"/></operator> <literal type="number" pos:line="175" pos:column="22">0<pos:position pos:line="175" pos:column="23"/></literal></expr>;<pos:position pos:line="175" pos:column="24"/></expr_stmt>
        <while pos:line="176" pos:column="9">while<condition pos:line="176" pos:column="14">( <expr><name pos:line="176" pos:column="16">pNC2<pos:position pos:line="176" pos:column="20"/></name> <operator pos:line="176" pos:column="21">&amp;&amp;<pos:position pos:line="176" pos:column="31"/></operator> <operator pos:line="176" pos:column="24">!<pos:position pos:line="176" pos:column="25"/></operator><call><name pos:line="176" pos:column="25">sqlite3FunctionUsesThisSrc<pos:position pos:line="176" pos:column="51"/></name><argument_list pos:line="176" pos:column="51">(<argument><expr><name pos:line="176" pos:column="52">pExpr<pos:position pos:line="176" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="59">pNC2<pos:position pos:line="176" pos:column="63"/></name><operator pos:line="176" pos:column="63">-&gt;<pos:position pos:line="176" pos:column="68"/></operator><name pos:line="176" pos:column="65">pSrcList<pos:position pos:line="176" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="74"/></argument_list></call></expr> )<pos:position pos:line="176" pos:column="76"/></condition><block pos:line="176" pos:column="76">{
          <expr_stmt><expr><name><name pos:line="177" pos:column="11">pExpr<pos:position pos:line="177" pos:column="16"/></name><operator pos:line="177" pos:column="16">-&gt;<pos:position pos:line="177" pos:column="21"/></operator><name pos:line="177" pos:column="18">op2<pos:position pos:line="177" pos:column="21"/></name></name><operator pos:line="177" pos:column="21">++<pos:position pos:line="177" pos:column="23"/></operator></expr>;<pos:position pos:line="177" pos:column="24"/></expr_stmt>
          <expr_stmt><expr><name pos:line="178" pos:column="11">pNC2<pos:position pos:line="178" pos:column="15"/></name> <operator pos:line="178" pos:column="16">=<pos:position pos:line="178" pos:column="17"/></operator> <name><name pos:line="178" pos:column="18">pNC2<pos:position pos:line="178" pos:column="22"/></name><operator pos:line="178" pos:column="22">-&gt;<pos:position pos:line="178" pos:column="27"/></operator><name pos:line="178" pos:column="24">pNext<pos:position pos:line="178" pos:column="29"/></name></name></expr>;<pos:position pos:line="178" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="179" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="180" pos:column="9">assert<pos:position pos:line="180" pos:column="15"/></name><argument_list pos:line="180" pos:column="15">( <argument><expr><name pos:line="180" pos:column="17">pDef<pos:position pos:line="180" pos:column="21"/></name><operator pos:line="180" pos:column="21">!=<pos:position pos:line="180" pos:column="23"/></operator><literal type="number" pos:line="180" pos:column="23">0<pos:position pos:line="180" pos:column="24"/></literal></expr></argument> )<pos:position pos:line="180" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="27"/></expr_stmt>
        <if pos:line="181" pos:column="9">if<condition pos:line="181" pos:column="11">( <expr><name pos:line="181" pos:column="13">pNC2<pos:position pos:line="181" pos:column="17"/></name></expr> )<pos:position pos:line="181" pos:column="19"/></condition><then><block pos:line="181" pos:column="19">{
          <expr_stmt><expr><call><name pos:line="182" pos:column="11">assert<pos:position pos:line="182" pos:column="17"/></name><argument_list pos:line="182" pos:column="17">( <argument><expr><name pos:line="182" pos:column="19">SQLITE_FUNC_MINMAX<pos:position pos:line="182" pos:column="37"/></name><operator pos:line="182" pos:column="37">==<pos:position pos:line="182" pos:column="39"/></operator><name pos:line="182" pos:column="39">NC_MinMaxAgg<pos:position pos:line="182" pos:column="51"/></name></expr></argument> )<pos:position pos:line="182" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="54"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="183" pos:column="11">testcase<pos:position pos:line="183" pos:column="19"/></name><argument_list pos:line="183" pos:column="19">( <argument><expr><operator pos:line="183" pos:column="21">(<pos:position pos:line="183" pos:column="22"/></operator><name><name pos:line="183" pos:column="22">pDef<pos:position pos:line="183" pos:column="26"/></name><operator pos:line="183" pos:column="26">-&gt;<pos:position pos:line="183" pos:column="31"/></operator><name pos:line="183" pos:column="28">funcFlags<pos:position pos:line="183" pos:column="37"/></name></name> <operator pos:line="183" pos:column="38">&amp;<pos:position pos:line="183" pos:column="43"/></operator> <name pos:line="183" pos:column="40">SQLITE_FUNC_MINMAX<pos:position pos:line="183" pos:column="58"/></name><operator pos:line="183" pos:column="58">)<pos:position pos:line="183" pos:column="59"/></operator><operator pos:line="183" pos:column="59">!=<pos:position pos:line="183" pos:column="61"/></operator><literal type="number" pos:line="183" pos:column="61">0<pos:position pos:line="183" pos:column="62"/></literal></expr></argument> )<pos:position pos:line="183" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="65"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="184" pos:column="11">pNC2<pos:position pos:line="184" pos:column="15"/></name><operator pos:line="184" pos:column="15">-&gt;<pos:position pos:line="184" pos:column="20"/></operator><name pos:line="184" pos:column="17">ncFlags<pos:position pos:line="184" pos:column="24"/></name></name> <operator pos:line="184" pos:column="25">|=<pos:position pos:line="184" pos:column="27"/></operator> <name pos:line="184" pos:column="28">NC_HasAgg<pos:position pos:line="184" pos:column="37"/></name> <operator pos:line="184" pos:column="38">|<pos:position pos:line="184" pos:column="39"/></operator> <operator pos:line="184" pos:column="40">(<pos:position pos:line="184" pos:column="41"/></operator><name><name pos:line="184" pos:column="41">pDef<pos:position pos:line="184" pos:column="45"/></name><operator pos:line="184" pos:column="45">-&gt;<pos:position pos:line="184" pos:column="50"/></operator><name pos:line="184" pos:column="47">funcFlags<pos:position pos:line="184" pos:column="56"/></name></name> <operator pos:line="184" pos:column="57">&amp;<pos:position pos:line="184" pos:column="62"/></operator> <name pos:line="184" pos:column="59">SQLITE_FUNC_MINMAX<pos:position pos:line="184" pos:column="77"/></name><operator pos:line="184" pos:column="77">)<pos:position pos:line="184" pos:column="78"/></operator></expr>;<pos:position pos:line="184" pos:column="79"/></expr_stmt>

        }<pos:position pos:line="186" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="187" pos:column="9">pNC<pos:position pos:line="187" pos:column="12"/></name><operator pos:line="187" pos:column="12">-&gt;<pos:position pos:line="187" pos:column="17"/></operator><name pos:line="187" pos:column="14">ncFlags<pos:position pos:line="187" pos:column="21"/></name></name> <operator pos:line="187" pos:column="22">|=<pos:position pos:line="187" pos:column="24"/></operator> <name pos:line="187" pos:column="25">NC_AllowAgg<pos:position pos:line="187" pos:column="36"/></name></expr>;<pos:position pos:line="187" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="188" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="189" pos:column="7">/* FIX ME:  Compute pExpr-&gt;affinity based on the expected return
      ** type of the function 
      */</comment>
      <return pos:line="192" pos:column="7">return <expr><name pos:line="192" pos:column="14">WRC_Prune<pos:position pos:line="192" pos:column="23"/></name></expr>;<pos:position pos:line="192" pos:column="24"/></return>
    }<pos:position pos:line="193" pos:column="6"/></block>
<cpp:ifndef pos:line="194" pos:column="1">#<cpp:directive pos:line="194" pos:column="2">ifndef<pos:position pos:line="194" pos:column="8"/></cpp:directive> <name pos:line="194" pos:column="9">SQLITE_OMIT_SUBQUERY<pos:position pos:line="194" pos:column="29"/></name></cpp:ifndef>
    <case pos:line="195" pos:column="5">case <expr><name pos:line="195" pos:column="10">TK_SELECT<pos:position pos:line="195" pos:column="19"/></name></expr>:<pos:position pos:line="195" pos:column="20"/></case>
    <case pos:line="196" pos:column="5">case <expr><name pos:line="196" pos:column="10">TK_EXISTS<pos:position pos:line="196" pos:column="19"/></name></expr>:<pos:position pos:line="196" pos:column="20"/></case>  <expr_stmt><expr><call><name pos:line="196" pos:column="22">testcase<pos:position pos:line="196" pos:column="30"/></name><argument_list pos:line="196" pos:column="30">( <argument><expr><name><name pos:line="196" pos:column="32">pExpr<pos:position pos:line="196" pos:column="37"/></name><operator pos:line="196" pos:column="37">-&gt;<pos:position pos:line="196" pos:column="42"/></operator><name pos:line="196" pos:column="39">op<pos:position pos:line="196" pos:column="41"/></name></name><operator pos:line="196" pos:column="41">==<pos:position pos:line="196" pos:column="43"/></operator><name pos:line="196" pos:column="43">TK_EXISTS<pos:position pos:line="196" pos:column="52"/></name></expr></argument> )<pos:position pos:line="196" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">endif<pos:position pos:line="197" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="198" pos:column="5">case <expr><name pos:line="198" pos:column="10">TK_IN<pos:position pos:line="198" pos:column="15"/></name></expr>:<pos:position pos:line="198" pos:column="16"/></case> <block pos:line="198" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="199" pos:column="7">testcase<pos:position pos:line="199" pos:column="15"/></name><argument_list pos:line="199" pos:column="15">( <argument><expr><name><name pos:line="199" pos:column="17">pExpr<pos:position pos:line="199" pos:column="22"/></name><operator pos:line="199" pos:column="22">-&gt;<pos:position pos:line="199" pos:column="27"/></operator><name pos:line="199" pos:column="24">op<pos:position pos:line="199" pos:column="26"/></name></name><operator pos:line="199" pos:column="26">==<pos:position pos:line="199" pos:column="28"/></operator><name pos:line="199" pos:column="28">TK_IN<pos:position pos:line="199" pos:column="33"/></name></expr></argument> )<pos:position pos:line="199" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="36"/></expr_stmt>
      <if pos:line="200" pos:column="7">if<condition pos:line="200" pos:column="9">( <expr><call><name pos:line="200" pos:column="11">ExprHasProperty<pos:position pos:line="200" pos:column="26"/></name><argument_list pos:line="200" pos:column="26">(<argument><expr><name pos:line="200" pos:column="27">pExpr<pos:position pos:line="200" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="34">EP_xIsSelect<pos:position pos:line="200" pos:column="46"/></name></expr></argument>)<pos:position pos:line="200" pos:column="47"/></argument_list></call></expr> )<pos:position pos:line="200" pos:column="49"/></condition><then><block pos:line="200" pos:column="49">{
        <decl_stmt><decl><type><name pos:line="201" pos:column="9">int<pos:position pos:line="201" pos:column="12"/></name></type> <name pos:line="201" pos:column="13">nRef<pos:position pos:line="201" pos:column="17"/></name> <init pos:line="201" pos:column="18">= <expr><name><name pos:line="201" pos:column="20">pNC<pos:position pos:line="201" pos:column="23"/></name><operator pos:line="201" pos:column="23">-&gt;<pos:position pos:line="201" pos:column="28"/></operator><name pos:line="201" pos:column="25">nRef<pos:position pos:line="201" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="201" pos:column="30"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="202" pos:column="9">notValid<pos:position pos:line="202" pos:column="17"/></name><argument_list pos:line="202" pos:column="17">(<argument><expr><name pos:line="202" pos:column="18">pParse<pos:position pos:line="202" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="26">pNC<pos:position pos:line="202" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="31">"subqueries"<pos:position pos:line="202" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="202" pos:column="45">NC_IsCheck<pos:position pos:line="202" pos:column="55"/></name><operator pos:line="202" pos:column="55">|<pos:position pos:line="202" pos:column="56"/></operator><name pos:line="202" pos:column="56">NC_PartIdx<pos:position pos:line="202" pos:column="66"/></name><operator pos:line="202" pos:column="66">|<pos:position pos:line="202" pos:column="67"/></operator><name pos:line="202" pos:column="67">NC_IdxExpr<pos:position pos:line="202" pos:column="77"/></name></expr></argument>)<pos:position pos:line="202" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="203" pos:column="9">sqlite3WalkSelect<pos:position pos:line="203" pos:column="26"/></name><argument_list pos:line="203" pos:column="26">(<argument><expr><name pos:line="203" pos:column="27">pWalker<pos:position pos:line="203" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="203" pos:column="36">pExpr<pos:position pos:line="203" pos:column="41"/></name><operator pos:line="203" pos:column="41">-&gt;<pos:position pos:line="203" pos:column="46"/></operator><name pos:line="203" pos:column="43">x<pos:position pos:line="203" pos:column="44"/></name><operator pos:line="203" pos:column="44">.<pos:position pos:line="203" pos:column="45"/></operator><name pos:line="203" pos:column="45">pSelect<pos:position pos:line="203" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="203" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="204" pos:column="9">assert<pos:position pos:line="204" pos:column="15"/></name><argument_list pos:line="204" pos:column="15">( <argument><expr><name><name pos:line="204" pos:column="17">pNC<pos:position pos:line="204" pos:column="20"/></name><operator pos:line="204" pos:column="20">-&gt;<pos:position pos:line="204" pos:column="25"/></operator><name pos:line="204" pos:column="22">nRef<pos:position pos:line="204" pos:column="26"/></name></name><operator pos:line="204" pos:column="26">&gt;=<pos:position pos:line="204" pos:column="31"/></operator><name pos:line="204" pos:column="28">nRef<pos:position pos:line="204" pos:column="32"/></name></expr></argument> )<pos:position pos:line="204" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="35"/></expr_stmt>
        <if pos:line="205" pos:column="9">if<condition pos:line="205" pos:column="11">( <expr><name pos:line="205" pos:column="13">nRef<pos:position pos:line="205" pos:column="17"/></name><operator pos:line="205" pos:column="17">!=<pos:position pos:line="205" pos:column="19"/></operator><name><name pos:line="205" pos:column="19">pNC<pos:position pos:line="205" pos:column="22"/></name><operator pos:line="205" pos:column="22">-&gt;<pos:position pos:line="205" pos:column="27"/></operator><name pos:line="205" pos:column="24">nRef<pos:position pos:line="205" pos:column="28"/></name></name></expr> )<pos:position pos:line="205" pos:column="30"/></condition><then><block pos:line="205" pos:column="30">{
          <expr_stmt><expr><call><name pos:line="206" pos:column="11">ExprSetProperty<pos:position pos:line="206" pos:column="26"/></name><argument_list pos:line="206" pos:column="26">(<argument><expr><name pos:line="206" pos:column="27">pExpr<pos:position pos:line="206" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="34">EP_VarSelect<pos:position pos:line="206" pos:column="46"/></name></expr></argument>)<pos:position pos:line="206" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="48"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="207" pos:column="11">pNC<pos:position pos:line="207" pos:column="14"/></name><operator pos:line="207" pos:column="14">-&gt;<pos:position pos:line="207" pos:column="19"/></operator><name pos:line="207" pos:column="16">ncFlags<pos:position pos:line="207" pos:column="23"/></name></name> <operator pos:line="207" pos:column="24">|=<pos:position pos:line="207" pos:column="26"/></operator> <name pos:line="207" pos:column="27">NC_VarSelect<pos:position pos:line="207" pos:column="39"/></name></expr>;<pos:position pos:line="207" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="208" pos:column="10"/></block></then></if>
      }<pos:position pos:line="209" pos:column="8"/></block></then></if>
      <break pos:line="210" pos:column="7">break;<pos:position pos:line="210" pos:column="13"/></break>
    }<pos:position pos:line="211" pos:column="6"/></block>
    <case pos:line="212" pos:column="5">case <expr><name pos:line="212" pos:column="10">TK_VARIABLE<pos:position pos:line="212" pos:column="21"/></name></expr>:<pos:position pos:line="212" pos:column="22"/></case> <block pos:line="212" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="213" pos:column="7">notValid<pos:position pos:line="213" pos:column="15"/></name><argument_list pos:line="213" pos:column="15">(<argument><expr><name pos:line="213" pos:column="16">pParse<pos:position pos:line="213" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="24">pNC<pos:position pos:line="213" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="29">"parameters"<pos:position pos:line="213" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="213" pos:column="43">NC_IsCheck<pos:position pos:line="213" pos:column="53"/></name><operator pos:line="213" pos:column="53">|<pos:position pos:line="213" pos:column="54"/></operator><name pos:line="213" pos:column="54">NC_PartIdx<pos:position pos:line="213" pos:column="64"/></name><operator pos:line="213" pos:column="64">|<pos:position pos:line="213" pos:column="65"/></operator><name pos:line="213" pos:column="65">NC_IdxExpr<pos:position pos:line="213" pos:column="75"/></name></expr></argument>)<pos:position pos:line="213" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="77"/></expr_stmt>
      <break pos:line="214" pos:column="7">break;<pos:position pos:line="214" pos:column="13"/></break>
    }<pos:position pos:line="215" pos:column="6"/></block>
    <case pos:line="216" pos:column="5">case <expr><name pos:line="216" pos:column="10">TK_BETWEEN<pos:position pos:line="216" pos:column="20"/></name></expr>:<pos:position pos:line="216" pos:column="21"/></case>
    <case pos:line="217" pos:column="5">case <expr><name pos:line="217" pos:column="10">TK_EQ<pos:position pos:line="217" pos:column="15"/></name></expr>:<pos:position pos:line="217" pos:column="16"/></case>
    <case pos:line="218" pos:column="5">case <expr><name pos:line="218" pos:column="10">TK_NE<pos:position pos:line="218" pos:column="15"/></name></expr>:<pos:position pos:line="218" pos:column="16"/></case>
    <case pos:line="219" pos:column="5">case <expr><name pos:line="219" pos:column="10">TK_LT<pos:position pos:line="219" pos:column="15"/></name></expr>:<pos:position pos:line="219" pos:column="16"/></case>
    <case pos:line="220" pos:column="5">case <expr><name pos:line="220" pos:column="10">TK_LE<pos:position pos:line="220" pos:column="15"/></name></expr>:<pos:position pos:line="220" pos:column="16"/></case>
    <case pos:line="221" pos:column="5">case <expr><name pos:line="221" pos:column="10">TK_GT<pos:position pos:line="221" pos:column="15"/></name></expr>:<pos:position pos:line="221" pos:column="16"/></case>
    <case pos:line="222" pos:column="5">case <expr><name pos:line="222" pos:column="10">TK_GE<pos:position pos:line="222" pos:column="15"/></name></expr>:<pos:position pos:line="222" pos:column="16"/></case>
    <case pos:line="223" pos:column="5">case <expr><name pos:line="223" pos:column="10">TK_IS<pos:position pos:line="223" pos:column="15"/></name></expr>:<pos:position pos:line="223" pos:column="16"/></case>
    <case pos:line="224" pos:column="5">case <expr><name pos:line="224" pos:column="10">TK_ISNOT<pos:position pos:line="224" pos:column="18"/></name></expr>:<pos:position pos:line="224" pos:column="19"/></case> <block pos:line="224" pos:column="20">{
      <decl_stmt><decl><type><name pos:line="225" pos:column="7">int<pos:position pos:line="225" pos:column="10"/></name></type> <name pos:line="225" pos:column="11">nLeft<pos:position pos:line="225" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="225" pos:column="18">nRight<pos:position pos:line="225" pos:column="24"/></name></decl>;<pos:position pos:line="225" pos:column="25"/></decl_stmt>
      <if pos:line="226" pos:column="7">if<condition pos:line="226" pos:column="9">( <expr><name><name pos:line="226" pos:column="11">pParse<pos:position pos:line="226" pos:column="17"/></name><operator pos:line="226" pos:column="17">-&gt;<pos:position pos:line="226" pos:column="22"/></operator><name pos:line="226" pos:column="19">db<pos:position pos:line="226" pos:column="21"/></name><operator pos:line="226" pos:column="21">-&gt;<pos:position pos:line="226" pos:column="26"/></operator><name pos:line="226" pos:column="23">mallocFailed<pos:position pos:line="226" pos:column="35"/></name></name></expr> )<pos:position pos:line="226" pos:column="37"/></condition><then pos:line="226" pos:column="37"> <block type="pseudo"><break pos:line="226" pos:column="38">break;<pos:position pos:line="226" pos:column="44"/></break></block></then></if>
      <expr_stmt><expr><call><name pos:line="227" pos:column="7">assert<pos:position pos:line="227" pos:column="13"/></name><argument_list pos:line="227" pos:column="13">( <argument><expr><name><name pos:line="227" pos:column="15">pExpr<pos:position pos:line="227" pos:column="20"/></name><operator pos:line="227" pos:column="20">-&gt;<pos:position pos:line="227" pos:column="25"/></operator><name pos:line="227" pos:column="22">pLeft<pos:position pos:line="227" pos:column="27"/></name></name><operator pos:line="227" pos:column="27">!=<pos:position pos:line="227" pos:column="29"/></operator><literal type="number" pos:line="227" pos:column="29">0<pos:position pos:line="227" pos:column="30"/></literal></expr></argument> )<pos:position pos:line="227" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="228" pos:column="7">nLeft<pos:position pos:line="228" pos:column="12"/></name> <operator pos:line="228" pos:column="13">=<pos:position pos:line="228" pos:column="14"/></operator> <call><name pos:line="228" pos:column="15">sqlite3ExprVectorSize<pos:position pos:line="228" pos:column="36"/></name><argument_list pos:line="228" pos:column="36">(<argument><expr><name><name pos:line="228" pos:column="37">pExpr<pos:position pos:line="228" pos:column="42"/></name><operator pos:line="228" pos:column="42">-&gt;<pos:position pos:line="228" pos:column="47"/></operator><name pos:line="228" pos:column="44">pLeft<pos:position pos:line="228" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="228" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="51"/></expr_stmt>
      <if pos:line="229" pos:column="7">if<condition pos:line="229" pos:column="9">( <expr><name><name pos:line="229" pos:column="11">pExpr<pos:position pos:line="229" pos:column="16"/></name><operator pos:line="229" pos:column="16">-&gt;<pos:position pos:line="229" pos:column="21"/></operator><name pos:line="229" pos:column="18">op<pos:position pos:line="229" pos:column="20"/></name></name><operator pos:line="229" pos:column="20">==<pos:position pos:line="229" pos:column="22"/></operator><name pos:line="229" pos:column="22">TK_BETWEEN<pos:position pos:line="229" pos:column="32"/></name></expr> )<pos:position pos:line="229" pos:column="34"/></condition><then><block pos:line="229" pos:column="34">{
        <expr_stmt><expr><name pos:line="230" pos:column="9">nRight<pos:position pos:line="230" pos:column="15"/></name> <operator pos:line="230" pos:column="16">=<pos:position pos:line="230" pos:column="17"/></operator> <call><name pos:line="230" pos:column="18">sqlite3ExprVectorSize<pos:position pos:line="230" pos:column="39"/></name><argument_list pos:line="230" pos:column="39">(<argument><expr><name><name pos:line="230" pos:column="40">pExpr<pos:position pos:line="230" pos:column="45"/></name><operator pos:line="230" pos:column="45">-&gt;<pos:position pos:line="230" pos:column="50"/></operator><name pos:line="230" pos:column="47">x<pos:position pos:line="230" pos:column="48"/></name><operator pos:line="230" pos:column="48">.<pos:position pos:line="230" pos:column="49"/></operator><name pos:line="230" pos:column="49">pList<pos:position pos:line="230" pos:column="54"/></name><operator pos:line="230" pos:column="54">-&gt;<pos:position pos:line="230" pos:column="59"/></operator><name pos:line="230" pos:column="56">a<pos:position pos:line="230" pos:column="57"/></name><index pos:line="230" pos:column="57">[<expr><literal type="number" pos:line="230" pos:column="58">0<pos:position pos:line="230" pos:column="59"/></literal></expr>]<pos:position pos:line="230" pos:column="60"/></index></name><operator pos:line="230" pos:column="60">.<pos:position pos:line="230" pos:column="61"/></operator><name pos:line="230" pos:column="61">pExpr<pos:position pos:line="230" pos:column="66"/></name></expr></argument>)<pos:position pos:line="230" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="68"/></expr_stmt>
        <if pos:line="231" pos:column="9">if<condition pos:line="231" pos:column="11">( <expr><name pos:line="231" pos:column="13">nRight<pos:position pos:line="231" pos:column="19"/></name><operator pos:line="231" pos:column="19">==<pos:position pos:line="231" pos:column="21"/></operator><name pos:line="231" pos:column="21">nLeft<pos:position pos:line="231" pos:column="26"/></name></expr> )<pos:position pos:line="231" pos:column="28"/></condition><then><block pos:line="231" pos:column="28">{
          <expr_stmt><expr><name pos:line="232" pos:column="11">nRight<pos:position pos:line="232" pos:column="17"/></name> <operator pos:line="232" pos:column="18">=<pos:position pos:line="232" pos:column="19"/></operator> <call><name pos:line="232" pos:column="20">sqlite3ExprVectorSize<pos:position pos:line="232" pos:column="41"/></name><argument_list pos:line="232" pos:column="41">(<argument><expr><name><name pos:line="232" pos:column="42">pExpr<pos:position pos:line="232" pos:column="47"/></name><operator pos:line="232" pos:column="47">-&gt;<pos:position pos:line="232" pos:column="52"/></operator><name pos:line="232" pos:column="49">x<pos:position pos:line="232" pos:column="50"/></name><operator pos:line="232" pos:column="50">.<pos:position pos:line="232" pos:column="51"/></operator><name pos:line="232" pos:column="51">pList<pos:position pos:line="232" pos:column="56"/></name><operator pos:line="232" pos:column="56">-&gt;<pos:position pos:line="232" pos:column="61"/></operator><name pos:line="232" pos:column="58">a<pos:position pos:line="232" pos:column="59"/></name><index pos:line="232" pos:column="59">[<expr><literal type="number" pos:line="232" pos:column="60">1<pos:position pos:line="232" pos:column="61"/></literal></expr>]<pos:position pos:line="232" pos:column="62"/></index></name><operator pos:line="232" pos:column="62">.<pos:position pos:line="232" pos:column="63"/></operator><name pos:line="232" pos:column="63">pExpr<pos:position pos:line="232" pos:column="68"/></name></expr></argument>)<pos:position pos:line="232" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="233" pos:column="10"/></block></then></if>
      }<pos:position pos:line="234" pos:column="8"/></block></then><else pos:line="234" pos:column="8">else<block pos:line="234" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="235" pos:column="9">assert<pos:position pos:line="235" pos:column="15"/></name><argument_list pos:line="235" pos:column="15">( <argument><expr><name><name pos:line="235" pos:column="17">pExpr<pos:position pos:line="235" pos:column="22"/></name><operator pos:line="235" pos:column="22">-&gt;<pos:position pos:line="235" pos:column="27"/></operator><name pos:line="235" pos:column="24">pRight<pos:position pos:line="235" pos:column="30"/></name></name><operator pos:line="235" pos:column="30">!=<pos:position pos:line="235" pos:column="32"/></operator><literal type="number" pos:line="235" pos:column="32">0<pos:position pos:line="235" pos:column="33"/></literal></expr></argument> )<pos:position pos:line="235" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="236" pos:column="9">nRight<pos:position pos:line="236" pos:column="15"/></name> <operator pos:line="236" pos:column="16">=<pos:position pos:line="236" pos:column="17"/></operator> <call><name pos:line="236" pos:column="18">sqlite3ExprVectorSize<pos:position pos:line="236" pos:column="39"/></name><argument_list pos:line="236" pos:column="39">(<argument><expr><name><name pos:line="236" pos:column="40">pExpr<pos:position pos:line="236" pos:column="45"/></name><operator pos:line="236" pos:column="45">-&gt;<pos:position pos:line="236" pos:column="50"/></operator><name pos:line="236" pos:column="47">pRight<pos:position pos:line="236" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="236" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="55"/></expr_stmt>
      }<pos:position pos:line="237" pos:column="8"/></block></else></if>
      <if pos:line="238" pos:column="7">if<condition pos:line="238" pos:column="9">( <expr><name pos:line="238" pos:column="11">nLeft<pos:position pos:line="238" pos:column="16"/></name><operator pos:line="238" pos:column="16">!=<pos:position pos:line="238" pos:column="18"/></operator><name pos:line="238" pos:column="18">nRight<pos:position pos:line="238" pos:column="24"/></name></expr> )<pos:position pos:line="238" pos:column="26"/></condition><then><block pos:line="238" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="239" pos:column="9">testcase<pos:position pos:line="239" pos:column="17"/></name><argument_list pos:line="239" pos:column="17">( <argument><expr><name><name pos:line="239" pos:column="19">pExpr<pos:position pos:line="239" pos:column="24"/></name><operator pos:line="239" pos:column="24">-&gt;<pos:position pos:line="239" pos:column="29"/></operator><name pos:line="239" pos:column="26">op<pos:position pos:line="239" pos:column="28"/></name></name><operator pos:line="239" pos:column="28">==<pos:position pos:line="239" pos:column="30"/></operator><name pos:line="239" pos:column="30">TK_EQ<pos:position pos:line="239" pos:column="35"/></name></expr></argument> )<pos:position pos:line="239" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="240" pos:column="9">testcase<pos:position pos:line="240" pos:column="17"/></name><argument_list pos:line="240" pos:column="17">( <argument><expr><name><name pos:line="240" pos:column="19">pExpr<pos:position pos:line="240" pos:column="24"/></name><operator pos:line="240" pos:column="24">-&gt;<pos:position pos:line="240" pos:column="29"/></operator><name pos:line="240" pos:column="26">op<pos:position pos:line="240" pos:column="28"/></name></name><operator pos:line="240" pos:column="28">==<pos:position pos:line="240" pos:column="30"/></operator><name pos:line="240" pos:column="30">TK_NE<pos:position pos:line="240" pos:column="35"/></name></expr></argument> )<pos:position pos:line="240" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="241" pos:column="9">testcase<pos:position pos:line="241" pos:column="17"/></name><argument_list pos:line="241" pos:column="17">( <argument><expr><name><name pos:line="241" pos:column="19">pExpr<pos:position pos:line="241" pos:column="24"/></name><operator pos:line="241" pos:column="24">-&gt;<pos:position pos:line="241" pos:column="29"/></operator><name pos:line="241" pos:column="26">op<pos:position pos:line="241" pos:column="28"/></name></name><operator pos:line="241" pos:column="28">==<pos:position pos:line="241" pos:column="30"/></operator><name pos:line="241" pos:column="30">TK_LT<pos:position pos:line="241" pos:column="35"/></name></expr></argument> )<pos:position pos:line="241" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="242" pos:column="9">testcase<pos:position pos:line="242" pos:column="17"/></name><argument_list pos:line="242" pos:column="17">( <argument><expr><name><name pos:line="242" pos:column="19">pExpr<pos:position pos:line="242" pos:column="24"/></name><operator pos:line="242" pos:column="24">-&gt;<pos:position pos:line="242" pos:column="29"/></operator><name pos:line="242" pos:column="26">op<pos:position pos:line="242" pos:column="28"/></name></name><operator pos:line="242" pos:column="28">==<pos:position pos:line="242" pos:column="30"/></operator><name pos:line="242" pos:column="30">TK_LE<pos:position pos:line="242" pos:column="35"/></name></expr></argument> )<pos:position pos:line="242" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="243" pos:column="9">testcase<pos:position pos:line="243" pos:column="17"/></name><argument_list pos:line="243" pos:column="17">( <argument><expr><name><name pos:line="243" pos:column="19">pExpr<pos:position pos:line="243" pos:column="24"/></name><operator pos:line="243" pos:column="24">-&gt;<pos:position pos:line="243" pos:column="29"/></operator><name pos:line="243" pos:column="26">op<pos:position pos:line="243" pos:column="28"/></name></name><operator pos:line="243" pos:column="28">==<pos:position pos:line="243" pos:column="30"/></operator><name pos:line="243" pos:column="30">TK_GT<pos:position pos:line="243" pos:column="35"/></name></expr></argument> )<pos:position pos:line="243" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="244" pos:column="9">testcase<pos:position pos:line="244" pos:column="17"/></name><argument_list pos:line="244" pos:column="17">( <argument><expr><name><name pos:line="244" pos:column="19">pExpr<pos:position pos:line="244" pos:column="24"/></name><operator pos:line="244" pos:column="24">-&gt;<pos:position pos:line="244" pos:column="29"/></operator><name pos:line="244" pos:column="26">op<pos:position pos:line="244" pos:column="28"/></name></name><operator pos:line="244" pos:column="28">==<pos:position pos:line="244" pos:column="30"/></operator><name pos:line="244" pos:column="30">TK_GE<pos:position pos:line="244" pos:column="35"/></name></expr></argument> )<pos:position pos:line="244" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="245" pos:column="9">testcase<pos:position pos:line="245" pos:column="17"/></name><argument_list pos:line="245" pos:column="17">( <argument><expr><name><name pos:line="245" pos:column="19">pExpr<pos:position pos:line="245" pos:column="24"/></name><operator pos:line="245" pos:column="24">-&gt;<pos:position pos:line="245" pos:column="29"/></operator><name pos:line="245" pos:column="26">op<pos:position pos:line="245" pos:column="28"/></name></name><operator pos:line="245" pos:column="28">==<pos:position pos:line="245" pos:column="30"/></operator><name pos:line="245" pos:column="30">TK_IS<pos:position pos:line="245" pos:column="35"/></name></expr></argument> )<pos:position pos:line="245" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="246" pos:column="9">testcase<pos:position pos:line="246" pos:column="17"/></name><argument_list pos:line="246" pos:column="17">( <argument><expr><name><name pos:line="246" pos:column="19">pExpr<pos:position pos:line="246" pos:column="24"/></name><operator pos:line="246" pos:column="24">-&gt;<pos:position pos:line="246" pos:column="29"/></operator><name pos:line="246" pos:column="26">op<pos:position pos:line="246" pos:column="28"/></name></name><operator pos:line="246" pos:column="28">==<pos:position pos:line="246" pos:column="30"/></operator><name pos:line="246" pos:column="30">TK_ISNOT<pos:position pos:line="246" pos:column="38"/></name></expr></argument> )<pos:position pos:line="246" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="247" pos:column="9">testcase<pos:position pos:line="247" pos:column="17"/></name><argument_list pos:line="247" pos:column="17">( <argument><expr><name><name pos:line="247" pos:column="19">pExpr<pos:position pos:line="247" pos:column="24"/></name><operator pos:line="247" pos:column="24">-&gt;<pos:position pos:line="247" pos:column="29"/></operator><name pos:line="247" pos:column="26">op<pos:position pos:line="247" pos:column="28"/></name></name><operator pos:line="247" pos:column="28">==<pos:position pos:line="247" pos:column="30"/></operator><name pos:line="247" pos:column="30">TK_BETWEEN<pos:position pos:line="247" pos:column="40"/></name></expr></argument> )<pos:position pos:line="247" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="248" pos:column="9">sqlite3ErrorMsg<pos:position pos:line="248" pos:column="24"/></name><argument_list pos:line="248" pos:column="24">(<argument><expr><name pos:line="248" pos:column="25">pParse<pos:position pos:line="248" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="248" pos:column="33">"row value misused"<pos:position pos:line="248" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="248" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="249" pos:column="8"/></block></then></if>
      <break pos:line="250" pos:column="7">break;<pos:position pos:line="250" pos:column="13"/></break> 
    }<pos:position pos:line="251" pos:column="6"/></block>
  }<pos:position pos:line="252" pos:column="4"/></block></switch>
  <return pos:line="253" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="253" pos:column="10">(<pos:position pos:line="253" pos:column="11"/></operator><name><name pos:line="253" pos:column="11">pParse<pos:position pos:line="253" pos:column="17"/></name><operator pos:line="253" pos:column="17">-&gt;<pos:position pos:line="253" pos:column="22"/></operator><name pos:line="253" pos:column="19">nErr<pos:position pos:line="253" pos:column="23"/></name></name> <operator pos:line="253" pos:column="24">||<pos:position pos:line="253" pos:column="26"/></operator> <name><name pos:line="253" pos:column="27">pParse<pos:position pos:line="253" pos:column="33"/></name><operator pos:line="253" pos:column="33">-&gt;<pos:position pos:line="253" pos:column="38"/></operator><name pos:line="253" pos:column="35">db<pos:position pos:line="253" pos:column="37"/></name><operator pos:line="253" pos:column="37">-&gt;<pos:position pos:line="253" pos:column="42"/></operator><name pos:line="253" pos:column="39">mallocFailed<pos:position pos:line="253" pos:column="51"/></name></name><operator pos:line="253" pos:column="51">)<pos:position pos:line="253" pos:column="52"/></operator></expr> ?<pos:position pos:line="253" pos:column="54"/></condition><then pos:line="253" pos:column="54"> <expr><name pos:line="253" pos:column="55">WRC_Abort<pos:position pos:line="253" pos:column="64"/></name></expr> <pos:position pos:line="253" pos:column="65"/></then><else pos:line="253" pos:column="65">: <expr><name pos:line="253" pos:column="67">WRC_Continue<pos:position pos:line="253" pos:column="79"/></name></expr></else></ternary></expr>;<pos:position pos:line="253" pos:column="80"/></return>
}<pos:position pos:line="254" pos:column="2"/></block></function></unit>

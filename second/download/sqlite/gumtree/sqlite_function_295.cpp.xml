<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_295.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sqlite3Fts3InitTokenizer<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Fts3Hash<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">pHash<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>,                <comment type="block" pos:line="2" pos:column="35">/* Tokenizer hash table */</comment>
  <parameter><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">zArg<pos:position pos:line="3" pos:column="19"/></name></decl></parameter>,               <comment type="block" pos:line="3" pos:column="35">/* Tokenizer name */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">sqlite3_tokenizer<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier><modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">ppTok<pos:position pos:line="4" pos:column="28"/></name></decl></parameter>,      <comment type="block" pos:line="4" pos:column="35">/* OUT: Tokenizer (if applicable) */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier><modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">pzErr<pos:position pos:line="5" pos:column="15"/></name></decl></parameter>                    <comment type="block" pos:line="5" pos:column="35">/* OUT: Set to malloced error message */</comment>
)<pos:position pos:line="6" pos:column="2"/></parameter_list><block pos:line="6" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rc<pos:position pos:line="7" pos:column="9"/></name></decl>;<pos:position pos:line="7" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">z<pos:position pos:line="8" pos:column="10"/></name> <init pos:line="8" pos:column="11">= <expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">char<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></operator><operator pos:line="8" pos:column="20">)<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">zArg<pos:position pos:line="8" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">n<pos:position pos:line="9" pos:column="8"/></name> <init pos:line="9" pos:column="9">= <expr><literal type="number" pos:line="9" pos:column="11">0<pos:position pos:line="9" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">zCopy<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">zEnd<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>                     <comment type="block" pos:line="11" pos:column="35">/* Pointer to nul-term of zCopy */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">sqlite3_tokenizer_module<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">m<pos:position pos:line="12" pos:column="30"/></name></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">zCopy<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <call><name pos:line="14" pos:column="11">sqlite3_mprintf<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><literal type="string" pos:line="14" pos:column="27">"%s"<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">zArg<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">( <expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">zCopy<pos:position pos:line="15" pos:column="13"/></name></expr> )<pos:position pos:line="15" pos:column="15"/></condition><then pos:line="15" pos:column="15"> <block type="pseudo"><return pos:line="15" pos:column="16">return <expr><name pos:line="15" pos:column="23">SQLITE_NOMEM<pos:position pos:line="15" pos:column="35"/></name></expr>;<pos:position pos:line="15" pos:column="36"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="16" pos:column="3">zEnd<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <operator pos:line="16" pos:column="10">&amp;<pos:position pos:line="16" pos:column="15"/></operator><name><name pos:line="16" pos:column="11">zCopy<pos:position pos:line="16" pos:column="16"/></name><index pos:line="16" pos:column="16">[<expr><call><name pos:line="16" pos:column="17">strlen<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">zCopy<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>]<pos:position pos:line="16" pos:column="31"/></index></name></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">z<pos:position pos:line="18" pos:column="4"/></name> <operator pos:line="18" pos:column="5">=<pos:position pos:line="18" pos:column="6"/></operator> <operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">char<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><operator pos:line="18" pos:column="14">)<pos:position pos:line="18" pos:column="15"/></operator><call><name pos:line="18" pos:column="15">sqlite3Fts3NextToken<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">zCopy<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="43">&amp;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="44">n<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">( <expr><name pos:line="19" pos:column="7">z<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">==<pos:position pos:line="19" pos:column="10"/></operator><literal type="number" pos:line="19" pos:column="10">0<pos:position pos:line="19" pos:column="11"/></literal></expr> )<pos:position pos:line="19" pos:column="13"/></condition><then><block pos:line="19" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">( <argument><expr><name pos:line="20" pos:column="13">n<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">==<pos:position pos:line="20" pos:column="16"/></operator><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr></argument> )<pos:position pos:line="20" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">z<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <name pos:line="21" pos:column="9">zCopy<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">z<pos:position pos:line="23" pos:column="4"/></name><index pos:line="23" pos:column="4">[<expr><name pos:line="23" pos:column="5">n<pos:position pos:line="23" pos:column="6"/></name></expr>]<pos:position pos:line="23" pos:column="7"/></index></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <literal type="char" pos:line="23" pos:column="10">'\0'<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">sqlite3Fts3Dequote<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">z<pos:position pos:line="24" pos:column="23"/></name></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name pos:line="26" pos:column="3">m<pos:position pos:line="26" pos:column="4"/></name> <operator pos:line="26" pos:column="5">=<pos:position pos:line="26" pos:column="6"/></operator> <operator pos:line="26" pos:column="7">(<pos:position pos:line="26" pos:column="8"/></operator><name pos:line="26" pos:column="8">sqlite3_tokenizer_module<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">*<pos:position pos:line="26" pos:column="34"/></operator><operator pos:line="26" pos:column="34">)<pos:position pos:line="26" pos:column="35"/></operator><call><name pos:line="26" pos:column="35">sqlite3Fts3HashFind<pos:position pos:line="26" pos:column="54"/></name><argument_list pos:line="26" pos:column="54">(<argument><expr><name pos:line="26" pos:column="55">pHash<pos:position pos:line="26" pos:column="60"/></name></expr></argument>,<argument><expr><name pos:line="26" pos:column="61">z<pos:position pos:line="26" pos:column="62"/></name></expr></argument>,<argument><expr><operator pos:line="26" pos:column="63">(<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="64">int<pos:position pos:line="26" pos:column="67"/></name><operator pos:line="26" pos:column="67">)<pos:position pos:line="26" pos:column="68"/></operator><call><name pos:line="26" pos:column="68">strlen<pos:position pos:line="26" pos:column="74"/></name><argument_list pos:line="26" pos:column="74">(<argument><expr><name pos:line="26" pos:column="75">z<pos:position pos:line="26" pos:column="76"/></name></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call><operator pos:line="26" pos:column="77">+<pos:position pos:line="26" pos:column="78"/></operator><literal type="number" pos:line="26" pos:column="78">1<pos:position pos:line="26" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="81"/></expr_stmt>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">( <expr><operator pos:line="27" pos:column="7">!<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">m<pos:position pos:line="27" pos:column="9"/></name></expr> )<pos:position pos:line="27" pos:column="11"/></condition><then><block pos:line="27" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">sqlite3Fts3ErrMsg<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">pzErr<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="30">"unknown tokenizer: %s"<pos:position pos:line="28" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="55">z<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">rc<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <name pos:line="29" pos:column="10">SQLITE_ERROR<pos:position pos:line="29" pos:column="22"/></name></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then><else pos:line="30" pos:column="4">else<block pos:line="30" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">char<pos:position pos:line="31" pos:column="9"/></name> <specifier pos:line="31" pos:column="10">const<pos:position pos:line="31" pos:column="15"/></specifier> <modifier pos:line="31" pos:column="16">*<pos:position pos:line="31" pos:column="17"/></modifier><modifier pos:line="31" pos:column="17">*<pos:position pos:line="31" pos:column="18"/></modifier></type><name pos:line="31" pos:column="18">aArg<pos:position pos:line="31" pos:column="22"/></name> <init pos:line="31" pos:column="23">= <expr><literal type="number" pos:line="31" pos:column="25">0<pos:position pos:line="31" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">int<pos:position pos:line="32" pos:column="8"/></name></type> <name pos:line="32" pos:column="9">iArg<pos:position pos:line="32" pos:column="13"/></name> <init pos:line="32" pos:column="14">= <expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="18"/></decl_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">z<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <operator pos:line="33" pos:column="9">&amp;<pos:position pos:line="33" pos:column="14"/></operator><name><name pos:line="33" pos:column="10">z<pos:position pos:line="33" pos:column="11"/></name><index pos:line="33" pos:column="11">[<expr><name pos:line="33" pos:column="12">n<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">+<pos:position pos:line="33" pos:column="14"/></operator><literal type="number" pos:line="33" pos:column="14">1<pos:position pos:line="33" pos:column="15"/></literal></expr>]<pos:position pos:line="33" pos:column="16"/></index></name></expr>;<pos:position pos:line="33" pos:column="17"/></expr_stmt>
    <while pos:line="34" pos:column="5">while<condition pos:line="34" pos:column="10">( <expr><name pos:line="34" pos:column="12">z<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">&lt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">zEnd<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">&amp;&amp;<pos:position pos:line="34" pos:column="29"/></operator> <operator pos:line="34" pos:column="22">(<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">NULL<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">!=<pos:position pos:line="34" pos:column="29"/></operator><operator pos:line="34" pos:column="29">(<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">z<pos:position pos:line="34" pos:column="31"/></name> <operator pos:line="34" pos:column="32">=<pos:position pos:line="34" pos:column="33"/></operator> <operator pos:line="34" pos:column="34">(<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">char<pos:position pos:line="34" pos:column="39"/></name> <operator pos:line="34" pos:column="40">*<pos:position pos:line="34" pos:column="41"/></operator><operator pos:line="34" pos:column="41">)<pos:position pos:line="34" pos:column="42"/></operator><call><name pos:line="34" pos:column="42">sqlite3Fts3NextToken<pos:position pos:line="34" pos:column="62"/></name><argument_list pos:line="34" pos:column="62">(<argument><expr><name pos:line="34" pos:column="63">z<pos:position pos:line="34" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="66">&amp;<pos:position pos:line="34" pos:column="71"/></operator><name pos:line="34" pos:column="67">n<pos:position pos:line="34" pos:column="68"/></name></expr></argument>)<pos:position pos:line="34" pos:column="69"/></argument_list></call><operator pos:line="34" pos:column="69">)<pos:position pos:line="34" pos:column="70"/></operator><operator pos:line="34" pos:column="70">)<pos:position pos:line="34" pos:column="71"/></operator></expr> )<pos:position pos:line="34" pos:column="73"/></condition><block pos:line="34" pos:column="73">{
      <decl_stmt><decl><type><name pos:line="35" pos:column="7">int<pos:position pos:line="35" pos:column="10"/></name></type> <name pos:line="35" pos:column="11">nNew<pos:position pos:line="35" pos:column="15"/></name> <init pos:line="35" pos:column="16">= <expr><sizeof pos:line="35" pos:column="18">sizeof<argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">char<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">*<pos:position pos:line="35" pos:column="31"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="32"/></argument_list></sizeof><operator pos:line="35" pos:column="32">*<pos:position pos:line="35" pos:column="33"/></operator><operator pos:line="35" pos:column="33">(<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">iArg<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">+<pos:position pos:line="35" pos:column="39"/></operator><literal type="number" pos:line="35" pos:column="39">1<pos:position pos:line="35" pos:column="40"/></literal><operator pos:line="35" pos:column="40">)<pos:position pos:line="35" pos:column="41"/></operator></expr></init></decl>;<pos:position pos:line="35" pos:column="42"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="36" pos:column="7">char<pos:position pos:line="36" pos:column="11"/></name> <specifier pos:line="36" pos:column="12">const<pos:position pos:line="36" pos:column="17"/></specifier> <modifier pos:line="36" pos:column="18">*<pos:position pos:line="36" pos:column="19"/></modifier><modifier pos:line="36" pos:column="19">*<pos:position pos:line="36" pos:column="20"/></modifier></type><name pos:line="36" pos:column="20">aNew<pos:position pos:line="36" pos:column="24"/></name> <init pos:line="36" pos:column="25">= <expr><operator pos:line="36" pos:column="27">(<pos:position pos:line="36" pos:column="28"/></operator><specifier pos:line="36" pos:column="28">const<pos:position pos:line="36" pos:column="33"/></specifier> <name pos:line="36" pos:column="34">char<pos:position pos:line="36" pos:column="38"/></name> <operator pos:line="36" pos:column="39">*<pos:position pos:line="36" pos:column="40"/></operator><operator pos:line="36" pos:column="40">*<pos:position pos:line="36" pos:column="41"/></operator><operator pos:line="36" pos:column="41">)<pos:position pos:line="36" pos:column="42"/></operator><call><name pos:line="36" pos:column="42">sqlite3_realloc<pos:position pos:line="36" pos:column="57"/></name><argument_list pos:line="36" pos:column="57">(<argument><expr><operator pos:line="36" pos:column="58">(<pos:position pos:line="36" pos:column="59"/></operator><name pos:line="36" pos:column="59">void<pos:position pos:line="36" pos:column="63"/></name> <operator pos:line="36" pos:column="64">*<pos:position pos:line="36" pos:column="65"/></operator><operator pos:line="36" pos:column="65">)<pos:position pos:line="36" pos:column="66"/></operator><name pos:line="36" pos:column="66">aArg<pos:position pos:line="36" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="72">nNew<pos:position pos:line="36" pos:column="76"/></name></expr></argument>)<pos:position pos:line="36" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="78"/></decl_stmt>
      <if pos:line="37" pos:column="7">if<condition pos:line="37" pos:column="9">( <expr><operator pos:line="37" pos:column="11">!<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="12">aNew<pos:position pos:line="37" pos:column="16"/></name></expr> )<pos:position pos:line="37" pos:column="18"/></condition><then><block pos:line="37" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">sqlite3_free<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">zCopy<pos:position pos:line="38" pos:column="27"/></name></expr></argument>)<pos:position pos:line="38" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">sqlite3_free<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><operator pos:line="39" pos:column="22">(<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">void<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">*<pos:position pos:line="39" pos:column="29"/></operator><operator pos:line="39" pos:column="29">)<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">aArg<pos:position pos:line="39" pos:column="34"/></name></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
        <return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">SQLITE_NOMEM<pos:position pos:line="40" pos:column="28"/></name></expr>;<pos:position pos:line="40" pos:column="29"/></return>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="42" pos:column="7">aArg<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <name pos:line="42" pos:column="14">aNew<pos:position pos:line="42" pos:column="18"/></name></expr>;<pos:position pos:line="42" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="43" pos:column="7">aArg<pos:position pos:line="43" pos:column="11"/></name><index pos:line="43" pos:column="11">[<expr><name pos:line="43" pos:column="12">iArg<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">++<pos:position pos:line="43" pos:column="18"/></operator></expr>]<pos:position pos:line="43" pos:column="19"/></index></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <name pos:line="43" pos:column="22">z<pos:position pos:line="43" pos:column="23"/></name></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="44" pos:column="7">z<pos:position pos:line="44" pos:column="8"/></name><index pos:line="44" pos:column="8">[<expr><name pos:line="44" pos:column="9">n<pos:position pos:line="44" pos:column="10"/></name></expr>]<pos:position pos:line="44" pos:column="11"/></index></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <literal type="char" pos:line="44" pos:column="14">'\0'<pos:position pos:line="44" pos:column="18"/></literal></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">sqlite3Fts3Dequote<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">z<pos:position pos:line="45" pos:column="27"/></name></expr></argument>)<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="46" pos:column="7">z<pos:position pos:line="46" pos:column="8"/></name> <operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator> <operator pos:line="46" pos:column="11">&amp;<pos:position pos:line="46" pos:column="16"/></operator><name><name pos:line="46" pos:column="12">z<pos:position pos:line="46" pos:column="13"/></name><index pos:line="46" pos:column="13">[<expr><name pos:line="46" pos:column="14">n<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">+<pos:position pos:line="46" pos:column="16"/></operator><literal type="number" pos:line="46" pos:column="16">1<pos:position pos:line="46" pos:column="17"/></literal></expr>]<pos:position pos:line="46" pos:column="18"/></index></name></expr>;<pos:position pos:line="46" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></while>
    <expr_stmt><expr><name pos:line="48" pos:column="5">rc<pos:position pos:line="48" pos:column="7"/></name> <operator pos:line="48" pos:column="8">=<pos:position pos:line="48" pos:column="9"/></operator> <call><name><name pos:line="48" pos:column="10">m<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">-&gt;<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="13">xCreate<pos:position pos:line="48" pos:column="20"/></name></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">iArg<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">aArg<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="33">ppTok<pos:position pos:line="48" pos:column="38"/></name></expr></argument>)<pos:position pos:line="48" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">assert<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">( <argument><expr><name pos:line="49" pos:column="13">rc<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">!=<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="17">SQLITE_OK<pos:position pos:line="49" pos:column="26"/></name> <operator pos:line="49" pos:column="27">||<pos:position pos:line="49" pos:column="29"/></operator> <operator pos:line="49" pos:column="30">*<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="31">ppTok<pos:position pos:line="49" pos:column="36"/></name></expr></argument> )<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt>
    <if pos:line="50" pos:column="5">if<condition pos:line="50" pos:column="7">( <expr><name pos:line="50" pos:column="9">rc<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">!=<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="13">SQLITE_OK<pos:position pos:line="50" pos:column="22"/></name></expr> )<pos:position pos:line="50" pos:column="24"/></condition><then><block pos:line="50" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">sqlite3Fts3ErrMsg<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">pzErr<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="32">"unknown tokenizer"<pos:position pos:line="51" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then><else pos:line="52" pos:column="6">else<block pos:line="52" pos:column="10">{
      <expr_stmt><expr><name><operator pos:line="53" pos:column="7">(<pos:position pos:line="53" pos:column="8"/></operator><operator pos:line="53" pos:column="8">*<pos:position pos:line="53" pos:column="9"/></operator><name pos:line="53" pos:column="9">ppTok<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">)<pos:position pos:line="53" pos:column="15"/></operator><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">pModule<pos:position pos:line="53" pos:column="24"/></name></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">m<pos:position pos:line="53" pos:column="28"/></name></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt> 
    }<pos:position pos:line="54" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">sqlite3_free<pos:position pos:line="55" pos:column="17"/></name><argument_list pos:line="55" pos:column="17">(<argument><expr><operator pos:line="55" pos:column="18">(<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="19">void<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">*<pos:position pos:line="55" pos:column="25"/></operator><operator pos:line="55" pos:column="25">)<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="26">aArg<pos:position pos:line="55" pos:column="30"/></name></expr></argument>)<pos:position pos:line="55" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="56" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">sqlite3_free<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><name pos:line="58" pos:column="16">zCopy<pos:position pos:line="58" pos:column="21"/></name></expr></argument>)<pos:position pos:line="58" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="23"/></expr_stmt>
  <return pos:line="59" pos:column="3">return <expr><name pos:line="59" pos:column="10">rc<pos:position pos:line="59" pos:column="12"/></name></expr>;<pos:position pos:line="59" pos:column="13"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

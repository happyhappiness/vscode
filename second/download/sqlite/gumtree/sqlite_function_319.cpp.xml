<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_319.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">loadStatTbl<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(
  <parameter><decl><type><name pos:line="2" pos:column="3">sqlite3<pos:position pos:line="2" pos:column="10"/></name> <modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier></type><name pos:line="2" pos:column="12">db<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>,                  <comment type="block" pos:line="2" pos:column="33">/* Database handle */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">bStat3<pos:position pos:line="3" pos:column="13"/></name></decl></parameter>,                   <comment type="block" pos:line="3" pos:column="33">/* Assume single column records only */</comment>
  <parameter><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">zSql1<pos:position pos:line="4" pos:column="20"/></name></decl></parameter>,            <comment type="block" pos:line="4" pos:column="33">/* SQL statement 1 (see above) */</comment>
  <parameter><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">zSql2<pos:position pos:line="5" pos:column="20"/></name></decl></parameter>,            <comment type="block" pos:line="5" pos:column="33">/* SQL statement 2 (see above) */</comment>
  <parameter><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">zDb<pos:position pos:line="6" pos:column="18"/></name></decl></parameter>               <comment type="block" pos:line="6" pos:column="33">/* Database name (e.g. "main") */</comment>
)<pos:position pos:line="7" pos:column="2"/></parameter_list><block pos:line="7" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name></decl>;<pos:position pos:line="8" pos:column="10"/></decl_stmt>                       <comment type="block" pos:line="8" pos:column="33">/* Result codes from subroutines */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">sqlite3_stmt<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">pStmt<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>      <comment type="block" pos:line="9" pos:column="33">/* An SQL statement being run */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">zSql<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>                   <comment type="block" pos:line="10" pos:column="33">/* Text of the SQL statement */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">Index<pos:position pos:line="11" pos:column="8"/></name> <modifier pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></modifier></type><name pos:line="11" pos:column="10">pPrevIdx<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>          <comment type="block" pos:line="11" pos:column="33">/* Previous index in the loop */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">IndexSample<pos:position pos:line="12" pos:column="14"/></name> <modifier pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></modifier></type><name pos:line="12" pos:column="16">pSample<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>         <comment type="block" pos:line="12" pos:column="33">/* A slot in pIdx-&gt;aSample[] */</comment>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">assert<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">( <argument><expr><name><name pos:line="14" pos:column="11">db<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">lookaside<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">.<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">bDisable<pos:position pos:line="14" pos:column="33"/></name></name></expr></argument> )<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">zSql<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <call><name pos:line="15" pos:column="10">sqlite3MPrintf<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">db<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="29">zSql1<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">zDb<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">( <expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">zSql<pos:position pos:line="16" pos:column="12"/></name></expr> )<pos:position pos:line="16" pos:column="14"/></condition><then><block pos:line="16" pos:column="14">{
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">SQLITE_NOMEM_BKPT<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="19" pos:column="3">rc<pos:position pos:line="19" pos:column="5"/></name> <operator pos:line="19" pos:column="6">=<pos:position pos:line="19" pos:column="7"/></operator> <call><name pos:line="19" pos:column="8">sqlite3_prepare<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">db<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">zSql<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="34">-<pos:position pos:line="19" pos:column="35"/></operator><literal type="number" pos:line="19" pos:column="35">1<pos:position pos:line="19" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="38">&amp;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="39">pStmt<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="46">0<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">sqlite3DbFree<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">db<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="21">zSql<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">( <expr><name pos:line="21" pos:column="7">rc<pos:position pos:line="21" pos:column="9"/></name></expr> )<pos:position pos:line="21" pos:column="11"/></condition><then pos:line="21" pos:column="11"> <block type="pseudo"><return pos:line="21" pos:column="12">return <expr><name pos:line="21" pos:column="19">rc<pos:position pos:line="21" pos:column="21"/></name></expr>;<pos:position pos:line="21" pos:column="22"/></return></block></then></if>

  <while pos:line="23" pos:column="3">while<condition pos:line="23" pos:column="8">( <expr><call><name pos:line="23" pos:column="10">sqlite3_step<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">pStmt<pos:position pos:line="23" pos:column="28"/></name></expr></argument>)<pos:position pos:line="23" pos:column="29"/></argument_list></call><operator pos:line="23" pos:column="29">==<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">SQLITE_ROW<pos:position pos:line="23" pos:column="41"/></name></expr> )<pos:position pos:line="23" pos:column="43"/></condition><block pos:line="23" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">int<pos:position pos:line="24" pos:column="8"/></name></type> <name pos:line="24" pos:column="9">nIdxCol<pos:position pos:line="24" pos:column="16"/></name> <init pos:line="24" pos:column="17">= <expr><literal type="number" pos:line="24" pos:column="19">1<pos:position pos:line="24" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="21"/></decl_stmt>              <comment type="block" pos:line="24" pos:column="35">/* Number of columns in stat4 records */</comment>

    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name> <modifier pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></modifier></type><name pos:line="26" pos:column="11">zIndex<pos:position pos:line="26" pos:column="17"/></name></decl>;<pos:position pos:line="26" pos:column="18"/></decl_stmt>   <comment type="block" pos:line="26" pos:column="21">/* Index name */</comment>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">Index<pos:position pos:line="27" pos:column="10"/></name> <modifier pos:line="27" pos:column="11">*<pos:position pos:line="27" pos:column="12"/></modifier></type><name pos:line="27" pos:column="12">pIdx<pos:position pos:line="27" pos:column="16"/></name></decl>;<pos:position pos:line="27" pos:column="17"/></decl_stmt>    <comment type="block" pos:line="27" pos:column="21">/* Pointer to the index object */</comment>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">int<pos:position pos:line="28" pos:column="8"/></name></type> <name pos:line="28" pos:column="9">nSample<pos:position pos:line="28" pos:column="16"/></name></decl>;<pos:position pos:line="28" pos:column="17"/></decl_stmt>    <comment type="block" pos:line="28" pos:column="21">/* Number of samples */</comment>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">int<pos:position pos:line="29" pos:column="8"/></name></type> <name pos:line="29" pos:column="9">nByte<pos:position pos:line="29" pos:column="14"/></name></decl>;<pos:position pos:line="29" pos:column="15"/></decl_stmt>      <comment type="block" pos:line="29" pos:column="21">/* Bytes of space required */</comment>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">int<pos:position pos:line="30" pos:column="8"/></name></type> <name pos:line="30" pos:column="9">i<pos:position pos:line="30" pos:column="10"/></name></decl>;<pos:position pos:line="30" pos:column="11"/></decl_stmt>          <comment type="block" pos:line="30" pos:column="21">/* Bytes of space required */</comment>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">tRowcnt<pos:position pos:line="31" pos:column="12"/></name> <modifier pos:line="31" pos:column="13">*<pos:position pos:line="31" pos:column="14"/></modifier></type><name pos:line="31" pos:column="14">pSpace<pos:position pos:line="31" pos:column="20"/></name></decl>;<pos:position pos:line="31" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="33" pos:column="5">zIndex<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <operator pos:line="33" pos:column="14">(<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">char<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">*<pos:position pos:line="33" pos:column="21"/></operator><operator pos:line="33" pos:column="21">)<pos:position pos:line="33" pos:column="22"/></operator><call><name pos:line="33" pos:column="22">sqlite3_column_text<pos:position pos:line="33" pos:column="41"/></name><argument_list pos:line="33" pos:column="41">(<argument><expr><name pos:line="33" pos:column="42">pStmt<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="49">0<pos:position pos:line="33" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">( <expr><name pos:line="34" pos:column="9">zIndex<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">==<pos:position pos:line="34" pos:column="17"/></operator><literal type="number" pos:line="34" pos:column="17">0<pos:position pos:line="34" pos:column="18"/></literal></expr> )<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20"> <block type="pseudo"><continue pos:line="34" pos:column="21">continue;<pos:position pos:line="34" pos:column="30"/></continue></block></then></if>
    <expr_stmt><expr><name pos:line="35" pos:column="5">nSample<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">sqlite3_column_int<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">pStmt<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="41">1<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">pIdx<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <call><name pos:line="36" pos:column="12">findIndexOrPrimaryKey<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">(<argument><expr><name pos:line="36" pos:column="34">db<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">zIndex<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">zDb<pos:position pos:line="36" pos:column="49"/></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">assert<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">( <argument><expr><name pos:line="37" pos:column="13">pIdx<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">==<pos:position pos:line="37" pos:column="19"/></operator><literal type="number" pos:line="37" pos:column="19">0<pos:position pos:line="37" pos:column="20"/></literal> <operator pos:line="37" pos:column="21">||<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">bStat3<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">||<pos:position pos:line="37" pos:column="33"/></operator> <name><name pos:line="37" pos:column="34">pIdx<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">nSample<pos:position pos:line="37" pos:column="47"/></name></name><operator pos:line="37" pos:column="47">==<pos:position pos:line="37" pos:column="49"/></operator><literal type="number" pos:line="37" pos:column="49">0<pos:position pos:line="37" pos:column="50"/></literal></expr></argument> )<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>
    <comment type="block" pos:line="38" pos:column="5">/* Index.nSample is non-zero at this point if data has already been
    ** loaded from the stat4 table. In this case ignore stat3 data.  */</comment>
    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">( <expr><name pos:line="40" pos:column="9">pIdx<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">==<pos:position pos:line="40" pos:column="15"/></operator><literal type="number" pos:line="40" pos:column="15">0<pos:position pos:line="40" pos:column="16"/></literal> <operator pos:line="40" pos:column="17">||<pos:position pos:line="40" pos:column="19"/></operator> <name><name pos:line="40" pos:column="20">pIdx<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">nSample<pos:position pos:line="40" pos:column="33"/></name></name></expr> )<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35"> <block type="pseudo"><continue pos:line="40" pos:column="36">continue;<pos:position pos:line="40" pos:column="45"/></continue></block></then></if>
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">( <expr><name pos:line="41" pos:column="9">bStat3<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">==<pos:position pos:line="41" pos:column="17"/></operator><literal type="number" pos:line="41" pos:column="17">0<pos:position pos:line="41" pos:column="18"/></literal></expr> )<pos:position pos:line="41" pos:column="20"/></condition><then><block pos:line="41" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">assert<pos:position pos:line="42" pos:column="13"/></name><argument_list pos:line="42" pos:column="13">( <argument><expr><operator pos:line="42" pos:column="15">!<pos:position pos:line="42" pos:column="16"/></operator><call><name pos:line="42" pos:column="16">HasRowid<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name><name pos:line="42" pos:column="25">pIdx<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">-&gt;<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="31">pTable<pos:position pos:line="42" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call> <operator pos:line="42" pos:column="39">||<pos:position pos:line="42" pos:column="41"/></operator> <name><name pos:line="42" pos:column="42">pIdx<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">-&gt;<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="48">nColumn<pos:position pos:line="42" pos:column="55"/></name></name><operator pos:line="42" pos:column="55">==<pos:position pos:line="42" pos:column="57"/></operator><name><name pos:line="42" pos:column="57">pIdx<pos:position pos:line="42" pos:column="61"/></name><operator pos:line="42" pos:column="61">-&gt;<pos:position pos:line="42" pos:column="66"/></operator><name pos:line="42" pos:column="63">nKeyCol<pos:position pos:line="42" pos:column="70"/></name></name><operator pos:line="42" pos:column="70">+<pos:position pos:line="42" pos:column="71"/></operator><literal type="number" pos:line="42" pos:column="71">1<pos:position pos:line="42" pos:column="72"/></literal></expr></argument> )<pos:position pos:line="42" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="75"/></expr_stmt>
      <if pos:line="43" pos:column="7">if<condition pos:line="43" pos:column="9">( <expr><operator pos:line="43" pos:column="11">!<pos:position pos:line="43" pos:column="12"/></operator><call><name pos:line="43" pos:column="12">HasRowid<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name><name pos:line="43" pos:column="21">pIdx<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">-&gt;<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="27">pTable<pos:position pos:line="43" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call> <operator pos:line="43" pos:column="35">&amp;&amp;<pos:position pos:line="43" pos:column="45"/></operator> <call><name pos:line="43" pos:column="38">IsPrimaryKeyIndex<pos:position pos:line="43" pos:column="55"/></name><argument_list pos:line="43" pos:column="55">(<argument><expr><name pos:line="43" pos:column="56">pIdx<pos:position pos:line="43" pos:column="60"/></name></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr> )<pos:position pos:line="43" pos:column="63"/></condition><then><block pos:line="43" pos:column="63">{
        <expr_stmt><expr><name pos:line="44" pos:column="9">nIdxCol<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <name><name pos:line="44" pos:column="19">pIdx<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">-&gt;<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="25">nKeyCol<pos:position pos:line="44" pos:column="32"/></name></name></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="45" pos:column="8"/></block></then><else pos:line="45" pos:column="8">else<block pos:line="45" pos:column="12">{
        <expr_stmt><expr><name pos:line="46" pos:column="9">nIdxCol<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name><name pos:line="46" pos:column="19">pIdx<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">-&gt;<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="25">nColumn<pos:position pos:line="46" pos:column="32"/></name></name></expr>;<pos:position pos:line="46" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="47" pos:column="8"/></block></else></if>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">pIdx<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">nSampleCol<pos:position pos:line="49" pos:column="21"/></name></name> <operator pos:line="49" pos:column="22">=<pos:position pos:line="49" pos:column="23"/></operator> <name pos:line="49" pos:column="24">nIdxCol<pos:position pos:line="49" pos:column="31"/></name></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">nByte<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <sizeof pos:line="50" pos:column="13">sizeof<argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">IndexSample<pos:position pos:line="50" pos:column="31"/></name></expr></argument>)<pos:position pos:line="50" pos:column="32"/></argument_list></sizeof> <operator pos:line="50" pos:column="33">*<pos:position pos:line="50" pos:column="34"/></operator> <name pos:line="50" pos:column="35">nSample<pos:position pos:line="50" pos:column="42"/></name></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="51" pos:column="5">nByte<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">+=<pos:position pos:line="51" pos:column="13"/></operator> <sizeof pos:line="51" pos:column="14">sizeof<argument_list pos:line="51" pos:column="20">(<argument><expr><name pos:line="51" pos:column="21">tRowcnt<pos:position pos:line="51" pos:column="28"/></name></expr></argument>)<pos:position pos:line="51" pos:column="29"/></argument_list></sizeof> <operator pos:line="51" pos:column="30">*<pos:position pos:line="51" pos:column="31"/></operator> <name pos:line="51" pos:column="32">nIdxCol<pos:position pos:line="51" pos:column="39"/></name> <operator pos:line="51" pos:column="40">*<pos:position pos:line="51" pos:column="41"/></operator> <literal type="number" pos:line="51" pos:column="42">3<pos:position pos:line="51" pos:column="43"/></literal> <operator pos:line="51" pos:column="44">*<pos:position pos:line="51" pos:column="45"/></operator> <name pos:line="51" pos:column="46">nSample<pos:position pos:line="51" pos:column="53"/></name></expr>;<pos:position pos:line="51" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name pos:line="52" pos:column="5">nByte<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">+=<pos:position pos:line="52" pos:column="13"/></operator> <name pos:line="52" pos:column="14">nIdxCol<pos:position pos:line="52" pos:column="21"/></name> <operator pos:line="52" pos:column="22">*<pos:position pos:line="52" pos:column="23"/></operator> <sizeof pos:line="52" pos:column="24">sizeof<argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">tRowcnt<pos:position pos:line="52" pos:column="38"/></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></sizeof></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>     <comment type="block" pos:line="52" pos:column="45">/* Space for Index.aAvgEq[] */</comment>

    <expr_stmt><expr><name><name pos:line="54" pos:column="5">pIdx<pos:position pos:line="54" pos:column="9"/></name><operator pos:line="54" pos:column="9">-&gt;<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="11">aSample<pos:position pos:line="54" pos:column="18"/></name></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <call><name pos:line="54" pos:column="21">sqlite3DbMallocZero<pos:position pos:line="54" pos:column="40"/></name><argument_list pos:line="54" pos:column="40">(<argument><expr><name pos:line="54" pos:column="41">db<pos:position pos:line="54" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="45">nByte<pos:position pos:line="54" pos:column="50"/></name></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">( <expr><name><name pos:line="55" pos:column="9">pIdx<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">-&gt;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="15">aSample<pos:position pos:line="55" pos:column="22"/></name></name><operator pos:line="55" pos:column="22">==<pos:position pos:line="55" pos:column="24"/></operator><literal type="number" pos:line="55" pos:column="24">0<pos:position pos:line="55" pos:column="25"/></literal></expr> )<pos:position pos:line="55" pos:column="27"/></condition><then><block pos:line="55" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">sqlite3_finalize<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><name pos:line="56" pos:column="24">pStmt<pos:position pos:line="56" pos:column="29"/></name></expr></argument>)<pos:position pos:line="56" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
      <return pos:line="57" pos:column="7">return <expr><name pos:line="57" pos:column="14">SQLITE_NOMEM_BKPT<pos:position pos:line="57" pos:column="31"/></name></expr>;<pos:position pos:line="57" pos:column="32"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="59" pos:column="5">pSpace<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <operator pos:line="59" pos:column="14">(<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">tRowcnt<pos:position pos:line="59" pos:column="22"/></name><operator pos:line="59" pos:column="22">*<pos:position pos:line="59" pos:column="23"/></operator><operator pos:line="59" pos:column="23">)<pos:position pos:line="59" pos:column="24"/></operator><operator pos:line="59" pos:column="24">&amp;<pos:position pos:line="59" pos:column="29"/></operator><name><name pos:line="59" pos:column="25">pIdx<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">-&gt;<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="31">aSample<pos:position pos:line="59" pos:column="38"/></name><index pos:line="59" pos:column="38">[<expr><name pos:line="59" pos:column="39">nSample<pos:position pos:line="59" pos:column="46"/></name></expr>]<pos:position pos:line="59" pos:column="47"/></index></name></expr>;<pos:position pos:line="59" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">pIdx<pos:position pos:line="60" pos:column="9"/></name><operator pos:line="60" pos:column="9">-&gt;<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="11">aAvgEq<pos:position pos:line="60" pos:column="17"/></name></name> <operator pos:line="60" pos:column="18">=<pos:position pos:line="60" pos:column="19"/></operator> <name pos:line="60" pos:column="20">pSpace<pos:position pos:line="60" pos:column="26"/></name></expr>;<pos:position pos:line="60" pos:column="27"/></expr_stmt> <expr_stmt><expr><name pos:line="60" pos:column="28">pSpace<pos:position pos:line="60" pos:column="34"/></name> <operator pos:line="60" pos:column="35">+=<pos:position pos:line="60" pos:column="37"/></operator> <name pos:line="60" pos:column="38">nIdxCol<pos:position pos:line="60" pos:column="45"/></name></expr>;<pos:position pos:line="60" pos:column="46"/></expr_stmt>
    <for pos:line="61" pos:column="5">for<control pos:line="61" pos:column="8">(<init><expr><name pos:line="61" pos:column="9">i<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator><literal type="number" pos:line="61" pos:column="11">0<pos:position pos:line="61" pos:column="12"/></literal></expr>;<pos:position pos:line="61" pos:column="13"/></init> <condition><expr><name pos:line="61" pos:column="14">i<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">&lt;<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="16">nSample<pos:position pos:line="61" pos:column="23"/></name></expr>;<pos:position pos:line="61" pos:column="24"/></condition> <incr><expr><name pos:line="61" pos:column="25">i<pos:position pos:line="61" pos:column="26"/></name><operator pos:line="61" pos:column="26">++<pos:position pos:line="61" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="61" pos:column="29"/></control><block pos:line="61" pos:column="29">{
      <expr_stmt><expr><name><name pos:line="62" pos:column="7">pIdx<pos:position pos:line="62" pos:column="11"/></name><operator pos:line="62" pos:column="11">-&gt;<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="13">aSample<pos:position pos:line="62" pos:column="20"/></name><index pos:line="62" pos:column="20">[<expr><name pos:line="62" pos:column="21">i<pos:position pos:line="62" pos:column="22"/></name></expr>]<pos:position pos:line="62" pos:column="23"/></index></name><operator pos:line="62" pos:column="23">.<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="24">anEq<pos:position pos:line="62" pos:column="28"/></name> <operator pos:line="62" pos:column="29">=<pos:position pos:line="62" pos:column="30"/></operator> <name pos:line="62" pos:column="31">pSpace<pos:position pos:line="62" pos:column="37"/></name></expr>;<pos:position pos:line="62" pos:column="38"/></expr_stmt> <expr_stmt><expr><name pos:line="62" pos:column="39">pSpace<pos:position pos:line="62" pos:column="45"/></name> <operator pos:line="62" pos:column="46">+=<pos:position pos:line="62" pos:column="48"/></operator> <name pos:line="62" pos:column="49">nIdxCol<pos:position pos:line="62" pos:column="56"/></name></expr>;<pos:position pos:line="62" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="63" pos:column="7">pIdx<pos:position pos:line="63" pos:column="11"/></name><operator pos:line="63" pos:column="11">-&gt;<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="13">aSample<pos:position pos:line="63" pos:column="20"/></name><index pos:line="63" pos:column="20">[<expr><name pos:line="63" pos:column="21">i<pos:position pos:line="63" pos:column="22"/></name></expr>]<pos:position pos:line="63" pos:column="23"/></index></name><operator pos:line="63" pos:column="23">.<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="24">anLt<pos:position pos:line="63" pos:column="28"/></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <name pos:line="63" pos:column="31">pSpace<pos:position pos:line="63" pos:column="37"/></name></expr>;<pos:position pos:line="63" pos:column="38"/></expr_stmt> <expr_stmt><expr><name pos:line="63" pos:column="39">pSpace<pos:position pos:line="63" pos:column="45"/></name> <operator pos:line="63" pos:column="46">+=<pos:position pos:line="63" pos:column="48"/></operator> <name pos:line="63" pos:column="49">nIdxCol<pos:position pos:line="63" pos:column="56"/></name></expr>;<pos:position pos:line="63" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="64" pos:column="7">pIdx<pos:position pos:line="64" pos:column="11"/></name><operator pos:line="64" pos:column="11">-&gt;<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="13">aSample<pos:position pos:line="64" pos:column="20"/></name><index pos:line="64" pos:column="20">[<expr><name pos:line="64" pos:column="21">i<pos:position pos:line="64" pos:column="22"/></name></expr>]<pos:position pos:line="64" pos:column="23"/></index></name><operator pos:line="64" pos:column="23">.<pos:position pos:line="64" pos:column="24"/></operator><name pos:line="64" pos:column="24">anDLt<pos:position pos:line="64" pos:column="29"/></name> <operator pos:line="64" pos:column="30">=<pos:position pos:line="64" pos:column="31"/></operator> <name pos:line="64" pos:column="32">pSpace<pos:position pos:line="64" pos:column="38"/></name></expr>;<pos:position pos:line="64" pos:column="39"/></expr_stmt> <expr_stmt><expr><name pos:line="64" pos:column="40">pSpace<pos:position pos:line="64" pos:column="46"/></name> <operator pos:line="64" pos:column="47">+=<pos:position pos:line="64" pos:column="49"/></operator> <name pos:line="64" pos:column="50">nIdxCol<pos:position pos:line="64" pos:column="57"/></name></expr>;<pos:position pos:line="64" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">assert<pos:position pos:line="66" pos:column="11"/></name><argument_list pos:line="66" pos:column="11">( <argument><expr><operator pos:line="66" pos:column="13">(<pos:position pos:line="66" pos:column="14"/></operator><operator pos:line="66" pos:column="14">(<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="15">u8<pos:position pos:line="66" pos:column="17"/></name><operator pos:line="66" pos:column="17">*<pos:position pos:line="66" pos:column="18"/></operator><operator pos:line="66" pos:column="18">)<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="19">pSpace<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">)<pos:position pos:line="66" pos:column="26"/></operator><operator pos:line="66" pos:column="26">-<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="27">nByte<pos:position pos:line="66" pos:column="32"/></name><operator pos:line="66" pos:column="32">==<pos:position pos:line="66" pos:column="34"/></operator><operator pos:line="66" pos:column="34">(<pos:position pos:line="66" pos:column="35"/></operator><name pos:line="66" pos:column="35">u8<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">*<pos:position pos:line="66" pos:column="38"/></operator><operator pos:line="66" pos:column="38">)<pos:position pos:line="66" pos:column="39"/></operator><operator pos:line="66" pos:column="39">(<pos:position pos:line="66" pos:column="40"/></operator><name><name pos:line="66" pos:column="40">pIdx<pos:position pos:line="66" pos:column="44"/></name><operator pos:line="66" pos:column="44">-&gt;<pos:position pos:line="66" pos:column="49"/></operator><name pos:line="66" pos:column="46">aSample<pos:position pos:line="66" pos:column="53"/></name></name><operator pos:line="66" pos:column="53">)<pos:position pos:line="66" pos:column="54"/></operator></expr></argument> )<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="57"/></expr_stmt>
  }<pos:position pos:line="67" pos:column="4"/></block></while>
  <expr_stmt><expr><name pos:line="68" pos:column="3">rc<pos:position pos:line="68" pos:column="5"/></name> <operator pos:line="68" pos:column="6">=<pos:position pos:line="68" pos:column="7"/></operator> <call><name pos:line="68" pos:column="8">sqlite3_finalize<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">(<argument><expr><name pos:line="68" pos:column="25">pStmt<pos:position pos:line="68" pos:column="30"/></name></expr></argument>)<pos:position pos:line="68" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt>
  <if pos:line="69" pos:column="3">if<condition pos:line="69" pos:column="5">( <expr><name pos:line="69" pos:column="7">rc<pos:position pos:line="69" pos:column="9"/></name></expr> )<pos:position pos:line="69" pos:column="11"/></condition><then pos:line="69" pos:column="11"> <block type="pseudo"><return pos:line="69" pos:column="12">return <expr><name pos:line="69" pos:column="19">rc<pos:position pos:line="69" pos:column="21"/></name></expr>;<pos:position pos:line="69" pos:column="22"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="71" pos:column="3">zSql<pos:position pos:line="71" pos:column="7"/></name> <operator pos:line="71" pos:column="8">=<pos:position pos:line="71" pos:column="9"/></operator> <call><name pos:line="71" pos:column="10">sqlite3MPrintf<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><name pos:line="71" pos:column="25">db<pos:position pos:line="71" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="29">zSql2<pos:position pos:line="71" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="36">zDb<pos:position pos:line="71" pos:column="39"/></name></expr></argument>)<pos:position pos:line="71" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="41"/></expr_stmt>
  <if pos:line="72" pos:column="3">if<condition pos:line="72" pos:column="5">( <expr><operator pos:line="72" pos:column="7">!<pos:position pos:line="72" pos:column="8"/></operator><name pos:line="72" pos:column="8">zSql<pos:position pos:line="72" pos:column="12"/></name></expr> )<pos:position pos:line="72" pos:column="14"/></condition><then><block pos:line="72" pos:column="14">{
    <return pos:line="73" pos:column="5">return <expr><name pos:line="73" pos:column="12">SQLITE_NOMEM_BKPT<pos:position pos:line="73" pos:column="29"/></name></expr>;<pos:position pos:line="73" pos:column="30"/></return>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="75" pos:column="3">rc<pos:position pos:line="75" pos:column="5"/></name> <operator pos:line="75" pos:column="6">=<pos:position pos:line="75" pos:column="7"/></operator> <call><name pos:line="75" pos:column="8">sqlite3_prepare<pos:position pos:line="75" pos:column="23"/></name><argument_list pos:line="75" pos:column="23">(<argument><expr><name pos:line="75" pos:column="24">db<pos:position pos:line="75" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="28">zSql<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="34">-<pos:position pos:line="75" pos:column="35"/></operator><literal type="number" pos:line="75" pos:column="35">1<pos:position pos:line="75" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="75" pos:column="38">&amp;<pos:position pos:line="75" pos:column="43"/></operator><name pos:line="75" pos:column="39">pStmt<pos:position pos:line="75" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="46">0<pos:position pos:line="75" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="76" pos:column="3">sqlite3DbFree<pos:position pos:line="76" pos:column="16"/></name><argument_list pos:line="76" pos:column="16">(<argument><expr><name pos:line="76" pos:column="17">db<pos:position pos:line="76" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="21">zSql<pos:position pos:line="76" pos:column="25"/></name></expr></argument>)<pos:position pos:line="76" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="27"/></expr_stmt>
  <if pos:line="77" pos:column="3">if<condition pos:line="77" pos:column="5">( <expr><name pos:line="77" pos:column="7">rc<pos:position pos:line="77" pos:column="9"/></name></expr> )<pos:position pos:line="77" pos:column="11"/></condition><then pos:line="77" pos:column="11"> <block type="pseudo"><return pos:line="77" pos:column="12">return <expr><name pos:line="77" pos:column="19">rc<pos:position pos:line="77" pos:column="21"/></name></expr>;<pos:position pos:line="77" pos:column="22"/></return></block></then></if>

  <while pos:line="79" pos:column="3">while<condition pos:line="79" pos:column="8">( <expr><call><name pos:line="79" pos:column="10">sqlite3_step<pos:position pos:line="79" pos:column="22"/></name><argument_list pos:line="79" pos:column="22">(<argument><expr><name pos:line="79" pos:column="23">pStmt<pos:position pos:line="79" pos:column="28"/></name></expr></argument>)<pos:position pos:line="79" pos:column="29"/></argument_list></call><operator pos:line="79" pos:column="29">==<pos:position pos:line="79" pos:column="31"/></operator><name pos:line="79" pos:column="31">SQLITE_ROW<pos:position pos:line="79" pos:column="41"/></name></expr> )<pos:position pos:line="79" pos:column="43"/></condition><block pos:line="79" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="80" pos:column="5">char<pos:position pos:line="80" pos:column="9"/></name> <modifier pos:line="80" pos:column="10">*<pos:position pos:line="80" pos:column="11"/></modifier></type><name pos:line="80" pos:column="11">zIndex<pos:position pos:line="80" pos:column="17"/></name></decl>;<pos:position pos:line="80" pos:column="18"/></decl_stmt>                 <comment type="block" pos:line="80" pos:column="35">/* Index name */</comment>
    <decl_stmt><decl><type><name pos:line="81" pos:column="5">Index<pos:position pos:line="81" pos:column="10"/></name> <modifier pos:line="81" pos:column="11">*<pos:position pos:line="81" pos:column="12"/></modifier></type><name pos:line="81" pos:column="12">pIdx<pos:position pos:line="81" pos:column="16"/></name></decl>;<pos:position pos:line="81" pos:column="17"/></decl_stmt>                  <comment type="block" pos:line="81" pos:column="35">/* Pointer to the index object */</comment>
    <decl_stmt><decl><type><name pos:line="82" pos:column="5">int<pos:position pos:line="82" pos:column="8"/></name></type> <name pos:line="82" pos:column="9">nCol<pos:position pos:line="82" pos:column="13"/></name> <init pos:line="82" pos:column="14">= <expr><literal type="number" pos:line="82" pos:column="16">1<pos:position pos:line="82" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="82" pos:column="18"/></decl_stmt>                 <comment type="block" pos:line="82" pos:column="35">/* Number of columns in index */</comment>

    <expr_stmt><expr><name pos:line="84" pos:column="5">zIndex<pos:position pos:line="84" pos:column="11"/></name> <operator pos:line="84" pos:column="12">=<pos:position pos:line="84" pos:column="13"/></operator> <operator pos:line="84" pos:column="14">(<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="15">char<pos:position pos:line="84" pos:column="19"/></name> <operator pos:line="84" pos:column="20">*<pos:position pos:line="84" pos:column="21"/></operator><operator pos:line="84" pos:column="21">)<pos:position pos:line="84" pos:column="22"/></operator><call><name pos:line="84" pos:column="22">sqlite3_column_text<pos:position pos:line="84" pos:column="41"/></name><argument_list pos:line="84" pos:column="41">(<argument><expr><name pos:line="84" pos:column="42">pStmt<pos:position pos:line="84" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="49">0<pos:position pos:line="84" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="52"/></expr_stmt>
    <if pos:line="85" pos:column="5">if<condition pos:line="85" pos:column="7">( <expr><name pos:line="85" pos:column="9">zIndex<pos:position pos:line="85" pos:column="15"/></name><operator pos:line="85" pos:column="15">==<pos:position pos:line="85" pos:column="17"/></operator><literal type="number" pos:line="85" pos:column="17">0<pos:position pos:line="85" pos:column="18"/></literal></expr> )<pos:position pos:line="85" pos:column="20"/></condition><then pos:line="85" pos:column="20"> <block type="pseudo"><continue pos:line="85" pos:column="21">continue;<pos:position pos:line="85" pos:column="30"/></continue></block></then></if>
    <expr_stmt><expr><name pos:line="86" pos:column="5">pIdx<pos:position pos:line="86" pos:column="9"/></name> <operator pos:line="86" pos:column="10">=<pos:position pos:line="86" pos:column="11"/></operator> <call><name pos:line="86" pos:column="12">findIndexOrPrimaryKey<pos:position pos:line="86" pos:column="33"/></name><argument_list pos:line="86" pos:column="33">(<argument><expr><name pos:line="86" pos:column="34">db<pos:position pos:line="86" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="38">zIndex<pos:position pos:line="86" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="46">zDb<pos:position pos:line="86" pos:column="49"/></name></expr></argument>)<pos:position pos:line="86" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="51"/></expr_stmt>
    <if pos:line="87" pos:column="5">if<condition pos:line="87" pos:column="7">( <expr><name pos:line="87" pos:column="9">pIdx<pos:position pos:line="87" pos:column="13"/></name><operator pos:line="87" pos:column="13">==<pos:position pos:line="87" pos:column="15"/></operator><literal type="number" pos:line="87" pos:column="15">0<pos:position pos:line="87" pos:column="16"/></literal></expr> )<pos:position pos:line="87" pos:column="18"/></condition><then pos:line="87" pos:column="18"> <block type="pseudo"><continue pos:line="87" pos:column="19">continue;<pos:position pos:line="87" pos:column="28"/></continue></block></then></if>
    <comment type="block" pos:line="88" pos:column="5">/* This next condition is true if data has already been loaded from 
    ** the sqlite_stat4 table. In this case ignore stat3 data.  */</comment>
    <expr_stmt><expr><name pos:line="90" pos:column="5">nCol<pos:position pos:line="90" pos:column="9"/></name> <operator pos:line="90" pos:column="10">=<pos:position pos:line="90" pos:column="11"/></operator> <name><name pos:line="90" pos:column="12">pIdx<pos:position pos:line="90" pos:column="16"/></name><operator pos:line="90" pos:column="16">-&gt;<pos:position pos:line="90" pos:column="21"/></operator><name pos:line="90" pos:column="18">nSampleCol<pos:position pos:line="90" pos:column="28"/></name></name></expr>;<pos:position pos:line="90" pos:column="29"/></expr_stmt>
    <if pos:line="91" pos:column="5">if<condition pos:line="91" pos:column="7">( <expr><name pos:line="91" pos:column="9">bStat3<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">&amp;&amp;<pos:position pos:line="91" pos:column="26"/></operator> <name pos:line="91" pos:column="19">nCol<pos:position pos:line="91" pos:column="23"/></name><operator pos:line="91" pos:column="23">&gt;<pos:position pos:line="91" pos:column="27"/></operator><literal type="number" pos:line="91" pos:column="24">1<pos:position pos:line="91" pos:column="25"/></literal></expr> )<pos:position pos:line="91" pos:column="27"/></condition><then pos:line="91" pos:column="27"> <block type="pseudo"><continue pos:line="91" pos:column="28">continue;<pos:position pos:line="91" pos:column="37"/></continue></block></then></if>
    <if pos:line="92" pos:column="5">if<condition pos:line="92" pos:column="7">( <expr><name pos:line="92" pos:column="9">pIdx<pos:position pos:line="92" pos:column="13"/></name><operator pos:line="92" pos:column="13">!=<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="15">pPrevIdx<pos:position pos:line="92" pos:column="23"/></name></expr> )<pos:position pos:line="92" pos:column="25"/></condition><then><block pos:line="92" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">initAvgEq<pos:position pos:line="93" pos:column="16"/></name><argument_list pos:line="93" pos:column="16">(<argument><expr><name pos:line="93" pos:column="17">pPrevIdx<pos:position pos:line="93" pos:column="25"/></name></expr></argument>)<pos:position pos:line="93" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name pos:line="94" pos:column="7">pPrevIdx<pos:position pos:line="94" pos:column="15"/></name> <operator pos:line="94" pos:column="16">=<pos:position pos:line="94" pos:column="17"/></operator> <name pos:line="94" pos:column="18">pIdx<pos:position pos:line="94" pos:column="22"/></name></expr>;<pos:position pos:line="94" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="96" pos:column="5">pSample<pos:position pos:line="96" pos:column="12"/></name> <operator pos:line="96" pos:column="13">=<pos:position pos:line="96" pos:column="14"/></operator> <operator pos:line="96" pos:column="15">&amp;<pos:position pos:line="96" pos:column="20"/></operator><name><name pos:line="96" pos:column="16">pIdx<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">-&gt;<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="22">aSample<pos:position pos:line="96" pos:column="29"/></name><index pos:line="96" pos:column="29">[<expr><name><name pos:line="96" pos:column="30">pIdx<pos:position pos:line="96" pos:column="34"/></name><operator pos:line="96" pos:column="34">-&gt;<pos:position pos:line="96" pos:column="39"/></operator><name pos:line="96" pos:column="36">nSample<pos:position pos:line="96" pos:column="43"/></name></name></expr>]<pos:position pos:line="96" pos:column="44"/></index></name></expr>;<pos:position pos:line="96" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">decodeIntArray<pos:position pos:line="97" pos:column="19"/></name><argument_list pos:line="97" pos:column="19">(<argument><expr><operator pos:line="97" pos:column="20">(<pos:position pos:line="97" pos:column="21"/></operator><name pos:line="97" pos:column="21">char<pos:position pos:line="97" pos:column="25"/></name><operator pos:line="97" pos:column="25">*<pos:position pos:line="97" pos:column="26"/></operator><operator pos:line="97" pos:column="26">)<pos:position pos:line="97" pos:column="27"/></operator><call><name pos:line="97" pos:column="27">sqlite3_column_text<pos:position pos:line="97" pos:column="46"/></name><argument_list pos:line="97" pos:column="46">(<argument><expr><name pos:line="97" pos:column="47">pStmt<pos:position pos:line="97" pos:column="52"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="97" pos:column="53">1<pos:position pos:line="97" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="55"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="97" pos:column="56">nCol<pos:position pos:line="97" pos:column="60"/></name></expr></argument>,<argument><expr><name><name pos:line="97" pos:column="61">pSample<pos:position pos:line="97" pos:column="68"/></name><operator pos:line="97" pos:column="68">-&gt;<pos:position pos:line="97" pos:column="73"/></operator><name pos:line="97" pos:column="70">anEq<pos:position pos:line="97" pos:column="74"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="97" pos:column="75">0<pos:position pos:line="97" pos:column="76"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="97" pos:column="77">0<pos:position pos:line="97" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">decodeIntArray<pos:position pos:line="98" pos:column="19"/></name><argument_list pos:line="98" pos:column="19">(<argument><expr><operator pos:line="98" pos:column="20">(<pos:position pos:line="98" pos:column="21"/></operator><name pos:line="98" pos:column="21">char<pos:position pos:line="98" pos:column="25"/></name><operator pos:line="98" pos:column="25">*<pos:position pos:line="98" pos:column="26"/></operator><operator pos:line="98" pos:column="26">)<pos:position pos:line="98" pos:column="27"/></operator><call><name pos:line="98" pos:column="27">sqlite3_column_text<pos:position pos:line="98" pos:column="46"/></name><argument_list pos:line="98" pos:column="46">(<argument><expr><name pos:line="98" pos:column="47">pStmt<pos:position pos:line="98" pos:column="52"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="98" pos:column="53">2<pos:position pos:line="98" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="55"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="98" pos:column="56">nCol<pos:position pos:line="98" pos:column="60"/></name></expr></argument>,<argument><expr><name><name pos:line="98" pos:column="61">pSample<pos:position pos:line="98" pos:column="68"/></name><operator pos:line="98" pos:column="68">-&gt;<pos:position pos:line="98" pos:column="73"/></operator><name pos:line="98" pos:column="70">anLt<pos:position pos:line="98" pos:column="74"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="98" pos:column="75">0<pos:position pos:line="98" pos:column="76"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="98" pos:column="77">0<pos:position pos:line="98" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">decodeIntArray<pos:position pos:line="99" pos:column="19"/></name><argument_list pos:line="99" pos:column="19">(<argument><expr><operator pos:line="99" pos:column="20">(<pos:position pos:line="99" pos:column="21"/></operator><name pos:line="99" pos:column="21">char<pos:position pos:line="99" pos:column="25"/></name><operator pos:line="99" pos:column="25">*<pos:position pos:line="99" pos:column="26"/></operator><operator pos:line="99" pos:column="26">)<pos:position pos:line="99" pos:column="27"/></operator><call><name pos:line="99" pos:column="27">sqlite3_column_text<pos:position pos:line="99" pos:column="46"/></name><argument_list pos:line="99" pos:column="46">(<argument><expr><name pos:line="99" pos:column="47">pStmt<pos:position pos:line="99" pos:column="52"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="99" pos:column="53">3<pos:position pos:line="99" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="55"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="99" pos:column="56">nCol<pos:position pos:line="99" pos:column="60"/></name></expr></argument>,<argument><expr><name><name pos:line="99" pos:column="61">pSample<pos:position pos:line="99" pos:column="68"/></name><operator pos:line="99" pos:column="68">-&gt;<pos:position pos:line="99" pos:column="73"/></operator><name pos:line="99" pos:column="70">anDLt<pos:position pos:line="99" pos:column="75"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="99" pos:column="76">0<pos:position pos:line="99" pos:column="77"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="99" pos:column="78">0<pos:position pos:line="99" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="81"/></expr_stmt>

    <comment type="block" pos:line="101" pos:column="5">/* Take a copy of the sample. Add two 0x00 bytes the end of the buffer.
    ** This is in case the sample record is corrupted. In that case, the
    ** sqlite3VdbeRecordCompare() may read up to two varints past the
    ** end of the allocated buffer before it realizes it is dealing with
    ** a corrupt record. Adding the two 0x00 bytes prevents this from causing
    ** a buffer overread.  */</comment>
    <expr_stmt><expr><name><name pos:line="107" pos:column="5">pSample<pos:position pos:line="107" pos:column="12"/></name><operator pos:line="107" pos:column="12">-&gt;<pos:position pos:line="107" pos:column="17"/></operator><name pos:line="107" pos:column="14">n<pos:position pos:line="107" pos:column="15"/></name></name> <operator pos:line="107" pos:column="16">=<pos:position pos:line="107" pos:column="17"/></operator> <call><name pos:line="107" pos:column="18">sqlite3_column_bytes<pos:position pos:line="107" pos:column="38"/></name><argument_list pos:line="107" pos:column="38">(<argument><expr><name pos:line="107" pos:column="39">pStmt<pos:position pos:line="107" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="46">4<pos:position pos:line="107" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="108" pos:column="5">pSample<pos:position pos:line="108" pos:column="12"/></name><operator pos:line="108" pos:column="12">-&gt;<pos:position pos:line="108" pos:column="17"/></operator><name pos:line="108" pos:column="14">p<pos:position pos:line="108" pos:column="15"/></name></name> <operator pos:line="108" pos:column="16">=<pos:position pos:line="108" pos:column="17"/></operator> <call><name pos:line="108" pos:column="18">sqlite3DbMallocZero<pos:position pos:line="108" pos:column="37"/></name><argument_list pos:line="108" pos:column="37">(<argument><expr><name pos:line="108" pos:column="38">db<pos:position pos:line="108" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="42">pSample<pos:position pos:line="108" pos:column="49"/></name><operator pos:line="108" pos:column="49">-&gt;<pos:position pos:line="108" pos:column="54"/></operator><name pos:line="108" pos:column="51">n<pos:position pos:line="108" pos:column="52"/></name></name> <operator pos:line="108" pos:column="53">+<pos:position pos:line="108" pos:column="54"/></operator> <literal type="number" pos:line="108" pos:column="55">2<pos:position pos:line="108" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="58"/></expr_stmt>
    <if pos:line="109" pos:column="5">if<condition pos:line="109" pos:column="7">( <expr><name><name pos:line="109" pos:column="9">pSample<pos:position pos:line="109" pos:column="16"/></name><operator pos:line="109" pos:column="16">-&gt;<pos:position pos:line="109" pos:column="21"/></operator><name pos:line="109" pos:column="18">p<pos:position pos:line="109" pos:column="19"/></name></name><operator pos:line="109" pos:column="19">==<pos:position pos:line="109" pos:column="21"/></operator><literal type="number" pos:line="109" pos:column="21">0<pos:position pos:line="109" pos:column="22"/></literal></expr> )<pos:position pos:line="109" pos:column="24"/></condition><then><block pos:line="109" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="110" pos:column="7">sqlite3_finalize<pos:position pos:line="110" pos:column="23"/></name><argument_list pos:line="110" pos:column="23">(<argument><expr><name pos:line="110" pos:column="24">pStmt<pos:position pos:line="110" pos:column="29"/></name></expr></argument>)<pos:position pos:line="110" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="31"/></expr_stmt>
      <return pos:line="111" pos:column="7">return <expr><name pos:line="111" pos:column="14">SQLITE_NOMEM_BKPT<pos:position pos:line="111" pos:column="31"/></name></expr>;<pos:position pos:line="111" pos:column="32"/></return>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>
    <if pos:line="113" pos:column="5">if<condition pos:line="113" pos:column="7">( <expr><name><name pos:line="113" pos:column="9">pSample<pos:position pos:line="113" pos:column="16"/></name><operator pos:line="113" pos:column="16">-&gt;<pos:position pos:line="113" pos:column="21"/></operator><name pos:line="113" pos:column="18">n<pos:position pos:line="113" pos:column="19"/></name></name></expr> )<pos:position pos:line="113" pos:column="21"/></condition><then><block pos:line="113" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="114" pos:column="7">memcpy<pos:position pos:line="114" pos:column="13"/></name><argument_list pos:line="114" pos:column="13">(<argument><expr><name><name pos:line="114" pos:column="14">pSample<pos:position pos:line="114" pos:column="21"/></name><operator pos:line="114" pos:column="21">-&gt;<pos:position pos:line="114" pos:column="26"/></operator><name pos:line="114" pos:column="23">p<pos:position pos:line="114" pos:column="24"/></name></name></expr></argument>, <argument><expr><call><name pos:line="114" pos:column="26">sqlite3_column_blob<pos:position pos:line="114" pos:column="45"/></name><argument_list pos:line="114" pos:column="45">(<argument><expr><name pos:line="114" pos:column="46">pStmt<pos:position pos:line="114" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="53">4<pos:position pos:line="114" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="57">pSample<pos:position pos:line="114" pos:column="64"/></name><operator pos:line="114" pos:column="64">-&gt;<pos:position pos:line="114" pos:column="69"/></operator><name pos:line="114" pos:column="66">n<pos:position pos:line="114" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="115" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="116" pos:column="5">pIdx<pos:position pos:line="116" pos:column="9"/></name><operator pos:line="116" pos:column="9">-&gt;<pos:position pos:line="116" pos:column="14"/></operator><name pos:line="116" pos:column="11">nSample<pos:position pos:line="116" pos:column="18"/></name></name><operator pos:line="116" pos:column="18">++<pos:position pos:line="116" pos:column="20"/></operator></expr>;<pos:position pos:line="116" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="117" pos:column="4"/></block></while>
  <expr_stmt><expr><name pos:line="118" pos:column="3">rc<pos:position pos:line="118" pos:column="5"/></name> <operator pos:line="118" pos:column="6">=<pos:position pos:line="118" pos:column="7"/></operator> <call><name pos:line="118" pos:column="8">sqlite3_finalize<pos:position pos:line="118" pos:column="24"/></name><argument_list pos:line="118" pos:column="24">(<argument><expr><name pos:line="118" pos:column="25">pStmt<pos:position pos:line="118" pos:column="30"/></name></expr></argument>)<pos:position pos:line="118" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="32"/></expr_stmt>
  <if pos:line="119" pos:column="3">if<condition pos:line="119" pos:column="5">( <expr><name pos:line="119" pos:column="7">rc<pos:position pos:line="119" pos:column="9"/></name><operator pos:line="119" pos:column="9">==<pos:position pos:line="119" pos:column="11"/></operator><name pos:line="119" pos:column="11">SQLITE_OK<pos:position pos:line="119" pos:column="20"/></name></expr> )<pos:position pos:line="119" pos:column="22"/></condition><then pos:line="119" pos:column="22"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="23">initAvgEq<pos:position pos:line="119" pos:column="32"/></name><argument_list pos:line="119" pos:column="32">(<argument><expr><name pos:line="119" pos:column="33">pPrevIdx<pos:position pos:line="119" pos:column="41"/></name></expr></argument>)<pos:position pos:line="119" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="43"/></expr_stmt></block></then></if>
  <return pos:line="120" pos:column="3">return <expr><name pos:line="120" pos:column="10">rc<pos:position pos:line="120" pos:column="12"/></name></expr>;<pos:position pos:line="120" pos:column="13"/></return>
}<pos:position pos:line="121" pos:column="2"/></block></function></unit>

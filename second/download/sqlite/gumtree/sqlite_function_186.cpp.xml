<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_186.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">generateColumnNames<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Parse<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pParse<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>,      <comment type="block" pos:line="2" pos:column="23">/* Parser context */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">Select<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">pSelect<pos:position pos:line="3" pos:column="18"/></name></decl></parameter>     <comment type="block" pos:line="3" pos:column="23">/* Generate column names for this SELECT statement */</comment>
)<pos:position pos:line="4" pos:column="2"/></parameter_list><block pos:line="4" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">Vdbe<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">v<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><name><name pos:line="5" pos:column="13">pParse<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">-&gt;<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="21">pVdbe<pos:position pos:line="5" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">Table<pos:position pos:line="7" pos:column="8"/></name> <modifier pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></modifier></type><name pos:line="7" pos:column="10">pTab<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">SrcList<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">pTabList<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">ExprList<pos:position pos:line="9" pos:column="11"/></name> <modifier pos:line="9" pos:column="12">*<pos:position pos:line="9" pos:column="13"/></modifier></type><name pos:line="9" pos:column="13">pEList<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">sqlite3<pos:position pos:line="10" pos:column="10"/></name> <modifier pos:line="10" pos:column="11">*<pos:position pos:line="10" pos:column="12"/></modifier></type><name pos:line="10" pos:column="12">db<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><name><name pos:line="10" pos:column="17">pParse<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">db<pos:position pos:line="10" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">fullName<pos:position pos:line="11" pos:column="15"/></name></decl>;<pos:position pos:line="11" pos:column="16"/></decl_stmt>    <comment type="block" pos:line="11" pos:column="20">/* TABLE.COLUMN if no AS clause and is a direct table ref */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">srcName<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>     <comment type="block" pos:line="12" pos:column="20">/* COLUMN or TABLE.COLUMN if no AS clause and is direct */</comment>

<cpp:ifndef pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">ifndef<pos:position pos:line="14" pos:column="8"/></cpp:directive> <name pos:line="14" pos:column="9">SQLITE_OMIT_EXPLAIN<pos:position pos:line="14" pos:column="28"/></name></cpp:ifndef>
  <comment type="block" pos:line="15" pos:column="3">/* If this is an EXPLAIN, skip this step */</comment>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">( <expr><name><name pos:line="16" pos:column="7">pParse<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">explain<pos:position pos:line="16" pos:column="22"/></name></name></expr> )<pos:position pos:line="16" pos:column="24"/></condition><then><block pos:line="16" pos:column="24">{
    <return pos:line="17" pos:column="5">return;<pos:position pos:line="17" pos:column="12"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">( <expr><name><name pos:line="21" pos:column="7">pParse<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">colNamesSet<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">||<pos:position pos:line="21" pos:column="29"/></operator> <name><name pos:line="21" pos:column="30">db<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">mallocFailed<pos:position pos:line="21" pos:column="46"/></name></name></expr> )<pos:position pos:line="21" pos:column="48"/></condition><then pos:line="21" pos:column="48"> <block type="pseudo"><return pos:line="21" pos:column="49">return;<pos:position pos:line="21" pos:column="56"/></return></block></then></if>
  <comment type="block" pos:line="22" pos:column="3">/* Column names are determined by the left-most term of a compound select */</comment>
  <while pos:line="23" pos:column="3">while<condition pos:line="23" pos:column="8">( <expr><name><name pos:line="23" pos:column="10">pSelect<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">pPrior<pos:position pos:line="23" pos:column="25"/></name></name></expr> )<pos:position pos:line="23" pos:column="27"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="28">pSelect<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <name><name pos:line="23" pos:column="38">pSelect<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">-&gt;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="47">pPrior<pos:position pos:line="23" pos:column="53"/></name></name></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt></block></while>
  <expr_stmt><expr><name pos:line="24" pos:column="3">pTabList<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <name><name pos:line="24" pos:column="14">pSelect<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">pSrc<pos:position pos:line="24" pos:column="27"/></name></name></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="25" pos:column="3">pEList<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <name><name pos:line="25" pos:column="12">pSelect<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">pEList<pos:position pos:line="25" pos:column="27"/></name></name></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">assert<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">( <argument><expr><name pos:line="26" pos:column="11">v<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">!=<pos:position pos:line="26" pos:column="14"/></operator><literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr></argument> )<pos:position pos:line="26" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">assert<pos:position pos:line="27" pos:column="9"/></name><argument_list pos:line="27" pos:column="9">( <argument><expr><name pos:line="27" pos:column="11">pTabList<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">!=<pos:position pos:line="27" pos:column="21"/></operator><literal type="number" pos:line="27" pos:column="21">0<pos:position pos:line="27" pos:column="22"/></literal></expr></argument> )<pos:position pos:line="27" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">pParse<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">colNamesSet<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <literal type="number" pos:line="28" pos:column="25">1<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="29" pos:column="3">fullName<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <operator pos:line="29" pos:column="14">(<pos:position pos:line="29" pos:column="15"/></operator><name><name pos:line="29" pos:column="15">db<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">flags<pos:position pos:line="29" pos:column="24"/></name></name> <operator pos:line="29" pos:column="25">&amp;<pos:position pos:line="29" pos:column="30"/></operator> <name pos:line="29" pos:column="27">SQLITE_FullColNames<pos:position pos:line="29" pos:column="46"/></name><operator pos:line="29" pos:column="46">)<pos:position pos:line="29" pos:column="47"/></operator><operator pos:line="29" pos:column="47">!=<pos:position pos:line="29" pos:column="49"/></operator><literal type="number" pos:line="29" pos:column="49">0<pos:position pos:line="29" pos:column="50"/></literal></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><name pos:line="30" pos:column="3">srcName<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <operator pos:line="30" pos:column="13">(<pos:position pos:line="30" pos:column="14"/></operator><name><name pos:line="30" pos:column="14">db<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">flags<pos:position pos:line="30" pos:column="23"/></name></name> <operator pos:line="30" pos:column="24">&amp;<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="26">SQLITE_ShortColNames<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">)<pos:position pos:line="30" pos:column="47"/></operator><operator pos:line="30" pos:column="47">!=<pos:position pos:line="30" pos:column="49"/></operator><literal type="number" pos:line="30" pos:column="49">0<pos:position pos:line="30" pos:column="50"/></literal> <operator pos:line="30" pos:column="51">||<pos:position pos:line="30" pos:column="53"/></operator> <name pos:line="30" pos:column="54">fullName<pos:position pos:line="30" pos:column="62"/></name></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">sqlite3VdbeSetNumCols<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">v<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="28">pEList<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">nExpr<pos:position pos:line="31" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>
  <for pos:line="32" pos:column="3">for<control pos:line="32" pos:column="6">(<init><expr><name pos:line="32" pos:column="7">i<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">=<pos:position pos:line="32" pos:column="9"/></operator><literal type="number" pos:line="32" pos:column="9">0<pos:position pos:line="32" pos:column="10"/></literal></expr>;<pos:position pos:line="32" pos:column="11"/></init> <condition><expr><name pos:line="32" pos:column="12">i<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">&lt;<pos:position pos:line="32" pos:column="17"/></operator><name><name pos:line="32" pos:column="14">pEList<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">nExpr<pos:position pos:line="32" pos:column="27"/></name></name></expr>;<pos:position pos:line="32" pos:column="28"/></condition> <incr><expr><name pos:line="32" pos:column="29">i<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">++<pos:position pos:line="32" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="33"/></control><block pos:line="32" pos:column="33">{
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">Expr<pos:position pos:line="33" pos:column="9"/></name> <modifier pos:line="33" pos:column="10">*<pos:position pos:line="33" pos:column="11"/></modifier></type><name pos:line="33" pos:column="11">p<pos:position pos:line="33" pos:column="12"/></name> <init pos:line="33" pos:column="13">= <expr><name><name pos:line="33" pos:column="15">pEList<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">a<pos:position pos:line="33" pos:column="24"/></name><index pos:line="33" pos:column="24">[<expr><name pos:line="33" pos:column="25">i<pos:position pos:line="33" pos:column="26"/></name></expr>]<pos:position pos:line="33" pos:column="27"/></index></name><operator pos:line="33" pos:column="27">.<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="28">pExpr<pos:position pos:line="33" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">assert<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">( <argument><expr><name pos:line="35" pos:column="13">p<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">!=<pos:position pos:line="35" pos:column="16"/></operator><literal type="number" pos:line="35" pos:column="16">0<pos:position pos:line="35" pos:column="17"/></literal></expr></argument> )<pos:position pos:line="35" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">assert<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">( <argument><expr><name><name pos:line="36" pos:column="13">p<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">op<pos:position pos:line="36" pos:column="18"/></name></name><operator pos:line="36" pos:column="18">!=<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">TK_AGG_COLUMN<pos:position pos:line="36" pos:column="33"/></name></expr></argument> )<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>  <comment type="block" pos:line="36" pos:column="38">/* Agg processing has not run yet */</comment>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">assert<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">( <argument><expr><name><name pos:line="37" pos:column="13">p<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">op<pos:position pos:line="37" pos:column="18"/></name></name><operator pos:line="37" pos:column="18">!=<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">TK_COLUMN<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">||<pos:position pos:line="37" pos:column="32"/></operator> <name><name pos:line="37" pos:column="33">p<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">pTab<pos:position pos:line="37" pos:column="40"/></name></name><operator pos:line="37" pos:column="40">!=<pos:position pos:line="37" pos:column="42"/></operator><literal type="number" pos:line="37" pos:column="42">0<pos:position pos:line="37" pos:column="43"/></literal></expr></argument> )<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt> <comment type="block" pos:line="37" pos:column="47">/* Covering idx not yet coded */</comment>
    <if pos:line="38" pos:column="5">if<condition pos:line="38" pos:column="7">( <expr><name><name pos:line="38" pos:column="9">pEList<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">a<pos:position pos:line="38" pos:column="18"/></name><index pos:line="38" pos:column="18">[<expr><name pos:line="38" pos:column="19">i<pos:position pos:line="38" pos:column="20"/></name></expr>]<pos:position pos:line="38" pos:column="21"/></index></name><operator pos:line="38" pos:column="21">.<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">zName<pos:position pos:line="38" pos:column="27"/></name></expr> )<pos:position pos:line="38" pos:column="29"/></condition><then><block pos:line="38" pos:column="29">{
      <comment type="block" pos:line="39" pos:column="7">/* An AS clause always takes first priority */</comment>
      <decl_stmt><decl><type><name pos:line="40" pos:column="7">char<pos:position pos:line="40" pos:column="11"/></name> <modifier pos:line="40" pos:column="12">*<pos:position pos:line="40" pos:column="13"/></modifier></type><name pos:line="40" pos:column="13">zName<pos:position pos:line="40" pos:column="18"/></name> <init pos:line="40" pos:column="19">= <expr><name><name pos:line="40" pos:column="21">pEList<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">a<pos:position pos:line="40" pos:column="30"/></name><index pos:line="40" pos:column="30">[<expr><name pos:line="40" pos:column="31">i<pos:position pos:line="40" pos:column="32"/></name></expr>]<pos:position pos:line="40" pos:column="33"/></index></name><operator pos:line="40" pos:column="33">.<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="34">zName<pos:position pos:line="40" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="40"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">sqlite3VdbeSetColName<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">v<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="32">i<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">COLNAME_NAME<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">zName<pos:position pos:line="41" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="56">SQLITE_TRANSIENT<pos:position pos:line="41" pos:column="72"/></name></expr></argument>)<pos:position pos:line="41" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then><elseif pos:line="42" pos:column="6">else <if pos:line="42" pos:column="11">if<condition pos:line="42" pos:column="13">( <expr><name pos:line="42" pos:column="15">srcName<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">&amp;&amp;<pos:position pos:line="42" pos:column="33"/></operator> <name><name pos:line="42" pos:column="26">p<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">op<pos:position pos:line="42" pos:column="31"/></name></name><operator pos:line="42" pos:column="31">==<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="33">TK_COLUMN<pos:position pos:line="42" pos:column="42"/></name></expr> )<pos:position pos:line="42" pos:column="44"/></condition><then><block pos:line="42" pos:column="44">{
      <decl_stmt><decl><type><name pos:line="43" pos:column="7">char<pos:position pos:line="43" pos:column="11"/></name> <modifier pos:line="43" pos:column="12">*<pos:position pos:line="43" pos:column="13"/></modifier></type><name pos:line="43" pos:column="13">zCol<pos:position pos:line="43" pos:column="17"/></name></decl>;<pos:position pos:line="43" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="44" pos:column="7">int<pos:position pos:line="44" pos:column="10"/></name></type> <name pos:line="44" pos:column="11">iCol<pos:position pos:line="44" pos:column="15"/></name> <init pos:line="44" pos:column="16">= <expr><name><name pos:line="44" pos:column="18">p<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">-&gt;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="21">iColumn<pos:position pos:line="44" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="44" pos:column="29"/></decl_stmt>
      <expr_stmt><expr><name pos:line="45" pos:column="7">pTab<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <name><name pos:line="45" pos:column="14">p<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">-&gt;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="17">pTab<pos:position pos:line="45" pos:column="21"/></name></name></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">assert<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">( <argument><expr><name pos:line="46" pos:column="15">pTab<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">!=<pos:position pos:line="46" pos:column="21"/></operator><literal type="number" pos:line="46" pos:column="21">0<pos:position pos:line="46" pos:column="22"/></literal></expr></argument> )<pos:position pos:line="46" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>
      <if pos:line="47" pos:column="7">if<condition pos:line="47" pos:column="9">( <expr><name pos:line="47" pos:column="11">iCol<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">&lt;<pos:position pos:line="47" pos:column="19"/></operator><literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal></expr> )<pos:position pos:line="47" pos:column="19"/></condition><then pos:line="47" pos:column="19"> <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="20">iCol<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <name><name pos:line="47" pos:column="27">pTab<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">-&gt;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="33">iPKey<pos:position pos:line="47" pos:column="38"/></name></name></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">assert<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">( <argument><expr><name pos:line="48" pos:column="15">iCol<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">==<pos:position pos:line="48" pos:column="21"/></operator><operator pos:line="48" pos:column="21">-<pos:position pos:line="48" pos:column="22"/></operator><literal type="number" pos:line="48" pos:column="22">1<pos:position pos:line="48" pos:column="23"/></literal> <operator pos:line="48" pos:column="24">||<pos:position pos:line="48" pos:column="26"/></operator> <operator pos:line="48" pos:column="27">(<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="28">iCol<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">&gt;=<pos:position pos:line="48" pos:column="37"/></operator><literal type="number" pos:line="48" pos:column="34">0<pos:position pos:line="48" pos:column="35"/></literal> <operator pos:line="48" pos:column="36">&amp;&amp;<pos:position pos:line="48" pos:column="46"/></operator> <name pos:line="48" pos:column="39">iCol<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">&lt;<pos:position pos:line="48" pos:column="47"/></operator><name><name pos:line="48" pos:column="44">pTab<pos:position pos:line="48" pos:column="48"/></name><operator pos:line="48" pos:column="48">-&gt;<pos:position pos:line="48" pos:column="53"/></operator><name pos:line="48" pos:column="50">nCol<pos:position pos:line="48" pos:column="54"/></name></name><operator pos:line="48" pos:column="54">)<pos:position pos:line="48" pos:column="55"/></operator></expr></argument> )<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt>
      <if pos:line="49" pos:column="7">if<condition pos:line="49" pos:column="9">( <expr><name pos:line="49" pos:column="11">iCol<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">&lt;<pos:position pos:line="49" pos:column="19"/></operator><literal type="number" pos:line="49" pos:column="16">0<pos:position pos:line="49" pos:column="17"/></literal></expr> )<pos:position pos:line="49" pos:column="19"/></condition><then><block pos:line="49" pos:column="19">{
        <expr_stmt><expr><name pos:line="50" pos:column="9">zCol<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <literal type="string" pos:line="50" pos:column="16">"rowid"<pos:position pos:line="50" pos:column="23"/></literal></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block></then><else pos:line="51" pos:column="8">else<block pos:line="51" pos:column="12">{
        <expr_stmt><expr><name pos:line="52" pos:column="9">zCol<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <name><name pos:line="52" pos:column="16">pTab<pos:position pos:line="52" pos:column="20"/></name><operator pos:line="52" pos:column="20">-&gt;<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="22">aCol<pos:position pos:line="52" pos:column="26"/></name><index pos:line="52" pos:column="26">[<expr><name pos:line="52" pos:column="27">iCol<pos:position pos:line="52" pos:column="31"/></name></expr>]<pos:position pos:line="52" pos:column="32"/></index></name><operator pos:line="52" pos:column="32">.<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="33">zName<pos:position pos:line="52" pos:column="38"/></name></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="53" pos:column="8"/></block></else></if>
      <if pos:line="54" pos:column="7">if<condition pos:line="54" pos:column="9">( <expr><name pos:line="54" pos:column="11">fullName<pos:position pos:line="54" pos:column="19"/></name></expr> )<pos:position pos:line="54" pos:column="21"/></condition><then><block pos:line="54" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="55" pos:column="9">char<pos:position pos:line="55" pos:column="13"/></name> <modifier pos:line="55" pos:column="14">*<pos:position pos:line="55" pos:column="15"/></modifier></type><name pos:line="55" pos:column="15">zName<pos:position pos:line="55" pos:column="20"/></name> <init pos:line="55" pos:column="21">= <expr><literal type="number" pos:line="55" pos:column="23">0<pos:position pos:line="55" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="55" pos:column="25"/></decl_stmt>
        <expr_stmt><expr><name pos:line="56" pos:column="9">zName<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">=<pos:position pos:line="56" pos:column="16"/></operator> <call><name pos:line="56" pos:column="17">sqlite3MPrintf<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">db<pos:position pos:line="56" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="36">"%s.%s"<pos:position pos:line="56" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="45">pTab<pos:position pos:line="56" pos:column="49"/></name><operator pos:line="56" pos:column="49">-&gt;<pos:position pos:line="56" pos:column="54"/></operator><name pos:line="56" pos:column="51">zName<pos:position pos:line="56" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="58">zCol<pos:position pos:line="56" pos:column="62"/></name></expr></argument>)<pos:position pos:line="56" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">sqlite3VdbeSetColName<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">v<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="34">i<pos:position pos:line="57" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="37">COLNAME_NAME<pos:position pos:line="57" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="51">zName<pos:position pos:line="57" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="58">SQLITE_DYNAMIC<pos:position pos:line="57" pos:column="72"/></name></expr></argument>)<pos:position pos:line="57" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="74"/></expr_stmt>
      }<pos:position pos:line="58" pos:column="8"/></block></then><else pos:line="58" pos:column="8">else<block pos:line="58" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">sqlite3VdbeSetColName<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><name pos:line="59" pos:column="31">v<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">i<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="37">COLNAME_NAME<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="51">zCol<pos:position pos:line="59" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="57">SQLITE_TRANSIENT<pos:position pos:line="59" pos:column="73"/></name></expr></argument>)<pos:position pos:line="59" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="75"/></expr_stmt>
      }<pos:position pos:line="60" pos:column="8"/></block></else></if>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if></elseif><else pos:line="61" pos:column="6">else<block pos:line="61" pos:column="10">{
      <decl_stmt><decl><type><specifier pos:line="62" pos:column="7">const<pos:position pos:line="62" pos:column="12"/></specifier> <name pos:line="62" pos:column="13">char<pos:position pos:line="62" pos:column="17"/></name> <modifier pos:line="62" pos:column="18">*<pos:position pos:line="62" pos:column="19"/></modifier></type><name pos:line="62" pos:column="19">z<pos:position pos:line="62" pos:column="20"/></name> <init pos:line="62" pos:column="21">= <expr><name><name pos:line="62" pos:column="23">pEList<pos:position pos:line="62" pos:column="29"/></name><operator pos:line="62" pos:column="29">-&gt;<pos:position pos:line="62" pos:column="34"/></operator><name pos:line="62" pos:column="31">a<pos:position pos:line="62" pos:column="32"/></name><index pos:line="62" pos:column="32">[<expr><name pos:line="62" pos:column="33">i<pos:position pos:line="62" pos:column="34"/></name></expr>]<pos:position pos:line="62" pos:column="35"/></index></name><operator pos:line="62" pos:column="35">.<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="36">zSpan<pos:position pos:line="62" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="62" pos:column="42"/></decl_stmt>
      <expr_stmt><expr><name pos:line="63" pos:column="7">z<pos:position pos:line="63" pos:column="8"/></name> <operator pos:line="63" pos:column="9">=<pos:position pos:line="63" pos:column="10"/></operator> <ternary><condition><expr><name pos:line="63" pos:column="11">z<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">==<pos:position pos:line="63" pos:column="14"/></operator><literal type="number" pos:line="63" pos:column="14">0<pos:position pos:line="63" pos:column="15"/></literal></expr> ?<pos:position pos:line="63" pos:column="17"/></condition><then pos:line="63" pos:column="17"> <expr><call><name pos:line="63" pos:column="18">sqlite3MPrintf<pos:position pos:line="63" pos:column="32"/></name><argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">db<pos:position pos:line="63" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="37">"column%d"<pos:position pos:line="63" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="49">i<pos:position pos:line="63" pos:column="50"/></name><operator pos:line="63" pos:column="50">+<pos:position pos:line="63" pos:column="51"/></operator><literal type="number" pos:line="63" pos:column="51">1<pos:position pos:line="63" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="53"/></argument_list></call></expr> <pos:position pos:line="63" pos:column="54"/></then><else pos:line="63" pos:column="54">: <expr><call><name pos:line="63" pos:column="56">sqlite3DbStrDup<pos:position pos:line="63" pos:column="71"/></name><argument_list pos:line="63" pos:column="71">(<argument><expr><name pos:line="63" pos:column="72">db<pos:position pos:line="63" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="76">z<pos:position pos:line="63" pos:column="77"/></name></expr></argument>)<pos:position pos:line="63" pos:column="78"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="63" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">sqlite3VdbeSetColName<pos:position pos:line="64" pos:column="28"/></name><argument_list pos:line="64" pos:column="28">(<argument><expr><name pos:line="64" pos:column="29">v<pos:position pos:line="64" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="32">i<pos:position pos:line="64" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="35">COLNAME_NAME<pos:position pos:line="64" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="49">z<pos:position pos:line="64" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="52">SQLITE_DYNAMIC<pos:position pos:line="64" pos:column="66"/></name></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></else></if>
  }<pos:position pos:line="66" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">generateColumnTypes<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><name pos:line="67" pos:column="23">pParse<pos:position pos:line="67" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="31">pTabList<pos:position pos:line="67" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="41">pEList<pos:position pos:line="67" pos:column="47"/></name></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

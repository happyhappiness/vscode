<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_264.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">optimizeFunc<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">sqlite3_context<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">pContext<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">argc<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">sqlite3_value<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier><modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">argv<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list><block pos:line="2" pos:column="57">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">fulltext_cursor<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">pCursor<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">( <expr><name pos:line="4" pos:column="7">argc<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">&gt;<pos:position pos:line="4" pos:column="15"/></operator><literal type="number" pos:line="4" pos:column="12">1<pos:position pos:line="4" pos:column="13"/></literal></expr> )<pos:position pos:line="4" pos:column="15"/></condition><then><block pos:line="4" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">sqlite3_result_error<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">pContext<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="36">"excess arguments to optimize()"<pos:position pos:line="5" pos:column="68"/></literal></expr></argument>,<argument><expr><operator pos:line="5" pos:column="69">-<pos:position pos:line="5" pos:column="70"/></operator><literal type="number" pos:line="5" pos:column="70">1<pos:position pos:line="5" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="73"/></expr_stmt>
  }<pos:position pos:line="6" pos:column="4"/></block></then><elseif pos:line="6" pos:column="4">else <if pos:line="6" pos:column="9">if<condition pos:line="6" pos:column="11">( <expr><call><name pos:line="6" pos:column="13">sqlite3_value_type<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name><name pos:line="6" pos:column="32">argv<pos:position pos:line="6" pos:column="36"/></name><index pos:line="6" pos:column="36">[<expr><literal type="number" pos:line="6" pos:column="37">0<pos:position pos:line="6" pos:column="38"/></literal></expr>]<pos:position pos:line="6" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call><operator pos:line="6" pos:column="40">!=<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="42">SQLITE_BLOB<pos:position pos:line="6" pos:column="53"/></name> <operator pos:line="6" pos:column="54">||<pos:position pos:line="6" pos:column="56"/></operator>
            <call><name pos:line="7" pos:column="13">sqlite3_value_bytes<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><name><name pos:line="7" pos:column="33">argv<pos:position pos:line="7" pos:column="37"/></name><index pos:line="7" pos:column="37">[<expr><literal type="number" pos:line="7" pos:column="38">0<pos:position pos:line="7" pos:column="39"/></literal></expr>]<pos:position pos:line="7" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call><operator pos:line="7" pos:column="41">!=<pos:position pos:line="7" pos:column="43"/></operator><sizeof pos:line="7" pos:column="43">sizeof<argument_list pos:line="7" pos:column="49">(<argument><expr><name pos:line="7" pos:column="50">pCursor<pos:position pos:line="7" pos:column="57"/></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></sizeof></expr> )<pos:position pos:line="7" pos:column="60"/></condition><then><block pos:line="7" pos:column="60">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">sqlite3_result_error<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">pContext<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="36">"illegal first argument to optimize"<pos:position pos:line="8" pos:column="72"/></literal></expr></argument>,<argument><expr><operator pos:line="8" pos:column="73">-<pos:position pos:line="8" pos:column="74"/></operator><literal type="number" pos:line="8" pos:column="74">1<pos:position pos:line="8" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if></elseif><else pos:line="9" pos:column="4">else<block pos:line="9" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">fulltext_vtab<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type><name pos:line="10" pos:column="20">v<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">i<pos:position pos:line="11" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="12">rc<pos:position pos:line="11" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="16">iMaxLevel<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">OptLeavesReader<pos:position pos:line="12" pos:column="20"/></name> <modifier pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></modifier></type><name pos:line="12" pos:column="22">readers<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">nReaders<pos:position pos:line="13" pos:column="17"/></name></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">LeafWriter<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">writer<pos:position pos:line="14" pos:column="22"/></name></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">sqlite3_stmt<pos:position pos:line="15" pos:column="17"/></name> <modifier pos:line="15" pos:column="18">*<pos:position pos:line="15" pos:column="19"/></modifier></type><name pos:line="15" pos:column="19">s<pos:position pos:line="15" pos:column="20"/></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">memcpy<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><operator pos:line="17" pos:column="12">&amp;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="13">pCursor<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="22">sqlite3_value_blob<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name><name pos:line="17" pos:column="41">argv<pos:position pos:line="17" pos:column="45"/></name><index pos:line="17" pos:column="45">[<expr><literal type="number" pos:line="17" pos:column="46">0<pos:position pos:line="17" pos:column="47"/></literal></expr>]<pos:position pos:line="17" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="51">sizeof<argument_list pos:line="17" pos:column="57">(<argument><expr><name pos:line="17" pos:column="58">pCursor<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">v<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator> <call><name pos:line="18" pos:column="9">cursor_vtab<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">pCursor<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* Flush any buffered updates before optimizing. */</comment>
    <expr_stmt><expr><name pos:line="21" pos:column="5">rc<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <call><name pos:line="21" pos:column="10">flushPendingTerms<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">v<pos:position pos:line="21" pos:column="29"/></name></expr></argument>)<pos:position pos:line="21" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">( <expr><name pos:line="22" pos:column="9">rc<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">!=<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">SQLITE_OK<pos:position pos:line="22" pos:column="22"/></name></expr> )<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24"> <block type="pseudo"><goto pos:line="22" pos:column="25">goto <name pos:line="22" pos:column="30">err<pos:position pos:line="22" pos:column="33"/></name>;<pos:position pos:line="22" pos:column="34"/></goto></block></then></if>

    <expr_stmt><expr><name pos:line="24" pos:column="5">rc<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator> <call><name pos:line="24" pos:column="10">segdir_count<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">v<pos:position pos:line="24" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="26">&amp;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="27">nReaders<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="37">&amp;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="38">iMaxLevel<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">( <expr><name pos:line="25" pos:column="9">rc<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">!=<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">SQLITE_OK<pos:position pos:line="25" pos:column="22"/></name></expr> )<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24"> <block type="pseudo"><goto pos:line="25" pos:column="25">goto <name pos:line="25" pos:column="30">err<pos:position pos:line="25" pos:column="33"/></name>;<pos:position pos:line="25" pos:column="34"/></goto></block></then></if>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">( <expr><name pos:line="26" pos:column="9">nReaders<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">==<pos:position pos:line="26" pos:column="19"/></operator><literal type="number" pos:line="26" pos:column="19">0<pos:position pos:line="26" pos:column="20"/></literal> <operator pos:line="26" pos:column="21">||<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">nReaders<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">==<pos:position pos:line="26" pos:column="34"/></operator><literal type="number" pos:line="26" pos:column="34">1<pos:position pos:line="26" pos:column="35"/></literal></expr> )<pos:position pos:line="26" pos:column="37"/></condition><then><block pos:line="26" pos:column="37">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">sqlite3_result_text<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">pContext<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="37">"Index already optimal"<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="62">-<pos:position pos:line="27" pos:column="63"/></operator><literal type="number" pos:line="27" pos:column="63">1<pos:position pos:line="27" pos:column="64"/></literal></expr></argument>,
                          <argument><expr><name pos:line="28" pos:column="27">SQLITE_STATIC<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
      <return pos:line="29" pos:column="7">return;<pos:position pos:line="29" pos:column="14"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="32" pos:column="5">rc<pos:position pos:line="32" pos:column="7"/></name> <operator pos:line="32" pos:column="8">=<pos:position pos:line="32" pos:column="9"/></operator> <call><name pos:line="32" pos:column="10">sql_get_statement<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">v<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">SEGDIR_SELECT_ALL_STMT<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="55">&amp;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="56">s<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
    <if pos:line="33" pos:column="5">if<condition pos:line="33" pos:column="7">( <expr><name pos:line="33" pos:column="9">rc<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">!=<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">SQLITE_OK<pos:position pos:line="33" pos:column="22"/></name></expr> )<pos:position pos:line="33" pos:column="24"/></condition><then pos:line="33" pos:column="24"> <block type="pseudo"><goto pos:line="33" pos:column="25">goto <name pos:line="33" pos:column="30">err<pos:position pos:line="33" pos:column="33"/></name>;<pos:position pos:line="33" pos:column="34"/></goto></block></then></if>

    <expr_stmt><expr><name pos:line="35" pos:column="5">readers<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">sqlite3_malloc<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">nReaders<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">*<pos:position pos:line="35" pos:column="39"/></operator><sizeof pos:line="35" pos:column="39">sizeof<argument_list pos:line="35" pos:column="45">(<argument><expr><name><name pos:line="35" pos:column="46">readers<pos:position pos:line="35" pos:column="53"/></name><index pos:line="35" pos:column="53">[<expr><literal type="number" pos:line="35" pos:column="54">0<pos:position pos:line="35" pos:column="55"/></literal></expr>]<pos:position pos:line="35" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="59"/></expr_stmt>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">( <expr><name pos:line="36" pos:column="9">readers<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">==<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">NULL<pos:position pos:line="36" pos:column="22"/></name></expr> )<pos:position pos:line="36" pos:column="24"/></condition><then pos:line="36" pos:column="24"> <block type="pseudo"><goto pos:line="36" pos:column="25">goto <name pos:line="36" pos:column="30">err<pos:position pos:line="36" pos:column="33"/></name>;<pos:position pos:line="36" pos:column="34"/></goto></block></then></if>

    <comment type="block" pos:line="38" pos:column="5">/* Note that there will already be a segment at this position
    ** until we call segdir_delete() on iMaxLevel.
    */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">leafWriterInit<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><name pos:line="41" pos:column="20">iMaxLevel<pos:position pos:line="41" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="31">0<pos:position pos:line="41" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="34">&amp;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="35">writer<pos:position pos:line="41" pos:column="41"/></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name pos:line="43" pos:column="5">i<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator> <literal type="number" pos:line="43" pos:column="9">0<pos:position pos:line="43" pos:column="10"/></literal></expr>;<pos:position pos:line="43" pos:column="11"/></expr_stmt>
    <while pos:line="44" pos:column="5">while<condition pos:line="44" pos:column="10">( <expr><operator pos:line="44" pos:column="12">(<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="13">rc<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">sqlite3_step<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">s<pos:position pos:line="44" pos:column="32"/></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call><operator pos:line="44" pos:column="33">)<pos:position pos:line="44" pos:column="34"/></operator><operator pos:line="44" pos:column="34">==<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">SQLITE_ROW<pos:position pos:line="44" pos:column="46"/></name></expr> )<pos:position pos:line="44" pos:column="48"/></condition><block pos:line="44" pos:column="48">{
      <decl_stmt><decl><type><name pos:line="45" pos:column="7">sqlite_int64<pos:position pos:line="45" pos:column="19"/></name></type> <name pos:line="45" pos:column="20">iStart<pos:position pos:line="45" pos:column="26"/></name> <init pos:line="45" pos:column="27">= <expr><call><name pos:line="45" pos:column="29">sqlite3_column_int64<pos:position pos:line="45" pos:column="49"/></name><argument_list pos:line="45" pos:column="49">(<argument><expr><name pos:line="45" pos:column="50">s<pos:position pos:line="45" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="53">0<pos:position pos:line="45" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="56"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="46" pos:column="7">sqlite_int64<pos:position pos:line="46" pos:column="19"/></name></type> <name pos:line="46" pos:column="20">iEnd<pos:position pos:line="46" pos:column="24"/></name> <init pos:line="46" pos:column="25">= <expr><call><name pos:line="46" pos:column="27">sqlite3_column_int64<pos:position pos:line="46" pos:column="47"/></name><argument_list pos:line="46" pos:column="47">(<argument><expr><name pos:line="46" pos:column="48">s<pos:position pos:line="46" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="51">1<pos:position pos:line="46" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="54"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="47" pos:column="7">const<pos:position pos:line="47" pos:column="12"/></specifier> <name pos:line="47" pos:column="13">char<pos:position pos:line="47" pos:column="17"/></name> <modifier pos:line="47" pos:column="18">*<pos:position pos:line="47" pos:column="19"/></modifier></type><name pos:line="47" pos:column="19">pRootData<pos:position pos:line="47" pos:column="28"/></name> <init pos:line="47" pos:column="29">= <expr><call><name pos:line="47" pos:column="31">sqlite3_column_blob<pos:position pos:line="47" pos:column="50"/></name><argument_list pos:line="47" pos:column="50">(<argument><expr><name pos:line="47" pos:column="51">s<pos:position pos:line="47" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="54">2<pos:position pos:line="47" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="57"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="48" pos:column="7">int<pos:position pos:line="48" pos:column="10"/></name></type> <name pos:line="48" pos:column="11">nRootData<pos:position pos:line="48" pos:column="20"/></name> <init pos:line="48" pos:column="21">= <expr><call><name pos:line="48" pos:column="23">sqlite3_column_bytes<pos:position pos:line="48" pos:column="43"/></name><argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">s<pos:position pos:line="48" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="47">2<pos:position pos:line="48" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="48" pos:column="50"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="50" pos:column="7">assert<pos:position pos:line="50" pos:column="13"/></name><argument_list pos:line="50" pos:column="13">( <argument><expr><name pos:line="50" pos:column="15">i<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">&lt;<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="17">nReaders<pos:position pos:line="50" pos:column="25"/></name></expr></argument> )<pos:position pos:line="50" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">rc<pos:position pos:line="51" pos:column="9"/></name> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <call><name pos:line="51" pos:column="12">leavesReaderInit<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">v<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="32">-<pos:position pos:line="51" pos:column="33"/></operator><literal type="number" pos:line="51" pos:column="33">1<pos:position pos:line="51" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="36">iStart<pos:position pos:line="51" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="44">iEnd<pos:position pos:line="51" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="50">pRootData<pos:position pos:line="51" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="61">nRootData<pos:position pos:line="51" pos:column="70"/></name></expr></argument>,
                            <argument><expr><operator pos:line="52" pos:column="29">&amp;<pos:position pos:line="52" pos:column="34"/></operator><name><name pos:line="52" pos:column="30">readers<pos:position pos:line="52" pos:column="37"/></name><index pos:line="52" pos:column="37">[<expr><name pos:line="52" pos:column="38">i<pos:position pos:line="52" pos:column="39"/></name></expr>]<pos:position pos:line="52" pos:column="40"/></index></name><operator pos:line="52" pos:column="40">.<pos:position pos:line="52" pos:column="41"/></operator><name pos:line="52" pos:column="41">reader<pos:position pos:line="52" pos:column="47"/></name></expr></argument>)<pos:position pos:line="52" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="49"/></expr_stmt>
      <if pos:line="53" pos:column="7">if<condition pos:line="53" pos:column="9">( <expr><name pos:line="53" pos:column="11">rc<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">!=<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">SQLITE_OK<pos:position pos:line="53" pos:column="24"/></name></expr> )<pos:position pos:line="53" pos:column="26"/></condition><then pos:line="53" pos:column="26"> <block type="pseudo"><break pos:line="53" pos:column="27">break;<pos:position pos:line="53" pos:column="33"/></break></block></then></if>

      <expr_stmt><expr><name><name pos:line="55" pos:column="7">readers<pos:position pos:line="55" pos:column="14"/></name><index pos:line="55" pos:column="14">[<expr><name pos:line="55" pos:column="15">i<pos:position pos:line="55" pos:column="16"/></name></expr>]<pos:position pos:line="55" pos:column="17"/></index></name><operator pos:line="55" pos:column="17">.<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="18">segment<pos:position pos:line="55" pos:column="25"/></name> <operator pos:line="55" pos:column="26">=<pos:position pos:line="55" pos:column="27"/></operator> <name pos:line="55" pos:column="28">i<pos:position pos:line="55" pos:column="29"/></name></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="56" pos:column="7">i<pos:position pos:line="56" pos:column="8"/></name><operator pos:line="56" pos:column="8">++<pos:position pos:line="56" pos:column="10"/></operator></expr>;<pos:position pos:line="56" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></while>

    <comment type="block" pos:line="59" pos:column="5">/* If we managed to successfully read them all, optimize them. */</comment>
    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">( <expr><name pos:line="60" pos:column="9">rc<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">==<pos:position pos:line="60" pos:column="13"/></operator><name pos:line="60" pos:column="13">SQLITE_DONE<pos:position pos:line="60" pos:column="24"/></name></expr> )<pos:position pos:line="60" pos:column="26"/></condition><then><block pos:line="60" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">assert<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">( <argument><expr><name pos:line="61" pos:column="15">i<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">==<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="18">nReaders<pos:position pos:line="61" pos:column="26"/></name></expr></argument> )<pos:position pos:line="61" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="62" pos:column="7">rc<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">=<pos:position pos:line="62" pos:column="11"/></operator> <call><name pos:line="62" pos:column="12">optimizeInternal<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name pos:line="62" pos:column="29">v<pos:position pos:line="62" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="32">readers<pos:position pos:line="62" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="41">nReaders<pos:position pos:line="62" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="51">&amp;<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="52">writer<pos:position pos:line="62" pos:column="58"/></name></expr></argument>)<pos:position pos:line="62" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <while pos:line="65" pos:column="5">while<condition pos:line="65" pos:column="10">( <expr><name pos:line="65" pos:column="12">i<pos:position pos:line="65" pos:column="13"/></name><operator pos:line="65" pos:column="13">--<pos:position pos:line="65" pos:column="15"/></operator> <operator pos:line="65" pos:column="16">&gt;<pos:position pos:line="65" pos:column="20"/></operator> <literal type="number" pos:line="65" pos:column="18">0<pos:position pos:line="65" pos:column="19"/></literal></expr> )<pos:position pos:line="65" pos:column="21"/></condition><block pos:line="65" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">leavesReaderDestroy<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><operator pos:line="66" pos:column="27">&amp;<pos:position pos:line="66" pos:column="32"/></operator><name><name pos:line="66" pos:column="28">readers<pos:position pos:line="66" pos:column="35"/></name><index pos:line="66" pos:column="35">[<expr><name pos:line="66" pos:column="36">i<pos:position pos:line="66" pos:column="37"/></name></expr>]<pos:position pos:line="66" pos:column="38"/></index></name><operator pos:line="66" pos:column="38">.<pos:position pos:line="66" pos:column="39"/></operator><name pos:line="66" pos:column="39">reader<pos:position pos:line="66" pos:column="45"/></name></expr></argument>)<pos:position pos:line="66" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">sqlite3_free<pos:position pos:line="68" pos:column="17"/></name><argument_list pos:line="68" pos:column="17">(<argument><expr><name pos:line="68" pos:column="18">readers<pos:position pos:line="68" pos:column="25"/></name></expr></argument>)<pos:position pos:line="68" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="70" pos:column="5">/* If we've successfully gotten to here, delete the old segments
    ** and flush the interior structure of the new segment.
    */</comment>
    <if pos:line="73" pos:column="5">if<condition pos:line="73" pos:column="7">( <expr><name pos:line="73" pos:column="9">rc<pos:position pos:line="73" pos:column="11"/></name><operator pos:line="73" pos:column="11">==<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="13">SQLITE_OK<pos:position pos:line="73" pos:column="22"/></name></expr> )<pos:position pos:line="73" pos:column="24"/></condition><then><block pos:line="73" pos:column="24">{
      <for pos:line="74" pos:column="7">for<control pos:line="74" pos:column="10">( <init><expr><name pos:line="74" pos:column="12">i<pos:position pos:line="74" pos:column="13"/></name><operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator><literal type="number" pos:line="74" pos:column="14">0<pos:position pos:line="74" pos:column="15"/></literal></expr>;<pos:position pos:line="74" pos:column="16"/></init> <condition><expr><name pos:line="74" pos:column="17">i<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">&lt;=<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="20">iMaxLevel<pos:position pos:line="74" pos:column="29"/></name></expr>;<pos:position pos:line="74" pos:column="30"/></condition> <incr><expr><name pos:line="74" pos:column="31">i<pos:position pos:line="74" pos:column="32"/></name><operator pos:line="74" pos:column="32">++<pos:position pos:line="74" pos:column="34"/></operator></expr></incr> )<pos:position pos:line="74" pos:column="36"/></control><block pos:line="74" pos:column="36">{
        <expr_stmt><expr><name pos:line="75" pos:column="9">rc<pos:position pos:line="75" pos:column="11"/></name> <operator pos:line="75" pos:column="12">=<pos:position pos:line="75" pos:column="13"/></operator> <call><name pos:line="75" pos:column="14">segdir_delete<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name pos:line="75" pos:column="28">v<pos:position pos:line="75" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="31">i<pos:position pos:line="75" pos:column="32"/></name></expr></argument>)<pos:position pos:line="75" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="34"/></expr_stmt>
        <if pos:line="76" pos:column="9">if<condition pos:line="76" pos:column="11">( <expr><name pos:line="76" pos:column="13">rc<pos:position pos:line="76" pos:column="15"/></name><operator pos:line="76" pos:column="15">!=<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="17">SQLITE_OK<pos:position pos:line="76" pos:column="26"/></name></expr> )<pos:position pos:line="76" pos:column="28"/></condition><then pos:line="76" pos:column="28"> <block type="pseudo"><break pos:line="76" pos:column="29">break;<pos:position pos:line="76" pos:column="35"/></break></block></then></if>
      }<pos:position pos:line="77" pos:column="8"/></block></for>

      <if pos:line="79" pos:column="7">if<condition pos:line="79" pos:column="9">( <expr><name pos:line="79" pos:column="11">rc<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">==<pos:position pos:line="79" pos:column="15"/></operator><name pos:line="79" pos:column="15">SQLITE_OK<pos:position pos:line="79" pos:column="24"/></name></expr> )<pos:position pos:line="79" pos:column="26"/></condition><then pos:line="79" pos:column="26"> <block type="pseudo"><expr_stmt><expr><name pos:line="79" pos:column="27">rc<pos:position pos:line="79" pos:column="29"/></name> <operator pos:line="79" pos:column="30">=<pos:position pos:line="79" pos:column="31"/></operator> <call><name pos:line="79" pos:column="32">leafWriterFinalize<pos:position pos:line="79" pos:column="50"/></name><argument_list pos:line="79" pos:column="50">(<argument><expr><name pos:line="79" pos:column="51">v<pos:position pos:line="79" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="54">&amp;<pos:position pos:line="79" pos:column="59"/></operator><name pos:line="79" pos:column="55">writer<pos:position pos:line="79" pos:column="61"/></name></expr></argument>)<pos:position pos:line="79" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="63"/></expr_stmt></block></then></if>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="82" pos:column="5">leafWriterDestroy<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">(<argument><expr><operator pos:line="82" pos:column="23">&amp;<pos:position pos:line="82" pos:column="28"/></operator><name pos:line="82" pos:column="24">writer<pos:position pos:line="82" pos:column="30"/></name></expr></argument>)<pos:position pos:line="82" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="32"/></expr_stmt>

    <if pos:line="84" pos:column="5">if<condition pos:line="84" pos:column="7">( <expr><name pos:line="84" pos:column="9">rc<pos:position pos:line="84" pos:column="11"/></name><operator pos:line="84" pos:column="11">!=<pos:position pos:line="84" pos:column="13"/></operator><name pos:line="84" pos:column="13">SQLITE_OK<pos:position pos:line="84" pos:column="22"/></name></expr> )<pos:position pos:line="84" pos:column="24"/></condition><then pos:line="84" pos:column="24"> <block type="pseudo"><goto pos:line="84" pos:column="25">goto <name pos:line="84" pos:column="30">err<pos:position pos:line="84" pos:column="33"/></name>;<pos:position pos:line="84" pos:column="34"/></goto></block></then></if>

    <expr_stmt><expr><call><name pos:line="86" pos:column="5">sqlite3_result_text<pos:position pos:line="86" pos:column="24"/></name><argument_list pos:line="86" pos:column="24">(<argument><expr><name pos:line="86" pos:column="25">pContext<pos:position pos:line="86" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="35">"Index optimized"<pos:position pos:line="86" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="86" pos:column="54">-<pos:position pos:line="86" pos:column="55"/></operator><literal type="number" pos:line="86" pos:column="55">1<pos:position pos:line="86" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="58">SQLITE_STATIC<pos:position pos:line="86" pos:column="71"/></name></expr></argument>)<pos:position pos:line="86" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="73"/></expr_stmt>
    <return pos:line="87" pos:column="5">return;<pos:position pos:line="87" pos:column="12"/></return>

    <comment type="block" pos:line="89" pos:column="5">/* TODO(shess): Error-handling needs to be improved along the
    ** lines of the dump_ functions.
    */</comment>
 <label><name pos:line="92" pos:column="2">err<pos:position pos:line="92" pos:column="5"/></name>:<pos:position pos:line="92" pos:column="6"/></label>
    <block pos:line="93" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="94" pos:column="7">char<pos:position pos:line="94" pos:column="11"/></name></type> <name><name pos:line="94" pos:column="12">buf<pos:position pos:line="94" pos:column="15"/></name><index pos:line="94" pos:column="15">[<expr><literal type="number" pos:line="94" pos:column="16">512<pos:position pos:line="94" pos:column="19"/></literal></expr>]<pos:position pos:line="94" pos:column="20"/></index></name></decl>;<pos:position pos:line="94" pos:column="21"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="95" pos:column="7">sqlite3_snprintf<pos:position pos:line="95" pos:column="23"/></name><argument_list pos:line="95" pos:column="23">(<argument><expr><sizeof pos:line="95" pos:column="24">sizeof<argument_list pos:line="95" pos:column="30">(<argument><expr><name pos:line="95" pos:column="31">buf<pos:position pos:line="95" pos:column="34"/></name></expr></argument>)<pos:position pos:line="95" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="95" pos:column="37">buf<pos:position pos:line="95" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="42">"Error in optimize: %s"<pos:position pos:line="95" pos:column="65"/></literal></expr></argument>,
                       <argument><expr><call><name pos:line="96" pos:column="24">sqlite3_errmsg<pos:position pos:line="96" pos:column="38"/></name><argument_list pos:line="96" pos:column="38">(<argument><expr><call><name pos:line="96" pos:column="39">sqlite3_context_db_handle<pos:position pos:line="96" pos:column="64"/></name><argument_list pos:line="96" pos:column="64">(<argument><expr><name pos:line="96" pos:column="65">pContext<pos:position pos:line="96" pos:column="73"/></name></expr></argument>)<pos:position pos:line="96" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">sqlite3_result_error<pos:position pos:line="97" pos:column="27"/></name><argument_list pos:line="97" pos:column="27">(<argument><expr><name pos:line="97" pos:column="28">pContext<pos:position pos:line="97" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="38">buf<pos:position pos:line="97" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="43">-<pos:position pos:line="97" pos:column="44"/></operator><literal type="number" pos:line="97" pos:column="44">1<pos:position pos:line="97" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block>
  }<pos:position pos:line="99" pos:column="4"/></block></else></if>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fts3ContentColumns<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(
  <parameter><decl><type><name pos:line="2" pos:column="3">sqlite3<pos:position pos:line="2" pos:column="10"/></name> <modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier></type><name pos:line="2" pos:column="12">db<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>,                    <comment type="block" pos:line="2" pos:column="35">/* Database handle */</comment>
  <parameter><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">zDb<pos:position pos:line="3" pos:column="18"/></name></decl></parameter>,                <comment type="block" pos:line="3" pos:column="35">/* Name of db (i.e. "main", "temp" etc.) */</comment>
  <parameter><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">zTbl<pos:position pos:line="4" pos:column="19"/></name></decl></parameter>,               <comment type="block" pos:line="4" pos:column="35">/* Name of content table */</comment>
  <parameter><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier><modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier><modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">pazCol<pos:position pos:line="5" pos:column="23"/></name></decl></parameter>,           <comment type="block" pos:line="5" pos:column="35">/* OUT: Malloc'd array of column names */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name> <modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type><name pos:line="6" pos:column="8">pnCol<pos:position pos:line="6" pos:column="13"/></name></decl></parameter>,                     <comment type="block" pos:line="6" pos:column="35">/* OUT: Size of array *pazCol */</comment>
  <parameter><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name> <modifier pos:line="7" pos:column="7">*<pos:position pos:line="7" pos:column="8"/></modifier></type><name pos:line="7" pos:column="8">pnStr<pos:position pos:line="7" pos:column="13"/></name></decl></parameter>,                     <comment type="block" pos:line="7" pos:column="35">/* OUT: Bytes of string content */</comment>
  <parameter><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier><modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">pzErr<pos:position pos:line="8" pos:column="15"/></name></decl></parameter>                    <comment type="block" pos:line="8" pos:column="35">/* OUT: error message */</comment>
)<pos:position pos:line="9" pos:column="2"/></parameter_list><block pos:line="9" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">rc<pos:position pos:line="10" pos:column="9"/></name> <init pos:line="10" pos:column="10">= <expr><name pos:line="10" pos:column="12">SQLITE_OK<pos:position pos:line="10" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>             <comment type="block" pos:line="10" pos:column="35">/* Return code */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">zSql<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>                     <comment type="block" pos:line="11" pos:column="35">/* "SELECT *" statement on zTbl */</comment>  
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">sqlite3_stmt<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">pStmt<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>        <comment type="block" pos:line="12" pos:column="35">/* Compiled version of zSql */</comment>

  <expr_stmt><expr><name pos:line="14" pos:column="3">zSql<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">sqlite3_mprintf<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><literal type="string" pos:line="14" pos:column="26">"SELECT * FROM %Q.%Q"<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="49">zDb<pos:position pos:line="14" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="54">zTbl<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">( <expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">zSql<pos:position pos:line="15" pos:column="12"/></name></expr> )<pos:position pos:line="15" pos:column="14"/></condition><then><block pos:line="15" pos:column="14">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">rc<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <name pos:line="16" pos:column="10">SQLITE_NOMEM<pos:position pos:line="16" pos:column="22"/></name></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then><else pos:line="17" pos:column="4">else<block pos:line="17" pos:column="8">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">rc<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">sqlite3_prepare<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">db<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="30">zSql<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="36">-<pos:position pos:line="18" pos:column="37"/></operator><literal type="number" pos:line="18" pos:column="37">1<pos:position pos:line="18" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="40">&amp;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="41">pStmt<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="48">0<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">( <expr><name pos:line="19" pos:column="9">rc<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">!=<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">SQLITE_OK<pos:position pos:line="19" pos:column="22"/></name></expr> )<pos:position pos:line="19" pos:column="24"/></condition><then><block pos:line="19" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">sqlite3Fts3ErrMsg<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">pzErr<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="32">"%s"<pos:position pos:line="20" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="38">sqlite3_errmsg<pos:position pos:line="20" pos:column="52"/></name><argument_list pos:line="20" pos:column="52">(<argument><expr><name pos:line="20" pos:column="53">db<pos:position pos:line="20" pos:column="55"/></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
  }<pos:position pos:line="22" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">sqlite3_free<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">zSql<pos:position pos:line="23" pos:column="20"/></name></expr></argument>)<pos:position pos:line="23" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>

  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">( <expr><name pos:line="25" pos:column="7">rc<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">==<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">SQLITE_OK<pos:position pos:line="25" pos:column="20"/></name></expr> )<pos:position pos:line="25" pos:column="22"/></condition><then><block pos:line="25" pos:column="22">{
    <decl_stmt><decl><type><specifier pos:line="26" pos:column="5">const<pos:position pos:line="26" pos:column="10"/></specifier> <name pos:line="26" pos:column="11">char<pos:position pos:line="26" pos:column="15"/></name> <modifier pos:line="26" pos:column="16">*<pos:position pos:line="26" pos:column="17"/></modifier><modifier pos:line="26" pos:column="17">*<pos:position pos:line="26" pos:column="18"/></modifier></type><name pos:line="26" pos:column="18">azCol<pos:position pos:line="26" pos:column="23"/></name></decl>;<pos:position pos:line="26" pos:column="24"/></decl_stmt>           <comment type="block" pos:line="26" pos:column="35">/* Output array */</comment>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">nStr<pos:position pos:line="27" pos:column="13"/></name> <init pos:line="27" pos:column="14">= <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="18"/></decl_stmt>                 <comment type="block" pos:line="27" pos:column="35">/* Size of all column names (incl. 0x00) */</comment>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">int<pos:position pos:line="28" pos:column="8"/></name></type> <name pos:line="28" pos:column="9">nCol<pos:position pos:line="28" pos:column="13"/></name></decl>;<pos:position pos:line="28" pos:column="14"/></decl_stmt>                     <comment type="block" pos:line="28" pos:column="35">/* Number of table columns */</comment>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">int<pos:position pos:line="29" pos:column="8"/></name></type> <name pos:line="29" pos:column="9">i<pos:position pos:line="29" pos:column="10"/></name></decl>;<pos:position pos:line="29" pos:column="11"/></decl_stmt>                        <comment type="block" pos:line="29" pos:column="35">/* Used to iterate through columns */</comment>

    <comment type="block" pos:line="31" pos:column="5">/* Loop through the returned columns. Set nStr to the number of bytes of
    ** space required to store a copy of each column name, including the
    ** nul-terminator byte.  */</comment>
    <expr_stmt><expr><name pos:line="34" pos:column="5">nCol<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <call><name pos:line="34" pos:column="12">sqlite3_column_count<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">pStmt<pos:position pos:line="34" pos:column="38"/></name></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
    <for pos:line="35" pos:column="5">for<control pos:line="35" pos:column="8">(<init><expr><name pos:line="35" pos:column="9">i<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator><literal type="number" pos:line="35" pos:column="11">0<pos:position pos:line="35" pos:column="12"/></literal></expr>;<pos:position pos:line="35" pos:column="13"/></init> <condition><expr><name pos:line="35" pos:column="14">i<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">&lt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">nCol<pos:position pos:line="35" pos:column="20"/></name></expr>;<pos:position pos:line="35" pos:column="21"/></condition> <incr><expr><name pos:line="35" pos:column="22">i<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">++<pos:position pos:line="35" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="26"/></control><block pos:line="35" pos:column="26">{
      <decl_stmt><decl><type><specifier pos:line="36" pos:column="7">const<pos:position pos:line="36" pos:column="12"/></specifier> <name pos:line="36" pos:column="13">char<pos:position pos:line="36" pos:column="17"/></name> <modifier pos:line="36" pos:column="18">*<pos:position pos:line="36" pos:column="19"/></modifier></type><name pos:line="36" pos:column="19">zCol<pos:position pos:line="36" pos:column="23"/></name> <init pos:line="36" pos:column="24">= <expr><call><name pos:line="36" pos:column="26">sqlite3_column_name<pos:position pos:line="36" pos:column="45"/></name><argument_list pos:line="36" pos:column="45">(<argument><expr><name pos:line="36" pos:column="46">pStmt<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">i<pos:position pos:line="36" pos:column="54"/></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="56"/></decl_stmt>
      <expr_stmt><expr><name pos:line="37" pos:column="7">nStr<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">+=<pos:position pos:line="37" pos:column="14"/></operator> <operator pos:line="37" pos:column="15">(<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="16">int<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">)<pos:position pos:line="37" pos:column="20"/></operator><call><name pos:line="37" pos:column="20">strlen<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">zCol<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call> <operator pos:line="37" pos:column="33">+<pos:position pos:line="37" pos:column="34"/></operator> <literal type="number" pos:line="37" pos:column="35">1<pos:position pos:line="37" pos:column="36"/></literal></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></for>

    <comment type="block" pos:line="40" pos:column="5">/* Allocate and populate the array to return. */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">azCol<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">=<pos:position pos:line="41" pos:column="12"/></operator> <operator pos:line="41" pos:column="13">(<pos:position pos:line="41" pos:column="14"/></operator><specifier pos:line="41" pos:column="14">const<pos:position pos:line="41" pos:column="19"/></specifier> <name pos:line="41" pos:column="20">char<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">*<pos:position pos:line="41" pos:column="26"/></operator><operator pos:line="41" pos:column="26">*<pos:position pos:line="41" pos:column="27"/></operator><operator pos:line="41" pos:column="27">)<pos:position pos:line="41" pos:column="28"/></operator><call><name pos:line="41" pos:column="28">sqlite3_malloc<pos:position pos:line="41" pos:column="42"/></name><argument_list pos:line="41" pos:column="42">(<argument><expr><sizeof pos:line="41" pos:column="43">sizeof<argument_list pos:line="41" pos:column="49">(<argument><expr><name pos:line="41" pos:column="50">char<pos:position pos:line="41" pos:column="54"/></name> <operator pos:line="41" pos:column="55">*<pos:position pos:line="41" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></sizeof> <operator pos:line="41" pos:column="58">*<pos:position pos:line="41" pos:column="59"/></operator> <name pos:line="41" pos:column="60">nCol<pos:position pos:line="41" pos:column="64"/></name> <operator pos:line="41" pos:column="65">+<pos:position pos:line="41" pos:column="66"/></operator> <name pos:line="41" pos:column="67">nStr<pos:position pos:line="41" pos:column="71"/></name></expr></argument>)<pos:position pos:line="41" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="73"/></expr_stmt>
    <if pos:line="42" pos:column="5">if<condition pos:line="42" pos:column="7">( <expr><name pos:line="42" pos:column="9">azCol<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">==<pos:position pos:line="42" pos:column="16"/></operator><literal type="number" pos:line="42" pos:column="16">0<pos:position pos:line="42" pos:column="17"/></literal></expr> )<pos:position pos:line="42" pos:column="19"/></condition><then><block pos:line="42" pos:column="19">{
      <expr_stmt><expr><name pos:line="43" pos:column="7">rc<pos:position pos:line="43" pos:column="9"/></name> <operator pos:line="43" pos:column="10">=<pos:position pos:line="43" pos:column="11"/></operator> <name pos:line="43" pos:column="12">SQLITE_NOMEM<pos:position pos:line="43" pos:column="24"/></name></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then><else pos:line="44" pos:column="6">else<block pos:line="44" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="45" pos:column="7">char<pos:position pos:line="45" pos:column="11"/></name> <modifier pos:line="45" pos:column="12">*<pos:position pos:line="45" pos:column="13"/></modifier></type><name pos:line="45" pos:column="13">p<pos:position pos:line="45" pos:column="14"/></name> <init pos:line="45" pos:column="15">= <expr><operator pos:line="45" pos:column="17">(<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">char<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">*<pos:position pos:line="45" pos:column="24"/></operator><operator pos:line="45" pos:column="24">)<pos:position pos:line="45" pos:column="25"/></operator><operator pos:line="45" pos:column="25">&amp;<pos:position pos:line="45" pos:column="30"/></operator><name><name pos:line="45" pos:column="26">azCol<pos:position pos:line="45" pos:column="31"/></name><index pos:line="45" pos:column="31">[<expr><name pos:line="45" pos:column="32">nCol<pos:position pos:line="45" pos:column="36"/></name></expr>]<pos:position pos:line="45" pos:column="37"/></index></name></expr></init></decl>;<pos:position pos:line="45" pos:column="38"/></decl_stmt>
      <for pos:line="46" pos:column="7">for<control pos:line="46" pos:column="10">(<init><expr><name pos:line="46" pos:column="11">i<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator><literal type="number" pos:line="46" pos:column="13">0<pos:position pos:line="46" pos:column="14"/></literal></expr>;<pos:position pos:line="46" pos:column="15"/></init> <condition><expr><name pos:line="46" pos:column="16">i<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">&lt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">nCol<pos:position pos:line="46" pos:column="22"/></name></expr>;<pos:position pos:line="46" pos:column="23"/></condition> <incr><expr><name pos:line="46" pos:column="24">i<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">++<pos:position pos:line="46" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="46" pos:column="28"/></control><block pos:line="46" pos:column="28">{
        <decl_stmt><decl><type><specifier pos:line="47" pos:column="9">const<pos:position pos:line="47" pos:column="14"/></specifier> <name pos:line="47" pos:column="15">char<pos:position pos:line="47" pos:column="19"/></name> <modifier pos:line="47" pos:column="20">*<pos:position pos:line="47" pos:column="21"/></modifier></type><name pos:line="47" pos:column="21">zCol<pos:position pos:line="47" pos:column="25"/></name> <init pos:line="47" pos:column="26">= <expr><call><name pos:line="47" pos:column="28">sqlite3_column_name<pos:position pos:line="47" pos:column="47"/></name><argument_list pos:line="47" pos:column="47">(<argument><expr><name pos:line="47" pos:column="48">pStmt<pos:position pos:line="47" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="55">i<pos:position pos:line="47" pos:column="56"/></name></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="58"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="48" pos:column="9">int<pos:position pos:line="48" pos:column="12"/></name></type> <name pos:line="48" pos:column="13">n<pos:position pos:line="48" pos:column="14"/></name> <init pos:line="48" pos:column="15">= <expr><operator pos:line="48" pos:column="17">(<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">int<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">)<pos:position pos:line="48" pos:column="22"/></operator><call><name pos:line="48" pos:column="22">strlen<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">zCol<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call><operator pos:line="48" pos:column="34">+<pos:position pos:line="48" pos:column="35"/></operator><literal type="number" pos:line="48" pos:column="35">1<pos:position pos:line="48" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="48" pos:column="37"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">memcpy<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">p<pos:position pos:line="49" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="19">zCol<pos:position pos:line="49" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="25">n<pos:position pos:line="49" pos:column="26"/></name></expr></argument>)<pos:position pos:line="49" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">azCol<pos:position pos:line="50" pos:column="14"/></name><index pos:line="50" pos:column="14">[<expr><name pos:line="50" pos:column="15">i<pos:position pos:line="50" pos:column="16"/></name></expr>]<pos:position pos:line="50" pos:column="17"/></index></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <name pos:line="50" pos:column="20">p<pos:position pos:line="50" pos:column="21"/></name></expr>;<pos:position pos:line="50" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">p<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">+=<pos:position pos:line="51" pos:column="13"/></operator> <name pos:line="51" pos:column="14">n<pos:position pos:line="51" pos:column="15"/></name></expr>;<pos:position pos:line="51" pos:column="16"/></expr_stmt>
      }<pos:position pos:line="52" pos:column="8"/></block></for>
    }<pos:position pos:line="53" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">sqlite3_finalize<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">pStmt<pos:position pos:line="54" pos:column="27"/></name></expr></argument>)<pos:position pos:line="54" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="56" pos:column="5">/* Set the output variables. */</comment>
    <expr_stmt><expr><operator pos:line="57" pos:column="5">*<pos:position pos:line="57" pos:column="6"/></operator><name pos:line="57" pos:column="6">pnCol<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <name pos:line="57" pos:column="14">nCol<pos:position pos:line="57" pos:column="18"/></name></expr>;<pos:position pos:line="57" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="58" pos:column="5">*<pos:position pos:line="58" pos:column="6"/></operator><name pos:line="58" pos:column="6">pnStr<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <name pos:line="58" pos:column="14">nStr<pos:position pos:line="58" pos:column="18"/></name></expr>;<pos:position pos:line="58" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="59" pos:column="5">*<pos:position pos:line="59" pos:column="6"/></operator><name pos:line="59" pos:column="6">pazCol<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">=<pos:position pos:line="59" pos:column="14"/></operator> <name pos:line="59" pos:column="15">azCol<pos:position pos:line="59" pos:column="20"/></name></expr>;<pos:position pos:line="59" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>

  <return pos:line="62" pos:column="3">return <expr><name pos:line="62" pos:column="10">rc<pos:position pos:line="62" pos:column="12"/></name></expr>;<pos:position pos:line="62" pos:column="13"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

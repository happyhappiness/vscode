<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_423.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">corruptSchema<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(
  <parameter><decl><type><name pos:line="2" pos:column="3">InitData<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">pData<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>,     <comment type="block" pos:line="2" pos:column="24">/* Initialization context */</comment>
  <parameter><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">zObj<pos:position pos:line="3" pos:column="19"/></name></decl></parameter>,    <comment type="block" pos:line="3" pos:column="24">/* Object being parsed at the point of error */</comment>
  <parameter><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">zExtra<pos:position pos:line="4" pos:column="21"/></name></decl></parameter>   <comment type="block" pos:line="4" pos:column="24">/* Error information */</comment>
)<pos:position pos:line="5" pos:column="2"/></parameter_list><block pos:line="5" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">sqlite3<pos:position pos:line="6" pos:column="10"/></name> <modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier></type><name pos:line="6" pos:column="12">db<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name><name pos:line="6" pos:column="17">pData<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">db<pos:position pos:line="6" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">( <expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><name><name pos:line="7" pos:column="8">db<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">mallocFailed<pos:position pos:line="7" pos:column="24"/></name></name> <operator pos:line="7" pos:column="25">&amp;&amp;<pos:position pos:line="7" pos:column="35"/></operator> <operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><name><name pos:line="7" pos:column="29">db<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">flags<pos:position pos:line="7" pos:column="38"/></name></name> <operator pos:line="7" pos:column="39">&amp;<pos:position pos:line="7" pos:column="44"/></operator> <name pos:line="7" pos:column="41">SQLITE_WriteSchema<pos:position pos:line="7" pos:column="59"/></name><operator pos:line="7" pos:column="59">)<pos:position pos:line="7" pos:column="60"/></operator><operator pos:line="7" pos:column="60">==<pos:position pos:line="7" pos:column="62"/></operator><literal type="number" pos:line="7" pos:column="62">0<pos:position pos:line="7" pos:column="63"/></literal></expr> )<pos:position pos:line="7" pos:column="65"/></condition><then><block pos:line="7" pos:column="65">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">z<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>
    <if pos:line="9" pos:column="5">if<condition pos:line="9" pos:column="7">( <expr><name pos:line="9" pos:column="9">zObj<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">==<pos:position pos:line="9" pos:column="15"/></operator><literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr> )<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="19">zObj<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <literal type="string" pos:line="9" pos:column="26">"?"<pos:position pos:line="9" pos:column="29"/></literal></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">z<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">sqlite3MPrintf<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">db<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="28">"malformed database schema (%s)"<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="62">zObj<pos:position pos:line="10" pos:column="66"/></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
    <if pos:line="11" pos:column="5">if<condition pos:line="11" pos:column="7">( <expr><name pos:line="11" pos:column="9">zExtra<pos:position pos:line="11" pos:column="15"/></name></expr> )<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17"> <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="18">z<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <call><name pos:line="11" pos:column="22">sqlite3MPrintf<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">db<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="41">"%z - %s"<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">z<pos:position pos:line="11" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">zExtra<pos:position pos:line="11" pos:column="61"/></name></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="63"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">sqlite3DbFree<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">db<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></operator><name><name pos:line="12" pos:column="24">pData<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">pzErrMsg<pos:position pos:line="12" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><name><name pos:line="13" pos:column="6">pData<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">pzErrMsg<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">z<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">pData<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">rc<pos:position pos:line="15" pos:column="12"/></name></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <ternary><condition><expr><name><name pos:line="15" pos:column="15">db<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">mallocFailed<pos:position pos:line="15" pos:column="31"/></name></name></expr> ?<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <expr><name pos:line="15" pos:column="34">SQLITE_NOMEM_BKPT<pos:position pos:line="15" pos:column="51"/></name></expr> <pos:position pos:line="15" pos:column="52"/></then><else pos:line="15" pos:column="52">: <expr><name pos:line="15" pos:column="54">SQLITE_CORRUPT_BKPT<pos:position pos:line="15" pos:column="73"/></name></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="74"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

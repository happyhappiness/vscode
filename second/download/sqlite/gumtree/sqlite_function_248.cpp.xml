<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_248.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sqlite3VtabCallCreate<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">sqlite3<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">db<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">iDb<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">zTab<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier><modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">pzErr<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list><block pos:line="1" pos:column="80">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">rc<pos:position pos:line="2" pos:column="9"/></name> <init pos:line="2" pos:column="10">= <expr><name pos:line="2" pos:column="12">SQLITE_OK<pos:position pos:line="2" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">Table<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">pTab<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">Module<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">pMod<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">zMod<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">pTab<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">sqlite3FindTable<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">db<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="31">zTab<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="37">db<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">-&gt;<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="41">aDb<pos:position pos:line="7" pos:column="44"/></name><index pos:line="7" pos:column="44">[<expr><name pos:line="7" pos:column="45">iDb<pos:position pos:line="7" pos:column="48"/></name></expr>]<pos:position pos:line="7" pos:column="49"/></index></name><operator pos:line="7" pos:column="49">.<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="50">zDbSName<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">( <argument><expr><name pos:line="8" pos:column="11">pTab<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">&amp;&amp;<pos:position pos:line="8" pos:column="26"/></operator> <call><name pos:line="8" pos:column="19">IsVirtual<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">pTab<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call> <operator pos:line="8" pos:column="35">&amp;&amp;<pos:position pos:line="8" pos:column="45"/></operator> <operator pos:line="8" pos:column="38">!<pos:position pos:line="8" pos:column="39"/></operator><name><name pos:line="8" pos:column="39">pTab<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">pVTable<pos:position pos:line="8" pos:column="52"/></name></name></expr></argument> )<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="55"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Locate the required virtual table module */</comment>
  <expr_stmt><expr><name pos:line="11" pos:column="3">zMod<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <name><name pos:line="11" pos:column="10">pTab<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">azModuleArg<pos:position pos:line="11" pos:column="27"/></name><index pos:line="11" pos:column="27">[<expr><literal type="number" pos:line="11" pos:column="28">0<pos:position pos:line="11" pos:column="29"/></literal></expr>]<pos:position pos:line="11" pos:column="30"/></index></name></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">pMod<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">Module<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></operator><operator pos:line="12" pos:column="18">)<pos:position pos:line="12" pos:column="19"/></operator><call><name pos:line="12" pos:column="19">sqlite3HashFind<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><operator pos:line="12" pos:column="35">&amp;<pos:position pos:line="12" pos:column="40"/></operator><name><name pos:line="12" pos:column="36">db<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">aModule<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">zMod<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* If the module has been registered and includes a Create method, 
  ** invoke it now. If the module has not been registered, return an 
  ** error. Otherwise, do nothing.
  */</comment>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">( <expr><name pos:line="18" pos:column="7">pMod<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">==<pos:position pos:line="18" pos:column="13"/></operator><literal type="number" pos:line="18" pos:column="13">0<pos:position pos:line="18" pos:column="14"/></literal> <operator pos:line="18" pos:column="15">||<pos:position pos:line="18" pos:column="17"/></operator> <name><name pos:line="18" pos:column="18">pMod<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">pModule<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">xCreate<pos:position pos:line="18" pos:column="40"/></name></name><operator pos:line="18" pos:column="40">==<pos:position pos:line="18" pos:column="42"/></operator><literal type="number" pos:line="18" pos:column="42">0<pos:position pos:line="18" pos:column="43"/></literal> <operator pos:line="18" pos:column="44">||<pos:position pos:line="18" pos:column="46"/></operator> <name><name pos:line="18" pos:column="47">pMod<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">-&gt;<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="53">pModule<pos:position pos:line="18" pos:column="60"/></name><operator pos:line="18" pos:column="60">-&gt;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="62">xDestroy<pos:position pos:line="18" pos:column="70"/></name></name><operator pos:line="18" pos:column="70">==<pos:position pos:line="18" pos:column="72"/></operator><literal type="number" pos:line="18" pos:column="72">0<pos:position pos:line="18" pos:column="73"/></literal></expr> )<pos:position pos:line="18" pos:column="75"/></condition><then><block pos:line="18" pos:column="75">{
    <expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">pzErr<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">sqlite3MPrintf<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">db<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="33">"no such module: %s"<pos:position pos:line="19" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="55">zMod<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">rc<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <name pos:line="20" pos:column="10">SQLITE_ERROR<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then><else pos:line="21" pos:column="4">else<block pos:line="21" pos:column="8">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">rc<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <call><name pos:line="22" pos:column="10">vtabCallConstructor<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">db<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">pTab<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">pMod<pos:position pos:line="22" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="46">pMod<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">-&gt;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="52">pModule<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">-&gt;<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="61">xCreate<pos:position pos:line="22" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="70">pzErr<pos:position pos:line="22" pos:column="75"/></name></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="25" pos:column="3">/* Justification of ALWAYS():  The xConstructor method is required to
  ** create a valid sqlite3_vtab if it returns SQLITE_OK. */</comment>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">( <expr><name pos:line="27" pos:column="7">rc<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">==<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">SQLITE_OK<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">&amp;&amp;<pos:position pos:line="27" pos:column="31"/></operator> <call><name pos:line="27" pos:column="24">ALWAYS<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><call><name pos:line="27" pos:column="31">sqlite3GetVTable<pos:position pos:line="27" pos:column="47"/></name><argument_list pos:line="27" pos:column="47">(<argument><expr><name pos:line="27" pos:column="48">db<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="52">pTab<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr> )<pos:position pos:line="27" pos:column="60"/></condition><then><block pos:line="27" pos:column="60">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">rc<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <call><name pos:line="28" pos:column="10">growVTrans<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">db<pos:position pos:line="28" pos:column="23"/></name></expr></argument>)<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">( <expr><name pos:line="29" pos:column="9">rc<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">==<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">SQLITE_OK<pos:position pos:line="29" pos:column="22"/></name></expr> )<pos:position pos:line="29" pos:column="24"/></condition><then><block pos:line="29" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">addToVTrans<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><name pos:line="30" pos:column="19">db<pos:position pos:line="30" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="23">sqlite3GetVTable<pos:position pos:line="30" pos:column="39"/></name><argument_list pos:line="30" pos:column="39">(<argument><expr><name pos:line="30" pos:column="40">db<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="44">pTab<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <return pos:line="34" pos:column="3">return <expr><name pos:line="34" pos:column="10">rc<pos:position pos:line="34" pos:column="12"/></name></expr>;<pos:position pos:line="34" pos:column="13"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

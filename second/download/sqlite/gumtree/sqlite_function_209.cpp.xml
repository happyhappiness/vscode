<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_209.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">vdbeCommit<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">sqlite3<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">db<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">Vdbe<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">p<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list><block pos:line="1" pos:column="44">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">i<pos:position pos:line="2" pos:column="8"/></name></decl>;<pos:position pos:line="2" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">nTrans<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>  <comment type="block" pos:line="3" pos:column="20">/* Number of databases with an active write-transaction
                   ** that are candidates for a two-phase commit using a
                   ** master-journal */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">rc<pos:position pos:line="6" pos:column="9"/></name> <init pos:line="6" pos:column="10">= <expr><name pos:line="6" pos:column="12">SQLITE_OK<pos:position pos:line="6" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">needXcommit<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">SQLITE_OMIT_VIRTUALTABLE<pos:position pos:line="9" pos:column="32"/></name></cpp:ifdef>
  <comment type="block" pos:line="10" pos:column="3">/* With this option, sqlite3VtabSync() is defined to be simply 
  ** SQLITE_OK so p is not used. 
  */</comment>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">UNUSED_PARAMETER<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">p<pos:position pos:line="13" pos:column="21"/></name></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="16" pos:column="3">/* Before doing anything else, call the xSync() callback for any
  ** virtual module tables written in this transaction. This has to
  ** be done before determining whether a master journal file is 
  ** required, as an xSync() callback may add an attached database
  ** to the transaction.
  */</comment>
  <expr_stmt><expr><name pos:line="22" pos:column="3">rc<pos:position pos:line="22" pos:column="5"/></name> <operator pos:line="22" pos:column="6">=<pos:position pos:line="22" pos:column="7"/></operator> <call><name pos:line="22" pos:column="8">sqlite3VtabSync<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">db<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="28">p<pos:position pos:line="22" pos:column="29"/></name></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>

  <comment type="block" pos:line="24" pos:column="3">/* This loop determines (a) if the commit hook should be invoked and
  ** (b) how many database files have open write transactions, not 
  ** including the temp database. (b) is important because if more than 
  ** one database file has an open write transaction, a master journal
  ** file is required for an atomic commit.
  */</comment> 
  <for pos:line="30" pos:column="3">for<control pos:line="30" pos:column="6">(<init><expr><name pos:line="30" pos:column="7">i<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">=<pos:position pos:line="30" pos:column="9"/></operator><literal type="number" pos:line="30" pos:column="9">0<pos:position pos:line="30" pos:column="10"/></literal></expr>;<pos:position pos:line="30" pos:column="11"/></init> <condition><expr><name pos:line="30" pos:column="12">rc<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">==<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">SQLITE_OK<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">&amp;&amp;<pos:position pos:line="30" pos:column="36"/></operator> <name pos:line="30" pos:column="29">i<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">&lt;<pos:position pos:line="30" pos:column="34"/></operator><name><name pos:line="30" pos:column="31">db<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">nDb<pos:position pos:line="30" pos:column="38"/></name></name></expr>;<pos:position pos:line="30" pos:column="39"/></condition> <incr><expr><name pos:line="30" pos:column="40">i<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">++<pos:position pos:line="30" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="44"/></control><block pos:line="30" pos:column="44">{ 
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">Btree<pos:position pos:line="31" pos:column="10"/></name> <modifier pos:line="31" pos:column="11">*<pos:position pos:line="31" pos:column="12"/></modifier></type><name pos:line="31" pos:column="12">pBt<pos:position pos:line="31" pos:column="15"/></name> <init pos:line="31" pos:column="16">= <expr><name><name pos:line="31" pos:column="18">db<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">aDb<pos:position pos:line="31" pos:column="25"/></name><index pos:line="31" pos:column="25">[<expr><name pos:line="31" pos:column="26">i<pos:position pos:line="31" pos:column="27"/></name></expr>]<pos:position pos:line="31" pos:column="28"/></index></name><operator pos:line="31" pos:column="28">.<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">pBt<pos:position pos:line="31" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="33"/></decl_stmt>
    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">( <expr><call><name pos:line="32" pos:column="9">sqlite3BtreeIsInTrans<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">pBt<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr> )<pos:position pos:line="32" pos:column="37"/></condition><then><block pos:line="32" pos:column="37">{
      <comment type="block" pos:line="33" pos:column="7">/* Whether or not a database might need a master journal depends upon
      ** its journal mode (among other things).  This matrix determines which
      ** journal modes use a master journal and which do not */</comment>
      <decl_stmt><decl><specifier pos:line="36" pos:column="7">static<pos:position pos:line="36" pos:column="13"/></specifier> <type><specifier pos:line="36" pos:column="14">const<pos:position pos:line="36" pos:column="19"/></specifier> <name pos:line="36" pos:column="20">u8<pos:position pos:line="36" pos:column="22"/></name></type> <name><name pos:line="36" pos:column="23">aMJNeeded<pos:position pos:line="36" pos:column="32"/></name><index pos:line="36" pos:column="32">[]<pos:position pos:line="36" pos:column="34"/></index></name> <init pos:line="36" pos:column="35">= <expr><block pos:line="36" pos:column="37">{
        <comment type="block" pos:line="37" pos:column="9">/* DELETE   */</comment>  <expr><literal type="number" pos:line="37" pos:column="25">1<pos:position pos:line="37" pos:column="26"/></literal></expr>,
        <comment type="block" pos:line="38" pos:column="9">/* PERSIST   */</comment> <expr><literal type="number" pos:line="38" pos:column="25">1<pos:position pos:line="38" pos:column="26"/></literal></expr>,
        <comment type="block" pos:line="39" pos:column="9">/* OFF       */</comment> <expr><literal type="number" pos:line="39" pos:column="25">0<pos:position pos:line="39" pos:column="26"/></literal></expr>,
        <comment type="block" pos:line="40" pos:column="9">/* TRUNCATE  */</comment> <expr><literal type="number" pos:line="40" pos:column="25">1<pos:position pos:line="40" pos:column="26"/></literal></expr>,
        <comment type="block" pos:line="41" pos:column="9">/* MEMORY    */</comment> <expr><literal type="number" pos:line="41" pos:column="25">0<pos:position pos:line="41" pos:column="26"/></literal></expr>,
        <comment type="block" pos:line="42" pos:column="9">/* WAL       */</comment> <expr><literal type="number" pos:line="42" pos:column="25">0<pos:position pos:line="42" pos:column="26"/></literal></expr>
      }<pos:position pos:line="43" pos:column="8"/></block></expr></init></decl>;<pos:position pos:line="43" pos:column="9"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="44" pos:column="7">Pager<pos:position pos:line="44" pos:column="12"/></name> <modifier pos:line="44" pos:column="13">*<pos:position pos:line="44" pos:column="14"/></modifier></type><name pos:line="44" pos:column="14">pPager<pos:position pos:line="44" pos:column="20"/></name></decl>;<pos:position pos:line="44" pos:column="21"/></decl_stmt>   <comment type="block" pos:line="44" pos:column="24">/* Pager associated with pBt */</comment>
      <expr_stmt><expr><name pos:line="45" pos:column="7">needXcommit<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <literal type="number" pos:line="45" pos:column="21">1<pos:position pos:line="45" pos:column="22"/></literal></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">sqlite3BtreeEnter<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">pBt<pos:position pos:line="46" pos:column="28"/></name></expr></argument>)<pos:position pos:line="46" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="47" pos:column="7">pPager<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <call><name pos:line="47" pos:column="16">sqlite3BtreePager<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">pBt<pos:position pos:line="47" pos:column="37"/></name></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt>
      <if pos:line="48" pos:column="7">if<condition pos:line="48" pos:column="9">( <expr><name><name pos:line="48" pos:column="11">db<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">-&gt;<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="15">aDb<pos:position pos:line="48" pos:column="18"/></name><index pos:line="48" pos:column="18">[<expr><name pos:line="48" pos:column="19">i<pos:position pos:line="48" pos:column="20"/></name></expr>]<pos:position pos:line="48" pos:column="21"/></index></name><operator pos:line="48" pos:column="21">.<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="22">safety_level<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">!=<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="36">PAGER_SYNCHRONOUS_OFF<pos:position pos:line="48" pos:column="57"/></name>
       <operator pos:line="49" pos:column="8">&amp;&amp;<pos:position pos:line="49" pos:column="18"/></operator> <name><name pos:line="49" pos:column="11">aMJNeeded<pos:position pos:line="49" pos:column="20"/></name><index pos:line="49" pos:column="20">[<expr><call><name pos:line="49" pos:column="21">sqlite3PagerGetJournalMode<pos:position pos:line="49" pos:column="47"/></name><argument_list pos:line="49" pos:column="47">(<argument><expr><name pos:line="49" pos:column="48">pPager<pos:position pos:line="49" pos:column="54"/></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>]<pos:position pos:line="49" pos:column="56"/></index></name></expr>
      )<pos:position pos:line="50" pos:column="8"/></condition><then><block pos:line="50" pos:column="8">{ 
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">assert<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">( <argument><expr><name pos:line="51" pos:column="17">i<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">!=<pos:position pos:line="51" pos:column="20"/></operator><literal type="number" pos:line="51" pos:column="20">1<pos:position pos:line="51" pos:column="21"/></literal></expr></argument> )<pos:position pos:line="51" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="52" pos:column="9">nTrans<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">++<pos:position pos:line="52" pos:column="17"/></operator></expr>;<pos:position pos:line="52" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="53" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="54" pos:column="7">rc<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">=<pos:position pos:line="54" pos:column="11"/></operator> <call><name pos:line="54" pos:column="12">sqlite3PagerExclusiveLock<pos:position pos:line="54" pos:column="37"/></name><argument_list pos:line="54" pos:column="37">(<argument><expr><name pos:line="54" pos:column="38">pPager<pos:position pos:line="54" pos:column="44"/></name></expr></argument>)<pos:position pos:line="54" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">sqlite3BtreeLeave<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><name pos:line="55" pos:column="25">pBt<pos:position pos:line="55" pos:column="28"/></name></expr></argument>)<pos:position pos:line="55" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
  }<pos:position pos:line="57" pos:column="4"/></block></for>
  <if pos:line="58" pos:column="3">if<condition pos:line="58" pos:column="5">( <expr><name pos:line="58" pos:column="7">rc<pos:position pos:line="58" pos:column="9"/></name><operator pos:line="58" pos:column="9">!=<pos:position pos:line="58" pos:column="11"/></operator><name pos:line="58" pos:column="11">SQLITE_OK<pos:position pos:line="58" pos:column="20"/></name></expr> )<pos:position pos:line="58" pos:column="22"/></condition><then><block pos:line="58" pos:column="22">{
    <return pos:line="59" pos:column="5">return <expr><name pos:line="59" pos:column="12">rc<pos:position pos:line="59" pos:column="14"/></name></expr>;<pos:position pos:line="59" pos:column="15"/></return>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="62" pos:column="3">/* If there are any write-transactions at all, invoke the commit hook */</comment>
  <if pos:line="63" pos:column="3">if<condition pos:line="63" pos:column="5">( <expr><name pos:line="63" pos:column="7">needXcommit<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">&amp;&amp;<pos:position pos:line="63" pos:column="29"/></operator> <name><name pos:line="63" pos:column="22">db<pos:position pos:line="63" pos:column="24"/></name><operator pos:line="63" pos:column="24">-&gt;<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="26">xCommitCallback<pos:position pos:line="63" pos:column="41"/></name></name></expr> )<pos:position pos:line="63" pos:column="43"/></condition><then><block pos:line="63" pos:column="43">{
    <expr_stmt><expr><name pos:line="64" pos:column="5">rc<pos:position pos:line="64" pos:column="7"/></name> <operator pos:line="64" pos:column="8">=<pos:position pos:line="64" pos:column="9"/></operator> <call><name><name pos:line="64" pos:column="10">db<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">-&gt;<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="14">xCommitCallback<pos:position pos:line="64" pos:column="29"/></name></name><argument_list pos:line="64" pos:column="29">(<argument><expr><name><name pos:line="64" pos:column="30">db<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">-&gt;<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="34">pCommitArg<pos:position pos:line="64" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="46"/></expr_stmt>
    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">( <expr><name pos:line="65" pos:column="9">rc<pos:position pos:line="65" pos:column="11"/></name></expr> )<pos:position pos:line="65" pos:column="13"/></condition><then><block pos:line="65" pos:column="13">{
      <return pos:line="66" pos:column="7">return <expr><name pos:line="66" pos:column="14">SQLITE_CONSTRAINT_COMMITHOOK<pos:position pos:line="66" pos:column="42"/></name></expr>;<pos:position pos:line="66" pos:column="43"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="70" pos:column="3">/* The simple case - no more than one database file (not counting the
  ** TEMP database) has a transaction active.   There is no need for the
  ** master-journal.
  **
  ** If the return value of sqlite3BtreeGetFilename() is a zero length
  ** string, it means the main database is :memory: or a temp file.  In 
  ** that case we do not support atomic multi-file commits, so use the 
  ** simple case then too.
  */</comment>
  <if pos:line="79" pos:column="3">if<condition pos:line="79" pos:column="5">( <expr><literal type="number" pos:line="79" pos:column="7">0<pos:position pos:line="79" pos:column="8"/></literal><operator pos:line="79" pos:column="8">==<pos:position pos:line="79" pos:column="10"/></operator><call><name pos:line="79" pos:column="10">sqlite3Strlen30<pos:position pos:line="79" pos:column="25"/></name><argument_list pos:line="79" pos:column="25">(<argument><expr><call><name pos:line="79" pos:column="26">sqlite3BtreeGetFilename<pos:position pos:line="79" pos:column="49"/></name><argument_list pos:line="79" pos:column="49">(<argument><expr><name><name pos:line="79" pos:column="50">db<pos:position pos:line="79" pos:column="52"/></name><operator pos:line="79" pos:column="52">-&gt;<pos:position pos:line="79" pos:column="57"/></operator><name pos:line="79" pos:column="54">aDb<pos:position pos:line="79" pos:column="57"/></name><index pos:line="79" pos:column="57">[<expr><literal type="number" pos:line="79" pos:column="58">0<pos:position pos:line="79" pos:column="59"/></literal></expr>]<pos:position pos:line="79" pos:column="60"/></index></name><operator pos:line="79" pos:column="60">.<pos:position pos:line="79" pos:column="61"/></operator><name pos:line="79" pos:column="61">pBt<pos:position pos:line="79" pos:column="64"/></name></expr></argument>)<pos:position pos:line="79" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="66"/></argument_list></call>
   <operator pos:line="80" pos:column="4">||<pos:position pos:line="80" pos:column="6"/></operator> <name pos:line="80" pos:column="7">nTrans<pos:position pos:line="80" pos:column="13"/></name><operator pos:line="80" pos:column="13">&lt;=<pos:position pos:line="80" pos:column="18"/></operator><literal type="number" pos:line="80" pos:column="15">1<pos:position pos:line="80" pos:column="16"/></literal></expr>
  )<pos:position pos:line="81" pos:column="4"/></condition><then><block pos:line="81" pos:column="4">{
    <for pos:line="82" pos:column="5">for<control pos:line="82" pos:column="8">(<init><expr><name pos:line="82" pos:column="9">i<pos:position pos:line="82" pos:column="10"/></name><operator pos:line="82" pos:column="10">=<pos:position pos:line="82" pos:column="11"/></operator><literal type="number" pos:line="82" pos:column="11">0<pos:position pos:line="82" pos:column="12"/></literal></expr>;<pos:position pos:line="82" pos:column="13"/></init> <condition><expr><name pos:line="82" pos:column="14">rc<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">==<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="18">SQLITE_OK<pos:position pos:line="82" pos:column="27"/></name> <operator pos:line="82" pos:column="28">&amp;&amp;<pos:position pos:line="82" pos:column="38"/></operator> <name pos:line="82" pos:column="31">i<pos:position pos:line="82" pos:column="32"/></name><operator pos:line="82" pos:column="32">&lt;<pos:position pos:line="82" pos:column="36"/></operator><name><name pos:line="82" pos:column="33">db<pos:position pos:line="82" pos:column="35"/></name><operator pos:line="82" pos:column="35">-&gt;<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="37">nDb<pos:position pos:line="82" pos:column="40"/></name></name></expr>;<pos:position pos:line="82" pos:column="41"/></condition> <incr><expr><name pos:line="82" pos:column="42">i<pos:position pos:line="82" pos:column="43"/></name><operator pos:line="82" pos:column="43">++<pos:position pos:line="82" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="82" pos:column="46"/></control><block pos:line="82" pos:column="46">{
      <decl_stmt><decl><type><name pos:line="83" pos:column="7">Btree<pos:position pos:line="83" pos:column="12"/></name> <modifier pos:line="83" pos:column="13">*<pos:position pos:line="83" pos:column="14"/></modifier></type><name pos:line="83" pos:column="14">pBt<pos:position pos:line="83" pos:column="17"/></name> <init pos:line="83" pos:column="18">= <expr><name><name pos:line="83" pos:column="20">db<pos:position pos:line="83" pos:column="22"/></name><operator pos:line="83" pos:column="22">-&gt;<pos:position pos:line="83" pos:column="27"/></operator><name pos:line="83" pos:column="24">aDb<pos:position pos:line="83" pos:column="27"/></name><index pos:line="83" pos:column="27">[<expr><name pos:line="83" pos:column="28">i<pos:position pos:line="83" pos:column="29"/></name></expr>]<pos:position pos:line="83" pos:column="30"/></index></name><operator pos:line="83" pos:column="30">.<pos:position pos:line="83" pos:column="31"/></operator><name pos:line="83" pos:column="31">pBt<pos:position pos:line="83" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="83" pos:column="35"/></decl_stmt>
      <if pos:line="84" pos:column="7">if<condition pos:line="84" pos:column="9">( <expr><name pos:line="84" pos:column="11">pBt<pos:position pos:line="84" pos:column="14"/></name></expr> )<pos:position pos:line="84" pos:column="16"/></condition><then><block pos:line="84" pos:column="16">{
        <expr_stmt><expr><name pos:line="85" pos:column="9">rc<pos:position pos:line="85" pos:column="11"/></name> <operator pos:line="85" pos:column="12">=<pos:position pos:line="85" pos:column="13"/></operator> <call><name pos:line="85" pos:column="14">sqlite3BtreeCommitPhaseOne<pos:position pos:line="85" pos:column="40"/></name><argument_list pos:line="85" pos:column="40">(<argument><expr><name pos:line="85" pos:column="41">pBt<pos:position pos:line="85" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="46">0<pos:position pos:line="85" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="86" pos:column="8"/></block></then></if>
    }<pos:position pos:line="87" pos:column="6"/></block></for>

    <comment type="block" pos:line="89" pos:column="5">/* Do the commit only if all databases successfully complete phase 1. 
    ** If one of the BtreeCommitPhaseOne() calls fails, this indicates an
    ** IO error while deleting or truncating a journal file. It is unlikely,
    ** but could happen. In this case abandon processing and return the error.
    */</comment>
    <for pos:line="94" pos:column="5">for<control pos:line="94" pos:column="8">(<init><expr><name pos:line="94" pos:column="9">i<pos:position pos:line="94" pos:column="10"/></name><operator pos:line="94" pos:column="10">=<pos:position pos:line="94" pos:column="11"/></operator><literal type="number" pos:line="94" pos:column="11">0<pos:position pos:line="94" pos:column="12"/></literal></expr>;<pos:position pos:line="94" pos:column="13"/></init> <condition><expr><name pos:line="94" pos:column="14">rc<pos:position pos:line="94" pos:column="16"/></name><operator pos:line="94" pos:column="16">==<pos:position pos:line="94" pos:column="18"/></operator><name pos:line="94" pos:column="18">SQLITE_OK<pos:position pos:line="94" pos:column="27"/></name> <operator pos:line="94" pos:column="28">&amp;&amp;<pos:position pos:line="94" pos:column="38"/></operator> <name pos:line="94" pos:column="31">i<pos:position pos:line="94" pos:column="32"/></name><operator pos:line="94" pos:column="32">&lt;<pos:position pos:line="94" pos:column="36"/></operator><name><name pos:line="94" pos:column="33">db<pos:position pos:line="94" pos:column="35"/></name><operator pos:line="94" pos:column="35">-&gt;<pos:position pos:line="94" pos:column="40"/></operator><name pos:line="94" pos:column="37">nDb<pos:position pos:line="94" pos:column="40"/></name></name></expr>;<pos:position pos:line="94" pos:column="41"/></condition> <incr><expr><name pos:line="94" pos:column="42">i<pos:position pos:line="94" pos:column="43"/></name><operator pos:line="94" pos:column="43">++<pos:position pos:line="94" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="94" pos:column="46"/></control><block pos:line="94" pos:column="46">{
      <decl_stmt><decl><type><name pos:line="95" pos:column="7">Btree<pos:position pos:line="95" pos:column="12"/></name> <modifier pos:line="95" pos:column="13">*<pos:position pos:line="95" pos:column="14"/></modifier></type><name pos:line="95" pos:column="14">pBt<pos:position pos:line="95" pos:column="17"/></name> <init pos:line="95" pos:column="18">= <expr><name><name pos:line="95" pos:column="20">db<pos:position pos:line="95" pos:column="22"/></name><operator pos:line="95" pos:column="22">-&gt;<pos:position pos:line="95" pos:column="27"/></operator><name pos:line="95" pos:column="24">aDb<pos:position pos:line="95" pos:column="27"/></name><index pos:line="95" pos:column="27">[<expr><name pos:line="95" pos:column="28">i<pos:position pos:line="95" pos:column="29"/></name></expr>]<pos:position pos:line="95" pos:column="30"/></index></name><operator pos:line="95" pos:column="30">.<pos:position pos:line="95" pos:column="31"/></operator><name pos:line="95" pos:column="31">pBt<pos:position pos:line="95" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="95" pos:column="35"/></decl_stmt>
      <if pos:line="96" pos:column="7">if<condition pos:line="96" pos:column="9">( <expr><name pos:line="96" pos:column="11">pBt<pos:position pos:line="96" pos:column="14"/></name></expr> )<pos:position pos:line="96" pos:column="16"/></condition><then><block pos:line="96" pos:column="16">{
        <expr_stmt><expr><name pos:line="97" pos:column="9">rc<pos:position pos:line="97" pos:column="11"/></name> <operator pos:line="97" pos:column="12">=<pos:position pos:line="97" pos:column="13"/></operator> <call><name pos:line="97" pos:column="14">sqlite3BtreeCommitPhaseTwo<pos:position pos:line="97" pos:column="40"/></name><argument_list pos:line="97" pos:column="40">(<argument><expr><name pos:line="97" pos:column="41">pBt<pos:position pos:line="97" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="46">0<pos:position pos:line="97" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="98" pos:column="8"/></block></then></if>
    }<pos:position pos:line="99" pos:column="6"/></block></for>
    <if pos:line="100" pos:column="5">if<condition pos:line="100" pos:column="7">( <expr><name pos:line="100" pos:column="9">rc<pos:position pos:line="100" pos:column="11"/></name><operator pos:line="100" pos:column="11">==<pos:position pos:line="100" pos:column="13"/></operator><name pos:line="100" pos:column="13">SQLITE_OK<pos:position pos:line="100" pos:column="22"/></name></expr> )<pos:position pos:line="100" pos:column="24"/></condition><then><block pos:line="100" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="101" pos:column="7">sqlite3VtabCommit<pos:position pos:line="101" pos:column="24"/></name><argument_list pos:line="101" pos:column="24">(<argument><expr><name pos:line="101" pos:column="25">db<pos:position pos:line="101" pos:column="27"/></name></expr></argument>)<pos:position pos:line="101" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if>
  }<pos:position pos:line="103" pos:column="4"/></block></then>

  <comment type="block" pos:line="105" pos:column="3">/* The complex case - There is a multi-file write-transaction active.
  ** This requires a master journal file to ensure the transaction is
  ** committed atomically.
  */</comment>
<cpp:ifndef pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">ifndef<pos:position pos:line="109" pos:column="8"/></cpp:directive> <name pos:line="109" pos:column="9">SQLITE_OMIT_DISKIO<pos:position pos:line="109" pos:column="27"/></name></cpp:ifndef>
  <else pos:line="110" pos:column="3">else<block pos:line="110" pos:column="7">{
    <decl_stmt><decl><type><name pos:line="111" pos:column="5">sqlite3_vfs<pos:position pos:line="111" pos:column="16"/></name> <modifier pos:line="111" pos:column="17">*<pos:position pos:line="111" pos:column="18"/></modifier></type><name pos:line="111" pos:column="18">pVfs<pos:position pos:line="111" pos:column="22"/></name> <init pos:line="111" pos:column="23">= <expr><name><name pos:line="111" pos:column="25">db<pos:position pos:line="111" pos:column="27"/></name><operator pos:line="111" pos:column="27">-&gt;<pos:position pos:line="111" pos:column="32"/></operator><name pos:line="111" pos:column="29">pVfs<pos:position pos:line="111" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="111" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="112" pos:column="5">char<pos:position pos:line="112" pos:column="9"/></name> <modifier pos:line="112" pos:column="10">*<pos:position pos:line="112" pos:column="11"/></modifier></type><name pos:line="112" pos:column="11">zMaster<pos:position pos:line="112" pos:column="18"/></name> <init pos:line="112" pos:column="19">= <expr><literal type="number" pos:line="112" pos:column="21">0<pos:position pos:line="112" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="112" pos:column="23"/></decl_stmt>   <comment type="block" pos:line="112" pos:column="26">/* File-name for the master journal */</comment>
    <decl_stmt><decl><type><name pos:line="113" pos:column="5">char<pos:position pos:line="113" pos:column="9"/></name> <specifier pos:line="113" pos:column="10">const<pos:position pos:line="113" pos:column="15"/></specifier> <modifier pos:line="113" pos:column="16">*<pos:position pos:line="113" pos:column="17"/></modifier></type><name pos:line="113" pos:column="17">zMainFile<pos:position pos:line="113" pos:column="26"/></name> <init pos:line="113" pos:column="27">= <expr><call><name pos:line="113" pos:column="29">sqlite3BtreeGetFilename<pos:position pos:line="113" pos:column="52"/></name><argument_list pos:line="113" pos:column="52">(<argument><expr><name><name pos:line="113" pos:column="53">db<pos:position pos:line="113" pos:column="55"/></name><operator pos:line="113" pos:column="55">-&gt;<pos:position pos:line="113" pos:column="60"/></operator><name pos:line="113" pos:column="57">aDb<pos:position pos:line="113" pos:column="60"/></name><index pos:line="113" pos:column="60">[<expr><literal type="number" pos:line="113" pos:column="61">0<pos:position pos:line="113" pos:column="62"/></literal></expr>]<pos:position pos:line="113" pos:column="63"/></index></name><operator pos:line="113" pos:column="63">.<pos:position pos:line="113" pos:column="64"/></operator><name pos:line="113" pos:column="64">pBt<pos:position pos:line="113" pos:column="67"/></name></expr></argument>)<pos:position pos:line="113" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="113" pos:column="69"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="114" pos:column="5">sqlite3_file<pos:position pos:line="114" pos:column="17"/></name> <modifier pos:line="114" pos:column="18">*<pos:position pos:line="114" pos:column="19"/></modifier></type><name pos:line="114" pos:column="19">pMaster<pos:position pos:line="114" pos:column="26"/></name> <init pos:line="114" pos:column="27">= <expr><literal type="number" pos:line="114" pos:column="29">0<pos:position pos:line="114" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="114" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="115" pos:column="5">i64<pos:position pos:line="115" pos:column="8"/></name></type> <name pos:line="115" pos:column="9">offset<pos:position pos:line="115" pos:column="15"/></name> <init pos:line="115" pos:column="16">= <expr><literal type="number" pos:line="115" pos:column="18">0<pos:position pos:line="115" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="115" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="116" pos:column="5">int<pos:position pos:line="116" pos:column="8"/></name></type> <name pos:line="116" pos:column="9">res<pos:position pos:line="116" pos:column="12"/></name></decl>;<pos:position pos:line="116" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="117" pos:column="5">int<pos:position pos:line="117" pos:column="8"/></name></type> <name pos:line="117" pos:column="9">retryCount<pos:position pos:line="117" pos:column="19"/></name> <init pos:line="117" pos:column="20">= <expr><literal type="number" pos:line="117" pos:column="22">0<pos:position pos:line="117" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="117" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="118" pos:column="5">int<pos:position pos:line="118" pos:column="8"/></name></type> <name pos:line="118" pos:column="9">nMainFile<pos:position pos:line="118" pos:column="18"/></name></decl>;<pos:position pos:line="118" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="120" pos:column="5">/* Select a master journal file name */</comment>
    <expr_stmt><expr><name pos:line="121" pos:column="5">nMainFile<pos:position pos:line="121" pos:column="14"/></name> <operator pos:line="121" pos:column="15">=<pos:position pos:line="121" pos:column="16"/></operator> <call><name pos:line="121" pos:column="17">sqlite3Strlen30<pos:position pos:line="121" pos:column="32"/></name><argument_list pos:line="121" pos:column="32">(<argument><expr><name pos:line="121" pos:column="33">zMainFile<pos:position pos:line="121" pos:column="42"/></name></expr></argument>)<pos:position pos:line="121" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="122" pos:column="5">zMaster<pos:position pos:line="122" pos:column="12"/></name> <operator pos:line="122" pos:column="13">=<pos:position pos:line="122" pos:column="14"/></operator> <call><name pos:line="122" pos:column="15">sqlite3MPrintf<pos:position pos:line="122" pos:column="29"/></name><argument_list pos:line="122" pos:column="29">(<argument><expr><name pos:line="122" pos:column="30">db<pos:position pos:line="122" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="34">"%s-mjXXXXXX9XXz"<pos:position pos:line="122" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="53">zMainFile<pos:position pos:line="122" pos:column="62"/></name></expr></argument>)<pos:position pos:line="122" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="64"/></expr_stmt>
    <if pos:line="123" pos:column="5">if<condition pos:line="123" pos:column="7">( <expr><name pos:line="123" pos:column="9">zMaster<pos:position pos:line="123" pos:column="16"/></name><operator pos:line="123" pos:column="16">==<pos:position pos:line="123" pos:column="18"/></operator><literal type="number" pos:line="123" pos:column="18">0<pos:position pos:line="123" pos:column="19"/></literal></expr> )<pos:position pos:line="123" pos:column="21"/></condition><then pos:line="123" pos:column="21"> <block type="pseudo"><return pos:line="123" pos:column="22">return <expr><name pos:line="123" pos:column="29">SQLITE_NOMEM_BKPT<pos:position pos:line="123" pos:column="46"/></name></expr>;<pos:position pos:line="123" pos:column="47"/></return></block></then></if>
    <do pos:line="124" pos:column="5">do <block pos:line="124" pos:column="8">{
      <decl_stmt><decl><type><name pos:line="125" pos:column="7">u32<pos:position pos:line="125" pos:column="10"/></name></type> <name pos:line="125" pos:column="11">iRandom<pos:position pos:line="125" pos:column="18"/></name></decl>;<pos:position pos:line="125" pos:column="19"/></decl_stmt>
      <if pos:line="126" pos:column="7">if<condition pos:line="126" pos:column="9">( <expr><name pos:line="126" pos:column="11">retryCount<pos:position pos:line="126" pos:column="21"/></name></expr> )<pos:position pos:line="126" pos:column="23"/></condition><then><block pos:line="126" pos:column="23">{
        <if pos:line="127" pos:column="9">if<condition pos:line="127" pos:column="11">( <expr><name pos:line="127" pos:column="13">retryCount<pos:position pos:line="127" pos:column="23"/></name><operator pos:line="127" pos:column="23">&gt;<pos:position pos:line="127" pos:column="27"/></operator><literal type="number" pos:line="127" pos:column="24">100<pos:position pos:line="127" pos:column="27"/></literal></expr> )<pos:position pos:line="127" pos:column="29"/></condition><then><block pos:line="127" pos:column="29">{
          <expr_stmt><expr><call><name pos:line="128" pos:column="11">sqlite3_log<pos:position pos:line="128" pos:column="22"/></name><argument_list pos:line="128" pos:column="22">(<argument><expr><name pos:line="128" pos:column="23">SQLITE_FULL<pos:position pos:line="128" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="36">"MJ delete: %s"<pos:position pos:line="128" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="53">zMaster<pos:position pos:line="128" pos:column="60"/></name></expr></argument>)<pos:position pos:line="128" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="62"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="129" pos:column="11">sqlite3OsDelete<pos:position pos:line="129" pos:column="26"/></name><argument_list pos:line="129" pos:column="26">(<argument><expr><name pos:line="129" pos:column="27">pVfs<pos:position pos:line="129" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="33">zMaster<pos:position pos:line="129" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="42">0<pos:position pos:line="129" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="45"/></expr_stmt>
          <break pos:line="130" pos:column="11">break;<pos:position pos:line="130" pos:column="17"/></break>
        }<pos:position pos:line="131" pos:column="10"/></block></then><elseif pos:line="131" pos:column="10">else <if pos:line="131" pos:column="15">if<condition pos:line="131" pos:column="17">( <expr><name pos:line="131" pos:column="19">retryCount<pos:position pos:line="131" pos:column="29"/></name><operator pos:line="131" pos:column="29">==<pos:position pos:line="131" pos:column="31"/></operator><literal type="number" pos:line="131" pos:column="31">1<pos:position pos:line="131" pos:column="32"/></literal></expr> )<pos:position pos:line="131" pos:column="34"/></condition><then><block pos:line="131" pos:column="34">{
          <expr_stmt><expr><call><name pos:line="132" pos:column="11">sqlite3_log<pos:position pos:line="132" pos:column="22"/></name><argument_list pos:line="132" pos:column="22">(<argument><expr><name pos:line="132" pos:column="23">SQLITE_FULL<pos:position pos:line="132" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="36">"MJ collide: %s"<pos:position pos:line="132" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="54">zMaster<pos:position pos:line="132" pos:column="61"/></name></expr></argument>)<pos:position pos:line="132" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="133" pos:column="10"/></block></then></if></elseif></if>
      }<pos:position pos:line="134" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="135" pos:column="7">retryCount<pos:position pos:line="135" pos:column="17"/></name><operator pos:line="135" pos:column="17">++<pos:position pos:line="135" pos:column="19"/></operator></expr>;<pos:position pos:line="135" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="136" pos:column="7">sqlite3_randomness<pos:position pos:line="136" pos:column="25"/></name><argument_list pos:line="136" pos:column="25">(<argument><expr><sizeof pos:line="136" pos:column="26">sizeof<argument_list pos:line="136" pos:column="32">(<argument><expr><name pos:line="136" pos:column="33">iRandom<pos:position pos:line="136" pos:column="40"/></name></expr></argument>)<pos:position pos:line="136" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="136" pos:column="43">&amp;<pos:position pos:line="136" pos:column="48"/></operator><name pos:line="136" pos:column="44">iRandom<pos:position pos:line="136" pos:column="51"/></name></expr></argument>)<pos:position pos:line="136" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="137" pos:column="7">sqlite3_snprintf<pos:position pos:line="137" pos:column="23"/></name><argument_list pos:line="137" pos:column="23">(<argument><expr><literal type="number" pos:line="137" pos:column="24">13<pos:position pos:line="137" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="137" pos:column="28">&amp;<pos:position pos:line="137" pos:column="33"/></operator><name><name pos:line="137" pos:column="29">zMaster<pos:position pos:line="137" pos:column="36"/></name><index pos:line="137" pos:column="36">[<expr><name pos:line="137" pos:column="37">nMainFile<pos:position pos:line="137" pos:column="46"/></name></expr>]<pos:position pos:line="137" pos:column="47"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="49">"-mj%06X9%02X"<pos:position pos:line="137" pos:column="63"/></literal></expr></argument>,
                               <argument><expr><operator pos:line="138" pos:column="32">(<pos:position pos:line="138" pos:column="33"/></operator><name pos:line="138" pos:column="33">iRandom<pos:position pos:line="138" pos:column="40"/></name><operator pos:line="138" pos:column="40">&gt;&gt;<pos:position pos:line="138" pos:column="45"/></operator><literal type="number" pos:line="138" pos:column="42">8<pos:position pos:line="138" pos:column="43"/></literal><operator pos:line="138" pos:column="43">)<pos:position pos:line="138" pos:column="44"/></operator><operator pos:line="138" pos:column="44">&amp;<pos:position pos:line="138" pos:column="49"/></operator><literal type="number" pos:line="138" pos:column="45">0xffffff<pos:position pos:line="138" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="138" pos:column="55">iRandom<pos:position pos:line="138" pos:column="62"/></name><operator pos:line="138" pos:column="62">&amp;<pos:position pos:line="138" pos:column="67"/></operator><literal type="number" pos:line="138" pos:column="63">0xff<pos:position pos:line="138" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="69"/></expr_stmt>
      <comment type="block" pos:line="139" pos:column="7">/* The antipenultimate character of the master journal name must
      ** be "9" to avoid name collisions when using 8+3 filenames. */</comment>
      <expr_stmt><expr><call><name pos:line="141" pos:column="7">assert<pos:position pos:line="141" pos:column="13"/></name><argument_list pos:line="141" pos:column="13">( <argument><expr><name><name pos:line="141" pos:column="15">zMaster<pos:position pos:line="141" pos:column="22"/></name><index pos:line="141" pos:column="22">[<expr><call><name pos:line="141" pos:column="23">sqlite3Strlen30<pos:position pos:line="141" pos:column="38"/></name><argument_list pos:line="141" pos:column="38">(<argument><expr><name pos:line="141" pos:column="39">zMaster<pos:position pos:line="141" pos:column="46"/></name></expr></argument>)<pos:position pos:line="141" pos:column="47"/></argument_list></call><operator pos:line="141" pos:column="47">-<pos:position pos:line="141" pos:column="48"/></operator><literal type="number" pos:line="141" pos:column="48">3<pos:position pos:line="141" pos:column="49"/></literal></expr>]<pos:position pos:line="141" pos:column="50"/></index></name><operator pos:line="141" pos:column="50">==<pos:position pos:line="141" pos:column="52"/></operator><literal type="char" pos:line="141" pos:column="52">'9'<pos:position pos:line="141" pos:column="55"/></literal></expr></argument> )<pos:position pos:line="141" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="142" pos:column="7">sqlite3FileSuffix3<pos:position pos:line="142" pos:column="25"/></name><argument_list pos:line="142" pos:column="25">(<argument><expr><name pos:line="142" pos:column="26">zMainFile<pos:position pos:line="142" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="37">zMaster<pos:position pos:line="142" pos:column="44"/></name></expr></argument>)<pos:position pos:line="142" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name pos:line="143" pos:column="7">rc<pos:position pos:line="143" pos:column="9"/></name> <operator pos:line="143" pos:column="10">=<pos:position pos:line="143" pos:column="11"/></operator> <call><name pos:line="143" pos:column="12">sqlite3OsAccess<pos:position pos:line="143" pos:column="27"/></name><argument_list pos:line="143" pos:column="27">(<argument><expr><name pos:line="143" pos:column="28">pVfs<pos:position pos:line="143" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="34">zMaster<pos:position pos:line="143" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="43">SQLITE_ACCESS_EXISTS<pos:position pos:line="143" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="143" pos:column="65">&amp;<pos:position pos:line="143" pos:column="70"/></operator><name pos:line="143" pos:column="66">res<pos:position pos:line="143" pos:column="69"/></name></expr></argument>)<pos:position pos:line="143" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="144" pos:column="6"/></block>while<condition pos:line="144" pos:column="11">( <expr><name pos:line="144" pos:column="13">rc<pos:position pos:line="144" pos:column="15"/></name><operator pos:line="144" pos:column="15">==<pos:position pos:line="144" pos:column="17"/></operator><name pos:line="144" pos:column="17">SQLITE_OK<pos:position pos:line="144" pos:column="26"/></name> <operator pos:line="144" pos:column="27">&amp;&amp;<pos:position pos:line="144" pos:column="37"/></operator> <name pos:line="144" pos:column="30">res<pos:position pos:line="144" pos:column="33"/></name></expr> )<pos:position pos:line="144" pos:column="35"/></condition>;<pos:position pos:line="144" pos:column="36"/></do>
    <if pos:line="145" pos:column="5">if<condition pos:line="145" pos:column="7">( <expr><name pos:line="145" pos:column="9">rc<pos:position pos:line="145" pos:column="11"/></name><operator pos:line="145" pos:column="11">==<pos:position pos:line="145" pos:column="13"/></operator><name pos:line="145" pos:column="13">SQLITE_OK<pos:position pos:line="145" pos:column="22"/></name></expr> )<pos:position pos:line="145" pos:column="24"/></condition><then><block pos:line="145" pos:column="24">{
      <comment type="block" pos:line="146" pos:column="7">/* Open the master journal. */</comment>
      <expr_stmt><expr><name pos:line="147" pos:column="7">rc<pos:position pos:line="147" pos:column="9"/></name> <operator pos:line="147" pos:column="10">=<pos:position pos:line="147" pos:column="11"/></operator> <call><name pos:line="147" pos:column="12">sqlite3OsOpenMalloc<pos:position pos:line="147" pos:column="31"/></name><argument_list pos:line="147" pos:column="31">(<argument><expr><name pos:line="147" pos:column="32">pVfs<pos:position pos:line="147" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="38">zMaster<pos:position pos:line="147" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="147" pos:column="47">&amp;<pos:position pos:line="147" pos:column="52"/></operator><name pos:line="147" pos:column="48">pMaster<pos:position pos:line="147" pos:column="55"/></name></expr></argument>, 
          <argument><expr><name pos:line="148" pos:column="11">SQLITE_OPEN_READWRITE<pos:position pos:line="148" pos:column="32"/></name><operator pos:line="148" pos:column="32">|<pos:position pos:line="148" pos:column="33"/></operator><name pos:line="148" pos:column="33">SQLITE_OPEN_CREATE<pos:position pos:line="148" pos:column="51"/></name><operator pos:line="148" pos:column="51">|<pos:position pos:line="148" pos:column="52"/></operator>
          <name pos:line="149" pos:column="11">SQLITE_OPEN_EXCLUSIVE<pos:position pos:line="149" pos:column="32"/></name><operator pos:line="149" pos:column="32">|<pos:position pos:line="149" pos:column="33"/></operator><name pos:line="149" pos:column="33">SQLITE_OPEN_MASTER_JOURNAL<pos:position pos:line="149" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="149" pos:column="61">0<pos:position pos:line="149" pos:column="62"/></literal></expr></argument>
      )<pos:position pos:line="150" pos:column="8"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="9"/></expr_stmt>
    }<pos:position pos:line="151" pos:column="6"/></block></then></if>
    <if pos:line="152" pos:column="5">if<condition pos:line="152" pos:column="7">( <expr><name pos:line="152" pos:column="9">rc<pos:position pos:line="152" pos:column="11"/></name><operator pos:line="152" pos:column="11">!=<pos:position pos:line="152" pos:column="13"/></operator><name pos:line="152" pos:column="13">SQLITE_OK<pos:position pos:line="152" pos:column="22"/></name></expr> )<pos:position pos:line="152" pos:column="24"/></condition><then><block pos:line="152" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="153" pos:column="7">sqlite3DbFree<pos:position pos:line="153" pos:column="20"/></name><argument_list pos:line="153" pos:column="20">(<argument><expr><name pos:line="153" pos:column="21">db<pos:position pos:line="153" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="25">zMaster<pos:position pos:line="153" pos:column="32"/></name></expr></argument>)<pos:position pos:line="153" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="34"/></expr_stmt>
      <return pos:line="154" pos:column="7">return <expr><name pos:line="154" pos:column="14">rc<pos:position pos:line="154" pos:column="16"/></name></expr>;<pos:position pos:line="154" pos:column="17"/></return>
    }<pos:position pos:line="155" pos:column="6"/></block></then></if>
 
    <comment type="block" pos:line="157" pos:column="5">/* Write the name of each database file in the transaction into the new
    ** master journal file. If an error occurs at this point close
    ** and delete the master journal file. All the individual journal files
    ** still have 'null' as the master journal pointer, so they will roll
    ** back independently if a failure occurs.
    */</comment>
    <for pos:line="163" pos:column="5">for<control pos:line="163" pos:column="8">(<init><expr><name pos:line="163" pos:column="9">i<pos:position pos:line="163" pos:column="10"/></name><operator pos:line="163" pos:column="10">=<pos:position pos:line="163" pos:column="11"/></operator><literal type="number" pos:line="163" pos:column="11">0<pos:position pos:line="163" pos:column="12"/></literal></expr>;<pos:position pos:line="163" pos:column="13"/></init> <condition><expr><name pos:line="163" pos:column="14">i<pos:position pos:line="163" pos:column="15"/></name><operator pos:line="163" pos:column="15">&lt;<pos:position pos:line="163" pos:column="19"/></operator><name><name pos:line="163" pos:column="16">db<pos:position pos:line="163" pos:column="18"/></name><operator pos:line="163" pos:column="18">-&gt;<pos:position pos:line="163" pos:column="23"/></operator><name pos:line="163" pos:column="20">nDb<pos:position pos:line="163" pos:column="23"/></name></name></expr>;<pos:position pos:line="163" pos:column="24"/></condition> <incr><expr><name pos:line="163" pos:column="25">i<pos:position pos:line="163" pos:column="26"/></name><operator pos:line="163" pos:column="26">++<pos:position pos:line="163" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="163" pos:column="29"/></control><block pos:line="163" pos:column="29">{
      <decl_stmt><decl><type><name pos:line="164" pos:column="7">Btree<pos:position pos:line="164" pos:column="12"/></name> <modifier pos:line="164" pos:column="13">*<pos:position pos:line="164" pos:column="14"/></modifier></type><name pos:line="164" pos:column="14">pBt<pos:position pos:line="164" pos:column="17"/></name> <init pos:line="164" pos:column="18">= <expr><name><name pos:line="164" pos:column="20">db<pos:position pos:line="164" pos:column="22"/></name><operator pos:line="164" pos:column="22">-&gt;<pos:position pos:line="164" pos:column="27"/></operator><name pos:line="164" pos:column="24">aDb<pos:position pos:line="164" pos:column="27"/></name><index pos:line="164" pos:column="27">[<expr><name pos:line="164" pos:column="28">i<pos:position pos:line="164" pos:column="29"/></name></expr>]<pos:position pos:line="164" pos:column="30"/></index></name><operator pos:line="164" pos:column="30">.<pos:position pos:line="164" pos:column="31"/></operator><name pos:line="164" pos:column="31">pBt<pos:position pos:line="164" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="164" pos:column="35"/></decl_stmt>
      <if pos:line="165" pos:column="7">if<condition pos:line="165" pos:column="9">( <expr><call><name pos:line="165" pos:column="11">sqlite3BtreeIsInTrans<pos:position pos:line="165" pos:column="32"/></name><argument_list pos:line="165" pos:column="32">(<argument><expr><name pos:line="165" pos:column="33">pBt<pos:position pos:line="165" pos:column="36"/></name></expr></argument>)<pos:position pos:line="165" pos:column="37"/></argument_list></call></expr> )<pos:position pos:line="165" pos:column="39"/></condition><then><block pos:line="165" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="166" pos:column="9">char<pos:position pos:line="166" pos:column="13"/></name> <specifier pos:line="166" pos:column="14">const<pos:position pos:line="166" pos:column="19"/></specifier> <modifier pos:line="166" pos:column="20">*<pos:position pos:line="166" pos:column="21"/></modifier></type><name pos:line="166" pos:column="21">zFile<pos:position pos:line="166" pos:column="26"/></name> <init pos:line="166" pos:column="27">= <expr><call><name pos:line="166" pos:column="29">sqlite3BtreeGetJournalname<pos:position pos:line="166" pos:column="55"/></name><argument_list pos:line="166" pos:column="55">(<argument><expr><name pos:line="166" pos:column="56">pBt<pos:position pos:line="166" pos:column="59"/></name></expr></argument>)<pos:position pos:line="166" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="166" pos:column="61"/></decl_stmt>
        <if pos:line="167" pos:column="9">if<condition pos:line="167" pos:column="11">( <expr><name pos:line="167" pos:column="13">zFile<pos:position pos:line="167" pos:column="18"/></name><operator pos:line="167" pos:column="18">==<pos:position pos:line="167" pos:column="20"/></operator><literal type="number" pos:line="167" pos:column="20">0<pos:position pos:line="167" pos:column="21"/></literal></expr> )<pos:position pos:line="167" pos:column="23"/></condition><then><block pos:line="167" pos:column="23">{
          <continue pos:line="168" pos:column="11">continue;<pos:position pos:line="168" pos:column="20"/></continue>  <comment type="block" pos:line="168" pos:column="22">/* Ignore TEMP and :memory: databases */</comment>
        }<pos:position pos:line="169" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="170" pos:column="9">assert<pos:position pos:line="170" pos:column="15"/></name><argument_list pos:line="170" pos:column="15">( <argument><expr><name><name pos:line="170" pos:column="17">zFile<pos:position pos:line="170" pos:column="22"/></name><index pos:line="170" pos:column="22">[<expr><literal type="number" pos:line="170" pos:column="23">0<pos:position pos:line="170" pos:column="24"/></literal></expr>]<pos:position pos:line="170" pos:column="25"/></index></name><operator pos:line="170" pos:column="25">!=<pos:position pos:line="170" pos:column="27"/></operator><literal type="number" pos:line="170" pos:column="27">0<pos:position pos:line="170" pos:column="28"/></literal></expr></argument> )<pos:position pos:line="170" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="171" pos:column="9">rc<pos:position pos:line="171" pos:column="11"/></name> <operator pos:line="171" pos:column="12">=<pos:position pos:line="171" pos:column="13"/></operator> <call><name pos:line="171" pos:column="14">sqlite3OsWrite<pos:position pos:line="171" pos:column="28"/></name><argument_list pos:line="171" pos:column="28">(<argument><expr><name pos:line="171" pos:column="29">pMaster<pos:position pos:line="171" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="38">zFile<pos:position pos:line="171" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="171" pos:column="45">sqlite3Strlen30<pos:position pos:line="171" pos:column="60"/></name><argument_list pos:line="171" pos:column="60">(<argument><expr><name pos:line="171" pos:column="61">zFile<pos:position pos:line="171" pos:column="66"/></name></expr></argument>)<pos:position pos:line="171" pos:column="67"/></argument_list></call><operator pos:line="171" pos:column="67">+<pos:position pos:line="171" pos:column="68"/></operator><literal type="number" pos:line="171" pos:column="68">1<pos:position pos:line="171" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="171" pos:column="71">offset<pos:position pos:line="171" pos:column="77"/></name></expr></argument>)<pos:position pos:line="171" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><name pos:line="172" pos:column="9">offset<pos:position pos:line="172" pos:column="15"/></name> <operator pos:line="172" pos:column="16">+=<pos:position pos:line="172" pos:column="18"/></operator> <call><name pos:line="172" pos:column="19">sqlite3Strlen30<pos:position pos:line="172" pos:column="34"/></name><argument_list pos:line="172" pos:column="34">(<argument><expr><name pos:line="172" pos:column="35">zFile<pos:position pos:line="172" pos:column="40"/></name></expr></argument>)<pos:position pos:line="172" pos:column="41"/></argument_list></call><operator pos:line="172" pos:column="41">+<pos:position pos:line="172" pos:column="42"/></operator><literal type="number" pos:line="172" pos:column="42">1<pos:position pos:line="172" pos:column="43"/></literal></expr>;<pos:position pos:line="172" pos:column="44"/></expr_stmt>
        <if pos:line="173" pos:column="9">if<condition pos:line="173" pos:column="11">( <expr><name pos:line="173" pos:column="13">rc<pos:position pos:line="173" pos:column="15"/></name><operator pos:line="173" pos:column="15">!=<pos:position pos:line="173" pos:column="17"/></operator><name pos:line="173" pos:column="17">SQLITE_OK<pos:position pos:line="173" pos:column="26"/></name></expr> )<pos:position pos:line="173" pos:column="28"/></condition><then><block pos:line="173" pos:column="28">{
          <expr_stmt><expr><call><name pos:line="174" pos:column="11">sqlite3OsCloseFree<pos:position pos:line="174" pos:column="29"/></name><argument_list pos:line="174" pos:column="29">(<argument><expr><name pos:line="174" pos:column="30">pMaster<pos:position pos:line="174" pos:column="37"/></name></expr></argument>)<pos:position pos:line="174" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="39"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="175" pos:column="11">sqlite3OsDelete<pos:position pos:line="175" pos:column="26"/></name><argument_list pos:line="175" pos:column="26">(<argument><expr><name pos:line="175" pos:column="27">pVfs<pos:position pos:line="175" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="33">zMaster<pos:position pos:line="175" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="175" pos:column="42">0<pos:position pos:line="175" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="45"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="176" pos:column="11">sqlite3DbFree<pos:position pos:line="176" pos:column="24"/></name><argument_list pos:line="176" pos:column="24">(<argument><expr><name pos:line="176" pos:column="25">db<pos:position pos:line="176" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="29">zMaster<pos:position pos:line="176" pos:column="36"/></name></expr></argument>)<pos:position pos:line="176" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="38"/></expr_stmt>
          <return pos:line="177" pos:column="11">return <expr><name pos:line="177" pos:column="18">rc<pos:position pos:line="177" pos:column="20"/></name></expr>;<pos:position pos:line="177" pos:column="21"/></return>
        }<pos:position pos:line="178" pos:column="10"/></block></then></if>
      }<pos:position pos:line="179" pos:column="8"/></block></then></if>
    }<pos:position pos:line="180" pos:column="6"/></block></for>

    <comment type="block" pos:line="182" pos:column="5">/* Sync the master journal file. If the IOCAP_SEQUENTIAL device
    ** flag is set this is not required.
    */</comment>
    <if pos:line="185" pos:column="5">if<condition pos:line="185" pos:column="7">( <expr><literal type="number" pos:line="185" pos:column="9">0<pos:position pos:line="185" pos:column="10"/></literal><operator pos:line="185" pos:column="10">==<pos:position pos:line="185" pos:column="12"/></operator><operator pos:line="185" pos:column="12">(<pos:position pos:line="185" pos:column="13"/></operator><call><name pos:line="185" pos:column="13">sqlite3OsDeviceCharacteristics<pos:position pos:line="185" pos:column="43"/></name><argument_list pos:line="185" pos:column="43">(<argument><expr><name pos:line="185" pos:column="44">pMaster<pos:position pos:line="185" pos:column="51"/></name></expr></argument>)<pos:position pos:line="185" pos:column="52"/></argument_list></call><operator pos:line="185" pos:column="52">&amp;<pos:position pos:line="185" pos:column="57"/></operator><name pos:line="185" pos:column="53">SQLITE_IOCAP_SEQUENTIAL<pos:position pos:line="185" pos:column="76"/></name><operator pos:line="185" pos:column="76">)<pos:position pos:line="185" pos:column="77"/></operator>
     <operator pos:line="186" pos:column="6">&amp;&amp;<pos:position pos:line="186" pos:column="16"/></operator> <name pos:line="186" pos:column="9">SQLITE_OK<pos:position pos:line="186" pos:column="18"/></name><operator pos:line="186" pos:column="18">!=<pos:position pos:line="186" pos:column="20"/></operator><operator pos:line="186" pos:column="20">(<pos:position pos:line="186" pos:column="21"/></operator><name pos:line="186" pos:column="21">rc<pos:position pos:line="186" pos:column="23"/></name> <operator pos:line="186" pos:column="24">=<pos:position pos:line="186" pos:column="25"/></operator> <call><name pos:line="186" pos:column="26">sqlite3OsSync<pos:position pos:line="186" pos:column="39"/></name><argument_list pos:line="186" pos:column="39">(<argument><expr><name pos:line="186" pos:column="40">pMaster<pos:position pos:line="186" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="49">SQLITE_SYNC_NORMAL<pos:position pos:line="186" pos:column="67"/></name></expr></argument>)<pos:position pos:line="186" pos:column="68"/></argument_list></call><operator pos:line="186" pos:column="68">)<pos:position pos:line="186" pos:column="69"/></operator></expr>
    )<pos:position pos:line="187" pos:column="6"/></condition><then><block pos:line="187" pos:column="6">{
      <expr_stmt><expr><call><name pos:line="188" pos:column="7">sqlite3OsCloseFree<pos:position pos:line="188" pos:column="25"/></name><argument_list pos:line="188" pos:column="25">(<argument><expr><name pos:line="188" pos:column="26">pMaster<pos:position pos:line="188" pos:column="33"/></name></expr></argument>)<pos:position pos:line="188" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="189" pos:column="7">sqlite3OsDelete<pos:position pos:line="189" pos:column="22"/></name><argument_list pos:line="189" pos:column="22">(<argument><expr><name pos:line="189" pos:column="23">pVfs<pos:position pos:line="189" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="29">zMaster<pos:position pos:line="189" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="189" pos:column="38">0<pos:position pos:line="189" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="190" pos:column="7">sqlite3DbFree<pos:position pos:line="190" pos:column="20"/></name><argument_list pos:line="190" pos:column="20">(<argument><expr><name pos:line="190" pos:column="21">db<pos:position pos:line="190" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="25">zMaster<pos:position pos:line="190" pos:column="32"/></name></expr></argument>)<pos:position pos:line="190" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="34"/></expr_stmt>
      <return pos:line="191" pos:column="7">return <expr><name pos:line="191" pos:column="14">rc<pos:position pos:line="191" pos:column="16"/></name></expr>;<pos:position pos:line="191" pos:column="17"/></return>
    }<pos:position pos:line="192" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="194" pos:column="5">/* Sync all the db files involved in the transaction. The same call
    ** sets the master journal pointer in each individual journal. If
    ** an error occurs here, do not delete the master journal file.
    **
    ** If the error occurs during the first call to
    ** sqlite3BtreeCommitPhaseOne(), then there is a chance that the
    ** master journal file will be orphaned. But we cannot delete it,
    ** in case the master journal file name was written into the journal
    ** file before the failure occurred.
    */</comment>
    <for pos:line="204" pos:column="5">for<control pos:line="204" pos:column="8">(<init><expr><name pos:line="204" pos:column="9">i<pos:position pos:line="204" pos:column="10"/></name><operator pos:line="204" pos:column="10">=<pos:position pos:line="204" pos:column="11"/></operator><literal type="number" pos:line="204" pos:column="11">0<pos:position pos:line="204" pos:column="12"/></literal></expr>;<pos:position pos:line="204" pos:column="13"/></init> <condition><expr><name pos:line="204" pos:column="14">rc<pos:position pos:line="204" pos:column="16"/></name><operator pos:line="204" pos:column="16">==<pos:position pos:line="204" pos:column="18"/></operator><name pos:line="204" pos:column="18">SQLITE_OK<pos:position pos:line="204" pos:column="27"/></name> <operator pos:line="204" pos:column="28">&amp;&amp;<pos:position pos:line="204" pos:column="38"/></operator> <name pos:line="204" pos:column="31">i<pos:position pos:line="204" pos:column="32"/></name><operator pos:line="204" pos:column="32">&lt;<pos:position pos:line="204" pos:column="36"/></operator><name><name pos:line="204" pos:column="33">db<pos:position pos:line="204" pos:column="35"/></name><operator pos:line="204" pos:column="35">-&gt;<pos:position pos:line="204" pos:column="40"/></operator><name pos:line="204" pos:column="37">nDb<pos:position pos:line="204" pos:column="40"/></name></name></expr>;<pos:position pos:line="204" pos:column="41"/></condition> <incr><expr><name pos:line="204" pos:column="42">i<pos:position pos:line="204" pos:column="43"/></name><operator pos:line="204" pos:column="43">++<pos:position pos:line="204" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="204" pos:column="46"/></control><block pos:line="204" pos:column="46">{ 
      <decl_stmt><decl><type><name pos:line="205" pos:column="7">Btree<pos:position pos:line="205" pos:column="12"/></name> <modifier pos:line="205" pos:column="13">*<pos:position pos:line="205" pos:column="14"/></modifier></type><name pos:line="205" pos:column="14">pBt<pos:position pos:line="205" pos:column="17"/></name> <init pos:line="205" pos:column="18">= <expr><name><name pos:line="205" pos:column="20">db<pos:position pos:line="205" pos:column="22"/></name><operator pos:line="205" pos:column="22">-&gt;<pos:position pos:line="205" pos:column="27"/></operator><name pos:line="205" pos:column="24">aDb<pos:position pos:line="205" pos:column="27"/></name><index pos:line="205" pos:column="27">[<expr><name pos:line="205" pos:column="28">i<pos:position pos:line="205" pos:column="29"/></name></expr>]<pos:position pos:line="205" pos:column="30"/></index></name><operator pos:line="205" pos:column="30">.<pos:position pos:line="205" pos:column="31"/></operator><name pos:line="205" pos:column="31">pBt<pos:position pos:line="205" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="205" pos:column="35"/></decl_stmt>
      <if pos:line="206" pos:column="7">if<condition pos:line="206" pos:column="9">( <expr><name pos:line="206" pos:column="11">pBt<pos:position pos:line="206" pos:column="14"/></name></expr> )<pos:position pos:line="206" pos:column="16"/></condition><then><block pos:line="206" pos:column="16">{
        <expr_stmt><expr><name pos:line="207" pos:column="9">rc<pos:position pos:line="207" pos:column="11"/></name> <operator pos:line="207" pos:column="12">=<pos:position pos:line="207" pos:column="13"/></operator> <call><name pos:line="207" pos:column="14">sqlite3BtreeCommitPhaseOne<pos:position pos:line="207" pos:column="40"/></name><argument_list pos:line="207" pos:column="40">(<argument><expr><name pos:line="207" pos:column="41">pBt<pos:position pos:line="207" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="46">zMaster<pos:position pos:line="207" pos:column="53"/></name></expr></argument>)<pos:position pos:line="207" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="55"/></expr_stmt>
      }<pos:position pos:line="208" pos:column="8"/></block></then></if>
    }<pos:position pos:line="209" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="210" pos:column="5">sqlite3OsCloseFree<pos:position pos:line="210" pos:column="23"/></name><argument_list pos:line="210" pos:column="23">(<argument><expr><name pos:line="210" pos:column="24">pMaster<pos:position pos:line="210" pos:column="31"/></name></expr></argument>)<pos:position pos:line="210" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="211" pos:column="5">assert<pos:position pos:line="211" pos:column="11"/></name><argument_list pos:line="211" pos:column="11">( <argument><expr><name pos:line="211" pos:column="13">rc<pos:position pos:line="211" pos:column="15"/></name><operator pos:line="211" pos:column="15">!=<pos:position pos:line="211" pos:column="17"/></operator><name pos:line="211" pos:column="17">SQLITE_BUSY<pos:position pos:line="211" pos:column="28"/></name></expr></argument> )<pos:position pos:line="211" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="31"/></expr_stmt>
    <if pos:line="212" pos:column="5">if<condition pos:line="212" pos:column="7">( <expr><name pos:line="212" pos:column="9">rc<pos:position pos:line="212" pos:column="11"/></name><operator pos:line="212" pos:column="11">!=<pos:position pos:line="212" pos:column="13"/></operator><name pos:line="212" pos:column="13">SQLITE_OK<pos:position pos:line="212" pos:column="22"/></name></expr> )<pos:position pos:line="212" pos:column="24"/></condition><then><block pos:line="212" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="213" pos:column="7">sqlite3DbFree<pos:position pos:line="213" pos:column="20"/></name><argument_list pos:line="213" pos:column="20">(<argument><expr><name pos:line="213" pos:column="21">db<pos:position pos:line="213" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="25">zMaster<pos:position pos:line="213" pos:column="32"/></name></expr></argument>)<pos:position pos:line="213" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="34"/></expr_stmt>
      <return pos:line="214" pos:column="7">return <expr><name pos:line="214" pos:column="14">rc<pos:position pos:line="214" pos:column="16"/></name></expr>;<pos:position pos:line="214" pos:column="17"/></return>
    }<pos:position pos:line="215" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="217" pos:column="5">/* Delete the master journal file. This commits the transaction. After
    ** doing this the directory is synced again before any individual
    ** transaction files are deleted.
    */</comment>
    <expr_stmt><expr><name pos:line="221" pos:column="5">rc<pos:position pos:line="221" pos:column="7"/></name> <operator pos:line="221" pos:column="8">=<pos:position pos:line="221" pos:column="9"/></operator> <call><name pos:line="221" pos:column="10">sqlite3OsDelete<pos:position pos:line="221" pos:column="25"/></name><argument_list pos:line="221" pos:column="25">(<argument><expr><name pos:line="221" pos:column="26">pVfs<pos:position pos:line="221" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="32">zMaster<pos:position pos:line="221" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="221" pos:column="41">1<pos:position pos:line="221" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="222" pos:column="5">sqlite3DbFree<pos:position pos:line="222" pos:column="18"/></name><argument_list pos:line="222" pos:column="18">(<argument><expr><name pos:line="222" pos:column="19">db<pos:position pos:line="222" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="222" pos:column="23">zMaster<pos:position pos:line="222" pos:column="30"/></name></expr></argument>)<pos:position pos:line="222" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="223" pos:column="5">zMaster<pos:position pos:line="223" pos:column="12"/></name> <operator pos:line="223" pos:column="13">=<pos:position pos:line="223" pos:column="14"/></operator> <literal type="number" pos:line="223" pos:column="15">0<pos:position pos:line="223" pos:column="16"/></literal></expr>;<pos:position pos:line="223" pos:column="17"/></expr_stmt>
    <if pos:line="224" pos:column="5">if<condition pos:line="224" pos:column="7">( <expr><name pos:line="224" pos:column="9">rc<pos:position pos:line="224" pos:column="11"/></name></expr> )<pos:position pos:line="224" pos:column="13"/></condition><then><block pos:line="224" pos:column="13">{
      <return pos:line="225" pos:column="7">return <expr><name pos:line="225" pos:column="14">rc<pos:position pos:line="225" pos:column="16"/></name></expr>;<pos:position pos:line="225" pos:column="17"/></return>
    }<pos:position pos:line="226" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="228" pos:column="5">/* All files and directories have already been synced, so the following
    ** calls to sqlite3BtreeCommitPhaseTwo() are only closing files and
    ** deleting or truncating journals. If something goes wrong while
    ** this is happening we don't really care. The integrity of the
    ** transaction is already guaranteed, but some stray 'cold' journals
    ** may be lying around. Returning an error code won't help matters.
    */</comment>
    <expr_stmt><expr><call><name pos:line="235" pos:column="5">disable_simulated_io_errors<pos:position pos:line="235" pos:column="32"/></name><argument_list pos:line="235" pos:column="32">()<pos:position pos:line="235" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="236" pos:column="5">sqlite3BeginBenignMalloc<pos:position pos:line="236" pos:column="29"/></name><argument_list pos:line="236" pos:column="29">()<pos:position pos:line="236" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="32"/></expr_stmt>
    <for pos:line="237" pos:column="5">for<control pos:line="237" pos:column="8">(<init><expr><name pos:line="237" pos:column="9">i<pos:position pos:line="237" pos:column="10"/></name><operator pos:line="237" pos:column="10">=<pos:position pos:line="237" pos:column="11"/></operator><literal type="number" pos:line="237" pos:column="11">0<pos:position pos:line="237" pos:column="12"/></literal></expr>;<pos:position pos:line="237" pos:column="13"/></init> <condition><expr><name pos:line="237" pos:column="14">i<pos:position pos:line="237" pos:column="15"/></name><operator pos:line="237" pos:column="15">&lt;<pos:position pos:line="237" pos:column="19"/></operator><name><name pos:line="237" pos:column="16">db<pos:position pos:line="237" pos:column="18"/></name><operator pos:line="237" pos:column="18">-&gt;<pos:position pos:line="237" pos:column="23"/></operator><name pos:line="237" pos:column="20">nDb<pos:position pos:line="237" pos:column="23"/></name></name></expr>;<pos:position pos:line="237" pos:column="24"/></condition> <incr><expr><name pos:line="237" pos:column="25">i<pos:position pos:line="237" pos:column="26"/></name><operator pos:line="237" pos:column="26">++<pos:position pos:line="237" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="237" pos:column="29"/></control><block pos:line="237" pos:column="29">{ 
      <decl_stmt><decl><type><name pos:line="238" pos:column="7">Btree<pos:position pos:line="238" pos:column="12"/></name> <modifier pos:line="238" pos:column="13">*<pos:position pos:line="238" pos:column="14"/></modifier></type><name pos:line="238" pos:column="14">pBt<pos:position pos:line="238" pos:column="17"/></name> <init pos:line="238" pos:column="18">= <expr><name><name pos:line="238" pos:column="20">db<pos:position pos:line="238" pos:column="22"/></name><operator pos:line="238" pos:column="22">-&gt;<pos:position pos:line="238" pos:column="27"/></operator><name pos:line="238" pos:column="24">aDb<pos:position pos:line="238" pos:column="27"/></name><index pos:line="238" pos:column="27">[<expr><name pos:line="238" pos:column="28">i<pos:position pos:line="238" pos:column="29"/></name></expr>]<pos:position pos:line="238" pos:column="30"/></index></name><operator pos:line="238" pos:column="30">.<pos:position pos:line="238" pos:column="31"/></operator><name pos:line="238" pos:column="31">pBt<pos:position pos:line="238" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="238" pos:column="35"/></decl_stmt>
      <if pos:line="239" pos:column="7">if<condition pos:line="239" pos:column="9">( <expr><name pos:line="239" pos:column="11">pBt<pos:position pos:line="239" pos:column="14"/></name></expr> )<pos:position pos:line="239" pos:column="16"/></condition><then><block pos:line="239" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="240" pos:column="9">sqlite3BtreeCommitPhaseTwo<pos:position pos:line="240" pos:column="35"/></name><argument_list pos:line="240" pos:column="35">(<argument><expr><name pos:line="240" pos:column="36">pBt<pos:position pos:line="240" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="240" pos:column="41">1<pos:position pos:line="240" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="240" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="241" pos:column="8"/></block></then></if>
    }<pos:position pos:line="242" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="243" pos:column="5">sqlite3EndBenignMalloc<pos:position pos:line="243" pos:column="27"/></name><argument_list pos:line="243" pos:column="27">()<pos:position pos:line="243" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="244" pos:column="5">enable_simulated_io_errors<pos:position pos:line="244" pos:column="31"/></name><argument_list pos:line="244" pos:column="31">()<pos:position pos:line="244" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="246" pos:column="5">sqlite3VtabCommit<pos:position pos:line="246" pos:column="22"/></name><argument_list pos:line="246" pos:column="22">(<argument><expr><name pos:line="246" pos:column="23">db<pos:position pos:line="246" pos:column="25"/></name></expr></argument>)<pos:position pos:line="246" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="247" pos:column="4"/></block></else></if>
<cpp:endif pos:line="248" pos:column="1">#<cpp:directive pos:line="248" pos:column="2">endif<pos:position pos:line="248" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="250" pos:column="3">return <expr><name pos:line="250" pos:column="10">rc<pos:position pos:line="250" pos:column="12"/></name></expr>;<pos:position pos:line="250" pos:column="13"/></return>
}<pos:position pos:line="251" pos:column="2"/></block></function></unit>

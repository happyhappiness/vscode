<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_198.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sqlite3RunParser<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">Parse<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">pParse<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">zSql<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier><modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">pzErrMsg<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list><block pos:line="1" pos:column="71">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">nErr<pos:position pos:line="2" pos:column="11"/></name> <init pos:line="2" pos:column="12">= <expr><literal type="number" pos:line="2" pos:column="14">0<pos:position pos:line="2" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>                   <comment type="block" pos:line="2" pos:column="35">/* Number of errors encountered */</comment>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>                          <comment type="block" pos:line="3" pos:column="35">/* Loop counter */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">void<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">pEngine<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>                  <comment type="block" pos:line="4" pos:column="35">/* The LEMON-generated LALR(1) parser */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">tokenType<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>                  <comment type="block" pos:line="5" pos:column="35">/* type of the next token */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">lastTokenParsed<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><operator pos:line="6" pos:column="25">-<pos:position pos:line="6" pos:column="26"/></operator><literal type="number" pos:line="6" pos:column="26">1<pos:position pos:line="6" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>       <comment type="block" pos:line="6" pos:column="35">/* type of the previous token */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">u8<pos:position pos:line="7" pos:column="5"/></name></type> <name pos:line="7" pos:column="6">enableLookaside<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>             <comment type="block" pos:line="7" pos:column="35">/* Saved value of db-&gt;lookaside.bEnabled */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">sqlite3<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">db<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name><name pos:line="8" pos:column="17">pParse<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">db<pos:position pos:line="8" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>       <comment type="block" pos:line="8" pos:column="35">/* The database connection */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">mxSqlLen<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>                   <comment type="block" pos:line="9" pos:column="35">/* Max length of an SQL string */</comment>


  <expr_stmt><expr><name pos:line="12" pos:column="3">mxSqlLen<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <name><name pos:line="12" pos:column="14">db<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">aLimit<pos:position pos:line="12" pos:column="24"/></name><index pos:line="12" pos:column="24">[<expr><name pos:line="12" pos:column="25">SQLITE_LIMIT_SQL_LENGTH<pos:position pos:line="12" pos:column="48"/></name></expr>]<pos:position pos:line="12" pos:column="49"/></index></name></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">( <expr><name><name pos:line="13" pos:column="7">db<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">activeVdbeCnt<pos:position pos:line="13" pos:column="24"/></name></name><operator pos:line="13" pos:column="24">==<pos:position pos:line="13" pos:column="26"/></operator><literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr> )<pos:position pos:line="13" pos:column="29"/></condition><then><block pos:line="13" pos:column="29">{
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">db<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">u1<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">isInterrupted<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <literal type="number" pos:line="14" pos:column="28">0<pos:position pos:line="14" pos:column="29"/></literal></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">pParse<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">rc<pos:position pos:line="16" pos:column="13"/></name></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">SQLITE_OK<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">pParse<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">zTail<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name><name pos:line="17" pos:column="19">pParse<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">zSql<pos:position pos:line="17" pos:column="31"/></name></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">zSql<pos:position pos:line="17" pos:column="38"/></name></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">i<pos:position pos:line="18" pos:column="4"/></name> <operator pos:line="18" pos:column="5">=<pos:position pos:line="18" pos:column="6"/></operator> <literal type="number" pos:line="18" pos:column="7">0<pos:position pos:line="18" pos:column="8"/></literal></expr>;<pos:position pos:line="18" pos:column="9"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">assert<pos:position pos:line="19" pos:column="9"/></name><argument_list pos:line="19" pos:column="9">( <argument><expr><name pos:line="19" pos:column="11">pzErrMsg<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">!=<pos:position pos:line="19" pos:column="21"/></operator><literal type="number" pos:line="19" pos:column="21">0<pos:position pos:line="19" pos:column="22"/></literal></expr></argument> )<pos:position pos:line="19" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">pEngine<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <call><name pos:line="20" pos:column="13">sqlite3ParserAlloc<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><operator pos:line="20" pos:column="32">(<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">void<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">*<pos:position pos:line="20" pos:column="38"/></operator><call pos:line="20" pos:column="38">(<modifier pos:line="20" pos:column="39">*<pos:position pos:line="20" pos:column="40"/></modifier>)<argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">size_t<pos:position pos:line="20" pos:column="48"/></name></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call><operator pos:line="20" pos:column="49">)<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">sqlite3Malloc<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">( <expr><name pos:line="21" pos:column="7">pEngine<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">==<pos:position pos:line="21" pos:column="16"/></operator><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr> )<pos:position pos:line="21" pos:column="19"/></condition><then><block pos:line="21" pos:column="19">{
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">db<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">mallocFailed<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <literal type="number" pos:line="22" pos:column="24">1<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">SQLITE_NOMEM<pos:position pos:line="23" pos:column="24"/></name></expr>;<pos:position pos:line="23" pos:column="25"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">assert<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">( <argument><expr><name><name pos:line="25" pos:column="11">pParse<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">pNewTable<pos:position pos:line="25" pos:column="28"/></name></name><operator pos:line="25" pos:column="28">==<pos:position pos:line="25" pos:column="30"/></operator><literal type="number" pos:line="25" pos:column="30">0<pos:position pos:line="25" pos:column="31"/></literal></expr></argument> )<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">assert<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">( <argument><expr><name><name pos:line="26" pos:column="11">pParse<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">pNewTrigger<pos:position pos:line="26" pos:column="30"/></name></name><operator pos:line="26" pos:column="30">==<pos:position pos:line="26" pos:column="32"/></operator><literal type="number" pos:line="26" pos:column="32">0<pos:position pos:line="26" pos:column="33"/></literal></expr></argument> )<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">assert<pos:position pos:line="27" pos:column="9"/></name><argument_list pos:line="27" pos:column="9">( <argument><expr><name><name pos:line="27" pos:column="11">pParse<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">nVar<pos:position pos:line="27" pos:column="23"/></name></name><operator pos:line="27" pos:column="23">==<pos:position pos:line="27" pos:column="25"/></operator><literal type="number" pos:line="27" pos:column="25">0<pos:position pos:line="27" pos:column="26"/></literal></expr></argument> )<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">assert<pos:position pos:line="28" pos:column="9"/></name><argument_list pos:line="28" pos:column="9">( <argument><expr><name><name pos:line="28" pos:column="11">pParse<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">nVarExpr<pos:position pos:line="28" pos:column="27"/></name></name><operator pos:line="28" pos:column="27">==<pos:position pos:line="28" pos:column="29"/></operator><literal type="number" pos:line="28" pos:column="29">0<pos:position pos:line="28" pos:column="30"/></literal></expr></argument> )<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">assert<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">( <argument><expr><name><name pos:line="29" pos:column="11">pParse<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">nVarExprAlloc<pos:position pos:line="29" pos:column="32"/></name></name><operator pos:line="29" pos:column="32">==<pos:position pos:line="29" pos:column="34"/></operator><literal type="number" pos:line="29" pos:column="34">0<pos:position pos:line="29" pos:column="35"/></literal></expr></argument> )<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">assert<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">( <argument><expr><name><name pos:line="30" pos:column="11">pParse<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">apVarExpr<pos:position pos:line="30" pos:column="28"/></name></name><operator pos:line="30" pos:column="28">==<pos:position pos:line="30" pos:column="30"/></operator><literal type="number" pos:line="30" pos:column="30">0<pos:position pos:line="30" pos:column="31"/></literal></expr></argument> )<pos:position pos:line="30" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="31" pos:column="3">enableLookaside<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name><name pos:line="31" pos:column="21">db<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">lookaside<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">.<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="35">bEnabled<pos:position pos:line="31" pos:column="43"/></name></name></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt>
  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">( <expr><name><name pos:line="32" pos:column="7">db<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">lookaside<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">.<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">pStart<pos:position pos:line="32" pos:column="27"/></name></name></expr> )<pos:position pos:line="32" pos:column="29"/></condition><then pos:line="32" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="30">db<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">lookaside<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">.<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="44">bEnabled<pos:position pos:line="32" pos:column="52"/></name></name> <operator pos:line="32" pos:column="53">=<pos:position pos:line="32" pos:column="54"/></operator> <literal type="number" pos:line="32" pos:column="55">1<pos:position pos:line="32" pos:column="56"/></literal></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt></block></then></if>
  <while pos:line="33" pos:column="3">while<condition pos:line="33" pos:column="8">( <expr><operator pos:line="33" pos:column="10">!<pos:position pos:line="33" pos:column="11"/></operator><name><name pos:line="33" pos:column="11">db<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">mallocFailed<pos:position pos:line="33" pos:column="27"/></name></name> <operator pos:line="33" pos:column="28">&amp;&amp;<pos:position pos:line="33" pos:column="38"/></operator> <name><name pos:line="33" pos:column="31">zSql<pos:position pos:line="33" pos:column="35"/></name><index pos:line="33" pos:column="35">[<expr><name pos:line="33" pos:column="36">i<pos:position pos:line="33" pos:column="37"/></name></expr>]<pos:position pos:line="33" pos:column="38"/></index></name><operator pos:line="33" pos:column="38">!=<pos:position pos:line="33" pos:column="40"/></operator><literal type="number" pos:line="33" pos:column="40">0<pos:position pos:line="33" pos:column="41"/></literal></expr> )<pos:position pos:line="33" pos:column="43"/></condition><block pos:line="33" pos:column="43">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">assert<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">( <argument><expr><name pos:line="34" pos:column="13">i<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">&gt;=<pos:position pos:line="34" pos:column="19"/></operator><literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr></argument> )<pos:position pos:line="34" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">pParse<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">sLastToken<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">.<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">z<pos:position pos:line="35" pos:column="25"/></name></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <operator pos:line="35" pos:column="28">&amp;<pos:position pos:line="35" pos:column="33"/></operator><name><name pos:line="35" pos:column="29">zSql<pos:position pos:line="35" pos:column="33"/></name><index pos:line="35" pos:column="33">[<expr><name pos:line="35" pos:column="34">i<pos:position pos:line="35" pos:column="35"/></name></expr>]<pos:position pos:line="35" pos:column="36"/></index></name></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">pParse<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">sLastToken<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">.<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="24">n<pos:position pos:line="36" pos:column="25"/></name></name> <operator pos:line="36" pos:column="26">=<pos:position pos:line="36" pos:column="27"/></operator> <call><name pos:line="36" pos:column="28">sqlite3GetToken<pos:position pos:line="36" pos:column="43"/></name><argument_list pos:line="36" pos:column="43">(<argument><expr><operator pos:line="36" pos:column="44">(<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="45">unsigned<pos:position pos:line="36" pos:column="53"/></name> <name pos:line="36" pos:column="54">char<pos:position pos:line="36" pos:column="58"/></name><operator pos:line="36" pos:column="58">*<pos:position pos:line="36" pos:column="59"/></operator><operator pos:line="36" pos:column="59">)<pos:position pos:line="36" pos:column="60"/></operator><operator pos:line="36" pos:column="60">&amp;<pos:position pos:line="36" pos:column="65"/></operator><name><name pos:line="36" pos:column="61">zSql<pos:position pos:line="36" pos:column="65"/></name><index pos:line="36" pos:column="65">[<expr><name pos:line="36" pos:column="66">i<pos:position pos:line="36" pos:column="67"/></name></expr>]<pos:position pos:line="36" pos:column="68"/></index></name></expr></argument>,<argument><expr><operator pos:line="36" pos:column="69">&amp;<pos:position pos:line="36" pos:column="74"/></operator><name pos:line="36" pos:column="70">tokenType<pos:position pos:line="36" pos:column="79"/></name></expr></argument>)<pos:position pos:line="36" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">i<pos:position pos:line="37" pos:column="6"/></name> <operator pos:line="37" pos:column="7">+=<pos:position pos:line="37" pos:column="9"/></operator> <name><name pos:line="37" pos:column="10">pParse<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">sLastToken<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">.<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="29">n<pos:position pos:line="37" pos:column="30"/></name></name></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
    <if pos:line="38" pos:column="5">if<condition pos:line="38" pos:column="7">( <expr><name pos:line="38" pos:column="9">i<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">mxSqlLen<pos:position pos:line="38" pos:column="19"/></name></expr> )<pos:position pos:line="38" pos:column="21"/></condition><then><block pos:line="38" pos:column="21">{
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">pParse<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">rc<pos:position pos:line="39" pos:column="17"/></name></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <name pos:line="39" pos:column="20">SQLITE_TOOBIG<pos:position pos:line="39" pos:column="33"/></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
      <break pos:line="40" pos:column="7">break;<pos:position pos:line="40" pos:column="13"/></break>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    <switch pos:line="42" pos:column="5">switch<condition pos:line="42" pos:column="11">( <expr><name pos:line="42" pos:column="13">tokenType<pos:position pos:line="42" pos:column="22"/></name></expr> )<pos:position pos:line="42" pos:column="24"/></condition><block pos:line="42" pos:column="24">{
      <case pos:line="43" pos:column="7">case <expr><name pos:line="43" pos:column="12">TK_SPACE<pos:position pos:line="43" pos:column="20"/></name></expr>:<pos:position pos:line="43" pos:column="21"/></case> <block pos:line="43" pos:column="22">{
        <if pos:line="44" pos:column="9">if<condition pos:line="44" pos:column="11">( <expr><name><name pos:line="44" pos:column="13">db<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">-&gt;<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="17">u1<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">isInterrupted<pos:position pos:line="44" pos:column="33"/></name></name></expr> )<pos:position pos:line="44" pos:column="35"/></condition><then><block pos:line="44" pos:column="35">{
          <expr_stmt><expr><call><name pos:line="45" pos:column="11">sqlite3ErrorMsg<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">pParse<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="35">"interrupt"<pos:position pos:line="45" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="46" pos:column="11">pParse<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">rc<pos:position pos:line="46" pos:column="21"/></name></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">SQLITE_INTERRUPT<pos:position pos:line="46" pos:column="40"/></name></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
          <goto pos:line="47" pos:column="11">goto <name pos:line="47" pos:column="16">abort_parse<pos:position pos:line="47" pos:column="27"/></name>;<pos:position pos:line="47" pos:column="28"/></goto>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
        <break pos:line="49" pos:column="9">break;<pos:position pos:line="49" pos:column="15"/></break>
      }<pos:position pos:line="50" pos:column="8"/></block>
      <case pos:line="51" pos:column="7">case <expr><name pos:line="51" pos:column="12">TK_ILLEGAL<pos:position pos:line="51" pos:column="22"/></name></expr>:<pos:position pos:line="51" pos:column="23"/></case> <block pos:line="51" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">sqlite3DbFree<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">db<pos:position pos:line="52" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="27">*<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">pzErrMsg<pos:position pos:line="52" pos:column="36"/></name></expr></argument>)<pos:position pos:line="52" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="53" pos:column="9">*<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">pzErrMsg<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <call><name pos:line="53" pos:column="21">sqlite3MPrintf<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><name pos:line="53" pos:column="36">db<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="40">"unrecognized token: \"%T\""<pos:position pos:line="53" pos:column="68"/></literal></expr></argument>,
                        <argument><expr><operator pos:line="54" pos:column="25">&amp;<pos:position pos:line="54" pos:column="30"/></operator><name><name pos:line="54" pos:column="26">pParse<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">-&gt;<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="34">sLastToken<pos:position pos:line="54" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="55" pos:column="9">nErr<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">++<pos:position pos:line="55" pos:column="15"/></operator></expr>;<pos:position pos:line="55" pos:column="16"/></expr_stmt>
        <goto pos:line="56" pos:column="9">goto <name pos:line="56" pos:column="14">abort_parse<pos:position pos:line="56" pos:column="25"/></name>;<pos:position pos:line="56" pos:column="26"/></goto>
      }<pos:position pos:line="57" pos:column="8"/></block>
      <case pos:line="58" pos:column="7">case <expr><name pos:line="58" pos:column="12">TK_SEMI<pos:position pos:line="58" pos:column="19"/></name></expr>:<pos:position pos:line="58" pos:column="20"/></case> <block pos:line="58" pos:column="21">{
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">pParse<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">-&gt;<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="17">zTail<pos:position pos:line="59" pos:column="22"/></name></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <operator pos:line="59" pos:column="25">&amp;<pos:position pos:line="59" pos:column="30"/></operator><name><name pos:line="59" pos:column="26">zSql<pos:position pos:line="59" pos:column="30"/></name><index pos:line="59" pos:column="30">[<expr><name pos:line="59" pos:column="31">i<pos:position pos:line="59" pos:column="32"/></name></expr>]<pos:position pos:line="59" pos:column="33"/></index></name></expr>;<pos:position pos:line="59" pos:column="34"/></expr_stmt>
        <comment type="block" pos:line="60" pos:column="9">/* Fall thru into the default case */</comment>
      }<pos:position pos:line="61" pos:column="8"/></block>
      <default pos:line="62" pos:column="7">default:<pos:position pos:line="62" pos:column="15"/></default> <block pos:line="62" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">sqlite3Parser<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">pEngine<pos:position pos:line="63" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="32">tokenType<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="43">pParse<pos:position pos:line="63" pos:column="49"/></name><operator pos:line="63" pos:column="49">-&gt;<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="51">sLastToken<pos:position pos:line="63" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="63">pParse<pos:position pos:line="63" pos:column="69"/></name></expr></argument>)<pos:position pos:line="63" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><name pos:line="64" pos:column="9">lastTokenParsed<pos:position pos:line="64" pos:column="24"/></name> <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <name pos:line="64" pos:column="27">tokenType<pos:position pos:line="64" pos:column="36"/></name></expr>;<pos:position pos:line="64" pos:column="37"/></expr_stmt>
        <if pos:line="65" pos:column="9">if<condition pos:line="65" pos:column="11">( <expr><name><name pos:line="65" pos:column="13">pParse<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">-&gt;<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="21">rc<pos:position pos:line="65" pos:column="23"/></name></name><operator pos:line="65" pos:column="23">!=<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="25">SQLITE_OK<pos:position pos:line="65" pos:column="34"/></name></expr> )<pos:position pos:line="65" pos:column="36"/></condition><then><block pos:line="65" pos:column="36">{
          <goto pos:line="66" pos:column="11">goto <name pos:line="66" pos:column="16">abort_parse<pos:position pos:line="66" pos:column="27"/></name>;<pos:position pos:line="66" pos:column="28"/></goto>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>
        <break pos:line="68" pos:column="9">break;<pos:position pos:line="68" pos:column="15"/></break>
      }<pos:position pos:line="69" pos:column="8"/></block>
    }<pos:position pos:line="70" pos:column="6"/></block></switch>
  }<pos:position pos:line="71" pos:column="4"/></block></while>
<label><name pos:line="72" pos:column="1">abort_parse<pos:position pos:line="72" pos:column="12"/></name>:<pos:position pos:line="72" pos:column="13"/></label>
  <if pos:line="73" pos:column="3">if<condition pos:line="73" pos:column="5">( <expr><name><name pos:line="73" pos:column="7">zSql<pos:position pos:line="73" pos:column="11"/></name><index pos:line="73" pos:column="11">[<expr><name pos:line="73" pos:column="12">i<pos:position pos:line="73" pos:column="13"/></name></expr>]<pos:position pos:line="73" pos:column="14"/></index></name><operator pos:line="73" pos:column="14">==<pos:position pos:line="73" pos:column="16"/></operator><literal type="number" pos:line="73" pos:column="16">0<pos:position pos:line="73" pos:column="17"/></literal> <operator pos:line="73" pos:column="18">&amp;&amp;<pos:position pos:line="73" pos:column="28"/></operator> <name pos:line="73" pos:column="21">nErr<pos:position pos:line="73" pos:column="25"/></name><operator pos:line="73" pos:column="25">==<pos:position pos:line="73" pos:column="27"/></operator><literal type="number" pos:line="73" pos:column="27">0<pos:position pos:line="73" pos:column="28"/></literal> <operator pos:line="73" pos:column="29">&amp;&amp;<pos:position pos:line="73" pos:column="39"/></operator> <name><name pos:line="73" pos:column="32">pParse<pos:position pos:line="73" pos:column="38"/></name><operator pos:line="73" pos:column="38">-&gt;<pos:position pos:line="73" pos:column="43"/></operator><name pos:line="73" pos:column="40">rc<pos:position pos:line="73" pos:column="42"/></name></name><operator pos:line="73" pos:column="42">==<pos:position pos:line="73" pos:column="44"/></operator><name pos:line="73" pos:column="44">SQLITE_OK<pos:position pos:line="73" pos:column="53"/></name></expr> )<pos:position pos:line="73" pos:column="55"/></condition><then><block pos:line="73" pos:column="55">{
    <if pos:line="74" pos:column="5">if<condition pos:line="74" pos:column="7">( <expr><name pos:line="74" pos:column="9">lastTokenParsed<pos:position pos:line="74" pos:column="24"/></name><operator pos:line="74" pos:column="24">!=<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="26">TK_SEMI<pos:position pos:line="74" pos:column="33"/></name></expr> )<pos:position pos:line="74" pos:column="35"/></condition><then><block pos:line="74" pos:column="35">{
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">sqlite3Parser<pos:position pos:line="75" pos:column="20"/></name><argument_list pos:line="75" pos:column="20">(<argument><expr><name pos:line="75" pos:column="21">pEngine<pos:position pos:line="75" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="30">TK_SEMI<pos:position pos:line="75" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="39">pParse<pos:position pos:line="75" pos:column="45"/></name><operator pos:line="75" pos:column="45">-&gt;<pos:position pos:line="75" pos:column="50"/></operator><name pos:line="75" pos:column="47">sLastToken<pos:position pos:line="75" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="59">pParse<pos:position pos:line="75" pos:column="65"/></name></expr></argument>)<pos:position pos:line="75" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="76" pos:column="7">pParse<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">-&gt;<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="15">zTail<pos:position pos:line="76" pos:column="20"/></name></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <operator pos:line="76" pos:column="23">&amp;<pos:position pos:line="76" pos:column="28"/></operator><name><name pos:line="76" pos:column="24">zSql<pos:position pos:line="76" pos:column="28"/></name><index pos:line="76" pos:column="28">[<expr><name pos:line="76" pos:column="29">i<pos:position pos:line="76" pos:column="30"/></name></expr>]<pos:position pos:line="76" pos:column="31"/></index></name></expr>;<pos:position pos:line="76" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">sqlite3Parser<pos:position pos:line="78" pos:column="18"/></name><argument_list pos:line="78" pos:column="18">(<argument><expr><name pos:line="78" pos:column="19">pEngine<pos:position pos:line="78" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="28">0<pos:position pos:line="78" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="31">pParse<pos:position pos:line="78" pos:column="37"/></name><operator pos:line="78" pos:column="37">-&gt;<pos:position pos:line="78" pos:column="42"/></operator><name pos:line="78" pos:column="39">sLastToken<pos:position pos:line="78" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="51">pParse<pos:position pos:line="78" pos:column="57"/></name></expr></argument>)<pos:position pos:line="78" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="59"/></expr_stmt>
  }<pos:position pos:line="79" pos:column="4"/></block></then></if>
<cpp:ifdef pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">ifdef<pos:position pos:line="80" pos:column="7"/></cpp:directive> <name pos:line="80" pos:column="8">YYTRACKMAXSTACKDEPTH<pos:position pos:line="80" pos:column="28"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">sqlite3StatusSet<pos:position pos:line="81" pos:column="19"/></name><argument_list pos:line="81" pos:column="19">(<argument><expr><name pos:line="81" pos:column="20">SQLITE_STATUS_PARSER_STACK<pos:position pos:line="81" pos:column="46"/></name></expr></argument>,
      <argument><expr><call><name pos:line="82" pos:column="7">sqlite3ParserStackPeak<pos:position pos:line="82" pos:column="29"/></name><argument_list pos:line="82" pos:column="29">(<argument><expr><name pos:line="82" pos:column="30">pEngine<pos:position pos:line="82" pos:column="37"/></name></expr></argument>)<pos:position pos:line="82" pos:column="38"/></argument_list></call></expr></argument>
  )<pos:position pos:line="83" pos:column="4"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="5"/></expr_stmt>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif<pos:position pos:line="84" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="84" pos:column="8">/* YYDEBUG */</comment>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">sqlite3ParserFree<pos:position pos:line="85" pos:column="20"/></name><argument_list pos:line="85" pos:column="20">(<argument><expr><name pos:line="85" pos:column="21">pEngine<pos:position pos:line="85" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="30">sqlite3_free<pos:position pos:line="85" pos:column="42"/></name></expr></argument>)<pos:position pos:line="85" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="86" pos:column="3">db<pos:position pos:line="86" pos:column="5"/></name><operator pos:line="86" pos:column="5">-&gt;<pos:position pos:line="86" pos:column="10"/></operator><name pos:line="86" pos:column="7">lookaside<pos:position pos:line="86" pos:column="16"/></name><operator pos:line="86" pos:column="16">.<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="17">bEnabled<pos:position pos:line="86" pos:column="25"/></name></name> <operator pos:line="86" pos:column="26">=<pos:position pos:line="86" pos:column="27"/></operator> <name pos:line="86" pos:column="28">enableLookaside<pos:position pos:line="86" pos:column="43"/></name></expr>;<pos:position pos:line="86" pos:column="44"/></expr_stmt>
  <if pos:line="87" pos:column="3">if<condition pos:line="87" pos:column="5">( <expr><name><name pos:line="87" pos:column="7">db<pos:position pos:line="87" pos:column="9"/></name><operator pos:line="87" pos:column="9">-&gt;<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="11">mallocFailed<pos:position pos:line="87" pos:column="23"/></name></name></expr> )<pos:position pos:line="87" pos:column="25"/></condition><then><block pos:line="87" pos:column="25">{
    <expr_stmt><expr><name><name pos:line="88" pos:column="5">pParse<pos:position pos:line="88" pos:column="11"/></name><operator pos:line="88" pos:column="11">-&gt;<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="13">rc<pos:position pos:line="88" pos:column="15"/></name></name> <operator pos:line="88" pos:column="16">=<pos:position pos:line="88" pos:column="17"/></operator> <name pos:line="88" pos:column="18">SQLITE_NOMEM<pos:position pos:line="88" pos:column="30"/></name></expr>;<pos:position pos:line="88" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>
  <if pos:line="90" pos:column="3">if<condition pos:line="90" pos:column="5">( <expr><name><name pos:line="90" pos:column="7">pParse<pos:position pos:line="90" pos:column="13"/></name><operator pos:line="90" pos:column="13">-&gt;<pos:position pos:line="90" pos:column="18"/></operator><name pos:line="90" pos:column="15">rc<pos:position pos:line="90" pos:column="17"/></name></name><operator pos:line="90" pos:column="17">!=<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="19">SQLITE_OK<pos:position pos:line="90" pos:column="28"/></name> <operator pos:line="90" pos:column="29">&amp;&amp;<pos:position pos:line="90" pos:column="39"/></operator> <name><name pos:line="90" pos:column="32">pParse<pos:position pos:line="90" pos:column="38"/></name><operator pos:line="90" pos:column="38">-&gt;<pos:position pos:line="90" pos:column="43"/></operator><name pos:line="90" pos:column="40">rc<pos:position pos:line="90" pos:column="42"/></name></name><operator pos:line="90" pos:column="42">!=<pos:position pos:line="90" pos:column="44"/></operator><name pos:line="90" pos:column="44">SQLITE_DONE<pos:position pos:line="90" pos:column="55"/></name> <operator pos:line="90" pos:column="56">&amp;&amp;<pos:position pos:line="90" pos:column="66"/></operator> <name><name pos:line="90" pos:column="59">pParse<pos:position pos:line="90" pos:column="65"/></name><operator pos:line="90" pos:column="65">-&gt;<pos:position pos:line="90" pos:column="70"/></operator><name pos:line="90" pos:column="67">zErrMsg<pos:position pos:line="90" pos:column="74"/></name></name><operator pos:line="90" pos:column="74">==<pos:position pos:line="90" pos:column="76"/></operator><literal type="number" pos:line="90" pos:column="76">0<pos:position pos:line="90" pos:column="77"/></literal></expr> )<pos:position pos:line="90" pos:column="79"/></condition><then><block pos:line="90" pos:column="79">{
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">sqlite3SetString<pos:position pos:line="91" pos:column="21"/></name><argument_list pos:line="91" pos:column="21">(<argument><expr><operator pos:line="91" pos:column="22">&amp;<pos:position pos:line="91" pos:column="27"/></operator><name><name pos:line="91" pos:column="23">pParse<pos:position pos:line="91" pos:column="29"/></name><operator pos:line="91" pos:column="29">-&gt;<pos:position pos:line="91" pos:column="34"/></operator><name pos:line="91" pos:column="31">zErrMsg<pos:position pos:line="91" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="40">db<pos:position pos:line="91" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="44">"%s"<pos:position pos:line="91" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="91" pos:column="50">sqlite3ErrStr<pos:position pos:line="91" pos:column="63"/></name><argument_list pos:line="91" pos:column="63">(<argument><expr><name><name pos:line="91" pos:column="64">pParse<pos:position pos:line="91" pos:column="70"/></name><operator pos:line="91" pos:column="70">-&gt;<pos:position pos:line="91" pos:column="75"/></operator><name pos:line="91" pos:column="72">rc<pos:position pos:line="91" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="93" pos:column="3">assert<pos:position pos:line="93" pos:column="9"/></name><argument_list pos:line="93" pos:column="9">( <argument><expr><name pos:line="93" pos:column="11">pzErrMsg<pos:position pos:line="93" pos:column="19"/></name><operator pos:line="93" pos:column="19">!=<pos:position pos:line="93" pos:column="21"/></operator><literal type="number" pos:line="93" pos:column="21">0<pos:position pos:line="93" pos:column="22"/></literal></expr></argument> )<pos:position pos:line="93" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="25"/></expr_stmt>
  <if pos:line="94" pos:column="3">if<condition pos:line="94" pos:column="5">( <expr><name><name pos:line="94" pos:column="7">pParse<pos:position pos:line="94" pos:column="13"/></name><operator pos:line="94" pos:column="13">-&gt;<pos:position pos:line="94" pos:column="18"/></operator><name pos:line="94" pos:column="15">zErrMsg<pos:position pos:line="94" pos:column="22"/></name></name></expr> )<pos:position pos:line="94" pos:column="24"/></condition><then><block pos:line="94" pos:column="24">{
    <expr_stmt><expr><operator pos:line="95" pos:column="5">*<pos:position pos:line="95" pos:column="6"/></operator><name pos:line="95" pos:column="6">pzErrMsg<pos:position pos:line="95" pos:column="14"/></name> <operator pos:line="95" pos:column="15">=<pos:position pos:line="95" pos:column="16"/></operator> <name><name pos:line="95" pos:column="17">pParse<pos:position pos:line="95" pos:column="23"/></name><operator pos:line="95" pos:column="23">-&gt;<pos:position pos:line="95" pos:column="28"/></operator><name pos:line="95" pos:column="25">zErrMsg<pos:position pos:line="95" pos:column="32"/></name></name></expr>;<pos:position pos:line="95" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="96" pos:column="5">pParse<pos:position pos:line="96" pos:column="11"/></name><operator pos:line="96" pos:column="11">-&gt;<pos:position pos:line="96" pos:column="16"/></operator><name pos:line="96" pos:column="13">zErrMsg<pos:position pos:line="96" pos:column="20"/></name></name> <operator pos:line="96" pos:column="21">=<pos:position pos:line="96" pos:column="22"/></operator> <literal type="number" pos:line="96" pos:column="23">0<pos:position pos:line="96" pos:column="24"/></literal></expr>;<pos:position pos:line="96" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="97" pos:column="5">nErr<pos:position pos:line="97" pos:column="9"/></name><operator pos:line="97" pos:column="9">++<pos:position pos:line="97" pos:column="11"/></operator></expr>;<pos:position pos:line="97" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="98" pos:column="4"/></block></then></if>
  <if pos:line="99" pos:column="3">if<condition pos:line="99" pos:column="5">( <expr><name><name pos:line="99" pos:column="7">pParse<pos:position pos:line="99" pos:column="13"/></name><operator pos:line="99" pos:column="13">-&gt;<pos:position pos:line="99" pos:column="18"/></operator><name pos:line="99" pos:column="15">pVdbe<pos:position pos:line="99" pos:column="20"/></name></name> <operator pos:line="99" pos:column="21">&amp;&amp;<pos:position pos:line="99" pos:column="31"/></operator> <name><name pos:line="99" pos:column="24">pParse<pos:position pos:line="99" pos:column="30"/></name><operator pos:line="99" pos:column="30">-&gt;<pos:position pos:line="99" pos:column="35"/></operator><name pos:line="99" pos:column="32">nErr<pos:position pos:line="99" pos:column="36"/></name></name><operator pos:line="99" pos:column="36">&gt;<pos:position pos:line="99" pos:column="40"/></operator><literal type="number" pos:line="99" pos:column="37">0<pos:position pos:line="99" pos:column="38"/></literal> <operator pos:line="99" pos:column="39">&amp;&amp;<pos:position pos:line="99" pos:column="49"/></operator> <name><name pos:line="99" pos:column="42">pParse<pos:position pos:line="99" pos:column="48"/></name><operator pos:line="99" pos:column="48">-&gt;<pos:position pos:line="99" pos:column="53"/></operator><name pos:line="99" pos:column="50">nested<pos:position pos:line="99" pos:column="56"/></name></name><operator pos:line="99" pos:column="56">==<pos:position pos:line="99" pos:column="58"/></operator><literal type="number" pos:line="99" pos:column="58">0<pos:position pos:line="99" pos:column="59"/></literal></expr> )<pos:position pos:line="99" pos:column="61"/></condition><then><block pos:line="99" pos:column="61">{
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">sqlite3VdbeDelete<pos:position pos:line="100" pos:column="22"/></name><argument_list pos:line="100" pos:column="22">(<argument><expr><name><name pos:line="100" pos:column="23">pParse<pos:position pos:line="100" pos:column="29"/></name><operator pos:line="100" pos:column="29">-&gt;<pos:position pos:line="100" pos:column="34"/></operator><name pos:line="100" pos:column="31">pVdbe<pos:position pos:line="100" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="101" pos:column="5">pParse<pos:position pos:line="101" pos:column="11"/></name><operator pos:line="101" pos:column="11">-&gt;<pos:position pos:line="101" pos:column="16"/></operator><name pos:line="101" pos:column="13">pVdbe<pos:position pos:line="101" pos:column="18"/></name></name> <operator pos:line="101" pos:column="19">=<pos:position pos:line="101" pos:column="20"/></operator> <literal type="number" pos:line="101" pos:column="21">0<pos:position pos:line="101" pos:column="22"/></literal></expr>;<pos:position pos:line="101" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="102" pos:column="4"/></block></then></if>
<cpp:ifndef pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">ifndef<pos:position pos:line="103" pos:column="8"/></cpp:directive> <name pos:line="103" pos:column="9">SQLITE_OMIT_SHARED_CACHE<pos:position pos:line="103" pos:column="33"/></name></cpp:ifndef>
  <if pos:line="104" pos:column="3">if<condition pos:line="104" pos:column="5">( <expr><name><name pos:line="104" pos:column="7">pParse<pos:position pos:line="104" pos:column="13"/></name><operator pos:line="104" pos:column="13">-&gt;<pos:position pos:line="104" pos:column="18"/></operator><name pos:line="104" pos:column="15">nested<pos:position pos:line="104" pos:column="21"/></name></name><operator pos:line="104" pos:column="21">==<pos:position pos:line="104" pos:column="23"/></operator><literal type="number" pos:line="104" pos:column="23">0<pos:position pos:line="104" pos:column="24"/></literal></expr> )<pos:position pos:line="104" pos:column="26"/></condition><then><block pos:line="104" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="105" pos:column="5">sqlite3DbFree<pos:position pos:line="105" pos:column="18"/></name><argument_list pos:line="105" pos:column="18">(<argument><expr><name pos:line="105" pos:column="19">db<pos:position pos:line="105" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="23">pParse<pos:position pos:line="105" pos:column="29"/></name><operator pos:line="105" pos:column="29">-&gt;<pos:position pos:line="105" pos:column="34"/></operator><name pos:line="105" pos:column="31">aTableLock<pos:position pos:line="105" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="106" pos:column="5">pParse<pos:position pos:line="106" pos:column="11"/></name><operator pos:line="106" pos:column="11">-&gt;<pos:position pos:line="106" pos:column="16"/></operator><name pos:line="106" pos:column="13">aTableLock<pos:position pos:line="106" pos:column="23"/></name></name> <operator pos:line="106" pos:column="24">=<pos:position pos:line="106" pos:column="25"/></operator> <literal type="number" pos:line="106" pos:column="26">0<pos:position pos:line="106" pos:column="27"/></literal></expr>;<pos:position pos:line="106" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="107" pos:column="5">pParse<pos:position pos:line="107" pos:column="11"/></name><operator pos:line="107" pos:column="11">-&gt;<pos:position pos:line="107" pos:column="16"/></operator><name pos:line="107" pos:column="13">nTableLock<pos:position pos:line="107" pos:column="23"/></name></name> <operator pos:line="107" pos:column="24">=<pos:position pos:line="107" pos:column="25"/></operator> <literal type="number" pos:line="107" pos:column="26">0<pos:position pos:line="107" pos:column="27"/></literal></expr>;<pos:position pos:line="107" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block></then></if>
<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif<pos:position pos:line="109" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">ifndef<pos:position pos:line="110" pos:column="8"/></cpp:directive> <name pos:line="110" pos:column="9">SQLITE_OMIT_VIRTUALTABLE<pos:position pos:line="110" pos:column="33"/></name></cpp:ifndef>
  <expr_stmt><expr><call><name pos:line="111" pos:column="3">sqlite3DbFree<pos:position pos:line="111" pos:column="16"/></name><argument_list pos:line="111" pos:column="16">(<argument><expr><name pos:line="111" pos:column="17">db<pos:position pos:line="111" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="21">pParse<pos:position pos:line="111" pos:column="27"/></name><operator pos:line="111" pos:column="27">-&gt;<pos:position pos:line="111" pos:column="32"/></operator><name pos:line="111" pos:column="29">apVtabLock<pos:position pos:line="111" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">endif<pos:position pos:line="112" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="114" pos:column="3">if<condition pos:line="114" pos:column="5">( <expr><operator pos:line="114" pos:column="7">!<pos:position pos:line="114" pos:column="8"/></operator><name pos:line="114" pos:column="8">IN_DECLARE_VTAB<pos:position pos:line="114" pos:column="23"/></name></expr> )<pos:position pos:line="114" pos:column="25"/></condition><then><block pos:line="114" pos:column="25">{
    <comment type="block" pos:line="115" pos:column="5">/* If the pParse-&gt;declareVtab flag is set, do not delete any table 
    ** structure built up in pParse-&gt;pNewTable. The calling code (see vtab.c)
    ** will take responsibility for freeing the Table structure.
    */</comment>
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">sqlite3DeleteTable<pos:position pos:line="119" pos:column="23"/></name><argument_list pos:line="119" pos:column="23">(<argument><expr><name><name pos:line="119" pos:column="24">pParse<pos:position pos:line="119" pos:column="30"/></name><operator pos:line="119" pos:column="30">-&gt;<pos:position pos:line="119" pos:column="35"/></operator><name pos:line="119" pos:column="32">pNewTable<pos:position pos:line="119" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="120" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="122" pos:column="3">sqlite3DeleteTrigger<pos:position pos:line="122" pos:column="23"/></name><argument_list pos:line="122" pos:column="23">(<argument><expr><name pos:line="122" pos:column="24">db<pos:position pos:line="122" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="28">pParse<pos:position pos:line="122" pos:column="34"/></name><operator pos:line="122" pos:column="34">-&gt;<pos:position pos:line="122" pos:column="39"/></operator><name pos:line="122" pos:column="36">pNewTrigger<pos:position pos:line="122" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="123" pos:column="3">sqlite3DbFree<pos:position pos:line="123" pos:column="16"/></name><argument_list pos:line="123" pos:column="16">(<argument><expr><name pos:line="123" pos:column="17">db<pos:position pos:line="123" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="21">pParse<pos:position pos:line="123" pos:column="27"/></name><operator pos:line="123" pos:column="27">-&gt;<pos:position pos:line="123" pos:column="32"/></operator><name pos:line="123" pos:column="29">apVarExpr<pos:position pos:line="123" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="124" pos:column="3">sqlite3DbFree<pos:position pos:line="124" pos:column="16"/></name><argument_list pos:line="124" pos:column="16">(<argument><expr><name pos:line="124" pos:column="17">db<pos:position pos:line="124" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="21">pParse<pos:position pos:line="124" pos:column="27"/></name><operator pos:line="124" pos:column="27">-&gt;<pos:position pos:line="124" pos:column="32"/></operator><name pos:line="124" pos:column="29">aAlias<pos:position pos:line="124" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="37"/></expr_stmt>
  <while pos:line="125" pos:column="3">while<condition pos:line="125" pos:column="8">( <expr><name><name pos:line="125" pos:column="10">pParse<pos:position pos:line="125" pos:column="16"/></name><operator pos:line="125" pos:column="16">-&gt;<pos:position pos:line="125" pos:column="21"/></operator><name pos:line="125" pos:column="18">pZombieTab<pos:position pos:line="125" pos:column="28"/></name></name></expr> )<pos:position pos:line="125" pos:column="30"/></condition><block pos:line="125" pos:column="30">{
    <decl_stmt><decl><type><name pos:line="126" pos:column="5">Table<pos:position pos:line="126" pos:column="10"/></name> <modifier pos:line="126" pos:column="11">*<pos:position pos:line="126" pos:column="12"/></modifier></type><name pos:line="126" pos:column="12">p<pos:position pos:line="126" pos:column="13"/></name> <init pos:line="126" pos:column="14">= <expr><name><name pos:line="126" pos:column="16">pParse<pos:position pos:line="126" pos:column="22"/></name><operator pos:line="126" pos:column="22">-&gt;<pos:position pos:line="126" pos:column="27"/></operator><name pos:line="126" pos:column="24">pZombieTab<pos:position pos:line="126" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="126" pos:column="35"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="127" pos:column="5">pParse<pos:position pos:line="127" pos:column="11"/></name><operator pos:line="127" pos:column="11">-&gt;<pos:position pos:line="127" pos:column="16"/></operator><name pos:line="127" pos:column="13">pZombieTab<pos:position pos:line="127" pos:column="23"/></name></name> <operator pos:line="127" pos:column="24">=<pos:position pos:line="127" pos:column="25"/></operator> <name><name pos:line="127" pos:column="26">p<pos:position pos:line="127" pos:column="27"/></name><operator pos:line="127" pos:column="27">-&gt;<pos:position pos:line="127" pos:column="32"/></operator><name pos:line="127" pos:column="29">pNextZombie<pos:position pos:line="127" pos:column="40"/></name></name></expr>;<pos:position pos:line="127" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="128" pos:column="5">sqlite3DeleteTable<pos:position pos:line="128" pos:column="23"/></name><argument_list pos:line="128" pos:column="23">(<argument><expr><name pos:line="128" pos:column="24">p<pos:position pos:line="128" pos:column="25"/></name></expr></argument>)<pos:position pos:line="128" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="129" pos:column="4"/></block></while>
  <if pos:line="130" pos:column="3">if<condition pos:line="130" pos:column="5">( <expr><name pos:line="130" pos:column="7">nErr<pos:position pos:line="130" pos:column="11"/></name><operator pos:line="130" pos:column="11">&gt;<pos:position pos:line="130" pos:column="15"/></operator><literal type="number" pos:line="130" pos:column="12">0<pos:position pos:line="130" pos:column="13"/></literal> <operator pos:line="130" pos:column="14">&amp;&amp;<pos:position pos:line="130" pos:column="24"/></operator> <operator pos:line="130" pos:column="17">(<pos:position pos:line="130" pos:column="18"/></operator><name><name pos:line="130" pos:column="18">pParse<pos:position pos:line="130" pos:column="24"/></name><operator pos:line="130" pos:column="24">-&gt;<pos:position pos:line="130" pos:column="29"/></operator><name pos:line="130" pos:column="26">rc<pos:position pos:line="130" pos:column="28"/></name></name><operator pos:line="130" pos:column="28">==<pos:position pos:line="130" pos:column="30"/></operator><name pos:line="130" pos:column="30">SQLITE_OK<pos:position pos:line="130" pos:column="39"/></name> <operator pos:line="130" pos:column="40">||<pos:position pos:line="130" pos:column="42"/></operator> <name><name pos:line="130" pos:column="43">pParse<pos:position pos:line="130" pos:column="49"/></name><operator pos:line="130" pos:column="49">-&gt;<pos:position pos:line="130" pos:column="54"/></operator><name pos:line="130" pos:column="51">rc<pos:position pos:line="130" pos:column="53"/></name></name><operator pos:line="130" pos:column="53">==<pos:position pos:line="130" pos:column="55"/></operator><name pos:line="130" pos:column="55">SQLITE_DONE<pos:position pos:line="130" pos:column="66"/></name><operator pos:line="130" pos:column="66">)<pos:position pos:line="130" pos:column="67"/></operator></expr> )<pos:position pos:line="130" pos:column="69"/></condition><then><block pos:line="130" pos:column="69">{
    <expr_stmt><expr><name><name pos:line="131" pos:column="5">pParse<pos:position pos:line="131" pos:column="11"/></name><operator pos:line="131" pos:column="11">-&gt;<pos:position pos:line="131" pos:column="16"/></operator><name pos:line="131" pos:column="13">rc<pos:position pos:line="131" pos:column="15"/></name></name> <operator pos:line="131" pos:column="16">=<pos:position pos:line="131" pos:column="17"/></operator> <name pos:line="131" pos:column="18">SQLITE_ERROR<pos:position pos:line="131" pos:column="30"/></name></expr>;<pos:position pos:line="131" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="132" pos:column="4"/></block></then></if>
  <return pos:line="133" pos:column="3">return <expr><name pos:line="133" pos:column="10">nErr<pos:position pos:line="133" pos:column="14"/></name></expr>;<pos:position pos:line="133" pos:column="15"/></return>
}<pos:position pos:line="134" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_153.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">winMemInit<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">pAppData<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list><block pos:line="1" pos:column="38">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">winMemData<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">pWinMemData<pos:position pos:line="2" pos:column="26"/></name> <init pos:line="2" pos:column="27">= <expr><operator pos:line="2" pos:column="29">(<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">winMemData<pos:position pos:line="2" pos:column="40"/></name> <operator pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></operator><operator pos:line="2" pos:column="42">)<pos:position pos:line="2" pos:column="43"/></operator><name pos:line="2" pos:column="43">pAppData<pos:position pos:line="2" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="52"/></decl_stmt>

  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">( <expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">pWinMemData<pos:position pos:line="4" pos:column="19"/></name></expr> )<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block type="pseudo"><return pos:line="4" pos:column="22">return <expr><name pos:line="4" pos:column="29">SQLITE_ERROR<pos:position pos:line="4" pos:column="41"/></name></expr>;<pos:position pos:line="4" pos:column="42"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">assert<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">( <argument><expr><name><name pos:line="5" pos:column="11">pWinMemData<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">magic1<pos:position pos:line="5" pos:column="30"/></name></name><operator pos:line="5" pos:column="30">==<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">WINMEM_MAGIC1<pos:position pos:line="5" pos:column="45"/></name></expr></argument> )<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">( <argument><expr><name><name pos:line="6" pos:column="11">pWinMemData<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">magic2<pos:position pos:line="6" pos:column="30"/></name></name><operator pos:line="6" pos:column="30">==<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">WINMEM_MAGIC2<pos:position pos:line="6" pos:column="45"/></name></expr></argument> )<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>

<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><operator pos:line="8" pos:column="5">!<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">SQLITE_OS_WINRT<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">&amp;&amp;<pos:position pos:line="8" pos:column="32"/></operator> <name pos:line="8" pos:column="25">SQLITE_WIN32_HEAP_CREATE<pos:position pos:line="8" pos:column="49"/></name></expr></cpp:if>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">( <expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name><name pos:line="9" pos:column="8">pWinMemData<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">hHeap<pos:position pos:line="9" pos:column="26"/></name></name></expr> )<pos:position pos:line="9" pos:column="28"/></condition><then><block pos:line="9" pos:column="28">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">DWORD<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">dwInitialSize<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><name pos:line="10" pos:column="27">SQLITE_WIN32_HEAP_INIT_SIZE<pos:position pos:line="10" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">DWORD<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">dwMaximumSize<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><operator pos:line="11" pos:column="27">(<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">DWORD<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">)<pos:position pos:line="11" pos:column="34"/></operator><name><name pos:line="11" pos:column="34">sqlite3GlobalConfig<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">.<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="54">nHeap<pos:position pos:line="11" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="60"/></decl_stmt>
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">( <expr><name pos:line="12" pos:column="9">dwMaximumSize<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">==<pos:position pos:line="12" pos:column="24"/></operator><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr> )<pos:position pos:line="12" pos:column="27"/></condition><then><block pos:line="12" pos:column="27">{
      <expr_stmt><expr><name pos:line="13" pos:column="7">dwMaximumSize<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">SQLITE_WIN32_HEAP_MAX_SIZE<pos:position pos:line="13" pos:column="49"/></name></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then><elseif pos:line="14" pos:column="6">else <if pos:line="14" pos:column="11">if<condition pos:line="14" pos:column="13">( <expr><name pos:line="14" pos:column="15">dwInitialSize<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">dwMaximumSize<pos:position pos:line="14" pos:column="42"/></name></expr> )<pos:position pos:line="14" pos:column="44"/></condition><then><block pos:line="14" pos:column="44">{
      <expr_stmt><expr><name pos:line="15" pos:column="7">dwInitialSize<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">dwMaximumSize<pos:position pos:line="15" pos:column="36"/></name></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">pWinMemData<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">hHeap<pos:position pos:line="17" pos:column="23"/></name></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <call><name pos:line="17" pos:column="26">osHeapCreate<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">SQLITE_WIN32_HEAP_FLAGS<pos:position pos:line="17" pos:column="62"/></name></expr></argument>,
                                      <argument><expr><name pos:line="18" pos:column="39">dwInitialSize<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">dwMaximumSize<pos:position pos:line="18" pos:column="67"/></name></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="69"/></expr_stmt>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">( <expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name><name pos:line="19" pos:column="10">pWinMemData<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">hHeap<pos:position pos:line="19" pos:column="28"/></name></name></expr> )<pos:position pos:line="19" pos:column="30"/></condition><then><block pos:line="19" pos:column="30">{
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">sqlite3_log<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">SQLITE_NOMEM<pos:position pos:line="20" pos:column="31"/></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="21" pos:column="11">"failed to HeapCreate (%lu), flags=%u, initSize=%lu, maxSize=%lu"<pos:position pos:line="21" pos:column="76"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="22" pos:column="11">osGetLastError<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">()<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="29">SQLITE_WIN32_HEAP_FLAGS<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">dwInitialSize<pos:position pos:line="22" pos:column="67"/></name></expr></argument>,
          <argument><expr><name pos:line="23" pos:column="11">dwMaximumSize<pos:position pos:line="23" pos:column="24"/></name></expr></argument>)<pos:position pos:line="23" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><name pos:line="24" pos:column="14">SQLITE_NOMEM_BKPT<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">pWinMemData<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">bOwned<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="27">TRUE<pos:position pos:line="26" pos:column="31"/></name></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">assert<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">( <argument><expr><name><name pos:line="27" pos:column="13">pWinMemData<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">bOwned<pos:position pos:line="27" pos:column="32"/></name></name></expr></argument> )<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>
<cpp:else pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">else<pos:position pos:line="29" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">pWinMemData<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">hHeap<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <call><name pos:line="30" pos:column="24">osGetProcessHeap<pos:position pos:line="30" pos:column="40"/></name><argument_list pos:line="30" pos:column="40">()<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">( <expr><operator pos:line="31" pos:column="7">!<pos:position pos:line="31" pos:column="8"/></operator><name><name pos:line="31" pos:column="8">pWinMemData<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">hHeap<pos:position pos:line="31" pos:column="26"/></name></name></expr> )<pos:position pos:line="31" pos:column="28"/></condition><then><block pos:line="31" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">sqlite3_log<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">SQLITE_NOMEM<pos:position pos:line="32" pos:column="29"/></name></expr></argument>,
        <argument><expr><literal type="string" pos:line="33" pos:column="9">"failed to GetProcessHeap (%lu)"<pos:position pos:line="33" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="43">osGetLastError<pos:position pos:line="33" pos:column="57"/></name><argument_list pos:line="33" pos:column="57">()<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">SQLITE_NOMEM_BKPT<pos:position pos:line="34" pos:column="29"/></name></expr>;<pos:position pos:line="34" pos:column="30"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="36" pos:column="3">pWinMemData<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">bOwned<pos:position pos:line="36" pos:column="22"/></name></name> <operator pos:line="36" pos:column="23">=<pos:position pos:line="36" pos:column="24"/></operator> <name pos:line="36" pos:column="25">FALSE<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">assert<pos:position pos:line="37" pos:column="9"/></name><argument_list pos:line="37" pos:column="9">( <argument><expr><operator pos:line="37" pos:column="11">!<pos:position pos:line="37" pos:column="12"/></operator><name><name pos:line="37" pos:column="12">pWinMemData<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">-&gt;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="25">bOwned<pos:position pos:line="37" pos:column="31"/></name></name></expr></argument> )<pos:position pos:line="37" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">assert<pos:position pos:line="39" pos:column="9"/></name><argument_list pos:line="39" pos:column="9">( <argument><expr><name><name pos:line="39" pos:column="11">pWinMemData<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">hHeap<pos:position pos:line="39" pos:column="29"/></name></name><operator pos:line="39" pos:column="29">!=<pos:position pos:line="39" pos:column="31"/></operator><literal type="number" pos:line="39" pos:column="31">0<pos:position pos:line="39" pos:column="32"/></literal></expr></argument> )<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">assert<pos:position pos:line="40" pos:column="9"/></name><argument_list pos:line="40" pos:column="9">( <argument><expr><name><name pos:line="40" pos:column="11">pWinMemData<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">-&gt;<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="24">hHeap<pos:position pos:line="40" pos:column="29"/></name></name><operator pos:line="40" pos:column="29">!=<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="31">INVALID_HANDLE_VALUE<pos:position pos:line="40" pos:column="51"/></name></expr></argument> )<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
<cpp:if pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">if<pos:position pos:line="41" pos:column="4"/></cpp:directive> <expr><operator pos:line="41" pos:column="5">!<pos:position pos:line="41" pos:column="6"/></operator><name pos:line="41" pos:column="6">SQLITE_OS_WINRT<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">&amp;&amp;<pos:position pos:line="41" pos:column="32"/></operator> <call><name pos:line="41" pos:column="25">defined<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">SQLITE_WIN32_MALLOC_VALIDATE<pos:position pos:line="41" pos:column="61"/></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">assert<pos:position pos:line="42" pos:column="9"/></name><argument_list pos:line="42" pos:column="9">( <argument><expr><call><name pos:line="42" pos:column="11">osHeapValidate<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name><name pos:line="42" pos:column="26">pWinMemData<pos:position pos:line="42" pos:column="37"/></name><operator pos:line="42" pos:column="37">-&gt;<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="39">hHeap<pos:position pos:line="42" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="46">SQLITE_WIN32_HEAP_FLAGS<pos:position pos:line="42" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="71">NULL<pos:position pos:line="42" pos:column="75"/></name></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call></expr></argument> )<pos:position pos:line="42" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="79"/></expr_stmt>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="44" pos:column="3">return <expr><name pos:line="44" pos:column="10">SQLITE_OK<pos:position pos:line="44" pos:column="19"/></name></expr>;<pos:position pos:line="44" pos:column="20"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

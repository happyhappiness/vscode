<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_246.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">sqlite3VtabFinishParse<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">Parse<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">pParse<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">Token<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">pEnd<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list><block pos:line="1" pos:column="56">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">Table<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pTab<pos:position pos:line="2" pos:column="14"/></name> <init pos:line="2" pos:column="15">= <expr><name><name pos:line="2" pos:column="17">pParse<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">-&gt;<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="25">pNewTable<pos:position pos:line="2" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="2" pos:column="35"/></decl_stmt>  <comment type="block" pos:line="2" pos:column="37">/* The table being constructed */</comment>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">sqlite3<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">db<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name><name pos:line="3" pos:column="17">pParse<pos:position pos:line="3" pos:column="23"/></name><operator pos:line="3" pos:column="23">-&gt;<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="25">db<pos:position pos:line="3" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>         <comment type="block" pos:line="3" pos:column="37">/* The database connection */</comment>

  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">( <expr><name pos:line="5" pos:column="7">pTab<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr> )<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16"> <block type="pseudo"><return pos:line="5" pos:column="17">return;<pos:position pos:line="5" pos:column="24"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">addArgumentToVtab<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">pParse<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">pParse<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">sArg<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">z<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">( <expr><name><name pos:line="8" pos:column="7">pTab<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">nModuleArg<pos:position pos:line="8" pos:column="23"/></name></name><operator pos:line="8" pos:column="23">&lt;<pos:position pos:line="8" pos:column="27"/></operator><literal type="number" pos:line="8" pos:column="24">1<pos:position pos:line="8" pos:column="25"/></literal></expr> )<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27"> <block type="pseudo"><return pos:line="8" pos:column="28">return;<pos:position pos:line="8" pos:column="35"/></return></block></then></if>
  
  <comment type="block" pos:line="10" pos:column="3">/* If the CREATE VIRTUAL TABLE statement is being entered for the
  ** first time (in other words if the virtual table is actually being
  ** created now instead of just being read out of sqlite_master) then
  ** do additional initialization work and store the statement text
  ** in the sqlite_master table.
  */</comment>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">( <expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><name><name pos:line="16" pos:column="8">db<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">init<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">.<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">busy<pos:position pos:line="16" pos:column="21"/></name></name></expr> )<pos:position pos:line="16" pos:column="23"/></condition><then><block pos:line="16" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type><name pos:line="17" pos:column="11">zStmt<pos:position pos:line="17" pos:column="16"/></name></decl>;<pos:position pos:line="17" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">zWhere<pos:position pos:line="18" pos:column="17"/></name></decl>;<pos:position pos:line="18" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">iDb<pos:position pos:line="19" pos:column="12"/></name></decl>;<pos:position pos:line="19" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">iReg<pos:position pos:line="20" pos:column="13"/></name></decl>;<pos:position pos:line="20" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">Vdbe<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier></type><name pos:line="21" pos:column="11">v<pos:position pos:line="21" pos:column="12"/></name></decl>;<pos:position pos:line="21" pos:column="13"/></decl_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* Compute the complete text of the CREATE VIRTUAL TABLE statement */</comment>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">( <expr><name pos:line="24" pos:column="9">pEnd<pos:position pos:line="24" pos:column="13"/></name></expr> )<pos:position pos:line="24" pos:column="15"/></condition><then><block pos:line="24" pos:column="15">{
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">pParse<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">sNameToken<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">.<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">n<pos:position pos:line="25" pos:column="27"/></name></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <call pos:line="25" pos:column="30">(<name pos:line="25" pos:column="31">int<pos:position pos:line="25" pos:column="34"/></name>)<argument_list pos:line="25" pos:column="35">(<argument><expr><name><name pos:line="25" pos:column="36">pEnd<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">z<pos:position pos:line="25" pos:column="43"/></name></name> <operator pos:line="25" pos:column="44">-<pos:position pos:line="25" pos:column="45"/></operator> <name><name pos:line="25" pos:column="46">pParse<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">sNameToken<pos:position pos:line="25" pos:column="64"/></name><operator pos:line="25" pos:column="64">.<pos:position pos:line="25" pos:column="65"/></operator><name pos:line="25" pos:column="65">z<pos:position pos:line="25" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call> <operator pos:line="25" pos:column="68">+<pos:position pos:line="25" pos:column="69"/></operator> <name><name pos:line="25" pos:column="70">pEnd<pos:position pos:line="25" pos:column="74"/></name><operator pos:line="25" pos:column="74">-&gt;<pos:position pos:line="25" pos:column="79"/></operator><name pos:line="25" pos:column="76">n<pos:position pos:line="25" pos:column="77"/></name></name></expr>;<pos:position pos:line="25" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="27" pos:column="5">zStmt<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <call><name pos:line="27" pos:column="13">sqlite3MPrintf<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">db<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="32">"CREATE VIRTUAL TABLE %T"<pos:position pos:line="27" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="59">&amp;<pos:position pos:line="27" pos:column="64"/></operator><name><name pos:line="27" pos:column="60">pParse<pos:position pos:line="27" pos:column="66"/></name><operator pos:line="27" pos:column="66">-&gt;<pos:position pos:line="27" pos:column="71"/></operator><name pos:line="27" pos:column="68">sNameToken<pos:position pos:line="27" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="80"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* A slot for the record has already been allocated in the 
    ** SQLITE_MASTER table.  We just need to update that slot with all
    ** the information we've collected.  
    **
    ** The VM register number pParse-&gt;regRowid holds the rowid of an
    ** entry in the sqlite_master table tht was created for this vtab
    ** by sqlite3StartTable().
    */</comment>
    <expr_stmt><expr><name pos:line="37" pos:column="5">iDb<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <call><name pos:line="37" pos:column="11">sqlite3SchemaToIndex<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">db<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="36">pTab<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">-&gt;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="42">pSchema<pos:position pos:line="37" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">sqlite3NestedParse<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">pParse<pos:position pos:line="38" pos:column="30"/></name></expr></argument>,
      <argument><expr><literal type="string" pos:line="39" pos:column="7">"UPDATE %Q.%s "<pos:position pos:line="39" pos:column="22"/></literal>
         <literal type="string" pos:line="40" pos:column="10">"SET type='table', name=%Q, tbl_name=%Q, rootpage=0, sql=%Q "<pos:position pos:line="40" pos:column="71"/></literal>
       <literal type="string" pos:line="41" pos:column="8">"WHERE rowid=#%d"<pos:position pos:line="41" pos:column="25"/></literal></expr></argument>,
      <argument><expr><name><name pos:line="42" pos:column="7">db<pos:position pos:line="42" pos:column="9"/></name><operator pos:line="42" pos:column="9">-&gt;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="11">aDb<pos:position pos:line="42" pos:column="14"/></name><index pos:line="42" pos:column="14">[<expr><name pos:line="42" pos:column="15">iDb<pos:position pos:line="42" pos:column="18"/></name></expr>]<pos:position pos:line="42" pos:column="19"/></index></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">zDbSName<pos:position pos:line="42" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="30">MASTER_NAME<pos:position pos:line="42" pos:column="41"/></name></expr></argument>,
      <argument><expr><name><name pos:line="43" pos:column="7">pTab<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">-&gt;<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="13">zName<pos:position pos:line="43" pos:column="18"/></name></name></expr></argument>,
      <argument><expr><name><name pos:line="44" pos:column="7">pTab<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">-&gt;<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="13">zName<pos:position pos:line="44" pos:column="18"/></name></name></expr></argument>,
      <argument><expr><name pos:line="45" pos:column="7">zStmt<pos:position pos:line="45" pos:column="12"/></name></expr></argument>,
      <argument><expr><name><name pos:line="46" pos:column="7">pParse<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">regRowid<pos:position pos:line="46" pos:column="23"/></name></name></expr></argument>
    )<pos:position pos:line="47" pos:column="6"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="7"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">sqlite3DbFree<pos:position pos:line="48" pos:column="18"/></name><argument_list pos:line="48" pos:column="18">(<argument><expr><name pos:line="48" pos:column="19">db<pos:position pos:line="48" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="23">zStmt<pos:position pos:line="48" pos:column="28"/></name></expr></argument>)<pos:position pos:line="48" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">v<pos:position pos:line="49" pos:column="6"/></name> <operator pos:line="49" pos:column="7">=<pos:position pos:line="49" pos:column="8"/></operator> <call><name pos:line="49" pos:column="9">sqlite3GetVdbe<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">pParse<pos:position pos:line="49" pos:column="30"/></name></expr></argument>)<pos:position pos:line="49" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">sqlite3ChangeCookie<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">pParse<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="33">iDb<pos:position pos:line="50" pos:column="36"/></name></expr></argument>)<pos:position pos:line="50" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">sqlite3VdbeAddOp0<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">v<pos:position pos:line="52" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="26">OP_Expire<pos:position pos:line="52" pos:column="35"/></name></expr></argument>)<pos:position pos:line="52" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="53" pos:column="5">zWhere<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <call><name pos:line="53" pos:column="14">sqlite3MPrintf<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">db<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="33">"name='%q' AND type='table'"<pos:position pos:line="53" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="63">pTab<pos:position pos:line="53" pos:column="67"/></name><operator pos:line="53" pos:column="67">-&gt;<pos:position pos:line="53" pos:column="72"/></operator><name pos:line="53" pos:column="69">zName<pos:position pos:line="53" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">sqlite3VdbeAddParseSchemaOp<pos:position pos:line="54" pos:column="32"/></name><argument_list pos:line="54" pos:column="32">(<argument><expr><name pos:line="54" pos:column="33">v<pos:position pos:line="54" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="36">iDb<pos:position pos:line="54" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="41">zWhere<pos:position pos:line="54" pos:column="47"/></name></expr></argument>)<pos:position pos:line="54" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name pos:line="56" pos:column="5">iReg<pos:position pos:line="56" pos:column="9"/></name> <operator pos:line="56" pos:column="10">=<pos:position pos:line="56" pos:column="11"/></operator> <operator pos:line="56" pos:column="12">++<pos:position pos:line="56" pos:column="14"/></operator><name><name pos:line="56" pos:column="14">pParse<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">-&gt;<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="22">nMem<pos:position pos:line="56" pos:column="26"/></name></name></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">sqlite3VdbeLoadString<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">v<pos:position pos:line="57" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="30">iReg<pos:position pos:line="57" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="36">pTab<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">-&gt;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="42">zName<pos:position pos:line="57" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">sqlite3VdbeAddOp2<pos:position pos:line="58" pos:column="22"/></name><argument_list pos:line="58" pos:column="22">(<argument><expr><name pos:line="58" pos:column="23">v<pos:position pos:line="58" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="26">OP_VCreate<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="38">iDb<pos:position pos:line="58" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="43">iReg<pos:position pos:line="58" pos:column="47"/></name></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="59" pos:column="4"/></block></then>

  <comment type="block" pos:line="61" pos:column="3">/* If we are rereading the sqlite_master table create the in-memory
  ** record of the table. The xConnect() method is not called until
  ** the first time the virtual table is used in an SQL statement. This
  ** allows a schema that contains virtual tables to be loaded before
  ** the required virtual table implementations are registered.  */</comment>
  <else pos:line="66" pos:column="3">else <block pos:line="66" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="67" pos:column="5">Table<pos:position pos:line="67" pos:column="10"/></name> <modifier pos:line="67" pos:column="11">*<pos:position pos:line="67" pos:column="12"/></modifier></type><name pos:line="67" pos:column="12">pOld<pos:position pos:line="67" pos:column="16"/></name></decl>;<pos:position pos:line="67" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="68" pos:column="5">Schema<pos:position pos:line="68" pos:column="11"/></name> <modifier pos:line="68" pos:column="12">*<pos:position pos:line="68" pos:column="13"/></modifier></type><name pos:line="68" pos:column="13">pSchema<pos:position pos:line="68" pos:column="20"/></name> <init pos:line="68" pos:column="21">= <expr><name><name pos:line="68" pos:column="23">pTab<pos:position pos:line="68" pos:column="27"/></name><operator pos:line="68" pos:column="27">-&gt;<pos:position pos:line="68" pos:column="32"/></operator><name pos:line="68" pos:column="29">pSchema<pos:position pos:line="68" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="68" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="69" pos:column="5">const<pos:position pos:line="69" pos:column="10"/></specifier> <name pos:line="69" pos:column="11">char<pos:position pos:line="69" pos:column="15"/></name> <modifier pos:line="69" pos:column="16">*<pos:position pos:line="69" pos:column="17"/></modifier></type><name pos:line="69" pos:column="17">zName<pos:position pos:line="69" pos:column="22"/></name> <init pos:line="69" pos:column="23">= <expr><name><name pos:line="69" pos:column="25">pTab<pos:position pos:line="69" pos:column="29"/></name><operator pos:line="69" pos:column="29">-&gt;<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="31">zName<pos:position pos:line="69" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="69" pos:column="37"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">assert<pos:position pos:line="70" pos:column="11"/></name><argument_list pos:line="70" pos:column="11">( <argument><expr><call><name pos:line="70" pos:column="13">sqlite3SchemaMutexHeld<pos:position pos:line="70" pos:column="35"/></name><argument_list pos:line="70" pos:column="35">(<argument><expr><name pos:line="70" pos:column="36">db<pos:position pos:line="70" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="40">0<pos:position pos:line="70" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="43">pSchema<pos:position pos:line="70" pos:column="50"/></name></expr></argument>)<pos:position pos:line="70" pos:column="51"/></argument_list></call></expr></argument> )<pos:position pos:line="70" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name pos:line="71" pos:column="5">pOld<pos:position pos:line="71" pos:column="9"/></name> <operator pos:line="71" pos:column="10">=<pos:position pos:line="71" pos:column="11"/></operator> <call><name pos:line="71" pos:column="12">sqlite3HashInsert<pos:position pos:line="71" pos:column="29"/></name><argument_list pos:line="71" pos:column="29">(<argument><expr><operator pos:line="71" pos:column="30">&amp;<pos:position pos:line="71" pos:column="35"/></operator><name><name pos:line="71" pos:column="31">pSchema<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">-&gt;<pos:position pos:line="71" pos:column="43"/></operator><name pos:line="71" pos:column="40">tblHash<pos:position pos:line="71" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="49">zName<pos:position pos:line="71" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="56">pTab<pos:position pos:line="71" pos:column="60"/></name></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="62"/></expr_stmt>
    <if pos:line="72" pos:column="5">if<condition pos:line="72" pos:column="7">( <expr><name pos:line="72" pos:column="9">pOld<pos:position pos:line="72" pos:column="13"/></name></expr> )<pos:position pos:line="72" pos:column="15"/></condition><then><block pos:line="72" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">sqlite3OomFault<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><name pos:line="73" pos:column="23">db<pos:position pos:line="73" pos:column="25"/></name></expr></argument>)<pos:position pos:line="73" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">assert<pos:position pos:line="74" pos:column="13"/></name><argument_list pos:line="74" pos:column="13">( <argument><expr><name pos:line="74" pos:column="15">pTab<pos:position pos:line="74" pos:column="19"/></name><operator pos:line="74" pos:column="19">==<pos:position pos:line="74" pos:column="21"/></operator><name pos:line="74" pos:column="21">pOld<pos:position pos:line="74" pos:column="25"/></name></expr></argument> )<pos:position pos:line="74" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="28"/></expr_stmt>  <comment type="block" pos:line="74" pos:column="30">/* Malloc must have failed inside HashInsert() */</comment>
      <return pos:line="75" pos:column="7">return;<pos:position pos:line="75" pos:column="14"/></return>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">pParse<pos:position pos:line="77" pos:column="11"/></name><operator pos:line="77" pos:column="11">-&gt;<pos:position pos:line="77" pos:column="16"/></operator><name pos:line="77" pos:column="13">pNewTable<pos:position pos:line="77" pos:column="22"/></name></name> <operator pos:line="77" pos:column="23">=<pos:position pos:line="77" pos:column="24"/></operator> <literal type="number" pos:line="77" pos:column="25">0<pos:position pos:line="77" pos:column="26"/></literal></expr>;<pos:position pos:line="77" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="78" pos:column="4"/></block></else></if>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

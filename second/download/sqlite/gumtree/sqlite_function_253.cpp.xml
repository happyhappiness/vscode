<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_253.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">WhereInfo<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type><name pos:line="1" pos:column="12">sqlite3WhereBegin<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(
  <parameter><decl><type><name pos:line="2" pos:column="3">Parse<pos:position pos:line="2" pos:column="8"/></name> <modifier pos:line="2" pos:column="9">*<pos:position pos:line="2" pos:column="10"/></modifier></type><name pos:line="2" pos:column="10">pParse<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>,        <comment type="block" pos:line="2" pos:column="25">/* The parser context */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">SrcList<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">pTabList<pos:position pos:line="3" pos:column="20"/></name></decl></parameter>,    <comment type="block" pos:line="3" pos:column="25">/* A list of all tables to be scanned */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">Expr<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">pWhere<pos:position pos:line="4" pos:column="15"/></name></decl></parameter>,         <comment type="block" pos:line="4" pos:column="25">/* The WHERE clause */</comment>
  <parameter><decl><type><name pos:line="5" pos:column="3">ExprList<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier><modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">ppOrderBy<pos:position pos:line="5" pos:column="23"/></name></decl></parameter>, <comment type="block" pos:line="5" pos:column="25">/* An ORDER BY clause, or NULL */</comment>
  <parameter><decl><type><name pos:line="6" pos:column="3">u16<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">wctrlFlags<pos:position pos:line="6" pos:column="17"/></name></decl></parameter>        <comment type="block" pos:line="6" pos:column="25">/* One of the WHERE_* flags defined in sqliteInt.h */</comment>
)<pos:position pos:line="7" pos:column="2"/></parameter_list><block pos:line="7" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name></decl>;<pos:position pos:line="8" pos:column="9"/></decl_stmt>                     <comment type="block" pos:line="8" pos:column="30">/* Loop counter */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">nByteWInfo<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>            <comment type="block" pos:line="9" pos:column="30">/* Num. bytes allocated for WhereInfo struct */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">WhereInfo<pos:position pos:line="10" pos:column="12"/></name> <modifier pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></modifier></type><name pos:line="10" pos:column="14">pWInfo<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>         <comment type="block" pos:line="10" pos:column="30">/* Will become the return value of this function */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">Vdbe<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">v<pos:position pos:line="11" pos:column="10"/></name> <init pos:line="11" pos:column="11">= <expr><name><name pos:line="11" pos:column="13">pParse<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">pVdbe<pos:position pos:line="11" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>   <comment type="block" pos:line="11" pos:column="30">/* The virtual database engine */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">Bitmask<pos:position pos:line="12" pos:column="10"/></name></type> <name pos:line="12" pos:column="11">notReady<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>          <comment type="block" pos:line="12" pos:column="30">/* Cursors that are not yet positioned */</comment>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">WhereMaskSet<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">pMaskSet<pos:position pos:line="13" pos:column="25"/></name></decl>;<pos:position pos:line="13" pos:column="26"/></decl_stmt>    <comment type="block" pos:line="13" pos:column="30">/* The expression mask set */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">WhereClause<pos:position pos:line="14" pos:column="14"/></name> <modifier pos:line="14" pos:column="15">*<pos:position pos:line="14" pos:column="16"/></modifier></type><name pos:line="14" pos:column="16">pWC<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>               <comment type="block" pos:line="14" pos:column="35">/* Decomposition of the WHERE clause */</comment>
  <decl_stmt><decl><type><name><name pos:line="15" pos:column="3">struct<pos:position pos:line="15" pos:column="9"/></name> <name pos:line="15" pos:column="10">SrcList_item<pos:position pos:line="15" pos:column="22"/></name></name> <modifier pos:line="15" pos:column="23">*<pos:position pos:line="15" pos:column="24"/></modifier></type><name pos:line="15" pos:column="24">pTabItem<pos:position pos:line="15" pos:column="32"/></name></decl>;<pos:position pos:line="15" pos:column="33"/></decl_stmt>  <comment type="block" pos:line="15" pos:column="35">/* A single entry from pTabList */</comment>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">WhereLevel<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">pLevel<pos:position pos:line="16" pos:column="21"/></name></decl>;<pos:position pos:line="16" pos:column="22"/></decl_stmt>             <comment type="block" pos:line="16" pos:column="35">/* A single level in the pWInfo list */</comment>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">int<pos:position pos:line="17" pos:column="6"/></name></type> <name pos:line="17" pos:column="7">iFrom<pos:position pos:line="17" pos:column="12"/></name></decl>;<pos:position pos:line="17" pos:column="13"/></decl_stmt>                      <comment type="block" pos:line="17" pos:column="35">/* First unused FROM clause element */</comment>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">andFlags<pos:position pos:line="18" pos:column="15"/></name></decl>;<pos:position pos:line="18" pos:column="16"/></decl_stmt>              <comment type="block" pos:line="18" pos:column="30">/* AND-ed combination of all pWC-&gt;a[].wtFlags */</comment>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">sqlite3<pos:position pos:line="19" pos:column="10"/></name> <modifier pos:line="19" pos:column="11">*<pos:position pos:line="19" pos:column="12"/></modifier></type><name pos:line="19" pos:column="12">db<pos:position pos:line="19" pos:column="14"/></name></decl>;<pos:position pos:line="19" pos:column="15"/></decl_stmt>               <comment type="block" pos:line="19" pos:column="30">/* Database connection */</comment>

  <comment type="block" pos:line="21" pos:column="3">/* The number of tables in the FROM clause is limited by the number of
  ** bits in a Bitmask 
  */</comment>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">( <expr><name><name pos:line="24" pos:column="7">pTabList<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">nSrc<pos:position pos:line="24" pos:column="21"/></name></name><operator pos:line="24" pos:column="21">&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">BMS<pos:position pos:line="24" pos:column="25"/></name></expr> )<pos:position pos:line="24" pos:column="27"/></condition><then><block pos:line="24" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">sqlite3ErrorMsg<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">pParse<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="29">"at most %d tables in a join"<pos:position pos:line="25" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="60">BMS<pos:position pos:line="25" pos:column="63"/></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="65"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><literal type="number" pos:line="26" pos:column="12">0<pos:position pos:line="26" pos:column="13"/></literal></expr>;<pos:position pos:line="26" pos:column="14"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="29" pos:column="3">/* Allocate and initialize the WhereInfo structure that will become the
  ** return value. A single allocation is used to store the WhereInfo
  ** struct, the contents of WhereInfo.a[], the WhereClause structure
  ** and the WhereMaskSet structure. Since WhereClause contains an 8-byte
  ** field (type Bitmask) it must be aligned on an 8-byte boundary on
  ** some architectures. Hence the ROUND8() below.
  */</comment>
  <expr_stmt><expr><name pos:line="36" pos:column="3">db<pos:position pos:line="36" pos:column="5"/></name> <operator pos:line="36" pos:column="6">=<pos:position pos:line="36" pos:column="7"/></operator> <name><name pos:line="36" pos:column="8">pParse<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">db<pos:position pos:line="36" pos:column="18"/></name></name></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="37" pos:column="3">nByteWInfo<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">ROUND8<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><sizeof pos:line="37" pos:column="23">sizeof<argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">WhereInfo<pos:position pos:line="37" pos:column="39"/></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></sizeof><operator pos:line="37" pos:column="40">+<pos:position pos:line="37" pos:column="41"/></operator><operator pos:line="37" pos:column="41">(<pos:position pos:line="37" pos:column="42"/></operator><name><name pos:line="37" pos:column="42">pTabList<pos:position pos:line="37" pos:column="50"/></name><operator pos:line="37" pos:column="50">-&gt;<pos:position pos:line="37" pos:column="55"/></operator><name pos:line="37" pos:column="52">nSrc<pos:position pos:line="37" pos:column="56"/></name></name><operator pos:line="37" pos:column="56">-<pos:position pos:line="37" pos:column="57"/></operator><literal type="number" pos:line="37" pos:column="57">1<pos:position pos:line="37" pos:column="58"/></literal><operator pos:line="37" pos:column="58">)<pos:position pos:line="37" pos:column="59"/></operator><operator pos:line="37" pos:column="59">*<pos:position pos:line="37" pos:column="60"/></operator><sizeof pos:line="37" pos:column="60">sizeof<argument_list pos:line="37" pos:column="66">(<argument><expr><name pos:line="37" pos:column="67">WhereLevel<pos:position pos:line="37" pos:column="77"/></name></expr></argument>)<pos:position pos:line="37" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="80"/></expr_stmt>
  <expr_stmt><expr><name pos:line="38" pos:column="3">pWInfo<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <call><name pos:line="38" pos:column="12">sqlite3DbMallocZero<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">db<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, 
      <argument><expr><name pos:line="39" pos:column="7">nByteWInfo<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">+<pos:position pos:line="39" pos:column="19"/></operator> 
      <sizeof pos:line="40" pos:column="7">sizeof<argument_list pos:line="40" pos:column="13">(<argument><expr><name pos:line="40" pos:column="14">WhereClause<pos:position pos:line="40" pos:column="25"/></name></expr></argument>)<pos:position pos:line="40" pos:column="26"/></argument_list></sizeof> <operator pos:line="40" pos:column="27">+<pos:position pos:line="40" pos:column="28"/></operator>
      <sizeof pos:line="41" pos:column="7">sizeof<argument_list pos:line="41" pos:column="13">(<argument><expr><name pos:line="41" pos:column="14">WhereMaskSet<pos:position pos:line="41" pos:column="26"/></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></sizeof></expr></argument>
  )<pos:position pos:line="42" pos:column="4"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="5"/></expr_stmt>
  <if pos:line="43" pos:column="3">if<condition pos:line="43" pos:column="5">( <expr><name><name pos:line="43" pos:column="7">db<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">mallocFailed<pos:position pos:line="43" pos:column="23"/></name></name></expr> )<pos:position pos:line="43" pos:column="25"/></condition><then><block pos:line="43" pos:column="25">{
    <goto pos:line="44" pos:column="5">goto <name pos:line="44" pos:column="10">whereBeginError<pos:position pos:line="44" pos:column="25"/></name>;<pos:position pos:line="44" pos:column="26"/></goto>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="46" pos:column="3">pWInfo<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">-&gt;<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="11">nLevel<pos:position pos:line="46" pos:column="17"/></name></name> <operator pos:line="46" pos:column="18">=<pos:position pos:line="46" pos:column="19"/></operator> <name><name pos:line="46" pos:column="20">pTabList<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">nSrc<pos:position pos:line="46" pos:column="34"/></name></name></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="47" pos:column="3">pWInfo<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">-&gt;<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="11">pParse<pos:position pos:line="47" pos:column="17"/></name></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">pParse<pos:position pos:line="47" pos:column="26"/></name></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="48" pos:column="3">pWInfo<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="11">pTabList<pos:position pos:line="48" pos:column="19"/></name></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">pTabList<pos:position pos:line="48" pos:column="30"/></name></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="49" pos:column="3">pWInfo<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">iBreak<pos:position pos:line="49" pos:column="17"/></name></name> <operator pos:line="49" pos:column="18">=<pos:position pos:line="49" pos:column="19"/></operator> <call><name pos:line="49" pos:column="20">sqlite3VdbeMakeLabel<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><name pos:line="49" pos:column="41">v<pos:position pos:line="49" pos:column="42"/></name></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="50" pos:column="3">pWInfo<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">-&gt;<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="11">pWC<pos:position pos:line="50" pos:column="14"/></name></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <name pos:line="50" pos:column="17">pWC<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <operator pos:line="50" pos:column="23">(<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">WhereClause<pos:position pos:line="50" pos:column="35"/></name> <operator pos:line="50" pos:column="36">*<pos:position pos:line="50" pos:column="37"/></operator><operator pos:line="50" pos:column="37">)<pos:position pos:line="50" pos:column="38"/></operator><operator pos:line="50" pos:column="38">&amp;<pos:position pos:line="50" pos:column="43"/></operator><operator pos:line="50" pos:column="39">(<pos:position pos:line="50" pos:column="40"/></operator><operator pos:line="50" pos:column="40">(<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="41">u8<pos:position pos:line="50" pos:column="43"/></name> <operator pos:line="50" pos:column="44">*<pos:position pos:line="50" pos:column="45"/></operator><operator pos:line="50" pos:column="45">)<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="46">pWInfo<pos:position pos:line="50" pos:column="52"/></name><operator pos:line="50" pos:column="52">)<pos:position pos:line="50" pos:column="53"/></operator><index pos:line="50" pos:column="53">[<expr><name pos:line="50" pos:column="54">nByteWInfo<pos:position pos:line="50" pos:column="64"/></name></expr>]<pos:position pos:line="50" pos:column="65"/></index></expr>;<pos:position pos:line="50" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="51" pos:column="3">pWInfo<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">-&gt;<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="11">wctrlFlags<pos:position pos:line="51" pos:column="21"/></name></name> <operator pos:line="51" pos:column="22">=<pos:position pos:line="51" pos:column="23"/></operator> <name pos:line="51" pos:column="24">wctrlFlags<pos:position pos:line="51" pos:column="34"/></name></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="52" pos:column="3">pMaskSet<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <operator pos:line="52" pos:column="14">(<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="15">WhereMaskSet<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">*<pos:position pos:line="52" pos:column="28"/></operator><operator pos:line="52" pos:column="28">)<pos:position pos:line="52" pos:column="29"/></operator><operator pos:line="52" pos:column="29">&amp;<pos:position pos:line="52" pos:column="34"/></operator><name><name pos:line="52" pos:column="30">pWC<pos:position pos:line="52" pos:column="33"/></name><index pos:line="52" pos:column="33">[<expr><literal type="number" pos:line="52" pos:column="34">1<pos:position pos:line="52" pos:column="35"/></literal></expr>]<pos:position pos:line="52" pos:column="36"/></index></name></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="54" pos:column="3">/* Split the WHERE clause into separate subexpressions where each
  ** subexpression is separated by an AND operator.
  */</comment>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">initMaskSet<pos:position pos:line="57" pos:column="14"/></name><argument_list pos:line="57" pos:column="14">(<argument><expr><name pos:line="57" pos:column="15">pMaskSet<pos:position pos:line="57" pos:column="23"/></name></expr></argument>)<pos:position pos:line="57" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">whereClauseInit<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><name pos:line="58" pos:column="19">pWC<pos:position pos:line="58" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="24">pParse<pos:position pos:line="58" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="32">pMaskSet<pos:position pos:line="58" pos:column="40"/></name></expr></argument>)<pos:position pos:line="58" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="59" pos:column="3">sqlite3ExprCodeConstants<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">pParse<pos:position pos:line="59" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="36">pWhere<pos:position pos:line="59" pos:column="42"/></name></expr></argument>)<pos:position pos:line="59" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">whereSplit<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">pWC<pos:position pos:line="60" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="19">pWhere<pos:position pos:line="60" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="27">TK_AND<pos:position pos:line="60" pos:column="33"/></name></expr></argument>)<pos:position pos:line="60" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt>
    
  <comment type="block" pos:line="62" pos:column="3">/* Special case: a WHERE clause that is constant.  Evaluate the
  ** expression and either jump over all of the code or fall thru.
  */</comment>
  <if pos:line="65" pos:column="3">if<condition pos:line="65" pos:column="5">( <expr><name pos:line="65" pos:column="7">pWhere<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">&amp;&amp;<pos:position pos:line="65" pos:column="24"/></operator> <operator pos:line="65" pos:column="17">(<pos:position pos:line="65" pos:column="18"/></operator><name><name pos:line="65" pos:column="18">pTabList<pos:position pos:line="65" pos:column="26"/></name><operator pos:line="65" pos:column="26">-&gt;<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="28">nSrc<pos:position pos:line="65" pos:column="32"/></name></name><operator pos:line="65" pos:column="32">==<pos:position pos:line="65" pos:column="34"/></operator><literal type="number" pos:line="65" pos:column="34">0<pos:position pos:line="65" pos:column="35"/></literal> <operator pos:line="65" pos:column="36">||<pos:position pos:line="65" pos:column="38"/></operator> <call><name pos:line="65" pos:column="39">sqlite3ExprIsConstantNotJoin<pos:position pos:line="65" pos:column="67"/></name><argument_list pos:line="65" pos:column="67">(<argument><expr><name pos:line="65" pos:column="68">pWhere<pos:position pos:line="65" pos:column="74"/></name></expr></argument>)<pos:position pos:line="65" pos:column="75"/></argument_list></call><operator pos:line="65" pos:column="75">)<pos:position pos:line="65" pos:column="76"/></operator></expr> )<pos:position pos:line="65" pos:column="78"/></condition><then><block pos:line="65" pos:column="78">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">sqlite3ExprIfFalse<pos:position pos:line="66" pos:column="23"/></name><argument_list pos:line="66" pos:column="23">(<argument><expr><name pos:line="66" pos:column="24">pParse<pos:position pos:line="66" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="32">pWhere<pos:position pos:line="66" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="40">pWInfo<pos:position pos:line="66" pos:column="46"/></name><operator pos:line="66" pos:column="46">-&gt;<pos:position pos:line="66" pos:column="51"/></operator><name pos:line="66" pos:column="48">iBreak<pos:position pos:line="66" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="56">SQLITE_JUMPIFNULL<pos:position pos:line="66" pos:column="73"/></name></expr></argument>)<pos:position pos:line="66" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><name pos:line="67" pos:column="5">pWhere<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">=<pos:position pos:line="67" pos:column="13"/></operator> <literal type="number" pos:line="67" pos:column="14">0<pos:position pos:line="67" pos:column="15"/></literal></expr>;<pos:position pos:line="67" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="70" pos:column="3">/* Assign a bit from the bitmask to every term in the FROM clause.
  **
  ** When assigning bitmask values to FROM clause cursors, it must be
  ** the case that if X is the bitmask for the N-th FROM clause term then
  ** the bitmask for all FROM clause terms to the left of the N-th term
  ** is (X-1).   An expression from the ON clause of a LEFT JOIN can use
  ** its Expr.iRightJoinTable value to find the bitmask of the right table
  ** of the join.  Subtracting one from the right table bitmask gives a
  ** bitmask for all tables to the left of the join.  Knowing the bitmask
  ** for all tables to the left of a left join is important.  Ticket #3015.
  **
  ** Configure the WhereClause.vmask variable so that bits that correspond
  ** to virtual table cursors are set. This is used to selectively disable 
  ** the OR-to-IN transformation in exprAnalyzeOrTerm(). It is not helpful 
  ** with virtual tables.
  */</comment>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">assert<pos:position pos:line="86" pos:column="9"/></name><argument_list pos:line="86" pos:column="9">( <argument><expr><name><name pos:line="86" pos:column="11">pWC<pos:position pos:line="86" pos:column="14"/></name><operator pos:line="86" pos:column="14">-&gt;<pos:position pos:line="86" pos:column="19"/></operator><name pos:line="86" pos:column="16">vmask<pos:position pos:line="86" pos:column="21"/></name></name><operator pos:line="86" pos:column="21">==<pos:position pos:line="86" pos:column="23"/></operator><literal type="number" pos:line="86" pos:column="23">0<pos:position pos:line="86" pos:column="24"/></literal> <operator pos:line="86" pos:column="25">&amp;&amp;<pos:position pos:line="86" pos:column="35"/></operator> <name><name pos:line="86" pos:column="28">pMaskSet<pos:position pos:line="86" pos:column="36"/></name><operator pos:line="86" pos:column="36">-&gt;<pos:position pos:line="86" pos:column="41"/></operator><name pos:line="86" pos:column="38">n<pos:position pos:line="86" pos:column="39"/></name></name><operator pos:line="86" pos:column="39">==<pos:position pos:line="86" pos:column="41"/></operator><literal type="number" pos:line="86" pos:column="41">0<pos:position pos:line="86" pos:column="42"/></literal></expr></argument> )<pos:position pos:line="86" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="45"/></expr_stmt>
  <for pos:line="87" pos:column="3">for<control pos:line="87" pos:column="6">(<init><expr><name pos:line="87" pos:column="7">i<pos:position pos:line="87" pos:column="8"/></name><operator pos:line="87" pos:column="8">=<pos:position pos:line="87" pos:column="9"/></operator><literal type="number" pos:line="87" pos:column="9">0<pos:position pos:line="87" pos:column="10"/></literal></expr>;<pos:position pos:line="87" pos:column="11"/></init> <condition><expr><name pos:line="87" pos:column="12">i<pos:position pos:line="87" pos:column="13"/></name><operator pos:line="87" pos:column="13">&lt;<pos:position pos:line="87" pos:column="17"/></operator><name><name pos:line="87" pos:column="14">pTabList<pos:position pos:line="87" pos:column="22"/></name><operator pos:line="87" pos:column="22">-&gt;<pos:position pos:line="87" pos:column="27"/></operator><name pos:line="87" pos:column="24">nSrc<pos:position pos:line="87" pos:column="28"/></name></name></expr>;<pos:position pos:line="87" pos:column="29"/></condition> <incr><expr><name pos:line="87" pos:column="30">i<pos:position pos:line="87" pos:column="31"/></name><operator pos:line="87" pos:column="31">++<pos:position pos:line="87" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="87" pos:column="34"/></control><block pos:line="87" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">createMask<pos:position pos:line="88" pos:column="15"/></name><argument_list pos:line="88" pos:column="15">(<argument><expr><name pos:line="88" pos:column="16">pMaskSet<pos:position pos:line="88" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="26">pTabList<pos:position pos:line="88" pos:column="34"/></name><operator pos:line="88" pos:column="34">-&gt;<pos:position pos:line="88" pos:column="39"/></operator><name pos:line="88" pos:column="36">a<pos:position pos:line="88" pos:column="37"/></name><index pos:line="88" pos:column="37">[<expr><name pos:line="88" pos:column="38">i<pos:position pos:line="88" pos:column="39"/></name></expr>]<pos:position pos:line="88" pos:column="40"/></index></name><operator pos:line="88" pos:column="40">.<pos:position pos:line="88" pos:column="41"/></operator><name pos:line="88" pos:column="41">iCursor<pos:position pos:line="88" pos:column="48"/></name></expr></argument>)<pos:position pos:line="88" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="50"/></expr_stmt>
    <if pos:line="89" pos:column="5">if<condition pos:line="89" pos:column="7">( <expr><call><name pos:line="89" pos:column="9">ALWAYS<pos:position pos:line="89" pos:column="15"/></name><argument_list pos:line="89" pos:column="15">(<argument><expr><name><name pos:line="89" pos:column="16">pTabList<pos:position pos:line="89" pos:column="24"/></name><operator pos:line="89" pos:column="24">-&gt;<pos:position pos:line="89" pos:column="29"/></operator><name pos:line="89" pos:column="26">a<pos:position pos:line="89" pos:column="27"/></name><index pos:line="89" pos:column="27">[<expr><name pos:line="89" pos:column="28">i<pos:position pos:line="89" pos:column="29"/></name></expr>]<pos:position pos:line="89" pos:column="30"/></index></name><operator pos:line="89" pos:column="30">.<pos:position pos:line="89" pos:column="31"/></operator><name pos:line="89" pos:column="31">pTab<pos:position pos:line="89" pos:column="35"/></name></expr></argument>)<pos:position pos:line="89" pos:column="36"/></argument_list></call> <operator pos:line="89" pos:column="37">&amp;&amp;<pos:position pos:line="89" pos:column="47"/></operator> <call><name pos:line="89" pos:column="40">IsVirtual<pos:position pos:line="89" pos:column="49"/></name><argument_list pos:line="89" pos:column="49">(<argument><expr><name><name pos:line="89" pos:column="50">pTabList<pos:position pos:line="89" pos:column="58"/></name><operator pos:line="89" pos:column="58">-&gt;<pos:position pos:line="89" pos:column="63"/></operator><name pos:line="89" pos:column="60">a<pos:position pos:line="89" pos:column="61"/></name><index pos:line="89" pos:column="61">[<expr><name pos:line="89" pos:column="62">i<pos:position pos:line="89" pos:column="63"/></name></expr>]<pos:position pos:line="89" pos:column="64"/></index></name><operator pos:line="89" pos:column="64">.<pos:position pos:line="89" pos:column="65"/></operator><name pos:line="89" pos:column="65">pTab<pos:position pos:line="89" pos:column="69"/></name></expr></argument>)<pos:position pos:line="89" pos:column="70"/></argument_list></call></expr> )<pos:position pos:line="89" pos:column="72"/></condition><then><block pos:line="89" pos:column="72">{
      <expr_stmt><expr><name><name pos:line="90" pos:column="7">pWC<pos:position pos:line="90" pos:column="10"/></name><operator pos:line="90" pos:column="10">-&gt;<pos:position pos:line="90" pos:column="15"/></operator><name pos:line="90" pos:column="12">vmask<pos:position pos:line="90" pos:column="17"/></name></name> <operator pos:line="90" pos:column="18">|=<pos:position pos:line="90" pos:column="20"/></operator> <operator pos:line="90" pos:column="21">(<pos:position pos:line="90" pos:column="22"/></operator><operator pos:line="90" pos:column="22">(<pos:position pos:line="90" pos:column="23"/></operator><name pos:line="90" pos:column="23">Bitmask<pos:position pos:line="90" pos:column="30"/></name><operator pos:line="90" pos:column="30">)<pos:position pos:line="90" pos:column="31"/></operator><literal type="number" pos:line="90" pos:column="31">1<pos:position pos:line="90" pos:column="32"/></literal> <operator pos:line="90" pos:column="33">&lt;&lt;<pos:position pos:line="90" pos:column="41"/></operator> <name pos:line="90" pos:column="36">i<pos:position pos:line="90" pos:column="37"/></name><operator pos:line="90" pos:column="37">)<pos:position pos:line="90" pos:column="38"/></operator></expr>;<pos:position pos:line="90" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>
  }<pos:position pos:line="92" pos:column="4"/></block></for>
<cpp:ifndef pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">ifndef<pos:position pos:line="93" pos:column="8"/></cpp:directive> <name pos:line="93" pos:column="9">NDEBUG<pos:position pos:line="93" pos:column="15"/></name></cpp:ifndef>
  <block pos:line="94" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="95" pos:column="5">Bitmask<pos:position pos:line="95" pos:column="12"/></name></type> <name pos:line="95" pos:column="13">toTheLeft<pos:position pos:line="95" pos:column="22"/></name> <init pos:line="95" pos:column="23">= <expr><literal type="number" pos:line="95" pos:column="25">0<pos:position pos:line="95" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="95" pos:column="27"/></decl_stmt>
    <for pos:line="96" pos:column="5">for<control pos:line="96" pos:column="8">(<init><expr><name pos:line="96" pos:column="9">i<pos:position pos:line="96" pos:column="10"/></name><operator pos:line="96" pos:column="10">=<pos:position pos:line="96" pos:column="11"/></operator><literal type="number" pos:line="96" pos:column="11">0<pos:position pos:line="96" pos:column="12"/></literal></expr>;<pos:position pos:line="96" pos:column="13"/></init> <condition><expr><name pos:line="96" pos:column="14">i<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">&lt;<pos:position pos:line="96" pos:column="19"/></operator><name><name pos:line="96" pos:column="16">pTabList<pos:position pos:line="96" pos:column="24"/></name><operator pos:line="96" pos:column="24">-&gt;<pos:position pos:line="96" pos:column="29"/></operator><name pos:line="96" pos:column="26">nSrc<pos:position pos:line="96" pos:column="30"/></name></name></expr>;<pos:position pos:line="96" pos:column="31"/></condition> <incr><expr><name pos:line="96" pos:column="32">i<pos:position pos:line="96" pos:column="33"/></name><operator pos:line="96" pos:column="33">++<pos:position pos:line="96" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="96" pos:column="36"/></control><block pos:line="96" pos:column="36">{
      <decl_stmt><decl><type><name pos:line="97" pos:column="7">Bitmask<pos:position pos:line="97" pos:column="14"/></name></type> <name pos:line="97" pos:column="15">m<pos:position pos:line="97" pos:column="16"/></name> <init pos:line="97" pos:column="17">= <expr><call><name pos:line="97" pos:column="19">getMask<pos:position pos:line="97" pos:column="26"/></name><argument_list pos:line="97" pos:column="26">(<argument><expr><name pos:line="97" pos:column="27">pMaskSet<pos:position pos:line="97" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="37">pTabList<pos:position pos:line="97" pos:column="45"/></name><operator pos:line="97" pos:column="45">-&gt;<pos:position pos:line="97" pos:column="50"/></operator><name pos:line="97" pos:column="47">a<pos:position pos:line="97" pos:column="48"/></name><index pos:line="97" pos:column="48">[<expr><name pos:line="97" pos:column="49">i<pos:position pos:line="97" pos:column="50"/></name></expr>]<pos:position pos:line="97" pos:column="51"/></index></name><operator pos:line="97" pos:column="51">.<pos:position pos:line="97" pos:column="52"/></operator><name pos:line="97" pos:column="52">iCursor<pos:position pos:line="97" pos:column="59"/></name></expr></argument>)<pos:position pos:line="97" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="97" pos:column="61"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">assert<pos:position pos:line="98" pos:column="13"/></name><argument_list pos:line="98" pos:column="13">( <argument><expr><operator pos:line="98" pos:column="15">(<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="16">m<pos:position pos:line="98" pos:column="17"/></name><operator pos:line="98" pos:column="17">-<pos:position pos:line="98" pos:column="18"/></operator><literal type="number" pos:line="98" pos:column="18">1<pos:position pos:line="98" pos:column="19"/></literal><operator pos:line="98" pos:column="19">)<pos:position pos:line="98" pos:column="20"/></operator><operator pos:line="98" pos:column="20">==<pos:position pos:line="98" pos:column="22"/></operator><name pos:line="98" pos:column="22">toTheLeft<pos:position pos:line="98" pos:column="31"/></name></expr></argument> )<pos:position pos:line="98" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name pos:line="99" pos:column="7">toTheLeft<pos:position pos:line="99" pos:column="16"/></name> <operator pos:line="99" pos:column="17">|=<pos:position pos:line="99" pos:column="19"/></operator> <name pos:line="99" pos:column="20">m<pos:position pos:line="99" pos:column="21"/></name></expr>;<pos:position pos:line="99" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></for>
  }<pos:position pos:line="101" pos:column="4"/></block>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif<pos:position pos:line="102" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="104" pos:column="3">/* Analyze all of the subexpressions.  Note that exprAnalyze() might
  ** add new virtual terms onto the end of the WHERE clause.  We do not
  ** want to analyze these virtual terms, so start analyzing at the end
  ** and work forward so that the added virtual terms are never processed.
  */</comment>
  <expr_stmt><expr><call><name pos:line="109" pos:column="3">exprAnalyzeAll<pos:position pos:line="109" pos:column="17"/></name><argument_list pos:line="109" pos:column="17">(<argument><expr><name pos:line="109" pos:column="18">pTabList<pos:position pos:line="109" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="28">pWC<pos:position pos:line="109" pos:column="31"/></name></expr></argument>)<pos:position pos:line="109" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="33"/></expr_stmt>
  <if pos:line="110" pos:column="3">if<condition pos:line="110" pos:column="5">( <expr><name><name pos:line="110" pos:column="7">db<pos:position pos:line="110" pos:column="9"/></name><operator pos:line="110" pos:column="9">-&gt;<pos:position pos:line="110" pos:column="14"/></operator><name pos:line="110" pos:column="11">mallocFailed<pos:position pos:line="110" pos:column="23"/></name></name></expr> )<pos:position pos:line="110" pos:column="25"/></condition><then><block pos:line="110" pos:column="25">{
    <goto pos:line="111" pos:column="5">goto <name pos:line="111" pos:column="10">whereBeginError<pos:position pos:line="111" pos:column="25"/></name>;<pos:position pos:line="111" pos:column="26"/></goto>
  }<pos:position pos:line="112" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="114" pos:column="3">/* Chose the best index to use for each table in the FROM clause.
  **
  ** This loop fills in the following fields:
  **
  **   pWInfo-&gt;a[].pIdx      The index to use for this level of the loop.
  **   pWInfo-&gt;a[].wsFlags   WHERE_xxx flags associated with pIdx
  **   pWInfo-&gt;a[].nEq       The number of == and IN constraints
  **   pWInfo-&gt;a[].iFrom     Which term of the FROM clause is being coded
  **   pWInfo-&gt;a[].iTabCur   The VDBE cursor for the database table
  **   pWInfo-&gt;a[].iIdxCur   The VDBE cursor for the index
  **   pWInfo-&gt;a[].pTerm     When wsFlags==WO_OR, the OR-clause term
  **
  ** This loop also figures out the nesting order of tables in the FROM
  ** clause.
  */</comment>
  <expr_stmt><expr><name pos:line="129" pos:column="3">notReady<pos:position pos:line="129" pos:column="11"/></name> <operator pos:line="129" pos:column="12">=<pos:position pos:line="129" pos:column="13"/></operator> <operator pos:line="129" pos:column="14">~<pos:position pos:line="129" pos:column="15"/></operator><operator pos:line="129" pos:column="15">(<pos:position pos:line="129" pos:column="16"/></operator><name pos:line="129" pos:column="16">Bitmask<pos:position pos:line="129" pos:column="23"/></name><operator pos:line="129" pos:column="23">)<pos:position pos:line="129" pos:column="24"/></operator><literal type="number" pos:line="129" pos:column="24">0<pos:position pos:line="129" pos:column="25"/></literal></expr>;<pos:position pos:line="129" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="130" pos:column="3">pTabItem<pos:position pos:line="130" pos:column="11"/></name> <operator pos:line="130" pos:column="12">=<pos:position pos:line="130" pos:column="13"/></operator> <name><name pos:line="130" pos:column="14">pTabList<pos:position pos:line="130" pos:column="22"/></name><operator pos:line="130" pos:column="22">-&gt;<pos:position pos:line="130" pos:column="27"/></operator><name pos:line="130" pos:column="24">a<pos:position pos:line="130" pos:column="25"/></name></name></expr>;<pos:position pos:line="130" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="131" pos:column="3">pLevel<pos:position pos:line="131" pos:column="9"/></name> <operator pos:line="131" pos:column="10">=<pos:position pos:line="131" pos:column="11"/></operator> <name><name pos:line="131" pos:column="12">pWInfo<pos:position pos:line="131" pos:column="18"/></name><operator pos:line="131" pos:column="18">-&gt;<pos:position pos:line="131" pos:column="23"/></operator><name pos:line="131" pos:column="20">a<pos:position pos:line="131" pos:column="21"/></name></name></expr>;<pos:position pos:line="131" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="132" pos:column="3">andFlags<pos:position pos:line="132" pos:column="11"/></name> <operator pos:line="132" pos:column="12">=<pos:position pos:line="132" pos:column="13"/></operator> <operator pos:line="132" pos:column="14">~<pos:position pos:line="132" pos:column="15"/></operator><literal type="number" pos:line="132" pos:column="15">0<pos:position pos:line="132" pos:column="16"/></literal></expr>;<pos:position pos:line="132" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="133" pos:column="3">WHERETRACE<pos:position pos:line="133" pos:column="13"/></name><argument_list pos:line="133" pos:column="13">(<argument><expr><operator pos:line="133" pos:column="14">(<pos:position pos:line="133" pos:column="15"/></operator><literal type="string" pos:line="133" pos:column="15">"*** Optimizer Start ***\n"<pos:position pos:line="133" pos:column="42"/></literal><operator pos:line="133" pos:column="42">)<pos:position pos:line="133" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="133" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="45"/></expr_stmt>
  <for pos:line="134" pos:column="3">for<control pos:line="134" pos:column="6">(<init><expr><name pos:line="134" pos:column="7">i<pos:position pos:line="134" pos:column="8"/></name><operator pos:line="134" pos:column="8">=<pos:position pos:line="134" pos:column="9"/></operator><name pos:line="134" pos:column="9">iFrom<pos:position pos:line="134" pos:column="14"/></name><operator pos:line="134" pos:column="14">=<pos:position pos:line="134" pos:column="15"/></operator><literal type="number" pos:line="134" pos:column="15">0<pos:position pos:line="134" pos:column="16"/></literal></expr><operator pos:line="134" pos:column="16">,<pos:position pos:line="134" pos:column="17"/></operator> <expr><name pos:line="134" pos:column="18">pLevel<pos:position pos:line="134" pos:column="24"/></name><operator pos:line="134" pos:column="24">=<pos:position pos:line="134" pos:column="25"/></operator><name><name pos:line="134" pos:column="25">pWInfo<pos:position pos:line="134" pos:column="31"/></name><operator pos:line="134" pos:column="31">-&gt;<pos:position pos:line="134" pos:column="36"/></operator><name pos:line="134" pos:column="33">a<pos:position pos:line="134" pos:column="34"/></name></name></expr>;<pos:position pos:line="134" pos:column="35"/></init> <condition><expr><name pos:line="134" pos:column="36">i<pos:position pos:line="134" pos:column="37"/></name><operator pos:line="134" pos:column="37">&lt;<pos:position pos:line="134" pos:column="41"/></operator><name><name pos:line="134" pos:column="38">pTabList<pos:position pos:line="134" pos:column="46"/></name><operator pos:line="134" pos:column="46">-&gt;<pos:position pos:line="134" pos:column="51"/></operator><name pos:line="134" pos:column="48">nSrc<pos:position pos:line="134" pos:column="52"/></name></name></expr>;<pos:position pos:line="134" pos:column="53"/></condition> <incr><expr><name pos:line="134" pos:column="54">i<pos:position pos:line="134" pos:column="55"/></name><operator pos:line="134" pos:column="55">++<pos:position pos:line="134" pos:column="57"/></operator></expr><operator pos:line="134" pos:column="57">,<pos:position pos:line="134" pos:column="58"/></operator> <expr><name pos:line="134" pos:column="59">pLevel<pos:position pos:line="134" pos:column="65"/></name><operator pos:line="134" pos:column="65">++<pos:position pos:line="134" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="134" pos:column="68"/></control><block pos:line="134" pos:column="68">{
    <decl_stmt><decl><type><name pos:line="135" pos:column="5">WhereCost<pos:position pos:line="135" pos:column="14"/></name></type> <name pos:line="135" pos:column="15">bestPlan<pos:position pos:line="135" pos:column="23"/></name></decl>;<pos:position pos:line="135" pos:column="24"/></decl_stmt>         <comment type="block" pos:line="135" pos:column="33">/* Most efficient plan seen so far */</comment>
    <decl_stmt><decl><type><name pos:line="136" pos:column="5">Index<pos:position pos:line="136" pos:column="10"/></name> <modifier pos:line="136" pos:column="11">*<pos:position pos:line="136" pos:column="12"/></modifier></type><name pos:line="136" pos:column="12">pIdx<pos:position pos:line="136" pos:column="16"/></name></decl>;<pos:position pos:line="136" pos:column="17"/></decl_stmt>                <comment type="block" pos:line="136" pos:column="33">/* Index for FROM table at pTabItem */</comment>
    <decl_stmt><decl><type><name pos:line="137" pos:column="5">int<pos:position pos:line="137" pos:column="8"/></name></type> <name pos:line="137" pos:column="9">j<pos:position pos:line="137" pos:column="10"/></name></decl>;<pos:position pos:line="137" pos:column="11"/></decl_stmt>                      <comment type="block" pos:line="137" pos:column="33">/* For looping over FROM tables */</comment>
    <decl_stmt><decl><type><name pos:line="138" pos:column="5">int<pos:position pos:line="138" pos:column="8"/></name></type> <name pos:line="138" pos:column="9">bestJ<pos:position pos:line="138" pos:column="14"/></name> <init pos:line="138" pos:column="15">= <expr><literal type="number" pos:line="138" pos:column="17">0<pos:position pos:line="138" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="138" pos:column="19"/></decl_stmt>              <comment type="block" pos:line="138" pos:column="33">/* The value of j */</comment>
    <decl_stmt><decl><type><name pos:line="139" pos:column="5">Bitmask<pos:position pos:line="139" pos:column="12"/></name></type> <name pos:line="139" pos:column="13">m<pos:position pos:line="139" pos:column="14"/></name></decl>;<pos:position pos:line="139" pos:column="15"/></decl_stmt>                  <comment type="block" pos:line="139" pos:column="33">/* Bitmask value for j or bestJ */</comment>
    <decl_stmt><decl><type><name pos:line="140" pos:column="5">int<pos:position pos:line="140" pos:column="8"/></name></type> <name pos:line="140" pos:column="9">once<pos:position pos:line="140" pos:column="13"/></name> <init pos:line="140" pos:column="14">= <expr><literal type="number" pos:line="140" pos:column="16">0<pos:position pos:line="140" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="140" pos:column="18"/></decl_stmt>               <comment type="block" pos:line="140" pos:column="33">/* True when first table is seen */</comment>

    <expr_stmt><expr><call><name pos:line="142" pos:column="5">memset<pos:position pos:line="142" pos:column="11"/></name><argument_list pos:line="142" pos:column="11">(<argument><expr><operator pos:line="142" pos:column="12">&amp;<pos:position pos:line="142" pos:column="17"/></operator><name pos:line="142" pos:column="13">bestPlan<pos:position pos:line="142" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="23">0<pos:position pos:line="142" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="142" pos:column="26">sizeof<argument_list pos:line="142" pos:column="32">(<argument><expr><name pos:line="142" pos:column="33">bestPlan<pos:position pos:line="142" pos:column="41"/></name></expr></argument>)<pos:position pos:line="142" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="142" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="143" pos:column="5">bestPlan<pos:position pos:line="143" pos:column="13"/></name><operator pos:line="143" pos:column="13">.<pos:position pos:line="143" pos:column="14"/></operator><name pos:line="143" pos:column="14">rCost<pos:position pos:line="143" pos:column="19"/></name></name> <operator pos:line="143" pos:column="20">=<pos:position pos:line="143" pos:column="21"/></operator> <name pos:line="143" pos:column="22">SQLITE_BIG_DBL<pos:position pos:line="143" pos:column="36"/></name></expr>;<pos:position pos:line="143" pos:column="37"/></expr_stmt>
    <for pos:line="144" pos:column="5">for<control pos:line="144" pos:column="8">(<init><expr><name pos:line="144" pos:column="9">j<pos:position pos:line="144" pos:column="10"/></name><operator pos:line="144" pos:column="10">=<pos:position pos:line="144" pos:column="11"/></operator><name pos:line="144" pos:column="11">iFrom<pos:position pos:line="144" pos:column="16"/></name></expr><operator pos:line="144" pos:column="16">,<pos:position pos:line="144" pos:column="17"/></operator> <expr><name pos:line="144" pos:column="18">pTabItem<pos:position pos:line="144" pos:column="26"/></name><operator pos:line="144" pos:column="26">=<pos:position pos:line="144" pos:column="27"/></operator><operator pos:line="144" pos:column="27">&amp;<pos:position pos:line="144" pos:column="32"/></operator><name><name pos:line="144" pos:column="28">pTabList<pos:position pos:line="144" pos:column="36"/></name><operator pos:line="144" pos:column="36">-&gt;<pos:position pos:line="144" pos:column="41"/></operator><name pos:line="144" pos:column="38">a<pos:position pos:line="144" pos:column="39"/></name><index pos:line="144" pos:column="39">[<expr><name pos:line="144" pos:column="40">j<pos:position pos:line="144" pos:column="41"/></name></expr>]<pos:position pos:line="144" pos:column="42"/></index></name></expr>;<pos:position pos:line="144" pos:column="43"/></init> <condition><expr><name pos:line="144" pos:column="44">j<pos:position pos:line="144" pos:column="45"/></name><operator pos:line="144" pos:column="45">&lt;<pos:position pos:line="144" pos:column="49"/></operator><name><name pos:line="144" pos:column="46">pTabList<pos:position pos:line="144" pos:column="54"/></name><operator pos:line="144" pos:column="54">-&gt;<pos:position pos:line="144" pos:column="59"/></operator><name pos:line="144" pos:column="56">nSrc<pos:position pos:line="144" pos:column="60"/></name></name></expr>;<pos:position pos:line="144" pos:column="61"/></condition> <incr><expr><name pos:line="144" pos:column="62">j<pos:position pos:line="144" pos:column="63"/></name><operator pos:line="144" pos:column="63">++<pos:position pos:line="144" pos:column="65"/></operator></expr><operator pos:line="144" pos:column="65">,<pos:position pos:line="144" pos:column="66"/></operator> <expr><name pos:line="144" pos:column="67">pTabItem<pos:position pos:line="144" pos:column="75"/></name><operator pos:line="144" pos:column="75">++<pos:position pos:line="144" pos:column="77"/></operator></expr></incr>)<pos:position pos:line="144" pos:column="78"/></control><block pos:line="144" pos:column="78">{
      <decl_stmt><decl><type><name pos:line="145" pos:column="7">int<pos:position pos:line="145" pos:column="10"/></name></type> <name pos:line="145" pos:column="11">doNotReorder<pos:position pos:line="145" pos:column="23"/></name></decl>;<pos:position pos:line="145" pos:column="24"/></decl_stmt>    <comment type="block" pos:line="145" pos:column="28">/* True if this table should not be reordered */</comment>
      <decl_stmt><decl><type><name pos:line="146" pos:column="7">WhereCost<pos:position pos:line="146" pos:column="16"/></name></type> <name pos:line="146" pos:column="17">sCost<pos:position pos:line="146" pos:column="22"/></name></decl>;<pos:position pos:line="146" pos:column="23"/></decl_stmt>     <comment type="block" pos:line="146" pos:column="28">/* Cost information from best[Virtual]Index() */</comment>
      <decl_stmt><decl><type><name pos:line="147" pos:column="7">ExprList<pos:position pos:line="147" pos:column="15"/></name> <modifier pos:line="147" pos:column="16">*<pos:position pos:line="147" pos:column="17"/></modifier></type><name pos:line="147" pos:column="17">pOrderBy<pos:position pos:line="147" pos:column="25"/></name></decl>;<pos:position pos:line="147" pos:column="26"/></decl_stmt>  <comment type="block" pos:line="147" pos:column="28">/* ORDER BY clause for index to optimize */</comment>

      <expr_stmt><expr><name pos:line="149" pos:column="7">doNotReorder<pos:position pos:line="149" pos:column="19"/></name> <operator pos:line="149" pos:column="20">=<pos:position pos:line="149" pos:column="21"/></operator>  <operator pos:line="149" pos:column="23">(<pos:position pos:line="149" pos:column="24"/></operator><name><name pos:line="149" pos:column="24">pTabItem<pos:position pos:line="149" pos:column="32"/></name><operator pos:line="149" pos:column="32">-&gt;<pos:position pos:line="149" pos:column="37"/></operator><name pos:line="149" pos:column="34">jointype<pos:position pos:line="149" pos:column="42"/></name></name> <operator pos:line="149" pos:column="43">&amp;<pos:position pos:line="149" pos:column="48"/></operator> <operator pos:line="149" pos:column="45">(<pos:position pos:line="149" pos:column="46"/></operator><name pos:line="149" pos:column="46">JT_LEFT<pos:position pos:line="149" pos:column="53"/></name><operator pos:line="149" pos:column="53">|<pos:position pos:line="149" pos:column="54"/></operator><name pos:line="149" pos:column="54">JT_CROSS<pos:position pos:line="149" pos:column="62"/></name><operator pos:line="149" pos:column="62">)<pos:position pos:line="149" pos:column="63"/></operator><operator pos:line="149" pos:column="63">)<pos:position pos:line="149" pos:column="64"/></operator><operator pos:line="149" pos:column="64">!=<pos:position pos:line="149" pos:column="66"/></operator><literal type="number" pos:line="149" pos:column="66">0<pos:position pos:line="149" pos:column="67"/></literal></expr>;<pos:position pos:line="149" pos:column="68"/></expr_stmt>
      <if pos:line="150" pos:column="7">if<condition pos:line="150" pos:column="9">( <expr><name pos:line="150" pos:column="11">once<pos:position pos:line="150" pos:column="15"/></name> <operator pos:line="150" pos:column="16">&amp;&amp;<pos:position pos:line="150" pos:column="26"/></operator> <name pos:line="150" pos:column="19">doNotReorder<pos:position pos:line="150" pos:column="31"/></name></expr> )<pos:position pos:line="150" pos:column="33"/></condition><then pos:line="150" pos:column="33"> <block type="pseudo"><break pos:line="150" pos:column="34">break;<pos:position pos:line="150" pos:column="40"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="151" pos:column="7">m<pos:position pos:line="151" pos:column="8"/></name> <operator pos:line="151" pos:column="9">=<pos:position pos:line="151" pos:column="10"/></operator> <call><name pos:line="151" pos:column="11">getMask<pos:position pos:line="151" pos:column="18"/></name><argument_list pos:line="151" pos:column="18">(<argument><expr><name pos:line="151" pos:column="19">pMaskSet<pos:position pos:line="151" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="29">pTabItem<pos:position pos:line="151" pos:column="37"/></name><operator pos:line="151" pos:column="37">-&gt;<pos:position pos:line="151" pos:column="42"/></operator><name pos:line="151" pos:column="39">iCursor<pos:position pos:line="151" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="48"/></expr_stmt>
      <if pos:line="152" pos:column="7">if<condition pos:line="152" pos:column="9">( <expr><operator pos:line="152" pos:column="11">(<pos:position pos:line="152" pos:column="12"/></operator><name pos:line="152" pos:column="12">m<pos:position pos:line="152" pos:column="13"/></name> <operator pos:line="152" pos:column="14">&amp;<pos:position pos:line="152" pos:column="19"/></operator> <name pos:line="152" pos:column="16">notReady<pos:position pos:line="152" pos:column="24"/></name><operator pos:line="152" pos:column="24">)<pos:position pos:line="152" pos:column="25"/></operator><operator pos:line="152" pos:column="25">==<pos:position pos:line="152" pos:column="27"/></operator><literal type="number" pos:line="152" pos:column="27">0<pos:position pos:line="152" pos:column="28"/></literal></expr> )<pos:position pos:line="152" pos:column="30"/></condition><then><block pos:line="152" pos:column="30">{
        <if pos:line="153" pos:column="9">if<condition pos:line="153" pos:column="11">( <expr><name pos:line="153" pos:column="13">j<pos:position pos:line="153" pos:column="14"/></name><operator pos:line="153" pos:column="14">==<pos:position pos:line="153" pos:column="16"/></operator><name pos:line="153" pos:column="16">iFrom<pos:position pos:line="153" pos:column="21"/></name></expr> )<pos:position pos:line="153" pos:column="23"/></condition><then pos:line="153" pos:column="23"> <block type="pseudo"><expr_stmt><expr><name pos:line="153" pos:column="24">iFrom<pos:position pos:line="153" pos:column="29"/></name><operator pos:line="153" pos:column="29">++<pos:position pos:line="153" pos:column="31"/></operator></expr>;<pos:position pos:line="153" pos:column="32"/></expr_stmt></block></then></if>
        <continue pos:line="154" pos:column="9">continue;<pos:position pos:line="154" pos:column="18"/></continue>
      }<pos:position pos:line="155" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="156" pos:column="7">pOrderBy<pos:position pos:line="156" pos:column="15"/></name> <operator pos:line="156" pos:column="16">=<pos:position pos:line="156" pos:column="17"/></operator> <operator pos:line="156" pos:column="18">(<pos:position pos:line="156" pos:column="19"/></operator><ternary><condition><expr><operator pos:line="156" pos:column="19">(<pos:position pos:line="156" pos:column="20"/></operator><name pos:line="156" pos:column="20">i<pos:position pos:line="156" pos:column="21"/></name><operator pos:line="156" pos:column="21">==<pos:position pos:line="156" pos:column="23"/></operator><literal type="number" pos:line="156" pos:column="23">0<pos:position pos:line="156" pos:column="24"/></literal> <operator pos:line="156" pos:column="25">&amp;&amp;<pos:position pos:line="156" pos:column="35"/></operator> <name pos:line="156" pos:column="28">ppOrderBy<pos:position pos:line="156" pos:column="37"/></name> <operator pos:line="156" pos:column="38">)<pos:position pos:line="156" pos:column="39"/></operator></expr>?<pos:position pos:line="156" pos:column="40"/></condition><then><expr><operator pos:line="156" pos:column="40">*<pos:position pos:line="156" pos:column="41"/></operator><name pos:line="156" pos:column="41">ppOrderBy<pos:position pos:line="156" pos:column="50"/></name></expr></then><else pos:line="156" pos:column="50">:<expr><literal type="number" pos:line="156" pos:column="51">0<pos:position pos:line="156" pos:column="52"/></literal></expr></else></ternary><operator pos:line="156" pos:column="52">)<pos:position pos:line="156" pos:column="53"/></operator></expr>;<pos:position pos:line="156" pos:column="54"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="158" pos:column="7">assert<pos:position pos:line="158" pos:column="13"/></name><argument_list pos:line="158" pos:column="13">( <argument><expr><name><name pos:line="158" pos:column="15">pTabItem<pos:position pos:line="158" pos:column="23"/></name><operator pos:line="158" pos:column="23">-&gt;<pos:position pos:line="158" pos:column="28"/></operator><name pos:line="158" pos:column="25">pTab<pos:position pos:line="158" pos:column="29"/></name></name></expr></argument> )<pos:position pos:line="158" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="32"/></expr_stmt>
<cpp:ifndef pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">ifndef<pos:position pos:line="159" pos:column="8"/></cpp:directive> <name pos:line="159" pos:column="9">SQLITE_OMIT_VIRTUALTABLE<pos:position pos:line="159" pos:column="33"/></name></cpp:ifndef>
      <if pos:line="160" pos:column="7">if<condition pos:line="160" pos:column="9">( <expr><call><name pos:line="160" pos:column="11">IsVirtual<pos:position pos:line="160" pos:column="20"/></name><argument_list pos:line="160" pos:column="20">(<argument><expr><name><name pos:line="160" pos:column="21">pTabItem<pos:position pos:line="160" pos:column="29"/></name><operator pos:line="160" pos:column="29">-&gt;<pos:position pos:line="160" pos:column="34"/></operator><name pos:line="160" pos:column="31">pTab<pos:position pos:line="160" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="36"/></argument_list></call></expr> )<pos:position pos:line="160" pos:column="38"/></condition><then><block pos:line="160" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="161" pos:column="9">sqlite3_index_info<pos:position pos:line="161" pos:column="27"/></name> <modifier pos:line="161" pos:column="28">*<pos:position pos:line="161" pos:column="29"/></modifier><modifier pos:line="161" pos:column="29">*<pos:position pos:line="161" pos:column="30"/></modifier></type><name pos:line="161" pos:column="30">pp<pos:position pos:line="161" pos:column="32"/></name> <init pos:line="161" pos:column="33">= <expr><operator pos:line="161" pos:column="35">&amp;<pos:position pos:line="161" pos:column="40"/></operator><name><name pos:line="161" pos:column="36">pWInfo<pos:position pos:line="161" pos:column="42"/></name><operator pos:line="161" pos:column="42">-&gt;<pos:position pos:line="161" pos:column="47"/></operator><name pos:line="161" pos:column="44">a<pos:position pos:line="161" pos:column="45"/></name><index pos:line="161" pos:column="45">[<expr><name pos:line="161" pos:column="46">j<pos:position pos:line="161" pos:column="47"/></name></expr>]<pos:position pos:line="161" pos:column="48"/></index></name><operator pos:line="161" pos:column="48">.<pos:position pos:line="161" pos:column="49"/></operator><name pos:line="161" pos:column="49">pIdxInfo<pos:position pos:line="161" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="161" pos:column="58"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="162" pos:column="9">bestVirtualIndex<pos:position pos:line="162" pos:column="25"/></name><argument_list pos:line="162" pos:column="25">(<argument><expr><name pos:line="162" pos:column="26">pParse<pos:position pos:line="162" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="34">pWC<pos:position pos:line="162" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="39">pTabItem<pos:position pos:line="162" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="49">notReady<pos:position pos:line="162" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="59">pOrderBy<pos:position pos:line="162" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="162" pos:column="69">&amp;<pos:position pos:line="162" pos:column="74"/></operator><name pos:line="162" pos:column="70">sCost<pos:position pos:line="162" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="77">pp<pos:position pos:line="162" pos:column="79"/></name></expr></argument>)<pos:position pos:line="162" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="81"/></expr_stmt>
      }<pos:position pos:line="163" pos:column="8"/></block></then><else pos:line="163" pos:column="8">else 
<cpp:endif pos:line="164" pos:column="1">#<cpp:directive pos:line="164" pos:column="2">endif<pos:position pos:line="164" pos:column="7"/></cpp:directive></cpp:endif>
      <block pos:line="165" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="166" pos:column="9">bestBtreeIndex<pos:position pos:line="166" pos:column="23"/></name><argument_list pos:line="166" pos:column="23">(<argument><expr><name pos:line="166" pos:column="24">pParse<pos:position pos:line="166" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="32">pWC<pos:position pos:line="166" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="37">pTabItem<pos:position pos:line="166" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="47">notReady<pos:position pos:line="166" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="57">pOrderBy<pos:position pos:line="166" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="166" pos:column="67">&amp;<pos:position pos:line="166" pos:column="72"/></operator><name pos:line="166" pos:column="68">sCost<pos:position pos:line="166" pos:column="73"/></name></expr></argument>)<pos:position pos:line="166" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="75"/></expr_stmt>
      }<pos:position pos:line="167" pos:column="8"/></block></else></if>
      <if pos:line="168" pos:column="7">if<condition pos:line="168" pos:column="9">( <expr><name pos:line="168" pos:column="11">once<pos:position pos:line="168" pos:column="15"/></name><operator pos:line="168" pos:column="15">==<pos:position pos:line="168" pos:column="17"/></operator><literal type="number" pos:line="168" pos:column="17">0<pos:position pos:line="168" pos:column="18"/></literal> <operator pos:line="168" pos:column="19">||<pos:position pos:line="168" pos:column="21"/></operator> <name><name pos:line="168" pos:column="22">sCost<pos:position pos:line="168" pos:column="27"/></name><operator pos:line="168" pos:column="27">.<pos:position pos:line="168" pos:column="28"/></operator><name pos:line="168" pos:column="28">rCost<pos:position pos:line="168" pos:column="33"/></name></name><operator pos:line="168" pos:column="33">&lt;<pos:position pos:line="168" pos:column="37"/></operator><name><name pos:line="168" pos:column="34">bestPlan<pos:position pos:line="168" pos:column="42"/></name><operator pos:line="168" pos:column="42">.<pos:position pos:line="168" pos:column="43"/></operator><name pos:line="168" pos:column="43">rCost<pos:position pos:line="168" pos:column="48"/></name></name></expr> )<pos:position pos:line="168" pos:column="50"/></condition><then><block pos:line="168" pos:column="50">{
        <expr_stmt><expr><name pos:line="169" pos:column="9">once<pos:position pos:line="169" pos:column="13"/></name> <operator pos:line="169" pos:column="14">=<pos:position pos:line="169" pos:column="15"/></operator> <literal type="number" pos:line="169" pos:column="16">1<pos:position pos:line="169" pos:column="17"/></literal></expr>;<pos:position pos:line="169" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="170" pos:column="9">bestPlan<pos:position pos:line="170" pos:column="17"/></name> <operator pos:line="170" pos:column="18">=<pos:position pos:line="170" pos:column="19"/></operator> <name pos:line="170" pos:column="20">sCost<pos:position pos:line="170" pos:column="25"/></name></expr>;<pos:position pos:line="170" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="171" pos:column="9">bestJ<pos:position pos:line="171" pos:column="14"/></name> <operator pos:line="171" pos:column="15">=<pos:position pos:line="171" pos:column="16"/></operator> <name pos:line="171" pos:column="17">j<pos:position pos:line="171" pos:column="18"/></name></expr>;<pos:position pos:line="171" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="172" pos:column="8"/></block></then></if>
      <if pos:line="173" pos:column="7">if<condition pos:line="173" pos:column="9">( <expr><name pos:line="173" pos:column="11">doNotReorder<pos:position pos:line="173" pos:column="23"/></name></expr> )<pos:position pos:line="173" pos:column="25"/></condition><then pos:line="173" pos:column="25"> <block type="pseudo"><break pos:line="173" pos:column="26">break;<pos:position pos:line="173" pos:column="32"/></break></block></then></if>
    }<pos:position pos:line="174" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="175" pos:column="5">assert<pos:position pos:line="175" pos:column="11"/></name><argument_list pos:line="175" pos:column="11">( <argument><expr><name pos:line="175" pos:column="13">once<pos:position pos:line="175" pos:column="17"/></name></expr></argument> )<pos:position pos:line="175" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="176" pos:column="5">assert<pos:position pos:line="176" pos:column="11"/></name><argument_list pos:line="176" pos:column="11">( <argument><expr><name pos:line="176" pos:column="13">notReady<pos:position pos:line="176" pos:column="21"/></name> <operator pos:line="176" pos:column="22">&amp;<pos:position pos:line="176" pos:column="27"/></operator> <call><name pos:line="176" pos:column="24">getMask<pos:position pos:line="176" pos:column="31"/></name><argument_list pos:line="176" pos:column="31">(<argument><expr><name pos:line="176" pos:column="32">pMaskSet<pos:position pos:line="176" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="42">pTabList<pos:position pos:line="176" pos:column="50"/></name><operator pos:line="176" pos:column="50">-&gt;<pos:position pos:line="176" pos:column="55"/></operator><name pos:line="176" pos:column="52">a<pos:position pos:line="176" pos:column="53"/></name><index pos:line="176" pos:column="53">[<expr><name pos:line="176" pos:column="54">bestJ<pos:position pos:line="176" pos:column="59"/></name></expr>]<pos:position pos:line="176" pos:column="60"/></index></name><operator pos:line="176" pos:column="60">.<pos:position pos:line="176" pos:column="61"/></operator><name pos:line="176" pos:column="61">iCursor<pos:position pos:line="176" pos:column="68"/></name></expr></argument>)<pos:position pos:line="176" pos:column="69"/></argument_list></call></expr></argument> )<pos:position pos:line="176" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="177" pos:column="5">WHERETRACE<pos:position pos:line="177" pos:column="15"/></name><argument_list pos:line="177" pos:column="15">(<argument><expr><operator pos:line="177" pos:column="16">(<pos:position pos:line="177" pos:column="17"/></operator><literal type="string" pos:line="177" pos:column="17">"*** Optimizer selects table %d for loop %d\n"<pos:position pos:line="177" pos:column="63"/></literal><operator pos:line="177" pos:column="63">,<pos:position pos:line="177" pos:column="64"/></operator> <name pos:line="177" pos:column="65">bestJ<pos:position pos:line="177" pos:column="70"/></name><operator pos:line="177" pos:column="70">,<pos:position pos:line="177" pos:column="71"/></operator>
           <name pos:line="178" pos:column="12">pLevel<pos:position pos:line="178" pos:column="18"/></name><operator pos:line="178" pos:column="18">-<pos:position pos:line="178" pos:column="19"/></operator><name><name pos:line="178" pos:column="19">pWInfo<pos:position pos:line="178" pos:column="25"/></name><operator pos:line="178" pos:column="25">-&gt;<pos:position pos:line="178" pos:column="30"/></operator><name pos:line="178" pos:column="27">a<pos:position pos:line="178" pos:column="28"/></name></name><operator pos:line="178" pos:column="28">)<pos:position pos:line="178" pos:column="29"/></operator></expr></argument>)<pos:position pos:line="178" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="31"/></expr_stmt>
    <if pos:line="179" pos:column="5">if<condition pos:line="179" pos:column="7">( <expr><operator pos:line="179" pos:column="9">(<pos:position pos:line="179" pos:column="10"/></operator><name><name pos:line="179" pos:column="10">bestPlan<pos:position pos:line="179" pos:column="18"/></name><operator pos:line="179" pos:column="18">.<pos:position pos:line="179" pos:column="19"/></operator><name pos:line="179" pos:column="19">plan<pos:position pos:line="179" pos:column="23"/></name><operator pos:line="179" pos:column="23">.<pos:position pos:line="179" pos:column="24"/></operator><name pos:line="179" pos:column="24">wsFlags<pos:position pos:line="179" pos:column="31"/></name></name> <operator pos:line="179" pos:column="32">&amp;<pos:position pos:line="179" pos:column="37"/></operator> <name pos:line="179" pos:column="34">WHERE_ORDERBY<pos:position pos:line="179" pos:column="47"/></name><operator pos:line="179" pos:column="47">)<pos:position pos:line="179" pos:column="48"/></operator><operator pos:line="179" pos:column="48">!=<pos:position pos:line="179" pos:column="50"/></operator><literal type="number" pos:line="179" pos:column="50">0<pos:position pos:line="179" pos:column="51"/></literal></expr> )<pos:position pos:line="179" pos:column="53"/></condition><then><block pos:line="179" pos:column="53">{
      <expr_stmt><expr><operator pos:line="180" pos:column="7">*<pos:position pos:line="180" pos:column="8"/></operator><name pos:line="180" pos:column="8">ppOrderBy<pos:position pos:line="180" pos:column="17"/></name> <operator pos:line="180" pos:column="18">=<pos:position pos:line="180" pos:column="19"/></operator> <literal type="number" pos:line="180" pos:column="20">0<pos:position pos:line="180" pos:column="21"/></literal></expr>;<pos:position pos:line="180" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="181" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="182" pos:column="5">andFlags<pos:position pos:line="182" pos:column="13"/></name> <operator pos:line="182" pos:column="14">&amp;=<pos:position pos:line="182" pos:column="20"/></operator> <name><name pos:line="182" pos:column="17">bestPlan<pos:position pos:line="182" pos:column="25"/></name><operator pos:line="182" pos:column="25">.<pos:position pos:line="182" pos:column="26"/></operator><name pos:line="182" pos:column="26">plan<pos:position pos:line="182" pos:column="30"/></name><operator pos:line="182" pos:column="30">.<pos:position pos:line="182" pos:column="31"/></operator><name pos:line="182" pos:column="31">wsFlags<pos:position pos:line="182" pos:column="38"/></name></name></expr>;<pos:position pos:line="182" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="183" pos:column="5">pLevel<pos:position pos:line="183" pos:column="11"/></name><operator pos:line="183" pos:column="11">-&gt;<pos:position pos:line="183" pos:column="16"/></operator><name pos:line="183" pos:column="13">plan<pos:position pos:line="183" pos:column="17"/></name></name> <operator pos:line="183" pos:column="18">=<pos:position pos:line="183" pos:column="19"/></operator> <name><name pos:line="183" pos:column="20">bestPlan<pos:position pos:line="183" pos:column="28"/></name><operator pos:line="183" pos:column="28">.<pos:position pos:line="183" pos:column="29"/></operator><name pos:line="183" pos:column="29">plan<pos:position pos:line="183" pos:column="33"/></name></name></expr>;<pos:position pos:line="183" pos:column="34"/></expr_stmt>
    <if pos:line="184" pos:column="5">if<condition pos:line="184" pos:column="7">( <expr><name><name pos:line="184" pos:column="9">bestPlan<pos:position pos:line="184" pos:column="17"/></name><operator pos:line="184" pos:column="17">.<pos:position pos:line="184" pos:column="18"/></operator><name pos:line="184" pos:column="18">plan<pos:position pos:line="184" pos:column="22"/></name><operator pos:line="184" pos:column="22">.<pos:position pos:line="184" pos:column="23"/></operator><name pos:line="184" pos:column="23">wsFlags<pos:position pos:line="184" pos:column="30"/></name></name> <operator pos:line="184" pos:column="31">&amp;<pos:position pos:line="184" pos:column="36"/></operator> <name pos:line="184" pos:column="33">WHERE_INDEXED<pos:position pos:line="184" pos:column="46"/></name></expr> )<pos:position pos:line="184" pos:column="48"/></condition><then><block pos:line="184" pos:column="48">{
      <expr_stmt><expr><name><name pos:line="185" pos:column="7">pLevel<pos:position pos:line="185" pos:column="13"/></name><operator pos:line="185" pos:column="13">-&gt;<pos:position pos:line="185" pos:column="18"/></operator><name pos:line="185" pos:column="15">iIdxCur<pos:position pos:line="185" pos:column="22"/></name></name> <operator pos:line="185" pos:column="23">=<pos:position pos:line="185" pos:column="24"/></operator> <name><name pos:line="185" pos:column="25">pParse<pos:position pos:line="185" pos:column="31"/></name><operator pos:line="185" pos:column="31">-&gt;<pos:position pos:line="185" pos:column="36"/></operator><name pos:line="185" pos:column="33">nTab<pos:position pos:line="185" pos:column="37"/></name></name><operator pos:line="185" pos:column="37">++<pos:position pos:line="185" pos:column="39"/></operator></expr>;<pos:position pos:line="185" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="186" pos:column="6"/></block></then><else pos:line="186" pos:column="6">else<block pos:line="186" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="187" pos:column="7">pLevel<pos:position pos:line="187" pos:column="13"/></name><operator pos:line="187" pos:column="13">-&gt;<pos:position pos:line="187" pos:column="18"/></operator><name pos:line="187" pos:column="15">iIdxCur<pos:position pos:line="187" pos:column="22"/></name></name> <operator pos:line="187" pos:column="23">=<pos:position pos:line="187" pos:column="24"/></operator> <operator pos:line="187" pos:column="25">-<pos:position pos:line="187" pos:column="26"/></operator><literal type="number" pos:line="187" pos:column="26">1<pos:position pos:line="187" pos:column="27"/></literal></expr>;<pos:position pos:line="187" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="188" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="189" pos:column="5">notReady<pos:position pos:line="189" pos:column="13"/></name> <operator pos:line="189" pos:column="14">&amp;=<pos:position pos:line="189" pos:column="20"/></operator> <operator pos:line="189" pos:column="17">~<pos:position pos:line="189" pos:column="18"/></operator><call><name pos:line="189" pos:column="18">getMask<pos:position pos:line="189" pos:column="25"/></name><argument_list pos:line="189" pos:column="25">(<argument><expr><name pos:line="189" pos:column="26">pMaskSet<pos:position pos:line="189" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="36">pTabList<pos:position pos:line="189" pos:column="44"/></name><operator pos:line="189" pos:column="44">-&gt;<pos:position pos:line="189" pos:column="49"/></operator><name pos:line="189" pos:column="46">a<pos:position pos:line="189" pos:column="47"/></name><index pos:line="189" pos:column="47">[<expr><name pos:line="189" pos:column="48">bestJ<pos:position pos:line="189" pos:column="53"/></name></expr>]<pos:position pos:line="189" pos:column="54"/></index></name><operator pos:line="189" pos:column="54">.<pos:position pos:line="189" pos:column="55"/></operator><name pos:line="189" pos:column="55">iCursor<pos:position pos:line="189" pos:column="62"/></name></expr></argument>)<pos:position pos:line="189" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="190" pos:column="5">pLevel<pos:position pos:line="190" pos:column="11"/></name><operator pos:line="190" pos:column="11">-&gt;<pos:position pos:line="190" pos:column="16"/></operator><name pos:line="190" pos:column="13">iFrom<pos:position pos:line="190" pos:column="18"/></name></name> <operator pos:line="190" pos:column="19">=<pos:position pos:line="190" pos:column="20"/></operator> <operator pos:line="190" pos:column="21">(<pos:position pos:line="190" pos:column="22"/></operator><name pos:line="190" pos:column="22">u8<pos:position pos:line="190" pos:column="24"/></name><operator pos:line="190" pos:column="24">)<pos:position pos:line="190" pos:column="25"/></operator><name pos:line="190" pos:column="25">bestJ<pos:position pos:line="190" pos:column="30"/></name></expr>;<pos:position pos:line="190" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="192" pos:column="5">/* Check that if the table scanned by this loop iteration had an
    ** INDEXED BY clause attached to it, that the named index is being
    ** used for the scan. If not, then query compilation has failed.
    ** Return an error.
    */</comment>
    <expr_stmt><expr><name pos:line="197" pos:column="5">pIdx<pos:position pos:line="197" pos:column="9"/></name> <operator pos:line="197" pos:column="10">=<pos:position pos:line="197" pos:column="11"/></operator> <name><name pos:line="197" pos:column="12">pTabList<pos:position pos:line="197" pos:column="20"/></name><operator pos:line="197" pos:column="20">-&gt;<pos:position pos:line="197" pos:column="25"/></operator><name pos:line="197" pos:column="22">a<pos:position pos:line="197" pos:column="23"/></name><index pos:line="197" pos:column="23">[<expr><name pos:line="197" pos:column="24">bestJ<pos:position pos:line="197" pos:column="29"/></name></expr>]<pos:position pos:line="197" pos:column="30"/></index></name><operator pos:line="197" pos:column="30">.<pos:position pos:line="197" pos:column="31"/></operator><name pos:line="197" pos:column="31">pIndex<pos:position pos:line="197" pos:column="37"/></name></expr>;<pos:position pos:line="197" pos:column="38"/></expr_stmt>
    <if pos:line="198" pos:column="5">if<condition pos:line="198" pos:column="7">( <expr><name pos:line="198" pos:column="9">pIdx<pos:position pos:line="198" pos:column="13"/></name></expr> )<pos:position pos:line="198" pos:column="15"/></condition><then><block pos:line="198" pos:column="15">{
      <if pos:line="199" pos:column="7">if<condition pos:line="199" pos:column="9">( <expr><operator pos:line="199" pos:column="11">(<pos:position pos:line="199" pos:column="12"/></operator><name><name pos:line="199" pos:column="12">bestPlan<pos:position pos:line="199" pos:column="20"/></name><operator pos:line="199" pos:column="20">.<pos:position pos:line="199" pos:column="21"/></operator><name pos:line="199" pos:column="21">plan<pos:position pos:line="199" pos:column="25"/></name><operator pos:line="199" pos:column="25">.<pos:position pos:line="199" pos:column="26"/></operator><name pos:line="199" pos:column="26">wsFlags<pos:position pos:line="199" pos:column="33"/></name></name> <operator pos:line="199" pos:column="34">&amp;<pos:position pos:line="199" pos:column="39"/></operator> <name pos:line="199" pos:column="36">WHERE_INDEXED<pos:position pos:line="199" pos:column="49"/></name><operator pos:line="199" pos:column="49">)<pos:position pos:line="199" pos:column="50"/></operator><operator pos:line="199" pos:column="50">==<pos:position pos:line="199" pos:column="52"/></operator><literal type="number" pos:line="199" pos:column="52">0<pos:position pos:line="199" pos:column="53"/></literal></expr> )<pos:position pos:line="199" pos:column="55"/></condition><then><block pos:line="199" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="200" pos:column="9">sqlite3ErrorMsg<pos:position pos:line="200" pos:column="24"/></name><argument_list pos:line="200" pos:column="24">(<argument><expr><name pos:line="200" pos:column="25">pParse<pos:position pos:line="200" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="200" pos:column="33">"cannot use index: %s"<pos:position pos:line="200" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="200" pos:column="57">pIdx<pos:position pos:line="200" pos:column="61"/></name><operator pos:line="200" pos:column="61">-&gt;<pos:position pos:line="200" pos:column="66"/></operator><name pos:line="200" pos:column="63">zName<pos:position pos:line="200" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="200" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="70"/></expr_stmt>
        <goto pos:line="201" pos:column="9">goto <name pos:line="201" pos:column="14">whereBeginError<pos:position pos:line="201" pos:column="29"/></name>;<pos:position pos:line="201" pos:column="30"/></goto>
      }<pos:position pos:line="202" pos:column="8"/></block></then><else pos:line="202" pos:column="8">else<block pos:line="202" pos:column="12">{
        <comment type="block" pos:line="203" pos:column="9">/* If an INDEXED BY clause is used, the bestIndex() function is
        ** guaranteed to find the index specified in the INDEXED BY clause
        ** if it find an index at all. */</comment>
        <expr_stmt><expr><call><name pos:line="206" pos:column="9">assert<pos:position pos:line="206" pos:column="15"/></name><argument_list pos:line="206" pos:column="15">( <argument><expr><name><name pos:line="206" pos:column="17">bestPlan<pos:position pos:line="206" pos:column="25"/></name><operator pos:line="206" pos:column="25">.<pos:position pos:line="206" pos:column="26"/></operator><name pos:line="206" pos:column="26">plan<pos:position pos:line="206" pos:column="30"/></name><operator pos:line="206" pos:column="30">.<pos:position pos:line="206" pos:column="31"/></operator><name pos:line="206" pos:column="31">u<pos:position pos:line="206" pos:column="32"/></name><operator pos:line="206" pos:column="32">.<pos:position pos:line="206" pos:column="33"/></operator><name pos:line="206" pos:column="33">pIdx<pos:position pos:line="206" pos:column="37"/></name></name><operator pos:line="206" pos:column="37">==<pos:position pos:line="206" pos:column="39"/></operator><name pos:line="206" pos:column="39">pIdx<pos:position pos:line="206" pos:column="43"/></name></expr></argument> )<pos:position pos:line="206" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="46"/></expr_stmt>
      }<pos:position pos:line="207" pos:column="8"/></block></else></if>
    }<pos:position pos:line="208" pos:column="6"/></block></then></if>
  }<pos:position pos:line="209" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="210" pos:column="3">WHERETRACE<pos:position pos:line="210" pos:column="13"/></name><argument_list pos:line="210" pos:column="13">(<argument><expr><operator pos:line="210" pos:column="14">(<pos:position pos:line="210" pos:column="15"/></operator><literal type="string" pos:line="210" pos:column="15">"*** Optimizer Finished ***\n"<pos:position pos:line="210" pos:column="45"/></literal><operator pos:line="210" pos:column="45">)<pos:position pos:line="210" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="210" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="48"/></expr_stmt>
  <if pos:line="211" pos:column="3">if<condition pos:line="211" pos:column="5">( <expr><name><name pos:line="211" pos:column="7">pParse<pos:position pos:line="211" pos:column="13"/></name><operator pos:line="211" pos:column="13">-&gt;<pos:position pos:line="211" pos:column="18"/></operator><name pos:line="211" pos:column="15">nErr<pos:position pos:line="211" pos:column="19"/></name></name> <operator pos:line="211" pos:column="20">||<pos:position pos:line="211" pos:column="22"/></operator> <name><name pos:line="211" pos:column="23">db<pos:position pos:line="211" pos:column="25"/></name><operator pos:line="211" pos:column="25">-&gt;<pos:position pos:line="211" pos:column="30"/></operator><name pos:line="211" pos:column="27">mallocFailed<pos:position pos:line="211" pos:column="39"/></name></name></expr> )<pos:position pos:line="211" pos:column="41"/></condition><then><block pos:line="211" pos:column="41">{
    <goto pos:line="212" pos:column="5">goto <name pos:line="212" pos:column="10">whereBeginError<pos:position pos:line="212" pos:column="25"/></name>;<pos:position pos:line="212" pos:column="26"/></goto>
  }<pos:position pos:line="213" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="215" pos:column="3">/* If the total query only selects a single row, then the ORDER BY
  ** clause is irrelevant.
  */</comment>
  <if pos:line="218" pos:column="3">if<condition pos:line="218" pos:column="5">( <expr><operator pos:line="218" pos:column="7">(<pos:position pos:line="218" pos:column="8"/></operator><name pos:line="218" pos:column="8">andFlags<pos:position pos:line="218" pos:column="16"/></name> <operator pos:line="218" pos:column="17">&amp;<pos:position pos:line="218" pos:column="22"/></operator> <name pos:line="218" pos:column="19">WHERE_UNIQUE<pos:position pos:line="218" pos:column="31"/></name><operator pos:line="218" pos:column="31">)<pos:position pos:line="218" pos:column="32"/></operator><operator pos:line="218" pos:column="32">!=<pos:position pos:line="218" pos:column="34"/></operator><literal type="number" pos:line="218" pos:column="34">0<pos:position pos:line="218" pos:column="35"/></literal> <operator pos:line="218" pos:column="36">&amp;&amp;<pos:position pos:line="218" pos:column="46"/></operator> <name pos:line="218" pos:column="39">ppOrderBy<pos:position pos:line="218" pos:column="48"/></name></expr> )<pos:position pos:line="218" pos:column="50"/></condition><then><block pos:line="218" pos:column="50">{
    <expr_stmt><expr><operator pos:line="219" pos:column="5">*<pos:position pos:line="219" pos:column="6"/></operator><name pos:line="219" pos:column="6">ppOrderBy<pos:position pos:line="219" pos:column="15"/></name> <operator pos:line="219" pos:column="16">=<pos:position pos:line="219" pos:column="17"/></operator> <literal type="number" pos:line="219" pos:column="18">0<pos:position pos:line="219" pos:column="19"/></literal></expr>;<pos:position pos:line="219" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="220" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="222" pos:column="3">/* If the caller is an UPDATE or DELETE statement that is requesting
  ** to use a one-pass algorithm, determine if this is appropriate.
  ** The one-pass algorithm only works if the WHERE clause constraints
  ** the statement to update a single row.
  */</comment>
  <expr_stmt><expr><call><name pos:line="227" pos:column="3">assert<pos:position pos:line="227" pos:column="9"/></name><argument_list pos:line="227" pos:column="9">( <argument><expr><operator pos:line="227" pos:column="11">(<pos:position pos:line="227" pos:column="12"/></operator><name pos:line="227" pos:column="12">wctrlFlags<pos:position pos:line="227" pos:column="22"/></name> <operator pos:line="227" pos:column="23">&amp;<pos:position pos:line="227" pos:column="28"/></operator> <name pos:line="227" pos:column="25">WHERE_ONEPASS_DESIRED<pos:position pos:line="227" pos:column="46"/></name><operator pos:line="227" pos:column="46">)<pos:position pos:line="227" pos:column="47"/></operator><operator pos:line="227" pos:column="47">==<pos:position pos:line="227" pos:column="49"/></operator><literal type="number" pos:line="227" pos:column="49">0<pos:position pos:line="227" pos:column="50"/></literal> <operator pos:line="227" pos:column="51">||<pos:position pos:line="227" pos:column="53"/></operator> <name><name pos:line="227" pos:column="54">pWInfo<pos:position pos:line="227" pos:column="60"/></name><operator pos:line="227" pos:column="60">-&gt;<pos:position pos:line="227" pos:column="65"/></operator><name pos:line="227" pos:column="62">nLevel<pos:position pos:line="227" pos:column="68"/></name></name><operator pos:line="227" pos:column="68">==<pos:position pos:line="227" pos:column="70"/></operator><literal type="number" pos:line="227" pos:column="70">1<pos:position pos:line="227" pos:column="71"/></literal></expr></argument> )<pos:position pos:line="227" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="74"/></expr_stmt>
  <if pos:line="228" pos:column="3">if<condition pos:line="228" pos:column="5">( <expr><operator pos:line="228" pos:column="7">(<pos:position pos:line="228" pos:column="8"/></operator><name pos:line="228" pos:column="8">wctrlFlags<pos:position pos:line="228" pos:column="18"/></name> <operator pos:line="228" pos:column="19">&amp;<pos:position pos:line="228" pos:column="24"/></operator> <name pos:line="228" pos:column="21">WHERE_ONEPASS_DESIRED<pos:position pos:line="228" pos:column="42"/></name><operator pos:line="228" pos:column="42">)<pos:position pos:line="228" pos:column="43"/></operator><operator pos:line="228" pos:column="43">!=<pos:position pos:line="228" pos:column="45"/></operator><literal type="number" pos:line="228" pos:column="45">0<pos:position pos:line="228" pos:column="46"/></literal> <operator pos:line="228" pos:column="47">&amp;&amp;<pos:position pos:line="228" pos:column="57"/></operator> <operator pos:line="228" pos:column="50">(<pos:position pos:line="228" pos:column="51"/></operator><name pos:line="228" pos:column="51">andFlags<pos:position pos:line="228" pos:column="59"/></name> <operator pos:line="228" pos:column="60">&amp;<pos:position pos:line="228" pos:column="65"/></operator> <name pos:line="228" pos:column="62">WHERE_UNIQUE<pos:position pos:line="228" pos:column="74"/></name><operator pos:line="228" pos:column="74">)<pos:position pos:line="228" pos:column="75"/></operator><operator pos:line="228" pos:column="75">!=<pos:position pos:line="228" pos:column="77"/></operator><literal type="number" pos:line="228" pos:column="77">0<pos:position pos:line="228" pos:column="78"/></literal></expr> )<pos:position pos:line="228" pos:column="80"/></condition><then><block pos:line="228" pos:column="80">{
    <expr_stmt><expr><name><name pos:line="229" pos:column="5">pWInfo<pos:position pos:line="229" pos:column="11"/></name><operator pos:line="229" pos:column="11">-&gt;<pos:position pos:line="229" pos:column="16"/></operator><name pos:line="229" pos:column="13">okOnePass<pos:position pos:line="229" pos:column="22"/></name></name> <operator pos:line="229" pos:column="23">=<pos:position pos:line="229" pos:column="24"/></operator> <literal type="number" pos:line="229" pos:column="25">1<pos:position pos:line="229" pos:column="26"/></literal></expr>;<pos:position pos:line="229" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="230" pos:column="5">pWInfo<pos:position pos:line="230" pos:column="11"/></name><operator pos:line="230" pos:column="11">-&gt;<pos:position pos:line="230" pos:column="16"/></operator><name pos:line="230" pos:column="13">a<pos:position pos:line="230" pos:column="14"/></name><index pos:line="230" pos:column="14">[<expr><literal type="number" pos:line="230" pos:column="15">0<pos:position pos:line="230" pos:column="16"/></literal></expr>]<pos:position pos:line="230" pos:column="17"/></index></name><operator pos:line="230" pos:column="17">.<pos:position pos:line="230" pos:column="18"/></operator><name><name pos:line="230" pos:column="18">plan<pos:position pos:line="230" pos:column="22"/></name><operator pos:line="230" pos:column="22">.<pos:position pos:line="230" pos:column="23"/></operator><name pos:line="230" pos:column="23">wsFlags<pos:position pos:line="230" pos:column="30"/></name></name> <operator pos:line="230" pos:column="31">&amp;=<pos:position pos:line="230" pos:column="37"/></operator> <operator pos:line="230" pos:column="34">~<pos:position pos:line="230" pos:column="35"/></operator><name pos:line="230" pos:column="35">WHERE_IDX_ONLY<pos:position pos:line="230" pos:column="49"/></name></expr>;<pos:position pos:line="230" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="231" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="233" pos:column="3">/* Open all tables in the pTabList and any indices selected for
  ** searching those tables.
  */</comment>
  <expr_stmt><expr><call><name pos:line="236" pos:column="3">sqlite3CodeVerifySchema<pos:position pos:line="236" pos:column="26"/></name><argument_list pos:line="236" pos:column="26">(<argument><expr><name pos:line="236" pos:column="27">pParse<pos:position pos:line="236" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="236" pos:column="35">-<pos:position pos:line="236" pos:column="36"/></operator><literal type="number" pos:line="236" pos:column="36">1<pos:position pos:line="236" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="39"/></expr_stmt> <comment type="block" pos:line="236" pos:column="40">/* Insert the cookie verifier Goto */</comment>
  <for pos:line="237" pos:column="3">for<control pos:line="237" pos:column="6">(<init><expr><name pos:line="237" pos:column="7">i<pos:position pos:line="237" pos:column="8"/></name><operator pos:line="237" pos:column="8">=<pos:position pos:line="237" pos:column="9"/></operator><literal type="number" pos:line="237" pos:column="9">0<pos:position pos:line="237" pos:column="10"/></literal></expr><operator pos:line="237" pos:column="10">,<pos:position pos:line="237" pos:column="11"/></operator> <expr><name pos:line="237" pos:column="12">pLevel<pos:position pos:line="237" pos:column="18"/></name><operator pos:line="237" pos:column="18">=<pos:position pos:line="237" pos:column="19"/></operator><name><name pos:line="237" pos:column="19">pWInfo<pos:position pos:line="237" pos:column="25"/></name><operator pos:line="237" pos:column="25">-&gt;<pos:position pos:line="237" pos:column="30"/></operator><name pos:line="237" pos:column="27">a<pos:position pos:line="237" pos:column="28"/></name></name></expr>;<pos:position pos:line="237" pos:column="29"/></init> <condition><expr><name pos:line="237" pos:column="30">i<pos:position pos:line="237" pos:column="31"/></name><operator pos:line="237" pos:column="31">&lt;<pos:position pos:line="237" pos:column="35"/></operator><name><name pos:line="237" pos:column="32">pTabList<pos:position pos:line="237" pos:column="40"/></name><operator pos:line="237" pos:column="40">-&gt;<pos:position pos:line="237" pos:column="45"/></operator><name pos:line="237" pos:column="42">nSrc<pos:position pos:line="237" pos:column="46"/></name></name></expr>;<pos:position pos:line="237" pos:column="47"/></condition> <incr><expr><name pos:line="237" pos:column="48">i<pos:position pos:line="237" pos:column="49"/></name><operator pos:line="237" pos:column="49">++<pos:position pos:line="237" pos:column="51"/></operator></expr><operator pos:line="237" pos:column="51">,<pos:position pos:line="237" pos:column="52"/></operator> <expr><name pos:line="237" pos:column="53">pLevel<pos:position pos:line="237" pos:column="59"/></name><operator pos:line="237" pos:column="59">++<pos:position pos:line="237" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="237" pos:column="62"/></control><block pos:line="237" pos:column="62">{
    <decl_stmt><decl><type><name pos:line="238" pos:column="5">Table<pos:position pos:line="238" pos:column="10"/></name> <modifier pos:line="238" pos:column="11">*<pos:position pos:line="238" pos:column="12"/></modifier></type><name pos:line="238" pos:column="12">pTab<pos:position pos:line="238" pos:column="16"/></name></decl>;<pos:position pos:line="238" pos:column="17"/></decl_stmt>     <comment type="block" pos:line="238" pos:column="22">/* Table to open */</comment>
    <decl_stmt><decl><type><name pos:line="239" pos:column="5">int<pos:position pos:line="239" pos:column="8"/></name></type> <name pos:line="239" pos:column="9">iDb<pos:position pos:line="239" pos:column="12"/></name></decl>;<pos:position pos:line="239" pos:column="13"/></decl_stmt>         <comment type="block" pos:line="239" pos:column="22">/* Index of database containing table/index */</comment>

<cpp:ifndef pos:line="241" pos:column="1">#<cpp:directive pos:line="241" pos:column="2">ifndef<pos:position pos:line="241" pos:column="8"/></cpp:directive> <name pos:line="241" pos:column="9">SQLITE_OMIT_EXPLAIN<pos:position pos:line="241" pos:column="28"/></name></cpp:ifndef>
    <if pos:line="242" pos:column="5">if<condition pos:line="242" pos:column="7">( <expr><name><name pos:line="242" pos:column="9">pParse<pos:position pos:line="242" pos:column="15"/></name><operator pos:line="242" pos:column="15">-&gt;<pos:position pos:line="242" pos:column="20"/></operator><name pos:line="242" pos:column="17">explain<pos:position pos:line="242" pos:column="24"/></name></name><operator pos:line="242" pos:column="24">==<pos:position pos:line="242" pos:column="26"/></operator><literal type="number" pos:line="242" pos:column="26">2<pos:position pos:line="242" pos:column="27"/></literal></expr> )<pos:position pos:line="242" pos:column="29"/></condition><then><block pos:line="242" pos:column="29">{
      <decl_stmt><decl><type><name pos:line="243" pos:column="7">char<pos:position pos:line="243" pos:column="11"/></name> <modifier pos:line="243" pos:column="12">*<pos:position pos:line="243" pos:column="13"/></modifier></type><name pos:line="243" pos:column="13">zMsg<pos:position pos:line="243" pos:column="17"/></name></decl>;<pos:position pos:line="243" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="244" pos:column="7">struct<pos:position pos:line="244" pos:column="13"/></name> <name pos:line="244" pos:column="14">SrcList_item<pos:position pos:line="244" pos:column="26"/></name></name> <modifier pos:line="244" pos:column="27">*<pos:position pos:line="244" pos:column="28"/></modifier></type><name pos:line="244" pos:column="28">pItem<pos:position pos:line="244" pos:column="33"/></name> <init pos:line="244" pos:column="34">= <expr><operator pos:line="244" pos:column="36">&amp;<pos:position pos:line="244" pos:column="41"/></operator><name><name pos:line="244" pos:column="37">pTabList<pos:position pos:line="244" pos:column="45"/></name><operator pos:line="244" pos:column="45">-&gt;<pos:position pos:line="244" pos:column="50"/></operator><name pos:line="244" pos:column="47">a<pos:position pos:line="244" pos:column="48"/></name><index pos:line="244" pos:column="48">[<expr><name><name pos:line="244" pos:column="49">pLevel<pos:position pos:line="244" pos:column="55"/></name><operator pos:line="244" pos:column="55">-&gt;<pos:position pos:line="244" pos:column="60"/></operator><name pos:line="244" pos:column="57">iFrom<pos:position pos:line="244" pos:column="62"/></name></name></expr>]<pos:position pos:line="244" pos:column="63"/></index></name></expr></init></decl>;<pos:position pos:line="244" pos:column="64"/></decl_stmt>
      <expr_stmt><expr><name pos:line="245" pos:column="7">zMsg<pos:position pos:line="245" pos:column="11"/></name> <operator pos:line="245" pos:column="12">=<pos:position pos:line="245" pos:column="13"/></operator> <call><name pos:line="245" pos:column="14">sqlite3MPrintf<pos:position pos:line="245" pos:column="28"/></name><argument_list pos:line="245" pos:column="28">(<argument><expr><name pos:line="245" pos:column="29">db<pos:position pos:line="245" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="245" pos:column="33">"TABLE %s"<pos:position pos:line="245" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="245" pos:column="45">pItem<pos:position pos:line="245" pos:column="50"/></name><operator pos:line="245" pos:column="50">-&gt;<pos:position pos:line="245" pos:column="55"/></operator><name pos:line="245" pos:column="52">zName<pos:position pos:line="245" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="245" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="59"/></expr_stmt>
      <if pos:line="246" pos:column="7">if<condition pos:line="246" pos:column="9">( <expr><name><name pos:line="246" pos:column="11">pItem<pos:position pos:line="246" pos:column="16"/></name><operator pos:line="246" pos:column="16">-&gt;<pos:position pos:line="246" pos:column="21"/></operator><name pos:line="246" pos:column="18">zAlias<pos:position pos:line="246" pos:column="24"/></name></name></expr> )<pos:position pos:line="246" pos:column="26"/></condition><then><block pos:line="246" pos:column="26">{
        <expr_stmt><expr><name pos:line="247" pos:column="9">zMsg<pos:position pos:line="247" pos:column="13"/></name> <operator pos:line="247" pos:column="14">=<pos:position pos:line="247" pos:column="15"/></operator> <call><name pos:line="247" pos:column="16">sqlite3MAppendf<pos:position pos:line="247" pos:column="31"/></name><argument_list pos:line="247" pos:column="31">(<argument><expr><name pos:line="247" pos:column="32">db<pos:position pos:line="247" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="36">zMsg<pos:position pos:line="247" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="247" pos:column="42">"%s AS %s"<pos:position pos:line="247" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="247" pos:column="54">zMsg<pos:position pos:line="247" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="247" pos:column="60">pItem<pos:position pos:line="247" pos:column="65"/></name><operator pos:line="247" pos:column="65">-&gt;<pos:position pos:line="247" pos:column="70"/></operator><name pos:line="247" pos:column="67">zAlias<pos:position pos:line="247" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="247" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="75"/></expr_stmt>
      }<pos:position pos:line="248" pos:column="8"/></block></then></if>
      <if pos:line="249" pos:column="7">if<condition pos:line="249" pos:column="9">( <expr><operator pos:line="249" pos:column="11">(<pos:position pos:line="249" pos:column="12"/></operator><name><name pos:line="249" pos:column="12">pLevel<pos:position pos:line="249" pos:column="18"/></name><operator pos:line="249" pos:column="18">-&gt;<pos:position pos:line="249" pos:column="23"/></operator><name pos:line="249" pos:column="20">plan<pos:position pos:line="249" pos:column="24"/></name><operator pos:line="249" pos:column="24">.<pos:position pos:line="249" pos:column="25"/></operator><name pos:line="249" pos:column="25">wsFlags<pos:position pos:line="249" pos:column="32"/></name></name> <operator pos:line="249" pos:column="33">&amp;<pos:position pos:line="249" pos:column="38"/></operator> <name pos:line="249" pos:column="35">WHERE_INDEXED<pos:position pos:line="249" pos:column="48"/></name><operator pos:line="249" pos:column="48">)<pos:position pos:line="249" pos:column="49"/></operator><operator pos:line="249" pos:column="49">!=<pos:position pos:line="249" pos:column="51"/></operator><literal type="number" pos:line="249" pos:column="51">0<pos:position pos:line="249" pos:column="52"/></literal></expr> )<pos:position pos:line="249" pos:column="54"/></condition><then><block pos:line="249" pos:column="54">{
        <expr_stmt><expr><name pos:line="250" pos:column="9">zMsg<pos:position pos:line="250" pos:column="13"/></name> <operator pos:line="250" pos:column="14">=<pos:position pos:line="250" pos:column="15"/></operator> <call><name pos:line="250" pos:column="16">sqlite3MAppendf<pos:position pos:line="250" pos:column="31"/></name><argument_list pos:line="250" pos:column="31">(<argument><expr><name pos:line="250" pos:column="32">db<pos:position pos:line="250" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="36">zMsg<pos:position pos:line="250" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="42">"%s WITH INDEX %s"<pos:position pos:line="250" pos:column="60"/></literal></expr></argument>,
           <argument><expr><name pos:line="251" pos:column="12">zMsg<pos:position pos:line="251" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="251" pos:column="18">pLevel<pos:position pos:line="251" pos:column="24"/></name><operator pos:line="251" pos:column="24">-&gt;<pos:position pos:line="251" pos:column="29"/></operator><name pos:line="251" pos:column="26">plan<pos:position pos:line="251" pos:column="30"/></name><operator pos:line="251" pos:column="30">.<pos:position pos:line="251" pos:column="31"/></operator><name pos:line="251" pos:column="31">u<pos:position pos:line="251" pos:column="32"/></name><operator pos:line="251" pos:column="32">.<pos:position pos:line="251" pos:column="33"/></operator><name pos:line="251" pos:column="33">pIdx<pos:position pos:line="251" pos:column="37"/></name><operator pos:line="251" pos:column="37">-&gt;<pos:position pos:line="251" pos:column="42"/></operator><name pos:line="251" pos:column="39">zName<pos:position pos:line="251" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="251" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="46"/></expr_stmt>
      }<pos:position pos:line="252" pos:column="8"/></block></then><elseif pos:line="252" pos:column="8">else <if pos:line="252" pos:column="13">if<condition pos:line="252" pos:column="15">( <expr><name><name pos:line="252" pos:column="17">pLevel<pos:position pos:line="252" pos:column="23"/></name><operator pos:line="252" pos:column="23">-&gt;<pos:position pos:line="252" pos:column="28"/></operator><name pos:line="252" pos:column="25">plan<pos:position pos:line="252" pos:column="29"/></name><operator pos:line="252" pos:column="29">.<pos:position pos:line="252" pos:column="30"/></operator><name pos:line="252" pos:column="30">wsFlags<pos:position pos:line="252" pos:column="37"/></name></name> <operator pos:line="252" pos:column="38">&amp;<pos:position pos:line="252" pos:column="43"/></operator> <name pos:line="252" pos:column="40">WHERE_MULTI_OR<pos:position pos:line="252" pos:column="54"/></name></expr> )<pos:position pos:line="252" pos:column="56"/></condition><then><block pos:line="252" pos:column="56">{
        <expr_stmt><expr><name pos:line="253" pos:column="9">zMsg<pos:position pos:line="253" pos:column="13"/></name> <operator pos:line="253" pos:column="14">=<pos:position pos:line="253" pos:column="15"/></operator> <call><name pos:line="253" pos:column="16">sqlite3MAppendf<pos:position pos:line="253" pos:column="31"/></name><argument_list pos:line="253" pos:column="31">(<argument><expr><name pos:line="253" pos:column="32">db<pos:position pos:line="253" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="36">zMsg<pos:position pos:line="253" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="253" pos:column="42">"%s VIA MULTI-INDEX UNION"<pos:position pos:line="253" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="253" pos:column="70">zMsg<pos:position pos:line="253" pos:column="74"/></name></expr></argument>)<pos:position pos:line="253" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="76"/></expr_stmt>
      }<pos:position pos:line="254" pos:column="8"/></block></then></if></elseif><elseif pos:line="254" pos:column="8">else <if pos:line="254" pos:column="13">if<condition pos:line="254" pos:column="15">( <expr><name><name pos:line="254" pos:column="17">pLevel<pos:position pos:line="254" pos:column="23"/></name><operator pos:line="254" pos:column="23">-&gt;<pos:position pos:line="254" pos:column="28"/></operator><name pos:line="254" pos:column="25">plan<pos:position pos:line="254" pos:column="29"/></name><operator pos:line="254" pos:column="29">.<pos:position pos:line="254" pos:column="30"/></operator><name pos:line="254" pos:column="30">wsFlags<pos:position pos:line="254" pos:column="37"/></name></name> <operator pos:line="254" pos:column="38">&amp;<pos:position pos:line="254" pos:column="43"/></operator> <operator pos:line="254" pos:column="40">(<pos:position pos:line="254" pos:column="41"/></operator><name pos:line="254" pos:column="41">WHERE_ROWID_EQ<pos:position pos:line="254" pos:column="55"/></name><operator pos:line="254" pos:column="55">|<pos:position pos:line="254" pos:column="56"/></operator><name pos:line="254" pos:column="56">WHERE_ROWID_RANGE<pos:position pos:line="254" pos:column="73"/></name><operator pos:line="254" pos:column="73">)<pos:position pos:line="254" pos:column="74"/></operator></expr> )<pos:position pos:line="254" pos:column="76"/></condition><then><block pos:line="254" pos:column="76">{
        <expr_stmt><expr><name pos:line="255" pos:column="9">zMsg<pos:position pos:line="255" pos:column="13"/></name> <operator pos:line="255" pos:column="14">=<pos:position pos:line="255" pos:column="15"/></operator> <call><name pos:line="255" pos:column="16">sqlite3MAppendf<pos:position pos:line="255" pos:column="31"/></name><argument_list pos:line="255" pos:column="31">(<argument><expr><name pos:line="255" pos:column="32">db<pos:position pos:line="255" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="36">zMsg<pos:position pos:line="255" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="42">"%s USING PRIMARY KEY"<pos:position pos:line="255" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="255" pos:column="66">zMsg<pos:position pos:line="255" pos:column="70"/></name></expr></argument>)<pos:position pos:line="255" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="72"/></expr_stmt>
      }<pos:position pos:line="256" pos:column="8"/></block></then></if></elseif>
<cpp:ifndef pos:line="257" pos:column="1">#<cpp:directive pos:line="257" pos:column="2">ifndef<pos:position pos:line="257" pos:column="8"/></cpp:directive> <name pos:line="257" pos:column="9">SQLITE_OMIT_VIRTUALTABLE<pos:position pos:line="257" pos:column="33"/></name></cpp:ifndef>
      <elseif pos:line="258" pos:column="7">else <if pos:line="258" pos:column="12">if<condition pos:line="258" pos:column="14">( <expr><operator pos:line="258" pos:column="16">(<pos:position pos:line="258" pos:column="17"/></operator><name><name pos:line="258" pos:column="17">pLevel<pos:position pos:line="258" pos:column="23"/></name><operator pos:line="258" pos:column="23">-&gt;<pos:position pos:line="258" pos:column="28"/></operator><name pos:line="258" pos:column="25">plan<pos:position pos:line="258" pos:column="29"/></name><operator pos:line="258" pos:column="29">.<pos:position pos:line="258" pos:column="30"/></operator><name pos:line="258" pos:column="30">wsFlags<pos:position pos:line="258" pos:column="37"/></name></name> <operator pos:line="258" pos:column="38">&amp;<pos:position pos:line="258" pos:column="43"/></operator> <name pos:line="258" pos:column="40">WHERE_VIRTUALTABLE<pos:position pos:line="258" pos:column="58"/></name><operator pos:line="258" pos:column="58">)<pos:position pos:line="258" pos:column="59"/></operator><operator pos:line="258" pos:column="59">!=<pos:position pos:line="258" pos:column="61"/></operator><literal type="number" pos:line="258" pos:column="61">0<pos:position pos:line="258" pos:column="62"/></literal></expr> )<pos:position pos:line="258" pos:column="64"/></condition><then><block pos:line="258" pos:column="64">{
        <decl_stmt><decl><type><name pos:line="259" pos:column="9">sqlite3_index_info<pos:position pos:line="259" pos:column="27"/></name> <modifier pos:line="259" pos:column="28">*<pos:position pos:line="259" pos:column="29"/></modifier></type><name pos:line="259" pos:column="29">pVtabIdx<pos:position pos:line="259" pos:column="37"/></name> <init pos:line="259" pos:column="38">= <expr><name><name pos:line="259" pos:column="40">pLevel<pos:position pos:line="259" pos:column="46"/></name><operator pos:line="259" pos:column="46">-&gt;<pos:position pos:line="259" pos:column="51"/></operator><name pos:line="259" pos:column="48">plan<pos:position pos:line="259" pos:column="52"/></name><operator pos:line="259" pos:column="52">.<pos:position pos:line="259" pos:column="53"/></operator><name pos:line="259" pos:column="53">u<pos:position pos:line="259" pos:column="54"/></name><operator pos:line="259" pos:column="54">.<pos:position pos:line="259" pos:column="55"/></operator><name pos:line="259" pos:column="55">pVtabIdx<pos:position pos:line="259" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="259" pos:column="64"/></decl_stmt>
        <expr_stmt><expr><name pos:line="260" pos:column="9">zMsg<pos:position pos:line="260" pos:column="13"/></name> <operator pos:line="260" pos:column="14">=<pos:position pos:line="260" pos:column="15"/></operator> <call><name pos:line="260" pos:column="16">sqlite3MAppendf<pos:position pos:line="260" pos:column="31"/></name><argument_list pos:line="260" pos:column="31">(<argument><expr><name pos:line="260" pos:column="32">db<pos:position pos:line="260" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="36">zMsg<pos:position pos:line="260" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="42">"%s VIRTUAL TABLE INDEX %d:%s"<pos:position pos:line="260" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="260" pos:column="74">zMsg<pos:position pos:line="260" pos:column="78"/></name></expr></argument>,
                    <argument><expr><name><name pos:line="261" pos:column="21">pVtabIdx<pos:position pos:line="261" pos:column="29"/></name><operator pos:line="261" pos:column="29">-&gt;<pos:position pos:line="261" pos:column="34"/></operator><name pos:line="261" pos:column="31">idxNum<pos:position pos:line="261" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="261" pos:column="39">pVtabIdx<pos:position pos:line="261" pos:column="47"/></name><operator pos:line="261" pos:column="47">-&gt;<pos:position pos:line="261" pos:column="52"/></operator><name pos:line="261" pos:column="49">idxStr<pos:position pos:line="261" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="261" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="57"/></expr_stmt>
      }<pos:position pos:line="262" pos:column="8"/></block></then></if></elseif></if>
<cpp:endif pos:line="263" pos:column="1">#<cpp:directive pos:line="263" pos:column="2">endif<pos:position pos:line="263" pos:column="7"/></cpp:directive></cpp:endif>
      <if pos:line="264" pos:column="7">if<condition pos:line="264" pos:column="9">( <expr><name><name pos:line="264" pos:column="11">pLevel<pos:position pos:line="264" pos:column="17"/></name><operator pos:line="264" pos:column="17">-&gt;<pos:position pos:line="264" pos:column="22"/></operator><name pos:line="264" pos:column="19">plan<pos:position pos:line="264" pos:column="23"/></name><operator pos:line="264" pos:column="23">.<pos:position pos:line="264" pos:column="24"/></operator><name pos:line="264" pos:column="24">wsFlags<pos:position pos:line="264" pos:column="31"/></name></name> <operator pos:line="264" pos:column="32">&amp;<pos:position pos:line="264" pos:column="37"/></operator> <name pos:line="264" pos:column="34">WHERE_ORDERBY<pos:position pos:line="264" pos:column="47"/></name></expr> )<pos:position pos:line="264" pos:column="49"/></condition><then><block pos:line="264" pos:column="49">{
        <expr_stmt><expr><name pos:line="265" pos:column="9">zMsg<pos:position pos:line="265" pos:column="13"/></name> <operator pos:line="265" pos:column="14">=<pos:position pos:line="265" pos:column="15"/></operator> <call><name pos:line="265" pos:column="16">sqlite3MAppendf<pos:position pos:line="265" pos:column="31"/></name><argument_list pos:line="265" pos:column="31">(<argument><expr><name pos:line="265" pos:column="32">db<pos:position pos:line="265" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="36">zMsg<pos:position pos:line="265" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="265" pos:column="42">"%s ORDER BY"<pos:position pos:line="265" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="265" pos:column="57">zMsg<pos:position pos:line="265" pos:column="61"/></name></expr></argument>)<pos:position pos:line="265" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="63"/></expr_stmt>
      }<pos:position pos:line="266" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="267" pos:column="7">sqlite3VdbeAddOp4<pos:position pos:line="267" pos:column="24"/></name><argument_list pos:line="267" pos:column="24">(<argument><expr><name pos:line="267" pos:column="25">v<pos:position pos:line="267" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="28">OP_Explain<pos:position pos:line="267" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="40">i<pos:position pos:line="267" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="267" pos:column="43">pLevel<pos:position pos:line="267" pos:column="49"/></name><operator pos:line="267" pos:column="49">-&gt;<pos:position pos:line="267" pos:column="54"/></operator><name pos:line="267" pos:column="51">iFrom<pos:position pos:line="267" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="267" pos:column="58">0<pos:position pos:line="267" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="267" pos:column="61">zMsg<pos:position pos:line="267" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="67">P4_DYNAMIC<pos:position pos:line="267" pos:column="77"/></name></expr></argument>)<pos:position pos:line="267" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="268" pos:column="6"/></block></then></if>
<cpp:endif pos:line="269" pos:column="1">#<cpp:directive pos:line="269" pos:column="2">endif<pos:position pos:line="269" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="269" pos:column="8">/* SQLITE_OMIT_EXPLAIN */</comment>
    <expr_stmt><expr><name pos:line="270" pos:column="5">pTabItem<pos:position pos:line="270" pos:column="13"/></name> <operator pos:line="270" pos:column="14">=<pos:position pos:line="270" pos:column="15"/></operator> <operator pos:line="270" pos:column="16">&amp;<pos:position pos:line="270" pos:column="21"/></operator><name><name pos:line="270" pos:column="17">pTabList<pos:position pos:line="270" pos:column="25"/></name><operator pos:line="270" pos:column="25">-&gt;<pos:position pos:line="270" pos:column="30"/></operator><name pos:line="270" pos:column="27">a<pos:position pos:line="270" pos:column="28"/></name><index pos:line="270" pos:column="28">[<expr><name><name pos:line="270" pos:column="29">pLevel<pos:position pos:line="270" pos:column="35"/></name><operator pos:line="270" pos:column="35">-&gt;<pos:position pos:line="270" pos:column="40"/></operator><name pos:line="270" pos:column="37">iFrom<pos:position pos:line="270" pos:column="42"/></name></name></expr>]<pos:position pos:line="270" pos:column="43"/></index></name></expr>;<pos:position pos:line="270" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="271" pos:column="5">pTab<pos:position pos:line="271" pos:column="9"/></name> <operator pos:line="271" pos:column="10">=<pos:position pos:line="271" pos:column="11"/></operator> <name><name pos:line="271" pos:column="12">pTabItem<pos:position pos:line="271" pos:column="20"/></name><operator pos:line="271" pos:column="20">-&gt;<pos:position pos:line="271" pos:column="25"/></operator><name pos:line="271" pos:column="22">pTab<pos:position pos:line="271" pos:column="26"/></name></name></expr>;<pos:position pos:line="271" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="272" pos:column="5">iDb<pos:position pos:line="272" pos:column="8"/></name> <operator pos:line="272" pos:column="9">=<pos:position pos:line="272" pos:column="10"/></operator> <call><name pos:line="272" pos:column="11">sqlite3SchemaToIndex<pos:position pos:line="272" pos:column="31"/></name><argument_list pos:line="272" pos:column="31">(<argument><expr><name><name pos:line="272" pos:column="32">pParse<pos:position pos:line="272" pos:column="38"/></name><operator pos:line="272" pos:column="38">-&gt;<pos:position pos:line="272" pos:column="43"/></operator><name pos:line="272" pos:column="40">db<pos:position pos:line="272" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="272" pos:column="44">pTab<pos:position pos:line="272" pos:column="48"/></name><operator pos:line="272" pos:column="48">-&gt;<pos:position pos:line="272" pos:column="53"/></operator><name pos:line="272" pos:column="50">pSchema<pos:position pos:line="272" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="272" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="59"/></expr_stmt>
    <if pos:line="273" pos:column="5">if<condition pos:line="273" pos:column="7">( <expr><operator pos:line="273" pos:column="9">(<pos:position pos:line="273" pos:column="10"/></operator><name><name pos:line="273" pos:column="10">pTab<pos:position pos:line="273" pos:column="14"/></name><operator pos:line="273" pos:column="14">-&gt;<pos:position pos:line="273" pos:column="19"/></operator><name pos:line="273" pos:column="16">tabFlags<pos:position pos:line="273" pos:column="24"/></name></name> <operator pos:line="273" pos:column="25">&amp;<pos:position pos:line="273" pos:column="30"/></operator> <name pos:line="273" pos:column="27">TF_Ephemeral<pos:position pos:line="273" pos:column="39"/></name><operator pos:line="273" pos:column="39">)<pos:position pos:line="273" pos:column="40"/></operator><operator pos:line="273" pos:column="40">!=<pos:position pos:line="273" pos:column="42"/></operator><literal type="number" pos:line="273" pos:column="42">0<pos:position pos:line="273" pos:column="43"/></literal> <operator pos:line="273" pos:column="44">||<pos:position pos:line="273" pos:column="46"/></operator> <name><name pos:line="273" pos:column="47">pTab<pos:position pos:line="273" pos:column="51"/></name><operator pos:line="273" pos:column="51">-&gt;<pos:position pos:line="273" pos:column="56"/></operator><name pos:line="273" pos:column="53">pSelect<pos:position pos:line="273" pos:column="60"/></name></name></expr> )<pos:position pos:line="273" pos:column="62"/></condition><then pos:line="273" pos:column="62"> <block type="pseudo"><continue pos:line="273" pos:column="63">continue;<pos:position pos:line="273" pos:column="72"/></continue></block></then></if>
<cpp:ifndef pos:line="274" pos:column="1">#<cpp:directive pos:line="274" pos:column="2">ifndef<pos:position pos:line="274" pos:column="8"/></cpp:directive> <name pos:line="274" pos:column="9">SQLITE_OMIT_VIRTUALTABLE<pos:position pos:line="274" pos:column="33"/></name></cpp:ifndef>
    <if pos:line="275" pos:column="5">if<condition pos:line="275" pos:column="7">( <expr><operator pos:line="275" pos:column="9">(<pos:position pos:line="275" pos:column="10"/></operator><name><name pos:line="275" pos:column="10">pLevel<pos:position pos:line="275" pos:column="16"/></name><operator pos:line="275" pos:column="16">-&gt;<pos:position pos:line="275" pos:column="21"/></operator><name pos:line="275" pos:column="18">plan<pos:position pos:line="275" pos:column="22"/></name><operator pos:line="275" pos:column="22">.<pos:position pos:line="275" pos:column="23"/></operator><name pos:line="275" pos:column="23">wsFlags<pos:position pos:line="275" pos:column="30"/></name></name> <operator pos:line="275" pos:column="31">&amp;<pos:position pos:line="275" pos:column="36"/></operator> <name pos:line="275" pos:column="33">WHERE_VIRTUALTABLE<pos:position pos:line="275" pos:column="51"/></name><operator pos:line="275" pos:column="51">)<pos:position pos:line="275" pos:column="52"/></operator><operator pos:line="275" pos:column="52">!=<pos:position pos:line="275" pos:column="54"/></operator><literal type="number" pos:line="275" pos:column="54">0<pos:position pos:line="275" pos:column="55"/></literal></expr> )<pos:position pos:line="275" pos:column="57"/></condition><then><block pos:line="275" pos:column="57">{
      <decl_stmt><decl><type><name pos:line="276" pos:column="7">int<pos:position pos:line="276" pos:column="10"/></name></type> <name pos:line="276" pos:column="11">iCur<pos:position pos:line="276" pos:column="15"/></name> <init pos:line="276" pos:column="16">= <expr><name><name pos:line="276" pos:column="18">pTabItem<pos:position pos:line="276" pos:column="26"/></name><operator pos:line="276" pos:column="26">-&gt;<pos:position pos:line="276" pos:column="31"/></operator><name pos:line="276" pos:column="28">iCursor<pos:position pos:line="276" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="276" pos:column="36"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="277" pos:column="7">sqlite3VdbeAddOp4<pos:position pos:line="277" pos:column="24"/></name><argument_list pos:line="277" pos:column="24">(<argument><expr><name pos:line="277" pos:column="25">v<pos:position pos:line="277" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="28">OP_VOpen<pos:position pos:line="277" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="38">iCur<pos:position pos:line="277" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="277" pos:column="44">0<pos:position pos:line="277" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="277" pos:column="47">0<pos:position pos:line="277" pos:column="48"/></literal></expr></argument>,
                        <argument><expr><operator pos:line="278" pos:column="25">(<pos:position pos:line="278" pos:column="26"/></operator><specifier pos:line="278" pos:column="26">const<pos:position pos:line="278" pos:column="31"/></specifier> <name pos:line="278" pos:column="32">char<pos:position pos:line="278" pos:column="36"/></name><operator pos:line="278" pos:column="36">*<pos:position pos:line="278" pos:column="37"/></operator><operator pos:line="278" pos:column="37">)<pos:position pos:line="278" pos:column="38"/></operator><name><name pos:line="278" pos:column="38">pTab<pos:position pos:line="278" pos:column="42"/></name><operator pos:line="278" pos:column="42">-&gt;<pos:position pos:line="278" pos:column="47"/></operator><name pos:line="278" pos:column="44">pVtab<pos:position pos:line="278" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="51">P4_VTAB<pos:position pos:line="278" pos:column="58"/></name></expr></argument>)<pos:position pos:line="278" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="279" pos:column="6"/></block></then><elseif pos:line="279" pos:column="6">else
<cpp:endif pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">endif<pos:position pos:line="280" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="281" pos:column="5">if<condition pos:line="281" pos:column="7">( <expr><operator pos:line="281" pos:column="9">(<pos:position pos:line="281" pos:column="10"/></operator><name><name pos:line="281" pos:column="10">pLevel<pos:position pos:line="281" pos:column="16"/></name><operator pos:line="281" pos:column="16">-&gt;<pos:position pos:line="281" pos:column="21"/></operator><name pos:line="281" pos:column="18">plan<pos:position pos:line="281" pos:column="22"/></name><operator pos:line="281" pos:column="22">.<pos:position pos:line="281" pos:column="23"/></operator><name pos:line="281" pos:column="23">wsFlags<pos:position pos:line="281" pos:column="30"/></name></name> <operator pos:line="281" pos:column="31">&amp;<pos:position pos:line="281" pos:column="36"/></operator> <name pos:line="281" pos:column="33">WHERE_IDX_ONLY<pos:position pos:line="281" pos:column="47"/></name><operator pos:line="281" pos:column="47">)<pos:position pos:line="281" pos:column="48"/></operator><operator pos:line="281" pos:column="48">==<pos:position pos:line="281" pos:column="50"/></operator><literal type="number" pos:line="281" pos:column="50">0<pos:position pos:line="281" pos:column="51"/></literal>
         <operator pos:line="282" pos:column="10">&amp;&amp;<pos:position pos:line="282" pos:column="20"/></operator> <operator pos:line="282" pos:column="13">(<pos:position pos:line="282" pos:column="14"/></operator><name pos:line="282" pos:column="14">wctrlFlags<pos:position pos:line="282" pos:column="24"/></name> <operator pos:line="282" pos:column="25">&amp;<pos:position pos:line="282" pos:column="30"/></operator> <name pos:line="282" pos:column="27">WHERE_OMIT_OPEN<pos:position pos:line="282" pos:column="42"/></name><operator pos:line="282" pos:column="42">)<pos:position pos:line="282" pos:column="43"/></operator><operator pos:line="282" pos:column="43">==<pos:position pos:line="282" pos:column="45"/></operator><literal type="number" pos:line="282" pos:column="45">0<pos:position pos:line="282" pos:column="46"/></literal></expr> )<pos:position pos:line="282" pos:column="48"/></condition><then><block pos:line="282" pos:column="48">{
      <decl_stmt><decl><type><name pos:line="283" pos:column="7">int<pos:position pos:line="283" pos:column="10"/></name></type> <name pos:line="283" pos:column="11">op<pos:position pos:line="283" pos:column="13"/></name> <init pos:line="283" pos:column="14">= <expr><ternary><condition><expr><name><name pos:line="283" pos:column="16">pWInfo<pos:position pos:line="283" pos:column="22"/></name><operator pos:line="283" pos:column="22">-&gt;<pos:position pos:line="283" pos:column="27"/></operator><name pos:line="283" pos:column="24">okOnePass<pos:position pos:line="283" pos:column="33"/></name></name></expr> ?<pos:position pos:line="283" pos:column="35"/></condition><then pos:line="283" pos:column="35"> <expr><name pos:line="283" pos:column="36">OP_OpenWrite<pos:position pos:line="283" pos:column="48"/></name></expr> <pos:position pos:line="283" pos:column="49"/></then><else pos:line="283" pos:column="49">: <expr><name pos:line="283" pos:column="51">OP_OpenRead<pos:position pos:line="283" pos:column="62"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="283" pos:column="63"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="284" pos:column="7">sqlite3OpenTable<pos:position pos:line="284" pos:column="23"/></name><argument_list pos:line="284" pos:column="23">(<argument><expr><name pos:line="284" pos:column="24">pParse<pos:position pos:line="284" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="284" pos:column="32">pTabItem<pos:position pos:line="284" pos:column="40"/></name><operator pos:line="284" pos:column="40">-&gt;<pos:position pos:line="284" pos:column="45"/></operator><name pos:line="284" pos:column="42">iCursor<pos:position pos:line="284" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="284" pos:column="51">iDb<pos:position pos:line="284" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="284" pos:column="56">pTab<pos:position pos:line="284" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="284" pos:column="62">op<pos:position pos:line="284" pos:column="64"/></name></expr></argument>)<pos:position pos:line="284" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="66"/></expr_stmt>
      <if pos:line="285" pos:column="7">if<condition pos:line="285" pos:column="9">( <expr><operator pos:line="285" pos:column="11">!<pos:position pos:line="285" pos:column="12"/></operator><name><name pos:line="285" pos:column="12">pWInfo<pos:position pos:line="285" pos:column="18"/></name><operator pos:line="285" pos:column="18">-&gt;<pos:position pos:line="285" pos:column="23"/></operator><name pos:line="285" pos:column="20">okOnePass<pos:position pos:line="285" pos:column="29"/></name></name> <operator pos:line="285" pos:column="30">&amp;&amp;<pos:position pos:line="285" pos:column="40"/></operator> <name><name pos:line="285" pos:column="33">pTab<pos:position pos:line="285" pos:column="37"/></name><operator pos:line="285" pos:column="37">-&gt;<pos:position pos:line="285" pos:column="42"/></operator><name pos:line="285" pos:column="39">nCol<pos:position pos:line="285" pos:column="43"/></name></name><operator pos:line="285" pos:column="43">&lt;<pos:position pos:line="285" pos:column="47"/></operator><name pos:line="285" pos:column="44">BMS<pos:position pos:line="285" pos:column="47"/></name></expr> )<pos:position pos:line="285" pos:column="49"/></condition><then><block pos:line="285" pos:column="49">{
        <decl_stmt><decl><type><name pos:line="286" pos:column="9">Bitmask<pos:position pos:line="286" pos:column="16"/></name></type> <name pos:line="286" pos:column="17">b<pos:position pos:line="286" pos:column="18"/></name> <init pos:line="286" pos:column="19">= <expr><name><name pos:line="286" pos:column="21">pTabItem<pos:position pos:line="286" pos:column="29"/></name><operator pos:line="286" pos:column="29">-&gt;<pos:position pos:line="286" pos:column="34"/></operator><name pos:line="286" pos:column="31">colUsed<pos:position pos:line="286" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="286" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="287" pos:column="9">int<pos:position pos:line="287" pos:column="12"/></name></type> <name pos:line="287" pos:column="13">n<pos:position pos:line="287" pos:column="14"/></name> <init pos:line="287" pos:column="15">= <expr><literal type="number" pos:line="287" pos:column="17">0<pos:position pos:line="287" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="287" pos:column="19"/></decl_stmt>
        <for pos:line="288" pos:column="9">for<control pos:line="288" pos:column="12">(<init pos:line="288" pos:column="13">;<pos:position pos:line="288" pos:column="14"/></init> <condition><expr><name pos:line="288" pos:column="15">b<pos:position pos:line="288" pos:column="16"/></name></expr>;<pos:position pos:line="288" pos:column="17"/></condition> <incr><expr><name pos:line="288" pos:column="18">b<pos:position pos:line="288" pos:column="19"/></name><operator pos:line="288" pos:column="19">=<pos:position pos:line="288" pos:column="20"/></operator><name pos:line="288" pos:column="20">b<pos:position pos:line="288" pos:column="21"/></name><operator pos:line="288" pos:column="21">&gt;&gt;<pos:position pos:line="288" pos:column="26"/></operator><literal type="number" pos:line="288" pos:column="23">1<pos:position pos:line="288" pos:column="24"/></literal></expr><operator pos:line="288" pos:column="24">,<pos:position pos:line="288" pos:column="25"/></operator> <expr><name pos:line="288" pos:column="26">n<pos:position pos:line="288" pos:column="27"/></name><operator pos:line="288" pos:column="27">++<pos:position pos:line="288" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="288" pos:column="30"/></control><block pos:line="288" pos:column="30">{}<pos:position pos:line="288" pos:column="32"/></block></for>
        <expr_stmt><expr><call><name pos:line="289" pos:column="9">sqlite3VdbeChangeP4<pos:position pos:line="289" pos:column="28"/></name><argument_list pos:line="289" pos:column="28">(<argument><expr><name pos:line="289" pos:column="29">v<pos:position pos:line="289" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="289" pos:column="32">sqlite3VdbeCurrentAddr<pos:position pos:line="289" pos:column="54"/></name><argument_list pos:line="289" pos:column="54">(<argument><expr><name pos:line="289" pos:column="55">v<pos:position pos:line="289" pos:column="56"/></name></expr></argument>)<pos:position pos:line="289" pos:column="57"/></argument_list></call><operator pos:line="289" pos:column="57">-<pos:position pos:line="289" pos:column="58"/></operator><literal type="number" pos:line="289" pos:column="58">1<pos:position pos:line="289" pos:column="59"/></literal></expr></argument>, <argument><expr><call><name pos:line="289" pos:column="61">SQLITE_INT_TO_PTR<pos:position pos:line="289" pos:column="78"/></name><argument_list pos:line="289" pos:column="78">(<argument><expr><name pos:line="289" pos:column="79">n<pos:position pos:line="289" pos:column="80"/></name></expr></argument>)<pos:position pos:line="289" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="289" pos:column="83">P4_INT32<pos:position pos:line="289" pos:column="91"/></name></expr></argument>)<pos:position pos:line="289" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="290" pos:column="9">assert<pos:position pos:line="290" pos:column="15"/></name><argument_list pos:line="290" pos:column="15">( <argument><expr><name pos:line="290" pos:column="17">n<pos:position pos:line="290" pos:column="18"/></name><operator pos:line="290" pos:column="18">&lt;=<pos:position pos:line="290" pos:column="23"/></operator><name><name pos:line="290" pos:column="20">pTab<pos:position pos:line="290" pos:column="24"/></name><operator pos:line="290" pos:column="24">-&gt;<pos:position pos:line="290" pos:column="29"/></operator><name pos:line="290" pos:column="26">nCol<pos:position pos:line="290" pos:column="30"/></name></name></expr></argument> )<pos:position pos:line="290" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="291" pos:column="8"/></block></then></if>
    }<pos:position pos:line="292" pos:column="6"/></block></then></if></elseif><else pos:line="292" pos:column="6">else<block pos:line="292" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="293" pos:column="7">sqlite3TableLock<pos:position pos:line="293" pos:column="23"/></name><argument_list pos:line="293" pos:column="23">(<argument><expr><name pos:line="293" pos:column="24">pParse<pos:position pos:line="293" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="293" pos:column="32">iDb<pos:position pos:line="293" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="293" pos:column="37">pTab<pos:position pos:line="293" pos:column="41"/></name><operator pos:line="293" pos:column="41">-&gt;<pos:position pos:line="293" pos:column="46"/></operator><name pos:line="293" pos:column="43">tnum<pos:position pos:line="293" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="293" pos:column="49">0<pos:position pos:line="293" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="293" pos:column="52">pTab<pos:position pos:line="293" pos:column="56"/></name><operator pos:line="293" pos:column="56">-&gt;<pos:position pos:line="293" pos:column="61"/></operator><name pos:line="293" pos:column="58">zName<pos:position pos:line="293" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="293" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="294" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name><name pos:line="295" pos:column="5">pLevel<pos:position pos:line="295" pos:column="11"/></name><operator pos:line="295" pos:column="11">-&gt;<pos:position pos:line="295" pos:column="16"/></operator><name pos:line="295" pos:column="13">iTabCur<pos:position pos:line="295" pos:column="20"/></name></name> <operator pos:line="295" pos:column="21">=<pos:position pos:line="295" pos:column="22"/></operator> <name><name pos:line="295" pos:column="23">pTabItem<pos:position pos:line="295" pos:column="31"/></name><operator pos:line="295" pos:column="31">-&gt;<pos:position pos:line="295" pos:column="36"/></operator><name pos:line="295" pos:column="33">iCursor<pos:position pos:line="295" pos:column="40"/></name></name></expr>;<pos:position pos:line="295" pos:column="41"/></expr_stmt>
    <if pos:line="296" pos:column="5">if<condition pos:line="296" pos:column="7">( <expr><operator pos:line="296" pos:column="9">(<pos:position pos:line="296" pos:column="10"/></operator><name><name pos:line="296" pos:column="10">pLevel<pos:position pos:line="296" pos:column="16"/></name><operator pos:line="296" pos:column="16">-&gt;<pos:position pos:line="296" pos:column="21"/></operator><name pos:line="296" pos:column="18">plan<pos:position pos:line="296" pos:column="22"/></name><operator pos:line="296" pos:column="22">.<pos:position pos:line="296" pos:column="23"/></operator><name pos:line="296" pos:column="23">wsFlags<pos:position pos:line="296" pos:column="30"/></name></name> <operator pos:line="296" pos:column="31">&amp;<pos:position pos:line="296" pos:column="36"/></operator> <name pos:line="296" pos:column="33">WHERE_INDEXED<pos:position pos:line="296" pos:column="46"/></name><operator pos:line="296" pos:column="46">)<pos:position pos:line="296" pos:column="47"/></operator><operator pos:line="296" pos:column="47">!=<pos:position pos:line="296" pos:column="49"/></operator><literal type="number" pos:line="296" pos:column="49">0<pos:position pos:line="296" pos:column="50"/></literal></expr> )<pos:position pos:line="296" pos:column="52"/></condition><then><block pos:line="296" pos:column="52">{
      <decl_stmt><decl><type><name pos:line="297" pos:column="7">Index<pos:position pos:line="297" pos:column="12"/></name> <modifier pos:line="297" pos:column="13">*<pos:position pos:line="297" pos:column="14"/></modifier></type><name pos:line="297" pos:column="14">pIx<pos:position pos:line="297" pos:column="17"/></name> <init pos:line="297" pos:column="18">= <expr><name><name pos:line="297" pos:column="20">pLevel<pos:position pos:line="297" pos:column="26"/></name><operator pos:line="297" pos:column="26">-&gt;<pos:position pos:line="297" pos:column="31"/></operator><name pos:line="297" pos:column="28">plan<pos:position pos:line="297" pos:column="32"/></name><operator pos:line="297" pos:column="32">.<pos:position pos:line="297" pos:column="33"/></operator><name pos:line="297" pos:column="33">u<pos:position pos:line="297" pos:column="34"/></name><operator pos:line="297" pos:column="34">.<pos:position pos:line="297" pos:column="35"/></operator><name pos:line="297" pos:column="35">pIdx<pos:position pos:line="297" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="297" pos:column="40"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="298" pos:column="7">KeyInfo<pos:position pos:line="298" pos:column="14"/></name> <modifier pos:line="298" pos:column="15">*<pos:position pos:line="298" pos:column="16"/></modifier></type><name pos:line="298" pos:column="16">pKey<pos:position pos:line="298" pos:column="20"/></name> <init pos:line="298" pos:column="21">= <expr><call><name pos:line="298" pos:column="23">sqlite3IndexKeyinfo<pos:position pos:line="298" pos:column="42"/></name><argument_list pos:line="298" pos:column="42">(<argument><expr><name pos:line="298" pos:column="43">pParse<pos:position pos:line="298" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="51">pIx<pos:position pos:line="298" pos:column="54"/></name></expr></argument>)<pos:position pos:line="298" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="298" pos:column="56"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="299" pos:column="7">int<pos:position pos:line="299" pos:column="10"/></name></type> <name pos:line="299" pos:column="11">iIdxCur<pos:position pos:line="299" pos:column="18"/></name> <init pos:line="299" pos:column="19">= <expr><name><name pos:line="299" pos:column="21">pLevel<pos:position pos:line="299" pos:column="27"/></name><operator pos:line="299" pos:column="27">-&gt;<pos:position pos:line="299" pos:column="32"/></operator><name pos:line="299" pos:column="29">iIdxCur<pos:position pos:line="299" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="299" pos:column="37"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="300" pos:column="7">assert<pos:position pos:line="300" pos:column="13"/></name><argument_list pos:line="300" pos:column="13">( <argument><expr><name><name pos:line="300" pos:column="15">pIx<pos:position pos:line="300" pos:column="18"/></name><operator pos:line="300" pos:column="18">-&gt;<pos:position pos:line="300" pos:column="23"/></operator><name pos:line="300" pos:column="20">pSchema<pos:position pos:line="300" pos:column="27"/></name></name><operator pos:line="300" pos:column="27">==<pos:position pos:line="300" pos:column="29"/></operator><name><name pos:line="300" pos:column="29">pTab<pos:position pos:line="300" pos:column="33"/></name><operator pos:line="300" pos:column="33">-&gt;<pos:position pos:line="300" pos:column="38"/></operator><name pos:line="300" pos:column="35">pSchema<pos:position pos:line="300" pos:column="42"/></name></name></expr></argument> )<pos:position pos:line="300" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="301" pos:column="7">assert<pos:position pos:line="301" pos:column="13"/></name><argument_list pos:line="301" pos:column="13">( <argument><expr><name pos:line="301" pos:column="15">iIdxCur<pos:position pos:line="301" pos:column="22"/></name><operator pos:line="301" pos:column="22">&gt;=<pos:position pos:line="301" pos:column="27"/></operator><literal type="number" pos:line="301" pos:column="24">0<pos:position pos:line="301" pos:column="25"/></literal></expr></argument> )<pos:position pos:line="301" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="302" pos:column="7">sqlite3VdbeAddOp4<pos:position pos:line="302" pos:column="24"/></name><argument_list pos:line="302" pos:column="24">(<argument><expr><name pos:line="302" pos:column="25">v<pos:position pos:line="302" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="302" pos:column="28">OP_OpenRead<pos:position pos:line="302" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="302" pos:column="41">iIdxCur<pos:position pos:line="302" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="302" pos:column="50">pIx<pos:position pos:line="302" pos:column="53"/></name><operator pos:line="302" pos:column="53">-&gt;<pos:position pos:line="302" pos:column="58"/></operator><name pos:line="302" pos:column="55">tnum<pos:position pos:line="302" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="302" pos:column="61">iDb<pos:position pos:line="302" pos:column="64"/></name></expr></argument>,
                        <argument><expr><operator pos:line="303" pos:column="25">(<pos:position pos:line="303" pos:column="26"/></operator><name pos:line="303" pos:column="26">char<pos:position pos:line="303" pos:column="30"/></name><operator pos:line="303" pos:column="30">*<pos:position pos:line="303" pos:column="31"/></operator><operator pos:line="303" pos:column="31">)<pos:position pos:line="303" pos:column="32"/></operator><name pos:line="303" pos:column="32">pKey<pos:position pos:line="303" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="303" pos:column="38">P4_KEYINFO_HANDOFF<pos:position pos:line="303" pos:column="56"/></name></expr></argument>)<pos:position pos:line="303" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="304" pos:column="7">VdbeComment<pos:position pos:line="304" pos:column="18"/></name><argument_list pos:line="304" pos:column="18">(<argument><expr><operator pos:line="304" pos:column="19">(<pos:position pos:line="304" pos:column="20"/></operator><name pos:line="304" pos:column="20">v<pos:position pos:line="304" pos:column="21"/></name><operator pos:line="304" pos:column="21">,<pos:position pos:line="304" pos:column="22"/></operator> <literal type="string" pos:line="304" pos:column="23">"%s"<pos:position pos:line="304" pos:column="27"/></literal><operator pos:line="304" pos:column="27">,<pos:position pos:line="304" pos:column="28"/></operator> <name><name pos:line="304" pos:column="29">pIx<pos:position pos:line="304" pos:column="32"/></name><operator pos:line="304" pos:column="32">-&gt;<pos:position pos:line="304" pos:column="37"/></operator><name pos:line="304" pos:column="34">zName<pos:position pos:line="304" pos:column="39"/></name></name><operator pos:line="304" pos:column="39">)<pos:position pos:line="304" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="304" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="305" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="306" pos:column="5">sqlite3CodeVerifySchema<pos:position pos:line="306" pos:column="28"/></name><argument_list pos:line="306" pos:column="28">(<argument><expr><name pos:line="306" pos:column="29">pParse<pos:position pos:line="306" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="306" pos:column="37">iDb<pos:position pos:line="306" pos:column="40"/></name></expr></argument>)<pos:position pos:line="306" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="307" pos:column="4"/></block></for>
  <expr_stmt><expr><name><name pos:line="308" pos:column="3">pWInfo<pos:position pos:line="308" pos:column="9"/></name><operator pos:line="308" pos:column="9">-&gt;<pos:position pos:line="308" pos:column="14"/></operator><name pos:line="308" pos:column="11">iTop<pos:position pos:line="308" pos:column="15"/></name></name> <operator pos:line="308" pos:column="16">=<pos:position pos:line="308" pos:column="17"/></operator> <call><name pos:line="308" pos:column="18">sqlite3VdbeCurrentAddr<pos:position pos:line="308" pos:column="40"/></name><argument_list pos:line="308" pos:column="40">(<argument><expr><name pos:line="308" pos:column="41">v<pos:position pos:line="308" pos:column="42"/></name></expr></argument>)<pos:position pos:line="308" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="310" pos:column="3">/* Generate the code to do the search.  Each iteration of the for
  ** loop below generates code for a single nested loop of the VM
  ** program.
  */</comment>
  <expr_stmt><expr><name pos:line="314" pos:column="3">notReady<pos:position pos:line="314" pos:column="11"/></name> <operator pos:line="314" pos:column="12">=<pos:position pos:line="314" pos:column="13"/></operator> <operator pos:line="314" pos:column="14">~<pos:position pos:line="314" pos:column="15"/></operator><operator pos:line="314" pos:column="15">(<pos:position pos:line="314" pos:column="16"/></operator><name pos:line="314" pos:column="16">Bitmask<pos:position pos:line="314" pos:column="23"/></name><operator pos:line="314" pos:column="23">)<pos:position pos:line="314" pos:column="24"/></operator><literal type="number" pos:line="314" pos:column="24">0<pos:position pos:line="314" pos:column="25"/></literal></expr>;<pos:position pos:line="314" pos:column="26"/></expr_stmt>
  <for pos:line="315" pos:column="3">for<control pos:line="315" pos:column="6">(<init><expr><name pos:line="315" pos:column="7">i<pos:position pos:line="315" pos:column="8"/></name><operator pos:line="315" pos:column="8">=<pos:position pos:line="315" pos:column="9"/></operator><literal type="number" pos:line="315" pos:column="9">0<pos:position pos:line="315" pos:column="10"/></literal></expr>;<pos:position pos:line="315" pos:column="11"/></init> <condition><expr><name pos:line="315" pos:column="12">i<pos:position pos:line="315" pos:column="13"/></name><operator pos:line="315" pos:column="13">&lt;<pos:position pos:line="315" pos:column="17"/></operator><name><name pos:line="315" pos:column="14">pTabList<pos:position pos:line="315" pos:column="22"/></name><operator pos:line="315" pos:column="22">-&gt;<pos:position pos:line="315" pos:column="27"/></operator><name pos:line="315" pos:column="24">nSrc<pos:position pos:line="315" pos:column="28"/></name></name></expr>;<pos:position pos:line="315" pos:column="29"/></condition> <incr><expr><name pos:line="315" pos:column="30">i<pos:position pos:line="315" pos:column="31"/></name><operator pos:line="315" pos:column="31">++<pos:position pos:line="315" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="315" pos:column="34"/></control><block pos:line="315" pos:column="34">{
    <expr_stmt><expr><name pos:line="316" pos:column="5">notReady<pos:position pos:line="316" pos:column="13"/></name> <operator pos:line="316" pos:column="14">=<pos:position pos:line="316" pos:column="15"/></operator> <call><name pos:line="316" pos:column="16">codeOneLoopStart<pos:position pos:line="316" pos:column="32"/></name><argument_list pos:line="316" pos:column="32">(<argument><expr><name pos:line="316" pos:column="33">pWInfo<pos:position pos:line="316" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="41">i<pos:position pos:line="316" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="44">wctrlFlags<pos:position pos:line="316" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="56">notReady<pos:position pos:line="316" pos:column="64"/></name></expr></argument>)<pos:position pos:line="316" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="317" pos:column="5">pWInfo<pos:position pos:line="317" pos:column="11"/></name><operator pos:line="317" pos:column="11">-&gt;<pos:position pos:line="317" pos:column="16"/></operator><name pos:line="317" pos:column="13">iContinue<pos:position pos:line="317" pos:column="22"/></name></name> <operator pos:line="317" pos:column="23">=<pos:position pos:line="317" pos:column="24"/></operator> <name><name pos:line="317" pos:column="25">pWInfo<pos:position pos:line="317" pos:column="31"/></name><operator pos:line="317" pos:column="31">-&gt;<pos:position pos:line="317" pos:column="36"/></operator><name pos:line="317" pos:column="33">a<pos:position pos:line="317" pos:column="34"/></name><index pos:line="317" pos:column="34">[<expr><name pos:line="317" pos:column="35">i<pos:position pos:line="317" pos:column="36"/></name></expr>]<pos:position pos:line="317" pos:column="37"/></index></name><operator pos:line="317" pos:column="37">.<pos:position pos:line="317" pos:column="38"/></operator><name pos:line="317" pos:column="38">addrCont<pos:position pos:line="317" pos:column="46"/></name></expr>;<pos:position pos:line="317" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="318" pos:column="4"/></block></for>

<cpp:ifdef pos:line="320" pos:column="1">#<cpp:directive pos:line="320" pos:column="2">ifdef<pos:position pos:line="320" pos:column="7"/></cpp:directive> <name pos:line="320" pos:column="8">SQLITE_TEST<pos:position pos:line="320" pos:column="19"/></name></cpp:ifdef>  <comment type="block" pos:line="320" pos:column="21">/* For testing and debugging use only */</comment>
  <comment type="block" pos:line="321" pos:column="3">/* Record in the query plan information about the current table
  ** and the index used to access it (if any).  If the table itself
  ** is not used, its name is just '{}'.  If no index is used
  ** the index is listed as "{}".  If the primary key is used the
  ** index name is '*'.
  */</comment>
  <for pos:line="327" pos:column="3">for<control pos:line="327" pos:column="6">(<init><expr><name pos:line="327" pos:column="7">i<pos:position pos:line="327" pos:column="8"/></name><operator pos:line="327" pos:column="8">=<pos:position pos:line="327" pos:column="9"/></operator><literal type="number" pos:line="327" pos:column="9">0<pos:position pos:line="327" pos:column="10"/></literal></expr>;<pos:position pos:line="327" pos:column="11"/></init> <condition><expr><name pos:line="327" pos:column="12">i<pos:position pos:line="327" pos:column="13"/></name><operator pos:line="327" pos:column="13">&lt;<pos:position pos:line="327" pos:column="17"/></operator><name><name pos:line="327" pos:column="14">pTabList<pos:position pos:line="327" pos:column="22"/></name><operator pos:line="327" pos:column="22">-&gt;<pos:position pos:line="327" pos:column="27"/></operator><name pos:line="327" pos:column="24">nSrc<pos:position pos:line="327" pos:column="28"/></name></name></expr>;<pos:position pos:line="327" pos:column="29"/></condition> <incr><expr><name pos:line="327" pos:column="30">i<pos:position pos:line="327" pos:column="31"/></name><operator pos:line="327" pos:column="31">++<pos:position pos:line="327" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="327" pos:column="34"/></control><block pos:line="327" pos:column="34">{
    <decl_stmt><decl><type><name pos:line="328" pos:column="5">char<pos:position pos:line="328" pos:column="9"/></name> <modifier pos:line="328" pos:column="10">*<pos:position pos:line="328" pos:column="11"/></modifier></type><name pos:line="328" pos:column="11">z<pos:position pos:line="328" pos:column="12"/></name></decl>;<pos:position pos:line="328" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="329" pos:column="5">int<pos:position pos:line="329" pos:column="8"/></name></type> <name pos:line="329" pos:column="9">n<pos:position pos:line="329" pos:column="10"/></name></decl>;<pos:position pos:line="329" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><name pos:line="330" pos:column="5">pLevel<pos:position pos:line="330" pos:column="11"/></name> <operator pos:line="330" pos:column="12">=<pos:position pos:line="330" pos:column="13"/></operator> <operator pos:line="330" pos:column="14">&amp;<pos:position pos:line="330" pos:column="19"/></operator><name><name pos:line="330" pos:column="15">pWInfo<pos:position pos:line="330" pos:column="21"/></name><operator pos:line="330" pos:column="21">-&gt;<pos:position pos:line="330" pos:column="26"/></operator><name pos:line="330" pos:column="23">a<pos:position pos:line="330" pos:column="24"/></name><index pos:line="330" pos:column="24">[<expr><name pos:line="330" pos:column="25">i<pos:position pos:line="330" pos:column="26"/></name></expr>]<pos:position pos:line="330" pos:column="27"/></index></name></expr>;<pos:position pos:line="330" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="331" pos:column="5">pTabItem<pos:position pos:line="331" pos:column="13"/></name> <operator pos:line="331" pos:column="14">=<pos:position pos:line="331" pos:column="15"/></operator> <operator pos:line="331" pos:column="16">&amp;<pos:position pos:line="331" pos:column="21"/></operator><name><name pos:line="331" pos:column="17">pTabList<pos:position pos:line="331" pos:column="25"/></name><operator pos:line="331" pos:column="25">-&gt;<pos:position pos:line="331" pos:column="30"/></operator><name pos:line="331" pos:column="27">a<pos:position pos:line="331" pos:column="28"/></name><index pos:line="331" pos:column="28">[<expr><name><name pos:line="331" pos:column="29">pLevel<pos:position pos:line="331" pos:column="35"/></name><operator pos:line="331" pos:column="35">-&gt;<pos:position pos:line="331" pos:column="40"/></operator><name pos:line="331" pos:column="37">iFrom<pos:position pos:line="331" pos:column="42"/></name></name></expr>]<pos:position pos:line="331" pos:column="43"/></index></name></expr>;<pos:position pos:line="331" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="332" pos:column="5">z<pos:position pos:line="332" pos:column="6"/></name> <operator pos:line="332" pos:column="7">=<pos:position pos:line="332" pos:column="8"/></operator> <name><name pos:line="332" pos:column="9">pTabItem<pos:position pos:line="332" pos:column="17"/></name><operator pos:line="332" pos:column="17">-&gt;<pos:position pos:line="332" pos:column="22"/></operator><name pos:line="332" pos:column="19">zAlias<pos:position pos:line="332" pos:column="25"/></name></name></expr>;<pos:position pos:line="332" pos:column="26"/></expr_stmt>
    <if pos:line="333" pos:column="5">if<condition pos:line="333" pos:column="7">( <expr><name pos:line="333" pos:column="9">z<pos:position pos:line="333" pos:column="10"/></name><operator pos:line="333" pos:column="10">==<pos:position pos:line="333" pos:column="12"/></operator><literal type="number" pos:line="333" pos:column="12">0<pos:position pos:line="333" pos:column="13"/></literal></expr> )<pos:position pos:line="333" pos:column="15"/></condition><then pos:line="333" pos:column="15"> <block type="pseudo"><expr_stmt><expr><name pos:line="333" pos:column="16">z<pos:position pos:line="333" pos:column="17"/></name> <operator pos:line="333" pos:column="18">=<pos:position pos:line="333" pos:column="19"/></operator> <name><name pos:line="333" pos:column="20">pTabItem<pos:position pos:line="333" pos:column="28"/></name><operator pos:line="333" pos:column="28">-&gt;<pos:position pos:line="333" pos:column="33"/></operator><name pos:line="333" pos:column="30">pTab<pos:position pos:line="333" pos:column="34"/></name><operator pos:line="333" pos:column="34">-&gt;<pos:position pos:line="333" pos:column="39"/></operator><name pos:line="333" pos:column="36">zName<pos:position pos:line="333" pos:column="41"/></name></name></expr>;<pos:position pos:line="333" pos:column="42"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="334" pos:column="5">n<pos:position pos:line="334" pos:column="6"/></name> <operator pos:line="334" pos:column="7">=<pos:position pos:line="334" pos:column="8"/></operator> <call><name pos:line="334" pos:column="9">sqlite3Strlen30<pos:position pos:line="334" pos:column="24"/></name><argument_list pos:line="334" pos:column="24">(<argument><expr><name pos:line="334" pos:column="25">z<pos:position pos:line="334" pos:column="26"/></name></expr></argument>)<pos:position pos:line="334" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="28"/></expr_stmt>
    <if pos:line="335" pos:column="5">if<condition pos:line="335" pos:column="7">( <expr><name pos:line="335" pos:column="9">n<pos:position pos:line="335" pos:column="10"/></name><operator pos:line="335" pos:column="10">+<pos:position pos:line="335" pos:column="11"/></operator><name pos:line="335" pos:column="11">nQPlan<pos:position pos:line="335" pos:column="17"/></name> <operator pos:line="335" pos:column="18">&lt;<pos:position pos:line="335" pos:column="22"/></operator> <sizeof pos:line="335" pos:column="20">sizeof<argument_list pos:line="335" pos:column="26">(<argument><expr><name pos:line="335" pos:column="27">sqlite3_query_plan<pos:position pos:line="335" pos:column="45"/></name></expr></argument>)<pos:position pos:line="335" pos:column="46"/></argument_list></sizeof><operator pos:line="335" pos:column="46">-<pos:position pos:line="335" pos:column="47"/></operator><literal type="number" pos:line="335" pos:column="47">10<pos:position pos:line="335" pos:column="49"/></literal></expr> )<pos:position pos:line="335" pos:column="51"/></condition><then><block pos:line="335" pos:column="51">{
      <if pos:line="336" pos:column="7">if<condition pos:line="336" pos:column="9">( <expr><name><name pos:line="336" pos:column="11">pLevel<pos:position pos:line="336" pos:column="17"/></name><operator pos:line="336" pos:column="17">-&gt;<pos:position pos:line="336" pos:column="22"/></operator><name pos:line="336" pos:column="19">plan<pos:position pos:line="336" pos:column="23"/></name><operator pos:line="336" pos:column="23">.<pos:position pos:line="336" pos:column="24"/></operator><name pos:line="336" pos:column="24">wsFlags<pos:position pos:line="336" pos:column="31"/></name></name> <operator pos:line="336" pos:column="32">&amp;<pos:position pos:line="336" pos:column="37"/></operator> <name pos:line="336" pos:column="34">WHERE_IDX_ONLY<pos:position pos:line="336" pos:column="48"/></name></expr> )<pos:position pos:line="336" pos:column="50"/></condition><then><block pos:line="336" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="337" pos:column="9">memcpy<pos:position pos:line="337" pos:column="15"/></name><argument_list pos:line="337" pos:column="15">(<argument><expr><operator pos:line="337" pos:column="16">&amp;<pos:position pos:line="337" pos:column="21"/></operator><name><name pos:line="337" pos:column="17">sqlite3_query_plan<pos:position pos:line="337" pos:column="35"/></name><index pos:line="337" pos:column="35">[<expr><name pos:line="337" pos:column="36">nQPlan<pos:position pos:line="337" pos:column="42"/></name></expr>]<pos:position pos:line="337" pos:column="43"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="337" pos:column="45">"{}"<pos:position pos:line="337" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="337" pos:column="51">2<pos:position pos:line="337" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="337" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="338" pos:column="9">nQPlan<pos:position pos:line="338" pos:column="15"/></name> <operator pos:line="338" pos:column="16">+=<pos:position pos:line="338" pos:column="18"/></operator> <literal type="number" pos:line="338" pos:column="19">2<pos:position pos:line="338" pos:column="20"/></literal></expr>;<pos:position pos:line="338" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="339" pos:column="8"/></block></then><else pos:line="339" pos:column="8">else<block pos:line="339" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="340" pos:column="9">memcpy<pos:position pos:line="340" pos:column="15"/></name><argument_list pos:line="340" pos:column="15">(<argument><expr><operator pos:line="340" pos:column="16">&amp;<pos:position pos:line="340" pos:column="21"/></operator><name><name pos:line="340" pos:column="17">sqlite3_query_plan<pos:position pos:line="340" pos:column="35"/></name><index pos:line="340" pos:column="35">[<expr><name pos:line="340" pos:column="36">nQPlan<pos:position pos:line="340" pos:column="42"/></name></expr>]<pos:position pos:line="340" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="340" pos:column="45">z<pos:position pos:line="340" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="340" pos:column="48">n<pos:position pos:line="340" pos:column="49"/></name></expr></argument>)<pos:position pos:line="340" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="341" pos:column="9">nQPlan<pos:position pos:line="341" pos:column="15"/></name> <operator pos:line="341" pos:column="16">+=<pos:position pos:line="341" pos:column="18"/></operator> <name pos:line="341" pos:column="19">n<pos:position pos:line="341" pos:column="20"/></name></expr>;<pos:position pos:line="341" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="342" pos:column="8"/></block></else></if>
      <expr_stmt><expr><name><name pos:line="343" pos:column="7">sqlite3_query_plan<pos:position pos:line="343" pos:column="25"/></name><index pos:line="343" pos:column="25">[<expr><name pos:line="343" pos:column="26">nQPlan<pos:position pos:line="343" pos:column="32"/></name><operator pos:line="343" pos:column="32">++<pos:position pos:line="343" pos:column="34"/></operator></expr>]<pos:position pos:line="343" pos:column="35"/></index></name> <operator pos:line="343" pos:column="36">=<pos:position pos:line="343" pos:column="37"/></operator> <literal type="char" pos:line="343" pos:column="38">' '<pos:position pos:line="343" pos:column="41"/></literal></expr>;<pos:position pos:line="343" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="344" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="345" pos:column="5">testcase<pos:position pos:line="345" pos:column="13"/></name><argument_list pos:line="345" pos:column="13">( <argument><expr><name><name pos:line="345" pos:column="15">pLevel<pos:position pos:line="345" pos:column="21"/></name><operator pos:line="345" pos:column="21">-&gt;<pos:position pos:line="345" pos:column="26"/></operator><name pos:line="345" pos:column="23">plan<pos:position pos:line="345" pos:column="27"/></name><operator pos:line="345" pos:column="27">.<pos:position pos:line="345" pos:column="28"/></operator><name pos:line="345" pos:column="28">wsFlags<pos:position pos:line="345" pos:column="35"/></name></name> <operator pos:line="345" pos:column="36">&amp;<pos:position pos:line="345" pos:column="41"/></operator> <name pos:line="345" pos:column="38">WHERE_ROWID_EQ<pos:position pos:line="345" pos:column="52"/></name></expr></argument> )<pos:position pos:line="345" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="346" pos:column="5">testcase<pos:position pos:line="346" pos:column="13"/></name><argument_list pos:line="346" pos:column="13">( <argument><expr><name><name pos:line="346" pos:column="15">pLevel<pos:position pos:line="346" pos:column="21"/></name><operator pos:line="346" pos:column="21">-&gt;<pos:position pos:line="346" pos:column="26"/></operator><name pos:line="346" pos:column="23">plan<pos:position pos:line="346" pos:column="27"/></name><operator pos:line="346" pos:column="27">.<pos:position pos:line="346" pos:column="28"/></operator><name pos:line="346" pos:column="28">wsFlags<pos:position pos:line="346" pos:column="35"/></name></name> <operator pos:line="346" pos:column="36">&amp;<pos:position pos:line="346" pos:column="41"/></operator> <name pos:line="346" pos:column="38">WHERE_ROWID_RANGE<pos:position pos:line="346" pos:column="55"/></name></expr></argument> )<pos:position pos:line="346" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="58"/></expr_stmt>
    <if pos:line="347" pos:column="5">if<condition pos:line="347" pos:column="7">( <expr><name><name pos:line="347" pos:column="9">pLevel<pos:position pos:line="347" pos:column="15"/></name><operator pos:line="347" pos:column="15">-&gt;<pos:position pos:line="347" pos:column="20"/></operator><name pos:line="347" pos:column="17">plan<pos:position pos:line="347" pos:column="21"/></name><operator pos:line="347" pos:column="21">.<pos:position pos:line="347" pos:column="22"/></operator><name pos:line="347" pos:column="22">wsFlags<pos:position pos:line="347" pos:column="29"/></name></name> <operator pos:line="347" pos:column="30">&amp;<pos:position pos:line="347" pos:column="35"/></operator> <operator pos:line="347" pos:column="32">(<pos:position pos:line="347" pos:column="33"/></operator><name pos:line="347" pos:column="33">WHERE_ROWID_EQ<pos:position pos:line="347" pos:column="47"/></name><operator pos:line="347" pos:column="47">|<pos:position pos:line="347" pos:column="48"/></operator><name pos:line="347" pos:column="48">WHERE_ROWID_RANGE<pos:position pos:line="347" pos:column="65"/></name><operator pos:line="347" pos:column="65">)<pos:position pos:line="347" pos:column="66"/></operator></expr> )<pos:position pos:line="347" pos:column="68"/></condition><then><block pos:line="347" pos:column="68">{
      <expr_stmt><expr><call><name pos:line="348" pos:column="7">memcpy<pos:position pos:line="348" pos:column="13"/></name><argument_list pos:line="348" pos:column="13">(<argument><expr><operator pos:line="348" pos:column="14">&amp;<pos:position pos:line="348" pos:column="19"/></operator><name><name pos:line="348" pos:column="15">sqlite3_query_plan<pos:position pos:line="348" pos:column="33"/></name><index pos:line="348" pos:column="33">[<expr><name pos:line="348" pos:column="34">nQPlan<pos:position pos:line="348" pos:column="40"/></name></expr>]<pos:position pos:line="348" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="348" pos:column="43">"* "<pos:position pos:line="348" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="348" pos:column="49">2<pos:position pos:line="348" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="348" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name pos:line="349" pos:column="7">nQPlan<pos:position pos:line="349" pos:column="13"/></name> <operator pos:line="349" pos:column="14">+=<pos:position pos:line="349" pos:column="16"/></operator> <literal type="number" pos:line="349" pos:column="17">2<pos:position pos:line="349" pos:column="18"/></literal></expr>;<pos:position pos:line="349" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="350" pos:column="6"/></block></then><elseif pos:line="350" pos:column="6">else <if pos:line="350" pos:column="11">if<condition pos:line="350" pos:column="13">( <expr><operator pos:line="350" pos:column="15">(<pos:position pos:line="350" pos:column="16"/></operator><name><name pos:line="350" pos:column="16">pLevel<pos:position pos:line="350" pos:column="22"/></name><operator pos:line="350" pos:column="22">-&gt;<pos:position pos:line="350" pos:column="27"/></operator><name pos:line="350" pos:column="24">plan<pos:position pos:line="350" pos:column="28"/></name><operator pos:line="350" pos:column="28">.<pos:position pos:line="350" pos:column="29"/></operator><name pos:line="350" pos:column="29">wsFlags<pos:position pos:line="350" pos:column="36"/></name></name> <operator pos:line="350" pos:column="37">&amp;<pos:position pos:line="350" pos:column="42"/></operator> <name pos:line="350" pos:column="39">WHERE_INDEXED<pos:position pos:line="350" pos:column="52"/></name><operator pos:line="350" pos:column="52">)<pos:position pos:line="350" pos:column="53"/></operator><operator pos:line="350" pos:column="53">!=<pos:position pos:line="350" pos:column="55"/></operator><literal type="number" pos:line="350" pos:column="55">0<pos:position pos:line="350" pos:column="56"/></literal></expr> )<pos:position pos:line="350" pos:column="58"/></condition><then><block pos:line="350" pos:column="58">{
      <expr_stmt><expr><name pos:line="351" pos:column="7">n<pos:position pos:line="351" pos:column="8"/></name> <operator pos:line="351" pos:column="9">=<pos:position pos:line="351" pos:column="10"/></operator> <call><name pos:line="351" pos:column="11">sqlite3Strlen30<pos:position pos:line="351" pos:column="26"/></name><argument_list pos:line="351" pos:column="26">(<argument><expr><name><name pos:line="351" pos:column="27">pLevel<pos:position pos:line="351" pos:column="33"/></name><operator pos:line="351" pos:column="33">-&gt;<pos:position pos:line="351" pos:column="38"/></operator><name pos:line="351" pos:column="35">plan<pos:position pos:line="351" pos:column="39"/></name><operator pos:line="351" pos:column="39">.<pos:position pos:line="351" pos:column="40"/></operator><name pos:line="351" pos:column="40">u<pos:position pos:line="351" pos:column="41"/></name><operator pos:line="351" pos:column="41">.<pos:position pos:line="351" pos:column="42"/></operator><name pos:line="351" pos:column="42">pIdx<pos:position pos:line="351" pos:column="46"/></name><operator pos:line="351" pos:column="46">-&gt;<pos:position pos:line="351" pos:column="51"/></operator><name pos:line="351" pos:column="48">zName<pos:position pos:line="351" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="351" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="55"/></expr_stmt>
      <if pos:line="352" pos:column="7">if<condition pos:line="352" pos:column="9">( <expr><name pos:line="352" pos:column="11">n<pos:position pos:line="352" pos:column="12"/></name><operator pos:line="352" pos:column="12">+<pos:position pos:line="352" pos:column="13"/></operator><name pos:line="352" pos:column="13">nQPlan<pos:position pos:line="352" pos:column="19"/></name> <operator pos:line="352" pos:column="20">&lt;<pos:position pos:line="352" pos:column="24"/></operator> <sizeof pos:line="352" pos:column="22">sizeof<argument_list pos:line="352" pos:column="28">(<argument><expr><name pos:line="352" pos:column="29">sqlite3_query_plan<pos:position pos:line="352" pos:column="47"/></name></expr></argument>)<pos:position pos:line="352" pos:column="48"/></argument_list></sizeof><operator pos:line="352" pos:column="48">-<pos:position pos:line="352" pos:column="49"/></operator><literal type="number" pos:line="352" pos:column="49">2<pos:position pos:line="352" pos:column="50"/></literal></expr> )<pos:position pos:line="352" pos:column="52"/></condition><then><block pos:line="352" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="353" pos:column="9">memcpy<pos:position pos:line="353" pos:column="15"/></name><argument_list pos:line="353" pos:column="15">(<argument><expr><operator pos:line="353" pos:column="16">&amp;<pos:position pos:line="353" pos:column="21"/></operator><name><name pos:line="353" pos:column="17">sqlite3_query_plan<pos:position pos:line="353" pos:column="35"/></name><index pos:line="353" pos:column="35">[<expr><name pos:line="353" pos:column="36">nQPlan<pos:position pos:line="353" pos:column="42"/></name></expr>]<pos:position pos:line="353" pos:column="43"/></index></name></expr></argument>, <argument><expr><name><name pos:line="353" pos:column="45">pLevel<pos:position pos:line="353" pos:column="51"/></name><operator pos:line="353" pos:column="51">-&gt;<pos:position pos:line="353" pos:column="56"/></operator><name pos:line="353" pos:column="53">plan<pos:position pos:line="353" pos:column="57"/></name><operator pos:line="353" pos:column="57">.<pos:position pos:line="353" pos:column="58"/></operator><name pos:line="353" pos:column="58">u<pos:position pos:line="353" pos:column="59"/></name><operator pos:line="353" pos:column="59">.<pos:position pos:line="353" pos:column="60"/></operator><name pos:line="353" pos:column="60">pIdx<pos:position pos:line="353" pos:column="64"/></name><operator pos:line="353" pos:column="64">-&gt;<pos:position pos:line="353" pos:column="69"/></operator><name pos:line="353" pos:column="66">zName<pos:position pos:line="353" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="353" pos:column="73">n<pos:position pos:line="353" pos:column="74"/></name></expr></argument>)<pos:position pos:line="353" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><name pos:line="354" pos:column="9">nQPlan<pos:position pos:line="354" pos:column="15"/></name> <operator pos:line="354" pos:column="16">+=<pos:position pos:line="354" pos:column="18"/></operator> <name pos:line="354" pos:column="19">n<pos:position pos:line="354" pos:column="20"/></name></expr>;<pos:position pos:line="354" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="355" pos:column="9">sqlite3_query_plan<pos:position pos:line="355" pos:column="27"/></name><index pos:line="355" pos:column="27">[<expr><name pos:line="355" pos:column="28">nQPlan<pos:position pos:line="355" pos:column="34"/></name><operator pos:line="355" pos:column="34">++<pos:position pos:line="355" pos:column="36"/></operator></expr>]<pos:position pos:line="355" pos:column="37"/></index></name> <operator pos:line="355" pos:column="38">=<pos:position pos:line="355" pos:column="39"/></operator> <literal type="char" pos:line="355" pos:column="40">' '<pos:position pos:line="355" pos:column="43"/></literal></expr>;<pos:position pos:line="355" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="356" pos:column="8"/></block></then></if>
    }<pos:position pos:line="357" pos:column="6"/></block></then></if></elseif><else pos:line="357" pos:column="6">else<block pos:line="357" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="358" pos:column="7">memcpy<pos:position pos:line="358" pos:column="13"/></name><argument_list pos:line="358" pos:column="13">(<argument><expr><operator pos:line="358" pos:column="14">&amp;<pos:position pos:line="358" pos:column="19"/></operator><name><name pos:line="358" pos:column="15">sqlite3_query_plan<pos:position pos:line="358" pos:column="33"/></name><index pos:line="358" pos:column="33">[<expr><name pos:line="358" pos:column="34">nQPlan<pos:position pos:line="358" pos:column="40"/></name></expr>]<pos:position pos:line="358" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="358" pos:column="43">"{} "<pos:position pos:line="358" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="358" pos:column="50">3<pos:position pos:line="358" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="358" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name pos:line="359" pos:column="7">nQPlan<pos:position pos:line="359" pos:column="13"/></name> <operator pos:line="359" pos:column="14">+=<pos:position pos:line="359" pos:column="16"/></operator> <literal type="number" pos:line="359" pos:column="17">3<pos:position pos:line="359" pos:column="18"/></literal></expr>;<pos:position pos:line="359" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="360" pos:column="6"/></block></else></if>
  }<pos:position pos:line="361" pos:column="4"/></block></for>
  <while pos:line="362" pos:column="3">while<condition pos:line="362" pos:column="8">( <expr><name pos:line="362" pos:column="10">nQPlan<pos:position pos:line="362" pos:column="16"/></name><operator pos:line="362" pos:column="16">&gt;<pos:position pos:line="362" pos:column="20"/></operator><literal type="number" pos:line="362" pos:column="17">0<pos:position pos:line="362" pos:column="18"/></literal> <operator pos:line="362" pos:column="19">&amp;&amp;<pos:position pos:line="362" pos:column="29"/></operator> <name><name pos:line="362" pos:column="22">sqlite3_query_plan<pos:position pos:line="362" pos:column="40"/></name><index pos:line="362" pos:column="40">[<expr><name pos:line="362" pos:column="41">nQPlan<pos:position pos:line="362" pos:column="47"/></name><operator pos:line="362" pos:column="47">-<pos:position pos:line="362" pos:column="48"/></operator><literal type="number" pos:line="362" pos:column="48">1<pos:position pos:line="362" pos:column="49"/></literal></expr>]<pos:position pos:line="362" pos:column="50"/></index></name><operator pos:line="362" pos:column="50">==<pos:position pos:line="362" pos:column="52"/></operator><literal type="char" pos:line="362" pos:column="52">' '<pos:position pos:line="362" pos:column="55"/></literal></expr> )<pos:position pos:line="362" pos:column="57"/></condition><block pos:line="362" pos:column="57">{
    <expr_stmt><expr><name><name pos:line="363" pos:column="5">sqlite3_query_plan<pos:position pos:line="363" pos:column="23"/></name><index pos:line="363" pos:column="23">[<expr><operator pos:line="363" pos:column="24">--<pos:position pos:line="363" pos:column="26"/></operator><name pos:line="363" pos:column="26">nQPlan<pos:position pos:line="363" pos:column="32"/></name></expr>]<pos:position pos:line="363" pos:column="33"/></index></name> <operator pos:line="363" pos:column="34">=<pos:position pos:line="363" pos:column="35"/></operator> <literal type="number" pos:line="363" pos:column="36">0<pos:position pos:line="363" pos:column="37"/></literal></expr>;<pos:position pos:line="363" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="364" pos:column="4"/></block></while>
  <expr_stmt><expr><name><name pos:line="365" pos:column="3">sqlite3_query_plan<pos:position pos:line="365" pos:column="21"/></name><index pos:line="365" pos:column="21">[<expr><name pos:line="365" pos:column="22">nQPlan<pos:position pos:line="365" pos:column="28"/></name></expr>]<pos:position pos:line="365" pos:column="29"/></index></name> <operator pos:line="365" pos:column="30">=<pos:position pos:line="365" pos:column="31"/></operator> <literal type="number" pos:line="365" pos:column="32">0<pos:position pos:line="365" pos:column="33"/></literal></expr>;<pos:position pos:line="365" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="366" pos:column="3">nQPlan<pos:position pos:line="366" pos:column="9"/></name> <operator pos:line="366" pos:column="10">=<pos:position pos:line="366" pos:column="11"/></operator> <literal type="number" pos:line="366" pos:column="12">0<pos:position pos:line="366" pos:column="13"/></literal></expr>;<pos:position pos:line="366" pos:column="14"/></expr_stmt>
<cpp:endif pos:line="367" pos:column="1">#<cpp:directive pos:line="367" pos:column="2">endif<pos:position pos:line="367" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="367" pos:column="8">/* SQLITE_TEST // Testing and debugging use only */</comment>

  <comment type="block" pos:line="369" pos:column="3">/* Record the continuation address in the WhereInfo structure.  Then
  ** clean up and return.
  */</comment>
  <return pos:line="372" pos:column="3">return <expr><name pos:line="372" pos:column="10">pWInfo<pos:position pos:line="372" pos:column="16"/></name></expr>;<pos:position pos:line="372" pos:column="17"/></return>

  <comment type="block" pos:line="374" pos:column="3">/* Jump here if malloc fails */</comment>
<label><name pos:line="375" pos:column="1">whereBeginError<pos:position pos:line="375" pos:column="16"/></name>:<pos:position pos:line="375" pos:column="17"/></label>
  <expr_stmt><expr><call><name pos:line="376" pos:column="3">whereInfoFree<pos:position pos:line="376" pos:column="16"/></name><argument_list pos:line="376" pos:column="16">(<argument><expr><name pos:line="376" pos:column="17">db<pos:position pos:line="376" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="376" pos:column="21">pWInfo<pos:position pos:line="376" pos:column="27"/></name></expr></argument>)<pos:position pos:line="376" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="29"/></expr_stmt>
  <return pos:line="377" pos:column="3">return <expr><literal type="number" pos:line="377" pos:column="10">0<pos:position pos:line="377" pos:column="11"/></literal></expr>;<pos:position pos:line="377" pos:column="12"/></return>
}<pos:position pos:line="378" pos:column="2"/></block></function></unit>

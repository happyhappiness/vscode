<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/sqlite/gumtree/sqlite_function_16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fts3SnippetFunc<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(
  <parameter><decl><type><name pos:line="2" pos:column="3">sqlite3_context<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">pContext<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>,      <comment type="block" pos:line="2" pos:column="35">/* SQLite function call context */</comment>
  <parameter><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">nVal<pos:position pos:line="3" pos:column="11"/></name></decl></parameter>,                       <comment type="block" pos:line="3" pos:column="35">/* Size of apVal[] array */</comment>
  <parameter><decl><type><name pos:line="4" pos:column="3">sqlite3_value<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier><modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">apVal<pos:position pos:line="4" pos:column="24"/></name></decl></parameter>           <comment type="block" pos:line="4" pos:column="35">/* Array of arguments */</comment>
)<pos:position pos:line="5" pos:column="2"/></parameter_list><block pos:line="5" pos:column="2">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">Fts3Cursor<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">pCsr<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>               <comment type="block" pos:line="6" pos:column="35">/* Cursor handle passed through apVal[0] */</comment>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">zStart<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><literal type="string" pos:line="7" pos:column="24">"&lt;b&gt;"<pos:position pos:line="7" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">zEnd<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="string" pos:line="8" pos:column="22">"&lt;/b&gt;"<pos:position pos:line="8" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">zEllipsis<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><literal type="string" pos:line="9" pos:column="27">"&lt;b&gt;...&lt;/b&gt;"<pos:position pos:line="9" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">iCol<pos:position pos:line="10" pos:column="11"/></name> <init pos:line="10" pos:column="12">= <expr><operator pos:line="10" pos:column="14">-<pos:position pos:line="10" pos:column="15"/></operator><literal type="number" pos:line="10" pos:column="15">1<pos:position pos:line="10" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">nToken<pos:position pos:line="11" pos:column="13"/></name> <init pos:line="11" pos:column="14">= <expr><literal type="number" pos:line="11" pos:column="16">15<pos:position pos:line="11" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>                <comment type="block" pos:line="11" pos:column="35">/* Default number of tokens in snippet */</comment>

  <comment type="block" pos:line="13" pos:column="3">/* There must be at least one argument passed to this function (otherwise
  ** the non-overloaded version would have been called instead of this one).
  */</comment>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">assert<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">( <argument><expr><name pos:line="16" pos:column="11">nVal<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">&gt;=<pos:position pos:line="16" pos:column="20"/></operator><literal type="number" pos:line="16" pos:column="17">1<pos:position pos:line="16" pos:column="18"/></literal></expr></argument> )<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">( <expr><name pos:line="18" pos:column="7">nVal<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">&gt;<pos:position pos:line="18" pos:column="15"/></operator><literal type="number" pos:line="18" pos:column="12">6<pos:position pos:line="18" pos:column="13"/></literal></expr> )<pos:position pos:line="18" pos:column="15"/></condition><then><block pos:line="18" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">sqlite3_result_error<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">pContext<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, 
        <argument><expr><literal type="string" pos:line="20" pos:column="9">"wrong number of arguments to function snippet()"<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="60">-<pos:position pos:line="20" pos:column="61"/></operator><literal type="number" pos:line="20" pos:column="61">1<pos:position pos:line="20" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
    <return pos:line="21" pos:column="5">return;<pos:position pos:line="21" pos:column="12"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">( <expr><call><name pos:line="23" pos:column="7">fts3FunctionArg<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">pContext<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="33">"snippet"<pos:position pos:line="23" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="44">apVal<pos:position pos:line="23" pos:column="49"/></name><index pos:line="23" pos:column="49">[<expr><literal type="number" pos:line="23" pos:column="50">0<pos:position pos:line="23" pos:column="51"/></literal></expr>]<pos:position pos:line="23" pos:column="52"/></index></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="54">&amp;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="55">pCsr<pos:position pos:line="23" pos:column="59"/></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr> )<pos:position pos:line="23" pos:column="62"/></condition><then pos:line="23" pos:column="62"> <block type="pseudo"><return pos:line="23" pos:column="63">return;<pos:position pos:line="23" pos:column="70"/></return></block></then></if>

  <switch pos:line="25" pos:column="3">switch<condition pos:line="25" pos:column="9">( <expr><name pos:line="25" pos:column="11">nVal<pos:position pos:line="25" pos:column="15"/></name></expr> )<pos:position pos:line="25" pos:column="17"/></condition><block pos:line="25" pos:column="17">{
    <case pos:line="26" pos:column="5">case <expr><literal type="number" pos:line="26" pos:column="10">6<pos:position pos:line="26" pos:column="11"/></literal></expr>:<pos:position pos:line="26" pos:column="12"/></case> <expr_stmt><expr><name pos:line="26" pos:column="13">nToken<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">sqlite3_value_int<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><name><name pos:line="26" pos:column="40">apVal<pos:position pos:line="26" pos:column="45"/></name><index pos:line="26" pos:column="45">[<expr><literal type="number" pos:line="26" pos:column="46">5<pos:position pos:line="26" pos:column="47"/></literal></expr>]<pos:position pos:line="26" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>
    <case pos:line="27" pos:column="5">case <expr><literal type="number" pos:line="27" pos:column="10">5<pos:position pos:line="27" pos:column="11"/></literal></expr>:<pos:position pos:line="27" pos:column="12"/></case> <expr_stmt><expr><name pos:line="27" pos:column="13">iCol<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <call><name pos:line="27" pos:column="20">sqlite3_value_int<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name><name pos:line="27" pos:column="38">apVal<pos:position pos:line="27" pos:column="43"/></name><index pos:line="27" pos:column="43">[<expr><literal type="number" pos:line="27" pos:column="44">4<pos:position pos:line="27" pos:column="45"/></literal></expr>]<pos:position pos:line="27" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
    <case pos:line="28" pos:column="5">case <expr><literal type="number" pos:line="28" pos:column="10">4<pos:position pos:line="28" pos:column="11"/></literal></expr>:<pos:position pos:line="28" pos:column="12"/></case> <expr_stmt><expr><name pos:line="28" pos:column="13">zEllipsis<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <operator pos:line="28" pos:column="25">(<pos:position pos:line="28" pos:column="26"/></operator><specifier pos:line="28" pos:column="26">const<pos:position pos:line="28" pos:column="31"/></specifier> <name pos:line="28" pos:column="32">char<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">*<pos:position pos:line="28" pos:column="37"/></operator><operator pos:line="28" pos:column="37">)<pos:position pos:line="28" pos:column="38"/></operator><call><name pos:line="28" pos:column="38">sqlite3_value_text<pos:position pos:line="28" pos:column="56"/></name><argument_list pos:line="28" pos:column="56">(<argument><expr><name><name pos:line="28" pos:column="57">apVal<pos:position pos:line="28" pos:column="62"/></name><index pos:line="28" pos:column="62">[<expr><literal type="number" pos:line="28" pos:column="63">3<pos:position pos:line="28" pos:column="64"/></literal></expr>]<pos:position pos:line="28" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="67"/></expr_stmt>
    <case pos:line="29" pos:column="5">case <expr><literal type="number" pos:line="29" pos:column="10">3<pos:position pos:line="29" pos:column="11"/></literal></expr>:<pos:position pos:line="29" pos:column="12"/></case> <expr_stmt><expr><name pos:line="29" pos:column="13">zEnd<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <operator pos:line="29" pos:column="20">(<pos:position pos:line="29" pos:column="21"/></operator><specifier pos:line="29" pos:column="21">const<pos:position pos:line="29" pos:column="26"/></specifier> <name pos:line="29" pos:column="27">char<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">*<pos:position pos:line="29" pos:column="32"/></operator><operator pos:line="29" pos:column="32">)<pos:position pos:line="29" pos:column="33"/></operator><call><name pos:line="29" pos:column="33">sqlite3_value_text<pos:position pos:line="29" pos:column="51"/></name><argument_list pos:line="29" pos:column="51">(<argument><expr><name><name pos:line="29" pos:column="52">apVal<pos:position pos:line="29" pos:column="57"/></name><index pos:line="29" pos:column="57">[<expr><literal type="number" pos:line="29" pos:column="58">2<pos:position pos:line="29" pos:column="59"/></literal></expr>]<pos:position pos:line="29" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
    <case pos:line="30" pos:column="5">case <expr><literal type="number" pos:line="30" pos:column="10">2<pos:position pos:line="30" pos:column="11"/></literal></expr>:<pos:position pos:line="30" pos:column="12"/></case> <expr_stmt><expr><name pos:line="30" pos:column="13">zStart<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <operator pos:line="30" pos:column="22">(<pos:position pos:line="30" pos:column="23"/></operator><specifier pos:line="30" pos:column="23">const<pos:position pos:line="30" pos:column="28"/></specifier> <name pos:line="30" pos:column="29">char<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">*<pos:position pos:line="30" pos:column="34"/></operator><operator pos:line="30" pos:column="34">)<pos:position pos:line="30" pos:column="35"/></operator><call><name pos:line="30" pos:column="35">sqlite3_value_text<pos:position pos:line="30" pos:column="53"/></name><argument_list pos:line="30" pos:column="53">(<argument><expr><name><name pos:line="30" pos:column="54">apVal<pos:position pos:line="30" pos:column="59"/></name><index pos:line="30" pos:column="59">[<expr><literal type="number" pos:line="30" pos:column="60">1<pos:position pos:line="30" pos:column="61"/></literal></expr>]<pos:position pos:line="30" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></switch>
  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">( <expr><operator pos:line="32" pos:column="7">!<pos:position pos:line="32" pos:column="8"/></operator><name pos:line="32" pos:column="8">zEllipsis<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">||<pos:position pos:line="32" pos:column="20"/></operator> <operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">zEnd<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">||<pos:position pos:line="32" pos:column="29"/></operator> <operator pos:line="32" pos:column="30">!<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">zStart<pos:position pos:line="32" pos:column="37"/></name></expr> )<pos:position pos:line="32" pos:column="39"/></condition><then><block pos:line="32" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">sqlite3_result_error_nomem<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">pContext<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></then><elseif pos:line="34" pos:column="4">else <if pos:line="34" pos:column="9">if<condition pos:line="34" pos:column="11">( <expr><name pos:line="34" pos:column="13">nToken<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">==<pos:position pos:line="34" pos:column="21"/></operator><literal type="number" pos:line="34" pos:column="21">0<pos:position pos:line="34" pos:column="22"/></literal></expr> )<pos:position pos:line="34" pos:column="24"/></condition><then><block pos:line="34" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">sqlite3_result_text<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">pContext<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="35">""<pos:position pos:line="35" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="39">-<pos:position pos:line="35" pos:column="40"/></operator><literal type="number" pos:line="35" pos:column="40">1<pos:position pos:line="35" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">SQLITE_STATIC<pos:position pos:line="35" pos:column="56"/></name></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="58"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if></elseif><elseif pos:line="36" pos:column="4">else <if pos:line="36" pos:column="9">if<condition pos:line="36" pos:column="11">( <expr><name pos:line="36" pos:column="13">SQLITE_OK<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">==<pos:position pos:line="36" pos:column="24"/></operator><call><name pos:line="36" pos:column="24">fts3CursorSeek<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">pContext<pos:position pos:line="36" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="49">pCsr<pos:position pos:line="36" pos:column="53"/></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr> )<pos:position pos:line="36" pos:column="56"/></condition><then><block pos:line="36" pos:column="56">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">sqlite3Fts3Snippet<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">pContext<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">pCsr<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">zStart<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">zEnd<pos:position pos:line="37" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">zEllipsis<pos:position pos:line="37" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="65">iCol<pos:position pos:line="37" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="71">nToken<pos:position pos:line="37" pos:column="77"/></name></expr></argument>)<pos:position pos:line="37" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="79"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if></elseif></if>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>
